<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201115 22:11:28.689" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201115 22:11:29.255" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201115 22:11:29.264" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201115 22:11:30.345" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201115 22:11:29.254" endtime="20201115 22:11:30.345"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201115 22:11:30.348" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201115 22:11:30.346" endtime="20201115 22:11:30.349"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:29.253" endtime="20201115 22:11:30.349"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:30.351" endtime="20201115 22:11:30.537"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:30.350" endtime="20201115 22:11:30.537"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:30.550" endtime="20201115 22:11:30.571"></status>
</kw>
<msg timestamp="20201115 22:11:30.571" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['): This is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:30.549" endtime="20201115 22:11:30.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:30.574" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['): This is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:30.572" endtime="20201115 22:11:30.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:11:30.577" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:11:30.575" endtime="20201115 22:11:30.578"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:30.546" endtime="20201115 22:11:30.578"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:30.544" endtime="20201115 22:11:30.579"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:30.543" endtime="20201115 22:11:30.579"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:11:30.583" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:11:30.582" endtime="20201115 22:11:30.583"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:30.580" endtime="20201115 22:11:30.584"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:30.542" endtime="20201115 22:11:30.584"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:30.541" endtime="20201115 22:11:30.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:30.585" endtime="20201115 22:11:30.586"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:30.540" endtime="20201115 22:11:30.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:30.588" endtime="20201115 22:11:30.589"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:30.538" endtime="20201115 22:11:30.590"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:29.251" endtime="20201115 22:11:30.590"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:30.597" endtime="20201115 22:11:30.616"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:30.595" endtime="20201115 22:11:30.617"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:30.632" endtime="20201115 22:11:30.648"></status>
</kw>
<msg timestamp="20201115 22:11:30.648" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:30.630" endtime="20201115 22:11:30.649"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:30.651" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:30.649" endtime="20201115 22:11:30.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:11:30.654" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:11:30.652" endtime="20201115 22:11:30.654"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:30.626" endtime="20201115 22:11:30.655"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:30.624" endtime="20201115 22:11:30.655"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:30.622" endtime="20201115 22:11:30.656"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:11:30.659" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:11:30.659" endtime="20201115 22:11:30.660"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:30.657" endtime="20201115 22:11:30.660"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:30.621" endtime="20201115 22:11:30.660"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:30.621" endtime="20201115 22:11:30.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:30.661" endtime="20201115 22:11:30.663"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:30.619" endtime="20201115 22:11:30.663"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:30.618" endtime="20201115 22:11:30.664"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:30.594" endtime="20201115 22:11:30.664"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:30.671" endtime="20201115 22:11:30.687"></status>
</kw>
<msg timestamp="20201115 22:11:30.687" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:30.670" endtime="20201115 22:11:30.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:30.690" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:30.688" endtime="20201115 22:11:30.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:30.691" endtime="20201115 22:11:30.692"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:30.667" endtime="20201115 22:11:30.693"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:30.665" endtime="20201115 22:11:30.693"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:30.698" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201115 22:11:30.697" endtime="20201115 22:11:30.698"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:30.700" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201115 22:11:30.699" endtime="20201115 22:11:30.700"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:30.694" endtime="20201115 22:11:30.701"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:11:30.591" endtime="20201115 22:11:30.702" critical="yes"></status>
</test>
<status status="PASS" starttime="20201115 22:11:28.803" endtime="20201115 22:11:30.705"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201115 22:11:30.760" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201115 22:11:30.768" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201115 22:11:31.916" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201115 22:11:30.759" endtime="20201115 22:11:31.917"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201115 22:11:31.919" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201115 22:11:31.918" endtime="20201115 22:11:31.920"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:30.757" endtime="20201115 22:11:31.920"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:31.922" endtime="20201115 22:11:32.144"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:31.921" endtime="20201115 22:11:32.144"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:32.158" endtime="20201115 22:11:32.176"></status>
</kw>
<msg timestamp="20201115 22:11:32.177" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['IOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:32.156" endtime="20201115 22:11:32.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:32.180" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['IOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:32.178" endtime="20201115 22:11:32.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:11:32.183" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:11:32.181" endtime="20201115 22:11:32.183"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:32.153" endtime="20201115 22:11:32.184"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:32.151" endtime="20201115 22:11:32.184"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.150" endtime="20201115 22:11:32.184"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:11:32.188" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:11:32.187" endtime="20201115 22:11:32.189"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.185" endtime="20201115 22:11:32.189"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.149" endtime="20201115 22:11:32.189"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.148" endtime="20201115 22:11:32.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:32.190" endtime="20201115 22:11:32.191"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.147" endtime="20201115 22:11:32.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:32.193" endtime="20201115 22:11:32.194"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.145" endtime="20201115 22:11:32.195"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:30.756" endtime="20201115 22:11:32.195"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO/">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:32.202" endtime="20201115 22:11:32.222"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.200" endtime="20201115 22:11:32.222"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:32.235" endtime="20201115 22:11:32.251"></status>
</kw>
<msg timestamp="20201115 22:11:32.252" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:32.233" endtime="20201115 22:11:32.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:32.254" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:32.253" endtime="20201115 22:11:32.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:11:32.257" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:11:32.255" endtime="20201115 22:11:32.257"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:32.231" endtime="20201115 22:11:32.258"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:32.229" endtime="20201115 22:11:32.259"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.227" endtime="20201115 22:11:32.259"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:11:32.262" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:11:32.262" endtime="20201115 22:11:32.263"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.260" endtime="20201115 22:11:32.263"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.226" endtime="20201115 22:11:32.263"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.226" endtime="20201115 22:11:32.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:32.264" endtime="20201115 22:11:32.266"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.224" endtime="20201115 22:11:32.266"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.223" endtime="20201115 22:11:32.267"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.198" endtime="20201115 22:11:32.267"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure GPIO Overhead</arg>
</arguments>
<msg timestamp="20201115 22:11:32.269" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:32.278" endtime="20201115 22:11:32.295"></status>
</kw>
<msg timestamp="20201115 22:11:32.295" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:32.276" endtime="20201115 22:11:32.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:32.298" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:32.296" endtime="20201115 22:11:32.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:32.299" endtime="20201115 22:11:32.301"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.273" endtime="20201115 22:11:32.301"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.271" endtime="20201115 22:11:32.301"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:32.308" endtime="20201115 22:11:32.608"></status>
</kw>
<msg timestamp="20201115 22:11:32.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068988222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068988764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:32.306" endtime="20201115 22:11:32.611"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:32.619" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068988222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068988764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:32.612" endtime="20201115 22:11:32.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:32.620" endtime="20201115 22:11:32.622"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.304" endtime="20201115 22:11:32.623"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.302" endtime="20201115 22:11:32.623"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:32.627" level="INFO">${RESULT} = [{'time': 0.068988764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999922709e-07, 'source_diff': 5.419999999922709e-07}, {'time': 0.068998208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:32.624" endtime="20201115 22:11:32.628"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:32.642" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.419999999922709e-07, 4.86000000007869e-07, 5.409999999927972e-07, 4.720000000013602e-07, 4.859999999939912e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.41000000006675e-07, 4.870000...</msg>
<status status="PASS" starttime="20201115 22:11:32.629" endtime="20201115 22:11:32.642"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:32.646" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201115 22:11:32.645" endtime="20201115 22:11:32.646"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:32.649" level="INFO">VALUE: [5.419999999922709e-07, 4.86000000007869e-07, 5.409999999927972e-07, 4.720000000013602e-07, 4.859999999939912e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.41000000006675e-07, 4.870000000073427e-07, 5.419999999922709e-07, 4.86000000007869e-07, 5.420000000061487e-07, 4.86000000007869e-07, 4.859999999939912e-07, 5.419999999922709e-07, 5.41000000006675e-07, 5.41000000006675e-07, 4.859999999939912e-07, 5.409999999927972e-07, 5.420000000061487e-07, 5.420000000061487e-07, 4.86000000007869e-07, 5.419999999922709e-07, 5.41000000006675e-07, 5.419999999922709e-07, 5.420000000061487e-07, 5.420000000061487e-07, 5.419999999922709e-07, 4.859999999939912e-07, 5.409999999927972e-07, 4.870000000073427e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999939912e-07, 5.409999999927972e-07, 5.41000000006675e-07, 4.720000000013602e-07, 5.409999999927972e-07, 4.859999999939912e-07, 4.859999999939912e-07, 4.86000000007869e-07, 5.420000000061487e-07, 4.720000000013602e-07, 5.420000000061487e-07, 5.41000000006675e-07, 5.409999999927972e-07, 5.420000000061487e-07, 5.420000000061487e-07]</msg>
<status status="PASS" starttime="20201115 22:11:32.647" endtime="20201115 22:11:32.649"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.643" endtime="20201115 22:11:32.650"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:32.652" endtime="20201115 22:11:32.653"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:32.656" endtime="20201115 22:11:32.675"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.654" endtime="20201115 22:11:32.676"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.650" endtime="20201115 22:11:32.676"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.270" endtime="20201115 22:11:32.676"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.268" endtime="20201115 22:11:32.677"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:32.681" endtime="20201115 22:11:32.701"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.680" endtime="20201115 22:11:32.701"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.678" endtime="20201115 22:11:32.702"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:11:32.195" endtime="20201115 22:11:32.702" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:32.710" endtime="20201115 22:11:32.730"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.709" endtime="20201115 22:11:32.730"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:32.745" endtime="20201115 22:11:32.764"></status>
</kw>
<msg timestamp="20201115 22:11:32.765" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:32.743" endtime="20201115 22:11:32.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:32.768" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:32.766" endtime="20201115 22:11:32.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:11:32.771" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:11:32.769" endtime="20201115 22:11:32.771"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:32.740" endtime="20201115 22:11:32.772"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:32.738" endtime="20201115 22:11:32.772"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.737" endtime="20201115 22:11:32.773"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:11:32.777" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:11:32.776" endtime="20201115 22:11:32.777"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.774" endtime="20201115 22:11:32.778"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.736" endtime="20201115 22:11:32.778"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.734" endtime="20201115 22:11:32.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:32.779" endtime="20201115 22:11:32.780"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.733" endtime="20201115 22:11:32.781"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.731" endtime="20201115 22:11:32.781"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.707" endtime="20201115 22:11:32.782"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer Now Overhead</arg>
</arguments>
<msg timestamp="20201115 22:11:32.784" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:32.792" endtime="20201115 22:11:32.808"></status>
</kw>
<msg timestamp="20201115 22:11:32.809" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:32.791" endtime="20201115 22:11:32.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:32.811" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:32.810" endtime="20201115 22:11:32.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:32.813" endtime="20201115 22:11:32.814"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.788" endtime="20201115 22:11:32.815"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.786" endtime="20201115 22:11:32.815"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:32.823" endtime="20201115 22:11:33.110"></status>
</kw>
<msg timestamp="20201115 22:11:33.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073840444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.073844903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:32.821" endtime="20201115 22:11:33.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:33.122" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073840444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.073844903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:33.114" endtime="20201115 22:11:33.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:33.123" endtime="20201115 22:11:33.125"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.818" endtime="20201115 22:11:33.125"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.816" endtime="20201115 22:11:33.126"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:33.130" level="INFO">${RESULT} = [{'time': 0.073844903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.458999999998325e-06, 'source_diff': 4.458999999998325e-06}, {'time': 0.073858097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:33.126" endtime="20201115 22:11:33.130"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:33.143" level="INFO">${OVERHEAD} = {'diff': [4.458999999998325e-06, 4.415999999993203e-06, 4.5000000000045e-06, 4.485999999997992e-06, 4.471999999991483e-06, 4.5000000000045e-06, 4.457999999998852e-06, 4.499999999990623e-06, 4.50000000...</msg>
<status status="PASS" starttime="20201115 22:11:33.131" endtime="20201115 22:11:33.144"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:33.148" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201115 22:11:33.147" endtime="20201115 22:11:33.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:33.151" level="INFO">VALUE: [4.458999999998325e-06, 4.415999999993203e-06, 4.5000000000045e-06, 4.485999999997992e-06, 4.471999999991483e-06, 4.5000000000045e-06, 4.457999999998852e-06, 4.499999999990623e-06, 4.5000000000045e-06, 4.486000000011869e-06, 4.5000000000045e-06, 4.5000000000045e-06, 4.457999999998852e-06, 4.485999999997992e-06, 4.444000000006221e-06, 4.430999999999186e-06, 4.457999999998852e-06, 4.457999999998852e-06, 4.485999999997992e-06, 4.458999999998325e-06, 4.485999999997992e-06, 4.445000000005694e-06, 4.499999999990623e-06, 4.486999999997465e-06, 4.473000000004834e-06, 4.445000000005694e-06, 4.499999999990623e-06, 4.4720000000053606e-06, 4.457999999998852e-06, 4.444000000006221e-06, 4.458999999998325e-06, 4.485999999997992e-06, 4.485999999997992e-06, 4.540999999996798e-06, 4.4720000000053606e-06, 4.513999999997131e-06, 4.471999999991483e-06, 4.471999999991483e-06, 4.4720000000053606e-06, 4.499999999990623e-06, 4.499999999990623e-06, 4.485999999997992e-06, 4.499999999990623e-06, 4.527000000004167e-06, 4.471999999991483e-06, 4.5000000000045e-06, 4.458999999998325e-06, 4.485999999997992e-06, 4.485999999997992e-06, 4.445000000005694e-06]</msg>
<status status="PASS" starttime="20201115 22:11:33.149" endtime="20201115 22:11:33.151"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.144" endtime="20201115 22:11:33.152"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:33.154" endtime="20201115 22:11:33.156"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:33.158" endtime="20201115 22:11:33.178"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.156" endtime="20201115 22:11:33.178"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.153" endtime="20201115 22:11:33.179"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.785" endtime="20201115 22:11:33.179"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.783" endtime="20201115 22:11:33.179"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:33.184" endtime="20201115 22:11:33.204"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.182" endtime="20201115 22:11:33.204"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.181" endtime="20201115 22:11:33.204"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:11:32.704" endtime="20201115 22:11:33.205" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set List">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:33.213" endtime="20201115 22:11:33.232"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.211" endtime="20201115 22:11:33.233"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:33.247" endtime="20201115 22:11:33.266"></status>
</kw>
<msg timestamp="20201115 22:11:33.266" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:33.246" endtime="20201115 22:11:33.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:33.269" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:33.267" endtime="20201115 22:11:33.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:11:33.272" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:11:33.270" endtime="20201115 22:11:33.272"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:33.242" endtime="20201115 22:11:33.273"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:33.240" endtime="20201115 22:11:33.274"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.238" endtime="20201115 22:11:33.274"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:11:33.278" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:11:33.277" endtime="20201115 22:11:33.278"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.275" endtime="20201115 22:11:33.278"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.238" endtime="20201115 22:11:33.279"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.237" endtime="20201115 22:11:33.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:33.280" endtime="20201115 22:11:33.281"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.235" endtime="20201115 22:11:33.282"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.234" endtime="20201115 22:11:33.283"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.210" endtime="20201115 22:11:33.283"></status>
</kw>
<kw name="${n} IN RANGE [ 25 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:33.286" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:33.296" endtime="20201115 22:11:33.315"></status>
</kw>
<msg timestamp="20201115 22:11:33.315" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:33.294" endtime="20201115 22:11:33.315"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:33.318" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:33.316" endtime="20201115 22:11:33.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:33.319" endtime="20201115 22:11:33.321"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.291" endtime="20201115 22:11:33.321"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.289" endtime="20201115 22:11:33.322"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:33.328" endtime="20201115 22:11:33.616"></status>
</kw>
<msg timestamp="20201115 22:11:33.620" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.074331597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.074340403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:33.327" endtime="20201115 22:11:33.620"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:33.628" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.074331597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.074340403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:33.621" endtime="20201115 22:11:33.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:33.629" endtime="20201115 22:11:33.631"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.324" endtime="20201115 22:11:33.632"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.322" endtime="20201115 22:11:33.632"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:33.636" level="INFO">${RESULT} = [{'time': 0.074340403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.806000000000092e-06, 'source_diff': 8.806000000000092e-06}, {'time': 0.074428167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:33.633" endtime="20201115 22:11:33.636"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:33.650" level="INFO">${OVERHEAD} = {'diff': [8.806000000000092e-06, 8.860999999998898e-06, 8.791999999993583e-06, 8.806000000000092e-06, 8.805000000000618e-06, 8.806000000000092e-06, 8.819999999992723e-06, 8.805000000000618e-06, 8.8189...</msg>
<status status="PASS" starttime="20201115 22:11:33.637" endtime="20201115 22:11:33.650"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:33.655" level="INFO">NAME: 00-overhead-1-set</msg>
<status status="PASS" starttime="20201115 22:11:33.653" endtime="20201115 22:11:33.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:33.657" level="INFO">VALUE: [8.806000000000092e-06, 8.860999999998898e-06, 8.791999999993583e-06, 8.806000000000092e-06, 8.805000000000618e-06, 8.806000000000092e-06, 8.819999999992723e-06, 8.805000000000618e-06, 8.818999999993249e-06, 8.818999999993249e-06, 8.818999999993249e-06, 8.805000000000618e-06, 8.806000000000092e-06, 8.777999999987074e-06, 8.805000000000618e-06, 8.805000000000618e-06, 8.806000000000092e-06, 8.805000000000618e-06, 8.790999999994109e-06, 8.860999999998898e-06, 8.791999999993583e-06, 8.791000000007987e-06, 8.819999999992723e-06, 8.790999999994109e-06, 8.805000000000618e-06, 8.790999999994109e-06, 8.806000000000092e-06, 8.860999999998898e-06, 8.805000000000618e-06, 8.819999999992723e-06, 8.805000000000618e-06, 8.819000000007127e-06, 8.805000000000618e-06, 8.79200000000746e-06, 8.790999999994109e-06, 8.818999999993249e-06, 8.791999999993583e-06, 8.806000000000092e-06, 8.833999999999231e-06, 8.805000000000618e-06, 8.791999999993583e-06, 8.805000000000618e-06, 8.79200000000746e-06, 8.832999999999758e-06, 8.806000000000092e-06, 8.806000000000092e-06, 8.819999999992723e-06, 8.791999999993583e-06, 8.736000000009181e-06, 8.791999999993583e-06]</msg>
<status status="PASS" starttime="20201115 22:11:33.656" endtime="20201115 22:11:33.658"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.651" endtime="20201115 22:11:33.659"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:33.661" endtime="20201115 22:11:33.662"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:33.664" endtime="20201115 22:11:33.684"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.663" endtime="20201115 22:11:33.684"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.659" endtime="20201115 22:11:33.685"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.287" endtime="20201115 22:11:33.685"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.285" endtime="20201115 22:11:33.685"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.284" endtime="20201115 22:11:33.686"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:33.688" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:33.697" endtime="20201115 22:11:33.712"></status>
</kw>
<msg timestamp="20201115 22:11:33.712" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:33.695" endtime="20201115 22:11:33.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:33.715" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:33.713" endtime="20201115 22:11:33.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:33.716" endtime="20201115 22:11:33.718"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.693" endtime="20201115 22:11:33.718"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.691" endtime="20201115 22:11:33.719"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:33.725" endtime="20201115 22:11:34.012"></status>
</kw>
<msg timestamp="20201115 22:11:34.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024718694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024727361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:33.724" endtime="20201115 22:11:34.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:34.024" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024718694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024727361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:34.016" endtime="20201115 22:11:34.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:34.025" endtime="20201115 22:11:34.027"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.721" endtime="20201115 22:11:34.027"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.719" endtime="20201115 22:11:34.028"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:34.032" level="INFO">${RESULT} = [{'time': 0.024727361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.667000000000397e-06, 'source_diff': 8.667000000000397e-06}, {'time': 0.024822653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:34.028" endtime="20201115 22:11:34.032"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:34.045" level="INFO">${OVERHEAD} = {'diff': [8.667000000000397e-06, 8.667000000000397e-06, 8.667000000000397e-06, 8.680999999999967e-06, 8.653000000000827e-06, 8.694999999999536e-06, 8.639000000001257e-06, 8.665999999997454e-06, 8.6670...</msg>
<status status="PASS" starttime="20201115 22:11:34.033" endtime="20201115 22:11:34.046"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:34.050" level="INFO">NAME: 00-overhead-2-set</msg>
<status status="PASS" starttime="20201115 22:11:34.049" endtime="20201115 22:11:34.051"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:34.053" level="INFO">VALUE: [8.667000000000397e-06, 8.667000000000397e-06, 8.667000000000397e-06, 8.680999999999967e-06, 8.653000000000827e-06, 8.694999999999536e-06, 8.639000000001257e-06, 8.665999999997454e-06, 8.667000000000397e-06, 8.610999999998648e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.736000000002242e-06, 8.667000000000397e-06, 8.639000000001257e-06, 8.680000000000493e-06, 8.708999999999106e-06, 8.666000000000923e-06, 8.667000000000397e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.639000000001257e-06, 8.667000000000397e-06, 8.639000000001257e-06, 8.667000000000397e-06, 8.763999999997912e-06, 8.667000000000397e-06, 8.667000000000397e-06, 8.680000000000493e-06, 8.680999999999967e-06, 8.651999999997884e-06, 8.624999999998217e-06, 8.680999999999967e-06, 8.709000000002576e-06, 8.680999999999967e-06, 8.679999999997023e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.736000000002242e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.707999999999633e-06, 8.666000000000923e-06, 8.694000000000063e-06, 8.666000000000923e-06, 8.680000000000493e-06, 8.708999999999106e-06, 8.653000000000827e-06, 8.667000000000397e-06, 8.680999999999967e-06]</msg>
<status status="PASS" starttime="20201115 22:11:34.051" endtime="20201115 22:11:34.054"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.046" endtime="20201115 22:11:34.054"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:34.057" endtime="20201115 22:11:34.058"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:34.060" endtime="20201115 22:11:34.080"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.059" endtime="20201115 22:11:34.080"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.055" endtime="20201115 22:11:34.081"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.688" endtime="20201115 22:11:34.081"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.687" endtime="20201115 22:11:34.081"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.686" endtime="20201115 22:11:34.081"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:34.084" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:34.093" endtime="20201115 22:11:34.110"></status>
</kw>
<msg timestamp="20201115 22:11:34.110" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:34.091" endtime="20201115 22:11:34.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:34.112" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:34.111" endtime="20201115 22:11:34.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:34.114" endtime="20201115 22:11:34.115"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.089" endtime="20201115 22:11:34.116"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.086" endtime="20201115 22:11:34.116"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:34.123" endtime="20201115 22:11:34.411"></status>
</kw>
<msg timestamp="20201115 22:11:34.415" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025815236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025824778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:34.121" endtime="20201115 22:11:34.415"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:34.423" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025815236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025824778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:34.416" endtime="20201115 22:11:34.423"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:34.424" endtime="20201115 22:11:34.426"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.119" endtime="20201115 22:11:34.426"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.117" endtime="20201115 22:11:34.427"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:34.431" level="INFO">${RESULT} = [{'time': 0.025824778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.542000000001272e-06, 'source_diff': 9.542000000001272e-06}, {'time': 0.025927736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:34.428" endtime="20201115 22:11:34.431"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:34.445" level="INFO">${OVERHEAD} = {'diff': [9.542000000001272e-06, 9.555000000001368e-06, 9.528000000001702e-06, 9.527999999998232e-06, 9.471999999999953e-06, 9.541999999997802e-06, 9.528000000001702e-06, 9.556000000000842e-06, 9.4859...</msg>
<status status="PASS" starttime="20201115 22:11:34.433" endtime="20201115 22:11:34.446"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:34.450" level="INFO">NAME: 00-overhead-3-set</msg>
<status status="PASS" starttime="20201115 22:11:34.449" endtime="20201115 22:11:34.450"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:34.453" level="INFO">VALUE: [9.542000000001272e-06, 9.555000000001368e-06, 9.528000000001702e-06, 9.527999999998232e-06, 9.471999999999953e-06, 9.541999999997802e-06, 9.528000000001702e-06, 9.556000000000842e-06, 9.485999999999523e-06, 9.527999999998232e-06, 9.513999999998662e-06, 9.527999999998232e-06, 9.542000000001272e-06, 9.485999999999523e-06, 9.556000000000842e-06, 9.527999999998232e-06, 9.569000000000938e-06, 9.514000000002132e-06, 9.527999999998232e-06, 9.527999999998232e-06, 9.527999999998232e-06, 9.527999999998232e-06, 9.570000000000412e-06, 9.513999999998662e-06, 9.527999999998232e-06, 9.542000000001272e-06, 9.570000000000412e-06, 9.527999999998232e-06, 9.542000000001272e-06, 9.499999999999093e-06, 9.556000000000842e-06, 9.500000000002562e-06, 9.556000000000842e-06, 9.499999999999093e-06, 9.528000000001702e-06, 9.513999999998662e-06, 9.513999999998662e-06, 9.542000000001272e-06, 9.541999999997802e-06, 9.540999999998329e-06, 9.513999999998662e-06, 9.527999999998232e-06, 9.541000000001798e-06, 9.527999999998232e-06, 9.528000000001702e-06, 9.541999999997802e-06, 9.556000000000842e-06, 9.528000000001702e-06, 9.499999999999093e-06, 9.555999999997372e-06]</msg>
<status status="PASS" starttime="20201115 22:11:34.451" endtime="20201115 22:11:34.453"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.446" endtime="20201115 22:11:34.454"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:34.456" endtime="20201115 22:11:34.457"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:34.460" endtime="20201115 22:11:34.479"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.458" endtime="20201115 22:11:34.480"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.454" endtime="20201115 22:11:34.480"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.084" endtime="20201115 22:11:34.480"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.083" endtime="20201115 22:11:34.481"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.082" endtime="20201115 22:11:34.481"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:34.483" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:34.492" endtime="20201115 22:11:34.510"></status>
</kw>
<msg timestamp="20201115 22:11:34.511" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:34.491" endtime="20201115 22:11:34.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:34.513" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:34.512" endtime="20201115 22:11:34.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:34.514" endtime="20201115 22:11:34.516"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.488" endtime="20201115 22:11:34.517"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.486" endtime="20201115 22:11:34.517"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:34.524" endtime="20201115 22:11:34.811"></status>
</kw>
<msg timestamp="20201115 22:11:34.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023267583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023277917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:34.522" endtime="20201115 22:11:34.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:34.822" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023267583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023277917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:34.815" endtime="20201115 22:11:34.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:34.824" endtime="20201115 22:11:34.825"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.520" endtime="20201115 22:11:34.826"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.518" endtime="20201115 22:11:34.826"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:34.831" level="INFO">${RESULT} = [{'time': 0.023277917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0333999999997262e-05, 'source_diff': 1.0333999999997262e-05}, {'time': 0.023390583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:34.827" endtime="20201115 22:11:34.831"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:34.844" level="INFO">${OVERHEAD} = {'diff': [1.0333999999997262e-05, 1.0401999999999634e-05, 1.0430999999998247e-05, 1.0361000000000398e-05, 1.0375000000003437e-05, 1.0361000000000398e-05, 1.0430000000002243e-05, 1.0374999999999968e-05...</msg>
<status status="PASS" starttime="20201115 22:11:34.832" endtime="20201115 22:11:34.845"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:34.849" level="INFO">NAME: 00-overhead-4-set</msg>
<status status="PASS" starttime="20201115 22:11:34.848" endtime="20201115 22:11:34.850"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:34.852" level="INFO">VALUE: [1.0333999999997262e-05, 1.0401999999999634e-05, 1.0430999999998247e-05, 1.0361000000000398e-05, 1.0375000000003437e-05, 1.0361000000000398e-05, 1.0430000000002243e-05, 1.0374999999999968e-05, 1.0361000000000398e-05, 1.0348000000000301e-05, 1.0332999999997788e-05, 1.0472000000000953e-05, 1.0374999999999968e-05, 1.0374999999999968e-05, 1.0429999999998774e-05, 1.0346999999997358e-05, 1.0403000000002577e-05, 1.0402999999999107e-05, 1.0374999999999968e-05, 1.0415999999999204e-05, 1.0388999999999537e-05, 1.0374999999999968e-05, 1.0401999999999634e-05, 1.0348000000000301e-05, 1.0402999999999107e-05, 1.0333000000001258e-05, 1.0388999999999537e-05, 1.0388999999999537e-05, 1.0401999999999634e-05, 1.0402999999999107e-05, 1.0304999999998649e-05, 1.0402999999999107e-05, 1.0347000000000828e-05, 1.0388999999999537e-05, 1.0388999999999537e-05, 1.0388999999999537e-05, 1.0361000000000398e-05, 1.0361000000000398e-05, 1.0374999999999968e-05, 1.0347000000000828e-05, 1.0374999999999968e-05, 1.0402999999999107e-05, 1.0389000000003007e-05, 1.0374999999999968e-05, 1.0361000000000398e-05, 1.0388999999999537e-05, 1.0388999999999537e-05, 1.0361000000000398e-05, 1.0403000000002577e-05, 1.0361000000000398e-05]</msg>
<status status="PASS" starttime="20201115 22:11:34.850" endtime="20201115 22:11:34.852"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.845" endtime="20201115 22:11:34.853"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:34.855" endtime="20201115 22:11:34.856"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:34.859" endtime="20201115 22:11:34.878"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.857" endtime="20201115 22:11:34.879"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.853" endtime="20201115 22:11:34.879"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.484" endtime="20201115 22:11:34.879"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.482" endtime="20201115 22:11:34.880"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.481" endtime="20201115 22:11:34.880"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:34.882" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:34.891" endtime="20201115 22:11:34.912"></status>
</kw>
<msg timestamp="20201115 22:11:34.913" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:34.890" endtime="20201115 22:11:34.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:34.915" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:34.914" endtime="20201115 22:11:34.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:34.916" endtime="20201115 22:11:34.918"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.887" endtime="20201115 22:11:34.919"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.885" endtime="20201115 22:11:34.919"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:34.926" endtime="20201115 22:11:35.215"></status>
</kw>
<msg timestamp="20201115 22:11:35.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026153375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026164639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:34.925" endtime="20201115 22:11:35.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:35.226" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026153375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026164639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:35.219" endtime="20201115 22:11:35.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:35.227" endtime="20201115 22:11:35.229"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.922" endtime="20201115 22:11:35.230"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.920" endtime="20201115 22:11:35.230"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:35.234" level="INFO">${RESULT} = [{'time': 0.026164639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1264000000000413e-05, 'source_diff': 1.1264000000000413e-05}, {'time': 0.026294194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:35.231" endtime="20201115 22:11:35.235"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:35.248" level="INFO">${OVERHEAD} = {'diff': [1.1264000000000413e-05, 1.1236000000001273e-05, 1.1235999999997803e-05, 1.1235999999997803e-05, 1.1250000000000843e-05, 1.1235999999997803e-05, 1.1264000000000413e-05, 1.1207999999998663e-05...</msg>
<status status="PASS" starttime="20201115 22:11:35.235" endtime="20201115 22:11:35.248"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:35.253" level="INFO">NAME: 00-overhead-5-set</msg>
<status status="PASS" starttime="20201115 22:11:35.252" endtime="20201115 22:11:35.253"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:35.255" level="INFO">VALUE: [1.1264000000000413e-05, 1.1236000000001273e-05, 1.1235999999997803e-05, 1.1235999999997803e-05, 1.1250000000000843e-05, 1.1235999999997803e-05, 1.1264000000000413e-05, 1.1207999999998663e-05, 1.1194999999998567e-05, 1.1221999999998233e-05, 1.1207999999998663e-05, 1.1250000000000843e-05, 1.1250000000000843e-05, 1.1250000000000843e-05, 1.1291999999999552e-05, 1.1207999999998663e-05, 1.1208000000002133e-05, 1.1277999999999982e-05, 1.1221999999998233e-05, 1.1250000000000843e-05, 1.1221999999998233e-05, 1.1277999999999982e-05, 1.1222000000001703e-05, 1.1250000000000843e-05, 1.1209000000001607e-05, 1.1291999999999552e-05, 1.1236000000001273e-05, 1.1223000000001176e-05, 1.1235999999997803e-05, 1.1180999999998997e-05, 1.1237000000000746e-05, 1.1235999999997803e-05, 1.1209000000001607e-05, 1.1236000000001273e-05, 1.1236000000001273e-05, 1.1264000000000413e-05, 1.1264000000000413e-05, 1.1264000000000413e-05, 1.1221999999998233e-05, 1.1250000000000843e-05, 1.1264000000000413e-05, 1.1236000000004742e-05, 1.1250000000004312e-05, 1.1221999999998233e-05, 1.1221999999998233e-05, 1.1235999999997803e-05, 1.1222000000005172e-05, 1.1249999999997373e-05, 1.1249999999997373e-05, 1.1263999999996943e-05]</msg>
<status status="PASS" starttime="20201115 22:11:35.254" endtime="20201115 22:11:35.256"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.249" endtime="20201115 22:11:35.256"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:35.259" endtime="20201115 22:11:35.260"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:35.262" endtime="20201115 22:11:35.282"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.261" endtime="20201115 22:11:35.282"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.257" endtime="20201115 22:11:35.283"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.883" endtime="20201115 22:11:35.283"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.881" endtime="20201115 22:11:35.283"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.880" endtime="20201115 22:11:35.283"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:35.286" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:35.295" endtime="20201115 22:11:35.314"></status>
</kw>
<msg timestamp="20201115 22:11:35.315" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:35.293" endtime="20201115 22:11:35.315"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:35.318" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:35.316" endtime="20201115 22:11:35.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:35.319" endtime="20201115 22:11:35.321"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.291" endtime="20201115 22:11:35.321"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.288" endtime="20201115 22:11:35.322"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:35.328" endtime="20201115 22:11:35.615"></status>
</kw>
<msg timestamp="20201115 22:11:35.619" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024496153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024508222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:35.327" endtime="20201115 22:11:35.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:35.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024496153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024508222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:35.620" endtime="20201115 22:11:35.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:35.628" endtime="20201115 22:11:35.630"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.324" endtime="20201115 22:11:35.630"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.322" endtime="20201115 22:11:35.631"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:35.635" level="INFO">${RESULT} = [{'time': 0.024508222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2068999999999969e-05, 'source_diff': 1.2068999999999969e-05}, {'time': 0.024645861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:35.631" endtime="20201115 22:11:35.635"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:35.649" level="INFO">${OVERHEAD} = {'diff': [1.2068999999999969e-05, 1.2111000000002148e-05, 1.204099999999736e-05, 1.2083999999999012e-05, 1.2083000000003008e-05, 1.2111000000002148e-05, 1.2151999999997914e-05, 1.2083999999999012e-05,...</msg>
<status status="PASS" starttime="20201115 22:11:35.636" endtime="20201115 22:11:35.649"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:35.653" level="INFO">NAME: 00-overhead-6-set</msg>
<status status="PASS" starttime="20201115 22:11:35.652" endtime="20201115 22:11:35.654"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:35.656" level="INFO">VALUE: [1.2068999999999969e-05, 1.2111000000002148e-05, 1.204099999999736e-05, 1.2083999999999012e-05, 1.2083000000003008e-05, 1.2111000000002148e-05, 1.2151999999997914e-05, 1.2083999999999012e-05, 1.2055000000000399e-05, 1.2110999999998678e-05, 1.2110999999998678e-05, 1.2096999999999108e-05, 1.2097999999998582e-05, 1.2096999999999108e-05, 1.2111000000002148e-05, 1.2082999999999539e-05, 1.2112000000001621e-05, 1.2084000000002482e-05, 1.204099999999736e-05, 1.2125000000001718e-05, 1.2055000000000399e-05, 1.2097000000002578e-05, 1.2083999999999012e-05, 1.2042000000000302e-05, 1.2138999999997818e-05, 1.2082999999999539e-05, 1.2111000000002148e-05, 1.2098000000002052e-05, 1.2096999999999108e-05, 1.2083999999999012e-05, 1.2111999999998152e-05, 1.2068999999999969e-05, 1.2096999999999108e-05, 1.2138999999997818e-05, 1.2069999999999442e-05, 1.2082999999999539e-05, 1.2096999999999108e-05, 1.2096999999999108e-05, 1.2069999999999442e-05, 1.2041000000000829e-05, 1.2125000000001718e-05, 1.2068999999999969e-05, 1.2096999999999108e-05, 1.2082999999999539e-05, 1.2083999999999012e-05, 1.2096999999999108e-05, 1.2096999999999108e-05, 1.2082999999999539e-05, 1.2096999999999108e-05, 1.2083000000003008e-05]</msg>
<status status="PASS" starttime="20201115 22:11:35.655" endtime="20201115 22:11:35.656"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.650" endtime="20201115 22:11:35.657"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:35.659" endtime="20201115 22:11:35.661"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:35.663" endtime="20201115 22:11:35.682"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.661" endtime="20201115 22:11:35.683"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.658" endtime="20201115 22:11:35.683"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.286" endtime="20201115 22:11:35.684"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.285" endtime="20201115 22:11:35.684"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.284" endtime="20201115 22:11:35.684"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:35.686" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:35.696" endtime="20201115 22:11:35.717"></status>
</kw>
<msg timestamp="20201115 22:11:35.718" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:35.694" endtime="20201115 22:11:35.718"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:35.720" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:35.719" endtime="20201115 22:11:35.721"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:35.721" endtime="20201115 22:11:35.723"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.692" endtime="20201115 22:11:35.724"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.689" endtime="20201115 22:11:35.724"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:35.731" endtime="20201115 22:11:36.016"></status>
</kw>
<msg timestamp="20201115 22:11:36.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025819278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025832236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:35.729" endtime="20201115 22:11:36.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:36.028" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025819278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025832236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:36.021" endtime="20201115 22:11:36.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:36.029" endtime="20201115 22:11:36.031"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.726" endtime="20201115 22:11:36.031"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.725" endtime="20201115 22:11:36.032"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:36.036" level="INFO">${RESULT} = [{'time': 0.025832236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2958000000000414e-05, 'source_diff': 1.2958000000000414e-05}, {'time': 0.025980389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:36.033" endtime="20201115 22:11:36.036"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:36.050" level="INFO">${OVERHEAD} = {'diff': [1.2958000000000414e-05, 1.2971999999999984e-05, 1.2972999999999457e-05, 1.2958000000000414e-05, 1.2916000000001704e-05, 1.2943999999997374e-05, 1.2944000000000844e-05, 1.2943999999997374e-05...</msg>
<status status="PASS" starttime="20201115 22:11:36.037" endtime="20201115 22:11:36.050"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:36.055" level="INFO">NAME: 00-overhead-7-set</msg>
<status status="PASS" starttime="20201115 22:11:36.054" endtime="20201115 22:11:36.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:36.057" level="INFO">VALUE: [1.2958000000000414e-05, 1.2971999999999984e-05, 1.2972999999999457e-05, 1.2958000000000414e-05, 1.2916000000001704e-05, 1.2943999999997374e-05, 1.2944000000000844e-05, 1.2943999999997374e-05, 1.2889000000002038e-05, 1.2860999999999428e-05, 1.2930000000001274e-05, 1.2930000000001274e-05, 1.2945000000000317e-05, 1.2931000000000747e-05, 1.2985999999999553e-05, 1.2971999999999984e-05, 1.2930000000001274e-05, 1.2930000000001274e-05, 1.2971999999999984e-05, 1.2945000000000317e-05, 1.2917000000001178e-05, 1.2958000000000414e-05, 1.2917000000001178e-05, 1.2957999999996944e-05, 1.2958999999999887e-05, 1.2945000000000317e-05, 1.2971999999999984e-05, 1.2874999999998998e-05, 1.2971999999999984e-05, 1.2931000000000747e-05, 1.2903000000001608e-05, 1.2944000000000844e-05, 1.2971999999999984e-05, 1.2916000000001704e-05, 1.2944000000000844e-05, 1.2945000000000317e-05, 1.2945000000000317e-05, 1.2945000000000317e-05, 1.2916999999994239e-05, 1.2971999999999984e-05, 1.2931000000000747e-05, 1.302699999999879e-05, 1.2971999999999984e-05, 1.2931000000000747e-05, 1.2971999999999984e-05, 1.2958999999999887e-05, 1.2971999999999984e-05, 1.2931000000000747e-05, 1.2971999999999984e-05, 1.2958000000000414e-05]</msg>
<status status="PASS" starttime="20201115 22:11:36.056" endtime="20201115 22:11:36.058"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.051" endtime="20201115 22:11:36.058"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:36.061" endtime="20201115 22:11:36.062"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:36.065" endtime="20201115 22:11:36.084"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.063" endtime="20201115 22:11:36.085"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.059" endtime="20201115 22:11:36.085"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.687" endtime="20201115 22:11:36.086"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.685" endtime="20201115 22:11:36.086"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.684" endtime="20201115 22:11:36.086"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:36.088" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:36.097" endtime="20201115 22:11:36.119"></status>
</kw>
<msg timestamp="20201115 22:11:36.119" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:36.096" endtime="20201115 22:11:36.119"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:36.122" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:36.120" endtime="20201115 22:11:36.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:36.123" endtime="20201115 22:11:36.124"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.093" endtime="20201115 22:11:36.125"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.091" endtime="20201115 22:11:36.125"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:36.132" endtime="20201115 22:11:36.419"></status>
</kw>
<msg timestamp="20201115 22:11:36.422" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025847778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025861542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:36.131" endtime="20201115 22:11:36.422"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:36.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025847778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025861542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:36.423" endtime="20201115 22:11:36.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:36.432" endtime="20201115 22:11:36.433"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.128" endtime="20201115 22:11:36.434"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.126" endtime="20201115 22:11:36.434"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:36.439" level="INFO">${RESULT} = [{'time': 0.025861542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3764000000002913e-05, 'source_diff': 1.3764000000002913e-05}, {'time': 0.026024292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:36.435" endtime="20201115 22:11:36.439"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:36.453" level="INFO">${OVERHEAD} = {'diff': [1.3764000000002913e-05, 1.3792000000002053e-05, 1.379099999999911e-05, 1.3806000000001623e-05, 1.3833000000001289e-05, 1.377699999999954e-05, 1.377699999999954e-05, 1.3791000000002579e-05, 1...</msg>
<status status="PASS" starttime="20201115 22:11:36.440" endtime="20201115 22:11:36.453"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:36.457" level="INFO">NAME: 00-overhead-8-set</msg>
<status status="PASS" starttime="20201115 22:11:36.456" endtime="20201115 22:11:36.458"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:36.460" level="INFO">VALUE: [1.3764000000002913e-05, 1.3792000000002053e-05, 1.379099999999911e-05, 1.3806000000001623e-05, 1.3833000000001289e-05, 1.377699999999954e-05, 1.377699999999954e-05, 1.3791000000002579e-05, 1.3792000000002053e-05, 1.3763999999999443e-05, 1.377699999999954e-05, 1.3791999999998583e-05, 1.3834000000000762e-05, 1.3777999999999013e-05, 1.377699999999954e-05, 1.3805000000002149e-05, 1.3792000000002053e-05, 1.3820000000001192e-05, 1.3722000000000734e-05, 1.3806000000001623e-05, 1.3778000000002483e-05, 1.3805999999998153e-05, 1.3806000000001623e-05, 1.3819999999997723e-05, 1.3777999999999013e-05, 1.3820000000001192e-05, 1.3806000000001623e-05, 1.377699999999954e-05, 1.3819999999997723e-05, 1.3777999999999013e-05, 1.3805999999998153e-05, 1.3763999999999443e-05, 1.3763999999999443e-05, 1.3749999999999873e-05, 1.3833999999997293e-05, 1.3777999999999013e-05, 1.380499999999868e-05, 1.3805999999998153e-05, 1.380499999999868e-05, 1.380499999999868e-05, 1.3805999999998153e-05, 1.380499999999868e-05, 1.3805999999998153e-05, 1.383299999999782e-05, 1.3791999999998583e-05, 1.3777999999999013e-05, 1.381899999999825e-05, 1.3805999999998153e-05, 1.3763999999999443e-05, 1.3861000000003898e-05]</msg>
<status status="PASS" starttime="20201115 22:11:36.458" endtime="20201115 22:11:36.461"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.454" endtime="20201115 22:11:36.461"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:36.464" endtime="20201115 22:11:36.465"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:36.467" endtime="20201115 22:11:36.487"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.466" endtime="20201115 22:11:36.487"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.462" endtime="20201115 22:11:36.488"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.089" endtime="20201115 22:11:36.488"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.087" endtime="20201115 22:11:36.488"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.086" endtime="20201115 22:11:36.489"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:36.491" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:36.500" endtime="20201115 22:11:36.520"></status>
</kw>
<msg timestamp="20201115 22:11:36.521" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:36.498" endtime="20201115 22:11:36.521"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:36.523" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:36.522" endtime="20201115 22:11:36.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:36.524" endtime="20201115 22:11:36.526"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.496" endtime="20201115 22:11:36.526"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.494" endtime="20201115 22:11:36.527"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:36.534" endtime="20201115 22:11:36.822"></status>
</kw>
<msg timestamp="20201115 22:11:36.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025279278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025293917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:36.532" endtime="20201115 22:11:36.826"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:36.834" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025279278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025293917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:36.827" endtime="20201115 22:11:36.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:36.835" endtime="20201115 22:11:36.837"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.529" endtime="20201115 22:11:36.837"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.528" endtime="20201115 22:11:36.838"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:36.842" level="INFO">${RESULT} = [{'time': 0.025293917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4639000000000318e-05, 'source_diff': 1.4639000000000318e-05}, {'time': 0.025475931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:36.838" endtime="20201115 22:11:36.842"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:36.856" level="INFO">${OVERHEAD} = {'diff': [1.4639000000000318e-05, 1.4625000000000749e-05, 1.4639000000000318e-05, 1.4625000000000749e-05, 1.4639000000000318e-05, 1.4707999999998694e-05, 1.4666999999999458e-05, 1.4652000000000415e-05...</msg>
<status status="PASS" starttime="20201115 22:11:36.843" endtime="20201115 22:11:36.856"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:36.860" level="INFO">NAME: 00-overhead-9-set</msg>
<status status="PASS" starttime="20201115 22:11:36.859" endtime="20201115 22:11:36.861"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:36.863" level="INFO">VALUE: [1.4639000000000318e-05, 1.4625000000000749e-05, 1.4639000000000318e-05, 1.4625000000000749e-05, 1.4639000000000318e-05, 1.4707999999998694e-05, 1.4666999999999458e-05, 1.4652000000000415e-05, 1.4651999999996945e-05, 1.461099999999771e-05, 1.4597000000001609e-05, 1.4652000000000415e-05, 1.4639000000000318e-05, 1.4639000000000318e-05, 1.4639000000000318e-05, 1.4639000000000318e-05, 1.4652999999999888e-05, 1.4639000000000318e-05, 1.4666999999999458e-05, 1.4625000000000749e-05, 1.4652999999999888e-05, 1.4639000000000318e-05, 1.4652000000000415e-05, 1.4597999999997613e-05, 1.4652999999999888e-05, 1.4639000000000318e-05, 1.4652999999999888e-05, 1.4666999999999458e-05, 1.4651999999996945e-05, 1.4652000000000415e-05, 1.4666999999999458e-05, 1.461099999999771e-05, 1.4639000000000318e-05, 1.4666999999999458e-05, 1.4625000000004218e-05, 1.4652999999996419e-05, 1.4625000000004218e-05, 1.4639000000003788e-05, 1.4639000000003788e-05, 1.4624999999997279e-05, 1.4638999999996849e-05, 1.4611000000004648e-05, 1.4639000000003788e-05, 1.4611999999997183e-05, 1.4652999999996419e-05, 1.461099999999771e-05, 1.4568999999999e-05, 1.461099999999771e-05, 1.4653000000003358e-05, 1.4651999999996945e-05]</msg>
<status status="PASS" starttime="20201115 22:11:36.862" endtime="20201115 22:11:36.864"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.857" endtime="20201115 22:11:36.864"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:36.867" endtime="20201115 22:11:36.868"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:36.870" endtime="20201115 22:11:36.890"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.869" endtime="20201115 22:11:36.890"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.865" endtime="20201115 22:11:36.891"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.492" endtime="20201115 22:11:36.891"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.490" endtime="20201115 22:11:36.891"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.489" endtime="20201115 22:11:36.892"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:36.894" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:36.903" endtime="20201115 22:11:36.923"></status>
</kw>
<msg timestamp="20201115 22:11:36.923" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:36.901" endtime="20201115 22:11:36.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:36.926" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:36.924" endtime="20201115 22:11:36.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:36.927" endtime="20201115 22:11:36.929"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.899" endtime="20201115 22:11:36.929"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.896" endtime="20201115 22:11:36.930"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:36.936" endtime="20201115 22:11:37.224"></status>
</kw>
<msg timestamp="20201115 22:11:37.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024212583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024228056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:36.935" endtime="20201115 22:11:37.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:37.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024212583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024228056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:37.229" endtime="20201115 22:11:37.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:37.237" endtime="20201115 22:11:37.239"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.932" endtime="20201115 22:11:37.240"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.930" endtime="20201115 22:11:37.240"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:37.245" level="INFO">${RESULT} = [{'time': 0.024228056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5473000000001957e-05, 'source_diff': 1.5473000000001957e-05}, {'time': 0.024424222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:37.241" endtime="20201115 22:11:37.245"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:37.259" level="INFO">${OVERHEAD} = {'diff': [1.5473000000001957e-05, 1.5513999999997724e-05, 1.5471999999999014e-05, 1.5473000000001957e-05, 1.554100000000086e-05, 1.5499999999998154e-05, 1.5486999999998058e-05, 1.5486000000002054e-05,...</msg>
<status status="PASS" starttime="20201115 22:11:37.246" endtime="20201115 22:11:37.259"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:37.264" level="INFO">NAME: 00-overhead-10-set</msg>
<status status="PASS" starttime="20201115 22:11:37.262" endtime="20201115 22:11:37.264"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:37.266" level="INFO">VALUE: [1.5473000000001957e-05, 1.5513999999997724e-05, 1.5471999999999014e-05, 1.5473000000001957e-05, 1.554100000000086e-05, 1.5499999999998154e-05, 1.5486999999998058e-05, 1.5486000000002054e-05, 1.5472000000002484e-05, 1.5514000000001194e-05, 1.5471999999999014e-05, 1.5513999999997724e-05, 1.5499999999998154e-05, 1.5471999999999014e-05, 1.5473000000001957e-05, 1.5527999999997294e-05, 1.5457999999999444e-05, 1.5513999999997724e-05, 1.5528000000000763e-05, 1.5513999999997724e-05, 1.5444999999999348e-05, 1.5471999999999014e-05, 1.5485999999998584e-05, 1.5500000000001624e-05, 1.5471999999999014e-05, 1.5486000000002054e-05, 1.5499999999998154e-05, 1.5485999999998584e-05, 1.558299999999957e-05, 1.5443999999999874e-05, 1.5499999999998154e-05, 1.5542000000000333e-05, 1.5471999999999014e-05, 1.5528000000000763e-05, 1.5472000000002484e-05, 1.5500000000001624e-05, 1.551299999999825e-05, 1.5514000000001194e-05, 1.5415999999997265e-05, 1.5472000000002484e-05, 1.5514000000001194e-05, 1.5499999999994685e-05, 1.5514000000001194e-05, 1.5514000000001194e-05, 1.5514000000001194e-05, 1.5458000000002914e-05, 1.5500000000001624e-05, 1.5485999999995115e-05, 1.5499999999994685e-05, 1.5417000000003678e-05]</msg>
<status status="PASS" starttime="20201115 22:11:37.265" endtime="20201115 22:11:37.267"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.260" endtime="20201115 22:11:37.267"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:37.269" endtime="20201115 22:11:37.271"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:37.273" endtime="20201115 22:11:37.292"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.271" endtime="20201115 22:11:37.293"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.268" endtime="20201115 22:11:37.294"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.894" endtime="20201115 22:11:37.294"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.893" endtime="20201115 22:11:37.294"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.892" endtime="20201115 22:11:37.294"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:37.296" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:37.306" endtime="20201115 22:11:37.329"></status>
</kw>
<msg timestamp="20201115 22:11:37.329" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:37.304" endtime="20201115 22:11:37.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:37.332" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:37.330" endtime="20201115 22:11:37.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:37.333" endtime="20201115 22:11:37.334"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.301" endtime="20201115 22:11:37.335"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.299" endtime="20201115 22:11:37.335"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:37.342" endtime="20201115 22:11:37.629"></status>
</kw>
<msg timestamp="20201115 22:11:37.632" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023588569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023604889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:37.341" endtime="20201115 22:11:37.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:37.640" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023588569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023604889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:37.633" endtime="20201115 22:11:37.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:37.647" endtime="20201115 22:11:37.649"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.338" endtime="20201115 22:11:37.650"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.336" endtime="20201115 22:11:37.650"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:37.654" level="INFO">${RESULT} = [{'time': 0.023604889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6320000000000223e-05, 'source_diff': 1.6320000000000223e-05}, {'time': 0.023813833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:37.651" endtime="20201115 22:11:37.655"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:37.668" level="INFO">${OVERHEAD} = {'diff': [1.6320000000000223e-05, 1.636099999999946e-05, 1.636099999999946e-05, 1.636099999999946e-05, 1.63750000000025e-05, 1.634699999999989e-05, 1.636099999999946e-05, 1.633300000000032e-05, 1.6403...</msg>
<status status="PASS" starttime="20201115 22:11:37.655" endtime="20201115 22:11:37.668"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:37.673" level="INFO">NAME: 00-overhead-11-set</msg>
<status status="PASS" starttime="20201115 22:11:37.672" endtime="20201115 22:11:37.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:37.675" level="INFO">VALUE: [1.6320000000000223e-05, 1.636099999999946e-05, 1.636099999999946e-05, 1.636099999999946e-05, 1.63750000000025e-05, 1.634699999999989e-05, 1.636099999999946e-05, 1.633300000000032e-05, 1.640300000000164e-05, 1.634699999999989e-05, 1.6333999999999793e-05, 1.634700000000336e-05, 1.6278000000001513e-05, 1.634699999999989e-05, 1.6348000000002832e-05, 1.630499999999771e-05, 1.6306000000000653e-05, 1.6278000000001513e-05, 1.634699999999989e-05, 1.6333999999999793e-05, 1.631900000000075e-05, 1.63750000000025e-05, 1.638900000000207e-05, 1.6306000000000653e-05, 1.63889999999986e-05, 1.636099999999946e-05, 1.6292000000001083e-05, 1.640300000000164e-05, 1.6347999999999363e-05, 1.634699999999989e-05, 1.634699999999989e-05, 1.636099999999946e-05, 1.633299999999685e-05, 1.6320000000000223e-05, 1.637499999999903e-05, 1.6347999999999363e-05, 1.634699999999989e-05, 1.636099999999946e-05, 1.636099999999946e-05, 1.6333999999999793e-05, 1.6306000000000653e-05, 1.637499999999903e-05, 1.6292000000001083e-05, 1.637499999999903e-05, 1.6333999999999793e-05, 1.63889999999986e-05, 1.633300000000032e-05, 1.630500000000118e-05, 1.6361999999998933e-05, 1.636099999999946e-05]</msg>
<status status="PASS" starttime="20201115 22:11:37.674" endtime="20201115 22:11:37.676"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.669" endtime="20201115 22:11:37.676"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:37.679" endtime="20201115 22:11:37.680"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:37.682" endtime="20201115 22:11:37.702"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.681" endtime="20201115 22:11:37.702"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.677" endtime="20201115 22:11:37.703"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.297" endtime="20201115 22:11:37.703"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.295" endtime="20201115 22:11:37.703"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.295" endtime="20201115 22:11:37.703"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:37.706" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:37.715" endtime="20201115 22:11:37.741"></status>
</kw>
<msg timestamp="20201115 22:11:37.741" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:37.713" endtime="20201115 22:11:37.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:37.744" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:37.742" endtime="20201115 22:11:37.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:37.745" endtime="20201115 22:11:37.747"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.711" endtime="20201115 22:11:37.747"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.708" endtime="20201115 22:11:37.748"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:37.755" endtime="20201115 22:11:38.041"></status>
</kw>
<msg timestamp="20201115 22:11:38.044" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026369444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026386667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:37.753" endtime="20201115 22:11:38.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:38.052" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026369444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026386667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:38.045" endtime="20201115 22:11:38.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:38.053" endtime="20201115 22:11:38.055"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.750" endtime="20201115 22:11:38.055"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.748" endtime="20201115 22:11:38.056"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:38.060" level="INFO">${RESULT} = [{'time': 0.026386667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7223000000000238e-05, 'source_diff': 1.7223000000000238e-05}, {'time': 0.026617139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:38.057" endtime="20201115 22:11:38.060"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:38.074" level="INFO">${OVERHEAD} = {'diff': [1.7223000000000238e-05, 1.718100000000153e-05, 1.7207999999997725e-05, 1.7195000000001098e-05, 1.7222000000000764e-05, 1.7208000000001195e-05, 1.7208000000001195e-05, 1.7222000000000764e-05,...</msg>
<status status="PASS" starttime="20201115 22:11:38.061" endtime="20201115 22:11:38.074"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:38.079" level="INFO">NAME: 00-overhead-12-set</msg>
<status status="PASS" starttime="20201115 22:11:38.078" endtime="20201115 22:11:38.079"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:38.081" level="INFO">VALUE: [1.7223000000000238e-05, 1.718100000000153e-05, 1.7207999999997725e-05, 1.7195000000001098e-05, 1.7222000000000764e-05, 1.7208000000001195e-05, 1.7208000000001195e-05, 1.7222000000000764e-05, 1.7222000000000764e-05, 1.7180000000002055e-05, 1.7208000000001195e-05, 1.7195000000001098e-05, 1.7236000000000334e-05, 1.7180000000002055e-05, 1.7222000000000764e-05, 1.7195000000001098e-05, 1.7223000000000238e-05, 1.7222000000000764e-05, 1.7222000000000764e-05, 1.7264000000002944e-05, 1.718100000000153e-05, 1.7222000000000764e-05, 1.7222000000004234e-05, 1.7222000000004234e-05, 1.72089999999972e-05, 1.7249999999996435e-05, 1.72089999999972e-05, 1.7222000000004234e-05, 1.719499999999763e-05, 1.7207999999997725e-05, 1.7194000000005094e-05, 1.7193999999998155e-05, 1.7181000000004998e-05, 1.7250000000003374e-05, 1.7221999999997295e-05, 1.7222000000004234e-05, 1.7207999999997725e-05, 1.7222000000004234e-05, 1.7221999999997295e-05, 1.7221999999997295e-05, 1.7223000000003708e-05, 1.7221999999997295e-05, 1.7209000000004138e-05, 1.7249999999996435e-05, 1.7236000000003804e-05, 1.718099999999806e-05, 1.715299999999892e-05, 1.7221999999997295e-05, 1.7277999999995575e-05, 1.7195000000004568e-05]</msg>
<status status="PASS" starttime="20201115 22:11:38.080" endtime="20201115 22:11:38.082"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.075" endtime="20201115 22:11:38.082"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:38.084" endtime="20201115 22:11:38.086"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:38.088" endtime="20201115 22:11:38.108"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.086" endtime="20201115 22:11:38.108"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.083" endtime="20201115 22:11:38.109"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.706" endtime="20201115 22:11:38.109"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.705" endtime="20201115 22:11:38.109"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.704" endtime="20201115 22:11:38.109"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:38.112" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:38.121" endtime="20201115 22:11:38.149"></status>
</kw>
<msg timestamp="20201115 22:11:38.150" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:38.119" endtime="20201115 22:11:38.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:38.152" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:38.151" endtime="20201115 22:11:38.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:38.154" endtime="20201115 22:11:38.155"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.117" endtime="20201115 22:11:38.156"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.114" endtime="20201115 22:11:38.156"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:38.163" endtime="20201115 22:11:38.450"></status>
</kw>
<msg timestamp="20201115 22:11:38.453" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027299861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027317931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:38.161" endtime="20201115 22:11:38.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:38.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027299861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027317931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:38.455" endtime="20201115 22:11:38.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:38.463" endtime="20201115 22:11:38.465"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.159" endtime="20201115 22:11:38.465"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.157" endtime="20201115 22:11:38.466"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:38.470" level="INFO">${RESULT} = [{'time': 0.027317931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8069999999998504e-05, 'source_diff': 1.8069999999998504e-05}, {'time': 0.027563056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:38.467" endtime="20201115 22:11:38.470"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:38.484" level="INFO">${OVERHEAD} = {'diff': [1.8069999999998504e-05, 1.8041999999999364e-05, 1.806899999999903e-05, 1.805499999999946e-05, 1.804099999999989e-05, 1.8027999999999794e-05, 1.806899999999903e-05, 1.8070000000001973e-05, 1....</msg>
<status status="PASS" starttime="20201115 22:11:38.471" endtime="20201115 22:11:38.484"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:38.489" level="INFO">NAME: 00-overhead-13-set</msg>
<status status="PASS" starttime="20201115 22:11:38.488" endtime="20201115 22:11:38.489"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:38.491" level="INFO">VALUE: [1.8069999999998504e-05, 1.8041999999999364e-05, 1.806899999999903e-05, 1.805499999999946e-05, 1.804099999999989e-05, 1.8027999999999794e-05, 1.806899999999903e-05, 1.8070000000001973e-05, 1.8055999999998934e-05, 1.8041999999999364e-05, 1.80690000000025e-05, 1.8055999999998934e-05, 1.8014000000000224e-05, 1.8027999999999794e-05, 1.805500000000293e-05, 1.8027999999999794e-05, 1.8069999999998504e-05, 1.8069999999995034e-05, 1.808300000000207e-05, 1.805499999999599e-05, 1.805500000000293e-05, 1.805500000000293e-05, 1.808300000000207e-05, 1.808299999999513e-05, 1.805500000000293e-05, 1.806899999999556e-05, 1.8014000000003694e-05, 1.8055999999995465e-05, 1.8028000000003264e-05, 1.8042000000002834e-05, 1.80690000000025e-05, 1.8083999999994604e-05, 1.804100000000336e-05, 1.80690000000025e-05, 1.8041999999995895e-05, 1.808299999999513e-05, 1.805500000000293e-05, 1.8042000000002834e-05, 1.808299999999513e-05, 1.80690000000025e-05, 1.808299999999513e-05, 1.80690000000025e-05, 1.805500000000293e-05, 1.8070000000001973e-05, 1.802700000000379e-05, 1.8027999999996325e-05, 1.8056000000002403e-05, 1.80690000000025e-05, 1.806899999999556e-05, 1.801300000000422e-05]</msg>
<status status="PASS" starttime="20201115 22:11:38.490" endtime="20201115 22:11:38.492"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.485" endtime="20201115 22:11:38.492"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:38.494" endtime="20201115 22:11:38.496"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:38.498" endtime="20201115 22:11:38.518"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.496" endtime="20201115 22:11:38.518"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.493" endtime="20201115 22:11:38.519"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.112" endtime="20201115 22:11:38.519"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.111" endtime="20201115 22:11:38.519"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.110" endtime="20201115 22:11:38.520"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:38.522" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:38.531" endtime="20201115 22:11:38.556"></status>
</kw>
<msg timestamp="20201115 22:11:38.556" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:38.530" endtime="20201115 22:11:38.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:38.559" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:38.557" endtime="20201115 22:11:38.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:38.560" endtime="20201115 22:11:38.561"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.527" endtime="20201115 22:11:38.562"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.524" endtime="20201115 22:11:38.562"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:38.569" endtime="20201115 22:11:38.857"></status>
</kw>
<msg timestamp="20201115 22:11:38.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024252083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024270972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:38.568" endtime="20201115 22:11:38.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:38.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024252083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024270972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:38.861" endtime="20201115 22:11:38.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:38.869" endtime="20201115 22:11:38.871"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.565" endtime="20201115 22:11:38.871"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.563" endtime="20201115 22:11:38.872"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:38.876" level="INFO">${RESULT} = [{'time': 0.024270972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.888899999999763e-05, 'source_diff': 1.888899999999763e-05}, {'time': 0.024533792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:38.873" endtime="20201115 22:11:38.877"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:38.891" level="INFO">${OVERHEAD} = {'diff': [1.888899999999763e-05, 1.891700000000024e-05, 1.891700000000024e-05, 1.893099999999981e-05, 1.884700000000239e-05, 1.8930000000000335e-05, 1.8930000000000335e-05, 1.8888000000001626e-05, 1.8...</msg>
<status status="PASS" starttime="20201115 22:11:38.877" endtime="20201115 22:11:38.891"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:38.895" level="INFO">NAME: 00-overhead-14-set</msg>
<status status="PASS" starttime="20201115 22:11:38.894" endtime="20201115 22:11:38.896"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:38.898" level="INFO">VALUE: [1.888899999999763e-05, 1.891700000000024e-05, 1.891700000000024e-05, 1.893099999999981e-05, 1.884700000000239e-05, 1.8930000000000335e-05, 1.8930000000000335e-05, 1.8888000000001626e-05, 1.8916000000000766e-05, 1.8915999999997296e-05, 1.8916000000000766e-05, 1.894500000000285e-05, 1.89029999999972e-05, 1.8943999999999905e-05, 1.887500000000153e-05, 1.8971999999999045e-05, 1.890300000000067e-05, 1.886100000000196e-05, 1.891700000000024e-05, 1.893099999999981e-05, 1.893099999999981e-05, 1.890300000000067e-05, 1.88890000000011e-05, 1.893099999999981e-05, 1.893099999999981e-05, 1.884699999999892e-05, 1.893099999999981e-05, 1.8943999999999905e-05, 1.887499999999459e-05, 1.886100000000196e-05, 1.890300000000067e-05, 1.8887999999994687e-05, 1.8916000000000766e-05, 1.8943999999999905e-05, 1.893099999999981e-05, 1.890300000000067e-05, 1.8902000000001196e-05, 1.884699999999545e-05, 1.8902000000001196e-05, 1.891700000000024e-05, 1.893099999999981e-05, 1.894499999999938e-05, 1.893099999999981e-05, 1.8916000000000766e-05, 1.886100000000196e-05, 1.886099999999502e-05, 1.8916000000000766e-05, 1.8943999999999905e-05, 1.88890000000011e-05, 1.893099999999981e-05]</msg>
<status status="PASS" starttime="20201115 22:11:38.897" endtime="20201115 22:11:38.898"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.892" endtime="20201115 22:11:38.899"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:38.901" endtime="20201115 22:11:38.903"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:38.905" endtime="20201115 22:11:38.925"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.903" endtime="20201115 22:11:38.925"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.900" endtime="20201115 22:11:38.926"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.522" endtime="20201115 22:11:38.926"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.521" endtime="20201115 22:11:38.926"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.520" endtime="20201115 22:11:38.927"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:38.929" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:38.938" endtime="20201115 22:11:38.962"></status>
</kw>
<msg timestamp="20201115 22:11:38.963" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:38.936" endtime="20201115 22:11:38.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:38.965" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:38.964" endtime="20201115 22:11:38.965"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:38.966" endtime="20201115 22:11:38.968"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.934" endtime="20201115 22:11:38.968"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.932" endtime="20201115 22:11:38.969"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:38.975" endtime="20201115 22:11:39.263"></status>
</kw>
<msg timestamp="20201115 22:11:39.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024060514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024080236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:38.974" endtime="20201115 22:11:39.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:39.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024060514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024080236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:39.267" endtime="20201115 22:11:39.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:39.276" endtime="20201115 22:11:39.278"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.971" endtime="20201115 22:11:39.278"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.969" endtime="20201115 22:11:39.279"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:39.283" level="INFO">${RESULT} = [{'time': 0.024080236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9721999999999795e-05, 'source_diff': 1.9721999999999795e-05}, {'time': 0.024365125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:39.279" endtime="20201115 22:11:39.283"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:39.298" level="INFO">${OVERHEAD} = {'diff': [1.9721999999999795e-05, 1.9750000000002405e-05, 1.979100000000164e-05, 1.9735999999999365e-05, 1.9778000000001544e-05, 1.977700000000207e-05, 1.9806000000000684e-05, 1.9764000000001974e-05, ...</msg>
<status status="PASS" starttime="20201115 22:11:39.284" endtime="20201115 22:11:39.298"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:39.302" level="INFO">NAME: 00-overhead-15-set</msg>
<status status="PASS" starttime="20201115 22:11:39.301" endtime="20201115 22:11:39.303"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:39.305" level="INFO">VALUE: [1.9721999999999795e-05, 1.9750000000002405e-05, 1.979100000000164e-05, 1.9735999999999365e-05, 1.9778000000001544e-05, 1.977700000000207e-05, 1.9806000000000684e-05, 1.9764000000001974e-05, 1.9735999999999365e-05, 1.9749999999998935e-05, 1.9708000000000225e-05, 1.97769999999986e-05, 1.966700000000099e-05, 1.9735999999999365e-05, 1.9736000000002835e-05, 1.9764000000001974e-05, 1.9749999999998935e-05, 1.976299999999903e-05, 1.9778000000001544e-05, 1.9763999999998505e-05, 1.9763999999998505e-05, 1.9749999999998935e-05, 1.9778000000001544e-05, 1.984699999999992e-05, 1.9820000000000254e-05, 1.9763999999998505e-05, 1.9749999999998935e-05, 1.979099999999817e-05, 1.983300000000382e-05, 1.9764000000005444e-05, 1.9764000000005444e-05, 1.9763999999998505e-05, 1.9749999999998935e-05, 1.9764000000005444e-05, 1.97769999999986e-05, 1.9749999999998935e-05, 1.9735999999999365e-05, 1.9749999999998935e-05, 1.9749999999998935e-05, 1.9763999999998505e-05, 1.9777999999998075e-05, 1.9722000000006734e-05, 1.9791999999997645e-05, 1.9735999999999365e-05, 1.9749999999998935e-05, 1.9763999999998505e-05, 1.979100000000511e-05, 1.9749999999998935e-05, 1.9749999999998935e-05, 1.973699999999884e-05]</msg>
<status status="PASS" starttime="20201115 22:11:39.303" endtime="20201115 22:11:39.306"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.299" endtime="20201115 22:11:39.306"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:39.309" endtime="20201115 22:11:39.310"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:39.312" endtime="20201115 22:11:39.332"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.311" endtime="20201115 22:11:39.332"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.307" endtime="20201115 22:11:39.333"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.930" endtime="20201115 22:11:39.333"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.928" endtime="20201115 22:11:39.333"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.927" endtime="20201115 22:11:39.334"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:39.336" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:39.345" endtime="20201115 22:11:39.370"></status>
</kw>
<msg timestamp="20201115 22:11:39.370" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:39.343" endtime="20201115 22:11:39.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:39.373" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:39.371" endtime="20201115 22:11:39.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:39.374" endtime="20201115 22:11:39.376"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.341" endtime="20201115 22:11:39.376"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.339" endtime="20201115 22:11:39.377"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:39.384" endtime="20201115 22:11:39.672"></status>
</kw>
<msg timestamp="20201115 22:11:39.675" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024030583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024051222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:39.382" endtime="20201115 22:11:39.675"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:39.683" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024030583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024051222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:39.676" endtime="20201115 22:11:39.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:39.684" endtime="20201115 22:11:39.686"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.379" endtime="20201115 22:11:39.687"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.377" endtime="20201115 22:11:39.687"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:39.691" level="INFO">${RESULT} = [{'time': 0.024051222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.063899999999938e-05, 'source_diff': 2.063899999999938e-05}, {'time': 0.024356264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:39.688" endtime="20201115 22:11:39.692"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:39.705" level="INFO">${OVERHEAD} = {'diff': [2.063899999999938e-05, 2.061100000000024e-05, 2.062499999999981e-05, 2.061100000000024e-05, 2.063899999999938e-05, 2.0680000000002086e-05, 2.0611999999999714e-05, 2.061100000000024e-05, 2.05...</msg>
<status status="PASS" starttime="20201115 22:11:39.692" endtime="20201115 22:11:39.706"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:39.710" level="INFO">NAME: 00-overhead-16-set</msg>
<status status="PASS" starttime="20201115 22:11:39.709" endtime="20201115 22:11:39.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:39.713" level="INFO">VALUE: [2.063899999999938e-05, 2.061100000000024e-05, 2.062499999999981e-05, 2.061100000000024e-05, 2.063899999999938e-05, 2.0680000000002086e-05, 2.0611999999999714e-05, 2.061100000000024e-05, 2.0597999999996675e-05, 2.063899999999938e-05, 2.063899999999938e-05, 2.062499999999981e-05, 2.063899999999938e-05, 2.061100000000024e-05, 2.065299999999895e-05, 2.054100000000239e-05, 2.062500000000328e-05, 2.0637999999999906e-05, 2.055499999999849e-05, 2.062499999999981e-05, 2.062499999999981e-05, 2.061100000000024e-05, 2.0637999999999906e-05, 2.061100000000024e-05, 2.063899999999591e-05, 2.065299999999548e-05, 2.061099999999677e-05, 2.05969999999972e-05, 2.0651999999996007e-05, 2.061100000000371e-05, 2.061099999999677e-05, 2.062499999999634e-05, 2.062500000000328e-05, 2.061100000000371e-05, 2.063900000000285e-05, 2.058299999999763e-05, 2.058300000000457e-05, 2.062500000000328e-05, 2.0598000000003613e-05, 2.061099999999677e-05, 2.0598000000003613e-05, 2.063900000000285e-05, 2.062499999999634e-05, 2.062499999999634e-05, 2.063900000000285e-05, 2.058299999999763e-05, 2.05969999999972e-05, 2.063899999999591e-05, 2.0597999999996675e-05, 2.068099999999462e-05]</msg>
<status status="PASS" starttime="20201115 22:11:39.711" endtime="20201115 22:11:39.714"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.706" endtime="20201115 22:11:39.714"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:39.717" endtime="20201115 22:11:39.718"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:39.720" endtime="20201115 22:11:39.740"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.719" endtime="20201115 22:11:39.740"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.715" endtime="20201115 22:11:39.741"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.336" endtime="20201115 22:11:39.741"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.335" endtime="20201115 22:11:39.741"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.334" endtime="20201115 22:11:39.742"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:39.744" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:39.753" endtime="20201115 22:11:39.786"></status>
</kw>
<msg timestamp="20201115 22:11:39.787" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:39.751" endtime="20201115 22:11:39.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:39.789" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:39.788" endtime="20201115 22:11:39.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:39.790" endtime="20201115 22:11:39.792"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.749" endtime="20201115 22:11:39.793"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.746" endtime="20201115 22:11:39.793"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:39.800" endtime="20201115 22:11:40.088"></status>
</kw>
<msg timestamp="20201115 22:11:40.091" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028031653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028053069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:39.798" endtime="20201115 22:11:40.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:40.099" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028031653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028053069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:40.092" endtime="20201115 22:11:40.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:40.101" endtime="20201115 22:11:40.102"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.795" endtime="20201115 22:11:40.103"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.794" endtime="20201115 22:11:40.103"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:40.107" level="INFO">${RESULT} = [{'time': 0.028053069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1415999999999796e-05, 'source_diff': 2.1415999999999796e-05}, {'time': 0.028383403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:40.104" endtime="20201115 22:11:40.108"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:40.122" level="INFO">${OVERHEAD} = {'diff': [2.1415999999999796e-05, 2.1486000000001115e-05, 2.145900000000145e-05, 2.1429999999999366e-05, 2.1458000000001975e-05, 2.145900000000145e-05, 2.1457999999998506e-05, 2.147299999999755e-05, 2...</msg>
<status status="PASS" starttime="20201115 22:11:40.109" endtime="20201115 22:11:40.122"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:40.126" level="INFO">NAME: 00-overhead-17-set</msg>
<status status="PASS" starttime="20201115 22:11:40.125" endtime="20201115 22:11:40.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:40.129" level="INFO">VALUE: [2.1415999999999796e-05, 2.1486000000001115e-05, 2.145900000000145e-05, 2.1429999999999366e-05, 2.1458000000001975e-05, 2.145900000000145e-05, 2.1457999999998506e-05, 2.147299999999755e-05, 2.148699999999712e-05, 2.147300000000102e-05, 2.1430000000002836e-05, 2.145900000000145e-05, 2.1486000000001115e-05, 2.1500000000000685e-05, 2.1514000000000255e-05, 2.1457999999995037e-05, 2.1486000000001115e-05, 2.143099999999537e-05, 2.143100000000231e-05, 2.145900000000145e-05, 2.1471999999994607e-05, 2.1415999999996327e-05, 2.145899999999451e-05, 2.1527999999999825e-05, 2.1471999999994607e-05, 2.1457999999995037e-05, 2.1486000000001115e-05, 2.140299999999623e-05, 2.1471999999994607e-05, 2.1430000000002836e-05, 2.152700000000035e-05, 2.1500000000000685e-05, 2.1486000000001115e-05, 2.1500000000000685e-05, 2.1500000000000685e-05, 2.143099999999537e-05, 2.14169999999958e-05, 2.1444000000002406e-05, 2.1472000000001545e-05, 2.1486000000001115e-05, 2.1458000000001975e-05, 2.1485999999994176e-05, 2.1500000000000685e-05, 2.141700000000274e-05, 2.1500000000000685e-05, 2.1458000000001975e-05, 2.1500000000000685e-05, 2.1486000000001115e-05, 2.1486000000001115e-05, 2.1486000000001115e-05]</msg>
<status status="PASS" starttime="20201115 22:11:40.128" endtime="20201115 22:11:40.129"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.123" endtime="20201115 22:11:40.130"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:40.132" endtime="20201115 22:11:40.133"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:40.136" endtime="20201115 22:11:40.155"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.134" endtime="20201115 22:11:40.156"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.131" endtime="20201115 22:11:40.156"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.744" endtime="20201115 22:11:40.156"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.743" endtime="20201115 22:11:40.157"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.742" endtime="20201115 22:11:40.157"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:40.159" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:40.168" endtime="20201115 22:11:40.198"></status>
</kw>
<msg timestamp="20201115 22:11:40.199" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:40.167" endtime="20201115 22:11:40.199"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:40.201" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:40.200" endtime="20201115 22:11:40.201"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:40.202" endtime="20201115 22:11:40.204"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.164" endtime="20201115 22:11:40.204"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.162" endtime="20201115 22:11:40.205"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:40.212" endtime="20201115 22:11:40.499"></status>
</kw>
<msg timestamp="20201115 22:11:40.502" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024715222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024737542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:40.210" endtime="20201115 22:11:40.502"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:40.510" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024715222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024737542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:40.503" endtime="20201115 22:11:40.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:40.512" endtime="20201115 22:11:40.513"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.207" endtime="20201115 22:11:40.514"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.205" endtime="20201115 22:11:40.514"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:40.519" level="INFO">${RESULT} = [{'time': 0.024737542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2320000000002754e-05, 'source_diff': 2.2320000000002754e-05}, {'time': 0.025088208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:40.515" endtime="20201115 22:11:40.519"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:40.532" level="INFO">${OVERHEAD} = {'diff': [2.2320000000002754e-05, 2.234700000000242e-05, 2.2319999999999285e-05, 2.237500000000156e-05, 2.233299999999938e-05, 2.233299999999938e-05, 2.231899999999981e-05, 2.2305999999999715e-05, 2.2...</msg>
<status status="PASS" starttime="20201115 22:11:40.520" endtime="20201115 22:11:40.533"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:40.537" level="INFO">NAME: 00-overhead-18-set</msg>
<status status="PASS" starttime="20201115 22:11:40.536" endtime="20201115 22:11:40.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:40.540" level="INFO">VALUE: [2.2320000000002754e-05, 2.234700000000242e-05, 2.2319999999999285e-05, 2.237500000000156e-05, 2.233299999999938e-05, 2.233299999999938e-05, 2.231899999999981e-05, 2.2305999999999715e-05, 2.231899999999981e-05, 2.2333999999998855e-05, 2.2319999999999285e-05, 2.2333999999998855e-05, 2.2333999999998855e-05, 2.2319999999999285e-05, 2.2305999999999715e-05, 2.2305999999999715e-05, 2.231899999999981e-05, 2.22770000000011e-05, 2.2305999999999715e-05, 2.2348000000005364e-05, 2.234699999999895e-05, 2.240300000000417e-05, 2.2305999999999715e-05, 2.229100000000067e-05, 2.2319999999999285e-05, 2.233299999999938e-05, 2.2305999999999715e-05, 2.22770000000011e-05, 2.234699999999895e-05, 2.230500000000024e-05, 2.240299999999723e-05, 2.230500000000024e-05, 2.234700000000589e-05, 2.2319999999999285e-05, 2.2319999999999285e-05, 2.2292000000000145e-05, 2.234700000000589e-05, 2.234699999999895e-05, 2.2334000000005794e-05, 2.233299999999938e-05, 2.2305999999999715e-05, 2.233299999999938e-05, 2.2348000000005364e-05, 2.230500000000024e-05, 2.2319999999999285e-05, 2.2305999999999715e-05, 2.233299999999938e-05, 2.2292000000000145e-05, 2.233299999999938e-05, 2.233300000000632e-05]</msg>
<status status="PASS" starttime="20201115 22:11:40.538" endtime="20201115 22:11:40.540"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.533" endtime="20201115 22:11:40.541"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:40.543" endtime="20201115 22:11:40.544"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:40.546" endtime="20201115 22:11:40.566"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.545" endtime="20201115 22:11:40.566"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.541" endtime="20201115 22:11:40.567"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.160" endtime="20201115 22:11:40.567"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.158" endtime="20201115 22:11:40.568"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.157" endtime="20201115 22:11:40.568"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:40.570" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:40.579" endtime="20201115 22:11:40.610"></status>
</kw>
<msg timestamp="20201115 22:11:40.610" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:40.577" endtime="20201115 22:11:40.610"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:40.613" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:40.611" endtime="20201115 22:11:40.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:40.614" endtime="20201115 22:11:40.615"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.575" endtime="20201115 22:11:40.616"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.573" endtime="20201115 22:11:40.616"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:40.624" endtime="20201115 22:11:40.911"></status>
</kw>
<msg timestamp="20201115 22:11:40.914" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025927292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025950472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:40.622" endtime="20201115 22:11:40.914"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:40.922" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025927292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025950472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:40.915" endtime="20201115 22:11:40.922"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:40.923" endtime="20201115 22:11:40.925"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.619" endtime="20201115 22:11:40.925"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.617" endtime="20201115 22:11:40.926"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:40.930" level="INFO">${RESULT} = [{'time': 0.025950472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3179999999997647e-05, 'source_diff': 2.3179999999997647e-05}, {'time': 0.026320417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:40.927" endtime="20201115 22:11:40.930"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:40.944" level="INFO">${OVERHEAD} = {'diff': [2.3179999999997647e-05, 2.313899999999841e-05, 2.318100000000059e-05, 2.3194000000000686e-05, 2.3152000000001977e-05, 2.3137999999998937e-05, 2.316700000000102e-05, 2.320899999999973e-05, 2....</msg>
<status status="PASS" starttime="20201115 22:11:40.931" endtime="20201115 22:11:40.944"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:40.949" level="INFO">NAME: 00-overhead-19-set</msg>
<status status="PASS" starttime="20201115 22:11:40.948" endtime="20201115 22:11:40.949"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:40.951" level="INFO">VALUE: [2.3179999999997647e-05, 2.313899999999841e-05, 2.318100000000059e-05, 2.3194000000000686e-05, 2.3152000000001977e-05, 2.3137999999998937e-05, 2.316700000000102e-05, 2.320899999999973e-05, 2.315299999999798e-05, 2.3249999999998966e-05, 2.315300000000145e-05, 2.318100000000059e-05, 2.315299999999798e-05, 2.311099999999927e-05, 2.315300000000145e-05, 2.318099999999712e-05, 2.3194000000004156e-05, 2.3179999999997647e-05, 2.318100000000406e-05, 2.3179999999997647e-05, 2.3207999999996787e-05, 2.316699999999755e-05, 2.318100000000406e-05, 2.3180000000004586e-05, 2.318099999999712e-05, 2.316699999999755e-05, 2.318099999999712e-05, 2.316699999999755e-05, 2.315300000000492e-05, 2.319499999999669e-05, 2.319500000000363e-05, 2.315299999999798e-05, 2.319499999999669e-05, 2.318100000000406e-05, 2.315299999999798e-05, 2.319500000000363e-05, 2.318100000000406e-05, 2.3262999999995593e-05, 2.318099999999712e-05, 2.316699999999755e-05, 2.315299999999798e-05, 2.3193999999997217e-05, 2.313899999999841e-05, 2.3152000000005446e-05, 2.319499999999669e-05, 2.3221999999996357e-05, 2.3179999999997647e-05, 2.319500000000363e-05, 2.3179999999997647e-05, 2.3194000000004156e-05]</msg>
<status status="PASS" starttime="20201115 22:11:40.950" endtime="20201115 22:11:40.952"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.945" endtime="20201115 22:11:40.952"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:40.954" endtime="20201115 22:11:40.956"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:40.958" endtime="20201115 22:11:40.977"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.956" endtime="20201115 22:11:40.978"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.953" endtime="20201115 22:11:40.979"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.571" endtime="20201115 22:11:40.979"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.569" endtime="20201115 22:11:40.979"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.568" endtime="20201115 22:11:40.979"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:40.982" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:40.991" endtime="20201115 22:11:41.022"></status>
</kw>
<msg timestamp="20201115 22:11:41.023" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:40.989" endtime="20201115 22:11:41.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:41.026" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:41.024" endtime="20201115 22:11:41.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:41.027" endtime="20201115 22:11:41.029"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.986" endtime="20201115 22:11:41.029"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.984" endtime="20201115 22:11:41.030"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:41.037" endtime="20201115 22:11:41.323"></status>
</kw>
<msg timestamp="20201115 22:11:41.326" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026390667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026414694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:41.035" endtime="20201115 22:11:41.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:41.334" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026390667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026414694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:41.327" endtime="20201115 22:11:41.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:41.336" endtime="20201115 22:11:41.337"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.032" endtime="20201115 22:11:41.338"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.030" endtime="20201115 22:11:41.338"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:41.343" level="INFO">${RESULT} = [{'time': 0.026414694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4026999999999382e-05, 'source_diff': 2.4026999999999382e-05}, {'time': 0.026813389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:41.339" endtime="20201115 22:11:41.343"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:41.356" level="INFO">${OVERHEAD} = {'diff': [2.4026999999999382e-05, 2.408300000000113e-05, 2.4041999999998426e-05, 2.4026999999999382e-05, 2.3985999999996677e-05, 2.4013999999999286e-05, 2.4027999999998856e-05, 2.4040999999998952e-05,...</msg>
<status status="PASS" starttime="20201115 22:11:41.344" endtime="20201115 22:11:41.357"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:41.361" level="INFO">NAME: 00-overhead-20-set</msg>
<status status="PASS" starttime="20201115 22:11:41.360" endtime="20201115 22:11:41.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:41.364" level="INFO">VALUE: [2.4026999999999382e-05, 2.408300000000113e-05, 2.4041999999998426e-05, 2.4026999999999382e-05, 2.3985999999996677e-05, 2.4013999999999286e-05, 2.4027999999998856e-05, 2.4040999999998952e-05, 2.4040999999998952e-05, 2.4041999999998426e-05, 2.4040999999998952e-05, 2.4040999999998952e-05, 2.404100000000242e-05, 2.4028000000002325e-05, 2.4013999999995816e-05, 2.405500000000199e-05, 2.3986000000003616e-05, 2.4042000000001895e-05, 2.3986000000003616e-05, 2.4028000000002325e-05, 2.404100000000242e-05, 2.4028000000002325e-05, 2.4056000000001465e-05, 2.4014000000002755e-05, 2.4028000000002325e-05, 2.3986000000003616e-05, 2.4070000000001035e-05, 2.4026999999995913e-05, 2.4040999999995483e-05, 2.4042000000001895e-05, 2.4000000000003185e-05, 2.4056000000001465e-05, 2.4027999999995386e-05, 2.4056000000001465e-05, 2.4042000000001895e-05, 2.4042000000001895e-05, 2.4054999999995053e-05, 2.4027999999995386e-05, 2.4041999999994956e-05, 2.4041999999994956e-05, 2.4028000000002325e-05, 2.4056000000001465e-05, 2.4014000000002755e-05, 2.4027999999995386e-05, 2.4040999999995483e-05, 2.4013999999995816e-05, 2.4013999999995816e-05, 2.4111999999999745e-05, 2.402700000000285e-05, 2.4014000000002755e-05]</msg>
<status status="PASS" starttime="20201115 22:11:41.362" endtime="20201115 22:11:41.364"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.357" endtime="20201115 22:11:41.365"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:41.367" endtime="20201115 22:11:41.368"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:41.371" endtime="20201115 22:11:41.390"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.369" endtime="20201115 22:11:41.391"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.365" endtime="20201115 22:11:41.391"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.982" endtime="20201115 22:11:41.392"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.980" endtime="20201115 22:11:41.392"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.980" endtime="20201115 22:11:41.392"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:41.394" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:41.404" endtime="20201115 22:11:41.438"></status>
</kw>
<msg timestamp="20201115 22:11:41.439" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:41.402" endtime="20201115 22:11:41.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:41.442" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:41.440" endtime="20201115 22:11:41.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:41.443" endtime="20201115 22:11:41.444"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.400" endtime="20201115 22:11:41.445"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.397" endtime="20201115 22:11:41.445"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:41.452" endtime="20201115 22:11:41.739"></status>
</kw>
<msg timestamp="20201115 22:11:41.742" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025578347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025603222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:41.450" endtime="20201115 22:11:41.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:41.750" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025578347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025603222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:41.743" endtime="20201115 22:11:41.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:41.752" endtime="20201115 22:11:41.753"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.448" endtime="20201115 22:11:41.754"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.446" endtime="20201115 22:11:41.754"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:41.759" level="INFO">${RESULT} = [{'time': 0.025603222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.487499999999712e-05, 'source_diff': 2.487499999999712e-05}, {'time': 0.026028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 22:11:41.755" endtime="20201115 22:11:41.759"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:41.772" level="INFO">${OVERHEAD} = {'diff': [2.487499999999712e-05, 2.488900000000016e-05, 2.488900000000016e-05, 2.488900000000016e-05, 2.4915999999999827e-05, 2.4846999999997982e-05, 2.484700000000145e-05, 2.4929999999999397e-05, 2.4...</msg>
<status status="PASS" starttime="20201115 22:11:41.760" endtime="20201115 22:11:41.773"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:41.777" level="INFO">NAME: 00-overhead-21-set</msg>
<status status="PASS" starttime="20201115 22:11:41.776" endtime="20201115 22:11:41.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:41.780" level="INFO">VALUE: [2.487499999999712e-05, 2.488900000000016e-05, 2.488900000000016e-05, 2.488900000000016e-05, 2.4915999999999827e-05, 2.4846999999997982e-05, 2.484700000000145e-05, 2.4929999999999397e-05, 2.487500000000059e-05, 2.488900000000016e-05, 2.488900000000016e-05, 2.490299999999973e-05, 2.4846999999997982e-05, 2.49169999999993e-05, 2.488900000000016e-05, 2.488900000000016e-05, 2.490299999999973e-05, 2.4860999999994082e-05, 2.481900000000231e-05, 2.4820000000001785e-05, 2.4806000000002215e-05, 2.484700000000145e-05, 2.488900000000016e-05, 2.487500000000059e-05, 2.4820000000001785e-05, 2.4915999999999827e-05, 2.490299999999973e-05, 2.484700000000145e-05, 2.4862000000000495e-05, 2.488900000000016e-05, 2.487500000000059e-05, 2.488900000000016e-05, 2.490299999999973e-05, 2.490300000000667e-05, 2.488900000000016e-05, 2.490299999999973e-05, 2.4874999999993652e-05, 2.487500000000059e-05, 2.487500000000059e-05, 2.488900000000016e-05, 2.488900000000016e-05, 2.49169999999993e-05, 2.495899999999801e-05, 2.488900000000016e-05, 2.481900000000231e-05, 2.484700000000145e-05, 2.486100000000102e-05, 2.490299999999973e-05, 2.4806000000002215e-05, 2.484700000000145e-05]</msg>
<status status="PASS" starttime="20201115 22:11:41.778" endtime="20201115 22:11:41.780"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.773" endtime="20201115 22:11:41.781"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:41.783" endtime="20201115 22:11:41.784"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:41.787" endtime="20201115 22:11:41.806"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.785" endtime="20201115 22:11:41.807"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.781" endtime="20201115 22:11:41.808"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.395" endtime="20201115 22:11:41.808"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.393" endtime="20201115 22:11:41.808"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.392" endtime="20201115 22:11:41.808"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:41.811" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:41.820" endtime="20201115 22:11:41.856"></status>
</kw>
<msg timestamp="20201115 22:11:41.856" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:41.818" endtime="20201115 22:11:41.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:41.859" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:41.857" endtime="20201115 22:11:41.859"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:41.860" endtime="20201115 22:11:41.861"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.816" endtime="20201115 22:11:41.862"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.813" endtime="20201115 22:11:41.863"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:41.869" endtime="20201115 22:11:42.157"></status>
</kw>
<msg timestamp="20201115 22:11:42.160" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026341875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026367569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:41.868" endtime="20201115 22:11:42.160"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:42.168" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026341875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026367569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:42.161" endtime="20201115 22:11:42.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:42.169" endtime="20201115 22:11:42.171"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.865" endtime="20201115 22:11:42.171"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.863" endtime="20201115 22:11:42.172"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:42.176" level="INFO">${RESULT} = [{'time': 0.026367569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5693999999999717e-05, 'source_diff': 2.5693999999999717e-05}, {'time': 0.026811667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:42.173" endtime="20201115 22:11:42.176"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:42.190" level="INFO">${OVERHEAD} = {'diff': [2.5693999999999717e-05, 2.568099999999962e-05, 2.57230000000018e-05, 2.5735999999998427e-05, 2.5721999999998857e-05, 2.5750000000001466e-05, 2.5762999999998093e-05, 2.5721999999998857e-05, 2...</msg>
<status status="PASS" starttime="20201115 22:11:42.177" endtime="20201115 22:11:42.190"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:42.195" level="INFO">NAME: 00-overhead-22-set</msg>
<status status="PASS" starttime="20201115 22:11:42.194" endtime="20201115 22:11:42.195"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:42.197" level="INFO">VALUE: [2.5693999999999717e-05, 2.568099999999962e-05, 2.57230000000018e-05, 2.5735999999998427e-05, 2.5721999999998857e-05, 2.5750000000001466e-05, 2.5762999999998093e-05, 2.5721999999998857e-05, 2.5764000000001036e-05, 2.566700000000005e-05, 2.5749999999997997e-05, 2.558300000000263e-05, 2.5722000000005796e-05, 2.5804999999996803e-05, 2.5749999999997997e-05, 2.5736000000005366e-05, 2.569499999999919e-05, 2.5763999999997567e-05, 2.5722000000005796e-05, 2.5693999999999717e-05, 2.57369999999979e-05, 2.573700000000484e-05, 2.568099999999962e-05, 2.5707999999999287e-05, 2.5721999999998857e-05, 2.566700000000005e-05, 2.5749999999997997e-05, 2.5777000000004602e-05, 2.5693999999999717e-05, 2.569499999999919e-05, 2.568099999999962e-05, 2.5680000000000147e-05, 2.570899999999876e-05, 2.5721999999998857e-05, 2.5750000000004936e-05, 2.5721999999998857e-05, 2.5749999999997997e-05, 2.568099999999962e-05, 2.5735999999998427e-05, 2.5763999999997567e-05, 2.5763999999997567e-05, 2.5750000000004936e-05, 2.5749999999997997e-05, 2.5750000000004936e-05, 2.5763999999997567e-05, 2.5736000000005366e-05, 2.5749999999997997e-05, 2.569500000000613e-05, 2.5721999999998857e-05, 2.5735999999998427e-05]</msg>
<status status="PASS" starttime="20201115 22:11:42.196" endtime="20201115 22:11:42.198"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.191" endtime="20201115 22:11:42.199"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:42.201" endtime="20201115 22:11:42.202"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:42.205" endtime="20201115 22:11:42.224"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.203" endtime="20201115 22:11:42.225"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.199" endtime="20201115 22:11:42.225"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.811" endtime="20201115 22:11:42.225"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.810" endtime="20201115 22:11:42.226"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.809" endtime="20201115 22:11:42.226"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:42.228" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:42.237" endtime="20201115 22:11:42.273"></status>
</kw>
<msg timestamp="20201115 22:11:42.274" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:42.236" endtime="20201115 22:11:42.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:42.276" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:42.275" endtime="20201115 22:11:42.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:42.278" endtime="20201115 22:11:42.279"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.233" endtime="20201115 22:11:42.280"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.231" endtime="20201115 22:11:42.280"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:42.287" endtime="20201115 22:11:42.574"></status>
</kw>
<msg timestamp="20201115 22:11:42.577" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025819625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025846222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:42.285" endtime="20201115 22:11:42.577"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:42.585" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025819625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025846222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:42.578" endtime="20201115 22:11:42.586"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:42.587" endtime="20201115 22:11:42.588"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.283" endtime="20201115 22:11:42.589"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.281" endtime="20201115 22:11:42.589"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:42.594" level="INFO">${RESULT} = [{'time': 0.025846222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6596999999999732e-05, 'source_diff': 2.6596999999999732e-05}, {'time': 0.026319167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:42.590" endtime="20201115 22:11:42.594"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:42.607" level="INFO">${OVERHEAD} = {'diff': [2.6596999999999732e-05, 2.6542000000000926e-05, 2.662500000000234e-05, 2.6596999999999732e-05, 2.6583000000000162e-05, 2.6596999999999732e-05, 2.6597999999999206e-05, 2.6583000000000162e-05,...</msg>
<status status="PASS" starttime="20201115 22:11:42.595" endtime="20201115 22:11:42.608"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:42.612" level="INFO">NAME: 00-overhead-23-set</msg>
<status status="PASS" starttime="20201115 22:11:42.611" endtime="20201115 22:11:42.613"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:42.615" level="INFO">VALUE: [2.6596999999999732e-05, 2.6542000000000926e-05, 2.662500000000234e-05, 2.6596999999999732e-05, 2.6583000000000162e-05, 2.6596999999999732e-05, 2.6597999999999206e-05, 2.6583000000000162e-05, 2.6596999999999732e-05, 2.6583000000000162e-05, 2.6541999999997457e-05, 2.6528000000001356e-05, 2.65970000000032e-05, 2.6596999999996263e-05, 2.6610999999995832e-05, 2.658300000000363e-05, 2.6596999999996263e-05, 2.658300000000363e-05, 2.6568999999997123e-05, 2.6569999999996596e-05, 2.6611999999995306e-05, 2.6598000000002675e-05, 2.65970000000032e-05, 2.6555999999997026e-05, 2.6555999999997026e-05, 2.6527999999997887e-05, 2.65970000000032e-05, 2.6570000000003535e-05, 2.6527999999997887e-05, 2.655500000000449e-05, 2.661100000000277e-05, 2.6556000000003965e-05, 2.6583999999996166e-05, 2.6582999999996693e-05, 2.658300000000363e-05, 2.663900000000191e-05, 2.6583999999996166e-05, 2.661100000000277e-05, 2.6569999999996596e-05, 2.662500000000234e-05, 2.6596999999996263e-05, 2.6596999999996263e-05, 2.65970000000032e-05, 2.6596999999996263e-05, 2.6666000000001577e-05, 2.6624999999995402e-05, 2.6570000000003535e-05, 2.65970000000032e-05, 2.6541999999997457e-05, 2.658300000000363e-05]</msg>
<status status="PASS" starttime="20201115 22:11:42.613" endtime="20201115 22:11:42.616"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.608" endtime="20201115 22:11:42.616"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:42.619" endtime="20201115 22:11:42.620"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:42.622" endtime="20201115 22:11:42.642"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.621" endtime="20201115 22:11:42.642"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.617" endtime="20201115 22:11:42.643"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.229" endtime="20201115 22:11:42.643"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.227" endtime="20201115 22:11:42.643"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.226" endtime="20201115 22:11:42.643"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:42.646" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:42.655" endtime="20201115 22:11:42.690"></status>
</kw>
<msg timestamp="20201115 22:11:42.690" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:42.653" endtime="20201115 22:11:42.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:42.693" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:42.692" endtime="20201115 22:11:42.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:42.694" endtime="20201115 22:11:42.696"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.651" endtime="20201115 22:11:42.696"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.648" endtime="20201115 22:11:42.697"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:42.703" endtime="20201115 22:11:42.991"></status>
</kw>
<msg timestamp="20201115 22:11:42.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025174903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025202375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:42.702" endtime="20201115 22:11:42.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:43.002" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025174903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025202375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:42.995" endtime="20201115 22:11:43.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:43.003" endtime="20201115 22:11:43.005"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.699" endtime="20201115 22:11:43.005"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.697" endtime="20201115 22:11:43.006"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:43.010" level="INFO">${RESULT} = [{'time': 0.025202375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7472000000000607e-05, 'source_diff': 2.7472000000000607e-05}, {'time': 0.025706028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:43.007" endtime="20201115 22:11:43.015"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:43.029" level="INFO">${OVERHEAD} = {'diff': [2.7472000000000607e-05, 2.744499999999747e-05, 2.7457999999997568e-05, 2.744500000000094e-05, 2.7374999999999622e-05, 2.743100000000137e-05, 2.741699999999833e-05, 2.7429999999998428e-05, 2....</msg>
<status status="PASS" starttime="20201115 22:11:43.016" endtime="20201115 22:11:43.029"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:43.033" level="INFO">NAME: 00-overhead-24-set</msg>
<status status="PASS" starttime="20201115 22:11:43.032" endtime="20201115 22:11:43.034"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:43.036" level="INFO">VALUE: [2.7472000000000607e-05, 2.744499999999747e-05, 2.7457999999997568e-05, 2.744500000000094e-05, 2.7374999999999622e-05, 2.743100000000137e-05, 2.741699999999833e-05, 2.7429999999998428e-05, 2.743100000000137e-05, 2.7499999999999747e-05, 2.743100000000137e-05, 2.7429999999998428e-05, 2.7429999999998428e-05, 2.736100000000352e-05, 2.7499999999999747e-05, 2.744500000000094e-05, 2.744500000000094e-05, 2.7458000000001037e-05, 2.745900000000051e-05, 2.7430000000001897e-05, 2.737500000000309e-05, 2.7458000000001037e-05, 2.7444999999994002e-05, 2.7472000000000607e-05, 2.74170000000018e-05, 2.743100000000137e-05, 2.747300000000008e-05, 2.7444000000001467e-05, 2.7444000000001467e-05, 2.7582999999997693e-05, 2.745900000000051e-05, 2.7444000000001467e-05, 2.74170000000018e-05, 2.7513999999999317e-05, 2.7458000000001037e-05, 2.7416000000002327e-05, 2.745900000000051e-05, 2.74170000000018e-05, 2.737500000000309e-05, 2.741599999999539e-05, 2.7499999999999747e-05, 2.736100000000352e-05, 2.740300000000223e-05, 2.740300000000223e-05, 2.745900000000051e-05, 2.7444000000001467e-05, 2.744500000000094e-05, 2.7499999999999747e-05, 2.747300000000008e-05, 2.7458000000001037e-05]</msg>
<status status="PASS" starttime="20201115 22:11:43.035" endtime="20201115 22:11:43.036"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.030" endtime="20201115 22:11:43.037"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:43.039" endtime="20201115 22:11:43.041"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:43.043" endtime="20201115 22:11:43.062"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.041" endtime="20201115 22:11:43.063"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.038" endtime="20201115 22:11:43.063"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.646" endtime="20201115 22:11:43.064"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.645" endtime="20201115 22:11:43.064"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.644" endtime="20201115 22:11:43.064"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:43.066" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:43.076" endtime="20201115 22:11:43.117"></status>
</kw>
<msg timestamp="20201115 22:11:43.118" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:43.074" endtime="20201115 22:11:43.118"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:43.120" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:43.119" endtime="20201115 22:11:43.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:43.122" endtime="20201115 22:11:43.123"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.071" endtime="20201115 22:11:43.124"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.069" endtime="20201115 22:11:43.124"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:43.131" endtime="20201115 22:11:43.420"></status>
</kw>
<msg timestamp="20201115 22:11:43.423" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026665653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026693917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:43.129" endtime="20201115 22:11:43.423"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:43.431" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026665653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026693917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:43.424" endtime="20201115 22:11:43.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:43.433" endtime="20201115 22:11:43.435"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.127" endtime="20201115 22:11:43.435"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.125" endtime="20201115 22:11:43.436"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:43.440" level="INFO">${RESULT} = [{'time': 0.026693917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8264000000000067e-05, 'source_diff': 2.8264000000000067e-05}, {'time': 0.027220542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:43.437" endtime="20201115 22:11:43.440"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:43.454" level="INFO">${OVERHEAD} = {'diff': [2.8264000000000067e-05, 2.8236000000000927e-05, 2.8277999999999637e-05, 2.8305999999998777e-05, 2.8235999999997458e-05, 2.8304999999999303e-05, 2.8291999999999207e-05, 2.8318999999998873e-05...</msg>
<status status="PASS" starttime="20201115 22:11:43.441" endtime="20201115 22:11:43.454"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:43.459" level="INFO">NAME: 00-overhead-25-set</msg>
<status status="PASS" starttime="20201115 22:11:43.457" endtime="20201115 22:11:43.459"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:43.461" level="INFO">VALUE: [2.8264000000000067e-05, 2.8236000000000927e-05, 2.8277999999999637e-05, 2.8305999999998777e-05, 2.8235999999997458e-05, 2.8304999999999303e-05, 2.8291999999999207e-05, 2.8318999999998873e-05, 2.8348000000000956e-05, 2.8222000000001357e-05, 2.8319999999998346e-05, 2.8291999999999207e-05, 2.8277999999999637e-05, 2.8346999999998013e-05, 2.8277999999999637e-05, 2.8347999999997486e-05, 2.8304999999999303e-05, 2.8304999999999303e-05, 2.822300000000083e-05, 2.8305999999998777e-05, 2.8236000000000927e-05, 2.8291999999999207e-05, 2.8208000000001787e-05, 2.8249999999993558e-05, 2.8250000000000497e-05, 2.8236000000000927e-05, 2.8332999999998443e-05, 2.8320000000005285e-05, 2.820900000000126e-05, 2.8208000000001787e-05, 2.8236000000000927e-05, 2.8277999999999637e-05, 2.8304999999999303e-05, 2.8277999999999637e-05, 2.8290999999999733e-05, 2.8250000000000497e-05, 2.8222000000001357e-05, 2.82370000000004e-05, 2.8291999999999207e-05, 2.8278000000006576e-05, 2.8305999999998777e-05, 2.8291999999999207e-05, 2.8264000000000067e-05, 2.8264000000000067e-05, 2.8305999999998777e-05, 2.8264000000000067e-05, 2.8291999999999207e-05, 2.8290999999999733e-05, 2.8318999999998873e-05, 2.8290999999999733e-05]</msg>
<status status="PASS" starttime="20201115 22:11:43.460" endtime="20201115 22:11:43.461"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.455" endtime="20201115 22:11:43.462"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:43.464" endtime="20201115 22:11:43.466"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:43.468" endtime="20201115 22:11:43.487"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.466" endtime="20201115 22:11:43.488"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.463" endtime="20201115 22:11:43.488"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.067" endtime="20201115 22:11:43.489"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.065" endtime="20201115 22:11:43.489"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.065" endtime="20201115 22:11:43.489"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.283" endtime="20201115 22:11:43.489"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="teardown">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:43.496" endtime="20201115 22:11:43.515"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.494" endtime="20201115 22:11:43.516"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.491" endtime="20201115 22:11:43.516"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:11:33.207" endtime="20201115 22:11:43.517" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Remove List">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:43.525" endtime="20201115 22:11:43.544"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.523" endtime="20201115 22:11:43.545"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:43.559" endtime="20201115 22:11:43.580"></status>
</kw>
<msg timestamp="20201115 22:11:43.581" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:43.556" endtime="20201115 22:11:43.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:43.583" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:43.582" endtime="20201115 22:11:43.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:11:43.587" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:11:43.585" endtime="20201115 22:11:43.587"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:43.554" endtime="20201115 22:11:43.588"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:43.551" endtime="20201115 22:11:43.588"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.550" endtime="20201115 22:11:43.589"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:11:43.592" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:11:43.592" endtime="20201115 22:11:43.593"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.589" endtime="20201115 22:11:43.593"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.549" endtime="20201115 22:11:43.593"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.549" endtime="20201115 22:11:43.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:43.594" endtime="20201115 22:11:43.596"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.547" endtime="20201115 22:11:43.596"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.545" endtime="20201115 22:11:43.597"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.521" endtime="20201115 22:11:43.597"></status>
</kw>
<kw name="${n} IN RANGE [ 25 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:43.601" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:43.610" endtime="20201115 22:11:43.625"></status>
</kw>
<msg timestamp="20201115 22:11:43.625" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:43.608" endtime="20201115 22:11:43.625"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:43.628" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:43.626" endtime="20201115 22:11:43.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:43.629" endtime="20201115 22:11:43.631"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.605" endtime="20201115 22:11:43.631"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.603" endtime="20201115 22:11:43.632"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:43.638" endtime="20201115 22:11:43.924"></status>
</kw>
<msg timestamp="20201115 22:11:43.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.077124917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.077126931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:43.637" endtime="20201115 22:11:43.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:43.936" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.077124917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.077126931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:43.929" endtime="20201115 22:11:43.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:43.937" endtime="20201115 22:11:43.940"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.634" endtime="20201115 22:11:43.940"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.632" endtime="20201115 22:11:43.941"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:43.945" level="INFO">${RESULT} = [{'time': 0.077126931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.013999999994631e-06, 'source_diff': 2.013999999994631e-06}, {'time': 0.077212069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:43.941" endtime="20201115 22:11:43.946"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:43.959" level="INFO">${OVERHEAD} = {'diff': [2.013999999994631e-06, 1.9999999999881224e-06, 2.000000000002e-06, 1.9300000000110895e-06, 1.973000000002334e-06, 1.973000000002334e-06, 1.9999999999881224e-06, 2.02800000000114e-06, 1.98599...</msg>
<status status="PASS" starttime="20201115 22:11:43.946" endtime="20201115 22:11:43.959"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:43.964" level="INFO">NAME: 00-overhead-1-remove</msg>
<status status="PASS" starttime="20201115 22:11:43.963" endtime="20201115 22:11:43.964"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:43.966" level="INFO">VALUE: [2.013999999994631e-06, 1.9999999999881224e-06, 2.000000000002e-06, 1.9300000000110895e-06, 1.973000000002334e-06, 1.973000000002334e-06, 1.9999999999881224e-06, 2.02800000000114e-06, 1.9859999999954914e-06, 2.0409999999942974e-06, 2.000000000002e-06, 1.9859999999954914e-06, 2.000000000002e-06, 1.9720000000028604e-06, 2.000000000002e-06, 1.9859999999954914e-06, 1.9859999999954914e-06, 2.000000000002e-06, 2.000000000002e-06, 1.9859999999954914e-06, 2.013999999994631e-06, 2.02800000000114e-06, 2.0130000000090353e-06, 2.000000000002e-06, 2.014000000008509e-06, 1.9859999999954914e-06, 2.055000000000806e-06, 1.986000000009369e-06, 2.013999999994631e-06, 2.014000000008509e-06, 1.987000000008843e-06, 2.013999999994631e-06, 1.9309999999966854e-06, 2.014000000008509e-06, 1.9859999999954914e-06, 2.000000000002e-06, 2.013999999994631e-06, 1.9859999999954914e-06, 2.0549999999869284e-06, 2.0270000000016664e-06, 2.0270000000016664e-06, 1.9719999999889826e-06, 1.9720000000028604e-06, 2.000000000002e-06, 2.000000000002e-06, 1.986000000009369e-06, 2.014000000008509e-06, 1.9299999999972117e-06, 2.000000000002e-06, 1.9720000000028604e-06]</msg>
<status status="PASS" starttime="20201115 22:11:43.965" endtime="20201115 22:11:43.967"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.960" endtime="20201115 22:11:43.967"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:43.970" endtime="20201115 22:11:43.971"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:43.973" endtime="20201115 22:11:43.992"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.971" endtime="20201115 22:11:43.993"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.968" endtime="20201115 22:11:43.994"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.601" endtime="20201115 22:11:43.994"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.599" endtime="20201115 22:11:43.994"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.598" endtime="20201115 22:11:43.994"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:43.997" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:44.006" endtime="20201115 22:11:44.021"></status>
</kw>
<msg timestamp="20201115 22:11:44.022" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:44.004" endtime="20201115 22:11:44.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:44.024" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:44.023" endtime="20201115 22:11:44.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:44.025" endtime="20201115 22:11:44.027"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.002" endtime="20201115 22:11:44.028"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.999" endtime="20201115 22:11:44.028"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:44.035" endtime="20201115 22:11:44.322"></status>
</kw>
<msg timestamp="20201115 22:11:44.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025650153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025652389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:44.033" endtime="20201115 22:11:44.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:44.334" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025650153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025652389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:44.327" endtime="20201115 22:11:44.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:44.336" endtime="20201115 22:11:44.338"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.031" endtime="20201115 22:11:44.338"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.029" endtime="20201115 22:11:44.339"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:44.343" level="INFO">${RESULT} = [{'time': 0.025652389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2360000000026803e-06, 'source_diff': 2.2360000000026803e-06}, {'time': 0.025747611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:44.340" endtime="20201115 22:11:44.344"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:44.357" level="INFO">${OVERHEAD} = {'diff': [2.2360000000026803e-06, 2.235999999999211e-06, 2.25000000000225e-06, 2.167000000000835e-06, 2.319000000000626e-06, 2.2499999999987808e-06, 2.2229999999991146e-06, 2.2639999999983507e-06, 2.2...</msg>
<status status="PASS" starttime="20201115 22:11:44.344" endtime="20201115 22:11:44.358"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:44.362" level="INFO">NAME: 00-overhead-2-remove</msg>
<status status="PASS" starttime="20201115 22:11:44.361" endtime="20201115 22:11:44.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:44.365" level="INFO">VALUE: [2.2360000000026803e-06, 2.235999999999211e-06, 2.25000000000225e-06, 2.167000000000835e-06, 2.319000000000626e-06, 2.2499999999987808e-06, 2.2229999999991146e-06, 2.2639999999983507e-06, 2.26400000000182e-06, 2.25000000000225e-06, 2.2360000000026803e-06, 2.235999999999211e-06, 2.2499999999987808e-06, 2.235999999999211e-06, 2.27800000000139e-06, 2.276999999998447e-06, 2.26400000000182e-06, 2.235999999999211e-06, 2.2360000000026803e-06, 2.223000000002584e-06, 2.2499999999987808e-06, 2.2089999999995447e-06, 2.26400000000182e-06, 2.235999999999211e-06, 2.2360000000026803e-06, 2.2499999999987808e-06, 2.25000000000225e-06, 2.235999999999211e-06, 2.25000000000225e-06, 2.262999999998877e-06, 2.1529999999977956e-06, 2.305000000001056e-06, 2.221999999999641e-06, 2.2360000000026803e-06, 2.25000000000225e-06, 2.235999999999211e-06, 2.223000000002584e-06, 2.235999999999211e-06, 2.235999999999211e-06, 2.221999999999641e-06, 2.2639999999983507e-06, 2.305000000001056e-06, 2.221999999999641e-06, 2.27800000000139e-06, 2.26400000000182e-06, 2.221999999999641e-06, 2.25000000000225e-06, 2.2369999999986845e-06, 2.235999999999211e-06, 2.2499999999987808e-06]</msg>
<status status="PASS" starttime="20201115 22:11:44.363" endtime="20201115 22:11:44.365"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.358" endtime="20201115 22:11:44.366"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:44.368" endtime="20201115 22:11:44.369"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:44.372" endtime="20201115 22:11:44.391"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.370" endtime="20201115 22:11:44.392"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.366" endtime="20201115 22:11:44.392"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.997" endtime="20201115 22:11:44.392"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.995" endtime="20201115 22:11:44.393"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.995" endtime="20201115 22:11:44.393"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:44.395" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:44.404" endtime="20201115 22:11:44.423"></status>
</kw>
<msg timestamp="20201115 22:11:44.424" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:44.403" endtime="20201115 22:11:44.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:44.426" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:44.425" endtime="20201115 22:11:44.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:44.427" endtime="20201115 22:11:44.429"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.400" endtime="20201115 22:11:44.430"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.398" endtime="20201115 22:11:44.430"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:44.437" endtime="20201115 22:11:44.725"></status>
</kw>
<msg timestamp="20201115 22:11:44.728" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023998847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024001292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:44.436" endtime="20201115 22:11:44.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:44.736" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023998847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024001292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:44.729" endtime="20201115 22:11:44.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:44.737" endtime="20201115 22:11:44.739"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.433" endtime="20201115 22:11:44.739"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.431" endtime="20201115 22:11:44.740"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:44.744" level="INFO">${RESULT} = [{'time': 0.024001292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4450000000002248e-06, 'source_diff': 2.4450000000002248e-06}, {'time': 0.024105292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:44.741" endtime="20201115 22:11:44.744"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:44.759" level="INFO">${OVERHEAD} = {'diff': [2.4450000000002248e-06, 2.4589999999997947e-06, 2.4450000000002248e-06, 2.458000000000321e-06, 2.444000000000751e-06, 2.471999999999891e-06, 2.444000000000751e-06, 2.4589999999997947e-06, 2....</msg>
<status status="PASS" starttime="20201115 22:11:44.745" endtime="20201115 22:11:44.760"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:44.764" level="INFO">NAME: 00-overhead-3-remove</msg>
<status status="PASS" starttime="20201115 22:11:44.763" endtime="20201115 22:11:44.765"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:44.767" level="INFO">VALUE: [2.4450000000002248e-06, 2.4589999999997947e-06, 2.4450000000002248e-06, 2.458000000000321e-06, 2.444000000000751e-06, 2.471999999999891e-06, 2.444000000000751e-06, 2.4589999999997947e-06, 2.4999999999990308e-06, 2.458000000000321e-06, 2.458000000000321e-06, 2.5410000000017363e-06, 2.444000000000751e-06, 2.458000000000321e-06, 2.458000000000321e-06, 2.444000000000751e-06, 2.458000000000321e-06, 2.417000000001085e-06, 2.4999999999990308e-06, 2.4999999999990308e-06, 2.458000000000321e-06, 2.458000000000321e-06, 2.375000000002375e-06, 2.458000000000321e-06, 2.458000000000321e-06, 2.4589999999997947e-06, 2.4309999999971854e-06, 2.471999999999891e-06, 2.4300000000011812e-06, 2.4450000000002248e-06, 2.473000000002834e-06, 2.485999999999461e-06, 2.4729999999993646e-06, 2.471999999999891e-06, 2.471999999999891e-06, 2.4309999999971854e-06, 2.4439999999972817e-06, 2.485999999999461e-06, 2.458000000000321e-06, 2.444000000000751e-06, 2.4589999999997947e-06, 2.458000000000321e-06, 2.458000000000321e-06, 2.471999999999891e-06, 2.471999999999891e-06, 2.458000000000321e-06, 2.458000000000321e-06, 2.4579999999968516e-06, 2.431000000000655e-06, 2.444000000000751e-06]</msg>
<status status="PASS" starttime="20201115 22:11:44.765" endtime="20201115 22:11:44.767"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.760" endtime="20201115 22:11:44.768"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:44.770" endtime="20201115 22:11:44.771"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:44.774" endtime="20201115 22:11:44.793"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.772" endtime="20201115 22:11:44.794"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.768" endtime="20201115 22:11:44.794"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.396" endtime="20201115 22:11:44.794"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.394" endtime="20201115 22:11:44.795"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.393" endtime="20201115 22:11:44.795"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:44.797" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:44.806" endtime="20201115 22:11:44.825"></status>
</kw>
<msg timestamp="20201115 22:11:44.826" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:44.805" endtime="20201115 22:11:44.826"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:44.829" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:44.827" endtime="20201115 22:11:44.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:44.830" endtime="20201115 22:11:44.831"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.802" endtime="20201115 22:11:44.832"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.800" endtime="20201115 22:11:44.832"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:44.839" endtime="20201115 22:11:45.127"></status>
</kw>
<msg timestamp="20201115 22:11:45.130" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023931764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023934444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:44.838" endtime="20201115 22:11:45.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:45.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023931764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023934444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:45.131" endtime="20201115 22:11:45.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:45.140" endtime="20201115 22:11:45.141"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.835" endtime="20201115 22:11:45.142"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.833" endtime="20201115 22:11:45.142"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:45.147" level="INFO">${RESULT} = [{'time': 0.023934444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.679999999997962e-06, 'source_diff': 2.679999999997962e-06}, {'time': 0.024050319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:45.143" endtime="20201115 22:11:45.147"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:45.160" level="INFO">${OVERHEAD} = {'diff': [2.679999999997962e-06, 2.6520000000022914e-06, 2.653000000001765e-06, 2.679999999997962e-06, 2.639000000002195e-06, 2.749999999999281e-06, 2.6660000000018613e-06, 2.679999999997962e-06, 2.68...</msg>
<status status="PASS" starttime="20201115 22:11:45.148" endtime="20201115 22:11:45.161"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:45.165" level="INFO">NAME: 00-overhead-4-remove</msg>
<status status="PASS" starttime="20201115 22:11:45.164" endtime="20201115 22:11:45.165"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:45.168" level="INFO">VALUE: [2.679999999997962e-06, 2.6520000000022914e-06, 2.653000000001765e-06, 2.679999999997962e-06, 2.639000000002195e-06, 2.749999999999281e-06, 2.6660000000018613e-06, 2.679999999997962e-06, 2.681000000000905e-06, 2.6800000000014312e-06, 2.6529999999982956e-06, 2.6250000000026252e-06, 2.653000000001765e-06, 2.653000000001765e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.6800000000014312e-06, 2.667000000001335e-06, 2.6800000000014312e-06, 2.6249999999991558e-06, 2.681000000000905e-06, 2.6669999999978655e-06, 2.667000000001335e-06, 2.679999999997962e-06, 2.665999999998392e-06, 2.6529999999982956e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.651999999998822e-06, 2.667000000001335e-06, 2.651999999998822e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.653000000001765e-06, 2.681000000000905e-06, 2.679999999997962e-06, 2.653000000001765e-06, 2.695000000000475e-06, 2.667000000001335e-06, 2.653000000001765e-06, 2.653000000001765e-06, 2.695000000000475e-06, 2.639000000002195e-06, 2.667000000001335e-06, 2.6529999999982956e-06, 2.6669999999978655e-06, 2.6529999999982956e-06, 2.6660000000018613e-06, 2.6529999999982956e-06]</msg>
<status status="PASS" starttime="20201115 22:11:45.166" endtime="20201115 22:11:45.168"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.161" endtime="20201115 22:11:45.169"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:45.171" endtime="20201115 22:11:45.172"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:45.174" endtime="20201115 22:11:45.194"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.173" endtime="20201115 22:11:45.194"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.169" endtime="20201115 22:11:45.195"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.798" endtime="20201115 22:11:45.195"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.796" endtime="20201115 22:11:45.195"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.795" endtime="20201115 22:11:45.196"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:45.198" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:45.208" endtime="20201115 22:11:45.227"></status>
</kw>
<msg timestamp="20201115 22:11:45.228" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:45.206" endtime="20201115 22:11:45.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:45.230" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:45.229" endtime="20201115 22:11:45.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:45.231" endtime="20201115 22:11:45.233"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.203" endtime="20201115 22:11:45.233"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.201" endtime="20201115 22:11:45.234"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:45.241" endtime="20201115 22:11:45.528"></status>
</kw>
<msg timestamp="20201115 22:11:45.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025135139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025138083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:45.239" endtime="20201115 22:11:45.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:45.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025135139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025138083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:45.532" endtime="20201115 22:11:45.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:45.540" endtime="20201115 22:11:45.542"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.236" endtime="20201115 22:11:45.543"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.234" endtime="20201115 22:11:45.543"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:45.547" level="INFO">${RESULT} = [{'time': 0.025138083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9439999999977817e-06, 'source_diff': 2.9439999999977817e-06}, {'time': 0.025267625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:45.544" endtime="20201115 22:11:45.548"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:45.561" level="INFO">${OVERHEAD} = {'diff': [2.9439999999977817e-06, 2.860999999999836e-06, 2.8340000000001697e-06, 2.874999999999406e-06, 2.860999999999836e-06, 2.860999999999836e-06, 2.847000000000266e-06, 2.874999999999406e-06, 2.86...</msg>
<status status="PASS" starttime="20201115 22:11:45.548" endtime="20201115 22:11:45.561"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:45.566" level="INFO">NAME: 00-overhead-5-remove</msg>
<status status="PASS" starttime="20201115 22:11:45.565" endtime="20201115 22:11:45.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:45.568" level="INFO">VALUE: [2.9439999999977817e-06, 2.860999999999836e-06, 2.8340000000001697e-06, 2.874999999999406e-06, 2.860999999999836e-06, 2.860999999999836e-06, 2.847000000000266e-06, 2.874999999999406e-06, 2.860999999999836e-06, 2.860999999999836e-06, 2.860999999999836e-06, 2.889000000002445e-06, 2.889000000002445e-06, 2.887999999999502e-06, 2.889000000002445e-06, 2.874999999999406e-06, 2.847000000000266e-06, 2.860999999999836e-06, 2.8889999999989757e-06, 2.874999999999406e-06, 2.8619999999993095e-06, 2.9169999999981155e-06, 2.887999999999502e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.8750000000028753e-06, 2.8619999999993095e-06, 2.847000000000266e-06, 2.874999999999406e-06, 2.860999999999836e-06, 2.860999999999836e-06, 2.9160000000021113e-06, 2.874999999999406e-06, 2.847000000000266e-06, 2.860999999999836e-06, 2.860999999999836e-06, 2.874999999999406e-06, 2.847000000000266e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.847000000000266e-06, 2.874999999999406e-06, 2.8619999999993095e-06, 2.8889999999989757e-06, 2.847000000000266e-06, 2.860999999999836e-06, 2.860999999999836e-06]</msg>
<status status="PASS" starttime="20201115 22:11:45.567" endtime="20201115 22:11:45.569"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.562" endtime="20201115 22:11:45.569"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:45.572" endtime="20201115 22:11:45.574"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:45.576" endtime="20201115 22:11:45.595"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.574" endtime="20201115 22:11:45.596"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.570" endtime="20201115 22:11:45.596"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.199" endtime="20201115 22:11:45.597"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.197" endtime="20201115 22:11:45.597"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.196" endtime="20201115 22:11:45.597"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:45.599" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:45.608" endtime="20201115 22:11:45.629"></status>
</kw>
<msg timestamp="20201115 22:11:45.629" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:45.607" endtime="20201115 22:11:45.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:45.632" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:45.630" endtime="20201115 22:11:45.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:45.633" endtime="20201115 22:11:45.635"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.604" endtime="20201115 22:11:45.635"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.602" endtime="20201115 22:11:45.636"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:45.642" endtime="20201115 22:11:45.930"></status>
</kw>
<msg timestamp="20201115 22:11:45.933" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025673653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025676708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:45.641" endtime="20201115 22:11:45.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:45.941" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025673653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025676708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:45.934" endtime="20201115 22:11:45.942"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:45.943" endtime="20201115 22:11:45.944"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.638" endtime="20201115 22:11:45.945"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.636" endtime="20201115 22:11:45.945"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:45.950" level="INFO">${RESULT} = [{'time': 0.025676708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.054999999998337e-06, 'source_diff': 3.054999999998337e-06}, {'time': 0.025814861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:45.946" endtime="20201115 22:11:45.950"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:45.963" level="INFO">${OVERHEAD} = {'diff': [3.054999999998337e-06, 3.069000000001376e-06, 3.07000000000085e-06, 3.083000000000946e-06, 2.999999999999531e-06, 3.0689999999979067e-06, 3.0559999999978105e-06, 3.05600000000128e-06, 3.0969...</msg>
<status status="PASS" starttime="20201115 22:11:45.951" endtime="20201115 22:11:45.964"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:45.968" level="INFO">NAME: 00-overhead-6-remove</msg>
<status status="PASS" starttime="20201115 22:11:45.967" endtime="20201115 22:11:45.969"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:45.971" level="INFO">VALUE: [3.054999999998337e-06, 3.069000000001376e-06, 3.07000000000085e-06, 3.083000000000946e-06, 2.999999999999531e-06, 3.0689999999979067e-06, 3.0559999999978105e-06, 3.05600000000128e-06, 3.0969999999970466e-06, 3.097000000000516e-06, 3.0550000000018063e-06, 3.0839999999969503e-06, 3.083000000000946e-06, 3.083000000000946e-06, 3.07000000000085e-06, 3.05600000000128e-06, 3.069000000001376e-06, 3.083000000000946e-06, 3.0840000000004197e-06, 3.069000000001376e-06, 3.04200000000171e-06, 3.0689999999979067e-06, 3.0689999999979067e-06, 3.07000000000085e-06, 3.083000000000946e-06, 3.083000000000946e-06, 3.02800000000214e-06, 2.985999999999961e-06, 3.083000000000946e-06, 3.083000000000946e-06, 3.069000000001376e-06, 3.0979999999999897e-06, 3.083000000000946e-06, 3.083000000000946e-06, 3.07000000000085e-06, 3.0419999999982406e-06, 3.069000000001376e-06, 3.05600000000128e-06, 3.0559999999978105e-06, 3.083000000000946e-06, 3.041999999994771e-06, 3.05600000000128e-06, 3.069000000001376e-06, 3.097000000000516e-06, 3.0549999999948674e-06, 3.07000000000085e-06, 3.069000000001376e-06, 3.07000000000085e-06, 3.07000000000085e-06, 3.097000000000516e-06]</msg>
<status status="PASS" starttime="20201115 22:11:45.969" endtime="20201115 22:11:45.972"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.964" endtime="20201115 22:11:45.972"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:45.974" endtime="20201115 22:11:45.976"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:45.978" endtime="20201115 22:11:45.998"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.976" endtime="20201115 22:11:45.998"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.973" endtime="20201115 22:11:45.999"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.600" endtime="20201115 22:11:45.999"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.598" endtime="20201115 22:11:45.999"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.597" endtime="20201115 22:11:45.999"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:46.002" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:46.011" endtime="20201115 22:11:46.032"></status>
</kw>
<msg timestamp="20201115 22:11:46.032" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:46.009" endtime="20201115 22:11:46.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:46.035" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:46.033" endtime="20201115 22:11:46.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:46.036" endtime="20201115 22:11:46.037"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.007" endtime="20201115 22:11:46.038"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.004" endtime="20201115 22:11:46.038"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:46.045" endtime="20201115 22:11:46.333"></status>
</kw>
<msg timestamp="20201115 22:11:46.336" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025112056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025115333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:46.044" endtime="20201115 22:11:46.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:46.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025112056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025115333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:46.337" endtime="20201115 22:11:46.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:46.345" endtime="20201115 22:11:46.347"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.041" endtime="20201115 22:11:46.348"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.039" endtime="20201115 22:11:46.348"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:46.352" level="INFO">${RESULT} = [{'time': 0.025115333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.276999999999447e-06, 'source_diff': 3.276999999999447e-06}, {'time': 0.025265625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:46.349" endtime="20201115 22:11:46.353"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:46.368" level="INFO">${OVERHEAD} = {'diff': [3.276999999999447e-06, 3.2919999999984906e-06, 3.2779999999989207e-06, 3.26400000000282e-06, 3.304999999998587e-06, 3.2219999999971716e-06, 3.2779999999989207e-06, 3.3050000000020563e-06, 3....</msg>
<status status="PASS" starttime="20201115 22:11:46.353" endtime="20201115 22:11:46.368"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:46.373" level="INFO">NAME: 00-overhead-7-remove</msg>
<status status="PASS" starttime="20201115 22:11:46.372" endtime="20201115 22:11:46.373"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:46.376" level="INFO">VALUE: [3.276999999999447e-06, 3.2919999999984906e-06, 3.2779999999989207e-06, 3.26400000000282e-06, 3.304999999998587e-06, 3.2219999999971716e-06, 3.2779999999989207e-06, 3.3050000000020563e-06, 3.30600000000153e-06, 3.2779999999989207e-06, 3.290999999999017e-06, 3.2919999999984906e-06, 3.3059999999980605e-06, 3.249999999999781e-06, 3.347000000000766e-06, 3.29200000000196e-06, 3.2779999999989207e-06, 3.2910000000024864e-06, 3.29200000000196e-06, 3.27800000000239e-06, 3.30600000000153e-06, 3.276999999999447e-06, 3.290999999999017e-06, 3.2639999999993508e-06, 3.2779999999989207e-06, 3.3050000000020563e-06, 3.290999999999017e-06, 3.26400000000282e-06, 3.2779999999989207e-06, 3.3200000000011e-06, 3.2919999999984906e-06, 3.30600000000153e-06, 3.2779999999989207e-06, 3.29200000000196e-06, 3.2639999999993508e-06, 3.2779999999989207e-06, 3.27800000000239e-06, 3.3059999999980605e-06, 3.2779999999989207e-06, 3.290999999999017e-06, 3.27800000000239e-06, 3.3050000000020563e-06, 3.2500000000032503e-06, 3.2219999999971716e-06, 3.2910000000024864e-06, 3.29200000000196e-06, 3.2779999999954512e-06, 3.27800000000239e-06, 3.29200000000196e-06, 3.2500000000032503e-06]</msg>
<status status="PASS" starttime="20201115 22:11:46.374" endtime="20201115 22:11:46.377"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.369" endtime="20201115 22:11:46.378"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:46.380" endtime="20201115 22:11:46.381"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:46.384" endtime="20201115 22:11:46.403"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.382" endtime="20201115 22:11:46.404"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.378" endtime="20201115 22:11:46.404"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.002" endtime="20201115 22:11:46.404"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.001" endtime="20201115 22:11:46.405"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.000" endtime="20201115 22:11:46.405"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:46.407" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:46.416" endtime="20201115 22:11:46.438"></status>
</kw>
<msg timestamp="20201115 22:11:46.439" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:46.415" endtime="20201115 22:11:46.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:46.441" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:46.440" endtime="20201115 22:11:46.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:46.442" endtime="20201115 22:11:46.444"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.412" endtime="20201115 22:11:46.444"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.410" endtime="20201115 22:11:46.445"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:46.452" endtime="20201115 22:11:46.739"></status>
</kw>
<msg timestamp="20201115 22:11:46.742" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026755319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026758819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:46.450" endtime="20201115 22:11:46.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:46.750" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026755319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026758819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:46.743" endtime="20201115 22:11:46.750"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:46.751" endtime="20201115 22:11:46.753"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.447" endtime="20201115 22:11:46.753"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.445" endtime="20201115 22:11:46.754"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:46.758" level="INFO">${RESULT} = [{'time': 0.026758819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.500000000000031e-06, 'source_diff': 3.500000000000031e-06}, {'time': 0.026927778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:46.754" endtime="20201115 22:11:46.758"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:46.772" level="INFO">${OVERHEAD} = {'diff': [3.500000000000031e-06, 3.486000000000461e-06, 3.4859999999969915e-06, 3.486000000000461e-06, 3.5139999999996008e-06, 3.5139999999996008e-06, 3.4730000000003647e-06, 3.500000000000031e-06, 3....</msg>
<status status="PASS" starttime="20201115 22:11:46.759" endtime="20201115 22:11:46.772"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:46.777" level="INFO">NAME: 00-overhead-8-remove</msg>
<status status="PASS" starttime="20201115 22:11:46.776" endtime="20201115 22:11:46.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:46.779" level="INFO">VALUE: [3.500000000000031e-06, 3.486000000000461e-06, 3.4859999999969915e-06, 3.486000000000461e-06, 3.5139999999996008e-06, 3.5139999999996008e-06, 3.4730000000003647e-06, 3.500000000000031e-06, 3.486000000000461e-06, 3.5139999999996008e-06, 3.486000000000461e-06, 3.4730000000003647e-06, 3.500000000000031e-06, 3.500000000000031e-06, 3.458000000001321e-06, 3.500000000000031e-06, 3.4859999999969915e-06, 3.500000000000031e-06, 3.486000000000461e-06, 3.4719999999974216e-06, 3.472000000000891e-06, 3.500000000000031e-06, 3.486000000000461e-06, 3.4729999999968952e-06, 3.500000000000031e-06, 3.486000000000461e-06, 3.5139999999996008e-06, 3.4859999999969915e-06, 3.5000000000035003e-06, 3.5139999999961313e-06, 3.4720000000043605e-06, 3.5000000000035003e-06, 3.4860000000039304e-06, 3.4859999999969915e-06, 3.4859999999969915e-06, 3.5549999999953674e-06, 3.5000000000035003e-06, 3.5409999999957975e-06, 3.5139999999961313e-06, 3.5279999999957012e-06, 3.4859999999969915e-06, 3.4170000000055545e-06, 3.4719999999974216e-06, 3.4999999999965614e-06, 3.5140000000030702e-06, 3.52800000000264e-06, 3.5139999999961313e-06, 3.5140000000030702e-06, 3.4859999999969915e-06, 3.4859999999969915e-06]</msg>
<status status="PASS" starttime="20201115 22:11:46.778" endtime="20201115 22:11:46.780"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.773" endtime="20201115 22:11:46.780"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:46.783" endtime="20201115 22:11:46.784"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:46.786" endtime="20201115 22:11:46.806"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.785" endtime="20201115 22:11:46.806"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.781" endtime="20201115 22:11:46.807"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.408" endtime="20201115 22:11:46.807"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.406" endtime="20201115 22:11:46.807"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.405" endtime="20201115 22:11:46.808"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:46.810" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:46.819" endtime="20201115 22:11:46.840"></status>
</kw>
<msg timestamp="20201115 22:11:46.840" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:46.817" endtime="20201115 22:11:46.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:46.842" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:46.841" endtime="20201115 22:11:46.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:46.844" endtime="20201115 22:11:46.845"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.815" endtime="20201115 22:11:46.846"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.813" endtime="20201115 22:11:46.846"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:46.853" endtime="20201115 22:11:47.141"></status>
</kw>
<msg timestamp="20201115 22:11:47.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025894139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025897847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:46.851" endtime="20201115 22:11:47.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:47.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025894139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025897847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:47.145" endtime="20201115 22:11:47.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:47.154" endtime="20201115 22:11:47.156"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.849" endtime="20201115 22:11:47.156"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.847" endtime="20201115 22:11:47.157"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:47.161" level="INFO">${RESULT} = [{'time': 0.025897847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.708000000001571e-06, 'source_diff': 3.708000000001571e-06}, {'time': 0.026079389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:47.158" endtime="20201115 22:11:47.161"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:47.175" level="INFO">${OVERHEAD} = {'diff': [3.708000000001571e-06, 3.708000000001571e-06, 3.7089999999975753e-06, 3.708000000001571e-06, 3.6940000000020012e-06, 3.708000000001571e-06, 3.681000000001905e-06, 3.6940000000020012e-06, 3.7...</msg>
<status status="PASS" starttime="20201115 22:11:47.162" endtime="20201115 22:11:47.175"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:47.180" level="INFO">NAME: 00-overhead-9-remove</msg>
<status status="PASS" starttime="20201115 22:11:47.179" endtime="20201115 22:11:47.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:47.182" level="INFO">VALUE: [3.708000000001571e-06, 3.708000000001571e-06, 3.7089999999975753e-06, 3.708000000001571e-06, 3.6940000000020012e-06, 3.708000000001571e-06, 3.681000000001905e-06, 3.6940000000020012e-06, 3.7230000000006147e-06, 3.763999999999851e-06, 3.695000000001475e-06, 3.693999999998532e-06, 3.6949999999980054e-06, 3.681000000001905e-06, 3.679999999998962e-06, 3.6529999999992957e-06, 3.708000000001571e-06, 3.7079999999981017e-06, 3.763000000000377e-06, 3.750000000000281e-06, 3.695000000001475e-06, 3.736000000000711e-06, 3.695000000001475e-06, 3.6940000000020012e-06, 3.7359999999972415e-06, 3.6949999999980054e-06, 3.7089999999975753e-06, 3.7079999999981017e-06, 3.709000000001045e-06, 3.6809999999984355e-06, 3.6950000000049443e-06, 3.6950000000049443e-06, 3.693999999998532e-06, 3.6949999999980054e-06, 3.6940000000054707e-06, 3.6949999999980054e-06, 3.7089999999975753e-06, 3.6809999999984355e-06, 3.7079999999981017e-06, 3.7500000000037503e-06, 3.7079999999981017e-06, 3.666000000006331e-06, 3.611000000000586e-06, 3.7639999999963814e-06, 3.6809999999984355e-06, 3.7500000000037503e-06, 3.7629999999969077e-06, 3.679999999998962e-06, 3.6810000000053744e-06, 3.6810000000053744e-06]</msg>
<status status="PASS" starttime="20201115 22:11:47.181" endtime="20201115 22:11:47.183"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.176" endtime="20201115 22:11:47.183"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:47.185" endtime="20201115 22:11:47.187"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:47.189" endtime="20201115 22:11:47.209"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.187" endtime="20201115 22:11:47.209"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.184" endtime="20201115 22:11:47.210"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.810" endtime="20201115 22:11:47.210"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.809" endtime="20201115 22:11:47.210"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.808" endtime="20201115 22:11:47.210"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:47.213" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:47.222" endtime="20201115 22:11:47.242"></status>
</kw>
<msg timestamp="20201115 22:11:47.243" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:47.220" endtime="20201115 22:11:47.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:47.245" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:47.244" endtime="20201115 22:11:47.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:47.246" endtime="20201115 22:11:47.248"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.218" endtime="20201115 22:11:47.249"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.215" endtime="20201115 22:11:47.249"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:47.256" endtime="20201115 22:11:47.544"></status>
</kw>
<msg timestamp="20201115 22:11:47.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025061722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025065625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:47.255" endtime="20201115 22:11:47.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:47.555" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025061722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025065625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:47.548" endtime="20201115 22:11:47.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:47.557" endtime="20201115 22:11:47.558"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.252" endtime="20201115 22:11:47.559"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.250" endtime="20201115 22:11:47.559"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:47.563" level="INFO">${RESULT} = [{'time': 0.025065625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.902999999999546e-06, 'source_diff': 3.902999999999546e-06}, {'time': 0.025261, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 22:11:47.560" endtime="20201115 22:11:47.564"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:47.577" level="INFO">${OVERHEAD} = {'diff': [3.902999999999546e-06, 3.902999999999546e-06, 3.902000000000072e-06, 3.915999999999642e-06, 3.917000000002585e-06, 3.902999999999546e-06, 3.902000000000072e-06, 3.902999999999546e-06, 3.9590...</msg>
<status status="PASS" starttime="20201115 22:11:47.565" endtime="20201115 22:11:47.578"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:47.582" level="INFO">NAME: 00-overhead-10-remove</msg>
<status status="PASS" starttime="20201115 22:11:47.581" endtime="20201115 22:11:47.583"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:47.585" level="INFO">VALUE: [3.902999999999546e-06, 3.902999999999546e-06, 3.902000000000072e-06, 3.915999999999642e-06, 3.917000000002585e-06, 3.902999999999546e-06, 3.902000000000072e-06, 3.902999999999546e-06, 3.959000000001295e-06, 3.917000000002585e-06, 3.888999999999976e-06, 3.888999999999976e-06, 3.902999999999546e-06, 3.902000000000072e-06, 3.902999999999546e-06, 3.902999999999546e-06, 3.902999999999546e-06, 3.888999999999976e-06, 3.888999999999976e-06, 3.9859999999974915e-06, 3.945000000001725e-06, 3.888999999999976e-06, 3.9309999999986855e-06, 3.902999999999546e-06, 3.902999999999546e-06, 3.929999999999212e-06, 3.902999999999546e-06, 3.902999999999546e-06, 3.902000000000072e-06, 3.916999999999116e-06, 3.902999999999546e-06, 3.916999999999116e-06, 3.902999999999546e-06, 3.888999999999976e-06, 3.902999999999546e-06, 3.929999999999212e-06, 3.902999999999546e-06, 3.929999999999212e-06, 3.929999999999212e-06, 3.902999999999546e-06, 3.902000000000072e-06, 3.902999999999546e-06, 3.916999999999116e-06, 3.902999999999546e-06, 3.875000000000406e-06, 3.902999999999546e-06, 3.916999999999116e-06, 3.916999999999116e-06, 3.902000000000072e-06, 3.902999999999546e-06]</msg>
<status status="PASS" starttime="20201115 22:11:47.583" endtime="20201115 22:11:47.585"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.578" endtime="20201115 22:11:47.586"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:47.588" endtime="20201115 22:11:47.589"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:47.592" endtime="20201115 22:11:47.611"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.590" endtime="20201115 22:11:47.612"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.586" endtime="20201115 22:11:47.612"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.213" endtime="20201115 22:11:47.612"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.212" endtime="20201115 22:11:47.613"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.211" endtime="20201115 22:11:47.613"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:47.615" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:47.624" endtime="20201115 22:11:47.648"></status>
</kw>
<msg timestamp="20201115 22:11:47.649" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:47.623" endtime="20201115 22:11:47.649"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:47.652" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:47.650" endtime="20201115 22:11:47.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:47.653" endtime="20201115 22:11:47.655"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.620" endtime="20201115 22:11:47.655"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.618" endtime="20201115 22:11:47.656"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:47.662" endtime="20201115 22:11:47.950"></status>
</kw>
<msg timestamp="20201115 22:11:47.953" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0245995, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024603639, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:11:47.661" endtime="20201115 22:11:47.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:47.961" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0245995, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024603639, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:11:47.954" endtime="20201115 22:11:47.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:47.962" endtime="20201115 22:11:47.964"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.658" endtime="20201115 22:11:47.965"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.656" endtime="20201115 22:11:47.965"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:47.969" level="INFO">${RESULT} = [{'time': 0.024603639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.139000000000226e-06, 'source_diff': 4.139000000000226e-06}, {'time': 0.024816972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:47.966" endtime="20201115 22:11:47.970"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:47.984" level="INFO">${OVERHEAD} = {'diff': [4.139000000000226e-06, 4.096999999998047e-06, 4.111000000001086e-06, 4.027999999999671e-06, 4.1249999999971865e-06, 4.111000000001086e-06, 4.097000000001516e-06, 4.125000000000656e-06, 4.111...</msg>
<status status="PASS" starttime="20201115 22:11:47.970" endtime="20201115 22:11:47.985"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:47.989" level="INFO">NAME: 00-overhead-11-remove</msg>
<status status="PASS" starttime="20201115 22:11:47.988" endtime="20201115 22:11:47.990"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:47.992" level="INFO">VALUE: [4.139000000000226e-06, 4.096999999998047e-06, 4.111000000001086e-06, 4.027999999999671e-06, 4.1249999999971865e-06, 4.111000000001086e-06, 4.097000000001516e-06, 4.125000000000656e-06, 4.111000000001086e-06, 4.1249999999971865e-06, 4.111000000001086e-06, 4.08399999999795e-06, 4.096999999998047e-06, 4.069000000002376e-06, 4.111000000001086e-06, 4.1809999999989356e-06, 4.179999999999462e-06, 4.11200000000056e-06, 4.111000000001086e-06, 4.125000000000656e-06, 4.1109999999976166e-06, 4.1109999999976166e-06, 4.125000000000656e-06, 4.1249999999971865e-06, 4.1809999999989356e-06, 4.111000000001086e-06, 4.139000000000226e-06, 4.11200000000056e-06, 4.165999999999892e-06, 4.125000000000656e-06, 4.1109999999976166e-06, 4.1109999999976166e-06, 4.096999999994577e-06, 4.139000000000226e-06, 4.125000000000656e-06, 4.125000000000656e-06, 4.096999999994577e-06, 4.111000000001086e-06, 4.111000000001086e-06, 4.111000000001086e-06, 4.138000000000752e-06, 4.125000000000656e-06, 4.111000000001086e-06, 4.111000000001086e-06, 4.082999999995007e-06, 4.083000000001946e-06, 4.111000000001086e-06, 4.125000000000656e-06, 4.125000000000656e-06, 4.096999999994577e-06]</msg>
<status status="PASS" starttime="20201115 22:11:47.990" endtime="20201115 22:11:47.992"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.985" endtime="20201115 22:11:47.993"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:47.995" endtime="20201115 22:11:47.996"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:47.999" endtime="20201115 22:11:48.018"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.997" endtime="20201115 22:11:48.019"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.993" endtime="20201115 22:11:48.019"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.616" endtime="20201115 22:11:48.020"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.614" endtime="20201115 22:11:48.020"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.613" endtime="20201115 22:11:48.020"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:48.022" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:48.036" endtime="20201115 22:11:48.060"></status>
</kw>
<msg timestamp="20201115 22:11:48.061" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:48.034" endtime="20201115 22:11:48.061"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:48.063" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:48.062" endtime="20201115 22:11:48.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:48.065" endtime="20201115 22:11:48.066"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.032" endtime="20201115 22:11:48.067"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.025" endtime="20201115 22:11:48.067"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:48.074" endtime="20201115 22:11:48.361"></status>
</kw>
<msg timestamp="20201115 22:11:48.364" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029450931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029455278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:48.072" endtime="20201115 22:11:48.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:48.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029450931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029455278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:48.365" endtime="20201115 22:11:48.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:48.373" endtime="20201115 22:11:48.375"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.070" endtime="20201115 22:11:48.375"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.068" endtime="20201115 22:11:48.376"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:48.380" level="INFO">${RESULT} = [{'time': 0.029455278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.347000000001766e-06, 'source_diff': 4.347000000001766e-06}, {'time': 0.029686319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:48.376" endtime="20201115 22:11:48.380"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:48.394" level="INFO">${OVERHEAD} = {'diff': [4.347000000001766e-06, 4.332999999998727e-06, 4.277999999999921e-06, 4.333000000002196e-06, 4.305999999999061e-06, 4.291000000000017e-06, 4.3199999999986305e-06, 4.346999999998297e-06, 4.320...</msg>
<status status="PASS" starttime="20201115 22:11:48.381" endtime="20201115 22:11:48.394"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:48.399" level="INFO">NAME: 00-overhead-12-remove</msg>
<status status="PASS" starttime="20201115 22:11:48.398" endtime="20201115 22:11:48.400"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:48.402" level="INFO">VALUE: [4.347000000001766e-06, 4.332999999998727e-06, 4.277999999999921e-06, 4.333000000002196e-06, 4.305999999999061e-06, 4.291000000000017e-06, 4.3199999999986305e-06, 4.346999999998297e-06, 4.3200000000021e-06, 4.30600000000253e-06, 4.347000000001766e-06, 4.319999999995161e-06, 4.2499999999973115e-06, 4.318999999995687e-06, 4.319000000002626e-06, 4.333999999994731e-06, 4.347000000001766e-06, 4.3200000000021e-06, 4.33400000000167e-06, 4.36200000000081e-06, 4.361000000001336e-06, 4.346999999994827e-06, 4.29200000000296e-06, 4.2909999999965476e-06, 4.305000000003056e-06, 4.33400000000167e-06, 4.347000000001766e-06, 4.30600000000253e-06, 4.319000000002626e-06, 4.319000000002626e-06, 4.333000000002196e-06, 4.333000000002196e-06, 4.30600000000253e-06, 4.332999999995257e-06, 4.361000000001336e-06, 4.319000000002626e-06, 4.333000000002196e-06, 4.319999999995161e-06, 4.333000000002196e-06, 4.318999999995687e-06, 4.3200000000021e-06, 4.333000000002196e-06, 4.263999999996881e-06, 4.277999999996451e-06, 4.319999999995161e-06, 4.318999999995687e-06, 4.319999999995161e-06, 4.3200000000021e-06, 4.263999999996881e-06, 4.318999999995687e-06]</msg>
<status status="PASS" starttime="20201115 22:11:48.400" endtime="20201115 22:11:48.402"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.395" endtime="20201115 22:11:48.403"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:48.406" endtime="20201115 22:11:48.407"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:48.410" endtime="20201115 22:11:48.430"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.408" endtime="20201115 22:11:48.430"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.404" endtime="20201115 22:11:48.431"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.023" endtime="20201115 22:11:48.431"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.021" endtime="20201115 22:11:48.431"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.020" endtime="20201115 22:11:48.431"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:48.434" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:48.443" endtime="20201115 22:11:48.468"></status>
</kw>
<msg timestamp="20201115 22:11:48.469" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:48.441" endtime="20201115 22:11:48.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:48.471" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:48.470" endtime="20201115 22:11:48.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:48.473" endtime="20201115 22:11:48.474"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.439" endtime="20201115 22:11:48.475"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.436" endtime="20201115 22:11:48.475"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:48.482" endtime="20201115 22:11:48.770"></status>
</kw>
<msg timestamp="20201115 22:11:48.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025100597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025105125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:48.480" endtime="20201115 22:11:48.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:48.781" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025100597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025105125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:48.774" endtime="20201115 22:11:48.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:48.782" endtime="20201115 22:11:48.784"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.478" endtime="20201115 22:11:48.784"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.476" endtime="20201115 22:11:48.785"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:48.789" level="INFO">${RESULT} = [{'time': 0.025105125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.528000000000171e-06, 'source_diff': 4.528000000000171e-06}, {'time': 0.025355361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:48.786" endtime="20201115 22:11:48.789"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:48.803" level="INFO">${OVERHEAD} = {'diff': [4.528000000000171e-06, 4.528000000000171e-06, 4.528000000000171e-06, 4.528000000000171e-06, 4.528000000000171e-06, 4.541000000000267e-06, 4.472000000001891e-06, 4.541000000000267e-06, 4.4579...</msg>
<status status="PASS" starttime="20201115 22:11:48.790" endtime="20201115 22:11:48.803"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:48.808" level="INFO">NAME: 00-overhead-13-remove</msg>
<status status="PASS" starttime="20201115 22:11:48.806" endtime="20201115 22:11:48.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:48.810" level="INFO">VALUE: [4.528000000000171e-06, 4.528000000000171e-06, 4.528000000000171e-06, 4.528000000000171e-06, 4.528000000000171e-06, 4.541000000000267e-06, 4.472000000001891e-06, 4.541000000000267e-06, 4.457999999998852e-06, 4.555999999999311e-06, 4.528000000000171e-06, 4.528000000000171e-06, 4.527000000000697e-06, 4.513000000001127e-06, 4.541999999999741e-06, 4.514000000000601e-06, 4.541999999999741e-06, 4.528000000000171e-06, 4.527000000000697e-06, 4.541999999999741e-06, 4.541000000000267e-06, 4.54200000000321e-06, 4.513999999997131e-06, 4.541999999999741e-06, 4.500000000001031e-06, 4.52800000000364e-06, 4.51400000000407e-06, 4.540999999996798e-06, 4.527999999996701e-06, 4.54200000000321e-06, 4.5410000000037365e-06, 4.582999999995507e-06, 4.5549999999963675e-06, 4.526999999997228e-06, 4.541999999996271e-06, 4.485999999997992e-06, 4.527999999996701e-06, 4.54200000000321e-06, 4.527000000004167e-06, 4.569000000002876e-06, 4.526999999997228e-06, 4.527999999996701e-06, 4.527999999996701e-06, 4.5000000000045e-06, 4.52800000000364e-06, 4.5410000000037365e-06, 4.527999999996701e-06, 4.5549999999963675e-06, 4.527999999996701e-06, 4.5410000000037365e-06]</msg>
<status status="PASS" starttime="20201115 22:11:48.809" endtime="20201115 22:11:48.811"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.804" endtime="20201115 22:11:48.811"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:48.814" endtime="20201115 22:11:48.815"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:48.818" endtime="20201115 22:11:48.837"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.816" endtime="20201115 22:11:48.838"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.812" endtime="20201115 22:11:48.838"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.434" endtime="20201115 22:11:48.839"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.433" endtime="20201115 22:11:48.839"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.432" endtime="20201115 22:11:48.839"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:48.841" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:48.850" endtime="20201115 22:11:48.879"></status>
</kw>
<msg timestamp="20201115 22:11:48.880" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:48.849" endtime="20201115 22:11:48.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:48.882" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:48.881" endtime="20201115 22:11:48.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:48.883" endtime="20201115 22:11:48.885"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.846" endtime="20201115 22:11:48.886"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.844" endtime="20201115 22:11:48.886"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:48.893" endtime="20201115 22:11:49.180"></status>
</kw>
<msg timestamp="20201115 22:11:49.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02450175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0245065, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:11:48.891" endtime="20201115 22:11:49.184"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:49.192" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02450175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0245065, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:11:49.185" endtime="20201115 22:11:49.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:49.193" endtime="20201115 22:11:49.195"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.889" endtime="20201115 22:11:49.195"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.887" endtime="20201115 22:11:49.196"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:49.200" level="INFO">${RESULT} = [{'time': 0.0245065, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.750000000001281e-06, 'source_diff': 4.750000000001281e-06}, {'time': 0.024777431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:11:49.196" endtime="20201115 22:11:49.200"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:49.214" level="INFO">${OVERHEAD} = {'diff': [4.750000000001281e-06, 4.7499999999978115e-06, 4.750000000001281e-06, 4.7499999999978115e-06, 4.736000000001711e-06, 4.736000000001711e-06, 4.721999999998672e-06, 4.764000000000851e-06, 4.73...</msg>
<status status="PASS" starttime="20201115 22:11:49.201" endtime="20201115 22:11:49.214"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:49.218" level="INFO">NAME: 00-overhead-14-remove</msg>
<status status="PASS" starttime="20201115 22:11:49.217" endtime="20201115 22:11:49.219"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:49.221" level="INFO">VALUE: [4.750000000001281e-06, 4.7499999999978115e-06, 4.750000000001281e-06, 4.7499999999978115e-06, 4.736000000001711e-06, 4.736000000001711e-06, 4.721999999998672e-06, 4.764000000000851e-06, 4.736000000001711e-06, 4.736000000001711e-06, 4.750000000001281e-06, 4.7499999999978115e-06, 4.708000000002571e-06, 4.736000000001711e-06, 4.8199999999991305e-06, 4.735999999998242e-06, 4.735999999998242e-06, 4.736000000001711e-06, 4.736000000001711e-06, 4.735999999998242e-06, 4.7499999999978115e-06, 4.737000000001185e-06, 4.736000000001711e-06, 4.736000000001711e-06, 4.736000000001711e-06, 4.764000000000851e-06, 4.722999999998145e-06, 4.736999999997715e-06, 4.7499999999978115e-06, 4.7639999999973814e-06, 4.7360000000051805e-06, 4.736999999997715e-06, 4.7639999999973814e-06, 4.7360000000051805e-06, 4.721999999998672e-06, 4.735999999998242e-06, 4.737000000004654e-06, 4.6949999999990055e-06, 4.722999999998145e-06, 4.735999999998242e-06, 4.721999999998672e-06, 4.736999999997715e-06, 4.7499999999978115e-06, 4.7360000000051805e-06, 4.735999999998242e-06, 4.735999999998242e-06, 4.666000000000392e-06, 4.722999999998145e-06, 4.7639999999973814e-06, 4.7499999999978115e-06]</msg>
<status status="PASS" starttime="20201115 22:11:49.219" endtime="20201115 22:11:49.222"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.214" endtime="20201115 22:11:49.222"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:49.225" endtime="20201115 22:11:49.226"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:49.228" endtime="20201115 22:11:49.248"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.227" endtime="20201115 22:11:49.249"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.223" endtime="20201115 22:11:49.249"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.842" endtime="20201115 22:11:49.249"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.840" endtime="20201115 22:11:49.250"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.839" endtime="20201115 22:11:49.250"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:49.252" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:49.261" endtime="20201115 22:11:49.287"></status>
</kw>
<msg timestamp="20201115 22:11:49.287" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:49.259" endtime="20201115 22:11:49.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:49.290" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:49.288" endtime="20201115 22:11:49.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:49.291" endtime="20201115 22:11:49.292"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.257" endtime="20201115 22:11:49.293"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.255" endtime="20201115 22:11:49.293"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:49.300" endtime="20201115 22:11:49.587"></status>
</kw>
<msg timestamp="20201115 22:11:49.590" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025727667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025732625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:49.298" endtime="20201115 22:11:49.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:49.598" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025727667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025732625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:49.591" endtime="20201115 22:11:49.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:49.599" endtime="20201115 22:11:49.601"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.296" endtime="20201115 22:11:49.602"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.294" endtime="20201115 22:11:49.602"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:49.606" level="INFO">${RESULT} = [{'time': 0.025732625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.957999999999352e-06, 'source_diff': 4.957999999999352e-06}, {'time': 0.026023333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:49.603" endtime="20201115 22:11:49.607"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:49.622" level="INFO">${OVERHEAD} = {'diff': [4.957999999999352e-06, 4.930000000000212e-06, 4.889000000000976e-06, 4.959000000002295e-06, 4.945000000002725e-06, 4.958000000002821e-06, 4.957999999999352e-06, 4.9999999999980616e-06, 4.945...</msg>
<status status="PASS" starttime="20201115 22:11:49.608" endtime="20201115 22:11:49.622"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:49.627" level="INFO">NAME: 00-overhead-15-remove</msg>
<status status="PASS" starttime="20201115 22:11:49.626" endtime="20201115 22:11:49.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:49.629" level="INFO">VALUE: [4.957999999999352e-06, 4.930000000000212e-06, 4.889000000000976e-06, 4.959000000002295e-06, 4.945000000002725e-06, 4.958000000002821e-06, 4.957999999999352e-06, 4.9999999999980616e-06, 4.945000000002725e-06, 4.917000000000116e-06, 4.889000000000976e-06, 5.000000000001531e-06, 4.945000000002725e-06, 4.9449999999992555e-06, 4.972000000002391e-06, 4.917000000000116e-06, 4.9449999999992555e-06, 4.9589999999988255e-06, 4.957999999999352e-06, 4.9449999999992555e-06, 4.958000000006291e-06, 4.9449999999992555e-06, 4.943999999999782e-06, 4.930000000000212e-06, 4.957999999999352e-06, 4.930999999999686e-06, 4.943999999999782e-06, 4.930000000000212e-06, 4.943999999999782e-06, 4.930000000000212e-06, 4.9449999999992555e-06, 4.971999999998922e-06, 4.930999999999686e-06, 4.943999999999782e-06, 4.888999999994037e-06, 4.958000000006291e-06, 4.9449999999992555e-06, 4.889000000000976e-06, 4.9449999999992555e-06, 4.957999999999352e-06, 4.957999999999352e-06, 4.930999999999686e-06, 4.957999999999352e-06, 4.930999999999686e-06, 4.943999999999782e-06, 4.9310000000066245e-06, 4.930000000000212e-06, 4.930999999999686e-06, 4.9449999999992555e-06, 4.943999999999782e-06]</msg>
<status status="PASS" starttime="20201115 22:11:49.628" endtime="20201115 22:11:49.630"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.623" endtime="20201115 22:11:49.630"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:49.633" endtime="20201115 22:11:49.634"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:49.636" endtime="20201115 22:11:49.656"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.635" endtime="20201115 22:11:49.656"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.631" endtime="20201115 22:11:49.657"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.253" endtime="20201115 22:11:49.657"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.251" endtime="20201115 22:11:49.657"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.250" endtime="20201115 22:11:49.658"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:49.660" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:49.669" endtime="20201115 22:11:49.697"></status>
</kw>
<msg timestamp="20201115 22:11:49.698" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:49.667" endtime="20201115 22:11:49.698"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:49.700" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:49.699" endtime="20201115 22:11:49.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:49.702" endtime="20201115 22:11:49.703"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.665" endtime="20201115 22:11:49.704"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.662" endtime="20201115 22:11:49.704"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:49.711" endtime="20201115 22:11:49.998"></status>
</kw>
<msg timestamp="20201115 22:11:50.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024763792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024769014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:49.709" endtime="20201115 22:11:50.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:50.009" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024763792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024769014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:50.002" endtime="20201115 22:11:50.010"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:50.011" endtime="20201115 22:11:50.013"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.707" endtime="20201115 22:11:50.013"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.705" endtime="20201115 22:11:50.014"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:50.018" level="INFO">${RESULT} = [{'time': 0.024769014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.221999999999172e-06, 'source_diff': 5.221999999999172e-06}, {'time': 0.025075458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:50.014" endtime="20201115 22:11:50.018"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:50.032" level="INFO">${OVERHEAD} = {'diff': [5.221999999999172e-06, 5.151999999997853e-06, 5.1249999999981866e-06, 5.167000000000366e-06, 5.096999999999047e-06, 5.152000000001322e-06, 5.166000000000892e-06, 5.166000000000892e-06, 5.138...</msg>
<status status="PASS" starttime="20201115 22:11:50.019" endtime="20201115 22:11:50.032"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:50.036" level="INFO">NAME: 00-overhead-16-remove</msg>
<status status="PASS" starttime="20201115 22:11:50.035" endtime="20201115 22:11:50.037"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:50.039" level="INFO">VALUE: [5.221999999999172e-06, 5.151999999997853e-06, 5.1249999999981866e-06, 5.167000000000366e-06, 5.096999999999047e-06, 5.152000000001322e-06, 5.166000000000892e-06, 5.166000000000892e-06, 5.1389999999977565e-06, 5.165999999997423e-06, 5.153000000000796e-06, 5.166000000000892e-06, 5.153000000000796e-06, 5.139000000001226e-06, 5.139000000001226e-06, 5.2089999999990755e-06, 5.152000000001322e-06, 5.139000000001226e-06, 5.207999999999602e-06, 5.180999999999936e-06, 5.207999999999602e-06, 5.1389999999977565e-06, 5.125000000001656e-06, 5.139000000001226e-06, 5.153000000000796e-06, 5.180999999999936e-06, 5.153000000000796e-06, 5.180999999999936e-06, 5.180999999999936e-06, 5.153000000000796e-06, 5.111000000002086e-06, 5.0689999999964375e-06, 5.153000000000796e-06, 5.153000000000796e-06, 5.235999999998742e-06, 5.222000000006111e-06, 5.152000000001322e-06, 5.097999999995051e-06, 5.152000000001322e-06, 5.139000000001226e-06, 5.139000000001226e-06, 5.125000000001656e-06, 5.125000000001656e-06, 5.139000000001226e-06, 5.139000000001226e-06, 5.221999999999172e-06, 5.110999999995147e-06, 5.153000000000796e-06, 5.180000000000462e-06, 5.167000000000366e-06]</msg>
<status status="PASS" starttime="20201115 22:11:50.038" endtime="20201115 22:11:50.039"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.033" endtime="20201115 22:11:50.040"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:50.042" endtime="20201115 22:11:50.044"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:50.046" endtime="20201115 22:11:50.065"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.044" endtime="20201115 22:11:50.066"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.041" endtime="20201115 22:11:50.066"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.660" endtime="20201115 22:11:50.067"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.659" endtime="20201115 22:11:50.067"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.658" endtime="20201115 22:11:50.067"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:50.069" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:50.078" endtime="20201115 22:11:50.111"></status>
</kw>
<msg timestamp="20201115 22:11:50.111" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:50.077" endtime="20201115 22:11:50.112"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:50.114" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:50.112" endtime="20201115 22:11:50.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:50.115" endtime="20201115 22:11:50.117"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.074" endtime="20201115 22:11:50.117"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.072" endtime="20201115 22:11:50.118"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:50.125" endtime="20201115 22:11:50.412"></status>
</kw>
<msg timestamp="20201115 22:11:50.415" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027300847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027306181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:50.123" endtime="20201115 22:11:50.415"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:50.423" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027300847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027306181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:50.416" endtime="20201115 22:11:50.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:50.425" endtime="20201115 22:11:50.426"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.120" endtime="20201115 22:11:50.427"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.118" endtime="20201115 22:11:50.428"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:50.432" level="INFO">${RESULT} = [{'time': 0.027306181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.3339999999992005e-06, 'source_diff': 5.3339999999992005e-06}, {'time': 0.027635306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:50.429" endtime="20201115 22:11:50.432"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:50.446" level="INFO">${OVERHEAD} = {'diff': [5.3339999999992005e-06, 5.36199999999834e-06, 5.374999999998437e-06, 5.3339999999992005e-06, 5.361000000002336e-06, 5.402999999997576e-06, 5.360999999998867e-06, 5.374999999998437e-06, 5.360...</msg>
<status status="PASS" starttime="20201115 22:11:50.433" endtime="20201115 22:11:50.446"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:50.451" level="INFO">NAME: 00-overhead-17-remove</msg>
<status status="PASS" starttime="20201115 22:11:50.450" endtime="20201115 22:11:50.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:50.453" level="INFO">VALUE: [5.3339999999992005e-06, 5.36199999999834e-06, 5.374999999998437e-06, 5.3339999999992005e-06, 5.361000000002336e-06, 5.402999999997576e-06, 5.360999999998867e-06, 5.374999999998437e-06, 5.360999999998867e-06, 5.360999999998867e-06, 5.346999999999297e-06, 5.360999999998867e-06, 5.333999999995731e-06, 5.319999999996161e-06, 5.361999999994871e-06, 5.375000000001906e-06, 5.375000000001906e-06, 5.361000000002336e-06, 5.360999999995397e-06, 5.361000000002336e-06, 5.375000000001906e-06, 5.360999999995397e-06, 5.360999999995397e-06, 5.36200000000181e-06, 5.374999999994967e-06, 5.347000000002766e-06, 5.361000000002336e-06, 5.36200000000181e-06, 5.333000000003196e-06, 5.375000000001906e-06, 5.388000000002002e-06, 5.361000000002336e-06, 5.346999999995827e-06, 5.430000000000712e-06, 5.346999999995827e-06, 5.402999999994107e-06, 5.346999999995827e-06, 5.360999999995397e-06, 5.361000000002336e-06, 5.417000000000616e-06, 5.375000000001906e-06, 5.361000000002336e-06, 5.403000000001046e-06, 5.361000000002336e-06, 5.347000000002766e-06, 5.34800000000224e-06, 5.389000000001476e-06, 5.361000000002336e-06, 5.361000000002336e-06, 5.361000000002336e-06]</msg>
<status status="PASS" starttime="20201115 22:11:50.452" endtime="20201115 22:11:50.454"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.447" endtime="20201115 22:11:50.454"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:50.457" endtime="20201115 22:11:50.458"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:50.460" endtime="20201115 22:11:50.480"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.459" endtime="20201115 22:11:50.480"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.455" endtime="20201115 22:11:50.481"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.070" endtime="20201115 22:11:50.481"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.068" endtime="20201115 22:11:50.481"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.067" endtime="20201115 22:11:50.482"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:50.484" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:50.493" endtime="20201115 22:11:50.523"></status>
</kw>
<msg timestamp="20201115 22:11:50.523" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:50.492" endtime="20201115 22:11:50.523"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:50.526" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:50.524" endtime="20201115 22:11:50.526"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:50.527" endtime="20201115 22:11:50.529"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.489" endtime="20201115 22:11:50.529"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.486" endtime="20201115 22:11:50.530"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:50.536" endtime="20201115 22:11:50.823"></status>
</kw>
<msg timestamp="20201115 22:11:50.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024646417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024652, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:11:50.535" endtime="20201115 22:11:50.827"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:50.835" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024646417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024652, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:11:50.828" endtime="20201115 22:11:50.835"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:50.836" endtime="20201115 22:11:50.838"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.532" endtime="20201115 22:11:50.838"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.530" endtime="20201115 22:11:50.839"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:50.843" level="INFO">${RESULT} = [{'time': 0.024652, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.582999999999977e-06, 'source_diff': 5.582999999999977e-06}, {'time': 0.025002958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 22:11:50.839" endtime="20201115 22:11:50.843"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:50.857" level="INFO">${OVERHEAD} = {'diff': [5.582999999999977e-06, 5.569000000000407e-06, 5.582999999999977e-06, 5.555000000000837e-06, 5.569999999999881e-06, 5.569000000000407e-06, 5.569999999999881e-06, 5.5689999999969375e-06, 5.582...</msg>
<status status="PASS" starttime="20201115 22:11:50.844" endtime="20201115 22:11:50.857"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:50.861" level="INFO">NAME: 00-overhead-18-remove</msg>
<status status="PASS" starttime="20201115 22:11:50.860" endtime="20201115 22:11:50.862"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:50.864" level="INFO">VALUE: [5.582999999999977e-06, 5.569000000000407e-06, 5.582999999999977e-06, 5.555000000000837e-06, 5.569999999999881e-06, 5.569000000000407e-06, 5.569999999999881e-06, 5.5689999999969375e-06, 5.582999999999977e-06, 5.610999999999117e-06, 5.556000000000311e-06, 5.569999999999881e-06, 5.5689999999969375e-06, 5.639000000001726e-06, 5.582999999999977e-06, 5.569999999999881e-06, 5.582999999999977e-06, 5.597000000003016e-06, 5.527999999997701e-06, 5.58400000000292e-06, 5.554999999997368e-06, 5.5550000000043065e-06, 5.582999999996507e-06, 5.583999999995981e-06, 5.554999999997368e-06, 5.569999999996411e-06, 5.57000000000335e-06, 5.57000000000335e-06, 5.555999999996841e-06, 5.5689999999969375e-06, 5.569999999996411e-06, 5.583999999995981e-06, 5.526999999998228e-06, 5.58400000000292e-06, 5.57000000000335e-06, 5.569000000003876e-06, 5.554999999997368e-06, 5.527999999997701e-06, 5.583999999995981e-06, 5.583000000003446e-06, 5.57000000000335e-06, 5.583000000003446e-06, 5.582999999996507e-06, 5.569999999996411e-06, 5.5689999999969375e-06, 5.5689999999969375e-06, 5.5139999999981315e-06, 5.582999999996507e-06, 5.5689999999969375e-06, 5.611000000002586e-06]</msg>
<status status="PASS" starttime="20201115 22:11:50.862" endtime="20201115 22:11:50.864"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.858" endtime="20201115 22:11:50.865"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:50.867" endtime="20201115 22:11:50.868"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:50.871" endtime="20201115 22:11:50.890"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.869" endtime="20201115 22:11:50.891"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.865" endtime="20201115 22:11:50.891"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.484" endtime="20201115 22:11:50.891"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.483" endtime="20201115 22:11:50.892"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.482" endtime="20201115 22:11:50.892"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:50.894" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:50.904" endtime="20201115 22:11:50.939"></status>
</kw>
<msg timestamp="20201115 22:11:50.940" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:50.902" endtime="20201115 22:11:50.940"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:50.942" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:50.941" endtime="20201115 22:11:50.942"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:50.943" endtime="20201115 22:11:50.945"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.899" endtime="20201115 22:11:50.945"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.897" endtime="20201115 22:11:50.946"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:50.953" endtime="20201115 22:11:51.240"></status>
</kw>
<msg timestamp="20201115 22:11:51.243" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026489583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026495347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:50.951" endtime="20201115 22:11:51.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:51.251" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026489583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026495347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:51.244" endtime="20201115 22:11:51.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:51.253" endtime="20201115 22:11:51.254"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.948" endtime="20201115 22:11:51.255"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.947" endtime="20201115 22:11:51.255"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:51.260" level="INFO">${RESULT} = [{'time': 0.026495347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7639999999983815e-06, 'source_diff': 5.7639999999983815e-06}, {'time': 0.026870528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:51.256" endtime="20201115 22:11:51.260"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:51.275" level="INFO">${OVERHEAD} = {'diff': [5.7639999999983815e-06, 5.778000000001421e-06, 5.7779999999979514e-06, 5.708000000000102e-06, 5.750000000002281e-06, 5.805000000001087e-06, 5.792000000000991e-06, 5.792000000000991e-06, 5.80...</msg>
<status status="PASS" starttime="20201115 22:11:51.261" endtime="20201115 22:11:51.275"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:51.280" level="INFO">NAME: 00-overhead-19-remove</msg>
<status status="PASS" starttime="20201115 22:11:51.278" endtime="20201115 22:11:51.280"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:51.282" level="INFO">VALUE: [5.7639999999983815e-06, 5.778000000001421e-06, 5.7779999999979514e-06, 5.708000000000102e-06, 5.750000000002281e-06, 5.805000000001087e-06, 5.792000000000991e-06, 5.792000000000991e-06, 5.806000000000561e-06, 5.735999999999242e-06, 5.791999999997521e-06, 5.791999999997521e-06, 5.762999999998908e-06, 5.7779999999979514e-06, 5.76400000000532e-06, 5.7779999999979514e-06, 5.776999999998478e-06, 5.749999999998812e-06, 5.7779999999979514e-06, 5.749999999998812e-06, 5.7229999999991454e-06, 5.7779999999979514e-06, 5.791999999997521e-06, 5.791999999997521e-06, 5.777000000005417e-06, 5.791999999997521e-06, 5.7779999999979514e-06, 5.77800000000489e-06, 5.874999999995467e-06, 5.7500000000057505e-06, 5.7779999999979514e-06, 5.846999999996327e-06, 5.749999999998812e-06, 5.791999999997521e-06, 5.708000000000102e-06, 5.7639999999983815e-06, 5.79200000000446e-06, 5.79200000000446e-06, 5.790999999998048e-06, 5.76400000000532e-06, 5.7639999999983815e-06, 5.749999999998812e-06, 5.80600000000403e-06, 5.790999999998048e-06, 5.777000000005417e-06, 5.749999999998812e-06, 5.7779999999979514e-06, 5.7779999999979514e-06, 5.791999999997521e-06, 5.791999999997521e-06]</msg>
<status status="PASS" starttime="20201115 22:11:51.281" endtime="20201115 22:11:51.283"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.276" endtime="20201115 22:11:51.283"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:51.285" endtime="20201115 22:11:51.287"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:51.290" endtime="20201115 22:11:51.309"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.287" endtime="20201115 22:11:51.310"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.284" endtime="20201115 22:11:51.310"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.895" endtime="20201115 22:11:51.310"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.893" endtime="20201115 22:11:51.311"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.892" endtime="20201115 22:11:51.311"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:51.313" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:51.322" endtime="20201115 22:11:51.352"></status>
</kw>
<msg timestamp="20201115 22:11:51.352" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:51.321" endtime="20201115 22:11:51.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:51.355" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:51.353" endtime="20201115 22:11:51.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:51.356" endtime="20201115 22:11:51.358"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.318" endtime="20201115 22:11:51.358"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.316" endtime="20201115 22:11:51.359"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:51.365" endtime="20201115 22:11:51.657"></status>
</kw>
<msg timestamp="20201115 22:11:51.660" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024431639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024437639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:51.364" endtime="20201115 22:11:51.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:51.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024431639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024437639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:51.662" endtime="20201115 22:11:51.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:51.670" endtime="20201115 22:11:51.671"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.361" endtime="20201115 22:11:51.672"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.360" endtime="20201115 22:11:51.672"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:51.677" level="INFO">${RESULT} = [{'time': 0.024437639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.999999999999062e-06, 'source_diff': 5.999999999999062e-06}, {'time': 0.024838236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:51.673" endtime="20201115 22:11:51.677"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:51.691" level="INFO">${OVERHEAD} = {'diff': [5.999999999999062e-06, 5.985999999999492e-06, 5.999999999999062e-06, 5.985999999999492e-06, 5.985999999999492e-06, 5.985999999999492e-06, 5.9729999999993955e-06, 5.985999999999492e-06, 5.985...</msg>
<status status="PASS" starttime="20201115 22:11:51.678" endtime="20201115 22:11:51.691"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:51.695" level="INFO">NAME: 00-overhead-20-remove</msg>
<status status="PASS" starttime="20201115 22:11:51.694" endtime="20201115 22:11:51.696"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:51.698" level="INFO">VALUE: [5.999999999999062e-06, 5.985999999999492e-06, 5.999999999999062e-06, 5.985999999999492e-06, 5.985999999999492e-06, 5.985999999999492e-06, 5.9729999999993955e-06, 5.985999999999492e-06, 5.985999999999492e-06, 5.986000000002961e-06, 5.985999999999492e-06, 5.987000000002435e-06, 5.971999999999922e-06, 5.986000000002961e-06, 5.903000000001546e-06, 5.999999999999062e-06, 5.944000000000782e-06, 6.042000000001241e-06, 6.0279999999982015e-06, 5.973000000006334e-06, 6.012999999999158e-06, 5.985999999999492e-06, 6.055999999997341e-06, 5.985999999999492e-06, 5.971999999999922e-06, 5.985999999999492e-06, 6.0279999999982015e-06, 5.985999999999492e-06, 5.958000000000352e-06, 5.902999999994607e-06, 5.986999999998965e-06, 5.971999999999922e-06, 5.999999999999062e-06, 5.985999999999492e-06, 5.903000000001546e-06, 5.931000000000686e-06, 5.958000000000352e-06, 5.985999999999492e-06, 5.958000000000352e-06, 6.0000000000060005e-06, 5.971999999999922e-06, 5.985999999999492e-06, 6.0139999999986316e-06, 5.985999999999492e-06, 5.986999999998965e-06, 5.985999999999492e-06, 5.999999999999062e-06, 6.054999999997868e-06, 5.999999999999062e-06, 5.971999999999922e-06]</msg>
<status status="PASS" starttime="20201115 22:11:51.696" endtime="20201115 22:11:51.699"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.692" endtime="20201115 22:11:51.699"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:51.702" endtime="20201115 22:11:51.703"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:51.705" endtime="20201115 22:11:51.725"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.704" endtime="20201115 22:11:51.725"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.700" endtime="20201115 22:11:51.726"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.314" endtime="20201115 22:11:51.726"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.312" endtime="20201115 22:11:51.726"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.311" endtime="20201115 22:11:51.726"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:51.729" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:51.738" endtime="20201115 22:11:51.773"></status>
</kw>
<msg timestamp="20201115 22:11:51.774" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:51.736" endtime="20201115 22:11:51.774"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:51.776" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:51.775" endtime="20201115 22:11:51.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:51.778" endtime="20201115 22:11:51.779"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.734" endtime="20201115 22:11:51.780"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.732" endtime="20201115 22:11:51.780"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:51.787" endtime="20201115 22:11:52.075"></status>
</kw>
<msg timestamp="20201115 22:11:52.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025805319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025811514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:51.785" endtime="20201115 22:11:52.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:52.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025805319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025811514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:52.079" endtime="20201115 22:11:52.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:52.087" endtime="20201115 22:11:52.089"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.783" endtime="20201115 22:11:52.090"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.781" endtime="20201115 22:11:52.090"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:52.094" level="INFO">${RESULT} = [{'time': 0.025811514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.195000000000506e-06, 'source_diff': 6.195000000000506e-06}, {'time': 0.026238903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:52.091" endtime="20201115 22:11:52.094"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:52.108" level="INFO">${OVERHEAD} = {'diff': [6.195000000000506e-06, 6.181000000000936e-06, 6.2090000000000756e-06, 6.110999999999617e-06, 6.124999999999187e-06, 6.194000000001032e-06, 6.194000000001032e-06, 6.208000000000602e-06, 6.167...</msg>
<status status="PASS" starttime="20201115 22:11:52.095" endtime="20201115 22:11:52.108"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:52.113" level="INFO">NAME: 00-overhead-21-remove</msg>
<status status="PASS" starttime="20201115 22:11:52.112" endtime="20201115 22:11:52.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:52.116" level="INFO">VALUE: [6.195000000000506e-06, 6.181000000000936e-06, 6.2090000000000756e-06, 6.110999999999617e-06, 6.124999999999187e-06, 6.194000000001032e-06, 6.194000000001032e-06, 6.208000000000602e-06, 6.167000000001366e-06, 6.235999999999742e-06, 6.1389999999987566e-06, 6.2079999999971325e-06, 6.179999999997993e-06, 6.180999999993997e-06, 6.2229999999996455e-06, 6.2639999999988816e-06, 6.2090000000000756e-06, 6.167000000001366e-06, 6.167000000001366e-06, 6.222000000000172e-06, 6.208000000000602e-06, 6.235999999999742e-06, 6.194000000001032e-06, 6.194000000001032e-06, 6.194000000001032e-06, 6.195000000000506e-06, 6.222000000000172e-06, 6.222000000000172e-06, 6.194000000001032e-06, 6.208000000000602e-06, 6.2090000000000756e-06, 6.180000000001462e-06, 6.235999999999742e-06, 6.194000000001032e-06, 6.194000000001032e-06, 6.153000000001796e-06, 6.195000000000506e-06, 6.222000000000172e-06, 6.167000000001366e-06, 6.138999999995287e-06, 6.139000000002226e-06, 6.195000000000506e-06, 6.194000000001032e-06, 6.2090000000000756e-06, 6.195000000000506e-06, 6.208000000000602e-06, 6.181000000000936e-06, 6.194000000001032e-06, 6.208000000000602e-06, 6.249999999999312e-06]</msg>
<status status="PASS" starttime="20201115 22:11:52.114" endtime="20201115 22:11:52.116"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.109" endtime="20201115 22:11:52.117"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:52.119" endtime="20201115 22:11:52.120"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:52.123" endtime="20201115 22:11:52.142"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.121" endtime="20201115 22:11:52.143"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.117" endtime="20201115 22:11:52.143"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.729" endtime="20201115 22:11:52.143"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.728" endtime="20201115 22:11:52.144"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.727" endtime="20201115 22:11:52.144"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:52.146" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:52.155" endtime="20201115 22:11:52.190"></status>
</kw>
<msg timestamp="20201115 22:11:52.191" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:52.154" endtime="20201115 22:11:52.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:52.193" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:52.192" endtime="20201115 22:11:52.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:52.194" endtime="20201115 22:11:52.196"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.151" endtime="20201115 22:11:52.196"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.149" endtime="20201115 22:11:52.197"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:52.204" endtime="20201115 22:11:52.493"></status>
</kw>
<msg timestamp="20201115 22:11:52.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025514097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0255205, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:11:52.202" endtime="20201115 22:11:52.496"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:52.504" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025514097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0255205, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:11:52.497" endtime="20201115 22:11:52.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:52.505" endtime="20201115 22:11:52.507"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.199" endtime="20201115 22:11:52.508"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.198" endtime="20201115 22:11:52.508"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:52.512" level="INFO">${RESULT} = [{'time': 0.0255205, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.403000000002046e-06, 'source_diff': 6.403000000002046e-06}, {'time': 0.025972861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:11:52.509" endtime="20201115 22:11:52.513"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:52.527" level="INFO">${OVERHEAD} = {'diff': [6.403000000002046e-06, 6.388999999999007e-06, 6.417000000001616e-06, 6.416999999998146e-06, 6.4029999999985765e-06, 6.333000000000727e-06, 6.36199999999934e-06, 6.417000000001616e-06, 6.3890...</msg>
<status status="PASS" starttime="20201115 22:11:52.514" endtime="20201115 22:11:52.527"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:52.531" level="INFO">NAME: 00-overhead-22-remove</msg>
<status status="PASS" starttime="20201115 22:11:52.530" endtime="20201115 22:11:52.532"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:52.534" level="INFO">VALUE: [6.403000000002046e-06, 6.388999999999007e-06, 6.417000000001616e-06, 6.416999999998146e-06, 6.4029999999985765e-06, 6.333000000000727e-06, 6.36199999999934e-06, 6.417000000001616e-06, 6.389000000002476e-06, 6.387999999999533e-06, 6.415999999998673e-06, 6.430000000001712e-06, 6.4029999999985765e-06, 6.388000000003002e-06, 6.402000000002572e-06, 6.403000000002046e-06, 6.402000000002572e-06, 6.401999999995633e-06, 6.388000000003002e-06, 6.417000000001616e-06, 6.416000000002142e-06, 6.389000000002476e-06, 6.402999999995107e-06, 6.444000000001282e-06, 6.403000000002046e-06, 6.402999999995107e-06, 6.416000000002142e-06, 6.402999999995107e-06, 6.416000000002142e-06, 6.402999999995107e-06, 6.403000000002046e-06, 6.403000000002046e-06, 6.444000000001282e-06, 6.33400000000367e-06, 6.388999999995537e-06, 6.403000000002046e-06, 6.403000000002046e-06, 6.403000000002046e-06, 6.388000000003002e-06, 6.403000000002046e-06, 6.416999999994677e-06, 6.403000000002046e-06, 6.416999999994677e-06, 6.430000000001712e-06, 6.402000000002572e-06, 6.3879999999960635e-06, 6.417000000001616e-06, 6.402000000002572e-06, 6.388000000003002e-06, 6.388999999995537e-06]</msg>
<status status="PASS" starttime="20201115 22:11:52.532" endtime="20201115 22:11:52.534"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.528" endtime="20201115 22:11:52.535"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:52.537" endtime="20201115 22:11:52.538"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:52.541" endtime="20201115 22:11:52.560"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.539" endtime="20201115 22:11:52.561"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.535" endtime="20201115 22:11:52.561"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.147" endtime="20201115 22:11:52.562"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.145" endtime="20201115 22:11:52.562"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.144" endtime="20201115 22:11:52.562"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:52.564" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:52.574" endtime="20201115 22:11:52.608"></status>
</kw>
<msg timestamp="20201115 22:11:52.608" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:52.572" endtime="20201115 22:11:52.609"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:52.611" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:52.610" endtime="20201115 22:11:52.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:52.612" endtime="20201115 22:11:52.614"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.569" endtime="20201115 22:11:52.614"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.567" endtime="20201115 22:11:52.615"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:52.622" endtime="20201115 22:11:52.908"></status>
</kw>
<msg timestamp="20201115 22:11:52.911" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024239056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024245722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:52.620" endtime="20201115 22:11:52.911"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:52.919" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024239056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024245722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:52.912" endtime="20201115 22:11:52.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:52.920" endtime="20201115 22:11:52.922"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.617" endtime="20201115 22:11:52.923"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.615" endtime="20201115 22:11:52.923"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:52.927" level="INFO">${RESULT} = [{'time': 0.024245722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.666000000002392e-06, 'source_diff': 6.666000000002392e-06}, {'time': 0.024726486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:52.924" endtime="20201115 22:11:52.928"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:52.942" level="INFO">${OVERHEAD} = {'diff': [6.666000000002392e-06, 6.611000000000117e-06, 6.6529999999988265e-06, 6.611000000000117e-06, 6.597000000000547e-06, 6.639000000002726e-06, 6.611000000000117e-06, 6.665999999998923e-06, 6.611...</msg>
<status status="PASS" starttime="20201115 22:11:52.928" endtime="20201115 22:11:52.943"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:52.947" level="INFO">NAME: 00-overhead-23-remove</msg>
<status status="PASS" starttime="20201115 22:11:52.946" endtime="20201115 22:11:52.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:52.950" level="INFO">VALUE: [6.666000000002392e-06, 6.611000000000117e-06, 6.6529999999988265e-06, 6.611000000000117e-06, 6.597000000000547e-06, 6.639000000002726e-06, 6.611000000000117e-06, 6.665999999998923e-06, 6.611000000000117e-06, 6.6529999999988265e-06, 6.639000000002726e-06, 6.611000000000117e-06, 6.624999999999687e-06, 6.611000000000117e-06, 6.554999999998368e-06, 6.610999999996647e-06, 6.610999999996647e-06, 6.625000000003156e-06, 6.5969999999970774e-06, 6.583000000004446e-06, 6.5969999999970774e-06, 6.61200000000306e-06, 6.625000000003156e-06, 6.610999999996647e-06, 6.639000000002726e-06, 6.610999999996647e-06, 6.667000000001866e-06, 6.624999999996217e-06, 6.610999999996647e-06, 6.610999999996647e-06, 6.625000000003156e-06, 6.610999999996647e-06, 6.625000000003156e-06, 6.5829999999975075e-06, 6.624999999996217e-06, 6.625000000003156e-06, 6.59800000000349e-06, 6.625000000003156e-06, 6.611000000003586e-06, 6.624999999996217e-06, 6.610999999996647e-06, 6.5969999999970774e-06, 6.624999999996217e-06, 6.625000000003156e-06, 6.611000000003586e-06, 6.625000000003156e-06, 6.597000000004016e-06, 6.611000000003586e-06, 6.58400000000392e-06, 6.610999999996647e-06]</msg>
<status status="PASS" starttime="20201115 22:11:52.948" endtime="20201115 22:11:52.950"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.943" endtime="20201115 22:11:52.951"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:52.953" endtime="20201115 22:11:52.954"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:52.957" endtime="20201115 22:11:52.976"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.955" endtime="20201115 22:11:52.977"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.951" endtime="20201115 22:11:52.977"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.565" endtime="20201115 22:11:52.978"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.563" endtime="20201115 22:11:52.978"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.562" endtime="20201115 22:11:52.978"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:52.980" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:52.989" endtime="20201115 22:11:53.029"></status>
</kw>
<msg timestamp="20201115 22:11:53.029" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:52.988" endtime="20201115 22:11:53.030"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:53.032" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:53.030" endtime="20201115 22:11:53.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:53.033" endtime="20201115 22:11:53.035"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.985" endtime="20201115 22:11:53.035"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.983" endtime="20201115 22:11:53.036"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:53.047" endtime="20201115 22:11:53.333"></status>
</kw>
<msg timestamp="20201115 22:11:53.336" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025493361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025500181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:53.041" endtime="20201115 22:11:53.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:53.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025493361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025500181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:53.337" endtime="20201115 22:11:53.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:53.345" endtime="20201115 22:11:53.347"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.038" endtime="20201115 22:11:53.348"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.036" endtime="20201115 22:11:53.348"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:53.352" level="INFO">${RESULT} = [{'time': 0.025500181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.820000000001131e-06, 'source_diff': 6.820000000001131e-06}, {'time': 0.026008597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:53.349" endtime="20201115 22:11:53.353"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:53.366" level="INFO">${OVERHEAD} = {'diff': [6.820000000001131e-06, 6.805000000002087e-06, 6.805000000002087e-06, 6.819000000001657e-06, 6.820000000001131e-06, 6.820000000001131e-06, 6.820000000001131e-06, 6.7779999999989515e-06, 6.833...</msg>
<status status="PASS" starttime="20201115 22:11:53.353" endtime="20201115 22:11:53.366"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:53.371" level="INFO">NAME: 00-overhead-24-remove</msg>
<status status="PASS" starttime="20201115 22:11:53.370" endtime="20201115 22:11:53.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:53.373" level="INFO">VALUE: [6.820000000001131e-06, 6.805000000002087e-06, 6.805000000002087e-06, 6.819000000001657e-06, 6.820000000001131e-06, 6.820000000001131e-06, 6.820000000001131e-06, 6.7779999999989515e-06, 6.833999999997231e-06, 6.874999999999937e-06, 6.834000000000701e-06, 6.776999999999478e-06, 6.818999999998188e-06, 6.818999999998188e-06, 6.805999999998091e-06, 6.818999999998188e-06, 6.818999999998188e-06, 6.790999999999048e-06, 6.791000000005987e-06, 6.7919999999985214e-06, 6.763999999999382e-06, 6.805999999998091e-06, 6.833999999997231e-06, 6.8330000000046964e-06, 6.7919999999985214e-06, 6.805999999998091e-06, 6.805999999998091e-06, 6.805999999998091e-06, 6.804999999998618e-06, 6.819999999997661e-06, 6.819999999997661e-06, 6.833999999997231e-06, 6.7919999999985214e-06, 6.8190000000051265e-06, 6.804999999998618e-06, 6.818999999998188e-06, 6.776999999999478e-06, 6.818999999998188e-06, 6.8200000000046e-06, 6.804999999998618e-06, 6.804999999998618e-06, 6.819999999997661e-06, 6.818999999998188e-06, 6.804999999998618e-06, 6.804999999998618e-06, 6.818999999998188e-06, 6.722000000000672e-06, 6.819999999997661e-06, 6.8190000000051265e-06, 6.833999999997231e-06]</msg>
<status status="PASS" starttime="20201115 22:11:53.372" endtime="20201115 22:11:53.374"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.367" endtime="20201115 22:11:53.374"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:53.377" endtime="20201115 22:11:53.378"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:53.380" endtime="20201115 22:11:53.400"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.379" endtime="20201115 22:11:53.400"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.375" endtime="20201115 22:11:53.401"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.981" endtime="20201115 22:11:53.401"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.979" endtime="20201115 22:11:53.402"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.978" endtime="20201115 22:11:53.402"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:53.404" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:53.413" endtime="20201115 22:11:53.451"></status>
</kw>
<msg timestamp="20201115 22:11:53.452" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:53.411" endtime="20201115 22:11:53.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:53.455" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:53.453" endtime="20201115 22:11:53.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:53.456" endtime="20201115 22:11:53.457"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.409" endtime="20201115 22:11:53.458"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.406" endtime="20201115 22:11:53.458"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:53.465" endtime="20201115 22:11:53.752"></status>
</kw>
<msg timestamp="20201115 22:11:53.755" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023864792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02387175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:11:53.463" endtime="20201115 22:11:53.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:53.764" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023864792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02387175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:11:53.756" endtime="20201115 22:11:53.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:53.765" endtime="20201115 22:11:53.766"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.461" endtime="20201115 22:11:53.767"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.459" endtime="20201115 22:11:53.767"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:53.772" level="INFO">${RESULT} = [{'time': 0.02387175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.958000000001352e-06, 'source_diff': 6.958000000001352e-06}, {'time': 0.024408694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:11:53.768" endtime="20201115 22:11:53.772"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:53.785" level="INFO">${OVERHEAD} = {'diff': [6.958000000001352e-06, 7.027000000003197e-06, 7.026999999999728e-06, 6.9719999999974525e-06, 7.013999999999632e-06, 7.013999999999632e-06, 7.070000000001381e-06, 7.0279999999992016e-06, 7.01...</msg>
<status status="PASS" starttime="20201115 22:11:53.773" endtime="20201115 22:11:53.786"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:53.790" level="INFO">NAME: 00-overhead-25-remove</msg>
<status status="PASS" starttime="20201115 22:11:53.789" endtime="20201115 22:11:53.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:53.793" level="INFO">VALUE: [6.958000000001352e-06, 7.027000000003197e-06, 7.026999999999728e-06, 6.9719999999974525e-06, 7.013999999999632e-06, 7.013999999999632e-06, 7.070000000001381e-06, 7.0279999999992016e-06, 7.013999999999632e-06, 7.0419999999987715e-06, 7.013999999999632e-06, 7.0279999999992016e-06, 7.026999999999728e-06, 7.027000000003197e-06, 7.0280000000061404e-06, 7.0280000000061404e-06, 7.026999999999728e-06, 7.0279999999992016e-06, 7.026999999999728e-06, 7.026999999999728e-06, 7.040999999999298e-06, 7.069999999997911e-06, 7.0279999999992016e-06, 6.986000000000492e-06, 7.000000000000062e-06, 7.0279999999992016e-06, 7.0279999999992016e-06, 7.0279999999992016e-06, 7.013999999999632e-06, 7.000000000000062e-06, 7.026999999999728e-06, 7.0279999999992016e-06, 7.0280000000061404e-06, 7.0419999999987715e-06, 7.0279999999992016e-06, 7.000000000000062e-06, 7.0279999999992016e-06, 7.026999999999728e-06, 7.000000000000062e-06, 6.957999999994413e-06, 7.0279999999992016e-06, 6.972000000000922e-06, 7.026999999999728e-06, 7.0279999999992016e-06, 7.0690000000053765e-06, 7.013000000000158e-06, 7.0279999999992016e-06, 7.0279999999992016e-06, 7.0279999999992016e-06, 6.971999999993983e-06]</msg>
<status status="PASS" starttime="20201115 22:11:53.791" endtime="20201115 22:11:53.793"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.786" endtime="20201115 22:11:53.794"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:53.796" endtime="20201115 22:11:53.797"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:53.800" endtime="20201115 22:11:53.819"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.798" endtime="20201115 22:11:53.820"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.794" endtime="20201115 22:11:53.820"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.404" endtime="20201115 22:11:53.821"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.403" endtime="20201115 22:11:53.821"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.402" endtime="20201115 22:11:53.821"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.598" endtime="20201115 22:11:53.821"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="teardown">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:53.830" endtime="20201115 22:11:53.850"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.829" endtime="20201115 22:11:53.850"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.827" endtime="20201115 22:11:53.851"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:11:43.518" endtime="20201115 22:11:53.852" critical="yes"></status>
</test>
<status status="PASS" starttime="20201115 22:11:30.712" endtime="20201115 22:11:53.858"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">frdm-kw41z</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="PASS" starttime="20201115 22:11:28.692" endtime="20201115 22:11:53.877"></status>
</suite>
<statistics>
<total>
<stat pass="5" fail="0">Critical Tests</stat>
<stat pass="5" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="5" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="5" fail="0">BOARD_frdm-kw41z</stat>
<stat pass="5" fail="0">dev</stat>
</tag>
<suite>
<stat pass="5" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="4" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
