<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201115 22:10:57.639" rpa="false">
<suite id="s1" name="tests_ztimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201115 22:10:58.211" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201115 22:10:58.219" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201115 22:10:59.305" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201115 22:10:58.210" endtime="20201115 22:10:59.306"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201115 22:10:59.309" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201115 22:10:59.307" endtime="20201115 22:10:59.309"></status>
</kw>
<status status="PASS" starttime="20201115 22:10:58.208" endtime="20201115 22:10:59.310"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:10:59.312" endtime="20201115 22:10:59.496"></status>
</kw>
<status status="PASS" starttime="20201115 22:10:59.310" endtime="20201115 22:10:59.496"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:10:59.509" endtime="20201115 22:10:59.529"></status>
</kw>
<msg timestamp="20201115 22:10:59.530" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['s RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:10:59.508" endtime="20201115 22:10:59.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:10:59.532" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['s RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:10:59.531" endtime="20201115 22:10:59.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:10:59.535" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:10:59.533" endtime="20201115 22:10:59.536"></status>
</kw>
<status status="FAIL" starttime="20201115 22:10:59.505" endtime="20201115 22:10:59.536"></status>
</kw>
<status status="FAIL" starttime="20201115 22:10:59.503" endtime="20201115 22:10:59.537"></status>
</kw>
<status status="PASS" starttime="20201115 22:10:59.502" endtime="20201115 22:10:59.537"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:10:59.541" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:10:59.541" endtime="20201115 22:10:59.542"></status>
</kw>
<status status="PASS" starttime="20201115 22:10:59.538" endtime="20201115 22:10:59.542"></status>
</kw>
<status status="PASS" starttime="20201115 22:10:59.501" endtime="20201115 22:10:59.542"></status>
</kw>
<status status="PASS" starttime="20201115 22:10:59.500" endtime="20201115 22:10:59.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:10:59.543" endtime="20201115 22:10:59.544"></status>
</kw>
<status status="PASS" starttime="20201115 22:10:59.499" endtime="20201115 22:10:59.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:10:59.546" endtime="20201115 22:10:59.547"></status>
</kw>
<status status="PASS" starttime="20201115 22:10:59.497" endtime="20201115 22:10:59.548"></status>
</kw>
<status status="PASS" starttime="20201115 22:10:58.206" endtime="20201115 22:10:59.548"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:10:59.555" endtime="20201115 22:10:59.574"></status>
</kw>
<status status="PASS" starttime="20201115 22:10:59.554" endtime="20201115 22:10:59.575"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:10:59.590" endtime="20201115 22:10:59.620"></status>
</kw>
<msg timestamp="20201115 22:10:59.621" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:10:59.589" endtime="20201115 22:10:59.621"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:10:59.624" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:10:59.622" endtime="20201115 22:10:59.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:10:59.627" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:10:59.625" endtime="20201115 22:10:59.627"></status>
</kw>
<status status="FAIL" starttime="20201115 22:10:59.585" endtime="20201115 22:10:59.628"></status>
</kw>
<status status="FAIL" starttime="20201115 22:10:59.582" endtime="20201115 22:10:59.628"></status>
</kw>
<status status="PASS" starttime="20201115 22:10:59.580" endtime="20201115 22:10:59.629"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:10:59.632" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:10:59.632" endtime="20201115 22:10:59.633"></status>
</kw>
<status status="PASS" starttime="20201115 22:10:59.630" endtime="20201115 22:10:59.633"></status>
</kw>
<status status="PASS" starttime="20201115 22:10:59.580" endtime="20201115 22:10:59.633"></status>
</kw>
<status status="PASS" starttime="20201115 22:10:59.579" endtime="20201115 22:10:59.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:10:59.634" endtime="20201115 22:10:59.636"></status>
</kw>
<status status="PASS" starttime="20201115 22:10:59.577" endtime="20201115 22:10:59.636"></status>
</kw>
<status status="PASS" starttime="20201115 22:10:59.576" endtime="20201115 22:10:59.637"></status>
</kw>
<status status="PASS" starttime="20201115 22:10:59.552" endtime="20201115 22:10:59.637"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:10:59.645" endtime="20201115 22:10:59.659"></status>
</kw>
<msg timestamp="20201115 22:10:59.660" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:10:59.643" endtime="20201115 22:10:59.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:10:59.662" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:10:59.661" endtime="20201115 22:10:59.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:10:59.663" endtime="20201115 22:10:59.665"></status>
</kw>
<status status="PASS" starttime="20201115 22:10:59.641" endtime="20201115 22:10:59.665"></status>
</kw>
<status status="PASS" starttime="20201115 22:10:59.639" endtime="20201115 22:10:59.666"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:10:59.671" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201115 22:10:59.670" endtime="20201115 22:10:59.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:10:59.673" level="INFO">VALUE: ztimer</msg>
<status status="PASS" starttime="20201115 22:10:59.672" endtime="20201115 22:10:59.673"></status>
</kw>
<status status="PASS" starttime="20201115 22:10:59.667" endtime="20201115 22:10:59.674"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:10:59.549" endtime="20201115 22:10:59.675" critical="yes"></status>
</test>
<status status="PASS" starttime="20201115 22:10:57.755" endtime="20201115 22:10:59.679"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201115 22:10:59.736" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201115 22:10:59.744" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201115 22:11:00.887" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201115 22:10:59.735" endtime="20201115 22:11:00.887"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201115 22:11:00.890" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201115 22:11:00.888" endtime="20201115 22:11:00.890"></status>
</kw>
<status status="PASS" starttime="20201115 22:10:59.734" endtime="20201115 22:11:00.891"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:00.893" endtime="20201115 22:11:01.112"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:00.891" endtime="20201115 22:11:01.113"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:01.125" endtime="20201115 22:11:01.146"></status>
</kw>
<msg timestamp="20201115 22:11:01.146" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['n: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:01.124" endtime="20201115 22:11:01.146"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:01.149" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['n: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:01.147" endtime="20201115 22:11:01.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:11:01.152" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:11:01.150" endtime="20201115 22:11:01.152"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:01.121" endtime="20201115 22:11:01.153"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:01.119" endtime="20201115 22:11:01.154"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.118" endtime="20201115 22:11:01.154"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:11:01.158" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:11:01.157" endtime="20201115 22:11:01.158"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.155" endtime="20201115 22:11:01.158"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.117" endtime="20201115 22:11:01.158"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.116" endtime="20201115 22:11:01.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:01.159" endtime="20201115 22:11:01.161"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.115" endtime="20201115 22:11:01.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:01.162" endtime="20201115 22:11:01.164"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.114" endtime="20201115 22:11:01.164"></status>
</kw>
<status status="PASS" starttime="20201115 22:10:59.732" endtime="20201115 22:11:01.164"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO/">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:01.172" endtime="20201115 22:11:01.191"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.170" endtime="20201115 22:11:01.192"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:01.205" endtime="20201115 22:11:01.222"></status>
</kw>
<msg timestamp="20201115 22:11:01.223" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:01.203" endtime="20201115 22:11:01.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:01.225" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:01.224" endtime="20201115 22:11:01.226"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:11:01.228" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:11:01.226" endtime="20201115 22:11:01.229"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:01.201" endtime="20201115 22:11:01.229"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:01.198" endtime="20201115 22:11:01.230"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.197" endtime="20201115 22:11:01.230"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:11:01.234" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:11:01.233" endtime="20201115 22:11:01.234"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.231" endtime="20201115 22:11:01.235"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.196" endtime="20201115 22:11:01.235"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.196" endtime="20201115 22:11:01.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:01.236" endtime="20201115 22:11:01.237"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.194" endtime="20201115 22:11:01.238"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.193" endtime="20201115 22:11:01.238"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.168" endtime="20201115 22:11:01.238"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure GPIO Overhead</arg>
</arguments>
<msg timestamp="20201115 22:11:01.241" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:01.250" endtime="20201115 22:11:01.266"></status>
</kw>
<msg timestamp="20201115 22:11:01.267" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:01.248" endtime="20201115 22:11:01.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:01.269" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:01.268" endtime="20201115 22:11:01.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:01.270" endtime="20201115 22:11:01.272"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.245" endtime="20201115 22:11:01.272"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.243" endtime="20201115 22:11:01.273"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:01.279" endtime="20201115 22:11:01.568"></status>
</kw>
<msg timestamp="20201115 22:11:01.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070848778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070849264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:01.278" endtime="20201115 22:11:01.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:01.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070848778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070849264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:01.573" endtime="20201115 22:11:01.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:01.583" endtime="20201115 22:11:01.586"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.275" endtime="20201115 22:11:01.587"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.273" endtime="20201115 22:11:01.587"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:01.592" level="INFO">${RESULT} = [{'time': 0.070849264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999939912e-07, 'source_diff': 4.859999999939912e-07}, {'time': 0.070858764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:01.588" endtime="20201115 22:11:01.593"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:01.610" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:01.594" endtime="20201115 22:11:01.610"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:01.615" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201115 22:11:01.614" endtime="20201115 22:11:01.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:01.619" level="INFO">VALUE: [4.859999999939912e-07, 4.86000000007869e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.7199999998748243e-07, 4.720000000013602e-07, 4.86000000007869e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.86000000007869e-07, 4.859999999939912e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.859999999939912e-07, 4.869999999934649e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.86000000007869e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.7199999998748243e-07, 4.86000000007869e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.86000000007869e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.859999999939912e-07, 4.7300000000083386e-07, 4.859999999939912e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999939912e-07]</msg>
<status status="PASS" starttime="20201115 22:11:01.617" endtime="20201115 22:11:01.619"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.611" endtime="20201115 22:11:01.620"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:01.623" endtime="20201115 22:11:01.625"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:01.628" endtime="20201115 22:11:01.647"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.626" endtime="20201115 22:11:01.648"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.621" endtime="20201115 22:11:01.649"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.242" endtime="20201115 22:11:01.649"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.240" endtime="20201115 22:11:01.649"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:01.654" endtime="20201115 22:11:01.674"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.653" endtime="20201115 22:11:01.675"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.651" endtime="20201115 22:11:01.675"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:11:01.165" endtime="20201115 22:11:01.676" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:01.683" endtime="20201115 22:11:01.703"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.682" endtime="20201115 22:11:01.703"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:01.718" endtime="20201115 22:11:01.739"></status>
</kw>
<msg timestamp="20201115 22:11:01.739" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:01.716" endtime="20201115 22:11:01.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:01.742" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:01.740" endtime="20201115 22:11:01.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:11:01.745" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:11:01.743" endtime="20201115 22:11:01.745"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:01.713" endtime="20201115 22:11:01.746"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:01.711" endtime="20201115 22:11:01.747"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.710" endtime="20201115 22:11:01.747"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:11:01.751" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:11:01.750" endtime="20201115 22:11:01.751"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.748" endtime="20201115 22:11:01.752"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.709" endtime="20201115 22:11:01.752"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.707" endtime="20201115 22:11:01.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:01.753" endtime="20201115 22:11:01.754"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.706" endtime="20201115 22:11:01.755"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.704" endtime="20201115 22:11:01.755"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.681" endtime="20201115 22:11:01.755"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer Now Overhead</arg>
</arguments>
<msg timestamp="20201115 22:11:01.758" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:01.766" endtime="20201115 22:11:01.780"></status>
</kw>
<msg timestamp="20201115 22:11:01.780" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:01.764" endtime="20201115 22:11:01.781"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:01.783" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:01.781" endtime="20201115 22:11:01.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:01.784" endtime="20201115 22:11:01.786"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.762" endtime="20201115 22:11:01.786"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.760" endtime="20201115 22:11:01.787"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:01.794" endtime="20201115 22:11:02.081"></status>
</kw>
<msg timestamp="20201115 22:11:02.084" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072349583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.072355125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:01.792" endtime="20201115 22:11:02.084"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:02.092" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072349583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.072355125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:02.085" endtime="20201115 22:11:02.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:02.093" endtime="20201115 22:11:02.095"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.789" endtime="20201115 22:11:02.096"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.787" endtime="20201115 22:11:02.096"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:02.100" level="INFO">${RESULT} = [{'time': 0.072355125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.542000000011149e-06, 'source_diff': 5.542000000011149e-06}, {'time': 0.072369333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:02.097" endtime="20201115 22:11:02.101"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:02.114" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:02.101" endtime="20201115 22:11:02.114"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:02.118" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201115 22:11:02.117" endtime="20201115 22:11:02.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:02.121" level="INFO">VALUE: [5.542000000011149e-06, 5.5139999999981315e-06, 5.471999999992483e-06, 5.472000000006361e-06, 5.5139999999981315e-06, 5.4860000000128695e-06, 5.471999999992483e-06, 5.485999999998992e-06, 5.485999999998992e-06, 5.485999999998992e-06, 5.5000000000055005e-06, 5.5000000000055005e-06, 5.5139999999981315e-06, 5.473000000005834e-06, 5.5000000000055005e-06, 5.541999999997271e-06, 5.5279999999907625e-06, 5.55600000000378e-06, 5.5139999999981315e-06, 5.541999999997271e-06, 5.540999999997798e-06, 5.485999999998992e-06, 5.485999999998992e-06, 5.527000000005167e-06, 5.5000000000055005e-06, 5.485999999998992e-06, 5.5000000000055005e-06, 5.514000000012009e-06, 5.4450000000066945e-06, 5.499999999991623e-06, 5.457999999999852e-06, 5.485999999998992e-06, 5.499999999991623e-06, 5.5000000000055005e-06, 5.471999999992483e-06, 5.5000000000055005e-06, 5.512999999998658e-06, 5.5139999999981315e-06, 5.5139999999981315e-06, 5.485999999998992e-06, 5.5139999999981315e-06, 5.499999999991623e-06, 5.486999999998465e-06, 5.55600000000378e-06, 5.52800000000464e-06, 5.471999999992483e-06, 5.514000000012009e-06, 5.485999999998992e-06, 5.485999999998992e-06, 5.5139999999981315e-06]</msg>
<status status="PASS" starttime="20201115 22:11:02.120" endtime="20201115 22:11:02.121"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.115" endtime="20201115 22:11:02.122"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:02.124" endtime="20201115 22:11:02.126"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:02.128" endtime="20201115 22:11:02.147"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.126" endtime="20201115 22:11:02.148"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.123" endtime="20201115 22:11:02.148"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.759" endtime="20201115 22:11:02.149"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.757" endtime="20201115 22:11:02.149"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:02.153" endtime="20201115 22:11:02.173"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.152" endtime="20201115 22:11:02.173"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.150" endtime="20201115 22:11:02.174"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:11:01.678" endtime="20201115 22:11:02.174" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set List">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:02.182" endtime="20201115 22:11:02.201"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.180" endtime="20201115 22:11:02.202"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:02.216" endtime="20201115 22:11:02.232"></status>
</kw>
<msg timestamp="20201115 22:11:02.233" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:02.214" endtime="20201115 22:11:02.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:02.235" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:02.234" endtime="20201115 22:11:02.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:11:02.238" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:11:02.236" endtime="20201115 22:11:02.239"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:02.211" endtime="20201115 22:11:02.239"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:02.208" endtime="20201115 22:11:02.240"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.207" endtime="20201115 22:11:02.240"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:11:02.244" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:11:02.243" endtime="20201115 22:11:02.244"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.241" endtime="20201115 22:11:02.244"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.206" endtime="20201115 22:11:02.245"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.206" endtime="20201115 22:11:02.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:02.245" endtime="20201115 22:11:02.247"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.204" endtime="20201115 22:11:02.248"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.203" endtime="20201115 22:11:02.248"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.179" endtime="20201115 22:11:02.249"></status>
</kw>
<kw name="${n} IN RANGE [ 25 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:02.252" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:02.261" endtime="20201115 22:11:02.277"></status>
</kw>
<msg timestamp="20201115 22:11:02.277" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:02.260" endtime="20201115 22:11:02.277"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:02.280" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:02.278" endtime="20201115 22:11:02.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:02.281" endtime="20201115 22:11:02.282"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.257" endtime="20201115 22:11:02.283"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.255" endtime="20201115 22:11:02.283"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:02.290" endtime="20201115 22:11:02.577"></status>
</kw>
<msg timestamp="20201115 22:11:02.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071975889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071994375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:02.288" endtime="20201115 22:11:02.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:02.589" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071975889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071994375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:02.581" endtime="20201115 22:11:02.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:02.590" endtime="20201115 22:11:02.591"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.286" endtime="20201115 22:11:02.592"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.284" endtime="20201115 22:11:02.592"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:02.597" level="INFO">${RESULT} = [{'time': 0.071994375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8485999999998115e-05, 'source_diff': 1.8485999999998115e-05}, {'time': 0.072079458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:02.593" endtime="20201115 22:11:02.597"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:02.610" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:02.598" endtime="20201115 22:11:02.610"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:02.614" level="INFO">NAME: 00-overhead-1-set</msg>
<status status="PASS" starttime="20201115 22:11:02.613" endtime="20201115 22:11:02.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:02.617" level="INFO">VALUE: [1.8485999999998115e-05, 1.8429999999999835e-05, 1.8444000000006344e-05, 1.8402000000000696e-05, 1.834700000000189e-05, 1.8402000000000696e-05, 1.8415999999993327e-05, 1.837500000000103e-05, 1.840300000000017e-05, 1.843099999999931e-05, 1.8417000000006678e-05, 1.8457999999998975e-05, 1.8457999999998975e-05, 1.844499999999194e-05, 1.8417000000006678e-05, 1.8429999999999835e-05, 1.8471999999991606e-05, 1.848699999999759e-05, 1.8429999999999835e-05, 1.8429999999999835e-05, 1.8429999999999835e-05, 1.845899999999845e-05, 1.840300000000017e-05, 1.836099999999452e-05, 1.844499999999194e-05, 1.845899999999845e-05, 1.8402000000000696e-05, 1.8457999999998975e-05, 1.8457999999998975e-05, 1.84169999999928e-05, 1.84169999999928e-05, 1.838899999999366e-05, 1.843099999999931e-05, 1.8499999999990746e-05, 1.8444000000006344e-05, 1.8444000000006344e-05, 1.8429999999999835e-05, 1.8417000000006678e-05, 1.8431000000013187e-05, 1.840300000000017e-05, 1.8457999999998975e-05, 1.8472000000005484e-05, 1.8444000000006344e-05, 1.8431000000013187e-05, 1.845899999999845e-05, 1.843099999999931e-05, 1.83610000000084e-05, 1.8444000000006344e-05, 1.8485999999998115e-05, 1.845899999999845e-05]</msg>
<status status="PASS" starttime="20201115 22:11:02.615" endtime="20201115 22:11:02.618"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.611" endtime="20201115 22:11:02.618"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:02.621" endtime="20201115 22:11:02.622"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:02.624" endtime="20201115 22:11:02.643"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.622" endtime="20201115 22:11:02.644"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.619" endtime="20201115 22:11:02.644"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.252" endtime="20201115 22:11:02.645"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.251" endtime="20201115 22:11:02.645"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.250" endtime="20201115 22:11:02.645"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:02.647" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:02.656" endtime="20201115 22:11:02.679"></status>
</kw>
<msg timestamp="20201115 22:11:02.680" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:02.655" endtime="20201115 22:11:02.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:02.682" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:02.681" endtime="20201115 22:11:02.682"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:02.683" endtime="20201115 22:11:02.685"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.652" endtime="20201115 22:11:02.685"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.650" endtime="20201115 22:11:02.686"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:02.692" endtime="20201115 22:11:02.979"></status>
</kw>
<msg timestamp="20201115 22:11:02.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026812403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026820917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:02.691" endtime="20201115 22:11:02.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:02.990" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026812403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026820917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:02.983" endtime="20201115 22:11:02.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:02.991" endtime="20201115 22:11:02.993"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.688" endtime="20201115 22:11:02.994"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.686" endtime="20201115 22:11:02.994"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:02.998" level="INFO">${RESULT} = [{'time': 0.026820917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.514000000001132e-06, 'source_diff': 8.514000000001132e-06}, {'time': 0.026933583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:02.995" endtime="20201115 22:11:02.998"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:03.011" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:02.999" endtime="20201115 22:11:03.012"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:03.016" level="INFO">NAME: 00-overhead-2-set</msg>
<status status="PASS" starttime="20201115 22:11:03.015" endtime="20201115 22:11:03.016"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:03.019" level="INFO">VALUE: [8.514000000001132e-06, 8.500000000001562e-06, 8.499999999998092e-06, 8.443999999999813e-06, 8.444999999999286e-06, 8.514000000001132e-06, 8.499999999998092e-06, 8.513000000001658e-06, 8.471999999998953e-06, 8.472000000002422e-06, 8.514000000001132e-06, 8.514000000001132e-06, 8.514000000001132e-06, 8.513999999997662e-06, 8.472000000002422e-06, 8.486999999997996e-06, 8.500000000001562e-06, 8.487000000001466e-06, 8.443999999999813e-06, 8.472000000002422e-06, 8.514000000001132e-06, 8.486000000001992e-06, 8.471999999998953e-06, 8.486000000001992e-06, 8.485999999998523e-06, 8.500000000001562e-06, 8.514000000001132e-06, 8.471999999998953e-06, 8.471999999998953e-06, 8.472999999998426e-06, 8.514000000001132e-06, 8.472000000002422e-06, 8.514000000001132e-06, 8.486000000001992e-06, 8.527000000001228e-06, 8.485999999998523e-06, 8.500000000001562e-06, 8.500000000001562e-06, 8.514000000001132e-06, 8.458999999998856e-06, 8.514000000001132e-06, 8.500000000001562e-06, 8.500000000001562e-06, 8.486000000001992e-06, 8.486000000001992e-06, 8.486000000001992e-06, 8.514000000001132e-06, 8.485999999995053e-06, 8.486000000001992e-06, 8.499999999994623e-06]</msg>
<status status="PASS" starttime="20201115 22:11:03.017" endtime="20201115 22:11:03.019"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.012" endtime="20201115 22:11:03.020"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:03.022" endtime="20201115 22:11:03.023"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:03.026" endtime="20201115 22:11:03.045"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.024" endtime="20201115 22:11:03.046"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.020" endtime="20201115 22:11:03.046"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.648" endtime="20201115 22:11:03.046"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.646" endtime="20201115 22:11:03.047"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.645" endtime="20201115 22:11:03.047"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:03.049" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:03.058" endtime="20201115 22:11:03.081"></status>
</kw>
<msg timestamp="20201115 22:11:03.081" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:03.056" endtime="20201115 22:11:03.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:03.084" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:03.082" endtime="20201115 22:11:03.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:03.085" endtime="20201115 22:11:03.087"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.054" endtime="20201115 22:11:03.087"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.052" endtime="20201115 22:11:03.088"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:03.094" endtime="20201115 22:11:03.381"></status>
</kw>
<msg timestamp="20201115 22:11:03.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027089708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027098431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:03.093" endtime="20201115 22:11:03.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:03.392" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027089708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027098431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:03.385" endtime="20201115 22:11:03.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:03.393" endtime="20201115 22:11:03.395"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.090" endtime="20201115 22:11:03.395"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.088" endtime="20201115 22:11:03.396"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:03.400" level="INFO">${RESULT} = [{'time': 0.027098431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.722999999998676e-06, 'source_diff': 8.722999999998676e-06}, {'time': 0.027238375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:03.396" endtime="20201115 22:11:03.400"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:03.413" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:03.401" endtime="20201115 22:11:03.414"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:03.418" level="INFO">NAME: 00-overhead-3-set</msg>
<status status="PASS" starttime="20201115 22:11:03.417" endtime="20201115 22:11:03.418"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:03.420" level="INFO">VALUE: [8.722999999998676e-06, 8.749999999998342e-06, 8.735999999998773e-06, 8.736000000002242e-06, 8.652999999997357e-06, 8.749999999998342e-06, 8.736000000002242e-06, 8.791999999997052e-06, 8.749999999998342e-06, 8.736000000002242e-06, 8.736000000002242e-06, 8.764000000001382e-06, 8.763999999997912e-06, 8.721999999999203e-06, 8.749999999998342e-06, 8.791000000001048e-06, 8.778000000000952e-06, 8.722999999998676e-06, 8.721999999999203e-06, 8.723000000002146e-06, 8.750000000001812e-06, 8.819000000000188e-06, 8.721999999999203e-06, 8.707999999999633e-06, 8.778000000000952e-06, 8.749999999998342e-06, 8.736000000002242e-06, 8.750000000001812e-06, 8.777999999997482e-06, 8.750000000001812e-06, 8.735999999995303e-06, 8.721999999995733e-06, 8.750000000001812e-06, 8.736000000002242e-06, 8.736000000002242e-06, 8.679999999997023e-06, 8.707999999996163e-06, 8.764000000001382e-06, 8.736000000002242e-06, 8.736000000002242e-06, 8.723000000002146e-06, 8.723000000002146e-06, 8.737000000001716e-06, 8.722999999995207e-06, 8.750000000001812e-06, 8.736000000002242e-06, 8.735999999995303e-06, 8.750000000001812e-06, 8.735999999995303e-06, 8.763999999994443e-06]</msg>
<status status="PASS" starttime="20201115 22:11:03.419" endtime="20201115 22:11:03.421"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.414" endtime="20201115 22:11:03.421"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:03.424" endtime="20201115 22:11:03.425"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:03.427" endtime="20201115 22:11:03.446"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.425" endtime="20201115 22:11:03.447"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.422" endtime="20201115 22:11:03.447"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.050" endtime="20201115 22:11:03.448"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.048" endtime="20201115 22:11:03.448"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.047" endtime="20201115 22:11:03.448"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:03.450" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:03.459" endtime="20201115 22:11:03.483"></status>
</kw>
<msg timestamp="20201115 22:11:03.483" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:03.458" endtime="20201115 22:11:03.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:03.486" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:03.484" endtime="20201115 22:11:03.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:03.487" endtime="20201115 22:11:03.488"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.455" endtime="20201115 22:11:03.489"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.453" endtime="20201115 22:11:03.489"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:03.496" endtime="20201115 22:11:03.782"></status>
</kw>
<msg timestamp="20201115 22:11:03.785" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027595889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027604875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:03.494" endtime="20201115 22:11:03.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:03.793" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027595889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027604875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:03.786" endtime="20201115 22:11:03.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:03.794" endtime="20201115 22:11:03.796"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.492" endtime="20201115 22:11:03.796"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.490" endtime="20201115 22:11:03.797"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:03.801" level="INFO">${RESULT} = [{'time': 0.027604875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.986000000002492e-06, 'source_diff': 8.986000000002492e-06}, {'time': 0.027773222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:03.798" endtime="20201115 22:11:03.801"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:03.814" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:03.802" endtime="20201115 22:11:03.814"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:03.819" level="INFO">NAME: 00-overhead-4-set</msg>
<status status="PASS" starttime="20201115 22:11:03.818" endtime="20201115 22:11:03.819"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:03.821" level="INFO">VALUE: [8.986000000002492e-06, 8.971999999999453e-06, 8.971999999999453e-06, 9.070000000003381e-06, 9.000000000002062e-06, 9.028000000001202e-06, 8.986000000002492e-06, 9.000000000002062e-06, 8.985999999999023e-06, 9.014000000001632e-06, 9.013999999998162e-06, 8.971999999999453e-06, 8.987000000001966e-06, 8.985999999999023e-06, 8.986000000002492e-06, 9.013999999998162e-06, 8.985999999999023e-06, 9.027999999997732e-06, 9.013999999998162e-06, 8.971999999999453e-06, 8.985999999999023e-06, 8.958999999999356e-06, 8.973000000002396e-06, 8.972000000002922e-06, 8.972000000002922e-06, 9.014000000001632e-06, 9.000000000002062e-06, 8.972000000002922e-06, 8.986000000002492e-06, 9.042000000000772e-06, 9.041000000001298e-06, 8.973000000002396e-06, 9.000000000002062e-06, 8.973000000002396e-06, 8.986000000002492e-06, 8.986000000002492e-06, 9.000000000002062e-06, 8.973000000002396e-06, 9.000000000002062e-06, 8.985999999995553e-06, 8.986000000002492e-06, 8.959000000002826e-06, 8.986999999995027e-06, 8.985999999995553e-06, 9.014000000001632e-06, 8.987000000001966e-06, 8.971999999995983e-06, 9.000000000002062e-06, 8.986000000002492e-06, 9.055000000000868e-06]</msg>
<status status="PASS" starttime="20201115 22:11:03.820" endtime="20201115 22:11:03.822"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.815" endtime="20201115 22:11:03.822"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:03.824" endtime="20201115 22:11:03.826"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:03.828" endtime="20201115 22:11:03.847"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.826" endtime="20201115 22:11:03.848"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.823" endtime="20201115 22:11:03.848"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.451" endtime="20201115 22:11:03.849"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.449" endtime="20201115 22:11:03.849"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.449" endtime="20201115 22:11:03.849"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:03.851" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:03.860" endtime="20201115 22:11:03.879"></status>
</kw>
<msg timestamp="20201115 22:11:03.880" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:03.859" endtime="20201115 22:11:03.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:03.882" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:03.881" endtime="20201115 22:11:03.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:03.883" endtime="20201115 22:11:03.885"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.856" endtime="20201115 22:11:03.885"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.854" endtime="20201115 22:11:03.886"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:03.893" endtime="20201115 22:11:04.180"></status>
</kw>
<msg timestamp="20201115 22:11:04.184" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023536042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023545306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:03.891" endtime="20201115 22:11:04.184"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:04.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023536042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023545306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:04.185" endtime="20201115 22:11:04.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:04.193" endtime="20201115 22:11:04.194"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.888" endtime="20201115 22:11:04.195"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.886" endtime="20201115 22:11:04.195"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:04.199" level="INFO">${RESULT} = [{'time': 0.023545306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.263999999998412e-06, 'source_diff': 9.263999999998412e-06}, {'time': 0.023748792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:04.196" endtime="20201115 22:11:04.200"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:04.213" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:04.200" endtime="20201115 22:11:04.213"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:04.217" level="INFO">NAME: 00-overhead-5-set</msg>
<status status="PASS" starttime="20201115 22:11:04.216" endtime="20201115 22:11:04.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:04.220" level="INFO">VALUE: [9.263999999998412e-06, 9.320000000000161e-06, 9.276999999998509e-06, 9.249999999998842e-06, 9.249999999998842e-06, 9.221999999999703e-06, 9.264000000001882e-06, 9.222999999999176e-06, 9.250000000002312e-06, 9.195000000000036e-06, 9.263999999998412e-06, 9.221999999999703e-06, 9.235999999999273e-06, 9.249999999998842e-06, 9.236999999998746e-06, 9.319000000000688e-06, 9.249999999998842e-06, 9.236000000002742e-06, 9.221999999999703e-06, 9.319000000000688e-06, 9.208000000000133e-06, 9.235999999999273e-06, 9.221999999999703e-06, 9.250000000002312e-06, 9.223000000002646e-06, 9.264000000001882e-06, 9.235999999999273e-06, 9.236000000002742e-06, 9.250000000002312e-06, 9.194000000000563e-06, 9.237000000002216e-06, 9.250000000002312e-06, 9.208000000000133e-06, 9.221999999999703e-06, 9.249999999998842e-06, 9.235999999999273e-06, 9.235999999999273e-06, 9.249999999998842e-06, 9.235999999999273e-06, 9.222000000003172e-06, 9.249999999995373e-06, 9.222000000003172e-06, 9.250000000002312e-06, 9.236000000002742e-06, 9.278000000001452e-06, 9.207999999996663e-06, 9.249999999995373e-06, 9.235999999995803e-06, 9.236000000002742e-06, 9.250000000002312e-06]</msg>
<status status="PASS" starttime="20201115 22:11:04.218" endtime="20201115 22:11:04.220"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.214" endtime="20201115 22:11:04.221"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:04.223" endtime="20201115 22:11:04.224"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:04.226" endtime="20201115 22:11:04.246"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.225" endtime="20201115 22:11:04.246"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.221" endtime="20201115 22:11:04.247"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.852" endtime="20201115 22:11:04.247"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.850" endtime="20201115 22:11:04.247"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.850" endtime="20201115 22:11:04.247"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:04.250" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:04.259" endtime="20201115 22:11:04.287"></status>
</kw>
<msg timestamp="20201115 22:11:04.287" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:04.257" endtime="20201115 22:11:04.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:04.290" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:04.288" endtime="20201115 22:11:04.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:04.291" endtime="20201115 22:11:04.293"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.254" endtime="20201115 22:11:04.293"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.252" endtime="20201115 22:11:04.294"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:04.300" endtime="20201115 22:11:04.588"></status>
</kw>
<msg timestamp="20201115 22:11:04.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027150736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027160222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:04.299" endtime="20201115 22:11:04.591"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:04.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027150736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027160222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:04.592" endtime="20201115 22:11:04.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:04.600" endtime="20201115 22:11:04.602"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.296" endtime="20201115 22:11:04.602"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.294" endtime="20201115 22:11:04.603"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:04.607" level="INFO">${RESULT} = [{'time': 0.027160222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.485999999999523e-06, 'source_diff': 9.485999999999523e-06}, {'time': 0.0273895, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:11:04.603" endtime="20201115 22:11:04.607"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:04.620" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:04.608" endtime="20201115 22:11:04.620"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:04.625" level="INFO">NAME: 00-overhead-6-set</msg>
<status status="PASS" starttime="20201115 22:11:04.624" endtime="20201115 22:11:04.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:04.627" level="INFO">VALUE: [9.485999999999523e-06, 9.485999999999523e-06, 9.485999999999523e-06, 9.528000000001702e-06, 9.554999999997899e-06, 9.513999999998662e-06, 9.499999999999093e-06, 9.499999999999093e-06, 9.499999999999093e-06, 9.485999999999523e-06, 9.444999999996817e-06, 9.471999999999953e-06, 9.499999999999093e-06, 9.542000000001272e-06, 9.485999999999523e-06, 9.499999999999093e-06, 9.541000000001798e-06, 9.499999999999093e-06, 9.485999999996053e-06, 9.513999999995193e-06, 9.458000000003852e-06, 9.485999999996053e-06, 9.500000000002562e-06, 9.500000000002562e-06, 9.471999999996483e-06, 9.472000000003422e-06, 9.485999999996053e-06, 9.471999999996483e-06, 9.499999999995623e-06, 9.473000000002896e-06, 9.486000000002992e-06, 9.514000000002132e-06, 9.500000000002562e-06, 9.499999999995623e-06, 9.500000000002562e-06, 9.541000000001798e-06, 9.471999999996483e-06, 9.486000000002992e-06, 9.500000000002562e-06, 9.457999999996913e-06, 9.514000000002132e-06, 9.500000000002562e-06, 9.514000000002132e-06, 9.472000000003422e-06, 9.485999999996053e-06, 9.473000000002896e-06, 9.485999999996053e-06, 9.500000000002562e-06, 9.430999999997247e-06, 9.486000000002992e-06]</msg>
<status status="PASS" starttime="20201115 22:11:04.626" endtime="20201115 22:11:04.628"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.621" endtime="20201115 22:11:04.628"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:04.630" endtime="20201115 22:11:04.632"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:04.634" endtime="20201115 22:11:04.653"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.632" endtime="20201115 22:11:04.654"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.629" endtime="20201115 22:11:04.654"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.250" endtime="20201115 22:11:04.654"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.249" endtime="20201115 22:11:04.655"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.248" endtime="20201115 22:11:04.655"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:04.657" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:04.666" endtime="20201115 22:11:04.698"></status>
</kw>
<msg timestamp="20201115 22:11:04.699" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:04.665" endtime="20201115 22:11:04.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:04.701" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:04.700" endtime="20201115 22:11:04.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:04.702" endtime="20201115 22:11:04.704"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.662" endtime="20201115 22:11:04.705"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.660" endtime="20201115 22:11:04.705"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:04.712" endtime="20201115 22:11:04.997"></status>
</kw>
<msg timestamp="20201115 22:11:05.000" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026694431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026704167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:04.710" endtime="20201115 22:11:05.000"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:05.008" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026694431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026704167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:05.001" endtime="20201115 22:11:05.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:05.009" endtime="20201115 22:11:05.011"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.708" endtime="20201115 22:11:05.011"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.706" endtime="20201115 22:11:05.012"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:05.016" level="INFO">${RESULT} = [{'time': 0.026704167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.735999999999773e-06, 'source_diff': 9.735999999999773e-06}, {'time': 0.026960764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:05.013" endtime="20201115 22:11:05.016"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:05.029" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:05.017" endtime="20201115 22:11:05.029"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:05.034" level="INFO">NAME: 00-overhead-7-set</msg>
<status status="PASS" starttime="20201115 22:11:05.033" endtime="20201115 22:11:05.034"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:05.036" level="INFO">VALUE: [9.735999999999773e-06, 9.722000000000203e-06, 9.722000000000203e-06, 9.708000000000633e-06, 9.749999999999343e-06, 9.806000000001092e-06, 9.749999999999343e-06, 9.736000000003242e-06, 9.764000000002382e-06, 9.722000000000203e-06, 9.736999999999246e-06, 9.638999999998787e-06, 9.722000000000203e-06, 9.762999999999439e-06, 9.777000000002478e-06, 9.750000000002812e-06, 9.735999999999773e-06, 9.722000000000203e-06, 9.750000000002812e-06, 9.750000000002812e-06, 9.721999999996733e-06, 9.763999999995443e-06, 9.723000000003146e-06, 9.792000000001522e-06, 9.736000000003242e-06, 9.681000000004436e-06, 9.708000000004102e-06, 9.721999999996733e-06, 9.749999999995873e-06, 9.735999999996303e-06, 9.736000000003242e-06, 9.709000000003576e-06, 9.707999999997163e-06, 9.750000000002812e-06, 9.708999999996637e-06, 9.653000000005296e-06, 9.735999999996303e-06, 9.763999999995443e-06, 9.750000000002812e-06, 9.763999999995443e-06, 9.680000000004962e-06, 9.764000000002382e-06, 9.750000000002812e-06, 9.737000000002716e-06, 9.735999999996303e-06, 9.708999999996637e-06, 9.736000000003242e-06, 9.749999999995873e-06, 9.736000000003242e-06, 9.749999999995873e-06]</msg>
<status status="PASS" starttime="20201115 22:11:05.035" endtime="20201115 22:11:05.036"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.030" endtime="20201115 22:11:05.037"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:05.039" endtime="20201115 22:11:05.041"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:05.043" endtime="20201115 22:11:05.062"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.041" endtime="20201115 22:11:05.063"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.038" endtime="20201115 22:11:05.064"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.658" endtime="20201115 22:11:05.064"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.656" endtime="20201115 22:11:05.064"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.655" endtime="20201115 22:11:05.064"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:05.066" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:05.075" endtime="20201115 22:11:05.100"></status>
</kw>
<msg timestamp="20201115 22:11:05.101" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:05.074" endtime="20201115 22:11:05.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:05.103" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:05.102" endtime="20201115 22:11:05.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:05.104" endtime="20201115 22:11:05.106"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.071" endtime="20201115 22:11:05.106"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.069" endtime="20201115 22:11:05.107"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:05.113" endtime="20201115 22:11:05.399"></status>
</kw>
<msg timestamp="20201115 22:11:05.402" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024620208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024630194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:05.112" endtime="20201115 22:11:05.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:05.410" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024620208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024630194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:05.403" endtime="20201115 22:11:05.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:05.412" endtime="20201115 22:11:05.413"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.109" endtime="20201115 22:11:05.414"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.107" endtime="20201115 22:11:05.414"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:05.418" level="INFO">${RESULT} = [{'time': 0.024630194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.986000000000023e-06, 'source_diff': 9.986000000000023e-06}, {'time': 0.024917986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:05.415" endtime="20201115 22:11:05.418"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:05.432" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:05.419" endtime="20201115 22:11:05.432"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:05.436" level="INFO">NAME: 00-overhead-8-set</msg>
<status status="PASS" starttime="20201115 22:11:05.435" endtime="20201115 22:11:05.436"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:05.439" level="INFO">VALUE: [9.986000000000023e-06, 9.999999999999593e-06, 1.0013999999999162e-05, 9.986000000000023e-06, 9.972999999999926e-06, 9.972000000000453e-06, 9.972999999999926e-06, 9.999999999999593e-06, 9.999999999999593e-06, 1.0000000000003062e-05, 9.999999999999593e-06, 1.0042000000001772e-05, 9.986000000000023e-06, 9.999999999999593e-06, 9.999999999999593e-06, 9.986000000000023e-06, 1.0013999999999162e-05, 1.0013999999999162e-05, 9.958000000000883e-06, 9.986000000000023e-06, 1.0013999999999162e-05, 1.0000000000003062e-05, 9.986000000000023e-06, 9.958999999996887e-06, 1.0014000000002632e-05, 9.958000000004352e-06, 1.0042000000001772e-05, 9.999999999996123e-06, 9.972000000003922e-06, 1.0000000000003062e-05, 9.985999999996553e-06, 1.0000000000003062e-05, 1.0000000000003062e-05, 1.0000000000003062e-05, 9.971999999996983e-06, 1.0000000000003062e-05, 9.957999999997413e-06, 9.972000000003922e-06, 9.999999999996123e-06, 9.987000000002966e-06, 9.917000000005116e-06, 9.985999999996553e-06, 9.971999999996983e-06, 9.986000000003492e-06, 9.999999999996123e-06, 1.0028000000002202e-05, 1.0014000000002632e-05, 1.0014000000002632e-05, 9.999999999996123e-06, 9.985999999996553e-06]</msg>
<status status="PASS" starttime="20201115 22:11:05.437" endtime="20201115 22:11:05.439"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.432" endtime="20201115 22:11:05.440"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:05.442" endtime="20201115 22:11:05.444"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:05.446" endtime="20201115 22:11:05.465"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.444" endtime="20201115 22:11:05.466"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.441" endtime="20201115 22:11:05.466"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.067" endtime="20201115 22:11:05.467"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.065" endtime="20201115 22:11:05.467"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.065" endtime="20201115 22:11:05.467"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:05.469" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:05.478" endtime="20201115 22:11:05.507"></status>
</kw>
<msg timestamp="20201115 22:11:05.508" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:05.476" endtime="20201115 22:11:05.508"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:05.510" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:05.509" endtime="20201115 22:11:05.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:05.511" endtime="20201115 22:11:05.513"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.474" endtime="20201115 22:11:05.514"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.472" endtime="20201115 22:11:05.514"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:05.520" endtime="20201115 22:11:05.809"></status>
</kw>
<msg timestamp="20201115 22:11:05.812" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0235085, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023518722, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:11:05.519" endtime="20201115 22:11:05.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:05.820" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0235085, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023518722, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:11:05.813" endtime="20201115 22:11:05.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:05.821" endtime="20201115 22:11:05.823"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.516" endtime="20201115 22:11:05.823"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.515" endtime="20201115 22:11:05.823"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:05.828" level="INFO">${RESULT} = [{'time': 0.023518722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0221999999997233e-05, 'source_diff': 1.0221999999997233e-05}, {'time': 0.023841653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:05.824" endtime="20201115 22:11:05.828"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:05.841" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:05.829" endtime="20201115 22:11:05.841"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:05.845" level="INFO">NAME: 00-overhead-9-set</msg>
<status status="PASS" starttime="20201115 22:11:05.844" endtime="20201115 22:11:05.846"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:05.848" level="INFO">VALUE: [1.0221999999997233e-05, 1.0236000000000273e-05, 1.0221999999997233e-05, 1.0222000000000703e-05, 1.0208000000001133e-05, 1.0292000000002022e-05, 1.0263999999999412e-05, 1.0236000000000273e-05, 1.0236000000000273e-05, 1.0208000000001133e-05, 1.0181000000001467e-05, 1.0249999999999843e-05, 1.0222000000000703e-05, 1.0249999999999843e-05, 1.0223000000000176e-05, 1.0222000000000703e-05, 1.0250000000003312e-05, 1.0249999999999843e-05, 1.0193999999998093e-05, 1.0249999999999843e-05, 1.0263999999999412e-05, 1.0249999999999843e-05, 1.0209000000000606e-05, 1.0236000000000273e-05, 1.0236000000000273e-05, 1.027699999999604e-05, 1.0250000000003312e-05, 1.0249999999996373e-05, 1.0235999999996803e-05, 1.0250000000003312e-05, 1.0179999999998524e-05, 1.0221999999997233e-05, 1.0194999999997567e-05, 1.0250000000003312e-05, 1.0235999999996803e-05, 1.0221999999997233e-05, 1.0222000000004172e-05, 1.0235999999996803e-05, 1.0236999999996277e-05, 1.0235999999996803e-05, 1.0221999999997233e-05, 1.0194999999997567e-05, 1.0207999999997663e-05, 1.0250000000003312e-05, 1.0235999999996803e-05, 1.0166999999998427e-05, 1.0221999999997233e-05, 1.0236000000003742e-05, 1.0291999999995083e-05, 1.0222999999996707e-05]</msg>
<status status="PASS" starttime="20201115 22:11:05.847" endtime="20201115 22:11:05.849"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.842" endtime="20201115 22:11:05.849"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:05.852" endtime="20201115 22:11:05.853"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:05.855" endtime="20201115 22:11:05.874"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.854" endtime="20201115 22:11:05.875"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.850" endtime="20201115 22:11:05.876"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.470" endtime="20201115 22:11:05.876"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.468" endtime="20201115 22:11:05.876"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.467" endtime="20201115 22:11:05.876"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:05.879" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:05.887" endtime="20201115 22:11:05.919"></status>
</kw>
<msg timestamp="20201115 22:11:05.920" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:05.886" endtime="20201115 22:11:05.920"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:05.922" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:05.921" endtime="20201115 22:11:05.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:05.924" endtime="20201115 22:11:05.925"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.883" endtime="20201115 22:11:05.926"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.881" endtime="20201115 22:11:05.926"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:05.933" endtime="20201115 22:11:06.219"></status>
</kw>
<msg timestamp="20201115 22:11:06.222" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026276444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026286917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:05.931" endtime="20201115 22:11:06.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:06.230" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026276444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026286917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:06.223" endtime="20201115 22:11:06.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:06.231" endtime="20201115 22:11:06.233"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.929" endtime="20201115 22:11:06.234"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.927" endtime="20201115 22:11:06.234"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:06.238" level="INFO">${RESULT} = [{'time': 0.026286917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0473000000000426e-05, 'source_diff': 1.0473000000000426e-05}, {'time': 0.026639222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:06.235" endtime="20201115 22:11:06.239"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:06.252" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:06.239" endtime="20201115 22:11:06.252"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:06.256" level="INFO">NAME: 00-overhead-10-set</msg>
<status status="PASS" starttime="20201115 22:11:06.255" endtime="20201115 22:11:06.257"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:06.259" level="INFO">VALUE: [1.0473000000000426e-05, 1.0444000000001813e-05, 1.0513999999999663e-05, 1.0486000000000523e-05, 1.0486000000000523e-05, 1.0459000000000857e-05, 1.0486000000000523e-05, 1.0486000000000523e-05, 1.0555999999998372e-05, 1.0486000000000523e-05, 1.0513999999999663e-05, 1.0526999999999759e-05, 1.0500000000000093e-05, 1.0513999999999663e-05, 1.0445000000001287e-05, 1.0485999999997053e-05, 1.0486000000003992e-05, 1.0457999999997913e-05, 1.0485999999997053e-05, 1.0458999999997387e-05, 1.0500000000003562e-05, 1.0500000000003562e-05, 1.0444999999997817e-05, 1.0500000000003562e-05, 1.0499999999996623e-05, 1.0514000000003132e-05, 1.0514000000003132e-05, 1.0500000000003562e-05, 1.0416999999998677e-05, 1.0457999999997913e-05, 1.0499999999996623e-05, 1.0486000000003992e-05, 1.0487000000003466e-05, 1.0471999999997483e-05, 1.0472000000004422e-05, 1.0459000000004326e-05, 1.0487000000003466e-05, 1.0486000000003992e-05, 1.0472000000004422e-05, 1.0500000000003562e-05, 1.0457999999997913e-05, 1.0471999999997483e-05, 1.0486000000003992e-05, 1.0499999999996623e-05, 1.0472000000004422e-05, 1.0485999999997053e-05, 1.0499999999996623e-05, 1.0500000000003562e-05, 1.0487000000003466e-05, 1.0485999999997053e-05]</msg>
<status status="PASS" starttime="20201115 22:11:06.258" endtime="20201115 22:11:06.260"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.253" endtime="20201115 22:11:06.260"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:06.262" endtime="20201115 22:11:06.264"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:06.266" endtime="20201115 22:11:06.285"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.264" endtime="20201115 22:11:06.286"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.261" endtime="20201115 22:11:06.286"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.879" endtime="20201115 22:11:06.286"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.877" endtime="20201115 22:11:06.287"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.877" endtime="20201115 22:11:06.287"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:06.289" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:06.298" endtime="20201115 22:11:06.331"></status>
</kw>
<msg timestamp="20201115 22:11:06.331" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:06.296" endtime="20201115 22:11:06.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:06.334" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:06.332" endtime="20201115 22:11:06.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:06.335" endtime="20201115 22:11:06.337"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.294" endtime="20201115 22:11:06.337"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.292" endtime="20201115 22:11:06.338"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:06.344" endtime="20201115 22:11:06.630"></status>
</kw>
<msg timestamp="20201115 22:11:06.633" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027620403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027631125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:06.342" endtime="20201115 22:11:06.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:06.641" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027620403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027631125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:06.634" endtime="20201115 22:11:06.642"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:06.642" endtime="20201115 22:11:06.644"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.340" endtime="20201115 22:11:06.645"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.338" endtime="20201115 22:11:06.645"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:06.649" level="INFO">${RESULT} = [{'time': 0.027631125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0721999999997733e-05, 'source_diff': 1.0721999999997733e-05}, {'time': 0.028010764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:06.646" endtime="20201115 22:11:06.649"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:06.663" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:06.650" endtime="20201115 22:11:06.663"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:06.667" level="INFO">NAME: 00-overhead-11-set</msg>
<status status="PASS" starttime="20201115 22:11:06.666" endtime="20201115 22:11:06.667"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:06.670" level="INFO">VALUE: [1.0721999999997733e-05, 1.0763999999999913e-05, 1.0750000000000343e-05, 1.0707999999998163e-05, 1.0736000000000773e-05, 1.0694000000002063e-05, 1.0722999999997207e-05, 1.0667000000002397e-05, 1.0721999999997733e-05, 1.0736000000000773e-05, 1.0665999999999454e-05, 1.0736000000004242e-05, 1.0735999999997303e-05, 1.0736000000004242e-05, 1.0736000000004242e-05, 1.0736000000004242e-05, 1.0749999999996873e-05, 1.0722999999997207e-05, 1.0722999999997207e-05, 1.0722000000004672e-05, 1.0722999999997207e-05, 1.0708000000005102e-05, 1.0735999999997303e-05, 1.0708999999997637e-05, 1.0750000000003812e-05, 1.0722000000004672e-05, 1.0721999999997733e-05, 1.0735999999997303e-05, 1.0750000000003812e-05, 1.0694000000005532e-05, 1.0764000000003382e-05, 1.0735999999997303e-05, 1.0777999999996013e-05, 1.0721999999997733e-05, 1.0721999999997733e-05, 1.0721999999997733e-05, 1.0736000000004242e-05, 1.0749999999996873e-05, 1.0721999999997733e-05, 1.0722000000004672e-05, 1.0721999999997733e-05, 1.0749999999996873e-05, 1.076299999999697e-05, 1.0749999999996873e-05, 1.0693999999998594e-05, 1.0777999999996013e-05, 1.0707999999998163e-05, 1.0679999999999024e-05, 1.0721999999997733e-05, 1.0707999999998163e-05]</msg>
<status status="PASS" starttime="20201115 22:11:06.668" endtime="20201115 22:11:06.670"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.663" endtime="20201115 22:11:06.671"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:06.673" endtime="20201115 22:11:06.674"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:06.676" endtime="20201115 22:11:06.696"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.675" endtime="20201115 22:11:06.696"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.671" endtime="20201115 22:11:06.697"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.290" endtime="20201115 22:11:06.697"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.288" endtime="20201115 22:11:06.697"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.287" endtime="20201115 22:11:06.697"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:06.700" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:06.708" endtime="20201115 22:11:06.743"></status>
</kw>
<msg timestamp="20201115 22:11:06.744" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:06.707" endtime="20201115 22:11:06.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:06.746" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:06.745" endtime="20201115 22:11:06.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:06.747" endtime="20201115 22:11:06.749"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.704" endtime="20201115 22:11:06.749"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.702" endtime="20201115 22:11:06.750"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:06.757" endtime="20201115 22:11:07.053"></status>
</kw>
<msg timestamp="20201115 22:11:07.059" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024104667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024115681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:06.755" endtime="20201115 22:11:07.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:07.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024104667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024115681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:07.062" endtime="20201115 22:11:07.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:07.080" endtime="20201115 22:11:07.083"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.752" endtime="20201115 22:11:07.084"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.750" endtime="20201115 22:11:07.085"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:07.094" level="INFO">${RESULT} = [{'time': 0.024115681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1014000000000163e-05, 'source_diff': 1.1014000000000163e-05}, {'time': 0.024530917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:07.087" endtime="20201115 22:11:07.095"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:07.116" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:07.096" endtime="20201115 22:11:07.116"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:07.120" level="INFO">NAME: 00-overhead-12-set</msg>
<status status="PASS" starttime="20201115 22:11:07.119" endtime="20201115 22:11:07.121"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:07.123" level="INFO">VALUE: [1.1014000000000163e-05, 1.1041999999999302e-05, 1.1027999999999732e-05, 1.0986000000001023e-05, 1.0958000000001883e-05, 1.0944000000002313e-05, 1.1013000000000689e-05, 1.1000000000000593e-05, 1.0957999999998413e-05, 1.1000000000000593e-05, 1.1000000000000593e-05, 1.0985999999997553e-05, 1.0987000000000496e-05, 1.1000000000000593e-05, 1.0971999999997983e-05, 1.0985999999997553e-05, 1.1027999999999732e-05, 1.0957999999998413e-05, 1.0971999999997983e-05, 1.0972000000004922e-05, 1.0971999999997983e-05, 1.1014000000003632e-05, 1.0958999999997887e-05, 1.0999999999997123e-05, 1.0971999999997983e-05, 1.0985999999997553e-05, 1.0985999999997553e-05, 1.0985999999997553e-05, 1.1013999999996693e-05, 1.1000000000004062e-05, 1.1013999999996693e-05, 1.0971999999997983e-05, 1.0999999999997123e-05, 1.0958000000005352e-05, 1.0985999999997553e-05, 1.0972000000004922e-05, 1.0985999999997553e-05, 1.0971999999997983e-05, 1.0944000000005782e-05, 1.0971999999997983e-05, 1.0987000000003966e-05, 1.1027999999996263e-05, 1.0985999999997553e-05, 1.1070000000001912e-05, 1.0985999999997553e-05, 1.0986000000004492e-05, 1.0985999999997553e-05, 1.0972000000004922e-05, 1.101299999999722e-05, 1.0971999999997983e-05]</msg>
<status status="PASS" starttime="20201115 22:11:07.122" endtime="20201115 22:11:07.123"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.117" endtime="20201115 22:11:07.124"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:07.126" endtime="20201115 22:11:07.128"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:07.130" endtime="20201115 22:11:07.149"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.128" endtime="20201115 22:11:07.150"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.125" endtime="20201115 22:11:07.150"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.700" endtime="20201115 22:11:07.150"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.699" endtime="20201115 22:11:07.151"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.698" endtime="20201115 22:11:07.151"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:07.153" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:07.162" endtime="20201115 22:11:07.200"></status>
</kw>
<msg timestamp="20201115 22:11:07.201" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:07.160" endtime="20201115 22:11:07.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:07.208" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:07.202" endtime="20201115 22:11:07.208"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:07.209" endtime="20201115 22:11:07.210"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.158" endtime="20201115 22:11:07.211"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.156" endtime="20201115 22:11:07.211"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:07.218" endtime="20201115 22:11:07.505"></status>
</kw>
<msg timestamp="20201115 22:11:07.508" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027783056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027794264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:07.216" endtime="20201115 22:11:07.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:07.516" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027783056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027794264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:07.510" endtime="20201115 22:11:07.517"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:07.518" endtime="20201115 22:11:07.519"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.214" endtime="20201115 22:11:07.520"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.212" endtime="20201115 22:11:07.520"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:07.524" level="INFO">${RESULT} = [{'time': 0.027794264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1207999999998663e-05, 'source_diff': 1.1207999999998663e-05}, {'time': 0.028237653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:07.521" endtime="20201115 22:11:07.524"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:07.538" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:07.525" endtime="20201115 22:11:07.538"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:07.542" level="INFO">NAME: 00-overhead-13-set</msg>
<status status="PASS" starttime="20201115 22:11:07.541" endtime="20201115 22:11:07.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:07.545" level="INFO">VALUE: [1.1207999999998663e-05, 1.1250000000000843e-05, 1.1236000000001273e-05, 1.1250000000000843e-05, 1.1250000000000843e-05, 1.1236000000001273e-05, 1.1223000000001176e-05, 1.1166999999999427e-05, 1.1221999999998233e-05, 1.1250000000004312e-05, 1.1222000000005172e-05, 1.1236999999997277e-05, 1.1249999999997373e-05, 1.1221999999998233e-05, 1.1221999999998233e-05, 1.1235999999997803e-05, 1.130499999999618e-05, 1.1236000000004742e-05, 1.1249999999997373e-05, 1.1221999999998233e-05, 1.1207999999998663e-05, 1.1152000000000384e-05, 1.1179999999999524e-05, 1.1264000000003882e-05, 1.1249999999997373e-05, 1.1305000000003118e-05, 1.1264000000003882e-05, 1.1236000000004742e-05, 1.1249999999997373e-05, 1.1221999999998233e-05, 1.1235999999997803e-05, 1.1249999999997373e-05, 1.1221999999998233e-05, 1.1207999999998663e-05, 1.1235999999997803e-05, 1.1236000000004742e-05, 1.1250000000004312e-05, 1.1235999999997803e-05, 1.1208999999998137e-05, 1.1194999999998567e-05, 1.1249999999997373e-05, 1.1249999999997373e-05, 1.1221999999998233e-05, 1.1250000000004312e-05, 1.1208000000005602e-05, 1.1249999999997373e-05, 1.1193999999999094e-05, 1.1235999999997803e-05, 1.1195000000005506e-05, 1.1236000000004742e-05]</msg>
<status status="PASS" starttime="20201115 22:11:07.543" endtime="20201115 22:11:07.545"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.539" endtime="20201115 22:11:07.545"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:07.548" endtime="20201115 22:11:07.549"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:07.551" endtime="20201115 22:11:07.571"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.550" endtime="20201115 22:11:07.571"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.546" endtime="20201115 22:11:07.572"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.154" endtime="20201115 22:11:07.572"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.152" endtime="20201115 22:11:07.572"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.151" endtime="20201115 22:11:07.572"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:07.575" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:07.584" endtime="20201115 22:11:07.622"></status>
</kw>
<msg timestamp="20201115 22:11:07.622" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:07.582" endtime="20201115 22:11:07.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:07.625" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:07.623" endtime="20201115 22:11:07.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:07.626" endtime="20201115 22:11:07.628"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.580" endtime="20201115 22:11:07.628"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.577" endtime="20201115 22:11:07.629"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:07.635" endtime="20201115 22:11:07.935"></status>
</kw>
<msg timestamp="20201115 22:11:07.938" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028275917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028287417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:07.634" endtime="20201115 22:11:07.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:07.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028275917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028287417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:07.940" endtime="20201115 22:11:07.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:07.948" endtime="20201115 22:11:07.949"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.631" endtime="20201115 22:11:07.950"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.629" endtime="20201115 22:11:07.950"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:07.954" level="INFO">${RESULT} = [{'time': 0.028287417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1499999999997623e-05, 'source_diff': 1.1499999999997623e-05}, {'time': 0.028761208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:07.951" endtime="20201115 22:11:07.954"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:07.968" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:07.955" endtime="20201115 22:11:07.968"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:07.972" level="INFO">NAME: 00-overhead-14-set</msg>
<status status="PASS" starttime="20201115 22:11:07.971" endtime="20201115 22:11:07.972"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:07.975" level="INFO">VALUE: [1.1499999999997623e-05, 1.1486000000001523e-05, 1.1458000000002383e-05, 1.1486000000001523e-05, 1.1485999999998053e-05, 1.151299999999772e-05, 1.1459000000001857e-05, 1.1486999999997527e-05, 1.1457999999998913e-05, 1.1416999999999677e-05, 1.154099999999686e-05, 1.1528000000003702e-05, 1.1500000000004562e-05, 1.1528000000003702e-05, 1.1514000000004132e-05, 1.1499999999997623e-05, 1.1527999999996763e-05, 1.1500000000004562e-05, 1.1471999999998483e-05, 1.1471999999998483e-05, 1.1430999999999247e-05, 1.1389000000000538e-05, 1.1500000000004562e-05, 1.1485999999998053e-05, 1.1457999999998913e-05, 1.1457999999998913e-05, 1.1416000000000204e-05, 1.1485999999998053e-05, 1.1513999999997193e-05, 1.1499999999997623e-05, 1.1485999999998053e-05, 1.1500000000004562e-05, 1.1457999999998913e-05, 1.1472000000005422e-05, 1.1471999999998483e-05, 1.1500000000004562e-05, 1.1499999999997623e-05, 1.1499999999997623e-05, 1.1500000000004562e-05, 1.1472000000005422e-05, 1.1500000000004562e-05, 1.1443999999999344e-05, 1.1444999999998817e-05, 1.1458000000005852e-05, 1.1471999999998483e-05, 1.1499999999997623e-05, 1.1499999999997623e-05, 1.1472000000005422e-05, 1.1458999999998387e-05, 1.1471999999998483e-05]</msg>
<status status="PASS" starttime="20201115 22:11:07.973" endtime="20201115 22:11:07.975"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.969" endtime="20201115 22:11:07.975"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:07.978" endtime="20201115 22:11:07.979"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:07.982" endtime="20201115 22:11:08.001"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.980" endtime="20201115 22:11:08.002"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.976" endtime="20201115 22:11:08.002"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.575" endtime="20201115 22:11:08.003"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.574" endtime="20201115 22:11:08.003"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.573" endtime="20201115 22:11:08.003"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:08.005" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:08.014" endtime="20201115 22:11:08.050"></status>
</kw>
<msg timestamp="20201115 22:11:08.050" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:08.013" endtime="20201115 22:11:08.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:08.053" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:08.051" endtime="20201115 22:11:08.053"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:08.054" endtime="20201115 22:11:08.055"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.010" endtime="20201115 22:11:08.056"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.008" endtime="20201115 22:11:08.056"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:08.063" endtime="20201115 22:11:08.350"></status>
</kw>
<msg timestamp="20201115 22:11:08.353" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024718833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024730542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:08.061" endtime="20201115 22:11:08.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:08.361" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024718833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024730542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:08.354" endtime="20201115 22:11:08.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:08.362" endtime="20201115 22:11:08.363"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.059" endtime="20201115 22:11:08.364"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.057" endtime="20201115 22:11:08.364"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:08.369" level="INFO">${RESULT} = [{'time': 0.024730542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1709000000002107e-05, 'source_diff': 1.1709000000002107e-05}, {'time': 0.025238875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:08.365" endtime="20201115 22:11:08.369"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:08.382" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:08.370" endtime="20201115 22:11:08.382"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:08.386" level="INFO">NAME: 00-overhead-15-set</msg>
<status status="PASS" starttime="20201115 22:11:08.385" endtime="20201115 22:11:08.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:08.389" level="INFO">VALUE: [1.1709000000002107e-05, 1.1707999999999164e-05, 1.1792000000000052e-05, 1.1749999999997873e-05, 1.1722000000002203e-05, 1.1709000000002107e-05, 1.1750000000001343e-05, 1.1750000000001343e-05, 1.1735999999998303e-05, 1.1722000000002203e-05, 1.1721999999998733e-05, 1.1721999999998733e-05, 1.1736000000001773e-05, 1.1695000000006006e-05, 1.1721999999998733e-05, 1.1736999999997777e-05, 1.1749999999997873e-05, 1.1736000000005242e-05, 1.1750000000004812e-05, 1.1735999999998303e-05, 1.1721999999998733e-05, 1.1708000000006102e-05, 1.1708999999998637e-05, 1.1735999999998303e-05, 1.1735999999998303e-05, 1.1693999999999594e-05, 1.1735999999998303e-05, 1.1792000000003522e-05, 1.1721999999998733e-05, 1.1763999999997443e-05, 1.1721999999998733e-05, 1.1791000000004048e-05, 1.1707999999999164e-05, 1.1749999999997873e-05, 1.1750000000004812e-05, 1.1708999999998637e-05, 1.1721999999998733e-05, 1.1722000000005672e-05, 1.1735999999998303e-05, 1.1693999999999594e-05, 1.1736000000005242e-05, 1.1750000000004812e-05, 1.1707999999999164e-05, 1.1763999999997443e-05, 1.1721999999998733e-05, 1.1721999999998733e-05, 1.1749999999997873e-05, 1.1707999999999164e-05, 1.1764000000004382e-05, 1.1735999999998303e-05]</msg>
<status status="PASS" starttime="20201115 22:11:08.388" endtime="20201115 22:11:08.390"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.383" endtime="20201115 22:11:08.390"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:08.393" endtime="20201115 22:11:08.394"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:08.396" endtime="20201115 22:11:08.415"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.395" endtime="20201115 22:11:08.416"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.391" endtime="20201115 22:11:08.417"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.006" endtime="20201115 22:11:08.417"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.004" endtime="20201115 22:11:08.417"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.003" endtime="20201115 22:11:08.417"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:08.420" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:08.428" endtime="20201115 22:11:08.471"></status>
</kw>
<msg timestamp="20201115 22:11:08.472" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:08.427" endtime="20201115 22:11:08.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:08.474" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:08.473" endtime="20201115 22:11:08.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:08.475" endtime="20201115 22:11:08.477"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.424" endtime="20201115 22:11:08.478"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.422" endtime="20201115 22:11:08.478"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:08.484" endtime="20201115 22:11:08.772"></status>
</kw>
<msg timestamp="20201115 22:11:08.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027487236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027499222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:08.483" endtime="20201115 22:11:08.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:08.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027487236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027499222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:08.776" endtime="20201115 22:11:08.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:08.784" endtime="20201115 22:11:08.785"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.480" endtime="20201115 22:11:08.786"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.479" endtime="20201115 22:11:08.786"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:08.791" level="INFO">${RESULT} = [{'time': 0.027499222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1985999999998553e-05, 'source_diff': 1.1985999999998553e-05}, {'time': 0.028039403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:08.787" endtime="20201115 22:11:08.791"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:08.804" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:08.792" endtime="20201115 22:11:08.804"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:08.808" level="INFO">NAME: 00-overhead-16-set</msg>
<status status="PASS" starttime="20201115 22:11:08.807" endtime="20201115 22:11:08.809"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:08.811" level="INFO">VALUE: [1.1985999999998553e-05, 1.2084000000002482e-05, 1.2000000000001593e-05, 1.1999999999998123e-05, 1.1999999999998123e-05, 1.1973000000001927e-05, 1.2055999999999872e-05, 1.1971999999998983e-05, 1.1985999999998553e-05, 1.2027999999997263e-05, 1.1957999999999414e-05, 1.202699999999779e-05, 1.1999999999998123e-05, 1.2013999999997693e-05, 1.202699999999779e-05, 1.2013999999997693e-05, 1.1971999999998983e-05, 1.1943999999999844e-05, 1.1985999999998553e-05, 1.1971999999998983e-05, 1.1985999999998553e-05, 1.1971999999998983e-05, 1.1972000000005922e-05, 1.1986000000005492e-05, 1.1972000000005922e-05, 1.1930999999999747e-05, 1.1971999999998983e-05, 1.1999999999998123e-05, 1.1971999999998983e-05, 1.2014000000004632e-05, 1.1986000000005492e-05, 1.1985999999998553e-05, 1.1985999999998553e-05, 1.1943999999999844e-05, 1.2027999999997263e-05, 1.2013999999997693e-05, 1.1985999999998553e-05, 1.1985999999998553e-05, 1.1985999999998553e-05, 1.1987000000004966e-05, 1.1999999999998123e-05, 1.2014000000004632e-05, 1.2013999999997693e-05, 1.1985999999998553e-05, 1.1999999999998123e-05, 1.1999999999998123e-05, 1.1985999999998553e-05, 1.1999999999998123e-05, 1.2000000000005062e-05, 1.2013999999997693e-05]</msg>
<status status="PASS" starttime="20201115 22:11:08.810" endtime="20201115 22:11:08.812"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.805" endtime="20201115 22:11:08.812"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:08.815" endtime="20201115 22:11:08.816"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:08.818" endtime="20201115 22:11:08.838"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.817" endtime="20201115 22:11:08.838"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.813" endtime="20201115 22:11:08.839"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.420" endtime="20201115 22:11:08.839"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.418" endtime="20201115 22:11:08.839"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.418" endtime="20201115 22:11:08.839"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:08.842" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:08.851" endtime="20201115 22:11:08.894"></status>
</kw>
<msg timestamp="20201115 22:11:08.895" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:08.849" endtime="20201115 22:11:08.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:08.897" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:08.896" endtime="20201115 22:11:08.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:08.898" endtime="20201115 22:11:08.900"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.846" endtime="20201115 22:11:08.900"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.844" endtime="20201115 22:11:08.901"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:08.907" endtime="20201115 22:11:09.195"></status>
</kw>
<msg timestamp="20201115 22:11:09.198" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027357444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027369694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:08.906" endtime="20201115 22:11:09.199"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:09.206" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027357444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027369694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:09.199" endtime="20201115 22:11:09.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:09.208" endtime="20201115 22:11:09.209"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.903" endtime="20201115 22:11:09.210"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.901" endtime="20201115 22:11:09.210"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:09.214" level="INFO">${RESULT} = [{'time': 0.027369694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2249999999998373e-05, 'source_diff': 1.2249999999998373e-05}, {'time': 0.027946111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:09.211" endtime="20201115 22:11:09.215"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:09.228" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:09.216" endtime="20201115 22:11:09.228"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:09.233" level="INFO">NAME: 00-overhead-17-set</msg>
<status status="PASS" starttime="20201115 22:11:09.232" endtime="20201115 22:11:09.233"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:09.235" level="INFO">VALUE: [1.2249999999998373e-05, 1.2263999999997943e-05, 1.2222000000002703e-05, 1.2235999999998803e-05, 1.2221999999999233e-05, 1.2264000000001413e-05, 1.2292000000000552e-05, 1.226299999999847e-05, 1.2263999999997943e-05, 1.2208999999999137e-05, 1.2222000000006172e-05, 1.2235999999998803e-05, 1.2250000000005312e-05, 1.2264000000004882e-05, 1.2207999999999664e-05, 1.2249999999998373e-05, 1.2221999999999233e-05, 1.2194000000000094e-05, 1.2221999999999233e-05, 1.2235999999998803e-05, 1.2152000000001384e-05, 1.2194000000000094e-05, 1.2250000000005312e-05, 1.2207999999999664e-05, 1.2249999999998373e-05, 1.2221999999999233e-05, 1.2235999999998803e-05, 1.2235999999998803e-05, 1.2292000000004022e-05, 1.2263999999997943e-05, 1.2221999999999233e-05, 1.2235999999998803e-05, 1.2249999999998373e-05, 1.2277999999997513e-05, 1.2249999999998373e-05, 1.2207999999999664e-05, 1.2222999999998707e-05, 1.2221999999999233e-05, 1.2263999999997943e-05, 1.2249999999998373e-05, 1.2291999999997083e-05, 1.2235999999998803e-05, 1.2236000000005742e-05, 1.2249999999998373e-05, 1.2249999999998373e-05, 1.2236000000005742e-05, 1.2263999999997943e-05, 1.2249999999998373e-05, 1.2278000000004452e-05, 1.2223000000005646e-05]</msg>
<status status="PASS" starttime="20201115 22:11:09.234" endtime="20201115 22:11:09.236"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.229" endtime="20201115 22:11:09.236"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:09.238" endtime="20201115 22:11:09.240"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:09.242" endtime="20201115 22:11:09.261"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.240" endtime="20201115 22:11:09.262"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.237" endtime="20201115 22:11:09.262"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.842" endtime="20201115 22:11:09.263"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.841" endtime="20201115 22:11:09.263"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.840" endtime="20201115 22:11:09.263"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:09.265" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:09.274" endtime="20201115 22:11:09.316"></status>
</kw>
<msg timestamp="20201115 22:11:09.316" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:09.273" endtime="20201115 22:11:09.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:09.319" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:09.317" endtime="20201115 22:11:09.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:09.320" endtime="20201115 22:11:09.321"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.270" endtime="20201115 22:11:09.322"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.268" endtime="20201115 22:11:09.322"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:09.329" endtime="20201115 22:11:09.613"></status>
</kw>
<msg timestamp="20201115 22:11:09.616" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025840542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025853056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:09.327" endtime="20201115 22:11:09.616"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:09.624" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025840542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025853056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:09.617" endtime="20201115 22:11:09.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:09.626" endtime="20201115 22:11:09.627"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.325" endtime="20201115 22:11:09.628"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.323" endtime="20201115 22:11:09.628"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:09.632" level="INFO">${RESULT} = [{'time': 0.025853056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2513999999998193e-05, 'source_diff': 1.2513999999998193e-05}, {'time': 0.026459653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:09.629" endtime="20201115 22:11:09.633"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:09.646" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:09.633" endtime="20201115 22:11:09.646"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:09.650" level="INFO">NAME: 00-overhead-18-set</msg>
<status status="PASS" starttime="20201115 22:11:09.649" endtime="20201115 22:11:09.651"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:09.653" level="INFO">VALUE: [1.2513999999998193e-05, 1.2471999999999483e-05, 1.2457999999999914e-05, 1.2471999999999483e-05, 1.2499999999998623e-05, 1.2443999999996874e-05, 1.2486000000002523e-05, 1.2500000000002093e-05, 1.2471999999999483e-05, 1.2485999999999053e-05, 1.2499999999998623e-05, 1.2499999999998623e-05, 1.2471999999999483e-05, 1.2471999999999483e-05, 1.2513999999998193e-05, 1.2499999999998623e-05, 1.254099999999786e-05, 1.2485999999999053e-05, 1.2471999999999483e-05, 1.2472999999998957e-05, 1.2458999999999387e-05, 1.2485999999999053e-05, 1.2444000000000344e-05, 1.2403000000001108e-05, 1.2499999999998623e-05, 1.2415999999994265e-05, 1.2514000000005132e-05, 1.2499999999998623e-05, 1.2486000000005992e-05, 1.2485999999999053e-05, 1.2444999999999817e-05, 1.2499999999998623e-05, 1.2417000000000677e-05, 1.2500000000005562e-05, 1.2527999999997763e-05, 1.2528000000004702e-05, 1.2487000000005466e-05, 1.2472000000006422e-05, 1.2444000000000344e-05, 1.2499999999998623e-05, 1.2485999999999053e-05, 1.2471999999999483e-05, 1.2485999999999053e-05, 1.2486000000005992e-05, 1.2471999999999483e-05, 1.2485999999999053e-05, 1.2499999999998623e-05, 1.2429999999993835e-05, 1.2458999999999387e-05, 1.2499999999998623e-05]</msg>
<status status="PASS" starttime="20201115 22:11:09.651" endtime="20201115 22:11:09.653"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.647" endtime="20201115 22:11:09.654"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:09.656" endtime="20201115 22:11:09.657"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:09.659" endtime="20201115 22:11:09.679"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.658" endtime="20201115 22:11:09.679"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.654" endtime="20201115 22:11:09.680"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.266" endtime="20201115 22:11:09.680"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.264" endtime="20201115 22:11:09.680"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.263" endtime="20201115 22:11:09.681"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:09.683" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:09.692" endtime="20201115 22:11:09.737"></status>
</kw>
<msg timestamp="20201115 22:11:09.738" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:09.690" endtime="20201115 22:11:09.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:09.740" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:09.739" endtime="20201115 22:11:09.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:09.741" endtime="20201115 22:11:09.743"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.687" endtime="20201115 22:11:09.743"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.685" endtime="20201115 22:11:09.744"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:09.751" endtime="20201115 22:11:10.040"></status>
</kw>
<msg timestamp="20201115 22:11:10.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025173972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025186722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:09.749" endtime="20201115 22:11:10.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:10.065" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025173972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025186722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:10.049" endtime="20201115 22:11:10.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:10.068" endtime="20201115 22:11:10.071"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.746" endtime="20201115 22:11:10.072"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.744" endtime="20201115 22:11:10.073"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:10.082" level="INFO">${RESULT} = [{'time': 0.025186722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2750000000002343e-05, 'source_diff': 1.2750000000002343e-05}, {'time': 0.025822903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:10.075" endtime="20201115 22:11:10.082"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:10.112" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:10.084" endtime="20201115 22:11:10.113"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:10.122" level="INFO">NAME: 00-overhead-19-set</msg>
<status status="PASS" starttime="20201115 22:11:10.120" endtime="20201115 22:11:10.122"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:10.127" level="INFO">VALUE: [1.2750000000002343e-05, 1.2708999999999637e-05, 1.2749999999998873e-05, 1.2681000000000497e-05, 1.2721999999999734e-05, 1.2721999999999734e-05, 1.2708999999999637e-05, 1.2778000000001483e-05, 1.2708000000000164e-05, 1.2736000000002773e-05, 1.2721999999999734e-05, 1.2735999999999303e-05, 1.2721999999999734e-05, 1.2721999999999734e-05, 1.2749999999998873e-05, 1.2735999999999303e-05, 1.2735999999999303e-05, 1.2735999999999303e-05, 1.2749999999998873e-05, 1.277699999999854e-05, 1.2735999999999303e-05, 1.2735999999999303e-05, 1.2721999999999734e-05, 1.2750000000005812e-05, 1.2735999999999303e-05, 1.2735999999999303e-05, 1.2736999999998777e-05, 1.2708000000000164e-05, 1.2721999999999734e-05, 1.2735999999999303e-05, 1.2764000000005382e-05, 1.2749999999998873e-05, 1.2708000000000164e-05, 1.2763999999998443e-05, 1.2721999999999734e-05, 1.2708000000000164e-05, 1.2721999999999734e-05, 1.2736000000006242e-05, 1.2721999999999734e-05, 1.2722999999999207e-05, 1.2749999999998873e-05, 1.2735999999999303e-05, 1.2749999999998873e-05, 1.2763999999998443e-05, 1.2749999999998873e-05, 1.2777999999998013e-05, 1.280499999999768e-05, 1.2749999999998873e-05, 1.2749999999998873e-05, 1.2791999999997583e-05]</msg>
<status status="PASS" starttime="20201115 22:11:10.124" endtime="20201115 22:11:10.128"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.114" endtime="20201115 22:11:10.129"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:10.134" endtime="20201115 22:11:10.136"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:10.140" endtime="20201115 22:11:10.160"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.138" endtime="20201115 22:11:10.160"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.130" endtime="20201115 22:11:10.161"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.683" endtime="20201115 22:11:10.161"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.682" endtime="20201115 22:11:10.161"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.681" endtime="20201115 22:11:10.161"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:10.164" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:10.173" endtime="20201115 22:11:10.220"></status>
</kw>
<msg timestamp="20201115 22:11:10.221" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:10.171" endtime="20201115 22:11:10.221"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:10.223" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:10.222" endtime="20201115 22:11:10.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:10.225" endtime="20201115 22:11:10.226"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.168" endtime="20201115 22:11:10.227"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.166" endtime="20201115 22:11:10.227"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:10.234" endtime="20201115 22:11:10.520"></status>
</kw>
<msg timestamp="20201115 22:11:10.523" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026715111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026728097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:10.232" endtime="20201115 22:11:10.523"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:10.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026715111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026728097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:10.524" endtime="20201115 22:11:10.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:10.532" endtime="20201115 22:11:10.534"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.230" endtime="20201115 22:11:10.534"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.228" endtime="20201115 22:11:10.535"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:10.539" level="INFO">${RESULT} = [{'time': 0.026728097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2985999999999553e-05, 'source_diff': 1.2985999999999553e-05}, {'time': 0.027401917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:10.535" endtime="20201115 22:11:10.539"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:10.552" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:10.540" endtime="20201115 22:11:10.552"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:10.557" level="INFO">NAME: 00-overhead-20-set</msg>
<status status="PASS" starttime="20201115 22:11:10.556" endtime="20201115 22:11:10.557"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:10.559" level="INFO">VALUE: [1.2985999999999553e-05, 1.2973000000002927e-05, 1.2971999999999984e-05, 1.2971999999999984e-05, 1.3000000000002593e-05, 1.2986000000003023e-05, 1.2985999999999553e-05, 1.2985999999999553e-05, 1.2958000000000414e-05, 1.2972999999999457e-05, 1.2971999999999984e-05, 1.2971999999999984e-05, 1.2985999999999553e-05, 1.2999999999999123e-05, 1.2971999999999984e-05, 1.2985999999999553e-05, 1.2986999999999027e-05, 1.2972999999999457e-05, 1.2985999999999553e-05, 1.2971999999999984e-05, 1.2971999999999984e-05, 1.2985999999999553e-05, 1.2972999999999457e-05, 1.2958999999999887e-05, 1.2971999999999984e-05, 1.2999999999999123e-05, 1.2916000000001704e-05, 1.2999999999999123e-05, 1.2971999999999984e-05, 1.2985999999999553e-05, 1.2958999999999887e-05, 1.2971999999999984e-05, 1.2944000000000844e-05, 1.2999999999999123e-05, 1.3041000000005298e-05, 1.3041999999997833e-05, 1.2985999999999553e-05, 1.3013999999998693e-05, 1.2985999999999553e-05, 1.2985999999999553e-05, 1.2985999999999553e-05, 1.3000000000006062e-05, 1.2985999999999553e-05, 1.2972999999999457e-05, 1.2971999999999984e-05, 1.3069999999996973e-05, 1.2986999999999027e-05, 1.2986999999999027e-05, 1.2985999999999553e-05, 1.3013999999998693e-05]</msg>
<status status="PASS" starttime="20201115 22:11:10.558" endtime="20201115 22:11:10.560"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.553" endtime="20201115 22:11:10.560"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:10.562" endtime="20201115 22:11:10.564"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:10.566" endtime="20201115 22:11:10.585"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.564" endtime="20201115 22:11:10.586"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.561" endtime="20201115 22:11:10.586"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.164" endtime="20201115 22:11:10.587"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.163" endtime="20201115 22:11:10.587"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.162" endtime="20201115 22:11:10.587"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:10.589" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:10.599" endtime="20201115 22:11:10.647"></status>
</kw>
<msg timestamp="20201115 22:11:10.647" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:10.597" endtime="20201115 22:11:10.647"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:10.650" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:10.648" endtime="20201115 22:11:10.650"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:10.651" endtime="20201115 22:11:10.652"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.595" endtime="20201115 22:11:10.653"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.592" endtime="20201115 22:11:10.653"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:10.660" endtime="20201115 22:11:10.965"></status>
</kw>
<msg timestamp="20201115 22:11:10.968" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028156306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028169528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:10.658" endtime="20201115 22:11:10.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:10.976" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028156306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028169528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:10.969" endtime="20201115 22:11:10.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:10.977" endtime="20201115 22:11:10.979"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.656" endtime="20201115 22:11:10.980"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.654" endtime="20201115 22:11:10.980"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:10.984" level="INFO">${RESULT} = [{'time': 0.028169528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3222000000000234e-05, 'source_diff': 1.3222000000000234e-05}, {'time': 0.028878486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:10.981" endtime="20201115 22:11:10.984"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:10.997" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:10.985" endtime="20201115 22:11:10.998"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:11.002" level="INFO">NAME: 00-overhead-21-set</msg>
<status status="PASS" starttime="20201115 22:11:11.001" endtime="20201115 22:11:11.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:11.005" level="INFO">VALUE: [1.3222000000000234e-05, 1.3249999999999373e-05, 1.3236000000003273e-05, 1.3249999999999373e-05, 1.3222000000000234e-05, 1.3264000000005882e-05, 1.3222999999999707e-05, 1.3249999999999373e-05, 1.3249999999999373e-05, 1.3249999999999373e-05, 1.3222000000000234e-05, 1.3249999999999373e-05, 1.3222000000000234e-05, 1.3263999999998943e-05, 1.3209000000000137e-05, 1.3235999999999803e-05, 1.3263999999998943e-05, 1.3235999999999803e-05, 1.3277999999998513e-05, 1.3194000000001094e-05, 1.3195000000000567e-05, 1.3208000000000664e-05, 1.3263999999998943e-05, 1.3249999999999373e-05, 1.3249999999999373e-05, 1.3249999999999373e-05, 1.3235999999999803e-05, 1.3222000000000234e-05, 1.3236999999999277e-05, 1.3235999999999803e-05, 1.3221999999993295e-05, 1.330499999999818e-05, 1.3278000000005452e-05, 1.3249999999999373e-05, 1.3263999999998943e-05, 1.3235999999999803e-05, 1.3209000000000137e-05, 1.3263999999998943e-05, 1.3235999999999803e-05, 1.3249999999999373e-05, 1.3222000000000234e-05, 1.3194000000001094e-05, 1.3263999999998943e-05, 1.3291999999998083e-05, 1.3235999999999803e-05, 1.3277999999998513e-05, 1.3195000000000567e-05, 1.3222000000000234e-05, 1.3235999999999803e-05, 1.3235999999999803e-05]</msg>
<status status="PASS" starttime="20201115 22:11:11.003" endtime="20201115 22:11:11.005"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.998" endtime="20201115 22:11:11.005"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:11.008" endtime="20201115 22:11:11.009"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:11.012" endtime="20201115 22:11:11.031"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.010" endtime="20201115 22:11:11.032"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.006" endtime="20201115 22:11:11.032"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.590" endtime="20201115 22:11:11.033"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.588" endtime="20201115 22:11:11.033"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.587" endtime="20201115 22:11:11.033"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:11.035" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:11.044" endtime="20201115 22:11:11.094"></status>
</kw>
<msg timestamp="20201115 22:11:11.095" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:11.042" endtime="20201115 22:11:11.095"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:11.097" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:11.096" endtime="20201115 22:11:11.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:11.098" endtime="20201115 22:11:11.100"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.040" endtime="20201115 22:11:11.101"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.038" endtime="20201115 22:11:11.101"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:11.107" endtime="20201115 22:11:11.392"></status>
</kw>
<msg timestamp="20201115 22:11:11.395" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024356472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024369931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:11.106" endtime="20201115 22:11:11.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:11.403" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024356472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024369931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:11.396" endtime="20201115 22:11:11.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:11.404" endtime="20201115 22:11:11.406"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.103" endtime="20201115 22:11:11.406"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.102" endtime="20201115 22:11:11.407"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:11.411" level="INFO">${RESULT} = [{'time': 0.024369931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3459000000000387e-05, 'source_diff': 1.3459000000000387e-05}, {'time': 0.025105792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:11.408" endtime="20201115 22:11:11.411"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:11.424" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:11.412" endtime="20201115 22:11:11.425"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:11.429" level="INFO">NAME: 00-overhead-22-set</msg>
<status status="PASS" starttime="20201115 22:11:11.428" endtime="20201115 22:11:11.429"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:11.432" level="INFO">VALUE: [1.3459000000000387e-05, 1.3444999999997348e-05, 1.3486000000000054e-05, 1.3486000000000054e-05, 1.3401999999999165e-05, 1.3443999999997874e-05, 1.3500000000003093e-05, 1.3486000000000054e-05, 1.3459000000000387e-05, 1.3486000000000054e-05, 1.3486000000000054e-05, 1.3472000000000484e-05, 1.3444000000001344e-05, 1.3472000000000484e-05, 1.3486999999999527e-05, 1.3472999999999957e-05, 1.3486000000000054e-05, 1.3499999999999623e-05, 1.3458000000000914e-05, 1.3486000000000054e-05, 1.3499999999999623e-05, 1.3499999999999623e-05, 1.3458000000000914e-05, 1.3486000000000054e-05, 1.3472000000000484e-05, 1.3472000000000484e-05, 1.3486000000000054e-05, 1.3472000000000484e-05, 1.3361000000003398e-05, 1.3472000000000484e-05, 1.3556000000004842e-05, 1.3458000000000914e-05, 1.352699999999929e-05, 1.3499999999999623e-05, 1.3486000000000054e-05, 1.3472000000000484e-05, 1.3459000000000387e-05, 1.3499999999999623e-05, 1.3513999999999193e-05, 1.3486000000000054e-05, 1.3528000000005702e-05, 1.3486000000000054e-05, 1.355499999999843e-05, 1.3472000000000484e-05, 1.3430999999994309e-05, 1.3499999999999623e-05, 1.3375000000002968e-05, 1.3499999999999623e-05, 1.3486000000000054e-05, 1.3459000000000387e-05]</msg>
<status status="PASS" starttime="20201115 22:11:11.430" endtime="20201115 22:11:11.432"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.425" endtime="20201115 22:11:11.433"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:11.435" endtime="20201115 22:11:11.437"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:11.439" endtime="20201115 22:11:11.458"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.437" endtime="20201115 22:11:11.459"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.434" endtime="20201115 22:11:11.459"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.036" endtime="20201115 22:11:11.460"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.034" endtime="20201115 22:11:11.460"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.033" endtime="20201115 22:11:11.460"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:11.462" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:11.471" endtime="20201115 22:11:11.521"></status>
</kw>
<msg timestamp="20201115 22:11:11.522" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:11.470" endtime="20201115 22:11:11.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:11.524" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:11.523" endtime="20201115 22:11:11.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:11.525" endtime="20201115 22:11:11.527"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.467" endtime="20201115 22:11:11.527"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.465" endtime="20201115 22:11:11.528"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:11.534" endtime="20201115 22:11:11.820"></status>
</kw>
<msg timestamp="20201115 22:11:11.823" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024345653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024359389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:11.533" endtime="20201115 22:11:11.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:11.831" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024345653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024359389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:11.824" endtime="20201115 22:11:11.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:11.832" endtime="20201115 22:11:11.834"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.530" endtime="20201115 22:11:11.835"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.528" endtime="20201115 22:11:11.835"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:11.839" level="INFO">${RESULT} = [{'time': 0.024359389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3736000000000304e-05, 'source_diff': 1.3736000000000304e-05}, {'time': 0.025131417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:11.836" endtime="20201115 22:11:11.839"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:11.852" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:11.840" endtime="20201115 22:11:11.853"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:11.857" level="INFO">NAME: 00-overhead-23-set</msg>
<status status="PASS" starttime="20201115 22:11:11.856" endtime="20201115 22:11:11.857"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:11.860" level="INFO">VALUE: [1.3736000000000304e-05, 1.3723000000000207e-05, 1.3722000000000734e-05, 1.3707999999997694e-05, 1.3722000000000734e-05, 1.3749999999999873e-05, 1.3708000000001164e-05, 1.3736000000000304e-05, 1.3763999999999443e-05, 1.3722000000000734e-05, 1.3709000000000637e-05, 1.3694000000001594e-05, 1.3722000000000734e-05, 1.379099999999911e-05, 1.3805999999998153e-05, 1.3723000000000207e-05, 1.3722000000000734e-05, 1.3749999999999873e-05, 1.3763999999999443e-05, 1.3722000000000734e-05, 1.3722000000000734e-05, 1.3736999999999777e-05, 1.3777999999999013e-05, 1.3736000000000304e-05, 1.3749999999999873e-05, 1.3736000000000304e-05, 1.3735999999993365e-05, 1.3722000000000734e-05, 1.3722000000000734e-05, 1.3736000000000304e-05, 1.3749999999999873e-05, 1.3681000000001498e-05, 1.3722000000000734e-05, 1.3722000000000734e-05, 1.3653000000002358e-05, 1.3652999999995419e-05, 1.3735999999993365e-05, 1.3708000000001164e-05, 1.3695000000001067e-05, 1.3736999999999777e-05, 1.3736000000000304e-05, 1.3749999999999873e-05, 1.3763999999999443e-05, 1.3777000000006479e-05, 1.3736000000000304e-05, 1.376299999999997e-05, 1.3721999999993795e-05, 1.3749999999999873e-05, 1.3653000000002358e-05, 1.3763999999999443e-05]</msg>
<status status="PASS" starttime="20201115 22:11:11.858" endtime="20201115 22:11:11.860"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.853" endtime="20201115 22:11:11.861"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:11.863" endtime="20201115 22:11:11.865"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:11.867" endtime="20201115 22:11:11.886"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.865" endtime="20201115 22:11:11.887"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.862" endtime="20201115 22:11:11.887"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.463" endtime="20201115 22:11:11.888"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.461" endtime="20201115 22:11:11.888"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.460" endtime="20201115 22:11:11.888"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:11.890" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:11.899" endtime="20201115 22:11:11.948"></status>
</kw>
<msg timestamp="20201115 22:11:11.948" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:11.898" endtime="20201115 22:11:11.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:11.951" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:11.949" endtime="20201115 22:11:11.951"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:11.952" endtime="20201115 22:11:11.953"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.895" endtime="20201115 22:11:11.954"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.893" endtime="20201115 22:11:11.954"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:11.961" endtime="20201115 22:11:12.247"></status>
</kw>
<msg timestamp="20201115 22:11:12.250" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023447778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023461722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:11.959" endtime="20201115 22:11:12.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:12.258" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023447778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023461722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:12.251" endtime="20201115 22:11:12.258"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:12.259" endtime="20201115 22:11:12.261"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.957" endtime="20201115 22:11:12.261"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.955" endtime="20201115 22:11:12.262"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:12.266" level="INFO">${RESULT} = [{'time': 0.023461722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3944000000001844e-05, 'source_diff': 1.3944000000001844e-05}, {'time': 0.024271097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:12.262" endtime="20201115 22:11:12.270"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:12.283" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:12.271" endtime="20201115 22:11:12.283"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:12.288" level="INFO">NAME: 00-overhead-24-set</msg>
<status status="PASS" starttime="20201115 22:11:12.287" endtime="20201115 22:11:12.288"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:12.290" level="INFO">VALUE: [1.3944000000001844e-05, 1.3985999999997084e-05, 1.3986000000000554e-05, 1.4000000000000123e-05, 1.3973000000000457e-05, 1.3986000000000554e-05, 1.4013999999999693e-05, 1.4000000000000123e-05, 1.3958000000001414e-05, 1.3944000000001844e-05, 1.3959000000000887e-05, 1.3958000000001414e-05, 1.4027999999999263e-05, 1.4000000000000123e-05, 1.3986000000000554e-05, 1.3958000000001414e-05, 1.3986000000000554e-05, 1.3903000000002608e-05, 1.3958999999993948e-05, 1.3986000000000554e-05, 1.401299999999328e-05, 1.3958000000001414e-05, 1.3986000000000554e-05, 1.4000000000000123e-05, 1.3945000000001317e-05, 1.4000000000000123e-05, 1.3916999999995239e-05, 1.3944000000001844e-05, 1.3931000000001748e-05, 1.3972000000000984e-05, 1.3986000000000554e-05, 1.4000000000000123e-05, 1.3945000000001317e-05, 1.4000000000000123e-05, 1.3958000000001414e-05, 1.3957999999994475e-05, 1.3972000000000984e-05, 1.3958000000001414e-05, 1.3986000000000554e-05, 1.4013999999999693e-05, 1.3986000000000554e-05, 1.3957999999994475e-05, 1.4000000000000123e-05, 1.4000000000000123e-05, 1.3972999999993518e-05, 1.4000000000000123e-05, 1.3972000000000984e-05, 1.3986000000000554e-05, 1.3971999999994045e-05, 1.3972000000000984e-05]</msg>
<status status="PASS" starttime="20201115 22:11:12.289" endtime="20201115 22:11:12.291"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.284" endtime="20201115 22:11:12.291"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:12.293" endtime="20201115 22:11:12.295"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:12.297" endtime="20201115 22:11:12.316"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.295" endtime="20201115 22:11:12.317"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.292" endtime="20201115 22:11:12.317"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.891" endtime="20201115 22:11:12.318"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.889" endtime="20201115 22:11:12.318"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.888" endtime="20201115 22:11:12.318"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:12.320" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:12.329" endtime="20201115 22:11:12.385"></status>
</kw>
<msg timestamp="20201115 22:11:12.386" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:12.328" endtime="20201115 22:11:12.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:12.388" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:12.387" endtime="20201115 22:11:12.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:12.390" endtime="20201115 22:11:12.391"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.325" endtime="20201115 22:11:12.392"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.323" endtime="20201115 22:11:12.392"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:12.399" endtime="20201115 22:11:12.686"></status>
</kw>
<msg timestamp="20201115 22:11:12.690" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0253575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025371736, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:11:12.397" endtime="20201115 22:11:12.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:12.697" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0253575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025371736, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:11:12.691" endtime="20201115 22:11:12.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:12.699" endtime="20201115 22:11:12.701"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.395" endtime="20201115 22:11:12.701"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.393" endtime="20201115 22:11:12.702"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:12.706" level="INFO">${RESULT} = [{'time': 0.025371736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4235999999997334e-05, 'source_diff': 1.4235999999997334e-05}, {'time': 0.026210847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:12.702" endtime="20201115 22:11:12.706"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:12.719" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:12.707" endtime="20201115 22:11:12.719"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:12.724" level="INFO">NAME: 00-overhead-25-set</msg>
<status status="PASS" starttime="20201115 22:11:12.723" endtime="20201115 22:11:12.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:12.726" level="INFO">VALUE: [1.4235999999997334e-05, 1.4263999999999943e-05, 1.430499999999918e-05, 1.4250000000000373e-05, 1.4263999999999943e-05, 1.4250000000000373e-05, 1.4236000000000804e-05, 1.4236000000000804e-05, 1.4194000000002094e-05, 1.4221999999994295e-05, 1.426300000000047e-05, 1.4222000000001234e-05, 1.4222000000001234e-05, 1.4222000000001234e-05, 1.4263999999999943e-05, 1.4263999999999943e-05, 1.4263999999999943e-05, 1.4193999999995155e-05, 1.4236000000000804e-05, 1.4263999999999943e-05, 1.4223000000000707e-05, 1.4208000000001664e-05, 1.427700000000004e-05, 1.4250000000000373e-05, 1.4236000000000804e-05, 1.4221999999994295e-05, 1.4263999999999943e-05, 1.4250000000000373e-05, 1.4221999999994295e-05, 1.4222000000001234e-05, 1.4263999999999943e-05, 1.4223000000000707e-05, 1.4236000000000804e-05, 1.4263999999999943e-05, 1.4250000000000373e-05, 1.4236000000000804e-05, 1.4209000000001137e-05, 1.4193999999995155e-05, 1.4223000000000707e-05, 1.4222000000001234e-05, 1.4236000000000804e-05, 1.4236000000000804e-05, 1.4222000000001234e-05, 1.4235999999993865e-05, 1.4236000000000804e-05, 1.4263999999999943e-05, 1.4221999999994295e-05, 1.4263999999999943e-05, 1.4236000000000804e-05, 1.4236000000000804e-05]</msg>
<status status="PASS" starttime="20201115 22:11:12.725" endtime="20201115 22:11:12.726"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.720" endtime="20201115 22:11:12.727"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:12.729" endtime="20201115 22:11:12.731"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:12.733" endtime="20201115 22:11:12.752"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.731" endtime="20201115 22:11:12.753"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.728" endtime="20201115 22:11:12.753"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.321" endtime="20201115 22:11:12.753"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.319" endtime="20201115 22:11:12.754"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.319" endtime="20201115 22:11:12.754"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.249" endtime="20201115 22:11:12.754"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="teardown">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:12.758" endtime="20201115 22:11:12.778"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.757" endtime="20201115 22:11:12.779"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.755" endtime="20201115 22:11:12.779"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:11:02.176" endtime="20201115 22:11:12.779" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Remove List">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:12.786" endtime="20201115 22:11:12.806"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.785" endtime="20201115 22:11:12.806"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:12.821" endtime="20201115 22:11:12.838"></status>
</kw>
<msg timestamp="20201115 22:11:12.839" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:12.819" endtime="20201115 22:11:12.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:12.841" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:12.840" endtime="20201115 22:11:12.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:11:12.844" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:11:12.842" endtime="20201115 22:11:12.845"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:12.816" endtime="20201115 22:11:12.845"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:12.813" endtime="20201115 22:11:12.846"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.812" endtime="20201115 22:11:12.846"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:11:12.850" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:11:12.849" endtime="20201115 22:11:12.850"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.847" endtime="20201115 22:11:12.851"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.811" endtime="20201115 22:11:12.851"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.810" endtime="20201115 22:11:12.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:12.852" endtime="20201115 22:11:12.853"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.809" endtime="20201115 22:11:12.854"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.807" endtime="20201115 22:11:12.854"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.784" endtime="20201115 22:11:12.854"></status>
</kw>
<kw name="${n} IN RANGE [ 25 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:12.858" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:12.867" endtime="20201115 22:11:12.883"></status>
</kw>
<msg timestamp="20201115 22:11:12.884" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:12.865" endtime="20201115 22:11:12.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:12.886" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:12.885" endtime="20201115 22:11:12.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:12.888" endtime="20201115 22:11:12.889"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.862" endtime="20201115 22:11:12.890"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.860" endtime="20201115 22:11:12.890"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:12.897" endtime="20201115 22:11:13.181"></status>
</kw>
<msg timestamp="20201115 22:11:13.184" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073362319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.073380347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:12.895" endtime="20201115 22:11:13.184"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:13.192" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073362319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.073380347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:13.185" endtime="20201115 22:11:13.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:13.194" endtime="20201115 22:11:13.196"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.893" endtime="20201115 22:11:13.197"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.891" endtime="20201115 22:11:13.197"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:13.202" level="INFO">${RESULT} = [{'time': 0.073380347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8028000000003264e-05, 'source_diff': 1.8028000000003264e-05}, {'time': 0.073462153, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:13.198" endtime="20201115 22:11:13.202"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:13.215" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:13.203" endtime="20201115 22:11:13.215"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:13.220" level="INFO">NAME: 00-overhead-1-remove</msg>
<status status="PASS" starttime="20201115 22:11:13.219" endtime="20201115 22:11:13.220"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:13.222" level="INFO">VALUE: [1.8028000000003264e-05, 1.8013999999996755e-05, 1.8042000000009772e-05, 1.8056000000002403e-05, 1.8013999999996755e-05, 1.8028000000003264e-05, 1.8028000000003264e-05, 1.7973000000004458e-05, 1.8000000000004124e-05, 1.7985999999997615e-05, 1.802700000000379e-05, 1.8041999999995895e-05, 1.8042000000009772e-05, 1.8000000000004124e-05, 1.804099999999642e-05, 1.7985999999997615e-05, 1.8042000000009772e-05, 1.8013999999996755e-05, 1.8014000000010633e-05, 1.7999999999990246e-05, 1.7944000000005844e-05, 1.8014000000010633e-05, 1.8000000000004124e-05, 1.8028000000003264e-05, 1.797299999999058e-05, 1.8056000000002403e-05, 1.8014000000010633e-05, 1.8028000000003264e-05, 1.8000000000004124e-05, 1.8041999999995895e-05, 1.7973000000004458e-05, 1.8014000000010633e-05, 1.8042000000009772e-05, 1.8000000000004124e-05, 1.8027999999989386e-05, 1.8041999999995895e-05, 1.8028000000003264e-05, 1.8028000000003264e-05, 1.8028000000003264e-05, 1.8013999999996755e-05, 1.8056000000002403e-05, 1.8013999999996755e-05, 1.7985999999997615e-05, 1.8013999999996755e-05, 1.805500000000293e-05, 1.7986000000011493e-05, 1.8013999999996755e-05, 1.8000000000004124e-05, 1.802700000000379e-05, 1.805500000000293e-05]</msg>
<status status="PASS" starttime="20201115 22:11:13.221" endtime="20201115 22:11:13.223"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.216" endtime="20201115 22:11:13.223"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:13.225" endtime="20201115 22:11:13.227"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:13.229" endtime="20201115 22:11:13.248"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.227" endtime="20201115 22:11:13.249"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.224" endtime="20201115 22:11:13.249"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.858" endtime="20201115 22:11:13.250"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.856" endtime="20201115 22:11:13.250"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.856" endtime="20201115 22:11:13.250"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:13.252" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:13.261" endtime="20201115 22:11:13.285"></status>
</kw>
<msg timestamp="20201115 22:11:13.285" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:13.260" endtime="20201115 22:11:13.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:13.288" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:13.286" endtime="20201115 22:11:13.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:13.289" endtime="20201115 22:11:13.290"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.257" endtime="20201115 22:11:13.291"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.255" endtime="20201115 22:11:13.291"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:13.298" endtime="20201115 22:11:13.585"></status>
</kw>
<msg timestamp="20201115 22:11:13.588" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027762264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027783889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:13.296" endtime="20201115 22:11:13.589"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:13.597" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027762264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027783889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:13.590" endtime="20201115 22:11:13.597"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:13.598" endtime="20201115 22:11:13.599"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.294" endtime="20201115 22:11:13.600"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.292" endtime="20201115 22:11:13.600"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:13.605" level="INFO">${RESULT} = [{'time': 0.027783889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.162500000000081e-05, 'source_diff': 2.162500000000081e-05}, {'time': 0.027895931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:13.601" endtime="20201115 22:11:13.605"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:13.618" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:13.606" endtime="20201115 22:11:13.618"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:13.622" level="INFO">NAME: 00-overhead-2-remove</msg>
<status status="PASS" starttime="20201115 22:11:13.621" endtime="20201115 22:11:13.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:13.625" level="INFO">VALUE: [2.162500000000081e-05, 2.166699999999952e-05, 2.163900000000038e-05, 2.166699999999952e-05, 2.165299999999995e-05, 2.166699999999952e-05, 2.163900000000038e-05, 2.162500000000081e-05, 2.163899999999691e-05, 2.165299999999995e-05, 2.162500000000081e-05, 2.169500000000213e-05, 2.162500000000081e-05, 2.161099999999777e-05, 2.165299999999995e-05, 2.168099999999909e-05, 2.163900000000038e-05, 2.162500000000081e-05, 2.1666000000000046e-05, 2.1666000000000046e-05, 2.166699999999952e-05, 2.161100000000124e-05, 2.166699999999952e-05, 2.165299999999995e-05, 2.165299999999995e-05, 2.165299999999995e-05, 2.163900000000038e-05, 2.166699999999952e-05, 2.166699999999952e-05, 2.166699999999952e-05, 2.165299999999995e-05, 2.166699999999605e-05, 2.163900000000385e-05, 2.165300000000342e-05, 2.158299999999863e-05, 2.161099999999777e-05, 2.156899999999906e-05, 2.165299999999648e-05, 2.166700000000299e-05, 2.162499999999734e-05, 2.1652000000003946e-05, 2.166700000000299e-05, 2.1679999999996147e-05, 2.1666000000003516e-05, 2.165300000000342e-05, 2.1651999999997007e-05, 2.155499999999949e-05, 2.166699999999605e-05, 2.1612000000004183e-05, 2.163900000000385e-05]</msg>
<status status="PASS" starttime="20201115 22:11:13.624" endtime="20201115 22:11:13.625"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.619" endtime="20201115 22:11:13.626"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:13.628" endtime="20201115 22:11:13.629"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:13.632" endtime="20201115 22:11:13.651"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.630" endtime="20201115 22:11:13.652"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.626" endtime="20201115 22:11:13.652"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.253" endtime="20201115 22:11:13.652"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.251" endtime="20201115 22:11:13.653"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.250" endtime="20201115 22:11:13.653"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:13.655" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:13.664" endtime="20201115 22:11:13.687"></status>
</kw>
<msg timestamp="20201115 22:11:13.687" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:13.662" endtime="20201115 22:11:13.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:13.690" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:13.688" endtime="20201115 22:11:13.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:13.691" endtime="20201115 22:11:13.692"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.660" endtime="20201115 22:11:13.693"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.658" endtime="20201115 22:11:13.694"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:13.700" endtime="20201115 22:11:13.987"></status>
</kw>
<msg timestamp="20201115 22:11:13.990" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027072486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027094347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:13.699" endtime="20201115 22:11:13.990"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:13.998" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027072486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027094347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:13.991" endtime="20201115 22:11:13.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:13.999" endtime="20201115 22:11:14.001"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.696" endtime="20201115 22:11:14.002"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.694" endtime="20201115 22:11:14.002"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:14.006" level="INFO">${RESULT} = [{'time': 0.027094347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.186100000000149e-05, 'source_diff': 2.186100000000149e-05}, {'time': 0.027234375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:14.003" endtime="20201115 22:11:14.006"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:14.021" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:14.007" endtime="20201115 22:11:14.021"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:14.025" level="INFO">NAME: 00-overhead-3-remove</msg>
<status status="PASS" starttime="20201115 22:11:14.024" endtime="20201115 22:11:14.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:14.028" level="INFO">VALUE: [2.186100000000149e-05, 2.184700000000192e-05, 2.186100000000149e-05, 2.183299999999888e-05, 2.184700000000192e-05, 2.186099999999802e-05, 2.1806000000002684e-05, 2.19030000000002e-05, 2.1848000000001394e-05, 2.186099999999802e-05, 2.187500000000106e-05, 2.187499999999759e-05, 2.187500000000106e-05, 2.191699999999977e-05, 2.1862000000000964e-05, 2.187499999999759e-05, 2.186100000000149e-05, 2.186099999999802e-05, 2.186100000000149e-05, 2.1916000000000296e-05, 2.188899999999716e-05, 2.186100000000149e-05, 2.187500000000106e-05, 2.194500000000238e-05, 2.187499999999759e-05, 2.188900000000063e-05, 2.184699999999845e-05, 2.187499999999759e-05, 2.184700000000192e-05, 2.191699999999977e-05, 2.1915999999996827e-05, 2.191700000000324e-05, 2.186099999999802e-05, 2.187500000000453e-05, 2.187499999999759e-05, 2.183299999999888e-05, 2.186099999999802e-05, 2.187500000000453e-05, 2.186099999999802e-05, 2.186099999999802e-05, 2.183300000000582e-05, 2.186100000000496e-05, 2.183299999999888e-05, 2.187499999999759e-05, 2.1915999999996827e-05, 2.186099999999802e-05, 2.187499999999759e-05, 2.184699999999845e-05, 2.188899999999716e-05, 2.190299999999673e-05]</msg>
<status status="PASS" starttime="20201115 22:11:14.027" endtime="20201115 22:11:14.028"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.022" endtime="20201115 22:11:14.029"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:14.031" endtime="20201115 22:11:14.032"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:14.035" endtime="20201115 22:11:14.054"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.033" endtime="20201115 22:11:14.055"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.029" endtime="20201115 22:11:14.055"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.655" endtime="20201115 22:11:14.055"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.654" endtime="20201115 22:11:14.056"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.653" endtime="20201115 22:11:14.056"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:14.058" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:14.067" endtime="20201115 22:11:14.088"></status>
</kw>
<msg timestamp="20201115 22:11:14.089" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:14.065" endtime="20201115 22:11:14.089"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:14.091" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:14.090" endtime="20201115 22:11:14.092"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:14.092" endtime="20201115 22:11:14.094"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.063" endtime="20201115 22:11:14.094"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.060" endtime="20201115 22:11:14.095"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:14.101" endtime="20201115 22:11:14.388"></status>
</kw>
<msg timestamp="20201115 22:11:14.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026047931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026070014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:14.100" endtime="20201115 22:11:14.391"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:14.399" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026047931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026070014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:14.392" endtime="20201115 22:11:14.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:14.400" endtime="20201115 22:11:14.402"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.097" endtime="20201115 22:11:14.403"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.095" endtime="20201115 22:11:14.403"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:14.407" level="INFO">${RESULT} = [{'time': 0.026070014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.208299999999913e-05, 'source_diff': 2.208299999999913e-05}, {'time': 0.026240806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:14.404" endtime="20201115 22:11:14.407"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:14.420" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:14.408" endtime="20201115 22:11:14.421"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:14.425" level="INFO">NAME: 00-overhead-4-remove</msg>
<status status="PASS" starttime="20201115 22:11:14.424" endtime="20201115 22:11:14.425"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:14.427" level="INFO">VALUE: [2.208299999999913e-05, 2.2013999999997286e-05, 2.2041999999999895e-05, 2.2042000000003364e-05, 2.211100000000174e-05, 2.20969999999987e-05, 2.2097999999998175e-05, 2.2028000000000325e-05, 2.2083999999998605e-05, 2.213900000000088e-05, 2.2084000000002074e-05, 2.20830000000026e-05, 2.20969999999987e-05, 2.20969999999987e-05, 2.213900000000088e-05, 2.2069999999999035e-05, 2.2069999999999035e-05, 2.206899999999956e-05, 2.213900000000088e-05, 2.213900000000088e-05, 2.208299999999913e-05, 2.206899999999956e-05, 2.2028000000000325e-05, 2.206899999999956e-05, 2.2083999999998605e-05, 2.2097999999998175e-05, 2.2152000000000976e-05, 2.20969999999987e-05, 2.2014000000000755e-05, 2.211100000000174e-05, 2.206899999999956e-05, 2.2069999999999035e-05, 2.205499999999999e-05, 2.2028000000000325e-05, 2.2097999999998175e-05, 2.209700000000564e-05, 2.208299999999913e-05, 2.205499999999999e-05, 2.212499999999784e-05, 2.2097999999998175e-05, 2.208299999999913e-05, 2.2069999999999035e-05, 2.205499999999999e-05, 2.20969999999987e-05, 2.2055999999999465e-05, 2.218099999999612e-05, 2.2013999999993816e-05, 2.206899999999956e-05, 2.212499999999784e-05, 2.2084000000005544e-05]</msg>
<status status="PASS" starttime="20201115 22:11:14.426" endtime="20201115 22:11:14.428"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.421" endtime="20201115 22:11:14.428"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:14.431" endtime="20201115 22:11:14.432"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:14.434" endtime="20201115 22:11:14.453"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.432" endtime="20201115 22:11:14.454"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.429" endtime="20201115 22:11:14.454"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.058" endtime="20201115 22:11:14.455"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.057" endtime="20201115 22:11:14.455"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.056" endtime="20201115 22:11:14.455"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:14.458" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:14.467" endtime="20201115 22:11:14.486"></status>
</kw>
<msg timestamp="20201115 22:11:14.486" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:14.465" endtime="20201115 22:11:14.487"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:14.489" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:14.488" endtime="20201115 22:11:14.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:14.490" endtime="20201115 22:11:14.492"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.463" endtime="20201115 22:11:14.492"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.460" endtime="20201115 22:11:14.493"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:14.499" endtime="20201115 22:11:14.787"></status>
</kw>
<msg timestamp="20201115 22:11:14.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023447875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023470139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:14.498" endtime="20201115 22:11:14.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:14.798" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023447875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023470139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:14.791" endtime="20201115 22:11:14.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:14.799" endtime="20201115 22:11:14.801"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.495" endtime="20201115 22:11:14.801"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.493" endtime="20201115 22:11:14.802"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:14.806" level="INFO">${RESULT} = [{'time': 0.023470139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2264000000001005e-05, 'source_diff': 2.2264000000001005e-05}, {'time': 0.023673083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:14.802" endtime="20201115 22:11:14.806"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:14.819" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:14.807" endtime="20201115 22:11:14.819"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:14.824" level="INFO">NAME: 00-overhead-5-remove</msg>
<status status="PASS" starttime="20201115 22:11:14.823" endtime="20201115 22:11:14.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:14.826" level="INFO">VALUE: [2.2264000000001005e-05, 2.22770000000011e-05, 2.2263999999997536e-05, 2.236099999999852e-05, 2.2292000000000145e-05, 2.2278000000000575e-05, 2.226300000000153e-05, 2.2249999999997966e-05, 2.22770000000011e-05, 2.22770000000011e-05, 2.2278000000000575e-05, 2.2264000000001005e-05, 2.230500000000024e-05, 2.2292000000000145e-05, 2.2236000000001865e-05, 2.2264000000001005e-05, 2.231899999999981e-05, 2.2264000000001005e-05, 2.2263999999997536e-05, 2.2264000000001005e-05, 2.2278000000000575e-05, 2.229100000000067e-05, 2.237500000000156e-05, 2.2249999999997966e-05, 2.233300000000285e-05, 2.22770000000011e-05, 2.2290999999997202e-05, 2.229100000000067e-05, 2.22770000000011e-05, 2.22770000000011e-05, 2.2305999999999715e-05, 2.2292000000000145e-05, 2.2278000000000575e-05, 2.2278000000000575e-05, 2.2278000000000575e-05, 2.2278000000000575e-05, 2.2250000000001435e-05, 2.2292000000000145e-05, 2.2291999999996676e-05, 2.2292000000000145e-05, 2.2250000000001435e-05, 2.2305999999999715e-05, 2.22770000000011e-05, 2.2264000000001005e-05, 2.2278000000000575e-05, 2.2292000000000145e-05, 2.2264000000001005e-05, 2.2292000000000145e-05, 2.2264000000001005e-05, 2.2305999999999715e-05]</msg>
<status status="PASS" starttime="20201115 22:11:14.825" endtime="20201115 22:11:14.826"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.820" endtime="20201115 22:11:14.827"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:14.830" endtime="20201115 22:11:14.831"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:14.833" endtime="20201115 22:11:14.853"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.832" endtime="20201115 22:11:14.853"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.828" endtime="20201115 22:11:14.854"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.458" endtime="20201115 22:11:14.854"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.457" endtime="20201115 22:11:14.855"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.456" endtime="20201115 22:11:14.855"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:14.857" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:14.866" endtime="20201115 22:11:14.893"></status>
</kw>
<msg timestamp="20201115 22:11:14.893" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:14.865" endtime="20201115 22:11:14.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:14.896" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:14.894" endtime="20201115 22:11:14.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:14.897" endtime="20201115 22:11:14.898"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.862" endtime="20201115 22:11:14.899"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.860" endtime="20201115 22:11:14.899"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:14.906" endtime="20201115 22:11:15.192"></status>
</kw>
<msg timestamp="20201115 22:11:15.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026207306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026229819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:14.904" endtime="20201115 22:11:15.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:15.203" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026207306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026229819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:15.196" endtime="20201115 22:11:15.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:15.204" endtime="20201115 22:11:15.206"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.902" endtime="20201115 22:11:15.207"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.900" endtime="20201115 22:11:15.207"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:15.211" level="INFO">${RESULT} = [{'time': 0.026229819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.251300000000178e-05, 'source_diff': 2.251300000000178e-05}, {'time': 0.026458625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:15.208" endtime="20201115 22:11:15.211"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:15.225" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:15.212" endtime="20201115 22:11:15.225"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:15.229" level="INFO">NAME: 00-overhead-6-remove</msg>
<status status="PASS" starttime="20201115 22:11:15.228" endtime="20201115 22:11:15.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:15.232" level="INFO">VALUE: [2.251300000000178e-05, 2.2443999999999936e-05, 2.243099999999984e-05, 2.2486000000002115e-05, 2.2471999999999076e-05, 2.2471999999999076e-05, 2.2500000000001685e-05, 2.2499999999998216e-05, 2.245899999999898e-05, 2.2486000000002115e-05, 2.2514000000001255e-05, 2.247299999999855e-05, 2.2485999999998646e-05, 2.2471999999999076e-05, 2.2485999999998646e-05, 2.2485999999998646e-05, 2.2513999999997786e-05, 2.247300000000202e-05, 2.2457999999999506e-05, 2.2528000000000825e-05, 2.2514000000001255e-05, 2.2486000000002115e-05, 2.244500000000288e-05, 2.2458000000002976e-05, 2.2485999999995177e-05, 2.2457999999996037e-05, 2.2486000000002115e-05, 2.2472000000002545e-05, 2.2472000000002545e-05, 2.251300000000178e-05, 2.2486000000002115e-05, 2.2486000000002115e-05, 2.245900000000245e-05, 2.244500000000288e-05, 2.2514000000001255e-05, 2.2499999999994746e-05, 2.2486000000002115e-05, 2.2458000000002976e-05, 2.2402000000004696e-05, 2.2430000000003836e-05, 2.2458000000002976e-05, 2.2485999999995177e-05, 2.2514000000001255e-05, 2.2514000000001255e-05, 2.2486000000002115e-05, 2.2514000000001255e-05, 2.247300000000202e-05, 2.2416000000004266e-05, 2.2485999999995177e-05, 2.2500000000001685e-05]</msg>
<status status="PASS" starttime="20201115 22:11:15.230" endtime="20201115 22:11:15.233"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.226" endtime="20201115 22:11:15.233"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:15.235" endtime="20201115 22:11:15.237"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:15.239" endtime="20201115 22:11:15.258"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.237" endtime="20201115 22:11:15.259"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.234" endtime="20201115 22:11:15.259"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.858" endtime="20201115 22:11:15.260"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.856" endtime="20201115 22:11:15.260"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.855" endtime="20201115 22:11:15.260"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:15.262" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:15.271" endtime="20201115 22:11:15.299"></status>
</kw>
<msg timestamp="20201115 22:11:15.300" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:15.270" endtime="20201115 22:11:15.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:15.302" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:15.301" endtime="20201115 22:11:15.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:15.303" endtime="20201115 22:11:15.305"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.267" endtime="20201115 22:11:15.305"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.265" endtime="20201115 22:11:15.306"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:15.313" endtime="20201115 22:11:15.599"></status>
</kw>
<msg timestamp="20201115 22:11:15.602" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027405986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027428694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:15.311" endtime="20201115 22:11:15.603"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:15.610" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027405986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027428694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:15.604" endtime="20201115 22:11:15.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:15.612" endtime="20201115 22:11:15.613"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.308" endtime="20201115 22:11:15.614"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.307" endtime="20201115 22:11:15.614"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:15.618" level="INFO">${RESULT} = [{'time': 0.027428694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2707999999999756e-05, 'source_diff': 2.2707999999999756e-05}, {'time': 0.027686681, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:15.615" endtime="20201115 22:11:15.619"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:15.633" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:15.620" endtime="20201115 22:11:15.634"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:15.638" level="INFO">NAME: 00-overhead-7-remove</msg>
<status status="PASS" starttime="20201115 22:11:15.637" endtime="20201115 22:11:15.638"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:15.641" level="INFO">VALUE: [2.2707999999999756e-05, 2.268100000000009e-05, 2.2707999999999756e-05, 2.268100000000009e-05, 2.268100000000009e-05, 2.266700000000052e-05, 2.269499999999966e-05, 2.2764000000001505e-05, 2.2721999999999326e-05, 2.2721999999999326e-05, 2.2694000000000186e-05, 2.2707999999999756e-05, 2.25969999999992e-05, 2.261099999999877e-05, 2.2694000000000186e-05, 2.272300000000227e-05, 2.2693999999996717e-05, 2.2694000000003656e-05, 2.2679999999997147e-05, 2.2722000000002796e-05, 2.266699999999705e-05, 2.2693999999996717e-05, 2.2694000000003656e-05, 2.269499999999619e-05, 2.2722000000002796e-05, 2.266700000000399e-05, 2.270899999999576e-05, 2.2707999999996287e-05, 2.266699999999705e-05, 2.2665999999997577e-05, 2.2721999999995857e-05, 2.266699999999705e-05, 2.2708000000003226e-05, 2.269500000000313e-05, 2.273700000000184e-05, 2.268099999999662e-05, 2.2680000000004086e-05, 2.269499999999619e-05, 2.269499999999619e-05, 2.2708000000003226e-05, 2.2736000000002365e-05, 2.2694000000003656e-05, 2.269500000000313e-05, 2.269500000000313e-05, 2.268100000000356e-05, 2.2693999999996717e-05, 2.2707999999996287e-05, 2.27770000000016e-05, 2.2679999999997147e-05, 2.269499999999619e-05]</msg>
<status status="PASS" starttime="20201115 22:11:15.639" endtime="20201115 22:11:15.641"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.634" endtime="20201115 22:11:15.641"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:15.644" endtime="20201115 22:11:15.645"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:15.647" endtime="20201115 22:11:15.667"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.646" endtime="20201115 22:11:15.667"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.642" endtime="20201115 22:11:15.668"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.263" endtime="20201115 22:11:15.668"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.261" endtime="20201115 22:11:15.668"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.260" endtime="20201115 22:11:15.668"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:15.671" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:15.680" endtime="20201115 22:11:15.706"></status>
</kw>
<msg timestamp="20201115 22:11:15.706" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:15.678" endtime="20201115 22:11:15.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:15.709" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:15.707" endtime="20201115 22:11:15.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:15.710" endtime="20201115 22:11:15.711"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.675" endtime="20201115 22:11:15.712"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.673" endtime="20201115 22:11:15.712"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:15.719" endtime="20201115 22:11:16.006"></status>
</kw>
<msg timestamp="20201115 22:11:16.009" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026121486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026144361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:15.717" endtime="20201115 22:11:16.009"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:16.017" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026121486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026144361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:16.010" endtime="20201115 22:11:16.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:16.018" endtime="20201115 22:11:16.020"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.715" endtime="20201115 22:11:16.020"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.713" endtime="20201115 22:11:16.021"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:16.025" level="INFO">${RESULT} = [{'time': 0.026144361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.287500000000206e-05, 'source_diff': 2.287500000000206e-05}, {'time': 0.0264375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:11:16.022" endtime="20201115 22:11:16.025"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:16.038" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:16.026" endtime="20201115 22:11:16.039"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:16.043" level="INFO">NAME: 00-overhead-8-remove</msg>
<status status="PASS" starttime="20201115 22:11:16.042" endtime="20201115 22:11:16.043"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:16.045" level="INFO">VALUE: [2.287500000000206e-05, 2.290299999999773e-05, 2.2901999999998257e-05, 2.29030000000012e-05, 2.2971999999999576e-05, 2.283300000000335e-05, 2.293100000000034e-05, 2.291700000000077e-05, 2.29030000000012e-05, 2.29030000000012e-05, 2.287499999999859e-05, 2.290299999999773e-05, 2.291700000000077e-05, 2.29169999999973e-05, 2.2944000000000436e-05, 2.29169999999973e-05, 2.288900000000163e-05, 2.288899999999816e-05, 2.2901999999998257e-05, 2.288899999999816e-05, 2.290300000000467e-05, 2.2957999999996537e-05, 2.2916000000004766e-05, 2.286099999999902e-05, 2.290299999999773e-05, 2.2930000000004336e-05, 2.2916000000004766e-05, 2.290300000000467e-05, 2.290299999999773e-05, 2.293099999999687e-05, 2.287500000000553e-05, 2.287499999999859e-05, 2.290299999999773e-05, 2.2901999999998257e-05, 2.2930000000004336e-05, 2.288899999999816e-05, 2.288899999999816e-05, 2.2887999999998687e-05, 2.287499999999859e-05, 2.287499999999859e-05, 2.286100000000596e-05, 2.290300000000467e-05, 2.28890000000051e-05, 2.288899999999816e-05, 2.290299999999773e-05, 2.293100000000381e-05, 2.288899999999816e-05, 2.295900000000295e-05, 2.288899999999816e-05, 2.286099999999902e-05]</msg>
<status status="PASS" starttime="20201115 22:11:16.044" endtime="20201115 22:11:16.046"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.039" endtime="20201115 22:11:16.046"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:16.049" endtime="20201115 22:11:16.050"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:16.052" endtime="20201115 22:11:16.071"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.050" endtime="20201115 22:11:16.072"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.047" endtime="20201115 22:11:16.072"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.671" endtime="20201115 22:11:16.073"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.670" endtime="20201115 22:11:16.073"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.669" endtime="20201115 22:11:16.073"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:16.075" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:16.084" endtime="20201115 22:11:16.113"></status>
</kw>
<msg timestamp="20201115 22:11:16.114" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:16.083" endtime="20201115 22:11:16.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:16.116" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:16.115" endtime="20201115 22:11:16.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:16.117" endtime="20201115 22:11:16.119"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.080" endtime="20201115 22:11:16.119"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.078" endtime="20201115 22:11:16.120"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:16.127" endtime="20201115 22:11:16.414"></status>
</kw>
<msg timestamp="20201115 22:11:16.417" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023261347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023284458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:16.125" endtime="20201115 22:11:16.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:16.425" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023261347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023284458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:16.418" endtime="20201115 22:11:16.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:16.426" endtime="20201115 22:11:16.428"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.122" endtime="20201115 22:11:16.428"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.120" endtime="20201115 22:11:16.429"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:16.433" level="INFO">${RESULT} = [{'time': 0.023284458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.311099999999927e-05, 'source_diff': 2.311099999999927e-05}, {'time': 0.023605944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:16.429" endtime="20201115 22:11:16.433"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:16.446" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:16.434" endtime="20201115 22:11:16.446"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:16.451" level="INFO">NAME: 00-overhead-9-remove</msg>
<status status="PASS" starttime="20201115 22:11:16.450" endtime="20201115 22:11:16.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:16.453" level="INFO">VALUE: [2.311099999999927e-05, 2.308300000000013e-05, 2.312499999999884e-05, 2.308300000000013e-05, 2.30969999999997e-05, 2.3068999999997092e-05, 2.312500000000231e-05, 2.312499999999884e-05, 2.3111999999998745e-05, 2.3042000000000895e-05, 2.3111999999998745e-05, 2.312499999999884e-05, 2.30969999999997e-05, 2.308300000000013e-05, 2.3083999999999605e-05, 2.30969999999997e-05, 2.312499999999884e-05, 2.3097999999999175e-05, 2.3083999999999605e-05, 2.313900000000188e-05, 2.312500000000231e-05, 2.312500000000231e-05, 2.312499999999884e-05, 2.312499999999884e-05, 2.312500000000231e-05, 2.312499999999884e-05, 2.308300000000013e-05, 2.30969999999997e-05, 2.305500000000099e-05, 2.3097999999999175e-05, 2.311099999999927e-05, 2.311099999999927e-05, 2.311100000000621e-05, 2.3042000000000895e-05, 2.30969999999997e-05, 2.30969999999997e-05, 2.311099999999927e-05, 2.30969999999997e-05, 2.3083999999999605e-05, 2.306900000000056e-05, 2.308300000000013e-05, 2.313899999999841e-05, 2.312499999999884e-05, 2.311099999999927e-05, 2.3083999999999605e-05, 2.308300000000013e-05, 2.311099999999927e-05, 2.312500000000578e-05, 2.315299999999798e-05, 2.309700000000664e-05]</msg>
<status status="PASS" starttime="20201115 22:11:16.452" endtime="20201115 22:11:16.453"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.447" endtime="20201115 22:11:16.454"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:16.456" endtime="20201115 22:11:16.458"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:16.460" endtime="20201115 22:11:16.479"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.458" endtime="20201115 22:11:16.480"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.455" endtime="20201115 22:11:16.480"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.076" endtime="20201115 22:11:16.480"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.074" endtime="20201115 22:11:16.481"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.074" endtime="20201115 22:11:16.481"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:16.483" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:16.492" endtime="20201115 22:11:16.530"></status>
</kw>
<msg timestamp="20201115 22:11:16.530" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:16.490" endtime="20201115 22:11:16.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:16.533" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:16.531" endtime="20201115 22:11:16.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:16.534" endtime="20201115 22:11:16.536"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.488" endtime="20201115 22:11:16.536"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.486" endtime="20201115 22:11:16.537"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:16.543" endtime="20201115 22:11:16.830"></status>
</kw>
<msg timestamp="20201115 22:11:16.833" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027622042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027645403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:16.542" endtime="20201115 22:11:16.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:16.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027622042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027645403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:16.834" endtime="20201115 22:11:16.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:16.842" endtime="20201115 22:11:16.843"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.539" endtime="20201115 22:11:16.844"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.537" endtime="20201115 22:11:16.844"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:16.849" level="INFO">${RESULT} = [{'time': 0.027645403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.336099999999952e-05, 'source_diff': 2.336099999999952e-05}, {'time': 0.027996139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:16.845" endtime="20201115 22:11:16.849"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:16.862" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:16.850" endtime="20201115 22:11:16.862"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:16.866" level="INFO">NAME: 00-overhead-10-remove</msg>
<status status="PASS" starttime="20201115 22:11:16.865" endtime="20201115 22:11:16.867"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:16.869" level="INFO">VALUE: [2.336099999999952e-05, 2.3306000000000715e-05, 2.3306000000000715e-05, 2.3361999999998995e-05, 2.3347999999999425e-05, 2.3305999999997246e-05, 2.3292000000001145e-05, 2.337500000000256e-05, 2.3333999999999855e-05, 2.3333999999999855e-05, 2.334699999999995e-05, 2.333300000000038e-05, 2.3333999999999855e-05, 2.3292000000001145e-05, 2.331900000000081e-05, 2.3306000000000715e-05, 2.333300000000038e-05, 2.3306000000000715e-05, 2.333300000000038e-05, 2.3306000000000715e-05, 2.331900000000081e-05, 2.336099999999952e-05, 2.334699999999995e-05, 2.333300000000038e-05, 2.3333999999999855e-05, 2.3320000000000285e-05, 2.32770000000021e-05, 2.331900000000081e-05, 2.3429999999997897e-05, 2.330500000000124e-05, 2.336099999999952e-05, 2.337499999999909e-05, 2.3318999999993872e-05, 2.3306000000000715e-05, 2.3320000000000285e-05, 2.3278000000001575e-05, 2.3320000000000285e-05, 2.3292000000001145e-05, 2.333300000000038e-05, 2.331900000000081e-05, 2.3333999999999855e-05, 2.336099999999952e-05, 2.3306000000000715e-05, 2.3291999999994206e-05, 2.337499999999909e-05, 2.3290999999994733e-05, 2.334699999999995e-05, 2.3306000000000715e-05, 2.3292000000001145e-05, 2.334699999999995e-05]</msg>
<status status="PASS" starttime="20201115 22:11:16.868" endtime="20201115 22:11:16.869"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.863" endtime="20201115 22:11:16.870"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:16.872" endtime="20201115 22:11:16.873"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:16.876" endtime="20201115 22:11:16.895"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.874" endtime="20201115 22:11:16.896"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.871" endtime="20201115 22:11:16.897"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.484" endtime="20201115 22:11:16.897"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.482" endtime="20201115 22:11:16.897"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.481" endtime="20201115 22:11:16.897"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:16.900" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:16.909" endtime="20201115 22:11:16.942"></status>
</kw>
<msg timestamp="20201115 22:11:16.942" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:16.907" endtime="20201115 22:11:16.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:16.945" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:16.943" endtime="20201115 22:11:16.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:16.946" endtime="20201115 22:11:16.947"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.905" endtime="20201115 22:11:16.948"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.902" endtime="20201115 22:11:16.949"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:16.955" endtime="20201115 22:11:17.241"></status>
</kw>
<msg timestamp="20201115 22:11:17.244" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028339861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028363444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:16.953" endtime="20201115 22:11:17.245"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:17.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028339861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028363444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:17.245" endtime="20201115 22:11:17.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:17.254" endtime="20201115 22:11:17.255"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.951" endtime="20201115 22:11:17.256"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.949" endtime="20201115 22:11:17.256"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:17.260" level="INFO">${RESULT} = [{'time': 0.028363444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.358300000000063e-05, 'source_diff': 2.358300000000063e-05}, {'time': 0.028746792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:17.257" endtime="20201115 22:11:17.260"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:17.275" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:17.261" endtime="20201115 22:11:17.275"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:17.280" level="INFO">NAME: 00-overhead-11-remove</msg>
<status status="PASS" starttime="20201115 22:11:17.279" endtime="20201115 22:11:17.280"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:17.282" level="INFO">VALUE: [2.358300000000063e-05, 2.3542000000001395e-05, 2.3568999999997592e-05, 2.3528000000001825e-05, 2.3541999999997926e-05, 2.3528000000001825e-05, 2.3512999999999312e-05, 2.3513999999998786e-05, 2.356900000000106e-05, 2.361099999999977e-05, 2.35970000000002e-05, 2.3500000000002685e-05, 2.354100000000192e-05, 2.3528000000001825e-05, 2.3500000000002685e-05, 2.3512999999995843e-05, 2.3542000000001395e-05, 2.3457999999997037e-05, 2.3514000000002255e-05, 2.3471999999996607e-05, 2.3514000000002255e-05, 2.358300000000063e-05, 2.3527999999994886e-05, 2.3542000000001395e-05, 2.355500000000149e-05, 2.3542000000001395e-05, 2.3570000000000535e-05, 2.362499999999934e-05, 2.3542000000001395e-05, 2.352700000000235e-05, 2.3542000000001395e-05, 2.3542000000001395e-05, 2.3528000000001825e-05, 2.3540999999994983e-05, 2.356900000000106e-05, 2.3514000000002255e-05, 2.3570000000000535e-05, 2.3542000000001395e-05, 2.3513999999995316e-05, 2.3486000000003115e-05, 2.3528000000001825e-05, 2.3499999999995747e-05, 2.3486000000003115e-05, 2.3526999999995413e-05, 2.3500000000002685e-05, 2.3540999999994983e-05, 2.361099999999977e-05, 2.3528000000001825e-05, 2.356900000000106e-05, 2.358300000000063e-05]</msg>
<status status="PASS" starttime="20201115 22:11:17.281" endtime="20201115 22:11:17.282"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.276" endtime="20201115 22:11:17.283"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:17.285" endtime="20201115 22:11:17.286"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:17.293" endtime="20201115 22:11:17.313"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.287" endtime="20201115 22:11:17.313"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.284" endtime="20201115 22:11:17.314"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.900" endtime="20201115 22:11:17.314"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.899" endtime="20201115 22:11:17.314"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.898" endtime="20201115 22:11:17.315"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:17.317" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:17.326" endtime="20201115 22:11:17.364"></status>
</kw>
<msg timestamp="20201115 22:11:17.365" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:17.324" endtime="20201115 22:11:17.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:17.367" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:17.366" endtime="20201115 22:11:17.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:17.368" endtime="20201115 22:11:17.370"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.321" endtime="20201115 22:11:17.370"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.319" endtime="20201115 22:11:17.371"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:17.377" endtime="20201115 22:11:17.664"></status>
</kw>
<msg timestamp="20201115 22:11:17.667" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027961694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027985417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:17.376" endtime="20201115 22:11:17.667"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:17.675" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027961694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027985417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:17.668" endtime="20201115 22:11:17.675"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:17.676" endtime="20201115 22:11:17.677"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.373" endtime="20201115 22:11:17.678"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.371" endtime="20201115 22:11:17.678"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:17.683" level="INFO">${RESULT} = [{'time': 0.027985417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.37229999999998e-05, 'source_diff': 2.37229999999998e-05}, {'time': 0.028400167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:11:17.679" endtime="20201115 22:11:17.683"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:17.696" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:17.684" endtime="20201115 22:11:17.696"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:17.700" level="INFO">NAME: 00-overhead-12-remove</msg>
<status status="PASS" starttime="20201115 22:11:17.699" endtime="20201115 22:11:17.701"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:17.703" level="INFO">VALUE: [2.37229999999998e-05, 2.3735999999999896e-05, 2.37229999999998e-05, 2.3749999999999466e-05, 2.3777999999998606e-05, 2.3722000000000326e-05, 2.3749999999999466e-05, 2.3722000000000326e-05, 2.3721999999996857e-05, 2.3750000000002935e-05, 2.369500000000413e-05, 2.3722000000003796e-05, 2.3735999999996427e-05, 2.3708000000004226e-05, 2.369499999999719e-05, 2.3750000000002935e-05, 2.3735999999996427e-05, 2.3764000000002505e-05, 2.3680000000005086e-05, 2.3749999999995997e-05, 2.3763000000003032e-05, 2.372300000000327e-05, 2.3764000000002505e-05, 2.372300000000327e-05, 2.3763999999995566e-05, 2.3721999999996857e-05, 2.3693999999997717e-05, 2.3721999999996857e-05, 2.3778000000002075e-05, 2.3778000000002075e-05, 2.3721999999996857e-05, 2.3750000000002935e-05, 2.3721999999996857e-05, 2.380500000000174e-05, 2.3736000000003366e-05, 2.3749999999995997e-05, 2.3750000000002935e-05, 2.366699999999805e-05, 2.3736000000003366e-05, 2.3735999999996427e-05, 2.3708000000004226e-05, 2.365299999999848e-05, 2.3735999999996427e-05, 2.3693999999997717e-05, 2.3735999999996427e-05, 2.3750000000002935e-05, 2.3694000000004656e-05, 2.373700000000284e-05, 2.3750000000002935e-05, 2.3707999999997287e-05]</msg>
<status status="PASS" starttime="20201115 22:11:17.702" endtime="20201115 22:11:17.704"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.697" endtime="20201115 22:11:17.704"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:17.707" endtime="20201115 22:11:17.708"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:17.710" endtime="20201115 22:11:17.730"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.709" endtime="20201115 22:11:17.730"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.705" endtime="20201115 22:11:17.731"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.317" endtime="20201115 22:11:17.731"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.316" endtime="20201115 22:11:17.731"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.315" endtime="20201115 22:11:17.731"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:17.734" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:17.742" endtime="20201115 22:11:17.776"></status>
</kw>
<msg timestamp="20201115 22:11:17.777" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:17.741" endtime="20201115 22:11:17.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:17.779" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:17.778" endtime="20201115 22:11:17.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:17.780" endtime="20201115 22:11:17.782"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.738" endtime="20201115 22:11:17.783"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.736" endtime="20201115 22:11:17.783"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:17.790" endtime="20201115 22:11:18.090"></status>
</kw>
<msg timestamp="20201115 22:11:18.097" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023182542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023206431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:17.788" endtime="20201115 22:11:18.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:18.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023182542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023206431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:18.099" endtime="20201115 22:11:18.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:18.117" endtime="20201115 22:11:18.119"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.785" endtime="20201115 22:11:18.119"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.784" endtime="20201115 22:11:18.120"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:18.124" level="INFO">${RESULT} = [{'time': 0.023206431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.388899999999916e-05, 'source_diff': 2.388899999999916e-05}, {'time': 0.023653889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:18.121" endtime="20201115 22:11:18.124"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:18.137" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:18.125" endtime="20201115 22:11:18.138"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:18.142" level="INFO">NAME: 00-overhead-13-remove</msg>
<status status="PASS" starttime="20201115 22:11:18.141" endtime="20201115 22:11:18.142"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:18.145" level="INFO">VALUE: [2.388899999999916e-05, 2.3958000000001006e-05, 2.395899999999701e-05, 2.395899999999701e-05, 2.3999999999999716e-05, 2.3957999999997537e-05, 2.3999999999999716e-05, 2.3944000000001436e-05, 2.39030000000022e-05, 2.3957999999997537e-05, 2.4027999999998856e-05, 2.394500000000091e-05, 2.3958000000001006e-05, 2.3943999999997967e-05, 2.3901999999999257e-05, 2.391700000000177e-05, 2.3957999999997537e-05, 2.3944000000001436e-05, 2.3958000000001006e-05, 2.4014000000002755e-05, 2.3958000000004476e-05, 2.3999999999996247e-05, 2.39169999999983e-05, 2.3957999999997537e-05, 2.4027999999995386e-05, 2.3929999999998397e-05, 2.3957999999997537e-05, 2.3971999999997107e-05, 2.3957999999997537e-05, 2.3944000000004906e-05, 2.4013000000003282e-05, 2.393100000000481e-05, 2.394500000000438e-05, 2.3944000000004906e-05, 2.3916000000005766e-05, 2.3901999999999257e-05, 2.393099999999787e-05, 2.3943999999997967e-05, 2.3929999999998397e-05, 2.4028000000002325e-05, 2.3943999999997967e-05, 2.3957999999997537e-05, 2.3986000000003616e-05, 2.3986000000003616e-05, 2.3957999999997537e-05, 2.3929999999998397e-05, 2.3999999999996247e-05, 2.3957999999997537e-05, 2.3971999999997107e-05, 2.39169999999983e-05]</msg>
<status status="PASS" starttime="20201115 22:11:18.143" endtime="20201115 22:11:18.145"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.138" endtime="20201115 22:11:18.146"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:18.148" endtime="20201115 22:11:18.150"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:18.152" endtime="20201115 22:11:18.171"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.150" endtime="20201115 22:11:18.172"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.146" endtime="20201115 22:11:18.172"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.734" endtime="20201115 22:11:18.173"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.732" endtime="20201115 22:11:18.173"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.732" endtime="20201115 22:11:18.173"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:18.175" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:18.184" endtime="20201115 22:11:18.218"></status>
</kw>
<msg timestamp="20201115 22:11:18.218" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:18.183" endtime="20201115 22:11:18.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:18.221" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:18.219" endtime="20201115 22:11:18.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:18.222" endtime="20201115 22:11:18.223"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.180" endtime="20201115 22:11:18.224"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.178" endtime="20201115 22:11:18.224"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:18.231" endtime="20201115 22:11:18.517"></status>
</kw>
<msg timestamp="20201115 22:11:18.520" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023696792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023720917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:18.229" endtime="20201115 22:11:18.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:18.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023696792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023720917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:18.521" endtime="20201115 22:11:18.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:18.529" endtime="20201115 22:11:18.531"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.227" endtime="20201115 22:11:18.531"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.225" endtime="20201115 22:11:18.532"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:18.536" level="INFO">${RESULT} = [{'time': 0.023720917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.412499999999984e-05, 'source_diff': 2.412499999999984e-05}, {'time': 0.024201597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:18.533" endtime="20201115 22:11:18.537"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:18.550" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:18.537" endtime="20201115 22:11:18.550"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:18.554" level="INFO">NAME: 00-overhead-14-remove</msg>
<status status="PASS" starttime="20201115 22:11:18.553" endtime="20201115 22:11:18.555"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:18.557" level="INFO">VALUE: [2.412499999999984e-05, 2.41109999999968e-05, 2.412499999999984e-05, 2.412499999999984e-05, 2.413899999999941e-05, 2.4179999999998647e-05, 2.413899999999941e-05, 2.416700000000202e-05, 2.413899999999941e-05, 2.408300000000113e-05, 2.406900000000156e-05, 2.416700000000202e-05, 2.4098000000000175e-05, 2.4208000000001256e-05, 2.413899999999941e-05, 2.4179999999998647e-05, 2.418099999999812e-05, 2.413899999999941e-05, 2.413899999999941e-05, 2.4165999999999077e-05, 2.413899999999941e-05, 2.4137999999999937e-05, 2.415299999999898e-05, 2.415299999999898e-05, 2.4180000000005586e-05, 2.413899999999941e-05, 2.413899999999941e-05, 2.415299999999898e-05, 2.415299999999898e-05, 2.415299999999898e-05, 2.412499999999984e-05, 2.411100000000027e-05, 2.413899999999941e-05, 2.413899999999941e-05, 2.4152000000006446e-05, 2.418099999999812e-05, 2.416699999999855e-05, 2.420899999999726e-05, 2.413900000000635e-05, 2.4166000000006016e-05, 2.415300000000592e-05, 2.4179999999998647e-05, 2.4166000000006016e-05, 2.413899999999941e-05, 2.413899999999941e-05, 2.416699999999855e-05, 2.4179999999998647e-05, 2.4179999999998647e-05, 2.415299999999898e-05, 2.416700000000549e-05]</msg>
<status status="PASS" starttime="20201115 22:11:18.555" endtime="20201115 22:11:18.557"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.551" endtime="20201115 22:11:18.558"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:18.560" endtime="20201115 22:11:18.561"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:18.563" endtime="20201115 22:11:18.583"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.562" endtime="20201115 22:11:18.584"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.558" endtime="20201115 22:11:18.584"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.176" endtime="20201115 22:11:18.584"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.174" endtime="20201115 22:11:18.585"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.173" endtime="20201115 22:11:18.585"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:18.587" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:18.596" endtime="20201115 22:11:18.635"></status>
</kw>
<msg timestamp="20201115 22:11:18.636" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:18.594" endtime="20201115 22:11:18.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:18.639" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:18.637" endtime="20201115 22:11:18.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:18.640" endtime="20201115 22:11:18.641"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.592" endtime="20201115 22:11:18.642"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.590" endtime="20201115 22:11:18.642"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:18.649" endtime="20201115 22:11:18.936"></status>
</kw>
<msg timestamp="20201115 22:11:18.939" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023934028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023958347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:18.647" endtime="20201115 22:11:18.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:18.947" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023934028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023958347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:18.940" endtime="20201115 22:11:18.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:18.948" endtime="20201115 22:11:18.950"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.645" endtime="20201115 22:11:18.951"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.643" endtime="20201115 22:11:18.951"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:18.955" level="INFO">${RESULT} = [{'time': 0.023958347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.431900000000181e-05, 'source_diff': 2.431900000000181e-05}, {'time': 0.024471389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:18.952" endtime="20201115 22:11:18.955"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:18.970" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:18.956" endtime="20201115 22:11:18.970"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:18.974" level="INFO">NAME: 00-overhead-15-remove</msg>
<status status="PASS" starttime="20201115 22:11:18.973" endtime="20201115 22:11:18.975"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:18.977" level="INFO">VALUE: [2.431900000000181e-05, 2.436100000000052e-05, 2.4334000000000855e-05, 2.436100000000052e-05, 2.4304999999998772e-05, 2.4415999999999327e-05, 2.434700000000095e-05, 2.4348000000000425e-05, 2.4348000000000425e-05, 2.436100000000052e-05, 2.4500000000000216e-05, 2.436100000000052e-05, 2.438899999999966e-05, 2.440299999999923e-05, 2.436100000000052e-05, 2.437500000000009e-05, 2.434700000000095e-05, 2.437500000000009e-05, 2.4401999999999757e-05, 2.436100000000052e-05, 2.44169999999988e-05, 2.4304999999995303e-05, 2.4348000000000425e-05, 2.4444000000005406e-05, 2.436100000000052e-05, 2.430500000000224e-05, 2.438899999999966e-05, 2.436100000000052e-05, 2.437500000000009e-05, 2.4348000000000425e-05, 2.436100000000052e-05, 2.4416000000006266e-05, 2.444500000000488e-05, 2.443099999999837e-05, 2.4306000000001715e-05, 2.434700000000095e-05, 2.4429999999998897e-05, 2.438899999999966e-05, 2.4360999999993582e-05, 2.436100000000052e-05, 2.437500000000009e-05, 2.4388000000000187e-05, 2.434700000000095e-05, 2.437500000000009e-05, 2.436100000000052e-05, 2.438899999999966e-05, 2.440299999999923e-05, 2.4320000000001285e-05, 2.437500000000009e-05, 2.4361999999999995e-05]</msg>
<status status="PASS" starttime="20201115 22:11:18.976" endtime="20201115 22:11:18.977"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.971" endtime="20201115 22:11:18.978"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:18.980" endtime="20201115 22:11:18.982"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:18.984" endtime="20201115 22:11:19.003"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.982" endtime="20201115 22:11:19.004"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.979" endtime="20201115 22:11:19.004"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.588" endtime="20201115 22:11:19.005"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.586" endtime="20201115 22:11:19.005"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.585" endtime="20201115 22:11:19.005"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:19.007" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:19.016" endtime="20201115 22:11:19.057"></status>
</kw>
<msg timestamp="20201115 22:11:19.058" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:19.014" endtime="20201115 22:11:19.058"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:19.060" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:19.059" endtime="20201115 22:11:19.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:19.061" endtime="20201115 22:11:19.063"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.012" endtime="20201115 22:11:19.063"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.010" endtime="20201115 22:11:19.064"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:19.071" endtime="20201115 22:11:19.358"></status>
</kw>
<msg timestamp="20201115 22:11:19.361" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025758708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025783292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:19.069" endtime="20201115 22:11:19.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:19.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025758708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025783292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:19.362" endtime="20201115 22:11:19.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:19.370" endtime="20201115 22:11:19.371"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.066" endtime="20201115 22:11:19.372"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.064" endtime="20201115 22:11:19.372"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:19.377" level="INFO">${RESULT} = [{'time': 0.025783292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4583999999997636e-05, 'source_diff': 2.4583999999997636e-05}, {'time': 0.026323514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:19.373" endtime="20201115 22:11:19.377"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:19.390" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:19.378" endtime="20201115 22:11:19.390"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:19.395" level="INFO">NAME: 00-overhead-16-remove</msg>
<status status="PASS" starttime="20201115 22:11:19.394" endtime="20201115 22:11:19.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:19.397" level="INFO">VALUE: [2.4583999999997636e-05, 2.4596999999997732e-05, 2.4555999999998496e-05, 2.4542000000002395e-05, 2.4542000000002395e-05, 2.456900000000206e-05, 2.4556000000001965e-05, 2.4556000000001965e-05, 2.4582999999998162e-05, 2.455500000000249e-05, 2.4568999999998592e-05, 2.4556000000001965e-05, 2.4596999999994262e-05, 2.4584000000001105e-05, 2.4542000000002395e-05, 2.4569999999994596e-05, 2.4556000000001965e-05, 2.4568999999995123e-05, 2.458300000000163e-05, 2.458300000000163e-05, 2.455500000000249e-05, 2.4542000000002395e-05, 2.4568999999995123e-05, 2.4582999999994692e-05, 2.4542000000002395e-05, 2.462500000000034e-05, 2.4556000000001965e-05, 2.461100000000077e-05, 2.456900000000206e-05, 2.4584000000001105e-05, 2.458300000000163e-05, 2.4555999999995026e-05, 2.458300000000163e-05, 2.458300000000163e-05, 2.452700000000335e-05, 2.455500000000249e-05, 2.456900000000206e-05, 2.4568999999995123e-05, 2.4542000000002395e-05, 2.4542000000002395e-05, 2.461100000000077e-05, 2.458300000000163e-05, 2.461100000000077e-05, 2.4584000000001105e-05, 2.4584000000001105e-05, 2.4596999999994262e-05, 2.456900000000206e-05, 2.458300000000163e-05, 2.4665999999999577e-05, 2.4584000000001105e-05]</msg>
<status status="PASS" starttime="20201115 22:11:19.396" endtime="20201115 22:11:19.398"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.391" endtime="20201115 22:11:19.398"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:19.400" endtime="20201115 22:11:19.402"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:19.404" endtime="20201115 22:11:19.423"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.402" endtime="20201115 22:11:19.424"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.399" endtime="20201115 22:11:19.424"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.008" endtime="20201115 22:11:19.425"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.006" endtime="20201115 22:11:19.425"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.005" endtime="20201115 22:11:19.425"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:19.428" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:19.437" endtime="20201115 22:11:19.480"></status>
</kw>
<msg timestamp="20201115 22:11:19.480" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:19.435" endtime="20201115 22:11:19.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:19.483" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:19.481" endtime="20201115 22:11:19.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:19.484" endtime="20201115 22:11:19.486"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.433" endtime="20201115 22:11:19.486"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.430" endtime="20201115 22:11:19.487"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:19.494" endtime="20201115 22:11:19.780"></status>
</kw>
<msg timestamp="20201115 22:11:19.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027656639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027681403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:19.492" endtime="20201115 22:11:19.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:19.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027656639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027681403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:19.785" endtime="20201115 22:11:19.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:19.793" endtime="20201115 22:11:19.794"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.489" endtime="20201115 22:11:19.795"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.488" endtime="20201115 22:11:19.795"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:19.799" level="INFO">${RESULT} = [{'time': 0.027681403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4764000000000036e-05, 'source_diff': 2.4764000000000036e-05}, {'time': 0.028255278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:19.796" endtime="20201115 22:11:19.799"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:19.813" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:19.800" endtime="20201115 22:11:19.813"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:19.817" level="INFO">NAME: 00-overhead-17-remove</msg>
<status status="PASS" starttime="20201115 22:11:19.816" endtime="20201115 22:11:19.817"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:19.820" level="INFO">VALUE: [2.4764000000000036e-05, 2.4736000000000896e-05, 2.4721999999997857e-05, 2.4750000000000466e-05, 2.4777999999999606e-05, 2.4790999999999702e-05, 2.4818999999998842e-05, 2.4749999999996997e-05, 2.4792000000002645e-05, 2.4722000000004796e-05, 2.4764000000003505e-05, 2.4792000000002645e-05, 2.4834000000001355e-05, 2.4792000000002645e-05, 2.4791999999995706e-05, 2.4790999999996233e-05, 2.4749999999996997e-05, 2.4693999999998717e-05, 2.479100000000317e-05, 2.4777999999996136e-05, 2.4792000000002645e-05, 2.4778000000003075e-05, 2.469499999999819e-05, 2.4790999999996233e-05, 2.4764000000003505e-05, 2.4749999999996997e-05, 2.4763999999996567e-05, 2.4806000000002215e-05, 2.4778000000003075e-05, 2.4790999999996233e-05, 2.4792000000002645e-05, 2.4792000000002645e-05, 2.4722000000004796e-05, 2.4764000000003505e-05, 2.4735999999997427e-05, 2.4778000000003075e-05, 2.4820000000001785e-05, 2.4778000000003075e-05, 2.4778000000003075e-05, 2.4736000000004366e-05, 2.4764000000003505e-05, 2.4778000000003075e-05, 2.4778000000003075e-05, 2.4764000000003505e-05, 2.4707999999998287e-05, 2.4778000000003075e-05, 2.4764000000003505e-05, 2.4777999999996136e-05, 2.4778000000003075e-05, 2.4735999999997427e-05]</msg>
<status status="PASS" starttime="20201115 22:11:19.818" endtime="20201115 22:11:19.820"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.813" endtime="20201115 22:11:19.821"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:19.823" endtime="20201115 22:11:19.824"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:19.826" endtime="20201115 22:11:19.846"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.825" endtime="20201115 22:11:19.846"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.821" endtime="20201115 22:11:19.847"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.428" endtime="20201115 22:11:19.847"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.426" endtime="20201115 22:11:19.847"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.425" endtime="20201115 22:11:19.847"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:19.850" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:19.859" endtime="20201115 22:11:19.906"></status>
</kw>
<msg timestamp="20201115 22:11:19.906" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:19.858" endtime="20201115 22:11:19.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:19.909" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:19.907" endtime="20201115 22:11:19.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:19.910" endtime="20201115 22:11:19.911"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.855" endtime="20201115 22:11:19.912"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.852" endtime="20201115 22:11:19.912"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:19.919" endtime="20201115 22:11:20.204"></status>
</kw>
<msg timestamp="20201115 22:11:20.207" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027292347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027317389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:19.917" endtime="20201115 22:11:20.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:20.215" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027292347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027317389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:20.208" endtime="20201115 22:11:20.215"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:20.216" endtime="20201115 22:11:20.218"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.915" endtime="20201115 22:11:20.218"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.913" endtime="20201115 22:11:20.219"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:20.223" level="INFO">${RESULT} = [{'time': 0.027317389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5041999999999426e-05, 'source_diff': 2.5041999999999426e-05}, {'time': 0.027923583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:20.219" endtime="20201115 22:11:20.223"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:20.236" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:20.224" endtime="20201115 22:11:20.236"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:20.241" level="INFO">NAME: 00-overhead-18-remove</msg>
<status status="PASS" starttime="20201115 22:11:20.240" endtime="20201115 22:11:20.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:20.243" level="INFO">VALUE: [2.5041999999999426e-05, 2.4971999999998107e-05, 2.4972000000001576e-05, 2.4986000000001146e-05, 2.4985999999997677e-05, 2.508300000000213e-05, 2.4971999999998107e-05, 2.4985999999997677e-05, 2.5013999999996817e-05, 2.4985999999997677e-05, 2.494499999999844e-05, 2.4986000000004616e-05, 2.4986000000004616e-05, 2.4957999999998537e-05, 2.5042000000002895e-05, 2.505500000000299e-05, 2.498699999999715e-05, 2.5028000000003325e-05, 2.4999999999997247e-05, 2.4971999999998107e-05, 2.4985999999997677e-05, 2.4971999999998107e-05, 2.5013999999996817e-05, 2.4971999999998107e-05, 2.4971999999998107e-05, 2.5042000000002895e-05, 2.498699999999715e-05, 2.5027999999996386e-05, 2.4971999999998107e-05, 2.4971999999998107e-05, 2.4971999999998107e-05, 2.4999999999997247e-05, 2.4971999999998107e-05, 2.4986000000004616e-05, 2.4986000000004616e-05, 2.4971999999998107e-05, 2.4985999999997677e-05, 2.494499999999844e-05, 2.4971999999998107e-05, 2.506900000000256e-05, 2.494500000000538e-05, 2.4986000000004616e-05, 2.4943999999998967e-05, 2.4943999999998967e-05, 2.4999999999997247e-05, 2.497300000000452e-05, 2.490299999999973e-05, 2.494499999999844e-05, 2.4943999999998967e-05, 2.5028000000003325e-05]</msg>
<status status="PASS" starttime="20201115 22:11:20.242" endtime="20201115 22:11:20.244"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.237" endtime="20201115 22:11:20.244"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:20.246" endtime="20201115 22:11:20.248"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:20.251" endtime="20201115 22:11:20.270"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.249" endtime="20201115 22:11:20.271"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.245" endtime="20201115 22:11:20.271"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.850" endtime="20201115 22:11:20.271"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.849" endtime="20201115 22:11:20.272"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.848" endtime="20201115 22:11:20.272"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:20.274" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:20.283" endtime="20201115 22:11:20.328"></status>
</kw>
<msg timestamp="20201115 22:11:20.328" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:20.281" endtime="20201115 22:11:20.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:20.331" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:20.329" endtime="20201115 22:11:20.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:20.332" endtime="20201115 22:11:20.334"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.279" endtime="20201115 22:11:20.334"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.276" endtime="20201115 22:11:20.335"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:20.341" endtime="20201115 22:11:20.629"></status>
</kw>
<msg timestamp="20201115 22:11:20.632" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025012514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025037694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:20.340" endtime="20201115 22:11:20.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:20.640" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025012514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025037694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:20.633" endtime="20201115 22:11:20.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:20.641" endtime="20201115 22:11:20.643"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.337" endtime="20201115 22:11:20.643"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.335" endtime="20201115 22:11:20.644"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:20.648" level="INFO">${RESULT} = [{'time': 0.025037694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5179999999999647e-05, 'source_diff': 2.5179999999999647e-05}, {'time': 0.025677542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:20.644" endtime="20201115 22:11:20.648"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:20.663" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:20.649" endtime="20201115 22:11:20.663"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:20.667" level="INFO">NAME: 00-overhead-19-remove</msg>
<status status="PASS" starttime="20201115 22:11:20.666" endtime="20201115 22:11:20.667"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:20.670" level="INFO">VALUE: [2.5179999999999647e-05, 2.520900000000173e-05, 2.5193999999999217e-05, 2.512499999999737e-05, 2.5193999999999217e-05, 2.5194000000002686e-05, 2.5250000000000966e-05, 2.513900000000041e-05, 2.50970000000017e-05, 2.5207999999998787e-05, 2.516699999999955e-05, 2.520899999999826e-05, 2.5222000000005296e-05, 2.5221999999998357e-05, 2.5179999999999647e-05, 2.519499999999869e-05, 2.5194000000006156e-05, 2.523700000000434e-05, 2.519499999999869e-05, 2.5193999999999217e-05, 2.5193999999999217e-05, 2.520899999999826e-05, 2.519499999999869e-05, 2.515299999999998e-05, 2.515299999999998e-05, 2.512500000000084e-05, 2.518099999999912e-05, 2.5166000000000077e-05, 2.512500000000084e-05, 2.515299999999998e-05, 2.5207999999998787e-05, 2.511100000000127e-05, 2.519499999999869e-05, 2.5207999999998787e-05, 2.5193999999999217e-05, 2.515299999999998e-05, 2.5179999999999647e-05, 2.518099999999912e-05, 2.5179999999999647e-05, 2.5179999999999647e-05, 2.519499999999869e-05, 2.5194000000006156e-05, 2.5207999999998787e-05, 2.522299999999783e-05, 2.5179999999999647e-05, 2.519499999999869e-05, 2.519499999999869e-05, 2.520899999999826e-05, 2.518099999999912e-05, 2.516699999999955e-05]</msg>
<status status="PASS" starttime="20201115 22:11:20.668" endtime="20201115 22:11:20.670"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.663" endtime="20201115 22:11:20.671"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:20.673" endtime="20201115 22:11:20.675"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:20.677" endtime="20201115 22:11:20.696"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.675" endtime="20201115 22:11:20.697"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.672" endtime="20201115 22:11:20.697"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.274" endtime="20201115 22:11:20.698"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.273" endtime="20201115 22:11:20.698"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.272" endtime="20201115 22:11:20.698"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:20.700" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:20.709" endtime="20201115 22:11:20.756"></status>
</kw>
<msg timestamp="20201115 22:11:20.756" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:20.707" endtime="20201115 22:11:20.756"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:20.759" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:20.757" endtime="20201115 22:11:20.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:20.760" endtime="20201115 22:11:20.762"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.705" endtime="20201115 22:11:20.762"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.703" endtime="20201115 22:11:20.762"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:20.769" endtime="20201115 22:11:21.071"></status>
</kw>
<msg timestamp="20201115 22:11:21.074" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025881764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025907111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:20.767" endtime="20201115 22:11:21.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:21.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025881764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025907111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:21.075" endtime="20201115 22:11:21.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:21.083" endtime="20201115 22:11:21.085"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.765" endtime="20201115 22:11:21.085"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.763" endtime="20201115 22:11:21.086"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:21.090" level="INFO">${RESULT} = [{'time': 0.025907111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5346999999998482e-05, 'source_diff': 2.5346999999998482e-05}, {'time': 0.026581681, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:21.087" endtime="20201115 22:11:21.090"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:21.104" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:21.091" endtime="20201115 22:11:21.104"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:21.108" level="INFO">NAME: 00-overhead-20-remove</msg>
<status status="PASS" starttime="20201115 22:11:21.107" endtime="20201115 22:11:21.108"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:21.111" level="INFO">VALUE: [2.5346999999998482e-05, 2.540300000000023e-05, 2.537500000000109e-05, 2.540300000000023e-05, 2.5348000000001425e-05, 2.537500000000109e-05, 2.544499999999894e-05, 2.540300000000023e-05, 2.538900000000066e-05, 2.5443999999999467e-05, 2.5416000000000327e-05, 2.538900000000066e-05, 2.5332999999995442e-05, 2.540300000000023e-05, 2.543099999999937e-05, 2.538900000000066e-05, 2.537500000000109e-05, 2.5402000000000757e-05, 2.540300000000023e-05, 2.538900000000066e-05, 2.537500000000109e-05, 2.540300000000023e-05, 2.54169999999998e-05, 2.5388000000001187e-05, 2.54169999999998e-05, 2.544499999999894e-05, 2.5429999999999897e-05, 2.538900000000066e-05, 2.538900000000066e-05, 2.5333999999994916e-05, 2.540300000000023e-05, 2.538900000000066e-05, 2.538900000000066e-05, 2.5402000000000757e-05, 2.540300000000023e-05, 2.540300000000023e-05, 2.540300000000023e-05, 2.540300000000023e-05, 2.537500000000109e-05, 2.538900000000066e-05, 2.5416000000000327e-05, 2.537500000000109e-05, 2.537500000000109e-05, 2.54169999999998e-05, 2.540300000000023e-05, 2.540199999999382e-05, 2.5443999999999467e-05, 2.5402000000000757e-05, 2.5374999999994152e-05, 2.538900000000066e-05]</msg>
<status status="PASS" starttime="20201115 22:11:21.109" endtime="20201115 22:11:21.111"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.104" endtime="20201115 22:11:21.112"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:21.114" endtime="20201115 22:11:21.115"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:21.118" endtime="20201115 22:11:21.137"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.116" endtime="20201115 22:11:21.138"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.113" endtime="20201115 22:11:21.138"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.701" endtime="20201115 22:11:21.139"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.699" endtime="20201115 22:11:21.139"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.698" endtime="20201115 22:11:21.139"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:21.141" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:21.150" endtime="20201115 22:11:21.202"></status>
</kw>
<msg timestamp="20201115 22:11:21.202" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:21.148" endtime="20201115 22:11:21.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:21.205" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:21.203" endtime="20201115 22:11:21.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:21.206" endtime="20201115 22:11:21.207"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.146" endtime="20201115 22:11:21.208"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.144" endtime="20201115 22:11:21.208"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:21.215" endtime="20201115 22:11:21.501"></status>
</kw>
<msg timestamp="20201115 22:11:21.504" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027039806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027065389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:21.213" endtime="20201115 22:11:21.504"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:21.512" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027039806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027065389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:21.505" endtime="20201115 22:11:21.513"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:21.513" endtime="20201115 22:11:21.515"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.211" endtime="20201115 22:11:21.516"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.209" endtime="20201115 22:11:21.516"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:21.520" level="INFO">${RESULT} = [{'time': 0.027065389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5582999999999162e-05, 'source_diff': 2.5582999999999162e-05}, {'time': 0.027775389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:21.517" endtime="20201115 22:11:21.521"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:21.534" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:21.522" endtime="20201115 22:11:21.534"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:21.538" level="INFO">NAME: 00-overhead-21-remove</msg>
<status status="PASS" starttime="20201115 22:11:21.537" endtime="20201115 22:11:21.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:21.541" level="INFO">VALUE: [2.5582999999999162e-05, 2.561100000000177e-05, 2.5568999999999592e-05, 2.563900000000091e-05, 2.5528000000000356e-05, 2.5624999999997872e-05, 2.5596999999995262e-05, 2.561100000000177e-05, 2.558300000000263e-05, 2.5652000000001007e-05, 2.5569999999995596e-05, 2.562500000000134e-05, 2.55970000000022e-05, 2.561100000000177e-05, 2.563900000000091e-05, 2.561100000000177e-05, 2.562500000000134e-05, 2.5527999999996887e-05, 2.565300000000048e-05, 2.5597999999994736e-05, 2.5596999999995262e-05, 2.558300000000263e-05, 2.5598000000001675e-05, 2.5584000000002105e-05, 2.562500000000134e-05, 2.562500000000134e-05, 2.563900000000091e-05, 2.5596999999995262e-05, 2.563900000000091e-05, 2.5652000000001007e-05, 2.5638999999993972e-05, 2.558300000000263e-05, 2.5584000000002105e-05, 2.5652000000001007e-05, 2.561100000000177e-05, 2.5610999999994832e-05, 2.565300000000048e-05, 2.55970000000022e-05, 2.55970000000022e-05, 2.5610999999994832e-05, 2.562500000000134e-05, 2.5556000000002965e-05, 2.5584000000002105e-05, 2.55970000000022e-05, 2.561100000000177e-05, 2.561100000000177e-05, 2.561100000000177e-05, 2.5652000000001007e-05, 2.561100000000177e-05, 2.5570000000002535e-05]</msg>
<status status="PASS" starttime="20201115 22:11:21.540" endtime="20201115 22:11:21.541"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.535" endtime="20201115 22:11:21.542"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:21.544" endtime="20201115 22:11:21.545"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:21.548" endtime="20201115 22:11:21.567"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.546" endtime="20201115 22:11:21.568"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.542" endtime="20201115 22:11:21.568"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.142" endtime="20201115 22:11:21.568"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.140" endtime="20201115 22:11:21.569"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.139" endtime="20201115 22:11:21.569"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:21.571" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:21.580" endtime="20201115 22:11:21.629"></status>
</kw>
<msg timestamp="20201115 22:11:21.629" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:21.578" endtime="20201115 22:11:21.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:21.632" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:21.630" endtime="20201115 22:11:21.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:21.633" endtime="20201115 22:11:21.635"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.576" endtime="20201115 22:11:21.635"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.574" endtime="20201115 22:11:21.636"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:21.642" endtime="20201115 22:11:21.929"></status>
</kw>
<msg timestamp="20201115 22:11:21.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024217681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024243458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:21.641" endtime="20201115 22:11:21.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:21.940" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024217681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024243458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:21.933" endtime="20201115 22:11:21.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:21.942" endtime="20201115 22:11:21.943"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.638" endtime="20201115 22:11:21.944"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.636" endtime="20201115 22:11:21.944"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:21.948" level="INFO">${RESULT} = [{'time': 0.024243458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5776999999997663e-05, 'source_diff': 2.5776999999997663e-05}, {'time': 0.024986375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:21.945" endtime="20201115 22:11:21.949"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:21.962" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:21.949" endtime="20201115 22:11:21.962"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:21.967" level="INFO">NAME: 00-overhead-22-remove</msg>
<status status="PASS" starttime="20201115 22:11:21.965" endtime="20201115 22:11:21.967"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:21.969" level="INFO">VALUE: [2.5776999999997663e-05, 2.5806000000003215e-05, 2.5916000000000827e-05, 2.5833999999998886e-05, 2.5833999999998886e-05, 2.5750000000001466e-05, 2.5832999999999412e-05, 2.5790999999997233e-05, 2.5832999999999412e-05, 2.584700000000245e-05, 2.586100000000202e-05, 2.5820000000002785e-05, 2.588900000000116e-05, 2.5888999999994222e-05, 2.587500000000159e-05, 2.5848000000001925e-05, 2.5818999999996373e-05, 2.581900000000331e-05, 2.5820000000002785e-05, 2.5818999999996373e-05, 2.5818999999996373e-05, 2.5792000000003645e-05, 2.5777999999997137e-05, 2.5791999999996706e-05, 2.5791999999996706e-05, 2.5834000000002355e-05, 2.5819999999995846e-05, 2.5818999999996373e-05, 2.583300000000288e-05, 2.5848000000001925e-05, 2.584700000000245e-05, 2.581900000000331e-05, 2.5804999999996803e-05, 2.5806000000003215e-05, 2.5791999999996706e-05, 2.581900000000331e-05, 2.5806000000003215e-05, 2.5819999999995846e-05, 2.5806000000003215e-05, 2.581900000000331e-05, 2.584700000000245e-05, 2.5792000000003645e-05, 2.5818999999996373e-05, 2.5806000000003215e-05, 2.5806000000003215e-05, 2.5820000000002785e-05, 2.5820000000002785e-05, 2.5806000000003215e-05, 2.581900000000331e-05, 2.5818999999996373e-05]</msg>
<status status="PASS" starttime="20201115 22:11:21.968" endtime="20201115 22:11:21.970"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.963" endtime="20201115 22:11:21.970"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:21.973" endtime="20201115 22:11:21.974"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:21.977" endtime="20201115 22:11:21.997"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.975" endtime="20201115 22:11:21.997"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.971" endtime="20201115 22:11:21.998"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.572" endtime="20201115 22:11:21.998"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.570" endtime="20201115 22:11:21.998"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.569" endtime="20201115 22:11:21.998"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:22.001" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:22.010" endtime="20201115 22:11:22.062"></status>
</kw>
<msg timestamp="20201115 22:11:22.062" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:22.008" endtime="20201115 22:11:22.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:22.065" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:22.063" endtime="20201115 22:11:22.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:22.066" endtime="20201115 22:11:22.067"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.005" endtime="20201115 22:11:22.068"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.003" endtime="20201115 22:11:22.068"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:22.075" endtime="20201115 22:11:22.363"></status>
</kw>
<msg timestamp="20201115 22:11:22.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026785861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026811861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:22.074" endtime="20201115 22:11:22.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:22.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026785861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026811861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:22.367" endtime="20201115 22:11:22.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:22.375" endtime="20201115 22:11:22.376"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.071" endtime="20201115 22:11:22.377"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.069" endtime="20201115 22:11:22.377"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:22.382" level="INFO">${RESULT} = [{'time': 0.026811861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5999999999998247e-05, 'source_diff': 2.5999999999998247e-05}, {'time': 0.027590333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:22.378" endtime="20201115 22:11:22.382"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:22.396" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:22.383" endtime="20201115 22:11:22.397"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:22.401" level="INFO">NAME: 00-overhead-23-remove</msg>
<status status="PASS" starttime="20201115 22:11:22.400" endtime="20201115 22:11:22.401"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:22.403" level="INFO">VALUE: [2.5999999999998247e-05, 2.6041000000000952e-05, 2.6028000000000856e-05, 2.5999999999998247e-05, 2.594499999999944e-05, 2.6042000000000426e-05, 2.6070000000003035e-05, 2.6070000000003035e-05, 2.6027999999997387e-05, 2.5999999999998247e-05, 2.6013000000005282e-05, 2.6026999999997913e-05, 2.5985999999998677e-05, 2.6054999999997053e-05, 2.6027999999997387e-05, 2.6028000000004325e-05, 2.6096999999995762e-05, 2.6041000000004422e-05, 2.6027000000004852e-05, 2.5999999999998247e-05, 2.5971999999999107e-05, 2.598700000000509e-05, 2.6013999999997817e-05, 2.6055999999996526e-05, 2.6027999999997387e-05, 2.6041999999996956e-05, 2.6041000000004422e-05, 2.6027999999997387e-05, 2.6027999999997387e-05, 2.6013999999997817e-05, 2.6013999999997817e-05, 2.6055999999996526e-05, 2.6014000000004756e-05, 2.6027999999997387e-05, 2.5999999999998247e-05, 2.6014000000004756e-05, 2.5986000000005616e-05, 2.6013999999997817e-05, 2.608300000000313e-05, 2.593099999999987e-05, 2.6027999999997387e-05, 2.5916000000000827e-05, 2.6013999999997817e-05, 2.598700000000509e-05, 2.6055999999996526e-05, 2.6028000000004325e-05, 2.6013999999997817e-05, 2.6014000000004756e-05, 2.5986000000005616e-05, 2.6014000000004756e-05]</msg>
<status status="PASS" starttime="20201115 22:11:22.402" endtime="20201115 22:11:22.404"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.397" endtime="20201115 22:11:22.404"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:22.407" endtime="20201115 22:11:22.408"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:22.410" endtime="20201115 22:11:22.430"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.409" endtime="20201115 22:11:22.430"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.405" endtime="20201115 22:11:22.431"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.001" endtime="20201115 22:11:22.431"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.000" endtime="20201115 22:11:22.431"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.999" endtime="20201115 22:11:22.431"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:22.434" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:22.443" endtime="20201115 22:11:22.498"></status>
</kw>
<msg timestamp="20201115 22:11:22.498" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:22.441" endtime="20201115 22:11:22.498"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:22.505" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:22.499" endtime="20201115 22:11:22.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:22.506" endtime="20201115 22:11:22.508"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.438" endtime="20201115 22:11:22.509"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.436" endtime="20201115 22:11:22.509"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:22.515" endtime="20201115 22:11:22.802"></status>
</kw>
<msg timestamp="20201115 22:11:22.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025759278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025785542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:22.514" endtime="20201115 22:11:22.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:22.813" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025759278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025785542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:22.806" endtime="20201115 22:11:22.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:22.814" endtime="20201115 22:11:22.816"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.511" endtime="20201115 22:11:22.816"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.510" endtime="20201115 22:11:22.817"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:22.821" level="INFO">${RESULT} = [{'time': 0.025785542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6264000000001536e-05, 'source_diff': 2.6264000000001536e-05}, {'time': 0.026598333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:22.817" endtime="20201115 22:11:22.821"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:22.834" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:22.822" endtime="20201115 22:11:22.834"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:22.839" level="INFO">NAME: 00-overhead-24-remove</msg>
<status status="PASS" starttime="20201115 22:11:22.838" endtime="20201115 22:11:22.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:22.841" level="INFO">VALUE: [2.6264000000001536e-05, 2.6235999999998927e-05, 2.6235999999998927e-05, 2.6207999999999787e-05, 2.6222000000002826e-05, 2.6207999999999787e-05, 2.6235999999998927e-05, 2.6320000000003285e-05, 2.6235999999998927e-05, 2.620899999999926e-05, 2.619499999999969e-05, 2.6236000000005866e-05, 2.6221999999999357e-05, 2.6235999999998927e-05, 2.6249999999998497e-05, 2.622299999999883e-05, 2.618100000000012e-05, 2.6250000000005436e-05, 2.6249999999998497e-05, 2.6235999999998927e-05, 2.6278000000004575e-05, 2.6250000000005436e-05, 2.619499999999969e-05, 2.6166000000001077e-05, 2.6235999999998927e-05, 2.6249999999998497e-05, 2.622299999999883e-05, 2.6235999999998927e-05, 2.6221999999999357e-05, 2.6222000000006296e-05, 2.6292000000004145e-05, 2.6221999999999357e-05, 2.6221999999999357e-05, 2.6235999999998927e-05, 2.62369999999984e-05, 2.62369999999984e-05, 2.6221999999999357e-05, 2.622299999999883e-05, 2.6221999999999357e-05, 2.6249999999998497e-05, 2.622299999999883e-05, 2.62369999999984e-05, 2.62369999999984e-05, 2.6305999999996776e-05, 2.6249999999998497e-05, 2.6221999999999357e-05, 2.6263999999998067e-05, 2.6221999999992418e-05, 2.62369999999984e-05, 2.6291999999997206e-05]</msg>
<status status="PASS" starttime="20201115 22:11:22.840" endtime="20201115 22:11:22.842"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.835" endtime="20201115 22:11:22.842"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:22.844" endtime="20201115 22:11:22.846"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:22.848" endtime="20201115 22:11:22.867"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.846" endtime="20201115 22:11:22.868"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.843" endtime="20201115 22:11:22.868"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.434" endtime="20201115 22:11:22.869"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.432" endtime="20201115 22:11:22.869"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.432" endtime="20201115 22:11:22.869"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:22.871" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:22.881" endtime="20201115 22:11:22.936"></status>
</kw>
<msg timestamp="20201115 22:11:22.937" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:22.879" endtime="20201115 22:11:22.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:22.939" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:22.938" endtime="20201115 22:11:22.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:22.940" endtime="20201115 22:11:22.942"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.876" endtime="20201115 22:11:22.943"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.874" endtime="20201115 22:11:22.943"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:22.950" endtime="20201115 22:11:23.253"></status>
</kw>
<msg timestamp="20201115 22:11:23.260" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025256111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025282542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:22.948" endtime="20201115 22:11:23.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:23.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025256111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025282542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:23.262" endtime="20201115 22:11:23.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:23.274" endtime="20201115 22:11:23.276"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.945" endtime="20201115 22:11:23.276"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.944" endtime="20201115 22:11:23.277"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:23.281" level="INFO">${RESULT} = [{'time': 0.025282542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.643100000000037e-05, 'source_diff': 2.643100000000037e-05}, {'time': 0.026130208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:23.278" endtime="20201115 22:11:23.281"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:23.294" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:23.282" endtime="20201115 22:11:23.295"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:23.299" level="INFO">NAME: 00-overhead-25-remove</msg>
<status status="PASS" starttime="20201115 22:11:23.298" endtime="20201115 22:11:23.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:23.302" level="INFO">VALUE: [2.643100000000037e-05, 2.6401999999998288e-05, 2.644499999999994e-05, 2.64309999999969e-05, 2.643100000000037e-05, 2.6458000000000037e-05, 2.643100000000037e-05, 2.638899999999819e-05, 2.6471999999999607e-05, 2.6444000000000467e-05, 2.643100000000037e-05, 2.6444000000000467e-05, 2.64170000000008e-05, 2.647299999999908e-05, 2.6458000000000037e-05, 2.642999999999396e-05, 2.6444000000000467e-05, 2.647299999999908e-05, 2.644499999999994e-05, 2.6458000000000037e-05, 2.6430000000000897e-05, 2.640300000000123e-05, 2.644499999999994e-05, 2.6485999999999177e-05, 2.6430999999993432e-05, 2.6444000000000467e-05, 2.647300000000602e-05, 2.6444000000000467e-05, 2.6444000000000467e-05, 2.6458000000000037e-05, 2.643100000000037e-05, 2.640300000000123e-05, 2.6430000000000897e-05, 2.6458000000000037e-05, 2.643100000000037e-05, 2.6430000000000897e-05, 2.643100000000037e-05, 2.6499999999998747e-05, 2.6430000000000897e-05, 2.6416000000001327e-05, 2.6458000000000037e-05, 2.6485999999999177e-05, 2.637500000000209e-05, 2.644499999999994e-05, 2.636100000000252e-05, 2.6416999999986923e-05, 2.636100000000252e-05, 2.6416000000001327e-05, 2.638900000000166e-05, 2.643100000000731e-05]</msg>
<status status="PASS" starttime="20201115 22:11:23.300" endtime="20201115 22:11:23.302"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:23.295" endtime="20201115 22:11:23.302"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:23.305" endtime="20201115 22:11:23.306"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:23.309" endtime="20201115 22:11:23.328"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:23.307" endtime="20201115 22:11:23.329"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:23.303" endtime="20201115 22:11:23.329"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.872" endtime="20201115 22:11:23.329"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.870" endtime="20201115 22:11:23.330"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.869" endtime="20201115 22:11:23.330"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.855" endtime="20201115 22:11:23.330"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="teardown">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:23.334" endtime="20201115 22:11:23.354"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:23.333" endtime="20201115 22:11:23.354"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:23.331" endtime="20201115 22:11:23.355"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:11:12.781" endtime="20201115 22:11:23.355" critical="yes"></status>
</test>
<status status="PASS" starttime="20201115 22:10:59.687" endtime="20201115 22:11:23.361"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_ztimer_benchmarks</item>
<item name="RIOT-Board">frdm-kw41z</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="PASS" starttime="20201115 22:10:57.642" endtime="20201115 22:11:23.378"></status>
</suite>
<statistics>
<total>
<stat pass="5" fail="0">Critical Tests</stat>
<stat pass="5" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="5" fail="0">APP_tests_ztimer_benchmarks</stat>
<stat pass="5" fail="0">BOARD_frdm-kw41z</stat>
<stat pass="5" fail="0">dev</stat>
</tag>
<suite>
<stat pass="5" fail="0" id="s1" name="tests_ztimer_benchmarks">tests_ztimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_ztimer_benchmarks.Timer Version</stat>
<stat pass="4" fail="0" id="s1-s2" name="Timer Overhead">tests_ztimer_benchmarks.Timer Overhead</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
