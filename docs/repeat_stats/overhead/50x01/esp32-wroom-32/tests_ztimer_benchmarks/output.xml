<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201115 22:11:01.517" rpa="false">
<suite id="s1" name="tests_ztimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201115 22:11:02.108" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201115 22:11:02.117" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201115 22:11:03.091" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201115 22:11:02.107" endtime="20201115 22:11:03.091"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201115 22:11:03.094" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201115 22:11:03.092" endtime="20201115 22:11:03.094"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.105" endtime="20201115 22:11:03.095"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:03.097" endtime="20201115 22:11:03.282"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.095" endtime="20201115 22:11:03.283"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:03.295" endtime="20201115 22:11:03.316"></status>
</kw>
<msg timestamp="20201115 22:11:03.317" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:03.294" endtime="20201115 22:11:03.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:03.319" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:03.318" endtime="20201115 22:11:03.320"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:11:03.323" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:11:03.320" endtime="20201115 22:11:03.323"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:03.291" endtime="20201115 22:11:03.324"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:03.289" endtime="20201115 22:11:03.324"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.288" endtime="20201115 22:11:03.324"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:11:03.328" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:11:03.327" endtime="20201115 22:11:03.329"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.325" endtime="20201115 22:11:03.329"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.287" endtime="20201115 22:11:03.329"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.286" endtime="20201115 22:11:03.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:03.330" endtime="20201115 22:11:03.331"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.285" endtime="20201115 22:11:03.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:03.333" endtime="20201115 22:11:03.334"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.283" endtime="20201115 22:11:03.335"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.104" endtime="20201115 22:11:03.335"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:03.341" endtime="20201115 22:11:03.361"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.339" endtime="20201115 22:11:03.361"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:03.376" endtime="20201115 22:11:03.392"></status>
</kw>
<msg timestamp="20201115 22:11:03.393" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:03.373" endtime="20201115 22:11:03.393"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:03.395" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:03.394" endtime="20201115 22:11:03.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:11:03.398" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:11:03.396" endtime="20201115 22:11:03.398"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:03.370" endtime="20201115 22:11:03.399"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:03.368" endtime="20201115 22:11:03.400"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.366" endtime="20201115 22:11:03.400"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:11:03.404" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:11:03.403" endtime="20201115 22:11:03.404"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.401" endtime="20201115 22:11:03.404"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.365" endtime="20201115 22:11:03.405"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.365" endtime="20201115 22:11:03.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:03.405" endtime="20201115 22:11:03.407"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.363" endtime="20201115 22:11:03.407"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.362" endtime="20201115 22:11:03.408"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.338" endtime="20201115 22:11:03.408"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:03.415" endtime="20201115 22:11:03.427"></status>
</kw>
<msg timestamp="20201115 22:11:03.428" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:03.414" endtime="20201115 22:11:03.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:03.430" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:03.429" endtime="20201115 22:11:03.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:03.432" endtime="20201115 22:11:03.433"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.411" endtime="20201115 22:11:03.434"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.409" endtime="20201115 22:11:03.434"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:03.438" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201115 22:11:03.437" endtime="20201115 22:11:03.439"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:03.440" level="INFO">VALUE: ztimer</msg>
<status status="PASS" starttime="20201115 22:11:03.440" endtime="20201115 22:11:03.441"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.435" endtime="20201115 22:11:03.441"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:11:03.335" endtime="20201115 22:11:03.442" critical="yes"></status>
</test>
<status status="PASS" starttime="20201115 22:11:01.656" endtime="20201115 22:11:03.445"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201115 22:11:03.498" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201115 22:11:03.506" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201115 22:11:04.536" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201115 22:11:03.497" endtime="20201115 22:11:04.537"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201115 22:11:04.539" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201115 22:11:04.538" endtime="20201115 22:11:04.540"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.495" endtime="20201115 22:11:04.540"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:04.542" endtime="20201115 22:11:04.764"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.541" endtime="20201115 22:11:04.764"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:04.777" endtime="20201115 22:11:04.797"></status>
</kw>
<msg timestamp="20201115 22:11:04.797" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:04.775" endtime="20201115 22:11:04.797"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:04.800" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:04.798" endtime="20201115 22:11:04.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:11:04.803" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:11:04.801" endtime="20201115 22:11:04.803"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:04.773" endtime="20201115 22:11:04.804"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:04.771" endtime="20201115 22:11:04.804"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.770" endtime="20201115 22:11:04.805"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:11:04.808" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:11:04.808" endtime="20201115 22:11:04.809"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.806" endtime="20201115 22:11:04.809"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.769" endtime="20201115 22:11:04.809"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.768" endtime="20201115 22:11:04.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:04.810" endtime="20201115 22:11:04.812"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.767" endtime="20201115 22:11:04.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:04.813" endtime="20201115 22:11:04.814"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.765" endtime="20201115 22:11:04.815"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.494" endtime="20201115 22:11:04.815"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO/">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:04.822" endtime="20201115 22:11:04.841"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.819" endtime="20201115 22:11:04.842"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:04.855" endtime="20201115 22:11:04.872"></status>
</kw>
<msg timestamp="20201115 22:11:04.873" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:04.853" endtime="20201115 22:11:04.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:04.876" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:04.874" endtime="20201115 22:11:04.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:11:04.879" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:11:04.877" endtime="20201115 22:11:04.879"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:04.851" endtime="20201115 22:11:04.880"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:04.848" endtime="20201115 22:11:04.880"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.847" endtime="20201115 22:11:04.880"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:11:04.884" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:11:04.883" endtime="20201115 22:11:04.884"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.881" endtime="20201115 22:11:04.885"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.846" endtime="20201115 22:11:04.885"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.846" endtime="20201115 22:11:04.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:04.886" endtime="20201115 22:11:04.887"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.844" endtime="20201115 22:11:04.888"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.843" endtime="20201115 22:11:04.888"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.818" endtime="20201115 22:11:04.888"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure GPIO Overhead</arg>
</arguments>
<msg timestamp="20201115 22:11:04.891" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:04.898" endtime="20201115 22:11:04.914"></status>
</kw>
<msg timestamp="20201115 22:11:04.914" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:04.897" endtime="20201115 22:11:04.915"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:04.917" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:04.915" endtime="20201115 22:11:04.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:04.918" endtime="20201115 22:11:04.919"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.894" endtime="20201115 22:11:04.920"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.893" endtime="20201115 22:11:04.920"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:04.927" endtime="20201115 22:11:05.196"></status>
</kw>
<msg timestamp="20201115 22:11:05.198" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066383833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.06638925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:11:04.925" endtime="20201115 22:11:05.198"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:05.203" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066383833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.06638925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:11:05.199" endtime="20201115 22:11:05.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:05.204" endtime="20201115 22:11:05.206"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.923" endtime="20201115 22:11:05.207"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.921" endtime="20201115 22:11:05.207"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:05.210" level="INFO">${RESULT} = [{'time': 0.06638925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.416999999993677e-06, 'source_diff': 5.416999999993677e-06}, {'time': 0.066397264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:11:05.208" endtime="20201115 22:11:05.211"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:05.219" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [5.416999999993677e-06, 4.05600000000228e-06, 3.1800000000054007e-06, 5.2360000000056806e-06, 6.235999999992803e-06, 5.0550000000038064e-06, 3.1669999999983656e-06, 6.02800000000514e-0...</msg>
<status status="PASS" starttime="20201115 22:11:05.211" endtime="20201115 22:11:05.219"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:05.223" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201115 22:11:05.222" endtime="20201115 22:11:05.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:05.225" level="INFO">VALUE: [5.416999999993677e-06, 4.05600000000228e-06, 3.1800000000054007e-06, 5.2360000000056806e-06, 6.235999999992803e-06, 5.0550000000038064e-06, 3.1669999999983656e-06, 6.02800000000514e-06, 2.5839999999999197e-06, 5.9729999999924566e-06, 4.777999999996951e-06, 5.027000000004667e-06, 2.7770000000093553e-06, 4.013999999996631e-06, 6.2919999999910825e-06, 2.847000000000266e-06, 2.4720000000033604e-06, 5.360999999995397e-06, 3.5689999999949373e-06, 3.041999999994771e-06, 3.902999999999546e-06, 4.916000000007581e-06, 5.721999999999672e-06, 3.847000000001266e-06, 4.3049999999961175e-06]</msg>
<status status="PASS" starttime="20201115 22:11:05.224" endtime="20201115 22:11:05.226"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.220" endtime="20201115 22:11:05.226"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:05.228" endtime="20201115 22:11:05.230"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:05.232" endtime="20201115 22:11:05.251"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.230" endtime="20201115 22:11:05.252"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.227" endtime="20201115 22:11:05.252"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.891" endtime="20201115 22:11:05.252"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.890" endtime="20201115 22:11:05.253"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:05.257" endtime="20201115 22:11:05.277"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.256" endtime="20201115 22:11:05.277"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.254" endtime="20201115 22:11:05.277"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:11:04.815" endtime="20201115 22:11:05.278" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:05.286" endtime="20201115 22:11:05.306"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.285" endtime="20201115 22:11:05.306"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:05.320" endtime="20201115 22:11:05.336"></status>
</kw>
<msg timestamp="20201115 22:11:05.337" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:05.318" endtime="20201115 22:11:05.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:05.339" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:05.338" endtime="20201115 22:11:05.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:11:05.342" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:11:05.340" endtime="20201115 22:11:05.342"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:05.315" endtime="20201115 22:11:05.343"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:05.313" endtime="20201115 22:11:05.343"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.312" endtime="20201115 22:11:05.344"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:11:05.347" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:11:05.347" endtime="20201115 22:11:05.348"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.345" endtime="20201115 22:11:05.348"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.311" endtime="20201115 22:11:05.349"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.310" endtime="20201115 22:11:05.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:05.350" endtime="20201115 22:11:05.351"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.309" endtime="20201115 22:11:05.352"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.307" endtime="20201115 22:11:05.352"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.283" endtime="20201115 22:11:05.352"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer Now Overhead</arg>
</arguments>
<msg timestamp="20201115 22:11:05.355" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:05.363" endtime="20201115 22:11:05.378"></status>
</kw>
<msg timestamp="20201115 22:11:05.379" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:05.361" endtime="20201115 22:11:05.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:05.381" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:05.380" endtime="20201115 22:11:05.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:05.382" endtime="20201115 22:11:05.384"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.358" endtime="20201115 22:11:05.384"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.357" endtime="20201115 22:11:05.385"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:05.391" endtime="20201115 22:11:05.671"></status>
</kw>
<msg timestamp="20201115 22:11:05.674" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065541278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065551153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:05.389" endtime="20201115 22:11:05.675"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:05.682" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065541278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065551153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:05.675" endtime="20201115 22:11:05.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:05.684" endtime="20201115 22:11:05.685"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.387" endtime="20201115 22:11:05.686"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.385" endtime="20201115 22:11:05.686"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:05.690" level="INFO">${RESULT} = [{'time': 0.065551153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.875000000006406e-06, 'source_diff': 9.875000000006406e-06}, {'time': 0.065557264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:05.687" endtime="20201115 22:11:05.690"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:05.704" level="INFO">${OVERHEAD} = {'source_diff': [9.875000000006406e-06, 1.1530000000037344e-06, 1.1800000000034006e-06, 1.1109999999980857e-06, 1.1529999999898566e-06, 1.1389999999972256e-06, 1.1520000000042607e-06, 1.11099999999808...</msg>
<status status="PASS" starttime="20201115 22:11:05.691" endtime="20201115 22:11:05.704"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:05.708" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201115 22:11:05.707" endtime="20201115 22:11:05.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:05.710" level="INFO">VALUE: [9.875000000006406e-06, 1.1530000000037344e-06, 1.1800000000034006e-06, 1.1109999999980857e-06, 1.1529999999898566e-06, 1.1389999999972256e-06, 1.1520000000042607e-06, 1.1109999999980857e-06, 1.1530000000037344e-06, 1.1659999999968917e-06, 1.1389999999972256e-06, 1.1670000000102432e-06, 1.1530000000037344e-06, 1.1249999999907168e-06, 1.195000000009383e-06, 1.1389999999972256e-06, 1.1389999999972256e-06, 1.1530000000037344e-06, 1.1670000000102432e-06, 1.1249999999907168e-06, 1.1529999999898566e-06, 1.1669999999963654e-06, 1.1389999999972256e-06, 1.1530000000037344e-06, 1.1389999999972256e-06, 1.1389999999972256e-06, 1.1389999999972256e-06, 1.1530000000037344e-06, 1.1389999999972256e-06, 1.1530000000037344e-06, 1.1530000000037344e-06, 1.1530000000037344e-06, 1.1520000000042607e-06, 1.1530000000037344e-06, 1.1659999999968917e-06, 1.1660000000107695e-06, 1.1109999999980857e-06, 1.1529999999898566e-06, 1.1529999999898566e-06, 1.1669999999963654e-06, 1.1529999999898566e-06, 1.1250000000045945e-06, 1.1810000000028742e-06, 1.1529999999898566e-06, 1.1940000000099094e-06, 1.1659999999968917e-06, 1.1530000000037344e-06, 1.1520000000042607e-06, 1.1530000000037344e-06, 1.1520000000042607e-06]</msg>
<status status="PASS" starttime="20201115 22:11:05.709" endtime="20201115 22:11:05.711"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.705" endtime="20201115 22:11:05.712"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:05.714" endtime="20201115 22:11:05.715"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:05.717" endtime="20201115 22:11:05.736"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.716" endtime="20201115 22:11:05.737"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.712" endtime="20201115 22:11:05.737"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.356" endtime="20201115 22:11:05.738"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.354" endtime="20201115 22:11:05.738"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:05.743" endtime="20201115 22:11:05.762"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.741" endtime="20201115 22:11:05.762"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.740" endtime="20201115 22:11:05.763"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:11:05.280" endtime="20201115 22:11:05.763" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set List">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:05.772" endtime="20201115 22:11:05.792"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.770" endtime="20201115 22:11:05.792"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:05.806" endtime="20201115 22:11:05.824"></status>
</kw>
<msg timestamp="20201115 22:11:05.824" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:05.804" endtime="20201115 22:11:05.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:05.827" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:05.825" endtime="20201115 22:11:05.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:11:05.830" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:11:05.828" endtime="20201115 22:11:05.830"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:05.801" endtime="20201115 22:11:05.831"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:05.798" endtime="20201115 22:11:05.831"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.797" endtime="20201115 22:11:05.831"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:11:05.835" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:11:05.834" endtime="20201115 22:11:05.836"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.832" endtime="20201115 22:11:05.836"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.796" endtime="20201115 22:11:05.836"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.796" endtime="20201115 22:11:05.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:05.837" endtime="20201115 22:11:05.838"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.794" endtime="20201115 22:11:05.839"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.793" endtime="20201115 22:11:05.839"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.769" endtime="20201115 22:11:05.839"></status>
</kw>
<kw name="${n} IN RANGE [ 25 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:05.843" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:05.852" endtime="20201115 22:11:05.865"></status>
</kw>
<msg timestamp="20201115 22:11:05.866" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:05.851" endtime="20201115 22:11:05.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:05.868" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:05.867" endtime="20201115 22:11:05.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:05.869" endtime="20201115 22:11:05.871"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.847" endtime="20201115 22:11:05.872"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.845" endtime="20201115 22:11:05.872"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:05.878" endtime="20201115 22:11:06.165"></status>
</kw>
<msg timestamp="20201115 22:11:06.168" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070453458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070459681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:05.877" endtime="20201115 22:11:06.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:06.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070453458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070459681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:06.169" endtime="20201115 22:11:06.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:06.177" endtime="20201115 22:11:06.179"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.874" endtime="20201115 22:11:06.180"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.873" endtime="20201115 22:11:06.180"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:06.184" level="INFO">${RESULT} = [{'time': 0.070459681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.2229999999996455e-06, 'source_diff': 6.2229999999996455e-06}, {'time': 0.070513292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:06.181" endtime="20201115 22:11:06.184"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:06.199" level="INFO">${OVERHEAD} = {'source_diff': [6.2229999999996455e-06, 6.042000000011649e-06, 6.02800000000514e-06, 6.0550000000048065e-06, 6.02800000000514e-06, 6.0279999999912626e-06, 6.054999999990929e-06, 6.0139999999986316e-0...</msg>
<status status="PASS" starttime="20201115 22:11:06.185" endtime="20201115 22:11:06.200"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:06.204" level="INFO">NAME: 00-overhead-1-set</msg>
<status status="PASS" starttime="20201115 22:11:06.203" endtime="20201115 22:11:06.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:06.206" level="INFO">VALUE: [6.2229999999996455e-06, 6.042000000011649e-06, 6.02800000000514e-06, 6.0550000000048065e-06, 6.02800000000514e-06, 6.0279999999912626e-06, 6.054999999990929e-06, 6.0139999999986316e-06, 6.012999999999158e-06, 6.02800000000514e-06, 6.041999999997771e-06, 6.02800000000514e-06, 6.02800000000514e-06, 6.05600000000428e-06, 6.096999999996577e-06, 6.0139999999986316e-06, 6.042000000011649e-06, 6.083000000003946e-06, 6.111000000003086e-06, 6.040999999998298e-06, 6.02800000000514e-06, 6.027000000005667e-06, 6.055999999990402e-06, 6.05600000000428e-06, 6.02800000000514e-06, 5.971999999992983e-06, 6.040999999998298e-06, 6.0000000000060005e-06, 6.0550000000048065e-06, 6.041999999997771e-06, 6.0689999999974376e-06, 6.02800000000514e-06, 6.096999999996577e-06, 6.041999999997771e-06, 6.0139999999986316e-06, 6.05600000000428e-06, 6.0279999999912626e-06, 6.042000000011649e-06, 6.0139999999986316e-06, 6.0689999999974376e-06, 6.02800000000514e-06, 6.05600000000428e-06, 6.0689999999974376e-06, 6.02800000000514e-06, 6.027000000005667e-06, 6.0279999999912626e-06, 6.040999999998298e-06, 6.0279999999912626e-06, 6.0139999999986316e-06, 6.096999999996577e-06]</msg>
<status status="PASS" starttime="20201115 22:11:06.205" endtime="20201115 22:11:06.207"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.200" endtime="20201115 22:11:06.207"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:06.209" endtime="20201115 22:11:06.211"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:06.213" endtime="20201115 22:11:06.232"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.211" endtime="20201115 22:11:06.233"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.208" endtime="20201115 22:11:06.233"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.844" endtime="20201115 22:11:06.234"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.842" endtime="20201115 22:11:06.234"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.841" endtime="20201115 22:11:06.234"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:06.236" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:06.245" endtime="20201115 22:11:06.258"></status>
</kw>
<msg timestamp="20201115 22:11:06.259" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:06.243" endtime="20201115 22:11:06.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:06.261" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:06.260" endtime="20201115 22:11:06.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:06.262" endtime="20201115 22:11:06.264"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.241" endtime="20201115 22:11:06.264"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.239" endtime="20201115 22:11:06.265"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:06.271" endtime="20201115 22:11:06.558"></status>
</kw>
<msg timestamp="20201115 22:11:06.561" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022252097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022255, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:11:06.269" endtime="20201115 22:11:06.562"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:06.570" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022252097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022255, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:11:06.563" endtime="20201115 22:11:06.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:06.571" endtime="20201115 22:11:06.572"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.267" endtime="20201115 22:11:06.573"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.265" endtime="20201115 22:11:06.573"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:06.577" level="INFO">${RESULT} = [{'time': 0.022255, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.903000000002015e-06, 'source_diff': 2.903000000002015e-06}, {'time': 0.02231625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2...</msg>
<status status="PASS" starttime="20201115 22:11:06.574" endtime="20201115 22:11:06.578"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:06.591" level="INFO">${OVERHEAD} = {'source_diff': [2.903000000002015e-06, 2.8889999999989757e-06, 2.8050000000015562e-06, 2.874999999999406e-06, 2.8889999999989757e-06, 2.8889999999989757e-06, 2.8889999999989757e-06, 2.874999999999406...</msg>
<status status="PASS" starttime="20201115 22:11:06.578" endtime="20201115 22:11:06.591"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:06.595" level="INFO">NAME: 00-overhead-2-set</msg>
<status status="PASS" starttime="20201115 22:11:06.594" endtime="20201115 22:11:06.596"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:06.598" level="INFO">VALUE: [2.903000000002015e-06, 2.8889999999989757e-06, 2.8050000000015562e-06, 2.874999999999406e-06, 2.8889999999989757e-06, 2.8889999999989757e-06, 2.8889999999989757e-06, 2.874999999999406e-06, 2.9579999999973516e-06, 2.8750000000028753e-06, 2.901999999999072e-06, 2.874999999999406e-06, 2.8889999999989757e-06, 2.8889999999989757e-06, 2.9029999999985456e-06, 2.889000000002445e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.9029999999985456e-06, 2.8880000000029715e-06, 2.8889999999989757e-06, 2.889000000002445e-06, 2.8889999999989757e-06, 2.945000000000725e-06, 2.9029999999985456e-06, 2.889000000002445e-06, 2.8750000000028753e-06, 2.8889999999989757e-06, 2.8889999999989757e-06, 2.8889999999989757e-06, 2.8889999999989757e-06, 2.860999999999836e-06, 2.9029999999985456e-06, 2.874999999999406e-06, 2.9029999999985456e-06, 2.887999999999502e-06, 2.917000000001585e-06, 2.860999999999836e-06, 2.874999999999406e-06, 2.8889999999989757e-06, 2.819000000001126e-06, 2.874999999999406e-06, 2.860999999999836e-06, 2.8340000000001697e-06, 2.874999999999406e-06, 2.8619999999993095e-06, 2.80600000000103e-06, 2.874999999999406e-06, 2.8889999999989757e-06]</msg>
<status status="PASS" starttime="20201115 22:11:06.596" endtime="20201115 22:11:06.598"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.592" endtime="20201115 22:11:06.599"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:06.601" endtime="20201115 22:11:06.602"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:06.604" endtime="20201115 22:11:06.624"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.603" endtime="20201115 22:11:06.624"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.600" endtime="20201115 22:11:06.625"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.237" endtime="20201115 22:11:06.625"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.235" endtime="20201115 22:11:06.625"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.234" endtime="20201115 22:11:06.626"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:06.628" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:06.636" endtime="20201115 22:11:06.650"></status>
</kw>
<msg timestamp="20201115 22:11:06.650" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:06.635" endtime="20201115 22:11:06.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:06.653" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:06.651" endtime="20201115 22:11:06.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:06.654" endtime="20201115 22:11:06.655"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.632" endtime="20201115 22:11:06.656"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.630" endtime="20201115 22:11:06.656"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:06.663" endtime="20201115 22:11:06.950"></status>
</kw>
<msg timestamp="20201115 22:11:06.953" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021838347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021841458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:06.661" endtime="20201115 22:11:06.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:06.961" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021838347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021841458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:06.954" endtime="20201115 22:11:06.961"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:06.962" endtime="20201115 22:11:06.964"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.658" endtime="20201115 22:11:06.964"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.657" endtime="20201115 22:11:06.965"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:06.969" level="INFO">${RESULT} = [{'time': 0.021841458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.111000000000086e-06, 'source_diff': 3.111000000000086e-06}, {'time': 0.021910278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:06.965" endtime="20201115 22:11:06.969"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:06.982" level="INFO">${OVERHEAD} = {'source_diff': [3.111000000000086e-06, 3.0969999999970466e-06, 3.0979999999999897e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.097000000000516e-06, 3.111000000000086e-06, 3.111000000000086e-0...</msg>
<status status="PASS" starttime="20201115 22:11:06.970" endtime="20201115 22:11:06.982"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:06.986" level="INFO">NAME: 00-overhead-3-set</msg>
<status status="PASS" starttime="20201115 22:11:06.985" endtime="20201115 22:11:06.987"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:06.989" level="INFO">VALUE: [3.111000000000086e-06, 3.0969999999970466e-06, 3.0979999999999897e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.097000000000516e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.181000000001405e-06, 3.111000000000086e-06, 3.097000000000516e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.165999999998892e-06, 3.097000000000516e-06, 3.167000000001835e-06, 3.1669999999983656e-06, 3.137999999999752e-06, 3.111000000000086e-06, 3.124999999999656e-06, 3.111000000000086e-06, 3.124999999999656e-06, 3.111000000000086e-06, 3.124999999999656e-06, 3.124999999999656e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.124999999999656e-06, 3.153000000002265e-06, 3.1660000000023614e-06, 3.0969999999970466e-06, 3.167000000001835e-06, 3.124999999999656e-06, 3.097000000000516e-06, 3.1389999999992257e-06, 3.124999999999656e-06, 3.124999999999656e-06, 3.111000000000086e-06, 3.124999999999656e-06, 3.0840000000004197e-06, 3.0979999999999897e-06, 3.097000000000516e-06, 3.111000000000086e-06, 3.097000000000516e-06, 3.111000000000086e-06, 3.1119999999995596e-06, 3.124999999999656e-06, 3.137999999999752e-06]</msg>
<status status="PASS" starttime="20201115 22:11:06.987" endtime="20201115 22:11:06.990"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.983" endtime="20201115 22:11:06.990"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:06.992" endtime="20201115 22:11:06.994"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:06.996" endtime="20201115 22:11:07.015"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.994" endtime="20201115 22:11:07.016"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.991" endtime="20201115 22:11:07.016"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.628" endtime="20201115 22:11:07.016"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.627" endtime="20201115 22:11:07.017"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.626" endtime="20201115 22:11:07.017"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:07.019" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:07.028" endtime="20201115 22:11:07.041"></status>
</kw>
<msg timestamp="20201115 22:11:07.042" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:07.026" endtime="20201115 22:11:07.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:07.044" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:07.043" endtime="20201115 22:11:07.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:07.045" endtime="20201115 22:11:07.047"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.024" endtime="20201115 22:11:07.047"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.022" endtime="20201115 22:11:07.047"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:07.054" endtime="20201115 22:11:07.340"></status>
</kw>
<msg timestamp="20201115 22:11:07.343" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021951139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021954528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:07.052" endtime="20201115 22:11:07.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:07.351" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021951139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021954528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:07.344" endtime="20201115 22:11:07.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:07.353" endtime="20201115 22:11:07.354"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.050" endtime="20201115 22:11:07.355"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.048" endtime="20201115 22:11:07.355"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:07.359" level="INFO">${RESULT} = [{'time': 0.021954528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3889999999994758e-06, 'source_diff': 3.3889999999994758e-06}, {'time': 0.022031583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:07.356" endtime="20201115 22:11:07.360"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:07.373" level="INFO">${OVERHEAD} = {'source_diff': [3.3889999999994758e-06, 3.2639999999993508e-06, 3.3469999999972966e-06, 3.333000000001196e-06, 3.3189999999981568e-06, 3.3480000000002397e-06, 3.3329999999977267e-06, 3.34800000000023...</msg>
<status status="PASS" starttime="20201115 22:11:07.361" endtime="20201115 22:11:07.373"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:07.378" level="INFO">NAME: 00-overhead-4-set</msg>
<status status="PASS" starttime="20201115 22:11:07.377" endtime="20201115 22:11:07.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:07.380" level="INFO">VALUE: [3.3889999999994758e-06, 3.2639999999993508e-06, 3.3469999999972966e-06, 3.333000000001196e-06, 3.3189999999981568e-06, 3.3480000000002397e-06, 3.3329999999977267e-06, 3.3480000000002397e-06, 3.361000000000336e-06, 3.3469999999972966e-06, 3.319000000001626e-06, 3.3189999999981568e-06, 3.347000000000766e-06, 3.319000000001626e-06, 3.319000000001626e-06, 3.319000000001626e-06, 3.333000000001196e-06, 3.3329999999977267e-06, 3.347000000000766e-06, 3.3340000000006698e-06, 3.3059999999980605e-06, 3.347000000000766e-06, 3.347000000000766e-06, 3.3200000000011e-06, 3.347000000000766e-06, 3.361000000000336e-06, 3.3200000000011e-06, 3.3329999999977267e-06, 3.3890000000029452e-06, 3.3200000000011e-06, 3.3189999999981568e-06, 3.333000000001196e-06, 3.319000000001626e-06, 3.3340000000006698e-06, 3.3480000000002397e-06, 3.3619999999998096e-06, 3.3199999999976304e-06, 3.374999999999906e-06, 3.29200000000196e-06, 3.3469999999972966e-06, 3.3050000000020563e-06, 3.347000000000766e-06, 3.3480000000002397e-06, 3.333000000001196e-06, 3.374999999999906e-06, 3.333000000001196e-06, 3.333000000001196e-06, 3.333000000001196e-06, 3.3340000000006698e-06, 3.3050000000020563e-06]</msg>
<status status="PASS" starttime="20201115 22:11:07.379" endtime="20201115 22:11:07.381"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.374" endtime="20201115 22:11:07.381"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:07.383" endtime="20201115 22:11:07.384"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:07.386" endtime="20201115 22:11:07.406"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.385" endtime="20201115 22:11:07.406"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.382" endtime="20201115 22:11:07.407"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.020" endtime="20201115 22:11:07.407"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.018" endtime="20201115 22:11:07.407"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.017" endtime="20201115 22:11:07.408"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:07.410" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:07.418" endtime="20201115 22:11:07.433"></status>
</kw>
<msg timestamp="20201115 22:11:07.433" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:07.417" endtime="20201115 22:11:07.433"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:07.436" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:07.434" endtime="20201115 22:11:07.436"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:07.437" endtime="20201115 22:11:07.438"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.414" endtime="20201115 22:11:07.439"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.412" endtime="20201115 22:11:07.439"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:07.445" endtime="20201115 22:11:07.731"></status>
</kw>
<msg timestamp="20201115 22:11:07.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0220265, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022030083, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:11:07.444" endtime="20201115 22:11:07.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:07.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0220265, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022030083, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:11:07.736" endtime="20201115 22:11:07.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:07.744" endtime="20201115 22:11:07.746"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.441" endtime="20201115 22:11:07.746"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.440" endtime="20201115 22:11:07.747"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:07.751" level="INFO">${RESULT} = [{'time': 0.022030083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5829999999979767e-06, 'source_diff': 3.5829999999979767e-06}, {'time': 0.022119639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:07.747" endtime="20201115 22:11:07.751"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:07.766" level="INFO">${OVERHEAD} = {'source_diff': [3.5829999999979767e-06, 3.57000000000135e-06, 3.5559999999983105e-06, 3.5690000000018762e-06, 3.6529999999992957e-06, 3.5690000000018762e-06, 3.5829999999979767e-06, 3.583999999997450...</msg>
<status status="PASS" starttime="20201115 22:11:07.752" endtime="20201115 22:11:07.766"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:07.770" level="INFO">NAME: 00-overhead-5-set</msg>
<status status="PASS" starttime="20201115 22:11:07.769" endtime="20201115 22:11:07.770"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:07.772" level="INFO">VALUE: [3.5829999999979767e-06, 3.57000000000135e-06, 3.5559999999983105e-06, 3.5690000000018762e-06, 3.6529999999992957e-06, 3.5690000000018762e-06, 3.5829999999979767e-06, 3.5839999999974503e-06, 3.57000000000135e-06, 3.554999999998837e-06, 3.55600000000178e-06, 3.5419999999987406e-06, 3.583000000001446e-06, 3.5690000000018762e-06, 3.500000000000031e-06, 3.57000000000135e-06, 3.5559999999983105e-06, 3.57000000000135e-06, 3.5699999999978804e-06, 3.5550000000023063e-06, 3.583000000001446e-06, 3.540999999999267e-06, 3.5689999999984068e-06, 3.5419999999987406e-06, 3.625000000000156e-06, 3.55600000000178e-06, 3.57000000000135e-06, 3.5559999999983105e-06, 3.55600000000178e-06, 3.554999999998837e-06, 3.540999999999267e-06, 3.5419999999987406e-06, 3.52800000000264e-06, 3.5690000000018762e-06, 3.554999999998837e-06, 3.625000000000156e-06, 3.5559999999983105e-06, 3.583000000001446e-06, 3.5690000000018762e-06, 3.597000000001016e-06, 3.5840000000009198e-06, 3.5559999999983105e-06, 3.5829999999979767e-06, 3.5699999999978804e-06, 3.55600000000178e-06, 3.5840000000009198e-06, 3.5550000000023063e-06, 3.583000000001446e-06, 3.5689999999984068e-06, 3.5699999999978804e-06]</msg>
<status status="PASS" starttime="20201115 22:11:07.771" endtime="20201115 22:11:07.773"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.766" endtime="20201115 22:11:07.773"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:07.776" endtime="20201115 22:11:07.777"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:07.779" endtime="20201115 22:11:07.798"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.777" endtime="20201115 22:11:07.799"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.774" endtime="20201115 22:11:07.799"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.410" endtime="20201115 22:11:07.800"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.409" endtime="20201115 22:11:07.800"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.408" endtime="20201115 22:11:07.800"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:07.803" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:07.812" endtime="20201115 22:11:07.827"></status>
</kw>
<msg timestamp="20201115 22:11:07.827" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:07.811" endtime="20201115 22:11:07.827"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:07.830" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:07.828" endtime="20201115 22:11:07.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:07.831" endtime="20201115 22:11:07.832"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.808" endtime="20201115 22:11:07.833"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.805" endtime="20201115 22:11:07.833"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:07.840" endtime="20201115 22:11:08.128"></status>
</kw>
<msg timestamp="20201115 22:11:08.131" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023785667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0237895, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:11:07.838" endtime="20201115 22:11:08.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:08.139" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023785667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0237895, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:11:08.132" endtime="20201115 22:11:08.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:08.140" endtime="20201115 22:11:08.141"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.835" endtime="20201115 22:11:08.142"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.834" endtime="20201115 22:11:08.142"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:08.146" level="INFO">${RESULT} = [{'time': 0.0237895, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.833000000001696e-06, 'source_diff': 3.833000000001696e-06}, {'time': 0.023885806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:11:08.143" endtime="20201115 22:11:08.147"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:08.160" level="INFO">${OVERHEAD} = {'source_diff': [3.833000000001696e-06, 3.7779999999994207e-06, 3.7919999999989906e-06, 3.790999999999517e-06, 3.7779999999994207e-06, 3.832999999998227e-06, 3.77800000000289e-06, 3.7919999999989906e-...</msg>
<status status="PASS" starttime="20201115 22:11:08.147" endtime="20201115 22:11:08.160"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:08.164" level="INFO">NAME: 00-overhead-6-set</msg>
<status status="PASS" starttime="20201115 22:11:08.163" endtime="20201115 22:11:08.165"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:08.167" level="INFO">VALUE: [3.833000000001696e-06, 3.7779999999994207e-06, 3.7919999999989906e-06, 3.790999999999517e-06, 3.7779999999994207e-06, 3.832999999998227e-06, 3.77800000000289e-06, 3.7919999999989906e-06, 3.7919999999989906e-06, 3.80600000000203e-06, 3.77800000000289e-06, 3.804999999999087e-06, 3.7919999999989906e-06, 3.8059999999985605e-06, 3.750000000000281e-06, 3.875000000000406e-06, 3.750000000000281e-06, 3.77800000000289e-06, 3.7919999999989906e-06, 3.818999999998657e-06, 3.7770000000034165e-06, 3.7919999999989906e-06, 3.790999999999517e-06, 3.7919999999989906e-06, 3.80600000000203e-06, 3.7919999999989906e-06, 3.750000000000281e-06, 3.804999999999087e-06, 3.818999999998657e-06, 3.819000000002126e-06, 3.8059999999985605e-06, 3.776999999999947e-06, 3.736000000000711e-06, 3.832999999998227e-06, 3.763999999999851e-06, 3.7919999999989906e-06, 3.7919999999989906e-06, 3.750000000000281e-06, 3.7919999999989906e-06, 3.7779999999994207e-06, 3.790999999999517e-06, 3.763999999999851e-06, 3.7919999999989906e-06, 3.875000000000406e-06, 3.846999999997797e-06, 3.77800000000289e-06, 3.790999999999517e-06, 3.8059999999985605e-06, 3.708000000001571e-06, 3.80600000000203e-06]</msg>
<status status="PASS" starttime="20201115 22:11:08.165" endtime="20201115 22:11:08.167"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.161" endtime="20201115 22:11:08.168"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:08.170" endtime="20201115 22:11:08.171"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:08.173" endtime="20201115 22:11:08.192"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.172" endtime="20201115 22:11:08.193"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.168" endtime="20201115 22:11:08.194"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.803" endtime="20201115 22:11:08.194"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.801" endtime="20201115 22:11:08.194"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.801" endtime="20201115 22:11:08.194"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:08.196" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:08.205" endtime="20201115 22:11:08.221"></status>
</kw>
<msg timestamp="20201115 22:11:08.221" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:08.203" endtime="20201115 22:11:08.221"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:08.224" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:08.222" endtime="20201115 22:11:08.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:08.225" endtime="20201115 22:11:08.227"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.201" endtime="20201115 22:11:08.227"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.199" endtime="20201115 22:11:08.228"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:08.234" endtime="20201115 22:11:08.519"></status>
</kw>
<msg timestamp="20201115 22:11:08.522" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021865528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021869528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:08.233" endtime="20201115 22:11:08.523"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:08.530" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021865528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021869528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:08.523" endtime="20201115 22:11:08.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:08.531" endtime="20201115 22:11:08.533"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.230" endtime="20201115 22:11:08.533"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.228" endtime="20201115 22:11:08.534"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:08.538" level="INFO">${RESULT} = [{'time': 0.021869528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.000000000000531e-06, 'source_diff': 4.000000000000531e-06}, {'time': 0.021973833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:08.535" endtime="20201115 22:11:08.538"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:08.551" level="INFO">${OVERHEAD} = {'source_diff': [4.000000000000531e-06, 4.014000000000101e-06, 4.027999999999671e-06, 4.027999999999671e-06, 3.929999999999212e-06, 4.000000000000531e-06, 3.943999999998782e-06, 4.027999999999671e-06,...</msg>
<status status="PASS" starttime="20201115 22:11:08.539" endtime="20201115 22:11:08.551"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:08.556" level="INFO">NAME: 00-overhead-7-set</msg>
<status status="PASS" starttime="20201115 22:11:08.555" endtime="20201115 22:11:08.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:08.558" level="INFO">VALUE: [4.000000000000531e-06, 4.014000000000101e-06, 4.027999999999671e-06, 4.027999999999671e-06, 3.929999999999212e-06, 4.000000000000531e-06, 3.943999999998782e-06, 4.027999999999671e-06, 4.014000000000101e-06, 4.000000000000531e-06, 4.014000000000101e-06, 4.014000000000101e-06, 4.0699999999983805e-06, 4.027000000000197e-06, 4.027000000000197e-06, 4.000000000000531e-06, 4.000000000000531e-06, 4.027999999999671e-06, 4.027000000000197e-06, 4.014000000000101e-06, 4.000000000000531e-06, 4.014000000000101e-06, 4.014000000000101e-06, 4.014000000000101e-06, 4.000000000000531e-06, 4.000000000000531e-06, 3.972000000001391e-06, 3.958000000001821e-06, 4.082999999998477e-06, 4.000000000000531e-06, 3.9999999999970615e-06, 4.013000000000627e-06, 4.027000000000197e-06, 4.000000000000531e-06, 4.000000000000531e-06, 4.014000000000101e-06, 4.041999999999241e-06, 4.014000000000101e-06, 4.014000000000101e-06, 4.027999999999671e-06, 4.014000000000101e-06, 4.014000000000101e-06, 4.000000000000531e-06, 4.014000000000101e-06, 4.000000000000531e-06, 4.000000000000531e-06, 4.027999999999671e-06, 3.972000000001391e-06, 4.014000000000101e-06, 3.986000000000961e-06]</msg>
<status status="PASS" starttime="20201115 22:11:08.557" endtime="20201115 22:11:08.558"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.552" endtime="20201115 22:11:08.559"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:08.561" endtime="20201115 22:11:08.562"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:08.565" endtime="20201115 22:11:08.584"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.563" endtime="20201115 22:11:08.584"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.559" endtime="20201115 22:11:08.585"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.197" endtime="20201115 22:11:08.585"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.195" endtime="20201115 22:11:08.585"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.195" endtime="20201115 22:11:08.586"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:08.588" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:08.597" endtime="20201115 22:11:08.612"></status>
</kw>
<msg timestamp="20201115 22:11:08.613" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:08.595" endtime="20201115 22:11:08.613"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:08.615" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:08.614" endtime="20201115 22:11:08.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:08.616" endtime="20201115 22:11:08.618"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.593" endtime="20201115 22:11:08.618"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.590" endtime="20201115 22:11:08.619"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:08.625" endtime="20201115 22:11:08.913"></status>
</kw>
<msg timestamp="20201115 22:11:08.916" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022356875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022361097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:08.624" endtime="20201115 22:11:08.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:08.924" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022356875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022361097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:08.917" endtime="20201115 22:11:08.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:08.925" endtime="20201115 22:11:08.926"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.621" endtime="20201115 22:11:08.927"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.619" endtime="20201115 22:11:08.927"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:08.931" level="INFO">${RESULT} = [{'time': 0.022361097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.222000000001641e-06, 'source_diff': 4.222000000001641e-06}, {'time': 0.022475667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:08.928" endtime="20201115 22:11:08.932"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:08.945" level="INFO">${OVERHEAD} = {'source_diff': [4.222000000001641e-06, 4.209000000001545e-06, 4.2359999999977416e-06, 4.262999999997408e-06, 4.250000000000781e-06, 4.2499999999973115e-06, 4.236000000001211e-06, 4.250000000000781e-0...</msg>
<status status="PASS" starttime="20201115 22:11:08.932" endtime="20201115 22:11:08.945"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:08.949" level="INFO">NAME: 00-overhead-8-set</msg>
<status status="PASS" starttime="20201115 22:11:08.948" endtime="20201115 22:11:08.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:08.952" level="INFO">VALUE: [4.222000000001641e-06, 4.209000000001545e-06, 4.2359999999977416e-06, 4.262999999997408e-06, 4.250000000000781e-06, 4.2499999999973115e-06, 4.236000000001211e-06, 4.250000000000781e-06, 4.2359999999977416e-06, 4.2499999999973115e-06, 4.250000000000781e-06, 4.222000000001641e-06, 4.221999999998172e-06, 4.236000000001211e-06, 4.250000000000781e-06, 4.2359999999977416e-06, 4.236000000001211e-06, 4.195000000001975e-06, 4.222000000001641e-06, 4.250000000000781e-06, 4.222000000001641e-06, 4.236000000001211e-06, 4.193999999999032e-06, 4.2499999999973115e-06, 4.2359999999977416e-06, 4.250000000000781e-06, 4.222999999997645e-06, 4.250000000000781e-06, 4.236000000001211e-06, 4.236999999997215e-06, 4.237000000000685e-06, 4.222000000001641e-06, 4.236000000001211e-06, 4.250000000000781e-06, 4.236000000001211e-06, 4.236000000001211e-06, 4.236000000001211e-06, 4.223000000001115e-06, 4.250000000000781e-06, 4.208999999998075e-06, 4.222000000001641e-06, 4.236000000001211e-06, 4.208999999998075e-06, 4.250000000000781e-06, 4.2359999999977416e-06, 4.2499999999973115e-06, 4.250000000000781e-06, 4.193999999999032e-06, 4.181000000002405e-06, 4.236000000001211e-06]</msg>
<status status="PASS" starttime="20201115 22:11:08.950" endtime="20201115 22:11:08.952"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.946" endtime="20201115 22:11:08.953"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:08.955" endtime="20201115 22:11:08.956"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:08.958" endtime="20201115 22:11:08.978"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.957" endtime="20201115 22:11:08.978"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.953" endtime="20201115 22:11:08.979"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.588" endtime="20201115 22:11:08.979"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.587" endtime="20201115 22:11:08.979"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.586" endtime="20201115 22:11:08.980"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:08.982" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:08.990" endtime="20201115 22:11:09.006"></status>
</kw>
<msg timestamp="20201115 22:11:09.007" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:08.989" endtime="20201115 22:11:09.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:09.009" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:09.008" endtime="20201115 22:11:09.010"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:09.010" endtime="20201115 22:11:09.012"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.986" endtime="20201115 22:11:09.013"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.984" endtime="20201115 22:11:09.013"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:09.019" endtime="20201115 22:11:09.306"></status>
</kw>
<msg timestamp="20201115 22:11:09.309" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021908431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021912931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:09.018" endtime="20201115 22:11:09.309"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:09.317" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021908431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021912931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:09.310" endtime="20201115 22:11:09.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:09.318" endtime="20201115 22:11:09.320"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.015" endtime="20201115 22:11:09.320"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.014" endtime="20201115 22:11:09.321"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:09.325" level="INFO">${RESULT} = [{'time': 0.021912931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.500000000001031e-06, 'source_diff': 4.500000000001031e-06}, {'time': 0.022040153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:09.321" endtime="20201115 22:11:09.325"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:09.339" level="INFO">${OVERHEAD} = {'source_diff': [4.500000000001031e-06, 4.458999999998325e-06, 4.472000000001891e-06, 4.443999999999282e-06, 4.471999999998422e-06, 4.444000000002751e-06, 4.457999999998852e-06, 4.459000000001795e-06,...</msg>
<status status="PASS" starttime="20201115 22:11:09.326" endtime="20201115 22:11:09.340"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:09.344" level="INFO">NAME: 00-overhead-9-set</msg>
<status status="PASS" starttime="20201115 22:11:09.343" endtime="20201115 22:11:09.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:09.346" level="INFO">VALUE: [4.500000000001031e-06, 4.458999999998325e-06, 4.472000000001891e-06, 4.443999999999282e-06, 4.471999999998422e-06, 4.444000000002751e-06, 4.457999999998852e-06, 4.459000000001795e-06, 4.457999999998852e-06, 4.472000000001891e-06, 4.459000000001795e-06, 4.486000000001461e-06, 4.458000000002321e-06, 4.471999999998422e-06, 4.485999999997992e-06, 4.429999999999712e-06, 4.471999999998422e-06, 4.473000000001365e-06, 4.487000000000935e-06, 4.389000000000476e-06, 4.473000000001365e-06, 4.457999999998852e-06, 4.471999999998422e-06, 4.473000000001365e-06, 4.471999999998422e-06, 4.403000000000046e-06, 4.457999999998852e-06, 4.471999999998422e-06, 4.485999999997992e-06, 4.472000000001891e-06, 4.458999999998325e-06, 4.486000000001461e-06, 4.457999999998852e-06, 4.457999999998852e-06, 4.458000000002321e-06, 4.513000000001127e-06, 4.472000000001891e-06, 4.457999999998852e-06, 4.471999999998422e-06, 4.459000000001795e-06, 4.457999999998852e-06, 4.485999999997992e-06, 4.4449999999987555e-06, 4.457999999998852e-06, 4.458999999998325e-06, 4.472000000001891e-06, 4.457999999998852e-06, 4.473000000001365e-06, 4.443999999999282e-06, 4.457999999998852e-06]</msg>
<status status="PASS" starttime="20201115 22:11:09.345" endtime="20201115 22:11:09.347"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.340" endtime="20201115 22:11:09.348"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:09.350" endtime="20201115 22:11:09.351"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:09.353" endtime="20201115 22:11:09.372"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.352" endtime="20201115 22:11:09.373"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.348" endtime="20201115 22:11:09.374"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.982" endtime="20201115 22:11:09.374"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.981" endtime="20201115 22:11:09.374"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.980" endtime="20201115 22:11:09.374"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:09.376" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:09.385" endtime="20201115 22:11:09.402"></status>
</kw>
<msg timestamp="20201115 22:11:09.402" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:09.383" endtime="20201115 22:11:09.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:09.404" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:09.403" endtime="20201115 22:11:09.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:09.405" endtime="20201115 22:11:09.407"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.381" endtime="20201115 22:11:09.408"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.379" endtime="20201115 22:11:09.408"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:09.414" endtime="20201115 22:11:09.701"></status>
</kw>
<msg timestamp="20201115 22:11:09.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021950167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021954903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:09.413" endtime="20201115 22:11:09.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:09.712" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021950167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021954903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:09.705" endtime="20201115 22:11:09.712"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:09.713" endtime="20201115 22:11:09.715"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.410" endtime="20201115 22:11:09.715"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.409" endtime="20201115 22:11:09.715"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:09.720" level="INFO">${RESULT} = [{'time': 0.021954903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.736000000001711e-06, 'source_diff': 4.736000000001711e-06}, {'time': 0.022091556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:09.716" endtime="20201115 22:11:09.720"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:09.733" level="INFO">${OVERHEAD} = {'source_diff': [4.736000000001711e-06, 4.6949999999990055e-06, 4.625000000001156e-06, 4.666999999999866e-06, 4.7639999999973814e-06, 4.680999999999436e-06, 4.721999999998672e-06, 4.6949999999990055e-...</msg>
<status status="PASS" starttime="20201115 22:11:09.720" endtime="20201115 22:11:09.733"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:09.737" level="INFO">NAME: 00-overhead-10-set</msg>
<status status="PASS" starttime="20201115 22:11:09.736" endtime="20201115 22:11:09.738"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:09.740" level="INFO">VALUE: [4.736000000001711e-06, 4.6949999999990055e-06, 4.625000000001156e-06, 4.666999999999866e-06, 4.7639999999973814e-06, 4.680999999999436e-06, 4.721999999998672e-06, 4.6949999999990055e-06, 4.679999999999962e-06, 4.7499999999978115e-06, 4.735999999998242e-06, 4.693999999999532e-06, 4.693999999999532e-06, 4.7639999999973814e-06, 4.625000000001156e-06, 4.762999999997908e-06, 4.693999999999532e-06, 4.653000000000296e-06, 4.625000000001156e-06, 4.679999999999962e-06, 4.680999999999436e-06, 4.610999999998117e-06, 4.693999999999532e-06, 4.679999999999962e-06, 4.666000000000392e-06, 4.666999999999866e-06, 4.666999999999866e-06, 4.750000000001281e-06, 4.679999999999962e-06, 4.679999999999962e-06, 4.707999999999102e-06, 4.653000000000296e-06, 4.680999999999436e-06, 4.679999999999962e-06, 4.7089999999985754e-06, 4.680999999999436e-06, 4.625000000001156e-06, 4.693999999999532e-06, 4.750000000001281e-06, 4.681000000002905e-06, 4.625000000001156e-06, 4.693999999999532e-06, 4.693999999999532e-06, 4.679999999999962e-06, 4.695000000002475e-06, 4.735999999998242e-06, 4.693999999999532e-06, 4.679999999999962e-06, 4.679999999999962e-06, 4.666000000000392e-06]</msg>
<status status="PASS" starttime="20201115 22:11:09.738" endtime="20201115 22:11:09.741"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.734" endtime="20201115 22:11:09.741"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:09.743" endtime="20201115 22:11:09.745"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:09.747" endtime="20201115 22:11:09.766"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.745" endtime="20201115 22:11:09.767"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.742" endtime="20201115 22:11:09.767"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.377" endtime="20201115 22:11:09.767"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.375" endtime="20201115 22:11:09.768"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.375" endtime="20201115 22:11:09.768"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:09.770" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:09.778" endtime="20201115 22:11:09.796"></status>
</kw>
<msg timestamp="20201115 22:11:09.796" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:09.777" endtime="20201115 22:11:09.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:09.798" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:09.797" endtime="20201115 22:11:09.799"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:09.800" endtime="20201115 22:11:09.801"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.774" endtime="20201115 22:11:09.802"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.772" endtime="20201115 22:11:09.802"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:09.808" endtime="20201115 22:11:10.096"></status>
</kw>
<msg timestamp="20201115 22:11:10.099" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021997028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022001903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:09.807" endtime="20201115 22:11:10.099"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:10.107" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021997028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022001903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:10.100" endtime="20201115 22:11:10.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:10.108" endtime="20201115 22:11:10.109"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.804" endtime="20201115 22:11:10.110"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.803" endtime="20201115 22:11:10.110"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:10.115" level="INFO">${RESULT} = [{'time': 0.022001903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.875000000001406e-06, 'source_diff': 4.875000000001406e-06}, {'time': 0.022146806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:10.111" endtime="20201115 22:11:10.115"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:10.128" level="INFO">${OVERHEAD} = {'source_diff': [4.875000000001406e-06, 4.931000000003155e-06, 4.917000000000116e-06, 4.916000000000642e-06, 4.917000000000116e-06, 4.889000000000976e-06, 4.888000000001502e-06, 4.917000000000116e-06,...</msg>
<status status="PASS" starttime="20201115 22:11:10.116" endtime="20201115 22:11:10.129"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:10.133" level="INFO">NAME: 00-overhead-11-set</msg>
<status status="PASS" starttime="20201115 22:11:10.132" endtime="20201115 22:11:10.133"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:10.135" level="INFO">VALUE: [4.875000000001406e-06, 4.931000000003155e-06, 4.917000000000116e-06, 4.916000000000642e-06, 4.917000000000116e-06, 4.889000000000976e-06, 4.888000000001502e-06, 4.917000000000116e-06, 4.916000000000642e-06, 4.916000000000642e-06, 4.930999999999686e-06, 4.917000000000116e-06, 4.902000000001072e-06, 4.889000000000976e-06, 4.945000000002725e-06, 4.917000000000116e-06, 4.8749999999979365e-06, 4.917000000000116e-06, 4.903000000000546e-06, 4.916000000000642e-06, 4.8749999999979365e-06, 4.902000000001072e-06, 4.903000000000546e-06, 4.889000000000976e-06, 4.916000000000642e-06, 4.930999999999686e-06, 4.917000000000116e-06, 4.971999999998922e-06, 4.903000000000546e-06, 4.915999999997173e-06, 4.875000000001406e-06, 4.916000000000642e-06, 4.917000000000116e-06, 4.903000000000546e-06, 4.916999999996646e-06, 4.903000000000546e-06, 4.930999999999686e-06, 4.917000000000116e-06, 4.889000000000976e-06, 4.916000000000642e-06, 4.889000000000976e-06, 4.903000000000546e-06, 4.916000000000642e-06, 4.860999999998367e-06, 4.916000000000642e-06, 4.901999999997603e-06, 4.917000000000116e-06, 4.8749999999979365e-06, 4.916000000000642e-06, 4.903000000000546e-06]</msg>
<status status="PASS" starttime="20201115 22:11:10.134" endtime="20201115 22:11:10.136"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.129" endtime="20201115 22:11:10.136"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:10.138" endtime="20201115 22:11:10.139"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:10.142" endtime="20201115 22:11:10.161"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.140" endtime="20201115 22:11:10.161"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.137" endtime="20201115 22:11:10.162"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.770" endtime="20201115 22:11:10.162"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.769" endtime="20201115 22:11:10.162"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.768" endtime="20201115 22:11:10.163"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:10.165" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:10.174" endtime="20201115 22:11:10.191"></status>
</kw>
<msg timestamp="20201115 22:11:10.191" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:10.172" endtime="20201115 22:11:10.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:10.194" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:10.192" endtime="20201115 22:11:10.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:10.195" endtime="20201115 22:11:10.196"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.169" endtime="20201115 22:11:10.197"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.167" endtime="20201115 22:11:10.197"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:10.204" endtime="20201115 22:11:10.489"></status>
</kw>
<msg timestamp="20201115 22:11:10.492" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022188736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022193875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:10.202" endtime="20201115 22:11:10.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:10.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022188736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022193875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:10.494" endtime="20201115 22:11:10.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:10.502" endtime="20201115 22:11:10.504"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.200" endtime="20201115 22:11:10.504"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.198" endtime="20201115 22:11:10.504"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:10.509" level="INFO">${RESULT} = [{'time': 0.022193875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.1389999999977565e-06, 'source_diff': 5.1389999999977565e-06}, {'time': 0.022351903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:10.505" endtime="20201115 22:11:10.509"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:10.522" level="INFO">${OVERHEAD} = {'source_diff': [5.1389999999977565e-06, 5.153000000000796e-06, 5.1389999999977565e-06, 5.153000000000796e-06, 5.125000000001656e-06, 5.153000000000796e-06, 5.1389999999977565e-06, 5.139000000001226e-...</msg>
<status status="PASS" starttime="20201115 22:11:10.510" endtime="20201115 22:11:10.522"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:10.527" level="INFO">NAME: 00-overhead-12-set</msg>
<status status="PASS" starttime="20201115 22:11:10.526" endtime="20201115 22:11:10.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:10.529" level="INFO">VALUE: [5.1389999999977565e-06, 5.153000000000796e-06, 5.1389999999977565e-06, 5.153000000000796e-06, 5.125000000001656e-06, 5.153000000000796e-06, 5.1389999999977565e-06, 5.139000000001226e-06, 5.1249999999981866e-06, 5.111000000002086e-06, 5.125000000001656e-06, 5.152999999997326e-06, 5.125000000001656e-06, 5.139000000001226e-06, 5.139000000001226e-06, 5.152000000001322e-06, 5.1389999999977565e-06, 5.139000000001226e-06, 5.139000000001226e-06, 5.153000000000796e-06, 5.137999999998283e-06, 5.1249999999981866e-06, 5.111000000002086e-06, 5.1389999999977565e-06, 5.125000000001656e-06, 5.139000000001226e-06, 5.153000000000796e-06, 5.1389999999977565e-06, 5.096999999999047e-06, 5.151999999997853e-06, 5.139000000001226e-06, 5.194000000000032e-06, 5.167000000000366e-06, 5.1249999999981866e-06, 5.139000000001226e-06, 5.139000000001226e-06, 5.223000000002115e-06, 5.153000000000796e-06, 5.1389999999977565e-06, 5.1389999999977565e-06, 5.139000000001226e-06, 5.167000000000366e-06, 5.153000000000796e-06, 5.110999999998617e-06, 5.152999999997326e-06, 5.139000000001226e-06, 5.1249999999981866e-06, 5.1949999999995056e-06, 5.153000000000796e-06, 5.139000000001226e-06]</msg>
<status status="PASS" starttime="20201115 22:11:10.528" endtime="20201115 22:11:10.529"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.523" endtime="20201115 22:11:10.530"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:10.532" endtime="20201115 22:11:10.533"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:10.535" endtime="20201115 22:11:10.555"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.534" endtime="20201115 22:11:10.555"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.530" endtime="20201115 22:11:10.556"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.165" endtime="20201115 22:11:10.556"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.164" endtime="20201115 22:11:10.556"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.163" endtime="20201115 22:11:10.556"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:10.559" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:10.567" endtime="20201115 22:11:10.586"></status>
</kw>
<msg timestamp="20201115 22:11:10.587" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:10.566" endtime="20201115 22:11:10.587"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:10.589" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:10.588" endtime="20201115 22:11:10.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:10.590" endtime="20201115 22:11:10.592"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.563" endtime="20201115 22:11:10.592"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.561" endtime="20201115 22:11:10.593"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:10.599" endtime="20201115 22:11:10.886"></status>
</kw>
<msg timestamp="20201115 22:11:10.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022199708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022205097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:10.597" endtime="20201115 22:11:10.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:10.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022199708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022205097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:10.890" endtime="20201115 22:11:10.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:10.898" endtime="20201115 22:11:10.900"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.595" endtime="20201115 22:11:10.900"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.593" endtime="20201115 22:11:10.901"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:10.905" level="INFO">${RESULT} = [{'time': 0.022205097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.389000000001476e-06, 'source_diff': 5.389000000001476e-06}, {'time': 0.022371972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:10.902" endtime="20201115 22:11:10.905"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:10.920" level="INFO">${OVERHEAD} = {'source_diff': [5.389000000001476e-06, 5.375000000001906e-06, 5.374999999998437e-06, 5.403000000001046e-06, 5.360999999998867e-06, 5.346999999999297e-06, 5.375000000001906e-06, 5.305000000000587e-06,...</msg>
<status status="PASS" starttime="20201115 22:11:10.906" endtime="20201115 22:11:10.920"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:10.924" level="INFO">NAME: 00-overhead-13-set</msg>
<status status="PASS" starttime="20201115 22:11:10.923" endtime="20201115 22:11:10.925"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:10.927" level="INFO">VALUE: [5.389000000001476e-06, 5.375000000001906e-06, 5.374999999998437e-06, 5.403000000001046e-06, 5.360999999998867e-06, 5.346999999999297e-06, 5.375000000001906e-06, 5.305000000000587e-06, 5.360999999998867e-06, 5.360999999998867e-06, 5.375000000001906e-06, 5.319999999999631e-06, 5.360999999998867e-06, 5.360999999998867e-06, 5.347000000002766e-06, 5.36199999999834e-06, 5.374999999998437e-06, 5.360999999998867e-06, 5.360999999998867e-06, 5.292000000000491e-06, 5.360999999998867e-06, 5.374999999998437e-06, 5.361000000002336e-06, 5.3889999999980065e-06, 5.34799999999877e-06, 5.374999999998437e-06, 5.375000000001906e-06, 5.304999999997118e-06, 5.375000000001906e-06, 5.34800000000224e-06, 5.3339999999992005e-06, 5.374999999998437e-06, 5.361000000002336e-06, 5.36200000000181e-06, 5.346999999999297e-06, 5.361000000002336e-06, 5.360999999998867e-06, 5.346999999999297e-06, 5.346999999999297e-06, 5.319000000000157e-06, 5.360999999998867e-06, 5.361000000002336e-06, 5.361000000002336e-06, 5.291999999997021e-06, 5.417000000000616e-06, 5.360999999998867e-06, 5.360999999998867e-06, 5.360999999998867e-06, 5.374999999998437e-06, 5.401999999998103e-06]</msg>
<status status="PASS" starttime="20201115 22:11:10.925" endtime="20201115 22:11:10.927"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.921" endtime="20201115 22:11:10.928"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:10.930" endtime="20201115 22:11:10.931"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:10.933" endtime="20201115 22:11:10.952"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.932" endtime="20201115 22:11:10.953"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.928" endtime="20201115 22:11:10.954"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.559" endtime="20201115 22:11:10.954"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.558" endtime="20201115 22:11:10.954"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.557" endtime="20201115 22:11:10.954"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:10.957" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:10.965" endtime="20201115 22:11:10.984"></status>
</kw>
<msg timestamp="20201115 22:11:10.984" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:10.964" endtime="20201115 22:11:10.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:10.987" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:10.985" endtime="20201115 22:11:10.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:10.988" endtime="20201115 22:11:10.990"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.961" endtime="20201115 22:11:10.990"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.959" endtime="20201115 22:11:10.991"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:10.997" endtime="20201115 22:11:11.284"></status>
</kw>
<msg timestamp="20201115 22:11:11.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0225175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022523083, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:11:10.996" endtime="20201115 22:11:11.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:11.295" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0225175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022523083, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:11:11.288" endtime="20201115 22:11:11.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:11.296" endtime="20201115 22:11:11.298"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.993" endtime="20201115 22:11:11.298"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.991" endtime="20201115 22:11:11.299"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:11.303" level="INFO">${RESULT} = [{'time': 0.022523083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.582999999999977e-06, 'source_diff': 5.582999999999977e-06}, {'time': 0.022700194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:11.300" endtime="20201115 22:11:11.303"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:11.316" level="INFO">${OVERHEAD} = {'source_diff': [5.582999999999977e-06, 5.541000000001267e-06, 5.582999999999977e-06, 5.596999999999547e-06, 5.597000000003016e-06, 5.610999999999117e-06, 5.59800000000249e-06, 5.554999999997368e-06, ...</msg>
<status status="PASS" starttime="20201115 22:11:11.304" endtime="20201115 22:11:11.317"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:11.321" level="INFO">NAME: 00-overhead-14-set</msg>
<status status="PASS" starttime="20201115 22:11:11.320" endtime="20201115 22:11:11.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:11.323" level="INFO">VALUE: [5.582999999999977e-06, 5.541000000001267e-06, 5.582999999999977e-06, 5.596999999999547e-06, 5.597000000003016e-06, 5.610999999999117e-06, 5.59800000000249e-06, 5.554999999997368e-06, 5.625000000002156e-06, 5.528000000001171e-06, 5.556000000000311e-06, 5.542000000000741e-06, 5.596999999999547e-06, 5.596999999999547e-06, 5.596999999999547e-06, 5.582999999999977e-06, 5.582999999999977e-06, 5.554999999997368e-06, 5.569000000000407e-06, 5.582999999999977e-06, 5.5839999999994505e-06, 5.528000000001171e-06, 5.582999999999977e-06, 5.5139999999981315e-06, 5.596999999999547e-06, 5.582999999999977e-06, 5.542000000000741e-06, 5.596999999999547e-06, 5.596999999999547e-06, 5.582999999999977e-06, 5.5839999999994505e-06, 5.582999999999977e-06, 5.582999999999977e-06, 5.596999999999547e-06, 5.554999999997368e-06, 5.596999999999547e-06, 5.596999999999547e-06, 5.5689999999969375e-06, 5.569999999999881e-06, 5.596999999999547e-06, 5.582999999999977e-06, 5.596999999999547e-06, 5.596999999999547e-06, 5.556000000000311e-06, 5.527999999997701e-06, 5.541999999997271e-06, 5.582999999999977e-06, 5.5839999999994505e-06, 5.596999999999547e-06, 5.58400000000292e-06]</msg>
<status status="PASS" starttime="20201115 22:11:11.322" endtime="20201115 22:11:11.324"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.317" endtime="20201115 22:11:11.324"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:11.326" endtime="20201115 22:11:11.327"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:11.330" endtime="20201115 22:11:11.349"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.328" endtime="20201115 22:11:11.350"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.325" endtime="20201115 22:11:11.350"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.957" endtime="20201115 22:11:11.350"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.955" endtime="20201115 22:11:11.351"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.955" endtime="20201115 22:11:11.351"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:11.353" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:11.362" endtime="20201115 22:11:11.382"></status>
</kw>
<msg timestamp="20201115 22:11:11.382" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:11.360" endtime="20201115 22:11:11.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:11.385" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:11.383" endtime="20201115 22:11:11.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:11.386" endtime="20201115 22:11:11.387"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.358" endtime="20201115 22:11:11.388"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.355" endtime="20201115 22:11:11.388"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:11.394" endtime="20201115 22:11:11.681"></status>
</kw>
<msg timestamp="20201115 22:11:11.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022527625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022533389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:11.393" endtime="20201115 22:11:11.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:11.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022527625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022533389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:11.685" endtime="20201115 22:11:11.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:11.693" endtime="20201115 22:11:11.695"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.390" endtime="20201115 22:11:11.695"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.389" endtime="20201115 22:11:11.695"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:11.700" level="INFO">${RESULT} = [{'time': 0.022533389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.764000000001851e-06, 'source_diff': 5.764000000001851e-06}, {'time': 0.022723264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:11.696" endtime="20201115 22:11:11.700"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:11.713" level="INFO">${OVERHEAD} = {'source_diff': [5.764000000001851e-06, 5.792000000000991e-06, 5.790999999998048e-06, 5.806000000000561e-06, 5.750000000002281e-06, 5.777000000001947e-06, 5.874999999998937e-06, 5.820000000000131e-06,...</msg>
<status status="PASS" starttime="20201115 22:11:11.700" endtime="20201115 22:11:11.713"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:11.718" level="INFO">NAME: 00-overhead-15-set</msg>
<status status="PASS" starttime="20201115 22:11:11.716" endtime="20201115 22:11:11.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:11.720" level="INFO">VALUE: [5.764000000001851e-06, 5.792000000000991e-06, 5.790999999998048e-06, 5.806000000000561e-06, 5.750000000002281e-06, 5.777000000001947e-06, 5.874999999998937e-06, 5.820000000000131e-06, 5.792000000000991e-06, 5.820000000000131e-06, 5.820000000000131e-06, 5.833000000000227e-06, 5.833000000000227e-06, 5.8189999999971875e-06, 5.806000000000561e-06, 5.778000000001421e-06, 5.7779999999979514e-06, 5.819000000000657e-06, 5.792000000000991e-06, 5.833000000000227e-06, 5.860999999999367e-06, 5.833000000000227e-06, 5.806000000000561e-06, 5.764000000001851e-06, 5.7639999999983815e-06, 5.819000000000657e-06, 5.819000000000657e-06, 5.806000000000561e-06, 5.819000000000657e-06, 5.833000000000227e-06, 5.749999999998812e-06, 5.819000000000657e-06, 5.860999999999367e-06, 5.820000000000131e-06, 5.861000000002836e-06, 5.833000000000227e-06, 5.846999999999797e-06, 5.804999999997618e-06, 5.805999999997091e-06, 5.7639999999983815e-06, 5.791999999997521e-06, 5.819000000000657e-06, 5.792000000000991e-06, 5.874999999998937e-06, 5.805000000001087e-06, 5.790999999998048e-06, 5.805999999997091e-06, 5.847999999995801e-06, 5.861000000002836e-06, 5.791999999997521e-06]</msg>
<status status="PASS" starttime="20201115 22:11:11.719" endtime="20201115 22:11:11.720"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.714" endtime="20201115 22:11:11.721"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:11.723" endtime="20201115 22:11:11.724"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:11.726" endtime="20201115 22:11:11.746"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.725" endtime="20201115 22:11:11.747"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.721" endtime="20201115 22:11:11.747"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.353" endtime="20201115 22:11:11.747"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.352" endtime="20201115 22:11:11.748"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.351" endtime="20201115 22:11:11.748"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:11.750" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:11.759" endtime="20201115 22:11:11.778"></status>
</kw>
<msg timestamp="20201115 22:11:11.779" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:11.757" endtime="20201115 22:11:11.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:11.781" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:11.780" endtime="20201115 22:11:11.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:11.782" endtime="20201115 22:11:11.784"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.755" endtime="20201115 22:11:11.784"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.753" endtime="20201115 22:11:11.785"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:11.791" endtime="20201115 22:11:12.077"></status>
</kw>
<msg timestamp="20201115 22:11:12.080" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022273917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022279944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:11.789" endtime="20201115 22:11:12.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:12.088" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022273917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022279944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:12.081" endtime="20201115 22:11:12.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:12.089" endtime="20201115 22:11:12.091"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.787" endtime="20201115 22:11:12.091"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.785" endtime="20201115 22:11:12.092"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:12.096" level="INFO">${RESULT} = [{'time': 0.022279944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.026999999998728e-06, 'source_diff': 6.026999999998728e-06}, {'time': 0.022481, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 22:11:12.092" endtime="20201115 22:11:12.096"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:12.109" level="INFO">${OVERHEAD} = {'source_diff': [6.026999999998728e-06, 6.028000000001671e-06, 5.986000000002961e-06, 6.041999999997771e-06, 6.041999999997771e-06, 6.014000000002101e-06, 6.042000000001241e-06, 6.042000000001241e-06,...</msg>
<status status="PASS" starttime="20201115 22:11:12.097" endtime="20201115 22:11:12.109"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:12.114" level="INFO">NAME: 00-overhead-16-set</msg>
<status status="PASS" starttime="20201115 22:11:12.113" endtime="20201115 22:11:12.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:12.116" level="INFO">VALUE: [6.026999999998728e-06, 6.028000000001671e-06, 5.986000000002961e-06, 6.041999999997771e-06, 6.041999999997771e-06, 6.014000000002101e-06, 6.042000000001241e-06, 6.042000000001241e-06, 6.026999999998728e-06, 6.041999999997771e-06, 6.0279999999982015e-06, 6.0279999999982015e-06, 6.0279999999982015e-06, 6.027000000002197e-06, 6.0839999999999506e-06, 6.042000000001241e-06, 6.040999999998298e-06, 6.026999999998728e-06, 6.013000000002627e-06, 6.028000000001671e-06, 6.054999999997868e-06, 6.042000000001241e-06, 6.056000000000811e-06, 6.014000000002101e-06, 6.040999999998298e-06, 5.999999999999062e-06, 6.0279999999982015e-06, 6.026999999998728e-06, 6.0139999999986316e-06, 6.042000000001241e-06, 6.042000000001241e-06, 6.0279999999982015e-06, 5.999999999999062e-06, 6.054999999997868e-06, 5.985999999999492e-06, 6.041999999997771e-06, 6.041999999997771e-06, 6.056000000000811e-06, 6.042000000001241e-06, 6.056000000000811e-06, 6.041000000001767e-06, 5.958000000000352e-06, 6.042000000001241e-06, 6.040999999998298e-06, 6.0139999999986316e-06, 6.0279999999982015e-06, 6.026999999998728e-06, 6.040999999998298e-06, 6.04200000000471e-06, 6.0279999999982015e-06]</msg>
<status status="PASS" starttime="20201115 22:11:12.115" endtime="20201115 22:11:12.117"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.110" endtime="20201115 22:11:12.117"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:12.120" endtime="20201115 22:11:12.121"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:12.123" endtime="20201115 22:11:12.142"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.121" endtime="20201115 22:11:12.143"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.118" endtime="20201115 22:11:12.143"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.751" endtime="20201115 22:11:12.144"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.749" endtime="20201115 22:11:12.144"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.748" endtime="20201115 22:11:12.144"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:12.146" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:12.155" endtime="20201115 22:11:12.176"></status>
</kw>
<msg timestamp="20201115 22:11:12.176" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:12.153" endtime="20201115 22:11:12.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:12.179" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:12.178" endtime="20201115 22:11:12.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:12.180" endtime="20201115 22:11:12.182"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.151" endtime="20201115 22:11:12.182"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.149" endtime="20201115 22:11:12.183"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:12.189" endtime="20201115 22:11:12.475"></status>
</kw>
<msg timestamp="20201115 22:11:12.478" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022097833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022104097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:12.187" endtime="20201115 22:11:12.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:12.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022097833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022104097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:12.480" endtime="20201115 22:11:12.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:12.487" endtime="20201115 22:11:12.489"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.185" endtime="20201115 22:11:12.490"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.183" endtime="20201115 22:11:12.490"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:12.494" level="INFO">${RESULT} = [{'time': 0.022104097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.2639999999988816e-06, 'source_diff': 6.2639999999988816e-06}, {'time': 0.022319236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:12.491" endtime="20201115 22:11:12.494"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:12.509" level="INFO">${OVERHEAD} = {'source_diff': [6.2639999999988816e-06, 6.222000000000172e-06, 6.276999999998978e-06, 6.276999999998978e-06, 6.278000000001921e-06, 6.278000000001921e-06, 6.2639999999988816e-06, 6.264000000002351e-0...</msg>
<status status="PASS" starttime="20201115 22:11:12.495" endtime="20201115 22:11:12.509"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:12.514" level="INFO">NAME: 00-overhead-17-set</msg>
<status status="PASS" starttime="20201115 22:11:12.513" endtime="20201115 22:11:12.514"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:12.516" level="INFO">VALUE: [6.2639999999988816e-06, 6.222000000000172e-06, 6.276999999998978e-06, 6.276999999998978e-06, 6.278000000001921e-06, 6.278000000001921e-06, 6.2639999999988816e-06, 6.264000000002351e-06, 6.2639999999988816e-06, 6.2639999999988816e-06, 6.264000000002351e-06, 6.264000000002351e-06, 6.306000000001061e-06, 6.319000000001157e-06, 6.291999999998021e-06, 6.250000000002781e-06, 6.235999999999742e-06, 6.2639999999988816e-06, 6.306000000001061e-06, 6.235999999999742e-06, 6.292000000001491e-06, 6.235999999999742e-06, 6.264000000002351e-06, 6.2779999999984515e-06, 6.2639999999988816e-06, 6.264000000002351e-06, 6.249999999999312e-06, 6.2639999999988816e-06, 6.264000000002351e-06, 6.2639999999988816e-06, 6.264000000002351e-06, 6.333000000000727e-06, 6.2779999999984515e-06, 6.264000000002351e-06, 6.2779999999984515e-06, 6.2639999999988816e-06, 6.249999999999312e-06, 6.2639999999988816e-06, 6.2639999999988816e-06, 6.262999999999408e-06, 6.195000000000506e-06, 6.250000000002781e-06, 6.2639999999988816e-06, 6.2090000000000756e-06, 6.2639999999988816e-06, 6.249999999999312e-06, 6.208000000000602e-06, 6.291999999998021e-06, 6.27800000000539e-06, 6.2779999999984515e-06]</msg>
<status status="PASS" starttime="20201115 22:11:12.515" endtime="20201115 22:11:12.517"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.510" endtime="20201115 22:11:12.517"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:12.520" endtime="20201115 22:11:12.521"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:12.523" endtime="20201115 22:11:12.542"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.522" endtime="20201115 22:11:12.543"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.518" endtime="20201115 22:11:12.543"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.147" endtime="20201115 22:11:12.544"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.145" endtime="20201115 22:11:12.544"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.144" endtime="20201115 22:11:12.544"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:12.546" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:12.555" endtime="20201115 22:11:12.576"></status>
</kw>
<msg timestamp="20201115 22:11:12.577" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:12.553" endtime="20201115 22:11:12.577"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:12.579" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:12.578" endtime="20201115 22:11:12.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:12.580" endtime="20201115 22:11:12.582"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.551" endtime="20201115 22:11:12.582"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.549" endtime="20201115 22:11:12.583"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:12.589" endtime="20201115 22:11:12.875"></status>
</kw>
<msg timestamp="20201115 22:11:12.878" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022040347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022046819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:12.587" endtime="20201115 22:11:12.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:12.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022040347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022046819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:12.880" endtime="20201115 22:11:12.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:12.888" endtime="20201115 22:11:12.890"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.585" endtime="20201115 22:11:12.890"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.583" endtime="20201115 22:11:12.891"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:12.895" level="INFO">${RESULT} = [{'time': 0.022046819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.472000000000422e-06, 'source_diff': 6.472000000000422e-06}, {'time': 0.022272597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:12.891" endtime="20201115 22:11:12.895"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:12.909" level="INFO">${OVERHEAD} = {'source_diff': [6.472000000000422e-06, 6.472000000000422e-06, 6.485999999999992e-06, 6.485999999999992e-06, 6.4029999999985765e-06, 6.473000000003365e-06, 6.485999999999992e-06, 6.485999999999992e-06...</msg>
<status status="PASS" starttime="20201115 22:11:12.896" endtime="20201115 22:11:12.909"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:12.913" level="INFO">NAME: 00-overhead-18-set</msg>
<status status="PASS" starttime="20201115 22:11:12.912" endtime="20201115 22:11:12.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:12.916" level="INFO">VALUE: [6.472000000000422e-06, 6.472000000000422e-06, 6.485999999999992e-06, 6.485999999999992e-06, 6.4029999999985765e-06, 6.473000000003365e-06, 6.485999999999992e-06, 6.485999999999992e-06, 6.500000000003031e-06, 6.485999999999992e-06, 6.4729999999998955e-06, 6.512999999999658e-06, 6.459000000000326e-06, 6.444000000001282e-06, 6.444000000001282e-06, 6.472000000000422e-06, 6.541999999998271e-06, 6.485999999999992e-06, 6.485999999999992e-06, 6.513999999999132e-06, 6.485999999999992e-06, 6.485999999999992e-06, 6.499999999999562e-06, 6.472000000000422e-06, 6.499999999999562e-06, 6.485999999999992e-06, 6.486999999999465e-06, 6.486999999999465e-06, 6.485999999999992e-06, 6.472000000000422e-06, 6.499999999999562e-06, 6.513999999999132e-06, 6.485999999999992e-06, 6.485999999999992e-06, 6.472000000000422e-06, 6.486999999999465e-06, 6.485999999999992e-06, 6.485999999999992e-06, 6.485999999999992e-06, 6.485999999999992e-06, 6.485999999999992e-06, 6.485999999999992e-06, 6.459000000000326e-06, 6.485999999999992e-06, 6.485999999999992e-06, 6.485999999999992e-06, 6.499999999999562e-06, 6.472000000000422e-06, 6.4729999999998955e-06, 6.485999999999992e-06]</msg>
<status status="PASS" starttime="20201115 22:11:12.914" endtime="20201115 22:11:12.916"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.910" endtime="20201115 22:11:12.916"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:12.919" endtime="20201115 22:11:12.920"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:12.922" endtime="20201115 22:11:12.941"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.921" endtime="20201115 22:11:12.942"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.917" endtime="20201115 22:11:12.943"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.547" endtime="20201115 22:11:12.943"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.545" endtime="20201115 22:11:12.943"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.544" endtime="20201115 22:11:12.943"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:12.945" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:12.954" endtime="20201115 22:11:12.976"></status>
</kw>
<msg timestamp="20201115 22:11:12.977" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:12.953" endtime="20201115 22:11:12.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:12.979" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:12.978" endtime="20201115 22:11:12.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:12.980" endtime="20201115 22:11:12.982"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.950" endtime="20201115 22:11:12.983"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.948" endtime="20201115 22:11:12.983"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:12.989" endtime="20201115 22:11:13.276"></status>
</kw>
<msg timestamp="20201115 22:11:13.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022231625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022238333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:12.988" endtime="20201115 22:11:13.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:13.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022231625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022238333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:13.280" endtime="20201115 22:11:13.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:13.288" endtime="20201115 22:11:13.290"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.985" endtime="20201115 22:11:13.290"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.984" endtime="20201115 22:11:13.291"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:13.295" level="INFO">${RESULT} = [{'time': 0.022238333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.7079999999976325e-06, 'source_diff': 6.7079999999976325e-06}, {'time': 0.022474014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:13.291" endtime="20201115 22:11:13.295"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:13.308" level="INFO">${OVERHEAD} = {'source_diff': [6.7079999999976325e-06, 6.695000000001006e-06, 6.708000000001102e-06, 6.7219999999972024e-06, 6.709000000000576e-06, 6.722000000000672e-06, 6.7079999999976325e-06, 6.7219999999972024e...</msg>
<status status="PASS" starttime="20201115 22:11:13.295" endtime="20201115 22:11:13.308"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:13.312" level="INFO">NAME: 00-overhead-19-set</msg>
<status status="PASS" starttime="20201115 22:11:13.311" endtime="20201115 22:11:13.313"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:13.315" level="INFO">VALUE: [6.7079999999976325e-06, 6.695000000001006e-06, 6.708000000001102e-06, 6.7219999999972024e-06, 6.709000000000576e-06, 6.722000000000672e-06, 6.7079999999976325e-06, 6.7219999999972024e-06, 6.6669999999983964e-06, 6.708000000001102e-06, 6.695000000001006e-06, 6.681000000001436e-06, 6.736000000000242e-06, 6.736000000000242e-06, 6.708000000001102e-06, 6.709000000000576e-06, 6.708999999997106e-06, 6.722000000000672e-06, 6.708000000001102e-06, 6.722000000000672e-06, 6.722000000000672e-06, 6.708000000001102e-06, 6.7079999999976325e-06, 6.722000000000672e-06, 6.722000000000672e-06, 6.708000000001102e-06, 6.709000000000576e-06, 6.708000000001102e-06, 6.7230000000001455e-06, 6.762999999999908e-06, 6.7079999999976325e-06, 6.708000000001102e-06, 6.694000000001532e-06, 6.708000000001102e-06, 6.708000000001102e-06, 6.708000000001102e-06, 6.736000000000242e-06, 6.763999999999382e-06, 6.695000000001006e-06, 6.708000000001102e-06, 6.708000000001102e-06, 6.722000000000672e-06, 6.667000000001866e-06, 6.708000000001102e-06, 6.721999999993733e-06, 6.736000000000242e-06, 6.749999999999812e-06, 6.709000000000576e-06, 6.695000000001006e-06, 6.708000000001102e-06]</msg>
<status status="PASS" starttime="20201115 22:11:13.313" endtime="20201115 22:11:13.315"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.309" endtime="20201115 22:11:13.316"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:13.318" endtime="20201115 22:11:13.319"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:13.321" endtime="20201115 22:11:13.341"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.320" endtime="20201115 22:11:13.341"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.316" endtime="20201115 22:11:13.342"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.946" endtime="20201115 22:11:13.342"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.944" endtime="20201115 22:11:13.342"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.944" endtime="20201115 22:11:13.342"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:13.345" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:13.353" endtime="20201115 22:11:13.375"></status>
</kw>
<msg timestamp="20201115 22:11:13.376" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:13.352" endtime="20201115 22:11:13.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:13.378" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:13.377" endtime="20201115 22:11:13.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:13.379" endtime="20201115 22:11:13.381"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.349" endtime="20201115 22:11:13.382"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.347" endtime="20201115 22:11:13.382"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:13.389" endtime="20201115 22:11:13.675"></status>
</kw>
<msg timestamp="20201115 22:11:13.678" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022145681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022152653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:13.387" endtime="20201115 22:11:13.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:13.686" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022145681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022152653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:13.679" endtime="20201115 22:11:13.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:13.687" endtime="20201115 22:11:13.689"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.384" endtime="20201115 22:11:13.689"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.383" endtime="20201115 22:11:13.690"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:13.694" level="INFO">${RESULT} = [{'time': 0.022152653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.972000000000922e-06, 'source_diff': 6.972000000000922e-06}, {'time': 0.022403431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:13.690" endtime="20201115 22:11:13.694"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:13.707" level="INFO">${OVERHEAD} = {'source_diff': [6.972000000000922e-06, 6.874999999999937e-06, 6.944000000001782e-06, 6.930999999998216e-06, 6.929999999998743e-06, 6.917000000002116e-06, 6.943999999998313e-06, 6.929999999998743e-06,...</msg>
<status status="PASS" starttime="20201115 22:11:13.695" endtime="20201115 22:11:13.707"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:13.711" level="INFO">NAME: 00-overhead-20-set</msg>
<status status="PASS" starttime="20201115 22:11:13.710" endtime="20201115 22:11:13.712"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:13.714" level="INFO">VALUE: [6.972000000000922e-06, 6.874999999999937e-06, 6.944000000001782e-06, 6.930999999998216e-06, 6.929999999998743e-06, 6.917000000002116e-06, 6.943999999998313e-06, 6.929999999998743e-06, 7.000000000000062e-06, 6.9719999999974525e-06, 7.000000000000062e-06, 6.917000000002116e-06, 6.917000000002116e-06, 6.945000000001256e-06, 6.9029999999990765e-06, 6.931000000001686e-06, 6.945000000001256e-06, 6.929999999998743e-06, 6.931000000001686e-06, 6.9579999999978825e-06, 6.945000000001256e-06, 6.958999999997356e-06, 6.943999999998313e-06, 6.972000000000922e-06, 6.943999999998313e-06, 6.958000000001352e-06, 6.944999999997786e-06, 6.931000000001686e-06, 6.930000000002212e-06, 6.930999999998216e-06, 6.986000000000492e-06, 6.931000000001686e-06, 6.929999999998743e-06, 6.958000000001352e-06, 6.930000000002212e-06, 6.888999999999507e-06, 6.9169999999986465e-06, 6.930000000002212e-06, 6.944000000001782e-06, 6.929999999995273e-06, 6.944000000001782e-06, 6.875000000003406e-06, 6.929999999995273e-06, 6.945000000001256e-06, 6.943999999994843e-06, 6.916000000002642e-06, 6.944000000001782e-06, 6.944999999994317e-06, 6.943999999994843e-06, 6.930000000002212e-06]</msg>
<status status="PASS" starttime="20201115 22:11:13.712" endtime="20201115 22:11:13.714"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.708" endtime="20201115 22:11:13.715"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:13.717" endtime="20201115 22:11:13.718"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:13.720" endtime="20201115 22:11:13.740"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.719" endtime="20201115 22:11:13.740"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.715" endtime="20201115 22:11:13.741"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.345" endtime="20201115 22:11:13.741"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.343" endtime="20201115 22:11:13.741"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.343" endtime="20201115 22:11:13.741"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:13.744" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:13.752" endtime="20201115 22:11:13.776"></status>
</kw>
<msg timestamp="20201115 22:11:13.776" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:13.751" endtime="20201115 22:11:13.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:13.779" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:13.777" endtime="20201115 22:11:13.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:13.780" endtime="20201115 22:11:13.782"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.748" endtime="20201115 22:11:13.782"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.746" endtime="20201115 22:11:13.783"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:13.789" endtime="20201115 22:11:14.077"></status>
</kw>
<msg timestamp="20201115 22:11:14.080" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022157389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022164569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:13.788" endtime="20201115 22:11:14.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:14.088" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022157389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022164569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:14.081" endtime="20201115 22:11:14.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:14.089" endtime="20201115 22:11:14.091"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.785" endtime="20201115 22:11:14.091"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.783" endtime="20201115 22:11:14.091"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:14.095" level="INFO">${RESULT} = [{'time': 0.022164569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.179999999998993e-06, 'source_diff': 7.179999999998993e-06}, {'time': 0.022428819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:14.092" endtime="20201115 22:11:14.096"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:14.110" level="INFO">${OVERHEAD} = {'source_diff': [7.179999999998993e-06, 7.151999999999853e-06, 7.167000000002366e-06, 7.138999999999757e-06, 7.2219999999977025e-06, 7.1669999999988965e-06, 7.1529999999993266e-06, 7.1529999999993266e...</msg>
<status status="PASS" starttime="20201115 22:11:14.096" endtime="20201115 22:11:14.111"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:14.115" level="INFO">NAME: 00-overhead-21-set</msg>
<status status="PASS" starttime="20201115 22:11:14.114" endtime="20201115 22:11:14.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:14.117" level="INFO">VALUE: [7.179999999998993e-06, 7.151999999999853e-06, 7.167000000002366e-06, 7.138999999999757e-06, 7.2219999999977025e-06, 7.1669999999988965e-06, 7.1529999999993266e-06, 7.1529999999993266e-06, 7.151999999999853e-06, 7.165999999999423e-06, 7.1669999999988965e-06, 7.180999999998466e-06, 7.1669999999988965e-06, 7.193999999998563e-06, 7.138999999999757e-06, 7.139000000003226e-06, 7.167000000002366e-06, 7.222000000001172e-06, 7.138000000000283e-06, 7.195000000001506e-06, 7.138999999999757e-06, 7.1529999999993266e-06, 7.1669999999988965e-06, 7.111000000000617e-06, 7.195000000001506e-06, 7.138999999999757e-06, 7.167000000002366e-06, 7.138999999999757e-06, 7.165999999999423e-06, 7.165999999999423e-06, 7.195000000001506e-06, 7.138999999999757e-06, 7.222000000001172e-06, 7.165999999999423e-06, 7.179999999998993e-06, 7.153000000002796e-06, 7.139000000003226e-06, 7.138999999996287e-06, 7.180999999994997e-06, 7.167000000002366e-06, 7.152999999995857e-06, 7.069999999997911e-06, 7.153000000002796e-06, 7.139000000003226e-06, 7.153000000002796e-06, 7.152999999995857e-06, 7.166000000002892e-06, 7.139000000003226e-06, 7.180000000002462e-06, 7.152999999995857e-06]</msg>
<status status="PASS" starttime="20201115 22:11:14.116" endtime="20201115 22:11:14.117"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.111" endtime="20201115 22:11:14.118"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:14.120" endtime="20201115 22:11:14.122"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:14.124" endtime="20201115 22:11:14.143"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.122" endtime="20201115 22:11:14.144"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.119" endtime="20201115 22:11:14.144"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.744" endtime="20201115 22:11:14.144"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.743" endtime="20201115 22:11:14.145"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.742" endtime="20201115 22:11:14.145"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:14.147" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:14.156" endtime="20201115 22:11:14.180"></status>
</kw>
<msg timestamp="20201115 22:11:14.180" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:14.154" endtime="20201115 22:11:14.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:14.183" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:14.181" endtime="20201115 22:11:14.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:14.184" endtime="20201115 22:11:14.185"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.152" endtime="20201115 22:11:14.186"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.149" endtime="20201115 22:11:14.186"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:14.193" endtime="20201115 22:11:14.480"></status>
</kw>
<msg timestamp="20201115 22:11:14.483" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022531139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022538528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:14.191" endtime="20201115 22:11:14.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:14.491" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022531139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022538528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:14.484" endtime="20201115 22:11:14.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:14.492" endtime="20201115 22:11:14.493"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.189" endtime="20201115 22:11:14.494"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.187" endtime="20201115 22:11:14.494"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:14.498" level="INFO">${RESULT} = [{'time': 0.022538528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.389000000000007e-06, 'source_diff': 7.389000000000007e-06}, {'time': 0.022811861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:14.495" endtime="20201115 22:11:14.499"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:14.512" level="INFO">${OVERHEAD} = {'source_diff': [7.389000000000007e-06, 7.389000000000007e-06, 7.402000000000103e-06, 7.375000000000437e-06, 7.361000000000867e-06, 7.334000000001201e-06, 7.402999999999577e-06, 7.445000000001756e-06,...</msg>
<status status="PASS" starttime="20201115 22:11:14.499" endtime="20201115 22:11:14.512"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:14.516" level="INFO">NAME: 00-overhead-22-set</msg>
<status status="PASS" starttime="20201115 22:11:14.515" endtime="20201115 22:11:14.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:14.519" level="INFO">VALUE: [7.389000000000007e-06, 7.389000000000007e-06, 7.402000000000103e-06, 7.375000000000437e-06, 7.361000000000867e-06, 7.334000000001201e-06, 7.402999999999577e-06, 7.445000000001756e-06, 7.389000000000007e-06, 7.403000000003046e-06, 7.443999999998813e-06, 7.318999999998688e-06, 7.333999999997731e-06, 7.443999999998813e-06, 7.389000000000007e-06, 7.375000000000437e-06, 7.361000000000867e-06, 7.402999999999577e-06, 7.389000000000007e-06, 7.402999999999577e-06, 7.375000000000437e-06, 7.389000000000007e-06, 7.374999999996967e-06, 7.361000000000867e-06, 7.402999999999577e-06, 7.389000000000007e-06, 7.360999999997397e-06, 7.388000000000533e-06, 7.444999999998286e-06, 7.402999999999577e-06, 7.333000000001727e-06, 7.444000000002282e-06, 7.4019999999966335e-06, 7.388999999996537e-06, 7.403000000003046e-06, 7.361999999996871e-06, 7.375000000003906e-06, 7.417000000002616e-06, 7.389000000003476e-06, 7.389000000003476e-06, 7.459000000001326e-06, 7.375000000003906e-06, 7.388999999996537e-06, 7.388999999996537e-06, 7.374999999996967e-06, 7.389000000003476e-06, 7.389000000003476e-06, 7.402000000003572e-06, 7.388999999996537e-06, 7.374999999996967e-06]</msg>
<status status="PASS" starttime="20201115 22:11:14.517" endtime="20201115 22:11:14.519"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.513" endtime="20201115 22:11:14.520"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:14.522" endtime="20201115 22:11:14.523"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:14.525" endtime="20201115 22:11:14.545"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.524" endtime="20201115 22:11:14.546"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.520" endtime="20201115 22:11:14.546"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.147" endtime="20201115 22:11:14.546"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.146" endtime="20201115 22:11:14.547"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.145" endtime="20201115 22:11:14.547"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:14.549" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:14.558" endtime="20201115 22:11:14.581"></status>
</kw>
<msg timestamp="20201115 22:11:14.582" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:14.556" endtime="20201115 22:11:14.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:14.584" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:14.583" endtime="20201115 22:11:14.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:14.585" endtime="20201115 22:11:14.587"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.554" endtime="20201115 22:11:14.587"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.552" endtime="20201115 22:11:14.588"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:14.594" endtime="20201115 22:11:14.880"></status>
</kw>
<msg timestamp="20201115 22:11:14.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022135222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022142819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:14.593" endtime="20201115 22:11:14.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:14.891" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022135222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022142819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:14.884" endtime="20201115 22:11:14.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:14.892" endtime="20201115 22:11:14.894"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.590" endtime="20201115 22:11:14.895"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.588" endtime="20201115 22:11:14.895"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:14.899" level="INFO">${RESULT} = [{'time': 0.022142819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.597000000001547e-06, 'source_diff': 7.597000000001547e-06}, {'time': 0.022430486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:14.896" endtime="20201115 22:11:14.899"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:14.913" level="INFO">${OVERHEAD} = {'source_diff': [7.597000000001547e-06, 7.611000000001117e-06, 7.6120000000005905e-06, 7.639000000000257e-06, 7.652999999999827e-06, 7.597000000001547e-06, 7.6109999999976474e-06, 7.611000000001117e-0...</msg>
<status status="PASS" starttime="20201115 22:11:14.900" endtime="20201115 22:11:14.913"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:14.918" level="INFO">NAME: 00-overhead-23-set</msg>
<status status="PASS" starttime="20201115 22:11:14.916" endtime="20201115 22:11:14.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:14.920" level="INFO">VALUE: [7.597000000001547e-06, 7.611000000001117e-06, 7.6120000000005905e-06, 7.639000000000257e-06, 7.652999999999827e-06, 7.597000000001547e-06, 7.6109999999976474e-06, 7.611000000001117e-06, 7.611000000001117e-06, 7.5969999999980775e-06, 7.625000000000687e-06, 7.6109999999976474e-06, 7.694999999998536e-06, 7.611000000001117e-06, 7.5969999999980775e-06, 7.638000000000783e-06, 7.6120000000005905e-06, 7.597000000001547e-06, 7.6109999999976474e-06, 7.693999999999063e-06, 7.625000000000687e-06, 7.583999999997981e-06, 7.625000000000687e-06, 7.625000000000687e-06, 7.5969999999980775e-06, 7.6109999999976474e-06, 7.6109999999976474e-06, 7.625000000000687e-06, 7.6109999999976474e-06, 7.6109999999976474e-06, 7.5969999999980775e-06, 7.582999999998508e-06, 7.611999999997121e-06, 7.6109999999976474e-06, 7.624999999997217e-06, 7.624999999997217e-06, 7.6109999999976474e-06, 7.624999999997217e-06, 7.6109999999976474e-06, 7.6109999999976474e-06, 7.6109999999976474e-06, 7.611000000004586e-06, 7.582999999998508e-06, 7.582999999998508e-06, 7.611000000004586e-06, 7.624999999997217e-06, 7.6109999999976474e-06, 7.5830000000054465e-06, 7.5969999999980775e-06, 7.597000000005016e-06]</msg>
<status status="PASS" starttime="20201115 22:11:14.919" endtime="20201115 22:11:14.921"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.914" endtime="20201115 22:11:14.922"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:14.924" endtime="20201115 22:11:14.925"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:14.927" endtime="20201115 22:11:14.947"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.926" endtime="20201115 22:11:14.948"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.922" endtime="20201115 22:11:14.948"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.550" endtime="20201115 22:11:14.948"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.548" endtime="20201115 22:11:14.949"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.547" endtime="20201115 22:11:14.949"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:14.951" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:14.960" endtime="20201115 22:11:14.984"></status>
</kw>
<msg timestamp="20201115 22:11:14.985" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:14.958" endtime="20201115 22:11:14.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:14.987" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:14.986" endtime="20201115 22:11:14.987"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:14.988" endtime="20201115 22:11:14.990"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.955" endtime="20201115 22:11:14.990"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.953" endtime="20201115 22:11:14.991"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:14.997" endtime="20201115 22:11:15.285"></status>
</kw>
<msg timestamp="20201115 22:11:15.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022435861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022443694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:14.995" endtime="20201115 22:11:15.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:15.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022435861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022443694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:15.289" endtime="20201115 22:11:15.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:15.297" endtime="20201115 22:11:15.299"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.993" endtime="20201115 22:11:15.299"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.991" endtime="20201115 22:11:15.300"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:15.304" level="INFO">${RESULT} = [{'time': 0.022443694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.832999999998758e-06, 'source_diff': 7.832999999998758e-06}, {'time': 0.022746514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:15.300" endtime="20201115 22:11:15.304"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:15.317" level="INFO">${OVERHEAD} = {'source_diff': [7.832999999998758e-06, 7.832999999998758e-06, 7.846999999998328e-06, 7.804999999999618e-06, 7.846999999998328e-06, 7.84800000000127e-06, 7.832999999998758e-06, 7.832999999998758e-06, ...</msg>
<status status="PASS" starttime="20201115 22:11:15.305" endtime="20201115 22:11:15.317"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:15.322" level="INFO">NAME: 00-overhead-24-set</msg>
<status status="PASS" starttime="20201115 22:11:15.320" endtime="20201115 22:11:15.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:15.325" level="INFO">VALUE: [7.832999999998758e-06, 7.832999999998758e-06, 7.846999999998328e-06, 7.804999999999618e-06, 7.846999999998328e-06, 7.84800000000127e-06, 7.832999999998758e-06, 7.832999999998758e-06, 7.791999999999522e-06, 7.764000000000382e-06, 7.84800000000127e-06, 7.84800000000127e-06, 7.846999999998328e-06, 7.846999999998328e-06, 7.832999999998758e-06, 7.861000000001367e-06, 7.832999999998758e-06, 7.846999999998328e-06, 7.832999999998758e-06, 7.833999999998231e-06, 7.860999999997897e-06, 7.818999999999188e-06, 7.819999999998661e-06, 7.860999999997897e-06, 7.8340000000017e-06, 7.791000000000048e-06, 7.861000000001367e-06, 7.832999999998758e-06, 7.832999999998758e-06, 7.875000000000937e-06, 7.83400000000517e-06, 7.846999999998328e-06, 7.888999999997037e-06, 7.832999999998758e-06, 7.818999999999188e-06, 7.776999999993539e-06, 7.83400000000517e-06, 7.818999999999188e-06, 7.8200000000056e-06, 7.875000000004406e-06, 7.832999999998758e-06, 7.833000000005697e-06, 7.833999999998231e-06, 7.846999999998328e-06, 7.833000000005697e-06, 7.846999999998328e-06, 7.791000000000048e-06, 7.846999999998328e-06, 7.819999999998661e-06, 7.84800000000474e-06]</msg>
<status status="PASS" starttime="20201115 22:11:15.323" endtime="20201115 22:11:15.325"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.318" endtime="20201115 22:11:15.325"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:15.328" endtime="20201115 22:11:15.329"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:15.331" endtime="20201115 22:11:15.350"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.330" endtime="20201115 22:11:15.351"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.326" endtime="20201115 22:11:15.351"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.951" endtime="20201115 22:11:15.352"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.950" endtime="20201115 22:11:15.352"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.949" endtime="20201115 22:11:15.352"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:15.354" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:15.363" endtime="20201115 22:11:15.388"></status>
</kw>
<msg timestamp="20201115 22:11:15.389" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:15.361" endtime="20201115 22:11:15.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:15.391" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:15.390" endtime="20201115 22:11:15.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:15.392" endtime="20201115 22:11:15.394"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.359" endtime="20201115 22:11:15.394"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.357" endtime="20201115 22:11:15.395"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:15.401" endtime="20201115 22:11:15.688"></status>
</kw>
<msg timestamp="20201115 22:11:15.691" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022142958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022151014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:15.400" endtime="20201115 22:11:15.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:15.699" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022142958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022151014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:15.692" endtime="20201115 22:11:15.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:15.700" endtime="20201115 22:11:15.701"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.397" endtime="20201115 22:11:15.702"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.395" endtime="20201115 22:11:15.702"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:15.706" level="INFO">${RESULT} = [{'time': 0.022151014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.055999999999341e-06, 'source_diff': 8.055999999999341e-06}, {'time': 0.022464278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:15.703" endtime="20201115 22:11:15.707"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:15.722" level="INFO">${OVERHEAD} = {'source_diff': [8.055999999999341e-06, 8.07000000000238e-06, 8.08400000000195e-06, 8.068999999999438e-06, 8.068999999999438e-06, 8.069999999998911e-06, 8.055999999999341e-06, 8.068999999999438e-06, 8...</msg>
<status status="PASS" starttime="20201115 22:11:15.708" endtime="20201115 22:11:15.722"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:15.726" level="INFO">NAME: 00-overhead-25-set</msg>
<status status="PASS" starttime="20201115 22:11:15.725" endtime="20201115 22:11:15.727"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:15.729" level="INFO">VALUE: [8.055999999999341e-06, 8.07000000000238e-06, 8.08400000000195e-06, 8.068999999999438e-06, 8.068999999999438e-06, 8.069999999998911e-06, 8.055999999999341e-06, 8.068999999999438e-06, 8.055999999999341e-06, 8.110999999998147e-06, 8.068999999999438e-06, 8.055999999999341e-06, 8.08400000000195e-06, 8.069999999998911e-06, 8.054999999999868e-06, 8.110999999998147e-06, 8.069999999998911e-06, 8.054999999999868e-06, 8.097000000002047e-06, 8.013999999997162e-06, 8.096999999998578e-06, 8.056000000002811e-06, 8.068999999999438e-06, 8.014000000000632e-06, 8.054999999999868e-06, 8.069999999998911e-06, 8.028000000000202e-06, 8.056000000002811e-06, 8.07000000000238e-06, 8.055999999999341e-06, 8.054999999999868e-06, 8.055999999999341e-06, 8.041000000000298e-06, 8.068999999999438e-06, 8.083000000005947e-06, 8.041999999999772e-06, 8.055999999999341e-06, 8.068999999999438e-06, 8.069999999998911e-06, 8.082999999999008e-06, 8.068999999999438e-06, 8.055999999999341e-06, 8.068999999999438e-06, 8.111000000005086e-06, 8.055999999999341e-06, 8.000000000001062e-06, 8.082999999999008e-06, 8.069999999998911e-06, 8.054999999999868e-06, 8.068999999999438e-06]</msg>
<status status="PASS" starttime="20201115 22:11:15.727" endtime="20201115 22:11:15.729"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.723" endtime="20201115 22:11:15.730"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:15.732" endtime="20201115 22:11:15.733"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:15.735" endtime="20201115 22:11:15.754"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.734" endtime="20201115 22:11:15.755"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.730" endtime="20201115 22:11:15.755"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.355" endtime="20201115 22:11:15.756"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.353" endtime="20201115 22:11:15.756"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.352" endtime="20201115 22:11:15.756"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.840" endtime="20201115 22:11:15.756"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="teardown">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:15.760" endtime="20201115 22:11:15.780"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.759" endtime="20201115 22:11:15.781"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.758" endtime="20201115 22:11:15.781"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:11:05.766" endtime="20201115 22:11:15.781" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Remove List">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:15.789" endtime="20201115 22:11:15.808"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.787" endtime="20201115 22:11:15.808"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:15.821" endtime="20201115 22:11:15.838"></status>
</kw>
<msg timestamp="20201115 22:11:15.838" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:15.820" endtime="20201115 22:11:15.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:15.841" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:15.840" endtime="20201115 22:11:15.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:11:15.844" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:11:15.842" endtime="20201115 22:11:15.844"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:15.817" endtime="20201115 22:11:15.845"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:15.815" endtime="20201115 22:11:15.846"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.814" endtime="20201115 22:11:15.846"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:11:15.850" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:11:15.849" endtime="20201115 22:11:15.850"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.847" endtime="20201115 22:11:15.850"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.813" endtime="20201115 22:11:15.851"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.812" endtime="20201115 22:11:15.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:15.851" endtime="20201115 22:11:15.853"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.811" endtime="20201115 22:11:15.853"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.809" endtime="20201115 22:11:15.854"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.786" endtime="20201115 22:11:15.854"></status>
</kw>
<kw name="${n} IN RANGE [ 25 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:15.857" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:15.866" endtime="20201115 22:11:15.879"></status>
</kw>
<msg timestamp="20201115 22:11:15.879" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:15.865" endtime="20201115 22:11:15.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:15.882" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:15.880" endtime="20201115 22:11:15.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:15.883" endtime="20201115 22:11:15.884"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.862" endtime="20201115 22:11:15.885"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.860" endtime="20201115 22:11:15.885"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:15.892" endtime="20201115 22:11:16.176"></status>
</kw>
<msg timestamp="20201115 22:11:16.179" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067920486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067925069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:15.890" endtime="20201115 22:11:16.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:16.187" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067920486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067925069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:16.181" endtime="20201115 22:11:16.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:16.188" endtime="20201115 22:11:16.190"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.888" endtime="20201115 22:11:16.191"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.886" endtime="20201115 22:11:16.191"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:16.195" level="INFO">${RESULT} = [{'time': 0.067925069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.583000000002446e-06, 'source_diff': 4.583000000002446e-06}, {'time': 0.067976778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:16.192" endtime="20201115 22:11:16.195"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:16.209" level="INFO">${OVERHEAD} = {'source_diff': [4.583000000002446e-06, 4.58400000000192e-06, 4.583000000002446e-06, 4.58400000000192e-06, 4.597000000008955e-06, 4.55600000000278e-06, 4.596999999995077e-06, 4.569999999995411e-06, 4....</msg>
<status status="PASS" starttime="20201115 22:11:16.196" endtime="20201115 22:11:16.210"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:16.218" level="INFO">NAME: 00-overhead-1-remove</msg>
<status status="PASS" starttime="20201115 22:11:16.217" endtime="20201115 22:11:16.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:16.220" level="INFO">VALUE: [4.583000000002446e-06, 4.58400000000192e-06, 4.583000000002446e-06, 4.58400000000192e-06, 4.597000000008955e-06, 4.55600000000278e-06, 4.596999999995077e-06, 4.569999999995411e-06, 4.569999999995411e-06, 4.568999999995937e-06, 4.55600000000278e-06, 4.596999999995077e-06, 4.568999999995937e-06, 4.55600000000278e-06, 4.555000000003306e-06, 4.583000000002446e-06, 4.569999999995411e-06, 4.542000000010149e-06, 4.569999999995411e-06, 4.596999999995077e-06, 4.55600000000278e-06, 4.527000000004167e-06, 4.568999999995937e-06, 4.596999999995077e-06, 4.55600000000278e-06, 4.569000000009815e-06, 4.569000000009815e-06, 4.568999999995937e-06, 4.569999999995411e-06, 4.569000000009815e-06, 4.611000000001586e-06, 4.569999999995411e-06, 4.596999999995077e-06, 4.583000000002446e-06, 4.568999999995937e-06, 4.568999999995937e-06, 4.568999999995937e-06, 4.555000000003306e-06, 4.569000000009815e-06, 4.555000000003306e-06, 4.611000000001586e-06, 4.52800000000364e-06, 4.569000000009815e-06, 4.583000000002446e-06, 4.55600000000278e-06, 4.596999999995077e-06, 4.569999999995411e-06, 4.583000000002446e-06, 4.569999999995411e-06, 4.597999999994551e-06]</msg>
<status status="PASS" starttime="20201115 22:11:16.219" endtime="20201115 22:11:16.221"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.210" endtime="20201115 22:11:16.221"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:16.223" endtime="20201115 22:11:16.225"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:16.227" endtime="20201115 22:11:16.246"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.225" endtime="20201115 22:11:16.247"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.222" endtime="20201115 22:11:16.247"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.858" endtime="20201115 22:11:16.247"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.856" endtime="20201115 22:11:16.248"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.855" endtime="20201115 22:11:16.248"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:16.250" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:16.259" endtime="20201115 22:11:16.272"></status>
</kw>
<msg timestamp="20201115 22:11:16.272" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:16.257" endtime="20201115 22:11:16.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:16.275" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:16.273" endtime="20201115 22:11:16.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:16.276" endtime="20201115 22:11:16.277"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.255" endtime="20201115 22:11:16.278"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.252" endtime="20201115 22:11:16.278"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:16.285" endtime="20201115 22:11:16.571"></status>
</kw>
<msg timestamp="20201115 22:11:16.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022218181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022225028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:16.283" endtime="20201115 22:11:16.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:16.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022218181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022225028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:16.575" endtime="20201115 22:11:16.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:16.583" endtime="20201115 22:11:16.585"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.281" endtime="20201115 22:11:16.586"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.279" endtime="20201115 22:11:16.586"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:16.591" level="INFO">${RESULT} = [{'time': 0.022225028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.847000000000797e-06, 'source_diff': 6.847000000000797e-06}, {'time': 0.022286292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:16.587" endtime="20201115 22:11:16.591"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:16.604" level="INFO">${OVERHEAD} = {'source_diff': [6.847000000000797e-06, 6.7919999999985214e-06, 6.790999999999048e-06, 6.778000000002421e-06, 6.790999999999048e-06, 6.790999999999048e-06, 6.790999999999048e-06, 6.792000000001991e-06...</msg>
<status status="PASS" starttime="20201115 22:11:16.592" endtime="20201115 22:11:16.605"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:16.609" level="INFO">NAME: 00-overhead-2-remove</msg>
<status status="PASS" starttime="20201115 22:11:16.608" endtime="20201115 22:11:16.609"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:16.611" level="INFO">VALUE: [6.847000000000797e-06, 6.7919999999985214e-06, 6.790999999999048e-06, 6.778000000002421e-06, 6.790999999999048e-06, 6.790999999999048e-06, 6.790999999999048e-06, 6.792000000001991e-06, 6.7919999999985214e-06, 6.820000000001131e-06, 6.806000000001561e-06, 6.7779999999989515e-06, 6.792000000001991e-06, 6.7919999999985214e-06, 6.804999999998618e-06, 6.722000000000672e-06, 6.805999999998091e-06, 6.778000000002421e-06, 6.778000000002421e-06, 6.763999999999382e-06, 6.709000000000576e-06, 6.7779999999989515e-06, 6.763999999999382e-06, 6.7919999999985214e-06, 6.762999999999908e-06, 6.804999999998618e-06, 6.763999999999382e-06, 6.749999999999812e-06, 6.7779999999989515e-06, 6.778000000002421e-06, 6.805999999998091e-06, 6.7779999999989515e-06, 6.790999999999048e-06, 6.790999999999048e-06, 6.778000000002421e-06, 6.791000000002517e-06, 6.763999999999382e-06, 6.763999999999382e-06, 6.7779999999989515e-06, 6.805000000002087e-06, 6.7779999999989515e-06, 6.776999999999478e-06, 6.777000000002947e-06, 6.818999999998188e-06, 6.847000000000797e-06, 6.7230000000001455e-06, 6.778000000002421e-06, 6.763999999999382e-06, 6.790999999999048e-06, 6.7779999999989515e-06]</msg>
<status status="PASS" starttime="20201115 22:11:16.610" endtime="20201115 22:11:16.612"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.605" endtime="20201115 22:11:16.612"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:16.614" endtime="20201115 22:11:16.615"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:16.618" endtime="20201115 22:11:16.637"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.616" endtime="20201115 22:11:16.637"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.613" endtime="20201115 22:11:16.638"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.251" endtime="20201115 22:11:16.638"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.249" endtime="20201115 22:11:16.638"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.248" endtime="20201115 22:11:16.639"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:16.641" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:16.649" endtime="20201115 22:11:16.663"></status>
</kw>
<msg timestamp="20201115 22:11:16.664" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:16.648" endtime="20201115 22:11:16.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:16.666" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:16.665" endtime="20201115 22:11:16.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:16.667" endtime="20201115 22:11:16.669"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.645" endtime="20201115 22:11:16.669"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.643" endtime="20201115 22:11:16.670"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:16.676" endtime="20201115 22:11:16.962"></status>
</kw>
<msg timestamp="20201115 22:11:16.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022181819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022188764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:16.674" endtime="20201115 22:11:16.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:16.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022181819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022188764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:16.967" endtime="20201115 22:11:16.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:16.975" endtime="20201115 22:11:16.977"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.672" endtime="20201115 22:11:16.977"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.670" endtime="20201115 22:11:16.978"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:16.982" level="INFO">${RESULT} = [{'time': 0.022188764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.945000000001256e-06, 'source_diff': 6.945000000001256e-06}, {'time': 0.022258181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:16.979" endtime="20201115 22:11:16.982"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:16.995" level="INFO">${OVERHEAD} = {'source_diff': [6.945000000001256e-06, 6.958999999997356e-06, 6.958000000001352e-06, 6.944999999997786e-06, 6.931000000001686e-06, 6.958000000001352e-06, 6.943999999998313e-06, 6.945000000001256e-06,...</msg>
<status status="PASS" starttime="20201115 22:11:16.983" endtime="20201115 22:11:16.996"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:17.000" level="INFO">NAME: 00-overhead-3-remove</msg>
<status status="PASS" starttime="20201115 22:11:16.999" endtime="20201115 22:11:17.000"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:17.002" level="INFO">VALUE: [6.945000000001256e-06, 6.958999999997356e-06, 6.958000000001352e-06, 6.944999999997786e-06, 6.931000000001686e-06, 6.958000000001352e-06, 6.943999999998313e-06, 6.945000000001256e-06, 6.943999999998313e-06, 7.000000000000062e-06, 6.917000000002116e-06, 7.027000000003197e-06, 6.944000000001782e-06, 6.958000000001352e-06, 6.986000000000492e-06, 6.944000000001782e-06, 7.013999999999632e-06, 6.958000000001352e-06, 6.930999999998216e-06, 6.943999999998313e-06, 6.9730000000003955e-06, 6.944999999997786e-06, 6.945000000001256e-06, 6.959000000000826e-06, 6.9169999999986465e-06, 6.958000000001352e-06, 6.958000000001352e-06, 6.945000000001256e-06, 6.9579999999978825e-06, 6.9869999999999655e-06, 6.959000000000826e-06, 6.945000000001256e-06, 6.9719999999974525e-06, 6.874999999999937e-06, 6.943999999998313e-06, 7.000000000000062e-06, 6.944000000001782e-06, 6.959000000000826e-06, 6.9579999999978825e-06, 6.944000000001782e-06, 6.958000000001352e-06, 6.986000000000492e-06, 6.916000000002642e-06, 6.959000000000826e-06, 6.972000000000922e-06, 6.944999999997786e-06, 6.888999999999507e-06, 6.943999999998313e-06, 6.943999999998313e-06, 6.931000000001686e-06]</msg>
<status status="PASS" starttime="20201115 22:11:17.001" endtime="20201115 22:11:17.003"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.996" endtime="20201115 22:11:17.003"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:17.005" endtime="20201115 22:11:17.007"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:17.009" endtime="20201115 22:11:17.028"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.007" endtime="20201115 22:11:17.029"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.004" endtime="20201115 22:11:17.029"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.641" endtime="20201115 22:11:17.029"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.640" endtime="20201115 22:11:17.030"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.639" endtime="20201115 22:11:17.030"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:17.032" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:17.041" endtime="20201115 22:11:17.055"></status>
</kw>
<msg timestamp="20201115 22:11:17.055" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:17.039" endtime="20201115 22:11:17.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:17.057" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:17.056" endtime="20201115 22:11:17.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:17.058" endtime="20201115 22:11:17.060"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.036" endtime="20201115 22:11:17.061"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.034" endtime="20201115 22:11:17.062"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:17.068" endtime="20201115 22:11:17.355"></status>
</kw>
<msg timestamp="20201115 22:11:17.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022211319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022218389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:17.066" endtime="20201115 22:11:17.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:17.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022211319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022218389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:17.360" endtime="20201115 22:11:17.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:17.368" endtime="20201115 22:11:17.369"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.064" endtime="20201115 22:11:17.370"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.062" endtime="20201115 22:11:17.370"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:17.374" level="INFO">${RESULT} = [{'time': 0.022218389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.070000000001381e-06, 'source_diff': 7.070000000001381e-06}, {'time': 0.022297611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:17.371" endtime="20201115 22:11:17.375"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:17.388" level="INFO">${OVERHEAD} = {'source_diff': [7.070000000001381e-06, 7.110999999997147e-06, 7.097000000001047e-06, 7.068999999998438e-06, 7.111000000000617e-06, 7.125000000000187e-06, 7.111000000000617e-06, 7.0980000000005206e-06...</msg>
<status status="PASS" starttime="20201115 22:11:17.375" endtime="20201115 22:11:17.388"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:17.392" level="INFO">NAME: 00-overhead-4-remove</msg>
<status status="PASS" starttime="20201115 22:11:17.391" endtime="20201115 22:11:17.392"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:17.394" level="INFO">VALUE: [7.070000000001381e-06, 7.110999999997147e-06, 7.097000000001047e-06, 7.068999999998438e-06, 7.111000000000617e-06, 7.125000000000187e-06, 7.111000000000617e-06, 7.0980000000005206e-06, 7.138999999999757e-06, 7.125000000000187e-06, 7.0980000000005206e-06, 7.040999999999298e-06, 7.110999999997147e-06, 7.180999999998466e-06, 7.125000000000187e-06, 7.1529999999993266e-06, 7.180000000002462e-06, 7.084000000000951e-06, 7.097000000001047e-06, 7.1529999999993266e-06, 7.111000000000617e-06, 7.125000000000187e-06, 7.111000000000617e-06, 7.180000000002462e-06, 7.125000000000187e-06, 7.097000000001047e-06, 7.1120000000000905e-06, 7.111000000000617e-06, 7.125000000000187e-06, 7.125000000000187e-06, 7.125000000000187e-06, 7.097000000001047e-06, 7.125000000000187e-06, 7.097000000001047e-06, 7.181000000001936e-06, 7.097000000001047e-06, 7.111000000000617e-06, 7.111000000000617e-06, 7.125000000000187e-06, 7.125000000000187e-06, 7.083000000001477e-06, 7.111000000000617e-06, 7.138000000000283e-06, 7.138999999999757e-06, 7.111000000000617e-06, 7.125000000000187e-06, 7.153000000002796e-06, 7.111000000000617e-06, 7.054999999998868e-06, 7.1669999999988965e-06]</msg>
<status status="PASS" starttime="20201115 22:11:17.393" endtime="20201115 22:11:17.395"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.388" endtime="20201115 22:11:17.395"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:17.398" endtime="20201115 22:11:17.399"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:17.401" endtime="20201115 22:11:17.420"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.399" endtime="20201115 22:11:17.421"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.396" endtime="20201115 22:11:17.421"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.032" endtime="20201115 22:11:17.422"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.031" endtime="20201115 22:11:17.422"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.030" endtime="20201115 22:11:17.422"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:17.424" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:17.433" endtime="20201115 22:11:17.447"></status>
</kw>
<msg timestamp="20201115 22:11:17.448" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:17.431" endtime="20201115 22:11:17.448"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:17.450" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:17.449" endtime="20201115 22:11:17.451"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:17.451" endtime="20201115 22:11:17.453"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.429" endtime="20201115 22:11:17.454"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.426" endtime="20201115 22:11:17.454"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:17.460" endtime="20201115 22:11:17.746"></status>
</kw>
<msg timestamp="20201115 22:11:17.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022696639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022703917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:17.459" endtime="20201115 22:11:17.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:17.757" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022696639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022703917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:17.751" endtime="20201115 22:11:17.758"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:17.759" endtime="20201115 22:11:17.760"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.456" endtime="20201115 22:11:17.761"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.455" endtime="20201115 22:11:17.761"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:17.765" level="INFO">${RESULT} = [{'time': 0.022703917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.2779999999994516e-06, 'source_diff': 7.2779999999994516e-06}, {'time': 0.022793806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:17.762" endtime="20201115 22:11:17.765"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:17.779" level="INFO">${OVERHEAD} = {'source_diff': [7.2779999999994516e-06, 7.263999999999882e-06, 7.290999999999548e-06, 7.2779999999994516e-06, 7.250000000000312e-06, 7.2779999999994516e-06, 7.278000000002921e-06, 7.263999999999882e-...</msg>
<status status="PASS" starttime="20201115 22:11:17.766" endtime="20201115 22:11:17.779"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:17.783" level="INFO">NAME: 00-overhead-5-remove</msg>
<status status="PASS" starttime="20201115 22:11:17.782" endtime="20201115 22:11:17.784"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:17.786" level="INFO">VALUE: [7.2779999999994516e-06, 7.263999999999882e-06, 7.290999999999548e-06, 7.2779999999994516e-06, 7.250000000000312e-06, 7.2779999999994516e-06, 7.278000000002921e-06, 7.263999999999882e-06, 7.276999999999978e-06, 7.263999999999882e-06, 7.276999999999978e-06, 7.318999999998688e-06, 7.250000000000312e-06, 7.290999999999548e-06, 7.263999999999882e-06, 7.276999999999978e-06, 7.290999999999548e-06, 7.290999999999548e-06, 7.2919999999990215e-06, 7.263999999999882e-06, 7.236000000000742e-06, 7.278000000002921e-06, 7.292000000002491e-06, 7.2779999999994516e-06, 7.332999999998258e-06, 7.2779999999994516e-06, 7.263000000000408e-06, 7.306000000002061e-06, 7.181000000001936e-06, 7.290999999999548e-06, 7.263999999999882e-06, 7.2779999999994516e-06, 7.2779999999994516e-06, 7.250000000000312e-06, 7.2779999999994516e-06, 7.263999999999882e-06, 7.236000000000742e-06, 7.2219999999977025e-06, 7.250000000000312e-06, 7.2779999999994516e-06, 7.2779999999994516e-06, 7.263999999999882e-06, 7.2779999999994516e-06, 7.2779999999994516e-06, 7.263999999999882e-06, 7.2919999999990215e-06, 7.278000000002921e-06, 7.278000000002921e-06, 7.263999999999882e-06, 7.250000000000312e-06]</msg>
<status status="PASS" starttime="20201115 22:11:17.785" endtime="20201115 22:11:17.787"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.780" endtime="20201115 22:11:17.787"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:17.789" endtime="20201115 22:11:17.791"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:17.793" endtime="20201115 22:11:17.813"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.791" endtime="20201115 22:11:17.813"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.788" endtime="20201115 22:11:17.814"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.425" endtime="20201115 22:11:17.814"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.423" endtime="20201115 22:11:17.814"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.422" endtime="20201115 22:11:17.814"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:17.817" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:17.825" endtime="20201115 22:11:17.840"></status>
</kw>
<msg timestamp="20201115 22:11:17.841" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:17.824" endtime="20201115 22:11:17.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:17.843" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:17.842" endtime="20201115 22:11:17.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:17.844" endtime="20201115 22:11:17.846"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.821" endtime="20201115 22:11:17.846"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.819" endtime="20201115 22:11:17.847"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:17.853" endtime="20201115 22:11:18.139"></status>
</kw>
<msg timestamp="20201115 22:11:18.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022536944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022544375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:17.851" endtime="20201115 22:11:18.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:18.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022536944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022544375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:18.143" endtime="20201115 22:11:18.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:18.152" endtime="20201115 22:11:18.153"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.849" endtime="20201115 22:11:18.154"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.847" endtime="20201115 22:11:18.154"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:18.158" level="INFO">${RESULT} = [{'time': 0.022544375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.430999999998716e-06, 'source_diff': 7.430999999998716e-06}, {'time': 0.022641389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:18.155" endtime="20201115 22:11:18.158"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:18.171" level="INFO">${OVERHEAD} = {'source_diff': [7.430999999998716e-06, 7.431000000002186e-06, 7.431000000002186e-06, 7.443999999998813e-06, 7.443999999998813e-06, 7.443999999998813e-06, 7.402999999999577e-06, 7.415999999999673e-06,...</msg>
<status status="PASS" starttime="20201115 22:11:18.159" endtime="20201115 22:11:18.172"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:18.176" level="INFO">NAME: 00-overhead-6-remove</msg>
<status status="PASS" starttime="20201115 22:11:18.175" endtime="20201115 22:11:18.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:18.178" level="INFO">VALUE: [7.430999999998716e-06, 7.431000000002186e-06, 7.431000000002186e-06, 7.443999999998813e-06, 7.443999999998813e-06, 7.443999999998813e-06, 7.402999999999577e-06, 7.415999999999673e-06, 7.444000000002282e-06, 7.457999999998383e-06, 7.444999999998286e-06, 7.431000000002186e-06, 7.445000000001756e-06, 7.402999999999577e-06, 7.459000000001326e-06, 7.443999999998813e-06, 7.431000000002186e-06, 7.402999999999577e-06, 7.361000000000867e-06, 7.472000000001422e-06, 7.444000000002282e-06, 7.429999999999243e-06, 7.443999999998813e-06, 7.430999999998716e-06, 7.459000000001326e-06, 7.430999999998716e-06, 7.388000000000533e-06, 7.443999999998813e-06, 7.445000000001756e-06, 7.514000000000132e-06, 7.445000000001756e-06, 7.430999999998716e-06, 7.430000000002712e-06, 7.444000000002282e-06, 7.4169999999991465e-06, 7.444000000002282e-06, 7.429999999999243e-06, 7.429999999999243e-06, 7.429999999999243e-06, 7.389000000000007e-06, 7.444000000002282e-06, 7.443999999998813e-06, 7.430999999998716e-06, 7.459000000001326e-06, 7.444000000002282e-06, 7.4169999999991465e-06, 7.445000000001756e-06, 7.430999999998716e-06, 7.4719999999979525e-06, 7.431000000002186e-06]</msg>
<status status="PASS" starttime="20201115 22:11:18.177" endtime="20201115 22:11:18.179"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.172" endtime="20201115 22:11:18.180"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:18.182" endtime="20201115 22:11:18.183"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:18.185" endtime="20201115 22:11:18.205"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.184" endtime="20201115 22:11:18.205"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.180" endtime="20201115 22:11:18.206"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.817" endtime="20201115 22:11:18.206"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.816" endtime="20201115 22:11:18.206"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.815" endtime="20201115 22:11:18.206"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:18.208" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:18.217" endtime="20201115 22:11:18.233"></status>
</kw>
<msg timestamp="20201115 22:11:18.233" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:18.215" endtime="20201115 22:11:18.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:18.236" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:18.234" endtime="20201115 22:11:18.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:18.237" endtime="20201115 22:11:18.238"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.213" endtime="20201115 22:11:18.239"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.211" endtime="20201115 22:11:18.239"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:18.246" endtime="20201115 22:11:18.533"></status>
</kw>
<msg timestamp="20201115 22:11:18.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022138639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022146236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:18.245" endtime="20201115 22:11:18.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:18.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022138639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022146236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:18.537" endtime="20201115 22:11:18.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:18.545" endtime="20201115 22:11:18.546"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.242" endtime="20201115 22:11:18.547"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.240" endtime="20201115 22:11:18.547"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:18.551" level="INFO">${RESULT} = [{'time': 0.022146236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.5969999999980775e-06, 'source_diff': 7.5969999999980775e-06}, {'time': 0.022252306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:18.548" endtime="20201115 22:11:18.552"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:18.565" level="INFO">${OVERHEAD} = {'source_diff': [7.5969999999980775e-06, 7.583999999997981e-06, 7.611000000001117e-06, 7.6109999999976474e-06, 7.680999999998966e-06, 7.652999999999827e-06, 7.568999999998938e-06, 7.6109999999976474e-...</msg>
<status status="PASS" starttime="20201115 22:11:18.552" endtime="20201115 22:11:18.565"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:18.569" level="INFO">NAME: 00-overhead-7-remove</msg>
<status status="PASS" starttime="20201115 22:11:18.568" endtime="20201115 22:11:18.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:18.572" level="INFO">VALUE: [7.5969999999980775e-06, 7.583999999997981e-06, 7.611000000001117e-06, 7.6109999999976474e-06, 7.680999999998966e-06, 7.652999999999827e-06, 7.568999999998938e-06, 7.6109999999976474e-06, 7.679999999999493e-06, 7.597000000001547e-06, 7.625000000000687e-06, 7.597999999997551e-06, 7.597000000001547e-06, 7.652000000000353e-06, 7.582999999998508e-06, 7.611000000001117e-06, 7.597000000001547e-06, 7.556000000002311e-06, 7.625000000000687e-06, 7.625000000000687e-06, 7.597000000001547e-06, 7.639000000000257e-06, 7.5969999999980775e-06, 7.569999999998411e-06, 7.6109999999976474e-06, 7.584000000001451e-06, 7.6120000000005905e-06, 7.597000000001547e-06, 7.598000000001021e-06, 7.583999999997981e-06, 7.582999999998508e-06, 7.638000000000783e-06, 7.597000000001547e-06, 7.5969999999980775e-06, 7.540999999999798e-06, 7.624999999997217e-06, 7.5969999999980775e-06, 7.625000000000687e-06, 7.583000000001977e-06, 7.5969999999980775e-06, 7.639000000000257e-06, 7.556000000002311e-06, 7.611000000001117e-06, 7.5969999999980775e-06, 7.597000000001547e-06, 7.5969999999980775e-06, 7.583000000001977e-06, 7.597000000001547e-06, 7.5969999999980775e-06, 7.5969999999980775e-06]</msg>
<status status="PASS" starttime="20201115 22:11:18.570" endtime="20201115 22:11:18.573"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.566" endtime="20201115 22:11:18.573"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:18.575" endtime="20201115 22:11:18.577"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:18.579" endtime="20201115 22:11:18.598"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.577" endtime="20201115 22:11:18.599"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.574" endtime="20201115 22:11:18.599"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.209" endtime="20201115 22:11:18.600"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.207" endtime="20201115 22:11:18.600"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.207" endtime="20201115 22:11:18.600"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:18.602" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:18.612" endtime="20201115 22:11:18.628"></status>
</kw>
<msg timestamp="20201115 22:11:18.629" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:18.610" endtime="20201115 22:11:18.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:18.631" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:18.630" endtime="20201115 22:11:18.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:18.632" endtime="20201115 22:11:18.634"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.607" endtime="20201115 22:11:18.634"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.605" endtime="20201115 22:11:18.635"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:18.641" endtime="20201115 22:11:18.929"></status>
</kw>
<msg timestamp="20201115 22:11:18.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023477319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023485014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:18.640" endtime="20201115 22:11:18.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:18.940" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023477319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023485014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:18.933" endtime="20201115 22:11:18.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:18.941" endtime="20201115 22:11:18.943"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.637" endtime="20201115 22:11:18.943"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.635" endtime="20201115 22:11:18.944"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:18.948" level="INFO">${RESULT} = [{'time': 0.023485014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.694999999998536e-06, 'source_diff': 7.694999999998536e-06}, {'time': 0.023603819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:18.944" endtime="20201115 22:11:18.948"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:18.962" level="INFO">${OVERHEAD} = {'source_diff': [7.694999999998536e-06, 7.791000000000048e-06, 7.763000000000908e-06, 7.735999999997772e-06, 7.764000000000382e-06, 7.763000000000908e-06, 7.777999999999952e-06, 7.777000000000478e-06,...</msg>
<status status="PASS" starttime="20201115 22:11:18.949" endtime="20201115 22:11:18.962"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:18.966" level="INFO">NAME: 00-overhead-8-remove</msg>
<status status="PASS" starttime="20201115 22:11:18.965" endtime="20201115 22:11:18.967"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:18.969" level="INFO">VALUE: [7.694999999998536e-06, 7.791000000000048e-06, 7.763000000000908e-06, 7.735999999997772e-06, 7.764000000000382e-06, 7.763000000000908e-06, 7.777999999999952e-06, 7.777000000000478e-06, 7.764000000000382e-06, 7.764000000000382e-06, 7.776999999997009e-06, 7.791000000000048e-06, 7.764000000000382e-06, 7.791999999999522e-06, 7.722000000001672e-06, 7.764000000000382e-06, 7.749999999997342e-06, 7.764000000000382e-06, 7.777999999999952e-06, 7.819999999998661e-06, 7.764000000000382e-06, 7.708000000002102e-06, 7.749999999997342e-06, 7.736000000001242e-06, 7.721999999998203e-06, 7.764000000000382e-06, 7.764000000000382e-06, 7.764000000000382e-06, 7.763999999996912e-06, 7.806000000002561e-06, 7.735999999997772e-06, 7.764000000000382e-06, 7.777999999999952e-06, 7.764000000000382e-06, 7.721999999998203e-06, 7.750000000000812e-06, 7.764000000000382e-06, 7.764000000000382e-06, 7.735999999997772e-06, 7.749999999997342e-06, 7.777999999999952e-06, 7.750000000000812e-06, 7.750000000000812e-06, 7.777999999999952e-06, 7.777999999999952e-06, 7.833999999998231e-06, 7.750000000000812e-06, 7.764000000000382e-06, 7.777999999999952e-06, 7.805999999999091e-06]</msg>
<status status="PASS" starttime="20201115 22:11:18.967" endtime="20201115 22:11:18.969"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.963" endtime="20201115 22:11:18.970"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:18.972" endtime="20201115 22:11:18.974"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:18.976" endtime="20201115 22:11:18.996"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.974" endtime="20201115 22:11:18.996"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.971" endtime="20201115 22:11:18.997"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.603" endtime="20201115 22:11:18.997"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.601" endtime="20201115 22:11:18.997"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.600" endtime="20201115 22:11:18.997"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:19.000" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:19.008" endtime="20201115 22:11:19.025"></status>
</kw>
<msg timestamp="20201115 22:11:19.025" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:19.007" endtime="20201115 22:11:19.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:19.028" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:19.026" endtime="20201115 22:11:19.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:19.029" endtime="20201115 22:11:19.030"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.004" endtime="20201115 22:11:19.031"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.002" endtime="20201115 22:11:19.031"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:19.038" endtime="20201115 22:11:19.325"></status>
</kw>
<msg timestamp="20201115 22:11:19.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022399819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02240775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:11:19.036" endtime="20201115 22:11:19.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:19.336" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022399819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02240775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:11:19.329" endtime="20201115 22:11:19.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:19.337" endtime="20201115 22:11:19.339"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.034" endtime="20201115 22:11:19.339"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.032" endtime="20201115 22:11:19.340"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:19.344" level="INFO">${RESULT} = [{'time': 0.02240775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.930999999999216e-06, 'source_diff': 7.930999999999216e-06}, {'time': 0.022535264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:11:19.341" endtime="20201115 22:11:19.344"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:19.357" level="INFO">${OVERHEAD} = {'source_diff': [7.930999999999216e-06, 7.903000000000077e-06, 7.929999999999743e-06, 7.916999999999647e-06, 7.930999999999216e-06, 7.916999999999647e-06, 7.972000000001922e-06, 7.916999999999647e-06,...</msg>
<status status="PASS" starttime="20201115 22:11:19.345" endtime="20201115 22:11:19.358"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:19.362" level="INFO">NAME: 00-overhead-9-remove</msg>
<status status="PASS" starttime="20201115 22:11:19.361" endtime="20201115 22:11:19.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:19.364" level="INFO">VALUE: [7.930999999999216e-06, 7.903000000000077e-06, 7.929999999999743e-06, 7.916999999999647e-06, 7.930999999999216e-06, 7.916999999999647e-06, 7.972000000001922e-06, 7.916999999999647e-06, 7.931000000002686e-06, 7.931000000002686e-06, 7.916999999999647e-06, 7.931000000002686e-06, 7.931000000002686e-06, 7.916000000000173e-06, 7.929999999999743e-06, 7.986999999997496e-06, 7.930999999999216e-06, 7.916999999999647e-06, 7.971999999998453e-06, 7.847000000001797e-06, 7.929999999999743e-06, 7.903000000000077e-06, 7.902000000000603e-06, 7.903000000000077e-06, 7.901999999997134e-06, 7.916999999999647e-06, 7.888000000001033e-06, 7.931000000002686e-06, 7.930999999999216e-06, 7.901999999997134e-06, 7.903000000000077e-06, 7.86200000000084e-06, 7.929999999999743e-06, 7.916999999999647e-06, 7.916999999999647e-06, 7.916999999999647e-06, 7.930999999999216e-06, 7.916000000000173e-06, 7.916000000000173e-06, 7.929999999999743e-06, 7.915999999996703e-06, 7.972000000001922e-06, 7.930999999999216e-06, 7.916000000000173e-06, 7.930999999999216e-06, 7.916999999999647e-06, 7.916999999999647e-06, 7.972000000001922e-06, 7.929999999999743e-06, 7.930999999999216e-06]</msg>
<status status="PASS" starttime="20201115 22:11:19.363" endtime="20201115 22:11:19.364"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.358" endtime="20201115 22:11:19.365"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:19.367" endtime="20201115 22:11:19.368"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:19.371" endtime="20201115 22:11:19.390"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.369" endtime="20201115 22:11:19.390"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.366" endtime="20201115 22:11:19.391"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.000" endtime="20201115 22:11:19.391"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.998" endtime="20201115 22:11:19.391"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.998" endtime="20201115 22:11:19.392"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:19.394" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:19.402" endtime="20201115 22:11:19.420"></status>
</kw>
<msg timestamp="20201115 22:11:19.420" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:19.401" endtime="20201115 22:11:19.421"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:19.423" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:19.421" endtime="20201115 22:11:19.423"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:19.424" endtime="20201115 22:11:19.425"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.398" endtime="20201115 22:11:19.426"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.396" endtime="20201115 22:11:19.426"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:19.433" endtime="20201115 22:11:19.721"></status>
</kw>
<msg timestamp="20201115 22:11:19.724" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022221014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022229083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:19.431" endtime="20201115 22:11:19.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:19.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022221014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022229083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:19.725" endtime="20201115 22:11:19.732"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:19.733" endtime="20201115 22:11:19.734"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.429" endtime="20201115 22:11:19.735"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.427" endtime="20201115 22:11:19.735"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:19.739" level="INFO">${RESULT} = [{'time': 0.022229083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.068999999999438e-06, 'source_diff': 8.068999999999438e-06}, {'time': 0.022365903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:19.736" endtime="20201115 22:11:19.740"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:19.753" level="INFO">${OVERHEAD} = {'source_diff': [8.068999999999438e-06, 8.083999999998481e-06, 8.110999999998147e-06, 8.027999999996732e-06, 8.097000000002047e-06, 8.083999999998481e-06, 8.138999999997287e-06, 8.096999999998578e-06,...</msg>
<status status="PASS" starttime="20201115 22:11:19.740" endtime="20201115 22:11:19.753"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:19.757" level="INFO">NAME: 00-overhead-10-remove</msg>
<status status="PASS" starttime="20201115 22:11:19.756" endtime="20201115 22:11:19.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:19.760" level="INFO">VALUE: [8.068999999999438e-06, 8.083999999998481e-06, 8.110999999998147e-06, 8.027999999996732e-06, 8.097000000002047e-06, 8.083999999998481e-06, 8.138999999997287e-06, 8.096999999998578e-06, 8.097000000002047e-06, 8.068999999999438e-06, 8.082999999999008e-06, 8.082999999999008e-06, 8.082999999999008e-06, 8.097999999998051e-06, 8.11200000000109e-06, 8.082999999999008e-06, 8.054999999999868e-06, 8.041000000000298e-06, 8.110999999998147e-06, 8.055999999999341e-06, 8.097999999998051e-06, 8.069999999998911e-06, 8.097999999998051e-06, 8.09800000000152e-06, 8.153000000000327e-06, 8.139000000000757e-06, 8.09800000000152e-06, 8.152999999996857e-06, 8.069999999998911e-06, 8.082999999999008e-06, 8.096999999998578e-06, 8.082999999999008e-06, 8.09800000000152e-06, 8.096999999998578e-06, 8.08400000000195e-06, 8.083000000002477e-06, 8.097000000002047e-06, 8.07000000000238e-06, 8.09800000000152e-06, 8.08400000000195e-06, 8.09800000000152e-06, 8.068999999999438e-06, 8.08400000000195e-06, 8.082999999999008e-06, 8.08400000000195e-06, 8.110999999998147e-06, 8.069999999998911e-06, 8.110999999998147e-06, 8.069999999998911e-06, 8.08400000000195e-06]</msg>
<status status="PASS" starttime="20201115 22:11:19.758" endtime="20201115 22:11:19.760"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.754" endtime="20201115 22:11:19.761"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:19.763" endtime="20201115 22:11:19.764"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:19.766" endtime="20201115 22:11:19.786"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.765" endtime="20201115 22:11:19.786"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.761" endtime="20201115 22:11:19.787"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.394" endtime="20201115 22:11:19.787"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.393" endtime="20201115 22:11:19.787"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.392" endtime="20201115 22:11:19.787"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:19.789" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:19.798" endtime="20201115 22:11:19.815"></status>
</kw>
<msg timestamp="20201115 22:11:19.816" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:19.796" endtime="20201115 22:11:19.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:19.819" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:19.817" endtime="20201115 22:11:19.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:19.820" endtime="20201115 22:11:19.821"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.794" endtime="20201115 22:11:19.822"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.792" endtime="20201115 22:11:19.822"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:19.829" endtime="20201115 22:11:20.114"></status>
</kw>
<msg timestamp="20201115 22:11:20.117" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022185514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022193778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:19.827" endtime="20201115 22:11:20.118"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:20.125" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022185514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022193778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:20.118" endtime="20201115 22:11:20.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:20.126" endtime="20201115 22:11:20.128"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.825" endtime="20201115 22:11:20.128"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.823" endtime="20201115 22:11:20.129"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:20.133" level="INFO">${RESULT} = [{'time': 0.022193778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.264000000000882e-06, 'source_diff': 8.264000000000882e-06}, {'time': 0.022342028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:20.130" endtime="20201115 22:11:20.133"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:20.146" level="INFO">${OVERHEAD} = {'source_diff': [8.264000000000882e-06, 8.250000000001312e-06, 8.235999999998272e-06, 8.250000000001312e-06, 8.263999999997412e-06, 8.278000000000452e-06, 8.264000000000882e-06, 8.276999999997509e-06,...</msg>
<status status="PASS" starttime="20201115 22:11:20.134" endtime="20201115 22:11:20.147"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:20.151" level="INFO">NAME: 00-overhead-11-remove</msg>
<status status="PASS" starttime="20201115 22:11:20.150" endtime="20201115 22:11:20.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:20.153" level="INFO">VALUE: [8.264000000000882e-06, 8.250000000001312e-06, 8.235999999998272e-06, 8.250000000001312e-06, 8.263999999997412e-06, 8.278000000000452e-06, 8.264000000000882e-06, 8.276999999997509e-06, 8.222000000002172e-06, 8.236000000001742e-06, 8.249999999997842e-06, 8.264000000000882e-06, 8.262999999997939e-06, 8.249999999997842e-06, 8.236000000001742e-06, 8.249999999997842e-06, 8.235999999998272e-06, 8.249999999997842e-06, 8.166999999999897e-06, 8.264000000000882e-06, 8.249999999997842e-06, 8.263000000001408e-06, 8.235999999998272e-06, 8.249999999997842e-06, 8.264000000000882e-06, 8.235999999998272e-06, 8.278000000000452e-06, 8.250000000001312e-06, 8.195000000002506e-06, 8.193999999999563e-06, 8.264000000000882e-06, 8.249999999997842e-06, 8.250000000001312e-06, 8.193999999999563e-06, 8.237000000001216e-06, 8.250000000001312e-06, 8.292000000000022e-06, 8.152000000000853e-06, 8.237000000001216e-06, 8.250000000001312e-06, 8.250000000001312e-06, 8.250000000001312e-06, 8.235999999998272e-06, 8.236000000001742e-06, 8.278000000000452e-06, 8.207999999999133e-06, 8.264000000000882e-06, 8.250000000001312e-06, 8.235999999998272e-06, 8.250000000001312e-06]</msg>
<status status="PASS" starttime="20201115 22:11:20.152" endtime="20201115 22:11:20.154"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.147" endtime="20201115 22:11:20.154"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:20.156" endtime="20201115 22:11:20.158"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:20.160" endtime="20201115 22:11:20.179"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.158" endtime="20201115 22:11:20.180"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.155" endtime="20201115 22:11:20.180"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.790" endtime="20201115 22:11:20.181"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.788" endtime="20201115 22:11:20.181"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.788" endtime="20201115 22:11:20.181"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:20.184" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:20.193" endtime="20201115 22:11:20.211"></status>
</kw>
<msg timestamp="20201115 22:11:20.211" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:20.191" endtime="20201115 22:11:20.211"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:20.213" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:20.212" endtime="20201115 22:11:20.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:20.214" endtime="20201115 22:11:20.216"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.189" endtime="20201115 22:11:20.217"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.186" endtime="20201115 22:11:20.217"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:20.223" endtime="20201115 22:11:20.511"></status>
</kw>
<msg timestamp="20201115 22:11:20.513" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023573653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023582069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:20.222" endtime="20201115 22:11:20.514"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:20.521" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023573653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023582069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:20.515" endtime="20201115 22:11:20.522"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:20.522" endtime="20201115 22:11:20.524"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.219" endtime="20201115 22:11:20.525"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.218" endtime="20201115 22:11:20.525"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:20.529" level="INFO">${RESULT} = [{'time': 0.023582069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.416000000000673e-06, 'source_diff': 8.416000000000673e-06}, {'time': 0.023741347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:20.526" endtime="20201115 22:11:20.529"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:20.542" level="INFO">${OVERHEAD} = {'source_diff': [8.416000000000673e-06, 8.416000000000673e-06, 8.430999999999716e-06, 8.403000000000577e-06, 8.402000000001103e-06, 8.375000000001437e-06, 8.417000000000147e-06, 8.416000000000673e-06,...</msg>
<status status="PASS" starttime="20201115 22:11:20.530" endtime="20201115 22:11:20.543"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:20.547" level="INFO">NAME: 00-overhead-12-remove</msg>
<status status="PASS" starttime="20201115 22:11:20.546" endtime="20201115 22:11:20.547"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:20.549" level="INFO">VALUE: [8.416000000000673e-06, 8.416000000000673e-06, 8.430999999999716e-06, 8.403000000000577e-06, 8.402000000001103e-06, 8.375000000001437e-06, 8.417000000000147e-06, 8.416000000000673e-06, 8.403000000000577e-06, 8.403000000000577e-06, 8.403000000000577e-06, 8.459000000002326e-06, 8.403000000000577e-06, 8.403000000000577e-06, 8.471999999998953e-06, 8.417000000000147e-06, 8.403000000000577e-06, 8.389000000001007e-06, 8.417000000000147e-06, 8.417000000000147e-06, 8.430999999999716e-06, 8.388000000001533e-06, 8.389000000001007e-06, 8.403000000000577e-06, 8.403000000000577e-06, 8.361000000001867e-06, 8.417000000000147e-06, 8.403000000000577e-06, 8.416000000000673e-06, 8.389000000001007e-06, 8.374999999997967e-06, 8.402000000001103e-06, 8.443999999999813e-06, 8.417000000000147e-06, 8.403000000000577e-06, 8.361000000001867e-06, 8.457999999999383e-06, 8.347000000002297e-06, 8.389000000001007e-06, 8.388999999997537e-06, 8.417000000000147e-06, 8.389000000001007e-06, 8.402999999997107e-06, 8.417000000000147e-06, 8.389000000001007e-06, 8.389000000001007e-06, 8.361999999997871e-06, 8.403000000000577e-06, 8.361000000001867e-06, 8.430000000003712e-06]</msg>
<status status="PASS" starttime="20201115 22:11:20.548" endtime="20201115 22:11:20.550"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.543" endtime="20201115 22:11:20.550"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:20.552" endtime="20201115 22:11:20.554"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:20.556" endtime="20201115 22:11:20.575"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.554" endtime="20201115 22:11:20.576"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.551" endtime="20201115 22:11:20.576"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.184" endtime="20201115 22:11:20.577"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.182" endtime="20201115 22:11:20.577"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.182" endtime="20201115 22:11:20.577"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:20.579" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:20.588" endtime="20201115 22:11:20.607"></status>
</kw>
<msg timestamp="20201115 22:11:20.608" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:20.587" endtime="20201115 22:11:20.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:20.610" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:20.609" endtime="20201115 22:11:20.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:20.611" endtime="20201115 22:11:20.613"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.584" endtime="20201115 22:11:20.613"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.582" endtime="20201115 22:11:20.613"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:20.620" endtime="20201115 22:11:20.907"></status>
</kw>
<msg timestamp="20201115 22:11:20.910" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022465597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022474181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:20.618" endtime="20201115 22:11:20.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:20.917" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022465597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022474181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:20.911" endtime="20201115 22:11:20.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:20.918" endtime="20201115 22:11:20.920"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.616" endtime="20201115 22:11:20.921"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.614" endtime="20201115 22:11:20.921"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:20.925" level="INFO">${RESULT} = [{'time': 0.022474181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.583999999998981e-06, 'source_diff': 8.583999999998981e-06}, {'time': 0.022644875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:20.922" endtime="20201115 22:11:20.925"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:20.939" level="INFO">${OVERHEAD} = {'source_diff': [8.583999999998981e-06, 8.541999999996802e-06, 8.555000000000368e-06, 8.569999999999411e-06, 8.569999999999411e-06, 8.568999999999938e-06, 8.582999999999508e-06, 8.568999999999938e-06,...</msg>
<status status="PASS" starttime="20201115 22:11:20.926" endtime="20201115 22:11:20.939"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:20.943" level="INFO">NAME: 00-overhead-13-remove</msg>
<status status="PASS" starttime="20201115 22:11:20.942" endtime="20201115 22:11:20.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:20.946" level="INFO">VALUE: [8.583999999998981e-06, 8.541999999996802e-06, 8.555000000000368e-06, 8.569999999999411e-06, 8.569999999999411e-06, 8.568999999999938e-06, 8.582999999999508e-06, 8.568999999999938e-06, 8.569999999999411e-06, 8.597999999998551e-06, 8.582999999999508e-06, 8.555999999999842e-06, 8.569999999999411e-06, 8.58400000000245e-06, 8.568999999999938e-06, 8.583999999998981e-06, 8.582999999999508e-06, 8.583999999998981e-06, 8.58400000000245e-06, 8.582999999999508e-06, 8.568999999999938e-06, 8.555000000000368e-06, 8.568999999999938e-06, 8.582999999999508e-06, 8.555000000000368e-06, 8.639000000001257e-06, 8.611000000002117e-06, 8.582999999999508e-06, 8.555000000000368e-06, 8.59800000000202e-06, 8.568999999999938e-06, 8.555999999999842e-06, 8.582999999999508e-06, 8.555999999999842e-06, 8.569999999999411e-06, 8.582999999999508e-06, 8.582999999999508e-06, 8.569999999999411e-06, 8.555999999999842e-06, 8.582999999999508e-06, 8.59800000000202e-06, 8.582999999999508e-06, 8.569999999999411e-06, 8.624999999998217e-06, 8.582999999999508e-06, 8.568999999999938e-06, 8.582999999999508e-06, 8.569999999999411e-06, 8.582999999999508e-06, 8.541999999996802e-06]</msg>
<status status="PASS" starttime="20201115 22:11:20.944" endtime="20201115 22:11:20.946"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.940" endtime="20201115 22:11:20.947"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:20.949" endtime="20201115 22:11:20.950"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:20.953" endtime="20201115 22:11:20.972"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.951" endtime="20201115 22:11:20.972"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.948" endtime="20201115 22:11:20.973"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.580" endtime="20201115 22:11:20.973"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.578" endtime="20201115 22:11:20.973"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.577" endtime="20201115 22:11:20.974"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:20.976" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:20.984" endtime="20201115 22:11:21.004"></status>
</kw>
<msg timestamp="20201115 22:11:21.004" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:20.983" endtime="20201115 22:11:21.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:21.007" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:21.005" endtime="20201115 22:11:21.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:21.008" endtime="20201115 22:11:21.010"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.980" endtime="20201115 22:11:21.011"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.978" endtime="20201115 22:11:21.011"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:21.018" endtime="20201115 22:11:21.303"></status>
</kw>
<msg timestamp="20201115 22:11:21.306" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022424083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022432833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:21.016" endtime="20201115 22:11:21.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:21.314" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022424083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022432833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:21.307" endtime="20201115 22:11:21.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:21.315" endtime="20201115 22:11:21.317"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.014" endtime="20201115 22:11:21.318"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.012" endtime="20201115 22:11:21.318"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:21.322" level="INFO">${RESULT} = [{'time': 0.022432833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.749999999998342e-06, 'source_diff': 8.749999999998342e-06}, {'time': 0.022615819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:21.319" endtime="20201115 22:11:21.322"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:21.336" level="INFO">${OVERHEAD} = {'source_diff': [8.749999999998342e-06, 8.749999999998342e-06, 8.750000000001812e-06, 8.722999999998676e-06, 8.735999999998773e-06, 8.735999999998773e-06, 8.722000000002672e-06, 8.735999999998773e-06,...</msg>
<status status="PASS" starttime="20201115 22:11:21.323" endtime="20201115 22:11:21.336"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:21.340" level="INFO">NAME: 00-overhead-14-remove</msg>
<status status="PASS" starttime="20201115 22:11:21.339" endtime="20201115 22:11:21.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:21.350" level="INFO">VALUE: [8.749999999998342e-06, 8.749999999998342e-06, 8.750000000001812e-06, 8.722999999998676e-06, 8.735999999998773e-06, 8.735999999998773e-06, 8.722000000002672e-06, 8.735999999998773e-06, 8.749999999998342e-06, 8.749999999998342e-06, 8.722000000002672e-06, 8.735999999998773e-06, 8.735999999998773e-06, 8.722000000002672e-06, 8.735999999998773e-06, 8.776999999998009e-06, 8.737000000001716e-06, 8.736000000002242e-06, 8.736000000002242e-06, 8.721999999999203e-06, 8.707999999999633e-06, 8.749999999998342e-06, 8.735999999998773e-06, 8.735999999998773e-06, 8.750000000001812e-06, 8.694000000000063e-06, 8.721999999999203e-06, 8.721999999999203e-06, 8.736000000002242e-06, 8.736999999998246e-06, 8.735999999998773e-06, 8.737000000001716e-06, 8.721999999999203e-06, 8.735999999998773e-06, 8.665999999997454e-06, 8.737000000001716e-06, 8.735999999998773e-06, 8.723000000002146e-06, 8.735999999998773e-06, 8.750000000001812e-06, 8.778000000000952e-06, 8.735999999998773e-06, 8.736000000002242e-06, 8.680000000000493e-06, 8.749999999998342e-06, 8.709000000002576e-06, 8.820000000003131e-06, 8.750000000001812e-06, 8.680999999999967e-06, 8.806000000000092e-06]</msg>
<status status="PASS" starttime="20201115 22:11:21.341" endtime="20201115 22:11:21.350"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.337" endtime="20201115 22:11:21.351"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:21.353" endtime="20201115 22:11:21.354"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:21.357" endtime="20201115 22:11:21.376"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.355" endtime="20201115 22:11:21.376"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.351" endtime="20201115 22:11:21.377"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.976" endtime="20201115 22:11:21.377"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.975" endtime="20201115 22:11:21.377"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.974" endtime="20201115 22:11:21.377"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:21.380" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:21.388" endtime="20201115 22:11:21.409"></status>
</kw>
<msg timestamp="20201115 22:11:21.410" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:21.387" endtime="20201115 22:11:21.410"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:21.412" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:21.411" endtime="20201115 22:11:21.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:21.413" endtime="20201115 22:11:21.415"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.384" endtime="20201115 22:11:21.415"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.382" endtime="20201115 22:11:21.415"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:21.422" endtime="20201115 22:11:21.708"></status>
</kw>
<msg timestamp="20201115 22:11:21.711" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022509028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022517917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:21.420" endtime="20201115 22:11:21.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:21.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022509028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022517917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:21.712" endtime="20201115 22:11:21.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:21.720" endtime="20201115 22:11:21.722"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.418" endtime="20201115 22:11:21.722"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.416" endtime="20201115 22:11:21.723"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:21.727" level="INFO">${RESULT} = [{'time': 0.022517917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.888999999998037e-06, 'source_diff': 8.888999999998037e-06}, {'time': 0.022712306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:21.723" endtime="20201115 22:11:21.727"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:21.741" level="INFO">${OVERHEAD} = {'source_diff': [8.888999999998037e-06, 8.959000000002826e-06, 8.889000000001507e-06, 8.860999999998898e-06, 8.888999999998037e-06, 8.902000000001603e-06, 8.902999999997607e-06, 8.888999999998037e-06,...</msg>
<status status="PASS" starttime="20201115 22:11:21.728" endtime="20201115 22:11:21.741"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:21.745" level="INFO">NAME: 00-overhead-15-remove</msg>
<status status="PASS" starttime="20201115 22:11:21.744" endtime="20201115 22:11:21.745"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:21.748" level="INFO">VALUE: [8.888999999998037e-06, 8.959000000002826e-06, 8.889000000001507e-06, 8.860999999998898e-06, 8.888999999998037e-06, 8.902000000001603e-06, 8.902999999997607e-06, 8.888999999998037e-06, 8.902999999997607e-06, 8.902999999997607e-06, 8.915999999997704e-06, 8.931000000000217e-06, 8.917000000000647e-06, 8.887999999998564e-06, 8.889000000001507e-06, 8.917000000000647e-06, 8.901999999998134e-06, 8.902999999997607e-06, 8.888999999998037e-06, 8.903000000001077e-06, 8.888999999998037e-06, 8.888999999998037e-06, 8.889000000001507e-06, 8.875000000001937e-06, 8.931000000000217e-06, 8.889000000001507e-06, 8.944999999999786e-06, 8.916000000001173e-06, 8.888999999998037e-06, 8.917000000000647e-06, 8.902999999997607e-06, 8.888999999998037e-06, 8.903000000001077e-06, 8.888999999998037e-06, 8.902999999997607e-06, 8.903000000001077e-06, 8.887999999998564e-06, 8.874999999998467e-06, 8.902000000001603e-06, 8.888999999998037e-06, 8.917000000000647e-06, 8.889000000001507e-06, 8.917000000000647e-06, 8.889000000001507e-06, 8.875000000001937e-06, 8.889000000001507e-06, 8.889000000004976e-06, 8.903000000004546e-06, 8.902999999997607e-06, 8.916000000004642e-06]</msg>
<status status="PASS" starttime="20201115 22:11:21.746" endtime="20201115 22:11:21.748"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.742" endtime="20201115 22:11:21.748"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:21.751" endtime="20201115 22:11:21.752"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:21.754" endtime="20201115 22:11:21.773"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.753" endtime="20201115 22:11:21.774"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.749" endtime="20201115 22:11:21.774"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.380" endtime="20201115 22:11:21.775"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.379" endtime="20201115 22:11:21.775"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.378" endtime="20201115 22:11:21.775"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:21.777" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:21.786" endtime="20201115 22:11:21.807"></status>
</kw>
<msg timestamp="20201115 22:11:21.807" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:21.784" endtime="20201115 22:11:21.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:21.810" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:21.808" endtime="20201115 22:11:21.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:21.811" endtime="20201115 22:11:21.812"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.782" endtime="20201115 22:11:21.813"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.780" endtime="20201115 22:11:21.813"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:21.820" endtime="20201115 22:11:22.108"></status>
</kw>
<msg timestamp="20201115 22:11:22.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022478764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022487792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:21.818" endtime="20201115 22:11:22.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:22.119" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022478764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022487792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:22.112" endtime="20201115 22:11:22.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:22.120" endtime="20201115 22:11:22.122"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.816" endtime="20201115 22:11:22.122"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.814" endtime="20201115 22:11:22.123"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:22.127" level="INFO">${RESULT} = [{'time': 0.022487792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.028000000001202e-06, 'source_diff': 9.028000000001202e-06}, {'time': 0.022690833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:22.124" endtime="20201115 22:11:22.127"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:22.140" level="INFO">${OVERHEAD} = {'source_diff': [9.028000000001202e-06, 9.055000000000868e-06, 9.040999999997829e-06, 9.000000000002062e-06, 9.069000000000438e-06, 9.069999999999911e-06, 9.096999999999578e-06, 9.083000000000008e-06,...</msg>
<status status="PASS" starttime="20201115 22:11:22.128" endtime="20201115 22:11:22.141"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:22.145" level="INFO">NAME: 00-overhead-16-remove</msg>
<status status="PASS" starttime="20201115 22:11:22.144" endtime="20201115 22:11:22.145"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:22.147" level="INFO">VALUE: [9.028000000001202e-06, 9.055000000000868e-06, 9.040999999997829e-06, 9.000000000002062e-06, 9.069000000000438e-06, 9.069999999999911e-06, 9.096999999999578e-06, 9.083000000000008e-06, 9.083999999999481e-06, 9.056000000000342e-06, 9.056000000000342e-06, 9.069999999999911e-06, 9.083000000000008e-06, 9.054999999997398e-06, 9.083999999999481e-06, 9.083999999999481e-06, 9.042000000000772e-06, 9.138999999998287e-06, 9.056000000000342e-06, 9.069000000000438e-06, 9.056000000000342e-06, 9.068999999996968e-06, 9.069000000000438e-06, 9.042000000000772e-06, 9.083999999999481e-06, 9.042000000000772e-06, 9.055999999996872e-06, 9.042000000000772e-06, 9.08400000000295e-06, 9.069000000000438e-06, 9.11200000000209e-06, 9.000000000002062e-06, 9.054999999997398e-06, 9.056000000000342e-06, 9.054999999997398e-06, 9.069000000000438e-06, 9.056000000000342e-06, 9.026999999998259e-06, 9.054999999997398e-06, 9.054999999997398e-06, 9.069999999999911e-06, 9.083000000000008e-06, 9.055000000000868e-06, 9.056000000000342e-06, 9.000000000002062e-06, 9.042000000000772e-06, 9.083000000000008e-06, 9.069000000000438e-06, 9.069999999999911e-06, 9.069000000000438e-06]</msg>
<status status="PASS" starttime="20201115 22:11:22.146" endtime="20201115 22:11:22.148"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.141" endtime="20201115 22:11:22.148"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:22.151" endtime="20201115 22:11:22.152"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:22.154" endtime="20201115 22:11:22.173"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.153" endtime="20201115 22:11:22.174"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.149" endtime="20201115 22:11:22.174"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.778" endtime="20201115 22:11:22.175"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.776" endtime="20201115 22:11:22.175"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.775" endtime="20201115 22:11:22.175"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:22.177" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:22.186" endtime="20201115 22:11:22.207"></status>
</kw>
<msg timestamp="20201115 22:11:22.208" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:22.184" endtime="20201115 22:11:22.208"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:22.210" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:22.209" endtime="20201115 22:11:22.210"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:22.211" endtime="20201115 22:11:22.213"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.182" endtime="20201115 22:11:22.213"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.180" endtime="20201115 22:11:22.214"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:22.220" endtime="20201115 22:11:22.506"></status>
</kw>
<msg timestamp="20201115 22:11:22.509" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022438486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022447708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:22.218" endtime="20201115 22:11:22.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:22.517" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022438486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022447708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:22.510" endtime="20201115 22:11:22.517"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:22.518" endtime="20201115 22:11:22.520"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.216" endtime="20201115 22:11:22.520"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.214" endtime="20201115 22:11:22.521"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:22.525" level="INFO">${RESULT} = [{'time': 0.022447708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.221999999999703e-06, 'source_diff': 9.221999999999703e-06}, {'time': 0.022663236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:22.521" endtime="20201115 22:11:22.525"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:22.538" level="INFO">${OVERHEAD} = {'source_diff': [9.221999999999703e-06, 9.235999999999273e-06, 9.249999999998842e-06, 9.277999999997982e-06, 9.222999999999176e-06, 9.235999999999273e-06, 9.181000000000467e-06, 9.222000000003172e-06,...</msg>
<status status="PASS" starttime="20201115 22:11:22.526" endtime="20201115 22:11:22.538"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:22.543" level="INFO">NAME: 00-overhead-17-remove</msg>
<status status="PASS" starttime="20201115 22:11:22.542" endtime="20201115 22:11:22.543"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:22.545" level="INFO">VALUE: [9.221999999999703e-06, 9.235999999999273e-06, 9.249999999998842e-06, 9.277999999997982e-06, 9.222999999999176e-06, 9.235999999999273e-06, 9.181000000000467e-06, 9.222000000003172e-06, 9.277999999997982e-06, 9.208000000000133e-06, 9.235999999999273e-06, 9.222999999999176e-06, 9.278000000001452e-06, 9.221999999999703e-06, 9.249999999998842e-06, 9.221999999999703e-06, 9.194000000000563e-06, 9.236000000002742e-06, 9.208000000000133e-06, 9.236999999998746e-06, 9.235999999999273e-06, 9.208000000000133e-06, 9.235999999999273e-06, 9.236000000002742e-06, 9.208000000000133e-06, 9.221999999999703e-06, 9.223000000002646e-06, 9.235999999999273e-06, 9.222000000003172e-06, 9.208000000000133e-06, 9.166000000001423e-06, 9.236000000002742e-06, 9.221999999999703e-06, 9.208999999999606e-06, 9.195000000000036e-06, 9.221999999999703e-06, 9.235999999999273e-06, 9.221999999999703e-06, 9.235999999999273e-06, 9.180000000000993e-06, 9.235999999999273e-06, 9.195000000003506e-06, 9.222000000003172e-06, 9.208999999996137e-06, 9.221999999996233e-06, 9.278000000001452e-06, 9.208999999996137e-06, 9.236000000002742e-06, 9.222000000003172e-06, 9.222000000003172e-06]</msg>
<status status="PASS" starttime="20201115 22:11:22.544" endtime="20201115 22:11:22.545"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.539" endtime="20201115 22:11:22.546"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:22.548" endtime="20201115 22:11:22.549"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:22.551" endtime="20201115 22:11:22.571"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.550" endtime="20201115 22:11:22.571"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.547" endtime="20201115 22:11:22.572"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.178" endtime="20201115 22:11:22.572"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.176" endtime="20201115 22:11:22.572"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.175" endtime="20201115 22:11:22.572"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:22.575" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:22.583" endtime="20201115 22:11:22.605"></status>
</kw>
<msg timestamp="20201115 22:11:22.605" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:22.582" endtime="20201115 22:11:22.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:22.608" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:22.606" endtime="20201115 22:11:22.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:22.609" endtime="20201115 22:11:22.611"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.579" endtime="20201115 22:11:22.611"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.577" endtime="20201115 22:11:22.612"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:22.618" endtime="20201115 22:11:22.905"></status>
</kw>
<msg timestamp="20201115 22:11:22.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022254819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022264208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:22.617" endtime="20201115 22:11:22.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:22.916" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022254819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022264208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:22.909" endtime="20201115 22:11:22.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:22.917" endtime="20201115 22:11:22.919"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.614" endtime="20201115 22:11:22.919"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.612" endtime="20201115 22:11:22.920"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:22.924" level="INFO">${RESULT} = [{'time': 0.022264208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.389000000002007e-06, 'source_diff': 9.389000000002007e-06}, {'time': 0.022491431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:22.921" endtime="20201115 22:11:22.924"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:22.937" level="INFO">${OVERHEAD} = {'source_diff': [9.389000000002007e-06, 9.388999999998537e-06, 9.389000000002007e-06, 9.387999999999064e-06, 9.346999999999828e-06, 9.431000000000717e-06, 9.374999999998967e-06, 9.402999999998107e-06,...</msg>
<status status="PASS" starttime="20201115 22:11:22.925" endtime="20201115 22:11:22.937"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:22.942" level="INFO">NAME: 00-overhead-18-remove</msg>
<status status="PASS" starttime="20201115 22:11:22.941" endtime="20201115 22:11:22.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:22.944" level="INFO">VALUE: [9.389000000002007e-06, 9.388999999998537e-06, 9.389000000002007e-06, 9.387999999999064e-06, 9.346999999999828e-06, 9.431000000000717e-06, 9.374999999998967e-06, 9.402999999998107e-06, 9.403000000001577e-06, 9.375000000002437e-06, 9.388999999998537e-06, 9.444000000000813e-06, 9.374999999998967e-06, 9.374999999998967e-06, 9.430000000001243e-06, 9.389000000002007e-06, 9.374999999998967e-06, 9.388999999998537e-06, 9.401999999998634e-06, 9.388999999998537e-06, 9.387999999999064e-06, 9.374999999998967e-06, 9.402999999998107e-06, 9.388999999998537e-06, 9.374999999998967e-06, 9.374999999998967e-06, 9.402999999998107e-06, 9.402999999998107e-06, 9.388999999998537e-06, 9.374999999998967e-06, 9.375000000002437e-06, 9.375000000002437e-06, 9.388999999998537e-06, 9.431000000000717e-06, 9.389000000002007e-06, 9.388999999998537e-06, 9.389000000002007e-06, 9.374999999998967e-06, 9.388999999998537e-06, 9.388999999998537e-06, 9.374999999998967e-06, 9.346999999999828e-06, 9.387999999999064e-06, 9.402999999998107e-06, 9.403000000005046e-06, 9.389000000005476e-06, 9.401999999998634e-06, 9.360999999999398e-06, 9.388999999998537e-06, 9.388999999998537e-06]</msg>
<status status="PASS" starttime="20201115 22:11:22.943" endtime="20201115 22:11:22.945"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.938" endtime="20201115 22:11:22.945"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:22.947" endtime="20201115 22:11:22.949"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:22.951" endtime="20201115 22:11:22.970"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.949" endtime="20201115 22:11:22.971"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.946" endtime="20201115 22:11:22.971"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.575" endtime="20201115 22:11:22.971"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.574" endtime="20201115 22:11:22.972"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.573" endtime="20201115 22:11:22.972"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:22.974" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:22.983" endtime="20201115 22:11:23.005"></status>
</kw>
<msg timestamp="20201115 22:11:23.006" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:22.982" endtime="20201115 22:11:23.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:23.008" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:23.007" endtime="20201115 22:11:23.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:23.009" endtime="20201115 22:11:23.011"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.979" endtime="20201115 22:11:23.011"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.976" endtime="20201115 22:11:23.012"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:23.018" endtime="20201115 22:11:23.304"></status>
</kw>
<msg timestamp="20201115 22:11:23.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022765375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022774931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:23.016" endtime="20201115 22:11:23.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:23.314" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022765375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022774931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:23.308" endtime="20201115 22:11:23.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:23.316" endtime="20201115 22:11:23.317"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:23.014" endtime="20201115 22:11:23.318"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:23.012" endtime="20201115 22:11:23.318"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:23.322" level="INFO">${RESULT} = [{'time': 0.022774931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.556000000000842e-06, 'source_diff': 9.556000000000842e-06}, {'time': 0.023015042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:23.319" endtime="20201115 22:11:23.322"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:23.335" level="INFO">${OVERHEAD} = {'source_diff': [9.556000000000842e-06, 9.541999999997802e-06, 9.499999999999093e-06, 9.556000000000842e-06, 9.528000000001702e-06, 9.541999999997802e-06, 9.555999999997372e-06, 9.499999999999093e-06,...</msg>
<status status="PASS" starttime="20201115 22:11:23.323" endtime="20201115 22:11:23.336"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:23.340" level="INFO">NAME: 00-overhead-19-remove</msg>
<status status="PASS" starttime="20201115 22:11:23.339" endtime="20201115 22:11:23.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:23.343" level="INFO">VALUE: [9.556000000000842e-06, 9.541999999997802e-06, 9.499999999999093e-06, 9.556000000000842e-06, 9.528000000001702e-06, 9.541999999997802e-06, 9.555999999997372e-06, 9.499999999999093e-06, 9.540999999998329e-06, 9.528000000001702e-06, 9.527999999998232e-06, 9.528000000001702e-06, 9.555999999997372e-06, 9.555999999997372e-06, 9.569000000000938e-06, 9.555000000001368e-06, 9.555000000001368e-06, 9.527999999998232e-06, 9.541999999997802e-06, 9.541999999997802e-06, 9.582999999997038e-06, 9.583000000000508e-06, 9.556000000000842e-06, 9.542000000001272e-06, 9.486000000002992e-06, 9.555999999997372e-06, 9.499999999999093e-06, 9.583999999999981e-06, 9.554999999997899e-06, 9.556000000000842e-06, 9.540999999998329e-06, 9.556000000000842e-06, 9.556000000000842e-06, 9.555999999997372e-06, 9.542000000001272e-06, 9.500000000002562e-06, 9.542000000001272e-06, 9.555000000001368e-06, 9.528000000001702e-06, 9.570000000000412e-06, 9.527999999994763e-06, 9.541999999994333e-06, 9.542000000001272e-06, 9.541999999994333e-06, 9.528000000001702e-06, 9.556000000000842e-06, 9.541000000001798e-06, 9.513000000002658e-06, 9.541000000001798e-06, 9.540999999994859e-06]</msg>
<status status="PASS" starttime="20201115 22:11:23.341" endtime="20201115 22:11:23.343"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:23.336" endtime="20201115 22:11:23.343"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:23.346" endtime="20201115 22:11:23.347"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:23.349" endtime="20201115 22:11:23.369"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:23.348" endtime="20201115 22:11:23.369"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:23.344" endtime="20201115 22:11:23.370"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.974" endtime="20201115 22:11:23.370"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.973" endtime="20201115 22:11:23.370"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.972" endtime="20201115 22:11:23.371"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:23.373" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:23.381" endtime="20201115 22:11:23.404"></status>
</kw>
<msg timestamp="20201115 22:11:23.405" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:23.380" endtime="20201115 22:11:23.405"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:23.407" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:23.406" endtime="20201115 22:11:23.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:23.408" endtime="20201115 22:11:23.410"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:23.377" endtime="20201115 22:11:23.410"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:23.375" endtime="20201115 22:11:23.411"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:23.417" endtime="20201115 22:11:23.704"></status>
</kw>
<msg timestamp="20201115 22:11:23.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022404028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022413722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:23.415" endtime="20201115 22:11:23.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:23.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022404028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022413722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:23.708" endtime="20201115 22:11:23.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:23.716" endtime="20201115 22:11:23.718"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:23.413" endtime="20201115 22:11:23.718"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:23.411" endtime="20201115 22:11:23.719"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:23.723" level="INFO">${RESULT} = [{'time': 0.022413722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.694000000001063e-06, 'source_diff': 9.694000000001063e-06}, {'time': 0.022667181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:23.719" endtime="20201115 22:11:23.723"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:23.736" level="INFO">${OVERHEAD} = {'source_diff': [9.694000000001063e-06, 9.709000000000106e-06, 9.708000000000633e-06, 9.722000000000203e-06, 9.708999999996637e-06, 9.680000000001493e-06, 9.708000000000633e-06, 9.722000000000203e-06,...</msg>
<status status="PASS" starttime="20201115 22:11:23.724" endtime="20201115 22:11:23.736"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:23.741" level="INFO">NAME: 00-overhead-20-remove</msg>
<status status="PASS" starttime="20201115 22:11:23.739" endtime="20201115 22:11:23.741"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:23.743" level="INFO">VALUE: [9.694000000001063e-06, 9.709000000000106e-06, 9.708000000000633e-06, 9.722000000000203e-06, 9.708999999996637e-06, 9.680000000001493e-06, 9.708000000000633e-06, 9.722000000000203e-06, 9.694000000001063e-06, 9.695000000000537e-06, 9.735999999999773e-06, 9.722000000000203e-06, 9.722999999999676e-06, 9.708000000000633e-06, 9.694000000001063e-06, 9.709000000000106e-06, 9.680000000001493e-06, 9.708000000000633e-06, 9.707999999997163e-06, 9.693999999997593e-06, 9.693999999997593e-06, 9.722000000000203e-06, 9.722000000000203e-06, 9.735999999999773e-06, 9.708000000000633e-06, 9.722000000000203e-06, 9.695000000000537e-06, 9.709000000000106e-06, 9.722999999999676e-06, 9.681000000000967e-06, 9.722000000000203e-06, 9.708000000000633e-06, 9.708000000000633e-06, 9.708000000000633e-06, 9.708000000000633e-06, 9.723000000003146e-06, 9.638999999998787e-06, 9.694000000004532e-06, 9.721999999996733e-06, 9.792000000001522e-06, 9.721999999996733e-06, 9.721999999996733e-06, 9.736000000003242e-06, 9.694999999997067e-06, 9.707999999997163e-06, 9.707999999997163e-06, 9.723000000003146e-06, 9.722000000003672e-06, 9.693999999997593e-06, 9.707999999997163e-06]</msg>
<status status="PASS" starttime="20201115 22:11:23.742" endtime="20201115 22:11:23.744"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:23.737" endtime="20201115 22:11:23.744"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:23.747" endtime="20201115 22:11:23.748"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:23.750" endtime="20201115 22:11:23.769"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:23.749" endtime="20201115 22:11:23.770"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:23.745" endtime="20201115 22:11:23.770"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:23.373" endtime="20201115 22:11:23.771"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:23.372" endtime="20201115 22:11:23.771"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:23.371" endtime="20201115 22:11:23.771"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:23.773" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:23.782" endtime="20201115 22:11:23.806"></status>
</kw>
<msg timestamp="20201115 22:11:23.806" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:23.780" endtime="20201115 22:11:23.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:23.809" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:23.807" endtime="20201115 22:11:23.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:23.810" endtime="20201115 22:11:23.811"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:23.778" endtime="20201115 22:11:23.812"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:23.776" endtime="20201115 22:11:23.812"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:23.818" endtime="20201115 22:11:24.106"></status>
</kw>
<msg timestamp="20201115 22:11:24.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022287167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022297042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:23.817" endtime="20201115 22:11:24.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:24.117" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022287167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022297042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:24.110" endtime="20201115 22:11:24.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:24.118" endtime="20201115 22:11:24.120"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:23.814" endtime="20201115 22:11:24.120"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:23.813" endtime="20201115 22:11:24.121"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:24.125" level="INFO">${RESULT} = [{'time': 0.022297042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.874999999999468e-06, 'source_diff': 9.874999999999468e-06}, {'time': 0.022564528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:24.121" endtime="20201115 22:11:24.125"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:24.138" level="INFO">${OVERHEAD} = {'source_diff': [9.874999999999468e-06, 9.945000000000787e-06, 9.792000000001522e-06, 9.888999999999037e-06, 9.860999999999898e-06, 9.889000000002507e-06, 9.874999999999468e-06, 9.874999999999468e-06,...</msg>
<status status="PASS" starttime="20201115 22:11:24.126" endtime="20201115 22:11:24.138"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:24.143" level="INFO">NAME: 00-overhead-21-remove</msg>
<status status="PASS" starttime="20201115 22:11:24.142" endtime="20201115 22:11:24.143"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:24.146" level="INFO">VALUE: [9.874999999999468e-06, 9.945000000000787e-06, 9.792000000001522e-06, 9.888999999999037e-06, 9.860999999999898e-06, 9.889000000002507e-06, 9.874999999999468e-06, 9.874999999999468e-06, 9.889000000002507e-06, 9.888999999999037e-06, 9.917000000001647e-06, 9.875000000002937e-06, 9.902999999998607e-06, 9.888999999999037e-06, 9.874999999999468e-06, 9.86200000000284e-06, 9.931000000001217e-06, 9.902000000002603e-06, 9.860999999999898e-06, 9.917000000001647e-06, 9.874999999999468e-06, 9.874999999999468e-06, 9.888999999999037e-06, 9.874999999999468e-06, 9.874999999999468e-06, 9.874999999999468e-06, 9.860999999999898e-06, 9.874999999999468e-06, 9.888999999999037e-06, 9.860999999999898e-06, 9.860999999999898e-06, 9.860999999999898e-06, 9.874999999999468e-06, 9.874999999999468e-06, 9.888999999999037e-06, 9.874999999999468e-06, 9.874999999999468e-06, 9.874999999999468e-06, 9.874999999999468e-06, 9.874999999999468e-06, 9.888999999999037e-06, 9.874999999999468e-06, 9.874999999999468e-06, 9.887999999999564e-06, 9.903000000005546e-06, 9.847999999999801e-06, 9.945000000004256e-06, 9.874999999999468e-06, 9.874999999999468e-06, 9.860999999999898e-06]</msg>
<status status="PASS" starttime="20201115 22:11:24.144" endtime="20201115 22:11:24.146"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:24.139" endtime="20201115 22:11:24.147"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:24.149" endtime="20201115 22:11:24.150"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:24.152" endtime="20201115 22:11:24.172"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:24.151" endtime="20201115 22:11:24.172"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:24.147" endtime="20201115 22:11:24.173"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:23.774" endtime="20201115 22:11:24.173"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:23.772" endtime="20201115 22:11:24.173"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:23.771" endtime="20201115 22:11:24.173"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:24.175" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:24.184" endtime="20201115 22:11:24.208"></status>
</kw>
<msg timestamp="20201115 22:11:24.209" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:24.183" endtime="20201115 22:11:24.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:24.211" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:24.210" endtime="20201115 22:11:24.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:24.212" endtime="20201115 22:11:24.214"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:24.180" endtime="20201115 22:11:24.214"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:24.178" endtime="20201115 22:11:24.215"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:24.221" endtime="20201115 22:11:24.509"></status>
</kw>
<msg timestamp="20201115 22:11:24.512" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022315028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022325069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:24.220" endtime="20201115 22:11:24.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:24.519" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022315028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022325069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:24.513" endtime="20201115 22:11:24.520"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:24.521" endtime="20201115 22:11:24.522"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:24.217" endtime="20201115 22:11:24.523"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:24.215" endtime="20201115 22:11:24.523"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:24.527" level="INFO">${RESULT} = [{'time': 0.022325069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0040999999998829e-05, 'source_diff': 1.0040999999998829e-05}, {'time': 0.022604778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:24.524" endtime="20201115 22:11:24.528"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:24.541" level="INFO">${OVERHEAD} = {'source_diff': [1.0040999999998829e-05, 1.0027999999998732e-05, 1.0028000000002202e-05, 9.972000000000453e-06, 1.0012999999999689e-05, 9.972000000000453e-06, 1.0042000000001772e-05, 1.004200000000177...</msg>
<status status="PASS" starttime="20201115 22:11:24.529" endtime="20201115 22:11:24.541"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:24.546" level="INFO">NAME: 00-overhead-22-remove</msg>
<status status="PASS" starttime="20201115 22:11:24.545" endtime="20201115 22:11:24.546"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:24.548" level="INFO">VALUE: [1.0040999999998829e-05, 1.0027999999998732e-05, 1.0028000000002202e-05, 9.972000000000453e-06, 1.0012999999999689e-05, 9.972000000000453e-06, 1.0042000000001772e-05, 1.0042000000001772e-05, 1.0056000000001342e-05, 1.0040999999998829e-05, 1.0083000000001008e-05, 1.0027999999998732e-05, 1.0027999999998732e-05, 1.0027999999998732e-05, 1.0042000000001772e-05, 1.0041999999998302e-05, 1.0027999999998732e-05, 1.0069000000001438e-05, 1.0054999999998399e-05, 1.0026999999999259e-05, 1.0040999999998829e-05, 1.0027999999998732e-05, 1.0041999999998302e-05, 1.0027000000002728e-05, 1.0056000000001342e-05, 1.0042000000001772e-05, 1.0056000000001342e-05, 1.0041999999998302e-05, 1.0042000000001772e-05, 1.0041000000002298e-05, 1.0028000000002202e-05, 1.0041999999998302e-05, 1.0027000000002728e-05, 1.0028000000002202e-05, 1.0041000000002298e-05, 1.0027999999995263e-05, 1.004099999999536e-05, 1.002699999999579e-05, 1.0000000000003062e-05, 1.0042000000001772e-05, 1.0041000000002298e-05, 1.0042000000001772e-05, 1.0028000000002202e-05, 1.0041000000002298e-05, 1.0028000000002202e-05, 1.0027999999995263e-05, 1.0041000000002298e-05, 1.0068999999994499e-05, 1.0041000000002298e-05, 1.0056000000001342e-05]</msg>
<status status="PASS" starttime="20201115 22:11:24.547" endtime="20201115 22:11:24.549"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:24.542" endtime="20201115 22:11:24.549"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:24.551" endtime="20201115 22:11:24.552"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:24.555" endtime="20201115 22:11:24.574"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:24.553" endtime="20201115 22:11:24.574"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:24.550" endtime="20201115 22:11:24.575"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:24.176" endtime="20201115 22:11:24.575"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:24.174" endtime="20201115 22:11:24.575"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:24.174" endtime="20201115 22:11:24.576"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:24.578" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:24.586" endtime="20201115 22:11:24.611"></status>
</kw>
<msg timestamp="20201115 22:11:24.612" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:24.585" endtime="20201115 22:11:24.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:24.614" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:24.613" endtime="20201115 22:11:24.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:24.615" endtime="20201115 22:11:24.617"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:24.582" endtime="20201115 22:11:24.617"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:24.580" endtime="20201115 22:11:24.617"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:24.624" endtime="20201115 22:11:24.909"></status>
</kw>
<msg timestamp="20201115 22:11:24.912" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022316125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022326306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:24.622" endtime="20201115 22:11:24.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:24.920" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022316125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022326306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:24.913" endtime="20201115 22:11:24.921"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:24.922" endtime="20201115 22:11:24.923"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:24.620" endtime="20201115 22:11:24.924"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:24.618" endtime="20201115 22:11:24.924"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:24.928" level="INFO">${RESULT} = [{'time': 0.022326306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0181000000001467e-05, 'source_diff': 1.0181000000001467e-05}, {'time': 0.022620292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:24.925" endtime="20201115 22:11:24.928"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:24.942" level="INFO">${OVERHEAD} = {'source_diff': [1.0181000000001467e-05, 1.0195000000001037e-05, 1.0152999999998857e-05, 1.0195000000001037e-05, 1.0209000000000606e-05, 1.0194999999997567e-05, 1.0209000000000606e-05, 1.0181000000001...</msg>
<status status="PASS" starttime="20201115 22:11:24.929" endtime="20201115 22:11:24.942"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:24.946" level="INFO">NAME: 00-overhead-23-remove</msg>
<status status="PASS" starttime="20201115 22:11:24.945" endtime="20201115 22:11:24.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:24.949" level="INFO">VALUE: [1.0181000000001467e-05, 1.0195000000001037e-05, 1.0152999999998857e-05, 1.0195000000001037e-05, 1.0209000000000606e-05, 1.0194999999997567e-05, 1.0209000000000606e-05, 1.0181000000001467e-05, 1.0207999999997663e-05, 1.0152999999998857e-05, 1.0194000000001563e-05, 1.0208000000001133e-05, 1.0166999999998427e-05, 1.0181000000001467e-05, 1.0193999999998093e-05, 1.0194000000001563e-05, 1.0124999999999718e-05, 1.0209000000000606e-05, 1.0193999999998093e-05, 1.0208000000001133e-05, 1.0194999999997567e-05, 1.0195000000001037e-05, 1.0208000000001133e-05, 1.0221999999997233e-05, 1.0207999999997663e-05, 1.0222000000000703e-05, 1.0195000000001037e-05, 1.0208000000001133e-05, 1.0181000000001467e-05, 1.0179999999998524e-05, 1.0181000000001467e-05, 1.0194999999997567e-05, 1.0195000000004506e-05, 1.0193999999998093e-05, 1.0209000000004076e-05, 1.0193999999998093e-05, 1.0193999999998093e-05, 1.0111000000000148e-05, 1.0180999999997997e-05, 1.0181000000004936e-05, 1.0179999999998524e-05, 1.0208000000004602e-05, 1.0208999999997137e-05, 1.0250000000003312e-05, 1.0194999999997567e-05, 1.0207999999997663e-05, 1.0179999999998524e-05, 1.0193999999998093e-05, 1.0193999999998093e-05, 1.0181000000004936e-05]</msg>
<status status="PASS" starttime="20201115 22:11:24.948" endtime="20201115 22:11:24.949"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:24.943" endtime="20201115 22:11:24.950"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:24.952" endtime="20201115 22:11:24.953"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:24.955" endtime="20201115 22:11:24.975"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:24.954" endtime="20201115 22:11:24.975"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:24.950" endtime="20201115 22:11:24.976"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:24.578" endtime="20201115 22:11:24.976"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:24.577" endtime="20201115 22:11:24.976"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:24.576" endtime="20201115 22:11:24.977"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:24.979" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:24.987" endtime="20201115 22:11:25.013"></status>
</kw>
<msg timestamp="20201115 22:11:25.013" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:24.986" endtime="20201115 22:11:25.013"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:25.016" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:25.014" endtime="20201115 22:11:25.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:25.017" endtime="20201115 22:11:25.018"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:24.983" endtime="20201115 22:11:25.019"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:24.981" endtime="20201115 22:11:25.019"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:25.026" endtime="20201115 22:11:25.314"></status>
</kw>
<msg timestamp="20201115 22:11:25.317" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022506431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022516792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:25.025" endtime="20201115 22:11:25.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:25.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022506431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022516792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:25.318" endtime="20201115 22:11:25.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:25.326" endtime="20201115 22:11:25.328"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:25.022" endtime="20201115 22:11:25.328"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:25.020" endtime="20201115 22:11:25.329"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:25.333" level="INFO">${RESULT} = [{'time': 0.022516792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0361000000000398e-05, 'source_diff': 1.0361000000000398e-05}, {'time': 0.022824333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:25.329" endtime="20201115 22:11:25.333"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:25.346" level="INFO">${OVERHEAD} = {'source_diff': [1.0361000000000398e-05, 1.0346999999997358e-05, 1.0361000000000398e-05, 1.0333000000001258e-05, 1.0361000000000398e-05, 1.0361999999999871e-05, 1.0415999999999204e-05, 1.0347000000000...</msg>
<status status="PASS" starttime="20201115 22:11:25.334" endtime="20201115 22:11:25.347"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:25.351" level="INFO">NAME: 00-overhead-24-remove</msg>
<status status="PASS" starttime="20201115 22:11:25.350" endtime="20201115 22:11:25.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:25.353" level="INFO">VALUE: [1.0361000000000398e-05, 1.0346999999997358e-05, 1.0361000000000398e-05, 1.0333000000001258e-05, 1.0361000000000398e-05, 1.0361999999999871e-05, 1.0415999999999204e-05, 1.0347000000000828e-05, 1.0361000000000398e-05, 1.0347000000000828e-05, 1.0374999999999968e-05, 1.0361999999999871e-05, 1.0374999999999968e-05, 1.0361000000000398e-05, 1.0361000000000398e-05, 1.0361000000000398e-05, 1.0361000000000398e-05, 1.0374999999999968e-05, 1.0360999999996928e-05, 1.0361999999999871e-05, 1.0361000000000398e-05, 1.0347000000000828e-05, 1.0361000000000398e-05, 1.0347000000000828e-05, 1.0347000000000828e-05, 1.0348000000000301e-05, 1.0401999999999634e-05, 1.0319000000001688e-05, 1.0361000000000398e-05, 1.0374999999999968e-05, 1.0346999999993889e-05, 1.0361000000000398e-05, 1.0361000000000398e-05, 1.0374999999999968e-05, 1.0361000000000398e-05, 1.0333000000001258e-05, 1.0361000000000398e-05, 1.0374999999999968e-05, 1.0374999999999968e-05, 1.0361000000000398e-05, 1.0361000000000398e-05, 1.0361000000000398e-05, 1.0305999999994653e-05, 1.0374999999999968e-05, 1.0347000000000828e-05, 1.0347000000000828e-05, 1.0388999999999537e-05, 1.0388000000000064e-05, 1.0374999999999968e-05, 1.0348000000000301e-05]</msg>
<status status="PASS" starttime="20201115 22:11:25.352" endtime="20201115 22:11:25.354"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:25.347" endtime="20201115 22:11:25.354"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:25.356" endtime="20201115 22:11:25.357"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:25.360" endtime="20201115 22:11:25.379"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:25.358" endtime="20201115 22:11:25.379"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:25.355" endtime="20201115 22:11:25.380"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:24.979" endtime="20201115 22:11:25.380"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:24.978" endtime="20201115 22:11:25.380"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:24.977" endtime="20201115 22:11:25.381"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:25.383" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:25.391" endtime="20201115 22:11:25.418"></status>
</kw>
<msg timestamp="20201115 22:11:25.418" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:25.390" endtime="20201115 22:11:25.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:25.421" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:25.420" endtime="20201115 22:11:25.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:25.422" endtime="20201115 22:11:25.424"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:25.387" endtime="20201115 22:11:25.424"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:25.385" endtime="20201115 22:11:25.425"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:25.431" endtime="20201115 22:11:25.717"></status>
</kw>
<msg timestamp="20201115 22:11:25.720" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022421944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022432431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:25.430" endtime="20201115 22:11:25.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:25.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022421944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022432431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:25.721" endtime="20201115 22:11:25.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:25.729" endtime="20201115 22:11:25.730"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:25.427" endtime="20201115 22:11:25.731"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:25.425" endtime="20201115 22:11:25.731"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:25.735" level="INFO">${RESULT} = [{'time': 0.022432431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0486999999999996e-05, 'source_diff': 1.0486999999999996e-05}, {'time': 0.022753778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:25.732" endtime="20201115 22:11:25.735"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:25.749" level="INFO">${OVERHEAD} = {'source_diff': [1.0486999999999996e-05, 1.0527999999999232e-05, 1.0570000000001412e-05, 1.0526999999999759e-05, 1.0540999999999329e-05, 1.0513999999999663e-05, 1.0541999999998802e-05, 1.0500000000000...</msg>
<status status="PASS" starttime="20201115 22:11:25.736" endtime="20201115 22:11:25.749"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:25.753" level="INFO">NAME: 00-overhead-25-remove</msg>
<status status="PASS" starttime="20201115 22:11:25.752" endtime="20201115 22:11:25.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:25.756" level="INFO">VALUE: [1.0486999999999996e-05, 1.0527999999999232e-05, 1.0570000000001412e-05, 1.0526999999999759e-05, 1.0540999999999329e-05, 1.0513999999999663e-05, 1.0541999999998802e-05, 1.0500000000000093e-05, 1.0540999999999329e-05, 1.0542000000002272e-05, 1.0555000000002368e-05, 1.0526999999999759e-05, 1.0458000000001383e-05, 1.0541999999998802e-05, 1.0528000000002702e-05, 1.0513999999999663e-05, 1.0486000000000523e-05, 1.0528000000002702e-05, 1.0514000000003132e-05, 1.0500000000000093e-05, 1.0513999999999663e-05, 1.0527999999999232e-05, 1.0513999999999663e-05, 1.0527999999999232e-05, 1.0513999999999663e-05, 1.0458000000001383e-05, 1.0527999999999232e-05, 1.0500000000000093e-05, 1.0598000000000551e-05, 1.052699999999629e-05, 1.0527999999995763e-05, 1.0528000000002702e-05, 1.0513999999996193e-05, 1.054099999999586e-05, 1.0527999999995763e-05, 1.0527999999995763e-05, 1.0500000000003562e-05, 1.0542000000002272e-05, 1.0541999999995333e-05, 1.0542000000002272e-05, 1.0541000000002798e-05, 1.0486000000003992e-05, 1.0527999999995763e-05, 1.0556000000001842e-05, 1.0527999999995763e-05, 1.0500000000003562e-05, 1.0542000000002272e-05, 1.0610999999993709e-05, 1.0514000000003132e-05, 1.0514000000003132e-05]</msg>
<status status="PASS" starttime="20201115 22:11:25.754" endtime="20201115 22:11:25.756"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:25.750" endtime="20201115 22:11:25.756"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:25.759" endtime="20201115 22:11:25.760"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:25.762" endtime="20201115 22:11:25.781"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:25.761" endtime="20201115 22:11:25.782"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:25.757" endtime="20201115 22:11:25.782"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:25.383" endtime="20201115 22:11:25.783"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:25.382" endtime="20201115 22:11:25.783"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:25.381" endtime="20201115 22:11:25.783"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.855" endtime="20201115 22:11:25.783"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="teardown">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:25.788" endtime="20201115 22:11:25.807"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:25.786" endtime="20201115 22:11:25.808"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:25.784" endtime="20201115 22:11:25.808"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:11:15.783" endtime="20201115 22:11:25.808" critical="yes"></status>
</test>
<status status="PASS" starttime="20201115 22:11:03.450" endtime="20201115 22:11:25.814"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_ztimer_benchmarks</item>
<item name="RIOT-Board">esp32-wroom-32</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="PASS" starttime="20201115 22:11:01.520" endtime="20201115 22:11:25.833"></status>
</suite>
<statistics>
<total>
<stat pass="5" fail="0">Critical Tests</stat>
<stat pass="5" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="5" fail="0">APP_tests_ztimer_benchmarks</stat>
<stat pass="5" fail="0">BOARD_esp32-wroom-32</stat>
<stat pass="5" fail="0">dev</stat>
</tag>
<suite>
<stat pass="5" fail="0" id="s1" name="tests_ztimer_benchmarks">tests_ztimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_ztimer_benchmarks.Timer Version</stat>
<stat pass="4" fail="0" id="s1-s2" name="Timer Overhead">tests_ztimer_benchmarks.Timer Overhead</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
