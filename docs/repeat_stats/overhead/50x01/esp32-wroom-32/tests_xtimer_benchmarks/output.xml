<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201115 22:11:35.319" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201115 22:11:35.887" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201115 22:11:35.896" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201115 22:11:36.900" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201115 22:11:35.886" endtime="20201115 22:11:36.902"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201115 22:11:36.907" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201115 22:11:36.904" endtime="20201115 22:11:36.907"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.885" endtime="20201115 22:11:36.909"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:36.912" endtime="20201115 22:11:37.094"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.910" endtime="20201115 22:11:37.095"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:37.108" endtime="20201115 22:11:37.129"></status>
</kw>
<msg timestamp="20201115 22:11:37.129" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:37.106" endtime="20201115 22:11:37.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:37.132" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:37.130" endtime="20201115 22:11:37.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:11:37.135" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:11:37.133" endtime="20201115 22:11:37.135"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:37.104" endtime="20201115 22:11:37.136"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:37.101" endtime="20201115 22:11:37.137"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.100" endtime="20201115 22:11:37.137"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:11:37.141" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:11:37.140" endtime="20201115 22:11:37.141"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.138" endtime="20201115 22:11:37.141"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.099" endtime="20201115 22:11:37.142"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.099" endtime="20201115 22:11:37.142"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:37.143" endtime="20201115 22:11:37.144"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.097" endtime="20201115 22:11:37.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:37.145" endtime="20201115 22:11:37.147"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.096" endtime="20201115 22:11:37.147"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.883" endtime="20201115 22:11:37.148"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:37.154" endtime="20201115 22:11:37.174"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.153" endtime="20201115 22:11:37.174"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:37.189" endtime="20201115 22:11:37.206"></status>
</kw>
<msg timestamp="20201115 22:11:37.207" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:37.186" endtime="20201115 22:11:37.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:37.209" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:37.208" endtime="20201115 22:11:37.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:11:37.212" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:11:37.210" endtime="20201115 22:11:37.212"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:37.184" endtime="20201115 22:11:37.213"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:37.181" endtime="20201115 22:11:37.213"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.180" endtime="20201115 22:11:37.214"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:11:37.217" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:11:37.217" endtime="20201115 22:11:37.218"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.215" endtime="20201115 22:11:37.218"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.179" endtime="20201115 22:11:37.218"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.178" endtime="20201115 22:11:37.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:37.219" endtime="20201115 22:11:37.221"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.177" endtime="20201115 22:11:37.221"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.175" endtime="20201115 22:11:37.222"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.152" endtime="20201115 22:11:37.222"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:37.230" endtime="20201115 22:11:37.242"></status>
</kw>
<msg timestamp="20201115 22:11:37.243" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:37.228" endtime="20201115 22:11:37.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:37.245" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:37.244" endtime="20201115 22:11:37.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:37.246" endtime="20201115 22:11:37.248"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.226" endtime="20201115 22:11:37.248"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.223" endtime="20201115 22:11:37.249"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:37.254" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201115 22:11:37.253" endtime="20201115 22:11:37.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:37.256" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201115 22:11:37.255" endtime="20201115 22:11:37.256"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.250" endtime="20201115 22:11:37.257"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:11:37.148" endtime="20201115 22:11:37.258" critical="yes"></status>
</test>
<status status="PASS" starttime="20201115 22:11:35.431" endtime="20201115 22:11:37.262"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201115 22:11:37.320" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201115 22:11:37.328" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201115 22:11:38.355" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201115 22:11:37.318" endtime="20201115 22:11:38.356"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201115 22:11:38.358" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201115 22:11:38.357" endtime="20201115 22:11:38.358"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.316" endtime="20201115 22:11:38.359"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:38.361" endtime="20201115 22:11:38.639"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.360" endtime="20201115 22:11:38.640"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:38.652" endtime="20201115 22:11:38.673"></status>
</kw>
<msg timestamp="20201115 22:11:38.673" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:38.650" endtime="20201115 22:11:38.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:38.676" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:38.675" endtime="20201115 22:11:38.677"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:11:38.680" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:11:38.678" endtime="20201115 22:11:38.680"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:38.648" endtime="20201115 22:11:38.681"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:38.646" endtime="20201115 22:11:38.681"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.644" endtime="20201115 22:11:38.682"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:11:38.685" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:11:38.685" endtime="20201115 22:11:38.686"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.682" endtime="20201115 22:11:38.686"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.644" endtime="20201115 22:11:38.686"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.643" endtime="20201115 22:11:38.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:38.687" endtime="20201115 22:11:38.688"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.642" endtime="20201115 22:11:38.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:38.690" endtime="20201115 22:11:38.691"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.640" endtime="20201115 22:11:38.692"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.315" endtime="20201115 22:11:38.692"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO/">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:38.699" endtime="20201115 22:11:38.719"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.697" endtime="20201115 22:11:38.719"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:38.732" endtime="20201115 22:11:38.749"></status>
</kw>
<msg timestamp="20201115 22:11:38.749" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:38.731" endtime="20201115 22:11:38.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:38.752" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:38.751" endtime="20201115 22:11:38.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:11:38.755" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:11:38.753" endtime="20201115 22:11:38.755"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:38.728" endtime="20201115 22:11:38.756"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:38.726" endtime="20201115 22:11:38.757"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.725" endtime="20201115 22:11:38.757"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:11:38.761" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:11:38.760" endtime="20201115 22:11:38.761"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.758" endtime="20201115 22:11:38.761"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.724" endtime="20201115 22:11:38.761"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.723" endtime="20201115 22:11:38.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:38.762" endtime="20201115 22:11:38.764"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.722" endtime="20201115 22:11:38.764"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.720" endtime="20201115 22:11:38.765"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.695" endtime="20201115 22:11:38.765"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure GPIO Overhead</arg>
</arguments>
<msg timestamp="20201115 22:11:38.768" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:38.776" endtime="20201115 22:11:38.791"></status>
</kw>
<msg timestamp="20201115 22:11:38.791" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:38.774" endtime="20201115 22:11:38.791"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:38.794" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:38.792" endtime="20201115 22:11:38.794"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:38.795" endtime="20201115 22:11:38.796"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.771" endtime="20201115 22:11:38.797"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.770" endtime="20201115 22:11:38.797"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:38.804" endtime="20201115 22:11:39.072"></status>
</kw>
<msg timestamp="20201115 22:11:39.074" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066477597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066483014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:38.802" endtime="20201115 22:11:39.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:39.080" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066477597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066483014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:39.075" endtime="20201115 22:11:39.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:39.081" endtime="20201115 22:11:39.083"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.800" endtime="20201115 22:11:39.084"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.798" endtime="20201115 22:11:39.084"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:39.087" level="INFO">${RESULT} = [{'time': 0.066483014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.417000000007555e-06, 'source_diff': 5.417000000007555e-06}, {'time': 0.066491028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:39.085" endtime="20201115 22:11:39.088"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:39.096" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:39.088" endtime="20201115 22:11:39.096"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:39.100" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201115 22:11:39.099" endtime="20201115 22:11:39.101"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:39.103" level="INFO">VALUE: [5.417000000007555e-06, 4.041999999995771e-06, 3.1809999999909966e-06, 5.2360000000056806e-06, 6.207999999993663e-06, 5.026999999990789e-06, 3.1669999999983656e-06, 6.042000000011649e-06, 2.5980000000064285e-06, 5.971999999992983e-06, 4.778000000010829e-06, 5.040999999997298e-06, 2.7639999999884424e-06, 4.0270000000036665e-06, 6.249999999999312e-06, 2.8200000000006e-06, 2.5000000000025002e-06, 5.34800000000224e-06, 3.55600000000178e-06, 3.0550000000018063e-06, 3.915999999992703e-06, 4.944999999992317e-06, 5.7229999999991454e-06, 3.861000000007775e-06, 4.2910000000034865e-06]</msg>
<status status="PASS" starttime="20201115 22:11:39.101" endtime="20201115 22:11:39.103"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.097" endtime="20201115 22:11:39.103"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:39.106" endtime="20201115 22:11:39.107"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:39.109" endtime="20201115 22:11:39.128"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.107" endtime="20201115 22:11:39.129"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.104" endtime="20201115 22:11:39.129"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.768" endtime="20201115 22:11:39.130"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.767" endtime="20201115 22:11:39.130"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:39.135" endtime="20201115 22:11:39.154"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.133" endtime="20201115 22:11:39.155"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.132" endtime="20201115 22:11:39.155"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:11:38.692" endtime="20201115 22:11:39.156" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:39.165" endtime="20201115 22:11:39.184"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.164" endtime="20201115 22:11:39.185"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:39.199" endtime="20201115 22:11:39.216"></status>
</kw>
<msg timestamp="20201115 22:11:39.216" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:39.197" endtime="20201115 22:11:39.216"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:39.219" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:39.217" endtime="20201115 22:11:39.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:11:39.222" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:11:39.220" endtime="20201115 22:11:39.222"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:39.194" endtime="20201115 22:11:39.222"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:39.191" endtime="20201115 22:11:39.223"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.190" endtime="20201115 22:11:39.223"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:11:39.227" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:11:39.226" endtime="20201115 22:11:39.228"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.224" endtime="20201115 22:11:39.228"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.189" endtime="20201115 22:11:39.228"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.189" endtime="20201115 22:11:39.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:39.229" endtime="20201115 22:11:39.231"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.187" endtime="20201115 22:11:39.231"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.186" endtime="20201115 22:11:39.232"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.162" endtime="20201115 22:11:39.232"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer Now Overhead</arg>
</arguments>
<msg timestamp="20201115 22:11:39.235" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:39.243" endtime="20201115 22:11:39.258"></status>
</kw>
<msg timestamp="20201115 22:11:39.258" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:39.241" endtime="20201115 22:11:39.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:39.261" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:39.260" endtime="20201115 22:11:39.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:39.262" endtime="20201115 22:11:39.264"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.238" endtime="20201115 22:11:39.264"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.237" endtime="20201115 22:11:39.265"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:39.271" endtime="20201115 22:11:39.560"></status>
</kw>
<msg timestamp="20201115 22:11:39.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067114917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067121125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:39.269" endtime="20201115 22:11:39.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:39.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067114917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067121125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:39.564" endtime="20201115 22:11:39.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:39.572" endtime="20201115 22:11:39.574"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.267" endtime="20201115 22:11:39.574"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.265" endtime="20201115 22:11:39.575"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:39.579" level="INFO">${RESULT} = [{'time': 0.067121125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.208000000007541e-06, 'source_diff': 6.208000000007541e-06}, {'time': 0.067127958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:39.575" endtime="20201115 22:11:39.579"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:39.592" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:39.580" endtime="20201115 22:11:39.592"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:39.596" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201115 22:11:39.595" endtime="20201115 22:11:39.596"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:39.598" level="INFO">VALUE: [6.208000000007541e-06, 1.8749999999984057e-06, 1.8620000000052483e-06, 1.846999999999266e-06, 1.8480000000126173e-06, 1.8199999999995997e-06, 1.8749999999984057e-06, 1.8749999999984057e-06, 1.9029999999975455e-06, 1.8610000000057747e-06, 1.8470000000131437e-06, 1.846999999999266e-06, 1.860999999991897e-06, 1.860999999991897e-06, 1.832999999992757e-06, 1.8610000000057747e-06, 1.9169999999901766e-06, 1.860999999991897e-06, 1.8890000000049145e-06, 1.9299999999972117e-06, 1.8749999999984057e-06, 1.8610000000057747e-06, 1.8610000000057747e-06, 1.8749999999984057e-06, 1.860999999991897e-06, 1.8610000000057747e-06, 1.8610000000057747e-06, 1.9029999999975455e-06, 1.846999999999266e-06, 1.8610000000057747e-06, 1.8470000000131437e-06, 1.8749999999984057e-06, 1.8610000000057747e-06, 1.8610000000057747e-06, 1.8749999999984057e-06, 1.846999999999266e-06, 1.8750000000122835e-06, 1.846999999999266e-06, 1.8610000000057747e-06, 1.860999999991897e-06, 1.8610000000057747e-06, 1.915999999990703e-06, 1.860999999991897e-06, 1.8610000000057747e-06, 1.832999999992757e-06, 1.8610000000057747e-06, 1.8749999999984057e-06, 1.8749999999984057e-06, 1.846999999999266e-06, 1.860999999991897e-06]</msg>
<status status="PASS" starttime="20201115 22:11:39.597" endtime="20201115 22:11:39.606"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.593" endtime="20201115 22:11:39.607"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:39.609" endtime="20201115 22:11:39.610"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:39.612" endtime="20201115 22:11:39.632"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.611" endtime="20201115 22:11:39.632"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.607" endtime="20201115 22:11:39.633"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.235" endtime="20201115 22:11:39.633"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.234" endtime="20201115 22:11:39.633"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:39.638" endtime="20201115 22:11:39.657"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.637" endtime="20201115 22:11:39.658"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.635" endtime="20201115 22:11:39.658"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:11:39.159" endtime="20201115 22:11:39.659" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set List">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:39.668" endtime="20201115 22:11:39.687"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.667" endtime="20201115 22:11:39.688"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:39.703" endtime="20201115 22:11:39.721"></status>
</kw>
<msg timestamp="20201115 22:11:39.721" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:39.701" endtime="20201115 22:11:39.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:39.724" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:39.722" endtime="20201115 22:11:39.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:11:39.727" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:11:39.725" endtime="20201115 22:11:39.727"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:39.698" endtime="20201115 22:11:39.728"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:39.695" endtime="20201115 22:11:39.728"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.693" endtime="20201115 22:11:39.729"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:11:39.733" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:11:39.732" endtime="20201115 22:11:39.733"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.730" endtime="20201115 22:11:39.733"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.693" endtime="20201115 22:11:39.733"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.692" endtime="20201115 22:11:39.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:39.734" endtime="20201115 22:11:39.736"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.691" endtime="20201115 22:11:39.736"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.689" endtime="20201115 22:11:39.737"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.665" endtime="20201115 22:11:39.737"></status>
</kw>
<kw name="${n} IN RANGE [ 25 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:39.741" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:39.750" endtime="20201115 22:11:39.765"></status>
</kw>
<msg timestamp="20201115 22:11:39.765" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:39.748" endtime="20201115 22:11:39.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:39.768" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:39.766" endtime="20201115 22:11:39.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:39.769" endtime="20201115 22:11:39.771"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.745" endtime="20201115 22:11:39.771"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.743" endtime="20201115 22:11:39.772"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:39.778" endtime="20201115 22:11:40.064"></status>
</kw>
<msg timestamp="20201115 22:11:40.067" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072286917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.072312875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:39.777" endtime="20201115 22:11:40.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:40.075" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072286917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.072312875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:40.068" endtime="20201115 22:11:40.076"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:40.077" endtime="20201115 22:11:40.078"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.774" endtime="20201115 22:11:40.079"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.772" endtime="20201115 22:11:40.079"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:40.083" level="INFO">${RESULT} = [{'time': 0.072312875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5957999999992598e-05, 'source_diff': 2.5957999999992598e-05}, {'time': 0.072389569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:40.080" endtime="20201115 22:11:40.083"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:40.098" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:40.084" endtime="20201115 22:11:40.098"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:40.103" level="INFO">NAME: 00-overhead-1-set</msg>
<status status="PASS" starttime="20201115 22:11:40.102" endtime="20201115 22:11:40.103"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:40.105" level="INFO">VALUE: [2.5957999999992598e-05, 7.943999999995843e-06, 7.986000000001492e-06, 7.944999999995317e-06, 7.958000000002352e-06, 7.944000000009721e-06, 7.972000000008861e-06, 7.973000000008335e-06, 7.887999999997564e-06, 7.971999999994983e-06, 7.958000000002352e-06, 7.945000000009195e-06, 7.971999999994983e-06, 7.958000000002352e-06, 7.874999999990528e-06, 7.931000000002686e-06, 7.903000000003546e-06, 7.943999999995843e-06, 7.888999999997037e-06, 7.916999999996177e-06, 7.944999999995317e-06, 7.944999999995317e-06, 7.902000000004072e-06, 7.943999999995843e-06, 7.986000000001492e-06, 7.971999999994983e-06, 8.014000000000632e-06, 7.944999999995317e-06, 7.944999999995317e-06, 7.930000000003212e-06, 7.930000000003212e-06, 7.958000000002352e-06, 7.944999999995317e-06, 7.958000000002352e-06, 7.929999999989334e-06, 7.944999999995317e-06, 7.931000000002686e-06, 7.959000000001826e-06, 8.014000000000632e-06, 7.944999999995317e-06, 7.943999999995843e-06, 7.930000000003212e-06, 7.943999999995843e-06, 8.01299999998728e-06, 8.013999999986754e-06, 7.943999999995843e-06, 7.959000000001826e-06, 7.957999999988474e-06, 7.943999999995843e-06, 7.944000000009721e-06]</msg>
<status status="PASS" starttime="20201115 22:11:40.104" endtime="20201115 22:11:40.105"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.099" endtime="20201115 22:11:40.106"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:40.108" endtime="20201115 22:11:40.109"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:40.112" endtime="20201115 22:11:40.131"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.110" endtime="20201115 22:11:40.131"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.107" endtime="20201115 22:11:40.132"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.741" endtime="20201115 22:11:40.133"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.740" endtime="20201115 22:11:40.133"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.739" endtime="20201115 22:11:40.133"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:40.135" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:40.144" endtime="20201115 22:11:40.158"></status>
</kw>
<msg timestamp="20201115 22:11:40.158" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:40.142" endtime="20201115 22:11:40.158"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:40.161" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:40.159" endtime="20201115 22:11:40.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:40.162" endtime="20201115 22:11:40.163"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.140" endtime="20201115 22:11:40.164"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.138" endtime="20201115 22:11:40.164"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:40.171" endtime="20201115 22:11:40.458"></status>
</kw>
<msg timestamp="20201115 22:11:40.461" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022432889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022437569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:40.169" endtime="20201115 22:11:40.461"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:40.469" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022432889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022437569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:40.462" endtime="20201115 22:11:40.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:40.470" endtime="20201115 22:11:40.472"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.166" endtime="20201115 22:11:40.472"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.165" endtime="20201115 22:11:40.473"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:40.477" level="INFO">${RESULT} = [{'time': 0.022437569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.679999999999962e-06, 'source_diff': 4.679999999999962e-06}, {'time': 0.02251825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:11:40.474" endtime="20201115 22:11:40.477"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:40.490" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:40.478" endtime="20201115 22:11:40.490"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:40.495" level="INFO">NAME: 00-overhead-2-set</msg>
<status status="PASS" starttime="20201115 22:11:40.494" endtime="20201115 22:11:40.495"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:40.497" level="INFO">VALUE: [4.679999999999962e-06, 4.693999999999532e-06, 4.6949999999990055e-06, 4.680999999999436e-06, 4.693999999999532e-06, 4.680999999999436e-06, 4.666000000000392e-06, 4.693999999999532e-06, 4.679999999999962e-06, 4.6949999999990055e-06, 4.6949999999990055e-06, 4.666999999999866e-06, 4.653000000000296e-06, 4.666999999999866e-06, 4.694000000003001e-06, 4.666999999999866e-06, 4.6949999999990055e-06, 4.679999999999962e-06, 4.653000000000296e-06, 4.680999999999436e-06, 4.680999999999436e-06, 4.666000000000392e-06, 4.653000000000296e-06, 4.693999999999532e-06, 4.680999999999436e-06, 4.680999999999436e-06, 4.680999999999436e-06, 4.666000000000392e-06, 4.653000000000296e-06, 4.666999999999866e-06, 4.665999999996923e-06, 4.6249999999976865e-06, 4.667000000003335e-06, 4.7499999999978115e-06, 4.652000000000822e-06, 4.6949999999990055e-06, 4.652999999996826e-06, 4.652999999996826e-06, 4.679999999999962e-06, 4.666999999999866e-06, 4.735999999998242e-06, 4.764000000000851e-06, 4.680999999999436e-06, 4.666999999999866e-06, 4.653000000000296e-06, 4.680999999999436e-06, 4.653000000000296e-06, 4.653000000000296e-06, 4.611000000001586e-06, 4.652000000000822e-06]</msg>
<status status="PASS" starttime="20201115 22:11:40.496" endtime="20201115 22:11:40.498"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.491" endtime="20201115 22:11:40.498"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:40.500" endtime="20201115 22:11:40.502"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:40.505" endtime="20201115 22:11:40.524"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.502" endtime="20201115 22:11:40.525"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.499" endtime="20201115 22:11:40.525"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.136" endtime="20201115 22:11:40.526"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.134" endtime="20201115 22:11:40.526"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.133" endtime="20201115 22:11:40.526"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:40.528" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:40.537" endtime="20201115 22:11:40.552"></status>
</kw>
<msg timestamp="20201115 22:11:40.552" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:40.536" endtime="20201115 22:11:40.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:40.555" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:40.553" endtime="20201115 22:11:40.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:40.556" endtime="20201115 22:11:40.557"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.533" endtime="20201115 22:11:40.558"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.531" endtime="20201115 22:11:40.558"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:40.565" endtime="20201115 22:11:40.852"></status>
</kw>
<msg timestamp="20201115 22:11:40.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022220986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022226278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:40.563" endtime="20201115 22:11:40.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:40.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022220986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022226278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:40.856" endtime="20201115 22:11:40.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:40.864" endtime="20201115 22:11:40.865"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.561" endtime="20201115 22:11:40.866"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.559" endtime="20201115 22:11:40.866"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:40.870" level="INFO">${RESULT} = [{'time': 0.022226278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.291999999997021e-06, 'source_diff': 5.291999999997021e-06}, {'time': 0.022311194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:40.867" endtime="20201115 22:11:40.871"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:40.884" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:40.871" endtime="20201115 22:11:40.884"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:40.888" level="INFO">NAME: 00-overhead-3-set</msg>
<status status="PASS" starttime="20201115 22:11:40.887" endtime="20201115 22:11:40.888"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:40.891" level="INFO">VALUE: [5.291999999997021e-06, 5.305000000000587e-06, 5.277999999997451e-06, 5.264000000001351e-06, 5.277000000001447e-06, 5.292000000000491e-06, 5.2499999999983116e-06, 5.292000000000491e-06, 5.374999999998437e-06, 5.278000000000921e-06, 5.306000000000061e-06, 5.278000000000921e-06, 5.278000000000921e-06, 5.292000000000491e-06, 5.292000000000491e-06, 5.292000000000491e-06, 5.3339999999992005e-06, 5.292000000000491e-06, 5.292000000000491e-06, 5.264000000001351e-06, 5.278000000000921e-06, 5.319000000000157e-06, 5.292000000000491e-06, 5.264000000001351e-06, 5.290999999997548e-06, 5.278000000000921e-06, 5.305000000000587e-06, 5.292000000000491e-06, 5.250000000001781e-06, 5.292000000000491e-06, 5.278000000000921e-06, 5.264000000001351e-06, 5.207999999999602e-06, 5.292000000000491e-06, 5.319000000000157e-06, 5.235999999998742e-06, 5.292000000000491e-06, 5.292000000000491e-06, 5.291000000001017e-06, 5.222999999998645e-06, 5.2499999999983116e-06, 5.2499999999983116e-06, 5.290999999997548e-06, 5.292000000000491e-06, 5.291000000001017e-06, 5.221999999999172e-06, 5.278000000000921e-06, 5.292000000000491e-06, 5.277999999997451e-06, 5.290999999997548e-06]</msg>
<status status="PASS" starttime="20201115 22:11:40.889" endtime="20201115 22:11:40.891"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.885" endtime="20201115 22:11:40.892"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:40.894" endtime="20201115 22:11:40.895"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:40.898" endtime="20201115 22:11:40.917"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.896" endtime="20201115 22:11:40.917"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.893" endtime="20201115 22:11:40.918"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.529" endtime="20201115 22:11:40.918"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.527" endtime="20201115 22:11:40.918"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.527" endtime="20201115 22:11:40.918"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:40.921" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:40.930" endtime="20201115 22:11:40.944"></status>
</kw>
<msg timestamp="20201115 22:11:40.945" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:40.928" endtime="20201115 22:11:40.945"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:40.947" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:40.946" endtime="20201115 22:11:40.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:40.948" endtime="20201115 22:11:40.950"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.925" endtime="20201115 22:11:40.951"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.923" endtime="20201115 22:11:40.951"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:40.957" endtime="20201115 22:11:41.245"></status>
</kw>
<msg timestamp="20201115 22:11:41.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022264361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022270264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:40.956" endtime="20201115 22:11:41.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:41.256" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022264361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022270264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:41.249" endtime="20201115 22:11:41.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:41.257" endtime="20201115 22:11:41.259"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.953" endtime="20201115 22:11:41.259"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.952" endtime="20201115 22:11:41.260"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:41.264" level="INFO">${RESULT} = [{'time': 0.022270264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.903000000001546e-06, 'source_diff': 5.903000000001546e-06}, {'time': 0.022360528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:41.260" endtime="20201115 22:11:41.264"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:41.277" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:41.265" endtime="20201115 22:11:41.277"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:41.282" level="INFO">NAME: 00-overhead-4-set</msg>
<status status="PASS" starttime="20201115 22:11:41.281" endtime="20201115 22:11:41.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:41.284" level="INFO">VALUE: [5.903000000001546e-06, 5.903000000001546e-06, 5.958000000000352e-06, 5.917000000001116e-06, 5.9029999999980765e-06, 5.903000000001546e-06, 5.8889999999985065e-06, 5.971999999999922e-06, 5.916999999997646e-06, 5.874999999998937e-06, 5.9029999999980765e-06, 5.889000000001976e-06, 5.889000000001976e-06, 5.874999999998937e-06, 5.9029999999980765e-06, 5.901999999998603e-06, 5.901999999998603e-06, 5.917000000001116e-06, 5.971999999999922e-06, 5.8889999999985065e-06, 5.929999999997743e-06, 5.887999999999033e-06, 5.915999999998173e-06, 5.887999999999033e-06, 5.847000000003266e-06, 5.889000000001976e-06, 5.903000000001546e-06, 5.8889999999985065e-06, 5.903000000001546e-06, 5.971999999999922e-06, 5.860999999999367e-06, 5.889000000001976e-06, 5.9029999999980765e-06, 5.916999999997646e-06, 5.8889999999985065e-06, 5.931000000000686e-06, 5.887999999999033e-06, 5.902000000002072e-06, 5.903000000001546e-06, 5.889000000001976e-06, 5.874999999998937e-06, 5.903000000001546e-06, 5.8339999999997005e-06, 5.889000000001976e-06, 5.901999999998603e-06, 5.916999999997646e-06, 5.889000000001976e-06, 5.9029999999980765e-06, 5.9029999999980765e-06, 5.903000000001546e-06]</msg>
<status status="PASS" starttime="20201115 22:11:41.283" endtime="20201115 22:11:41.284"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.278" endtime="20201115 22:11:41.285"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:41.287" endtime="20201115 22:11:41.288"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:41.291" endtime="20201115 22:11:41.310"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.289" endtime="20201115 22:11:41.311"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.286" endtime="20201115 22:11:41.311"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.921" endtime="20201115 22:11:41.311"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.920" endtime="20201115 22:11:41.312"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.919" endtime="20201115 22:11:41.312"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:41.314" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:41.323" endtime="20201115 22:11:41.337"></status>
</kw>
<msg timestamp="20201115 22:11:41.338" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:41.321" endtime="20201115 22:11:41.338"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:41.340" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:41.339" endtime="20201115 22:11:41.341"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:41.341" endtime="20201115 22:11:41.343"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.318" endtime="20201115 22:11:41.343"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.316" endtime="20201115 22:11:41.344"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:41.350" endtime="20201115 22:11:41.637"></status>
</kw>
<msg timestamp="20201115 22:11:41.640" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022022264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022028778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:41.349" endtime="20201115 22:11:41.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:41.648" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022022264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022028778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:41.641" endtime="20201115 22:11:41.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:41.650" endtime="20201115 22:11:41.651"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.346" endtime="20201115 22:11:41.652"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.344" endtime="20201115 22:11:41.652"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:41.656" level="INFO">${RESULT} = [{'time': 0.022028778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.513999999999132e-06, 'source_diff': 6.513999999999132e-06}, {'time': 0.022128917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:41.653" endtime="20201115 22:11:41.656"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:41.671" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:41.657" endtime="20201115 22:11:41.671"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:41.675" level="INFO">NAME: 00-overhead-5-set</msg>
<status status="PASS" starttime="20201115 22:11:41.674" endtime="20201115 22:11:41.675"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:41.678" level="INFO">VALUE: [6.513999999999132e-06, 6.4729999999998955e-06, 6.514000000002601e-06, 6.513999999999132e-06, 6.514000000002601e-06, 6.514000000002601e-06, 6.555999999997841e-06, 6.583000000000977e-06, 6.513999999999132e-06, 6.443999999997813e-06, 6.499999999999562e-06, 6.499999999999562e-06, 6.5279999999987015e-06, 6.499999999999562e-06, 6.499999999999562e-06, 6.485999999999992e-06, 6.513999999999132e-06, 6.499999999999562e-06, 6.513999999999132e-06, 6.459000000000326e-06, 6.499999999999562e-06, 6.499999999999562e-06, 6.5279999999987015e-06, 6.485999999999992e-06, 6.513999999999132e-06, 6.513999999999132e-06, 6.513999999999132e-06, 6.542000000001741e-06, 6.513999999999132e-06, 6.500000000003031e-06, 6.499999999999562e-06, 6.513999999999132e-06, 6.555000000001837e-06, 6.499999999999562e-06, 6.499999999999562e-06, 6.5279999999987015e-06, 6.499999999999562e-06, 6.5980000000000205e-06, 6.486999999999465e-06, 6.570000000000881e-06, 6.499999999999562e-06, 6.513999999999132e-06, 6.445000000000756e-06, 6.499999999999562e-06, 6.512999999999658e-06, 6.5279999999987015e-06, 6.499999999999562e-06, 6.513999999999132e-06, 6.514000000002601e-06, 6.499999999999562e-06]</msg>
<status status="PASS" starttime="20201115 22:11:41.676" endtime="20201115 22:11:41.678"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.672" endtime="20201115 22:11:41.679"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:41.681" endtime="20201115 22:11:41.682"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:41.684" endtime="20201115 22:11:41.703"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.683" endtime="20201115 22:11:41.704"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.679" endtime="20201115 22:11:41.704"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.314" endtime="20201115 22:11:41.705"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.313" endtime="20201115 22:11:41.705"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.312" endtime="20201115 22:11:41.705"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:41.707" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:41.716" endtime="20201115 22:11:41.731"></status>
</kw>
<msg timestamp="20201115 22:11:41.732" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:41.714" endtime="20201115 22:11:41.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:41.734" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:41.733" endtime="20201115 22:11:41.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:41.735" endtime="20201115 22:11:41.737"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.712" endtime="20201115 22:11:41.737"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.710" endtime="20201115 22:11:41.738"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:41.744" endtime="20201115 22:11:42.031"></status>
</kw>
<msg timestamp="20201115 22:11:42.035" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021961569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021968694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:41.742" endtime="20201115 22:11:42.035"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:42.043" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021961569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021968694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:42.036" endtime="20201115 22:11:42.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:42.044" endtime="20201115 22:11:42.045"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.740" endtime="20201115 22:11:42.046"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.738" endtime="20201115 22:11:42.046"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:42.050" level="INFO">${RESULT} = [{'time': 0.021968694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.125000000000187e-06, 'source_diff': 7.125000000000187e-06}, {'time': 0.022073486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:42.047" endtime="20201115 22:11:42.051"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:42.063" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:42.051" endtime="20201115 22:11:42.064"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:42.068" level="INFO">NAME: 00-overhead-6-set</msg>
<status status="PASS" starttime="20201115 22:11:42.067" endtime="20201115 22:11:42.068"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:42.070" level="INFO">VALUE: [7.125000000000187e-06, 7.125000000000187e-06, 7.111000000000617e-06, 7.125000000000187e-06, 7.1120000000000905e-06, 7.151999999999853e-06, 7.111000000000617e-06, 7.1529999999993266e-06, 7.138999999999757e-06, 7.1120000000000905e-06, 7.111000000000617e-06, 7.125000000000187e-06, 7.111000000000617e-06, 7.125000000000187e-06, 7.083999999997481e-06, 7.111000000000617e-06, 7.125000000000187e-06, 7.138999999999757e-06, 7.125000000000187e-06, 7.125000000000187e-06, 7.138999999999757e-06, 7.138999999999757e-06, 7.138999999999757e-06, 7.111000000000617e-06, 7.110999999997147e-06, 7.138999999999757e-06, 7.125000000000187e-06, 7.138999999999757e-06, 7.097000000001047e-06, 7.056000000001811e-06, 7.0980000000005206e-06, 7.111000000000617e-06, 7.111000000000617e-06, 7.111000000000617e-06, 7.138999999999757e-06, 7.125000000000187e-06, 7.138999999999757e-06, 7.097000000001047e-06, 7.138999999999757e-06, 7.153000000002796e-06, 7.110999999997147e-06, 7.125000000000187e-06, 7.0980000000005206e-06, 7.138999999999757e-06, 7.125000000000187e-06, 7.208999999997606e-06, 7.125000000000187e-06, 7.138999999999757e-06, 7.125000000000187e-06, 7.138999999999757e-06]</msg>
<status status="PASS" starttime="20201115 22:11:42.069" endtime="20201115 22:11:42.071"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.064" endtime="20201115 22:11:42.071"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:42.073" endtime="20201115 22:11:42.075"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:42.077" endtime="20201115 22:11:42.096"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.075" endtime="20201115 22:11:42.097"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.072" endtime="20201115 22:11:42.097"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.708" endtime="20201115 22:11:42.097"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.706" endtime="20201115 22:11:42.098"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.705" endtime="20201115 22:11:42.098"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:42.100" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:42.108" endtime="20201115 22:11:42.124"></status>
</kw>
<msg timestamp="20201115 22:11:42.124" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:42.107" endtime="20201115 22:11:42.125"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:42.127" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:42.125" endtime="20201115 22:11:42.128"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:42.128" endtime="20201115 22:11:42.130"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.104" endtime="20201115 22:11:42.131"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.102" endtime="20201115 22:11:42.131"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:42.137" endtime="20201115 22:11:42.423"></status>
</kw>
<msg timestamp="20201115 22:11:42.426" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021983819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021991556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:42.136" endtime="20201115 22:11:42.426"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:42.434" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021983819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021991556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:42.427" endtime="20201115 22:11:42.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:42.435" endtime="20201115 22:11:42.437"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.133" endtime="20201115 22:11:42.437"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.132" endtime="20201115 22:11:42.438"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:42.442" level="INFO">${RESULT} = [{'time': 0.021991556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.736999999997246e-06, 'source_diff': 7.736999999997246e-06}, {'time': 0.022102542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:42.438" endtime="20201115 22:11:42.442"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:42.455" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:42.443" endtime="20201115 22:11:42.455"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:42.459" level="INFO">NAME: 00-overhead-7-set</msg>
<status status="PASS" starttime="20201115 22:11:42.458" endtime="20201115 22:11:42.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:42.462" level="INFO">VALUE: [7.736999999997246e-06, 7.735999999997772e-06, 7.721999999998203e-06, 7.736000000001242e-06, 7.750000000000812e-06, 7.736000000001242e-06, 7.737000000000716e-06, 7.681000000002436e-06, 7.736000000001242e-06, 7.750000000000812e-06, 7.736000000001242e-06, 7.721999999998203e-06, 7.750000000000812e-06, 7.680999999998966e-06, 7.763000000000908e-06, 7.722000000001672e-06, 7.707999999998633e-06, 7.764000000000382e-06, 7.735999999997772e-06, 7.721999999998203e-06, 7.750000000000812e-06, 7.749999999997342e-06, 7.722999999997676e-06, 7.707999999998633e-06, 7.736000000001242e-06, 7.735999999997772e-06, 7.737000000000716e-06, 7.750000000000812e-06, 7.750000000000812e-06, 7.736000000001242e-06, 7.737000000000716e-06, 7.736000000001242e-06, 7.736000000001242e-06, 7.736000000001242e-06, 7.749999999997342e-06, 7.736000000001242e-06, 7.722000000001672e-06, 7.750000000000812e-06, 7.749999999997342e-06, 7.737000000000716e-06, 7.736000000001242e-06, 7.709000000001576e-06, 7.722000000001672e-06, 7.723000000001146e-06, 7.749999999997342e-06, 7.764000000000382e-06, 7.736000000001242e-06, 7.721999999998203e-06, 7.736000000001242e-06, 7.750000000000812e-06]</msg>
<status status="PASS" starttime="20201115 22:11:42.460" endtime="20201115 22:11:42.462"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.456" endtime="20201115 22:11:42.463"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:42.465" endtime="20201115 22:11:42.466"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:42.468" endtime="20201115 22:11:42.487"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.467" endtime="20201115 22:11:42.488"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.463" endtime="20201115 22:11:42.489"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.100" endtime="20201115 22:11:42.489"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.099" endtime="20201115 22:11:42.489"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.098" endtime="20201115 22:11:42.489"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:42.491" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:42.501" endtime="20201115 22:11:42.517"></status>
</kw>
<msg timestamp="20201115 22:11:42.517" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:42.499" endtime="20201115 22:11:42.517"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:42.520" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:42.518" endtime="20201115 22:11:42.520"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:42.521" endtime="20201115 22:11:42.522"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.496" endtime="20201115 22:11:42.523"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.494" endtime="20201115 22:11:42.523"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:42.530" endtime="20201115 22:11:42.817"></status>
</kw>
<msg timestamp="20201115 22:11:42.820" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022588222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022596569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:42.528" endtime="20201115 22:11:42.820"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:42.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022588222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022596569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:42.821" endtime="20201115 22:11:42.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:42.829" endtime="20201115 22:11:42.831"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.525" endtime="20201115 22:11:42.831"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.524" endtime="20201115 22:11:42.832"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:42.836" level="INFO">${RESULT} = [{'time': 0.022596569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.346999999998828e-06, 'source_diff': 8.346999999998828e-06}, {'time': 0.022716417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:42.832" endtime="20201115 22:11:42.836"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:42.849" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:42.836" endtime="20201115 22:11:42.849"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:42.853" level="INFO">NAME: 00-overhead-8-set</msg>
<status status="PASS" starttime="20201115 22:11:42.852" endtime="20201115 22:11:42.853"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:42.855" level="INFO">VALUE: [8.346999999998828e-06, 8.347999999998301e-06, 8.347000000002297e-06, 8.346999999998828e-06, 8.292000000000022e-06, 8.305999999999591e-06, 8.347999999998301e-06, 8.346999999998828e-06, 8.347000000002297e-06, 8.347000000002297e-06, 8.34800000000177e-06, 8.389000000001007e-06, 8.360999999998397e-06, 8.346999999998828e-06, 8.360999999998397e-06, 8.332999999999258e-06, 8.360999999998397e-06, 8.347000000002297e-06, 8.347000000002297e-06, 8.346999999998828e-06, 8.361999999997871e-06, 8.346999999998828e-06, 8.361000000001867e-06, 8.3340000000022e-06, 8.305999999999591e-06, 8.34800000000177e-06, 8.347000000002297e-06, 8.417000000000147e-06, 8.3340000000022e-06, 8.305999999999591e-06, 8.374999999997967e-06, 8.347000000002297e-06, 8.347000000002297e-06, 8.332999999999258e-06, 8.332999999999258e-06, 8.346999999998828e-06, 8.360999999998397e-06, 8.36200000000134e-06, 8.361000000001867e-06, 8.318999999999688e-06, 8.346999999998828e-06, 8.360999999998397e-06, 8.360999999998397e-06, 8.332999999999258e-06, 8.346999999998828e-06, 8.347000000002297e-06, 8.361999999997871e-06, 8.346999999998828e-06, 8.375000000001437e-06, 8.333999999998731e-06]</msg>
<status status="PASS" starttime="20201115 22:11:42.854" endtime="20201115 22:11:42.856"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.850" endtime="20201115 22:11:42.856"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:42.859" endtime="20201115 22:11:42.860"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:42.862" endtime="20201115 22:11:42.882"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.861" endtime="20201115 22:11:42.882"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.857" endtime="20201115 22:11:42.883"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.492" endtime="20201115 22:11:42.883"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.490" endtime="20201115 22:11:42.883"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.490" endtime="20201115 22:11:42.884"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:42.886" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:42.894" endtime="20201115 22:11:42.911"></status>
</kw>
<msg timestamp="20201115 22:11:42.911" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:42.893" endtime="20201115 22:11:42.911"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:42.914" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:42.912" endtime="20201115 22:11:42.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:42.915" endtime="20201115 22:11:42.916"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.890" endtime="20201115 22:11:42.917"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.888" endtime="20201115 22:11:42.917"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:42.923" endtime="20201115 22:11:43.210"></status>
</kw>
<msg timestamp="20201115 22:11:43.213" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022020903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022029861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:42.922" endtime="20201115 22:11:43.213"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:43.221" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022020903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022029861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:43.214" endtime="20201115 22:11:43.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:43.222" endtime="20201115 22:11:43.224"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.919" endtime="20201115 22:11:43.224"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.918" endtime="20201115 22:11:43.224"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:43.228" level="INFO">${RESULT} = [{'time': 0.022029861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.957999999999883e-06, 'source_diff': 8.957999999999883e-06}, {'time': 0.022161431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:43.225" endtime="20201115 22:11:43.229"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:43.243" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:43.230" endtime="20201115 22:11:43.243"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:43.248" level="INFO">NAME: 00-overhead-9-set</msg>
<status status="PASS" starttime="20201115 22:11:43.247" endtime="20201115 22:11:43.248"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:43.250" level="INFO">VALUE: [8.957999999999883e-06, 8.958999999999356e-06, 8.957999999999883e-06, 9.000000000002062e-06, 8.958999999999356e-06, 8.958999999999356e-06, 8.959000000002826e-06, 8.903000000001077e-06, 8.985999999999023e-06, 8.944000000000313e-06, 8.958999999999356e-06, 8.959000000002826e-06, 8.957999999999883e-06, 8.985999999999023e-06, 8.957999999999883e-06, 8.944999999999786e-06, 8.958999999999356e-06, 8.958999999999356e-06, 8.944000000000313e-06, 8.957999999999883e-06, 8.959000000002826e-06, 8.959000000002826e-06, 8.972999999998926e-06, 9.013999999998162e-06, 8.944999999999786e-06, 8.957999999999883e-06, 8.957999999999883e-06, 8.957999999999883e-06, 8.943999999996843e-06, 8.944999999999786e-06, 9.000000000002062e-06, 8.957999999999883e-06, 8.944999999999786e-06, 8.931000000000217e-06, 8.957999999999883e-06, 8.971999999999453e-06, 8.959000000002826e-06, 8.971999999999453e-06, 8.888999999998037e-06, 8.957999999999883e-06, 8.957999999999883e-06, 8.958999999999356e-06, 8.985999999999023e-06, 8.957999999999883e-06, 8.957999999999883e-06, 8.957999999999883e-06, 8.986000000002492e-06, 8.944999999999786e-06, 8.957999999999883e-06, 8.944000000000313e-06]</msg>
<status status="PASS" starttime="20201115 22:11:43.249" endtime="20201115 22:11:43.251"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.244" endtime="20201115 22:11:43.251"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:43.254" endtime="20201115 22:11:43.255"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:43.257" endtime="20201115 22:11:43.276"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.255" endtime="20201115 22:11:43.277"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.252" endtime="20201115 22:11:43.277"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.886" endtime="20201115 22:11:43.277"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.885" endtime="20201115 22:11:43.278"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.884" endtime="20201115 22:11:43.278"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:43.280" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:43.289" endtime="20201115 22:11:43.306"></status>
</kw>
<msg timestamp="20201115 22:11:43.306" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:43.287" endtime="20201115 22:11:43.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:43.309" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:43.307" endtime="20201115 22:11:43.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:43.310" endtime="20201115 22:11:43.312"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.285" endtime="20201115 22:11:43.312"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.283" endtime="20201115 22:11:43.312"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:43.319" endtime="20201115 22:11:43.606"></status>
</kw>
<msg timestamp="20201115 22:11:43.609" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022342069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022351639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:43.317" endtime="20201115 22:11:43.609"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:43.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022342069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022351639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:43.610" endtime="20201115 22:11:43.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:43.618" endtime="20201115 22:11:43.619"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.315" endtime="20201115 22:11:43.620"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.313" endtime="20201115 22:11:43.620"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:43.624" level="INFO">${RESULT} = [{'time': 0.022351639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.570000000000412e-06, 'source_diff': 9.570000000000412e-06}, {'time': 0.022492, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 22:11:43.621" endtime="20201115 22:11:43.625"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:43.638" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:43.625" endtime="20201115 22:11:43.638"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:43.642" level="INFO">NAME: 00-overhead-10-set</msg>
<status status="PASS" starttime="20201115 22:11:43.641" endtime="20201115 22:11:43.642"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:43.645" level="INFO">VALUE: [9.570000000000412e-06, 9.583000000000508e-06, 9.570000000000412e-06, 9.555000000001368e-06, 9.569000000000938e-06, 9.583999999999981e-06, 9.583000000000508e-06, 9.583999999999981e-06, 9.583999999999981e-06, 9.554999999997899e-06, 9.570000000000412e-06, 9.569000000000938e-06, 9.610999999999648e-06, 9.556000000000842e-06, 9.610999999999648e-06, 9.542000000001272e-06, 9.583000000000508e-06, 9.583999999999981e-06, 9.570000000000412e-06, 9.583999999999981e-06, 9.583000000000508e-06, 9.570000000000412e-06, 9.528000000001702e-06, 9.583999999999981e-06, 9.597000000000078e-06, 9.597000000000078e-06, 9.569000000000938e-06, 9.570000000000412e-06, 9.583999999999981e-06, 9.556000000000842e-06, 9.569999999996942e-06, 9.583000000000508e-06, 9.583999999999981e-06, 9.583999999999981e-06, 9.569000000000938e-06, 9.568999999997468e-06, 9.583999999999981e-06, 9.569000000000938e-06, 9.582999999997038e-06, 9.583999999999981e-06, 9.555000000001368e-06, 9.569000000000938e-06, 9.541999999997802e-06, 9.556000000000842e-06, 9.570000000000412e-06, 9.583999999999981e-06, 9.583000000000508e-06, 9.569000000000938e-06, 9.597999999999551e-06, 9.597000000000078e-06]</msg>
<status status="PASS" starttime="20201115 22:11:43.643" endtime="20201115 22:11:43.645"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.638" endtime="20201115 22:11:43.646"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:43.648" endtime="20201115 22:11:43.649"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:43.652" endtime="20201115 22:11:43.671"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.650" endtime="20201115 22:11:43.671"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.646" endtime="20201115 22:11:43.672"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.281" endtime="20201115 22:11:43.672"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.279" endtime="20201115 22:11:43.672"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.278" endtime="20201115 22:11:43.673"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:43.675" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:43.684" endtime="20201115 22:11:43.701"></status>
</kw>
<msg timestamp="20201115 22:11:43.702" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:43.682" endtime="20201115 22:11:43.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:43.704" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:43.703" endtime="20201115 22:11:43.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:43.705" endtime="20201115 22:11:43.707"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.679" endtime="20201115 22:11:43.707"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.677" endtime="20201115 22:11:43.708"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:43.714" endtime="20201115 22:11:44.002"></status>
</kw>
<msg timestamp="20201115 22:11:44.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022325056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022335222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:43.713" endtime="20201115 22:11:44.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:44.013" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022325056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022335222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:44.006" endtime="20201115 22:11:44.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:44.014" endtime="20201115 22:11:44.015"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.710" endtime="20201115 22:11:44.016"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.708" endtime="20201115 22:11:44.016"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:44.020" level="INFO">${RESULT} = [{'time': 0.022335222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0165999999998954e-05, 'source_diff': 1.0165999999998954e-05}, {'time': 0.022483514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:44.017" endtime="20201115 22:11:44.021"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:44.034" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:44.022" endtime="20201115 22:11:44.034"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:44.038" level="INFO">NAME: 00-overhead-11-set</msg>
<status status="PASS" starttime="20201115 22:11:44.037" endtime="20201115 22:11:44.039"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:44.041" level="INFO">VALUE: [1.0165999999998954e-05, 1.0180999999997997e-05, 1.0124999999999718e-05, 1.0194000000001563e-05, 1.0152999999998857e-05, 1.0222000000000703e-05, 1.0180000000001993e-05, 1.0194000000001563e-05, 1.0181000000001467e-05, 1.0181000000001467e-05, 1.0153000000002327e-05, 1.0167000000001897e-05, 1.0180999999997997e-05, 1.0195000000001037e-05, 1.0194999999997567e-05, 1.0180000000001993e-05, 1.0124999999999718e-05, 1.0194000000001563e-05, 1.0179999999998524e-05, 1.0194000000001563e-05, 1.0167000000001897e-05, 1.0194000000001563e-05, 1.0180999999997997e-05, 1.0181000000001467e-05, 1.0179999999998524e-05, 1.0193999999998093e-05, 1.0193999999998093e-05, 1.0250000000003312e-05, 1.0194000000001563e-05, 1.0193999999998093e-05, 1.0181000000001467e-05, 1.0167000000001897e-05, 1.0208000000001133e-05, 1.0249999999999843e-05, 1.0208999999997137e-05, 1.0223000000000176e-05, 1.0165999999998954e-05, 1.0181000000001467e-05, 1.0181000000001467e-05, 1.0194000000001563e-05, 1.0222000000000703e-05, 1.0194999999997567e-05, 1.0193999999998093e-05, 1.0097000000000578e-05, 1.0179999999998524e-05, 1.0249999999999843e-05, 1.0124999999999718e-05, 1.0193999999998093e-05, 1.0222000000000703e-05, 1.0208000000001133e-05]</msg>
<status status="PASS" starttime="20201115 22:11:44.040" endtime="20201115 22:11:44.041"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.035" endtime="20201115 22:11:44.042"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:44.044" endtime="20201115 22:11:44.045"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:44.047" endtime="20201115 22:11:44.067"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.046" endtime="20201115 22:11:44.067"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.042" endtime="20201115 22:11:44.068"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.675" endtime="20201115 22:11:44.068"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.674" endtime="20201115 22:11:44.068"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.673" endtime="20201115 22:11:44.068"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:44.071" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:44.079" endtime="20201115 22:11:44.098"></status>
</kw>
<msg timestamp="20201115 22:11:44.098" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:44.078" endtime="20201115 22:11:44.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:44.101" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:44.099" endtime="20201115 22:11:44.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:44.102" endtime="20201115 22:11:44.103"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.075" endtime="20201115 22:11:44.104"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.073" endtime="20201115 22:11:44.104"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:44.111" endtime="20201115 22:11:44.399"></status>
</kw>
<msg timestamp="20201115 22:11:44.402" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022245722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022256528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:44.109" endtime="20201115 22:11:44.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:44.410" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022245722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022256528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:44.403" endtime="20201115 22:11:44.410"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:44.411" endtime="20201115 22:11:44.413"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.107" endtime="20201115 22:11:44.413"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.105" endtime="20201115 22:11:44.414"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:44.418" level="INFO">${RESULT} = [{'time': 0.022256528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0806000000002092e-05, 'source_diff': 1.0806000000002092e-05}, {'time': 0.022418153, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:44.414" endtime="20201115 22:11:44.418"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:44.432" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:44.419" endtime="20201115 22:11:44.432"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:44.436" level="INFO">NAME: 00-overhead-12-set</msg>
<status status="PASS" starttime="20201115 22:11:44.435" endtime="20201115 22:11:44.437"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:44.439" level="INFO">VALUE: [1.0806000000002092e-05, 1.0819999999998192e-05, 1.0804999999999149e-05, 1.0763999999999913e-05, 1.0861000000000898e-05, 1.0792000000002522e-05, 1.0791999999999052e-05, 1.0820000000001662e-05, 1.0778000000002952e-05, 1.0790999999999579e-05, 1.0804999999999149e-05, 1.0805999999998622e-05, 1.0805999999998622e-05, 1.0777000000000009e-05, 1.0804999999999149e-05, 1.0805999999998622e-05, 1.0777999999999482e-05, 1.0805999999998622e-05, 1.0819999999998192e-05, 1.0791999999999052e-05, 1.0790999999999579e-05, 1.0819999999998192e-05, 1.0818999999998719e-05, 1.0792000000002522e-05, 1.0806000000002092e-05, 1.0778000000002952e-05, 1.0790999999999579e-05, 1.0790999999999579e-05, 1.0819000000002188e-05, 1.0790999999999579e-05, 1.0806000000002092e-05, 1.0777999999999482e-05, 1.0777000000000009e-05, 1.0791999999999052e-05, 1.0819000000002188e-05, 1.0819999999998192e-05, 1.0806000000002092e-05, 1.0750000000000343e-05, 1.0722000000001203e-05, 1.0791999999999052e-05, 1.0834000000001232e-05, 1.0804999999999149e-05, 1.0790999999999579e-05, 1.0805999999998622e-05, 1.0791999999999052e-05, 1.0791999999999052e-05, 1.0805999999998622e-05, 1.0777999999999482e-05, 1.0777999999999482e-05, 1.0806000000002092e-05]</msg>
<status status="PASS" starttime="20201115 22:11:44.437" endtime="20201115 22:11:44.439"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.433" endtime="20201115 22:11:44.440"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:44.442" endtime="20201115 22:11:44.443"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:44.445" endtime="20201115 22:11:44.465"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.444" endtime="20201115 22:11:44.465"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.440" endtime="20201115 22:11:44.466"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.071" endtime="20201115 22:11:44.466"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.070" endtime="20201115 22:11:44.466"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.069" endtime="20201115 22:11:44.466"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:44.469" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:44.477" endtime="20201115 22:11:44.496"></status>
</kw>
<msg timestamp="20201115 22:11:44.496" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:44.476" endtime="20201115 22:11:44.496"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:44.498" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:44.497" endtime="20201115 22:11:44.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:44.500" endtime="20201115 22:11:44.501"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.473" endtime="20201115 22:11:44.502"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.471" endtime="20201115 22:11:44.502"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:44.509" endtime="20201115 22:11:44.796"></status>
</kw>
<msg timestamp="20201115 22:11:44.799" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022166556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022177944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:44.508" endtime="20201115 22:11:44.799"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:44.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022166556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022177944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:44.800" endtime="20201115 22:11:44.807"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:44.808" endtime="20201115 22:11:44.810"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.505" endtime="20201115 22:11:44.810"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.503" endtime="20201115 22:11:44.810"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:44.814" level="INFO">${RESULT} = [{'time': 0.022177944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1388000000001064e-05, 'source_diff': 1.1388000000001064e-05}, {'time': 0.022348986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:44.811" endtime="20201115 22:11:44.815"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:44.829" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:44.815" endtime="20201115 22:11:44.829"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:44.833" level="INFO">NAME: 00-overhead-13-set</msg>
<status status="PASS" starttime="20201115 22:11:44.832" endtime="20201115 22:11:44.834"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:44.836" level="INFO">VALUE: [1.1388000000001064e-05, 1.1416999999999677e-05, 1.1416999999999677e-05, 1.1402000000000634e-05, 1.1403000000000107e-05, 1.1389000000000538e-05, 1.1444000000002813e-05, 1.1403000000000107e-05, 1.1402000000000634e-05, 1.1416000000000204e-05, 1.1416999999999677e-05, 1.1429999999999774e-05, 1.1417000000003147e-05, 1.1389000000000538e-05, 1.1402000000000634e-05, 1.1416999999999677e-05, 1.1417000000003147e-05, 1.1375000000000968e-05, 1.1403000000000107e-05, 1.1417000000003147e-05, 1.1402000000000634e-05, 1.1416999999999677e-05, 1.1388999999997068e-05, 1.1387999999997594e-05, 1.1416999999999677e-05, 1.1443999999999344e-05, 1.1416999999999677e-05, 1.1430999999999247e-05, 1.1388999999997068e-05, 1.1416999999999677e-05, 1.1458000000002383e-05, 1.1416999999999677e-05, 1.1387999999997594e-05, 1.1416999999999677e-05, 1.1430999999999247e-05, 1.1416000000000204e-05, 1.1416999999999677e-05, 1.1389000000000538e-05, 1.1375000000000968e-05, 1.1443999999999344e-05, 1.1401999999997164e-05, 1.1416999999999677e-05, 1.1458999999998387e-05, 1.1403000000000107e-05, 1.1416999999999677e-05, 1.1389000000000538e-05, 1.1415999999996734e-05, 1.1429999999999774e-05, 1.1403000000000107e-05, 1.1431000000002717e-05]</msg>
<status status="PASS" starttime="20201115 22:11:44.835" endtime="20201115 22:11:44.836"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.830" endtime="20201115 22:11:44.837"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:44.839" endtime="20201115 22:11:44.840"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:44.842" endtime="20201115 22:11:44.862"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.841" endtime="20201115 22:11:44.862"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.837" endtime="20201115 22:11:44.863"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.469" endtime="20201115 22:11:44.863"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.468" endtime="20201115 22:11:44.863"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.467" endtime="20201115 22:11:44.863"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:44.866" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:44.876" endtime="20201115 22:11:44.895"></status>
</kw>
<msg timestamp="20201115 22:11:44.895" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:44.874" endtime="20201115 22:11:44.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:44.898" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:44.896" endtime="20201115 22:11:44.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:44.900" endtime="20201115 22:11:44.903"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.871" endtime="20201115 22:11:44.903"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.868" endtime="20201115 22:11:44.904"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:44.911" endtime="20201115 22:11:45.199"></status>
</kw>
<msg timestamp="20201115 22:11:45.202" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023694903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023706861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:44.909" endtime="20201115 22:11:45.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:45.210" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023694903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023706861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:45.203" endtime="20201115 22:11:45.210"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:45.211" endtime="20201115 22:11:45.212"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.906" endtime="20201115 22:11:45.213"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.904" endtime="20201115 22:11:45.213"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:45.217" level="INFO">${RESULT} = [{'time': 0.023706861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1957999999999414e-05, 'source_diff': 1.1957999999999414e-05}, {'time': 0.023889056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:45.214" endtime="20201115 22:11:45.217"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:45.230" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:45.218" endtime="20201115 22:11:45.231"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:45.235" level="INFO">NAME: 00-overhead-14-set</msg>
<status status="PASS" starttime="20201115 22:11:45.234" endtime="20201115 22:11:45.235"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:45.237" level="INFO">VALUE: [1.1957999999999414e-05, 1.2013999999997693e-05, 1.202699999999779e-05, 1.2014000000001163e-05, 1.2027999999997263e-05, 1.2028000000000733e-05, 1.2028000000000733e-05, 1.2014000000001163e-05, 1.2028000000000733e-05, 1.1985999999998553e-05, 1.2055999999999872e-05, 1.2028000000000733e-05, 1.2027999999997263e-05, 1.2055999999999872e-05, 1.2014000000001163e-05, 1.2027999999997263e-05, 1.2042000000000302e-05, 1.2027000000001259e-05, 1.2014000000001163e-05, 1.2028000000000733e-05, 1.202699999999779e-05, 1.2028000000000733e-05, 1.2013999999997693e-05, 1.2027999999997263e-05, 1.202699999999779e-05, 1.2110999999998678e-05, 1.2014000000001163e-05, 1.2084000000002482e-05, 1.2014000000001163e-05, 1.2042000000000302e-05, 1.2028000000000733e-05, 1.2042000000000302e-05, 1.2014000000001163e-05, 1.2014000000001163e-05, 1.2028000000000733e-05, 1.1999999999998123e-05, 1.2027999999997263e-05, 1.2042000000000302e-05, 1.2028000000000733e-05, 1.2028000000000733e-05, 1.2028000000000733e-05, 1.2055999999999872e-05, 1.2042000000003772e-05, 1.2013999999997693e-05, 1.2028000000004202e-05, 1.2028000000004202e-05, 1.204099999999736e-05, 1.2027999999997263e-05, 1.2013999999997693e-05, 1.1999999999998123e-05]</msg>
<status status="PASS" starttime="20201115 22:11:45.236" endtime="20201115 22:11:45.238"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.231" endtime="20201115 22:11:45.238"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:45.240" endtime="20201115 22:11:45.242"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:45.244" endtime="20201115 22:11:45.263"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.242" endtime="20201115 22:11:45.264"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.239" endtime="20201115 22:11:45.264"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.866" endtime="20201115 22:11:45.264"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.865" endtime="20201115 22:11:45.265"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.864" endtime="20201115 22:11:45.265"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:45.267" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:45.276" endtime="20201115 22:11:45.296"></status>
</kw>
<msg timestamp="20201115 22:11:45.297" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:45.275" endtime="20201115 22:11:45.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:45.299" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:45.298" endtime="20201115 22:11:45.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:45.300" endtime="20201115 22:11:45.302"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.272" endtime="20201115 22:11:45.302"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.269" endtime="20201115 22:11:45.303"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:45.309" endtime="20201115 22:11:45.596"></status>
</kw>
<msg timestamp="20201115 22:11:45.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022623361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022636028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:45.307" endtime="20201115 22:11:45.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:45.607" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022623361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022636028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:45.601" endtime="20201115 22:11:45.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:45.608" endtime="20201115 22:11:45.610"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.305" endtime="20201115 22:11:45.611"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.303" endtime="20201115 22:11:45.611"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:45.615" level="INFO">${RESULT} = [{'time': 0.022636028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2666999999997458e-05, 'source_diff': 1.2666999999997458e-05}, {'time': 0.022832278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:45.612" endtime="20201115 22:11:45.615"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:45.628" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:45.616" endtime="20201115 22:11:45.628"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:45.633" level="INFO">NAME: 00-overhead-15-set</msg>
<status status="PASS" starttime="20201115 22:11:45.632" endtime="20201115 22:11:45.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:45.635" level="INFO">VALUE: [1.2666999999997458e-05, 1.2625000000002218e-05, 1.2667000000000928e-05, 1.2625000000002218e-05, 1.2639000000001788e-05, 1.2624999999998748e-05, 1.2667000000000928e-05, 1.2639000000001788e-05, 1.2639000000001788e-05, 1.2694000000000594e-05, 1.2653000000001358e-05, 1.2652999999997888e-05, 1.2639000000001788e-05, 1.2625000000002218e-05, 1.2610999999999178e-05, 1.2637999999998845e-05, 1.2624999999998748e-05, 1.2653000000001358e-05, 1.2639000000001788e-05, 1.2639000000001788e-05, 1.2624999999998748e-05, 1.2639000000001788e-05, 1.2639000000001788e-05, 1.2639000000001788e-05, 1.2625000000002218e-05, 1.2708000000000164e-05, 1.2638999999998318e-05, 1.2638999999998318e-05, 1.2637999999998845e-05, 1.2652000000001884e-05, 1.2638999999998318e-05, 1.2624999999998748e-05, 1.2639000000001788e-05, 1.2652999999997888e-05, 1.2639000000001788e-05, 1.2637999999998845e-05, 1.2639000000001788e-05, 1.2652999999997888e-05, 1.2652000000001884e-05, 1.2638999999998318e-05, 1.2639000000001788e-05, 1.2624999999998748e-05, 1.2638999999998318e-05, 1.2583000000000039e-05, 1.2667000000000928e-05, 1.2652000000001884e-05, 1.2653000000001358e-05, 1.2653000000001358e-05, 1.2625000000002218e-05, 1.2653000000001358e-05]</msg>
<status status="PASS" starttime="20201115 22:11:45.634" endtime="20201115 22:11:45.636"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.629" endtime="20201115 22:11:45.636"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:45.638" endtime="20201115 22:11:45.639"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:45.642" endtime="20201115 22:11:45.661"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.640" endtime="20201115 22:11:45.662"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.637" endtime="20201115 22:11:45.662"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.267" endtime="20201115 22:11:45.663"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.266" endtime="20201115 22:11:45.663"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.265" endtime="20201115 22:11:45.663"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:45.665" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:45.674" endtime="20201115 22:11:45.695"></status>
</kw>
<msg timestamp="20201115 22:11:45.696" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:45.672" endtime="20201115 22:11:45.696"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:45.698" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:45.697" endtime="20201115 22:11:45.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:45.699" endtime="20201115 22:11:45.701"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.670" endtime="20201115 22:11:45.701"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.668" endtime="20201115 22:11:45.702"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:45.708" endtime="20201115 22:11:45.995"></status>
</kw>
<msg timestamp="20201115 22:11:45.998" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02220775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022221042, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:11:45.706" endtime="20201115 22:11:45.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:46.006" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02220775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022221042, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:11:45.999" endtime="20201115 22:11:46.006"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:46.007" endtime="20201115 22:11:46.009"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.704" endtime="20201115 22:11:46.009"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.702" endtime="20201115 22:11:46.010"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:46.014" level="INFO">${RESULT} = [{'time': 0.022221042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3292000000001553e-05, 'source_diff': 1.3292000000001553e-05}, {'time': 0.022430181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:46.010" endtime="20201115 22:11:46.014"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:46.027" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:46.015" endtime="20201115 22:11:46.027"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:46.031" level="INFO">NAME: 00-overhead-16-set</msg>
<status status="PASS" starttime="20201115 22:11:46.030" endtime="20201115 22:11:46.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:46.034" level="INFO">VALUE: [1.3292000000001553e-05, 1.3249999999999373e-05, 1.327699999999904e-05, 1.3235999999999803e-05, 1.3250000000002843e-05, 1.3264000000002413e-05, 1.3250000000002843e-05, 1.3277999999998513e-05, 1.3263999999998943e-05, 1.3222000000000234e-05, 1.3179999999998054e-05, 1.326299999999947e-05, 1.3249999999999373e-05, 1.3263999999998943e-05, 1.3263999999998943e-05, 1.3249999999999373e-05, 1.3277999999998513e-05, 1.3222000000000234e-05, 1.3306000000001122e-05, 1.3263999999998943e-05, 1.3235999999999803e-05, 1.3222000000000234e-05, 1.3237000000002747e-05, 1.3263999999998943e-05, 1.3249999999999373e-05, 1.3237000000002747e-05, 1.3291000000002079e-05, 1.3249999999999373e-05, 1.3278000000001983e-05, 1.3249999999999373e-05, 1.3292000000001553e-05, 1.3249999999999373e-05, 1.3292000000001553e-05, 1.3222000000000234e-05, 1.326299999999947e-05, 1.3249999999999373e-05, 1.3249999999999373e-05, 1.3249999999999373e-05, 1.3249999999999373e-05, 1.3249999999999373e-05, 1.3250000000002843e-05, 1.3249999999999373e-05, 1.3249999999999373e-05, 1.3249999999999373e-05, 1.3263999999998943e-05, 1.3236999999999277e-05, 1.3222000000000234e-05, 1.3264000000005882e-05, 1.327699999999904e-05, 1.3249999999999373e-05]</msg>
<status status="PASS" starttime="20201115 22:11:46.032" endtime="20201115 22:11:46.035"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.028" endtime="20201115 22:11:46.035"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:46.037" endtime="20201115 22:11:46.039"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:46.041" endtime="20201115 22:11:46.060"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.039" endtime="20201115 22:11:46.061"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.036" endtime="20201115 22:11:46.061"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.666" endtime="20201115 22:11:46.061"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.664" endtime="20201115 22:11:46.062"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.663" endtime="20201115 22:11:46.062"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:46.064" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:46.073" endtime="20201115 22:11:46.094"></status>
</kw>
<msg timestamp="20201115 22:11:46.094" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:46.071" endtime="20201115 22:11:46.095"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:46.097" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:46.096" endtime="20201115 22:11:46.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:46.098" endtime="20201115 22:11:46.100"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.068" endtime="20201115 22:11:46.100"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.066" endtime="20201115 22:11:46.101"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:46.107" endtime="20201115 22:11:46.393"></status>
</kw>
<msg timestamp="20201115 22:11:46.396" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022219986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022233889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:46.105" endtime="20201115 22:11:46.396"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:46.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022219986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022233889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:46.397" endtime="20201115 22:11:46.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:46.405" endtime="20201115 22:11:46.407"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.103" endtime="20201115 22:11:46.407"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.101" endtime="20201115 22:11:46.408"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:46.412" level="INFO">${RESULT} = [{'time': 0.022233889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3902999999999138e-05, 'source_diff': 1.3902999999999138e-05}, {'time': 0.022459208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:46.408" endtime="20201115 22:11:46.412"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:46.426" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:46.413" endtime="20201115 22:11:46.426"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:46.431" level="INFO">NAME: 00-overhead-17-set</msg>
<status status="PASS" starttime="20201115 22:11:46.430" endtime="20201115 22:11:46.431"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:46.434" level="INFO">VALUE: [1.3902999999999138e-05, 1.3861000000000429e-05, 1.3861000000000429e-05, 1.384699999999739e-05, 1.384699999999739e-05, 1.3847000000000859e-05, 1.3847000000000859e-05, 1.3874999999999998e-05, 1.3861999999999902e-05, 1.3861000000000429e-05, 1.3931000000001748e-05, 1.3847000000000859e-05, 1.3847000000000859e-05, 1.3847000000000859e-05, 1.3874999999999998e-05, 1.3860999999996959e-05, 1.3861000000000429e-05, 1.380499999999868e-05, 1.3944000000001844e-05, 1.383299999999782e-05, 1.3861000000000429e-05, 1.3874999999999998e-05, 1.3861999999999902e-05, 1.3861000000000429e-05, 1.3861999999999902e-05, 1.3860999999996959e-05, 1.3847000000000859e-05, 1.3901999999999665e-05, 1.3861000000000429e-05, 1.3861000000000429e-05, 1.3888999999999568e-05, 1.3874999999999998e-05, 1.3861000000000429e-05, 1.3860999999996959e-05, 1.3874999999999998e-05, 1.3874999999999998e-05, 1.3847000000000859e-05, 1.3848000000000332e-05, 1.3848000000000332e-05, 1.3833000000001289e-05, 1.3874999999999998e-05, 1.3874999999996529e-05, 1.3875000000003468e-05, 1.3930000000002274e-05, 1.3874999999996529e-05, 1.3874999999996529e-05, 1.3917000000002178e-05, 1.3874999999996529e-05, 1.3860999999996959e-05, 1.3888999999996099e-05]</msg>
<status status="PASS" starttime="20201115 22:11:46.432" endtime="20201115 22:11:46.434"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.427" endtime="20201115 22:11:46.435"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:46.437" endtime="20201115 22:11:46.438"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:46.440" endtime="20201115 22:11:46.460"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.439" endtime="20201115 22:11:46.460"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.435" endtime="20201115 22:11:46.461"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.064" endtime="20201115 22:11:46.461"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.063" endtime="20201115 22:11:46.461"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.062" endtime="20201115 22:11:46.462"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:46.464" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:46.473" endtime="20201115 22:11:46.494"></status>
</kw>
<msg timestamp="20201115 22:11:46.495" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:46.471" endtime="20201115 22:11:46.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:46.497" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:46.496" endtime="20201115 22:11:46.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:46.498" endtime="20201115 22:11:46.500"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.468" endtime="20201115 22:11:46.501"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.466" endtime="20201115 22:11:46.501"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:46.508" endtime="20201115 22:11:46.794"></status>
</kw>
<msg timestamp="20201115 22:11:46.797" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022728347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022742833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:46.507" endtime="20201115 22:11:46.797"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:46.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022728347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022742833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:46.798" endtime="20201115 22:11:46.806"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:46.806" endtime="20201115 22:11:46.808"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.503" endtime="20201115 22:11:46.808"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.502" endtime="20201115 22:11:46.809"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:46.813" level="INFO">${RESULT} = [{'time': 0.022742833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4486000000001054e-05, 'source_diff': 1.4486000000001054e-05}, {'time': 0.022981319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:46.810" endtime="20201115 22:11:46.813"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:46.827" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:46.814" endtime="20201115 22:11:46.827"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:46.831" level="INFO">NAME: 00-overhead-18-set</msg>
<status status="PASS" starttime="20201115 22:11:46.830" endtime="20201115 22:11:46.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:46.833" level="INFO">VALUE: [1.4486000000001054e-05, 1.4486000000001054e-05, 1.4473000000000957e-05, 1.4500000000000624e-05, 1.4486000000001054e-05, 1.4485999999997584e-05, 1.4430999999998778e-05, 1.4457999999998444e-05, 1.4472000000001484e-05, 1.454099999999986e-05, 1.4458999999997918e-05, 1.4472999999997488e-05, 1.4486000000001054e-05, 1.4542000000002803e-05, 1.4472000000001484e-05, 1.4471999999998014e-05, 1.4471999999998014e-05, 1.4472000000001484e-05, 1.4473000000000957e-05, 1.4459000000001387e-05, 1.4514000000000193e-05, 1.4472000000001484e-05, 1.4458000000001914e-05, 1.4486000000001054e-05, 1.4485999999997584e-05, 1.4431000000002248e-05, 1.4514000000000193e-05, 1.4471999999998014e-05, 1.452699999999682e-05, 1.4527999999999763e-05, 1.4485999999997584e-05, 1.4472000000001484e-05, 1.4458000000001914e-05, 1.4471999999998014e-05, 1.4541999999999333e-05, 1.4514000000000193e-05, 1.4457999999994975e-05, 1.4500000000000624e-05, 1.4486999999993588e-05, 1.4444000000002344e-05, 1.451300000000072e-05, 1.4458000000001914e-05, 1.4459000000001387e-05, 1.4472000000001484e-05, 1.4471999999994545e-05, 1.4472000000001484e-05, 1.4486000000001054e-05, 1.455499999999943e-05, 1.4485999999994115e-05, 1.4485999999994115e-05]</msg>
<status status="PASS" starttime="20201115 22:11:46.832" endtime="20201115 22:11:46.834"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.827" endtime="20201115 22:11:46.834"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:46.837" endtime="20201115 22:11:46.838"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:46.840" endtime="20201115 22:11:46.859"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.838" endtime="20201115 22:11:46.860"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.835" endtime="20201115 22:11:46.860"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.464" endtime="20201115 22:11:46.861"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.463" endtime="20201115 22:11:46.861"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.462" endtime="20201115 22:11:46.861"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:46.863" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:46.872" endtime="20201115 22:11:46.895"></status>
</kw>
<msg timestamp="20201115 22:11:46.895" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:46.870" endtime="20201115 22:11:46.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:46.898" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:46.896" endtime="20201115 22:11:46.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:46.899" endtime="20201115 22:11:46.900"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.868" endtime="20201115 22:11:46.901"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.866" endtime="20201115 22:11:46.901"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:46.908" endtime="20201115 22:11:47.194"></status>
</kw>
<msg timestamp="20201115 22:11:47.197" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022280361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022295444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:46.906" endtime="20201115 22:11:47.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:47.205" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022280361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022295444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:47.198" endtime="20201115 22:11:47.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:47.207" endtime="20201115 22:11:47.208"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.904" endtime="20201115 22:11:47.209"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.902" endtime="20201115 22:11:47.209"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:47.213" level="INFO">${RESULT} = [{'time': 0.022295444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5083000000002539e-05, 'source_diff': 1.5083000000002539e-05}, {'time': 0.022546778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:47.210" endtime="20201115 22:11:47.214"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:47.226" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:47.214" endtime="20201115 22:11:47.227"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:47.231" level="INFO">NAME: 00-overhead-19-set</msg>
<status status="PASS" starttime="20201115 22:11:47.230" endtime="20201115 22:11:47.231"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:47.233" level="INFO">VALUE: [1.5083000000002539e-05, 1.5153000000000388e-05, 1.5084000000002012e-05, 1.5097000000002109e-05, 1.5083999999998543e-05, 1.5097000000002109e-05, 1.5153000000000388e-05, 1.5070000000002443e-05, 1.508299999999907e-05, 1.5098000000001582e-05, 1.5098000000001582e-05, 1.5097000000002109e-05, 1.5098000000001582e-05, 1.509699999999864e-05, 1.505499999999993e-05, 1.5083999999998543e-05, 1.50689999999995e-05, 1.50689999999995e-05, 1.5083999999998543e-05, 1.509699999999864e-05, 1.509699999999864e-05, 1.508299999999907e-05, 1.508299999999907e-05, 1.5084000000002012e-05, 1.508299999999907e-05, 1.508299999999907e-05, 1.5084000000002012e-05, 1.50689999999995e-05, 1.511099999999821e-05, 1.5083999999998543e-05, 1.5069999999998973e-05, 1.509699999999864e-05, 1.5069999999998973e-05, 1.509699999999864e-05, 1.5139000000000818e-05, 1.509699999999864e-05, 1.5083999999998543e-05, 1.50689999999995e-05, 1.5069999999998973e-05, 1.5112000000004622e-05, 1.508299999999907e-05, 1.509699999999864e-05, 1.5083999999998543e-05, 1.5124999999997779e-05, 1.5069999999998973e-05, 1.508299999999907e-05, 1.50689999999995e-05, 1.5138999999997349e-05, 1.508299999999907e-05, 1.509699999999864e-05]</msg>
<status status="PASS" starttime="20201115 22:11:47.232" endtime="20201115 22:11:47.234"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.227" endtime="20201115 22:11:47.234"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:47.236" endtime="20201115 22:11:47.238"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:47.240" endtime="20201115 22:11:47.259"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.238" endtime="20201115 22:11:47.260"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.235" endtime="20201115 22:11:47.260"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.864" endtime="20201115 22:11:47.260"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.862" endtime="20201115 22:11:47.261"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.861" endtime="20201115 22:11:47.261"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:47.263" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:47.272" endtime="20201115 22:11:47.295"></status>
</kw>
<msg timestamp="20201115 22:11:47.295" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:47.270" endtime="20201115 22:11:47.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:47.298" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:47.296" endtime="20201115 22:11:47.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:47.299" endtime="20201115 22:11:47.301"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.268" endtime="20201115 22:11:47.301"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.266" endtime="20201115 22:11:47.301"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:47.308" endtime="20201115 22:11:47.595"></status>
</kw>
<msg timestamp="20201115 22:11:47.598" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022382681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022398375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:47.306" endtime="20201115 22:11:47.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:47.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022382681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022398375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:47.600" endtime="20201115 22:11:47.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:47.607" endtime="20201115 22:11:47.609"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.304" endtime="20201115 22:11:47.610"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.302" endtime="20201115 22:11:47.610"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:47.614" level="INFO">${RESULT} = [{'time': 0.022398375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5694000000000125e-05, 'source_diff': 1.5694000000000125e-05}, {'time': 0.022668056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:47.611" endtime="20201115 22:11:47.614"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:47.627" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:47.615" endtime="20201115 22:11:47.627"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:47.632" level="INFO">NAME: 00-overhead-20-set</msg>
<status status="PASS" starttime="20201115 22:11:47.631" endtime="20201115 22:11:47.632"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:47.634" level="INFO">VALUE: [1.5694000000000125e-05, 1.5708999999999168e-05, 1.5707999999999694e-05, 1.5763999999997974e-05, 1.5694000000000125e-05, 1.5735999999998834e-05, 1.5680000000000555e-05, 1.5695000000003068e-05, 1.5694000000000125e-05, 1.5735999999998834e-05, 1.5707999999999694e-05, 1.5681000000000028e-05, 1.5708999999999168e-05, 1.5708999999999168e-05, 1.5651999999997945e-05, 1.5721999999999264e-05, 1.5680000000000555e-05, 1.5708999999999168e-05, 1.5707999999999694e-05, 1.5707999999999694e-05, 1.5694999999999598e-05, 1.5694999999999598e-05, 1.5694000000000125e-05, 1.5680000000000555e-05, 1.5707999999999694e-05, 1.566700000000046e-05, 1.5721999999999264e-05, 1.5707999999999694e-05, 1.566700000000046e-05, 1.562499999999828e-05, 1.5735999999998834e-05, 1.5681000000000028e-05, 1.5694000000000125e-05, 1.5708999999999168e-05, 1.5721999999995795e-05, 1.5681000000003498e-05, 1.5721999999995795e-05, 1.5721999999995795e-05, 1.561099999999871e-05, 1.5736000000002304e-05, 1.5695000000003068e-05, 1.569499999999613e-05, 1.5723000000002207e-05, 1.5708000000003164e-05, 1.5681000000003498e-05, 1.5679999999997085e-05, 1.5693999999996655e-05, 1.5695000000003068e-05, 1.5666000000004454e-05, 1.5736000000002304e-05]</msg>
<status status="PASS" starttime="20201115 22:11:47.633" endtime="20201115 22:11:47.635"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.628" endtime="20201115 22:11:47.635"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:47.637" endtime="20201115 22:11:47.638"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:47.641" endtime="20201115 22:11:47.660"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.639" endtime="20201115 22:11:47.661"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.636" endtime="20201115 22:11:47.661"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.264" endtime="20201115 22:11:47.661"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.262" endtime="20201115 22:11:47.662"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.261" endtime="20201115 22:11:47.662"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:47.664" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:47.673" endtime="20201115 22:11:47.696"></status>
</kw>
<msg timestamp="20201115 22:11:47.697" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:47.671" endtime="20201115 22:11:47.697"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:47.700" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:47.698" endtime="20201115 22:11:47.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:47.701" endtime="20201115 22:11:47.703"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.668" endtime="20201115 22:11:47.703"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.666" endtime="20201115 22:11:47.703"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:47.710" endtime="20201115 22:11:47.996"></status>
</kw>
<msg timestamp="20201115 22:11:47.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022290833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022307139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:47.708" endtime="20201115 22:11:48.000"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:48.008" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022290833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022307139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:48.001" endtime="20201115 22:11:48.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:48.009" endtime="20201115 22:11:48.010"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.706" endtime="20201115 22:11:48.011"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.704" endtime="20201115 22:11:48.011"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:48.015" level="INFO">${RESULT} = [{'time': 0.022307139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6306000000000653e-05, 'source_diff': 1.6306000000000653e-05}, {'time': 0.022593875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:48.012" endtime="20201115 22:11:48.016"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:48.030" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:48.016" endtime="20201115 22:11:48.030"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:48.034" level="INFO">NAME: 00-overhead-21-set</msg>
<status status="PASS" starttime="20201115 22:11:48.033" endtime="20201115 22:11:48.035"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:48.037" level="INFO">VALUE: [1.6306000000000653e-05, 1.6292000000001083e-05, 1.631900000000075e-05, 1.631900000000075e-05, 1.627699999999857e-05, 1.6320000000000223e-05, 1.631899999999728e-05, 1.630500000000118e-05, 1.6347999999999363e-05, 1.6320000000000223e-05, 1.6306000000000653e-05, 1.6291999999997614e-05, 1.633300000000032e-05, 1.630500000000118e-05, 1.6277999999998044e-05, 1.6319999999996754e-05, 1.6306000000000653e-05, 1.630499999999771e-05, 1.6333999999999793e-05, 1.633299999999685e-05, 1.6291999999997614e-05, 1.63750000000025e-05, 1.6306000000000653e-05, 1.6306000000000653e-05, 1.6320000000000223e-05, 1.631900000000075e-05, 1.6292000000001083e-05, 1.634699999999989e-05, 1.6333999999999793e-05, 1.6320000000000223e-05, 1.630499999999771e-05, 1.636099999999946e-05, 1.6292000000001083e-05, 1.631899999999381e-05, 1.633300000000032e-05, 1.633300000000032e-05, 1.6319999999993284e-05, 1.6320000000000223e-05, 1.6292000000001083e-05, 1.6292000000001083e-05, 1.634699999999989e-05, 1.6320000000000223e-05, 1.631900000000075e-05, 1.629100000000161e-05, 1.633300000000032e-05, 1.6306000000000653e-05, 1.637499999999903e-05, 1.630500000000118e-05, 1.631900000000075e-05, 1.631900000000075e-05]</msg>
<status status="PASS" starttime="20201115 22:11:48.035" endtime="20201115 22:11:48.037"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.031" endtime="20201115 22:11:48.038"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:48.040" endtime="20201115 22:11:48.041"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:48.043" endtime="20201115 22:11:48.062"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.042" endtime="20201115 22:11:48.063"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.038" endtime="20201115 22:11:48.063"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.664" endtime="20201115 22:11:48.064"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.663" endtime="20201115 22:11:48.064"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.662" endtime="20201115 22:11:48.064"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:48.066" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:48.075" endtime="20201115 22:11:48.100"></status>
</kw>
<msg timestamp="20201115 22:11:48.101" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:48.074" endtime="20201115 22:11:48.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:48.103" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:48.102" endtime="20201115 22:11:48.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:48.104" endtime="20201115 22:11:48.106"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.071" endtime="20201115 22:11:48.106"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.069" endtime="20201115 22:11:48.107"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:48.113" endtime="20201115 22:11:48.400"></status>
</kw>
<msg timestamp="20201115 22:11:48.403" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022704417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022721347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:48.112" endtime="20201115 22:11:48.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:48.411" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022704417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022721347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:48.404" endtime="20201115 22:11:48.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:48.412" endtime="20201115 22:11:48.414"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.109" endtime="20201115 22:11:48.414"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.107" endtime="20201115 22:11:48.415"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:48.419" level="INFO">${RESULT} = [{'time': 0.022721347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6929999999998335e-05, 'source_diff': 1.6929999999998335e-05}, {'time': 0.023021222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:48.416" endtime="20201115 22:11:48.419"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:48.432" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:48.420" endtime="20201115 22:11:48.432"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:48.437" level="INFO">NAME: 00-overhead-22-set</msg>
<status status="PASS" starttime="20201115 22:11:48.436" endtime="20201115 22:11:48.437"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:48.439" level="INFO">VALUE: [1.6929999999998335e-05, 1.6930000000001805e-05, 1.6929999999998335e-05, 1.691699999999824e-05, 1.693100000000128e-05, 1.6929999999998335e-05, 1.691699999999824e-05, 1.691700000000171e-05, 1.690299999999867e-05, 1.691700000000171e-05, 1.6999999999999654e-05, 1.6945000000000848e-05, 1.690300000000214e-05, 1.6958000000000945e-05, 1.691700000000171e-05, 1.6901999999999195e-05, 1.693100000000128e-05, 1.6901999999999195e-05, 1.687499999999953e-05, 1.6945000000000848e-05, 1.6999999999999654e-05, 1.691699999999824e-05, 1.6930000000001805e-05, 1.6943999999997905e-05, 1.691700000000171e-05, 1.6915999999998765e-05, 1.694499999999738e-05, 1.691699999999824e-05, 1.6972000000000514e-05, 1.6930000000005274e-05, 1.6917000000005178e-05, 1.693099999999781e-05, 1.690299999999867e-05, 1.6929999999998335e-05, 1.691699999999824e-05, 1.6929999999998335e-05, 1.68889999999991e-05, 1.6931000000004748e-05, 1.695899999999695e-05, 1.6929999999998335e-05, 1.6931000000004748e-05, 1.6915999999998765e-05, 1.6972000000003984e-05, 1.693099999999781e-05, 1.691699999999824e-05, 1.690299999999867e-05, 1.6958000000004414e-05, 1.6915999999998765e-05, 1.6929999999998335e-05, 1.6929999999998335e-05]</msg>
<status status="PASS" starttime="20201115 22:11:48.438" endtime="20201115 22:11:48.439"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.433" endtime="20201115 22:11:48.440"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:48.442" endtime="20201115 22:11:48.443"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:48.446" endtime="20201115 22:11:48.465"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.444" endtime="20201115 22:11:48.466"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.441" endtime="20201115 22:11:48.466"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.067" endtime="20201115 22:11:48.467"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.065" endtime="20201115 22:11:48.467"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.064" endtime="20201115 22:11:48.467"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:48.469" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:48.478" endtime="20201115 22:11:48.505"></status>
</kw>
<msg timestamp="20201115 22:11:48.505" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:48.476" endtime="20201115 22:11:48.505"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:48.507" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:48.506" endtime="20201115 22:11:48.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:48.508" endtime="20201115 22:11:48.510"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.474" endtime="20201115 22:11:48.511"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.472" endtime="20201115 22:11:48.511"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:48.517" endtime="20201115 22:11:48.804"></status>
</kw>
<msg timestamp="20201115 22:11:48.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022709806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022727347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:48.516" endtime="20201115 22:11:48.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:48.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022709806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022727347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:48.808" endtime="20201115 22:11:48.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:48.816" endtime="20201115 22:11:48.817"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.513" endtime="20201115 22:11:48.818"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.512" endtime="20201115 22:11:48.818"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:48.822" level="INFO">${RESULT} = [{'time': 0.022727347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.754099999999939e-05, 'source_diff': 1.754099999999939e-05}, {'time': 0.023046042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:48.819" endtime="20201115 22:11:48.822"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:48.835" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:48.823" endtime="20201115 22:11:48.836"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:48.840" level="INFO">NAME: 00-overhead-23-set</msg>
<status status="PASS" starttime="20201115 22:11:48.839" endtime="20201115 22:11:48.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:48.842" level="INFO">VALUE: [1.754099999999939e-05, 1.7541999999998864e-05, 1.752699999999982e-05, 1.7569999999998004e-05, 1.7541999999998864e-05, 1.754099999999939e-05, 1.7541999999998864e-05, 1.7513999999999724e-05, 1.7499999999996685e-05, 1.7556000000001903e-05, 1.754099999999939e-05, 1.751300000000025e-05, 1.7542000000002334e-05, 1.7556000000001903e-05, 1.7541999999998864e-05, 1.7541999999998864e-05, 1.7541999999998864e-05, 1.755499999999896e-05, 1.759700000000114e-05, 1.7527999999999294e-05, 1.7513999999999724e-05, 1.7513999999999724e-05, 1.7513999999999724e-05, 1.7542000000002334e-05, 1.7541999999998864e-05, 1.7541999999998864e-05, 1.7528000000002764e-05, 1.7527999999995825e-05, 1.7541999999995395e-05, 1.7542000000002334e-05, 1.7528000000002764e-05, 1.754099999999592e-05, 1.7471999999997545e-05, 1.754100000000286e-05, 1.7528000000002764e-05, 1.754100000000286e-05, 1.755500000000243e-05, 1.7541999999995395e-05, 1.7527999999995825e-05, 1.7527999999995825e-05, 1.7542000000002334e-05, 1.7528000000002764e-05, 1.7598000000000613e-05, 1.7542000000002334e-05, 1.7514000000003194e-05, 1.7472000000004484e-05, 1.7528000000002764e-05, 1.7514000000003194e-05, 1.755500000000243e-05, 1.7542000000002334e-05]</msg>
<status status="PASS" starttime="20201115 22:11:48.841" endtime="20201115 22:11:48.843"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.836" endtime="20201115 22:11:48.843"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:48.846" endtime="20201115 22:11:48.847"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:48.849" endtime="20201115 22:11:48.868"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.848" endtime="20201115 22:11:48.869"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.844" endtime="20201115 22:11:48.869"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.470" endtime="20201115 22:11:48.870"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.468" endtime="20201115 22:11:48.870"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.467" endtime="20201115 22:11:48.870"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:48.872" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:48.881" endtime="20201115 22:11:48.908"></status>
</kw>
<msg timestamp="20201115 22:11:48.909" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:48.879" endtime="20201115 22:11:48.909"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:48.911" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:48.910" endtime="20201115 22:11:48.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:48.912" endtime="20201115 22:11:48.914"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.877" endtime="20201115 22:11:48.914"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.875" endtime="20201115 22:11:48.915"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:48.921" endtime="20201115 22:11:49.208"></status>
</kw>
<msg timestamp="20201115 22:11:49.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022393778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022411931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:48.920" endtime="20201115 22:11:49.211"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:49.219" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022393778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022411931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:49.212" endtime="20201115 22:11:49.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:49.220" endtime="20201115 22:11:49.221"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.917" endtime="20201115 22:11:49.222"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.915" endtime="20201115 22:11:49.222"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:49.226" level="INFO">${RESULT} = [{'time': 0.022411931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.815299999999992e-05, 'source_diff': 1.815299999999992e-05}, {'time': 0.022750569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:49.223" endtime="20201115 22:11:49.227"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:49.240" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:49.227" endtime="20201115 22:11:49.240"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:49.244" level="INFO">NAME: 00-overhead-24-set</msg>
<status status="PASS" starttime="20201115 22:11:49.243" endtime="20201115 22:11:49.244"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:49.247" level="INFO">VALUE: [1.815299999999992e-05, 1.8193999999999155e-05, 1.815299999999992e-05, 1.815299999999992e-05, 1.815299999999992e-05, 1.818099999999906e-05, 1.815299999999992e-05, 1.815299999999992e-05, 1.8166000000000015e-05, 1.811100000000121e-05, 1.815299999999992e-05, 1.815299999999992e-05, 1.815299999999992e-05, 1.8222000000001765e-05, 1.815299999999992e-05, 1.809700000000164e-05, 1.815299999999992e-05, 1.815299999999992e-05, 1.812500000000078e-05, 1.815299999999992e-05, 1.812500000000078e-05, 1.813900000000035e-05, 1.8193999999999155e-05, 1.813900000000035e-05, 1.813900000000035e-05, 1.812500000000078e-05, 1.815299999999992e-05, 1.813900000000035e-05, 1.8152000000000446e-05, 1.813900000000035e-05, 1.815299999999992e-05, 1.815299999999992e-05, 1.815299999999992e-05, 1.809700000000164e-05, 1.812500000000078e-05, 1.813900000000035e-05, 1.815299999999992e-05, 1.8166000000000015e-05, 1.813900000000035e-05, 1.815299999999992e-05, 1.8180000000006524e-05, 1.816699999999949e-05, 1.80969999999947e-05, 1.8152000000000446e-05, 1.815299999999992e-05, 1.813900000000035e-05, 1.815299999999992e-05, 1.8152000000000446e-05, 1.815299999999992e-05, 1.8193999999999155e-05]</msg>
<status status="PASS" starttime="20201115 22:11:49.245" endtime="20201115 22:11:49.247"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.240" endtime="20201115 22:11:49.248"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:49.250" endtime="20201115 22:11:49.251"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:49.254" endtime="20201115 22:11:49.273"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.252" endtime="20201115 22:11:49.274"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.248" endtime="20201115 22:11:49.274"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.873" endtime="20201115 22:11:49.274"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.871" endtime="20201115 22:11:49.274"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.871" endtime="20201115 22:11:49.275"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:49.277" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:49.286" endtime="20201115 22:11:49.314"></status>
</kw>
<msg timestamp="20201115 22:11:49.314" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:49.284" endtime="20201115 22:11:49.314"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:49.316" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:49.315" endtime="20201115 22:11:49.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:49.317" endtime="20201115 22:11:49.319"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.281" endtime="20201115 22:11:49.320"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.279" endtime="20201115 22:11:49.320"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:49.326" endtime="20201115 22:11:49.613"></status>
</kw>
<msg timestamp="20201115 22:11:49.616" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022385819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022404569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:49.325" endtime="20201115 22:11:49.616"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:49.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022385819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022404569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:49.617" endtime="20201115 22:11:49.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:49.625" endtime="20201115 22:11:49.626"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.322" endtime="20201115 22:11:49.627"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.321" endtime="20201115 22:11:49.627"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:49.631" level="INFO">${RESULT} = [{'time': 0.022404569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8749999999997935e-05, 'source_diff': 1.8749999999997935e-05}, {'time': 0.022758806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:49.628" endtime="20201115 22:11:49.631"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:49.646" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:49.633" endtime="20201115 22:11:49.646"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:49.651" level="INFO">NAME: 00-overhead-25-set</msg>
<status status="PASS" starttime="20201115 22:11:49.650" endtime="20201115 22:11:49.651"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:49.653" level="INFO">VALUE: [1.8749999999997935e-05, 1.8749999999997935e-05, 1.8778000000000544e-05, 1.8764000000000974e-05, 1.8777999999997075e-05, 1.8778000000000544e-05, 1.8749999999997935e-05, 1.8778000000000544e-05, 1.8750000000001404e-05, 1.8764000000000974e-05, 1.8764000000000974e-05, 1.8778000000000544e-05, 1.87769999999976e-05, 1.8750000000001404e-05, 1.8792000000000114e-05, 1.877700000000107e-05, 1.8763999999997505e-05, 1.8749999999997935e-05, 1.8722000000002265e-05, 1.8778000000000544e-05, 1.8764000000000974e-05, 1.87089999999987e-05, 1.8806000000003154e-05, 1.8763999999997505e-05, 1.8764000000000974e-05, 1.876299999999803e-05, 1.8791999999996645e-05, 1.87769999999976e-05, 1.8750000000004874e-05, 1.877700000000454e-05, 1.8749999999997935e-05, 1.87089999999987e-05, 1.8777999999997075e-05, 1.8763999999997505e-05, 1.8763999999997505e-05, 1.8777999999997075e-05, 1.8763999999997505e-05, 1.8763999999997505e-05, 1.8777999999997075e-05, 1.8778000000004014e-05, 1.880499999999674e-05, 1.8778000000004014e-05, 1.8763999999997505e-05, 1.8749999999997935e-05, 1.8750000000004874e-05, 1.8749999999997935e-05, 1.8777999999997075e-05, 1.8764000000004444e-05, 1.8777999999997075e-05, 1.8763999999997505e-05]</msg>
<status status="PASS" starttime="20201115 22:11:49.652" endtime="20201115 22:11:49.654"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.647" endtime="20201115 22:11:49.654"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:49.656" endtime="20201115 22:11:49.658"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:49.660" endtime="20201115 22:11:49.679"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.658" endtime="20201115 22:11:49.680"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.655" endtime="20201115 22:11:49.680"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.277" endtime="20201115 22:11:49.681"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.276" endtime="20201115 22:11:49.681"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.275" endtime="20201115 22:11:49.681"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.738" endtime="20201115 22:11:49.681"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="teardown">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:49.686" endtime="20201115 22:11:49.705"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.684" endtime="20201115 22:11:49.706"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.683" endtime="20201115 22:11:49.706"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:11:39.662" endtime="20201115 22:11:49.707" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Remove List">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:49.716" endtime="20201115 22:11:49.735"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.715" endtime="20201115 22:11:49.736"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:49.749" endtime="20201115 22:11:49.768"></status>
</kw>
<msg timestamp="20201115 22:11:49.768" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:49.747" endtime="20201115 22:11:49.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:49.771" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:49.769" endtime="20201115 22:11:49.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:11:49.774" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:11:49.772" endtime="20201115 22:11:49.774"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:49.745" endtime="20201115 22:11:49.775"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:49.742" endtime="20201115 22:11:49.776"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.741" endtime="20201115 22:11:49.776"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:11:49.780" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:11:49.779" endtime="20201115 22:11:49.780"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.777" endtime="20201115 22:11:49.780"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.740" endtime="20201115 22:11:49.780"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.740" endtime="20201115 22:11:49.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:49.781" endtime="20201115 22:11:49.783"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.738" endtime="20201115 22:11:49.783"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.737" endtime="20201115 22:11:49.784"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.713" endtime="20201115 22:11:49.784"></status>
</kw>
<kw name="${n} IN RANGE [ 25 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:49.788" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:49.797" endtime="20201115 22:11:49.812"></status>
</kw>
<msg timestamp="20201115 22:11:49.812" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:49.795" endtime="20201115 22:11:49.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:49.815" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:49.813" endtime="20201115 22:11:49.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:49.816" endtime="20201115 22:11:49.817"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.793" endtime="20201115 22:11:49.818"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.790" endtime="20201115 22:11:49.818"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:49.825" endtime="20201115 22:11:50.109"></status>
</kw>
<msg timestamp="20201115 22:11:50.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071000458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071001986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:49.823" endtime="20201115 22:11:50.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:50.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071000458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071001986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:50.114" endtime="20201115 22:11:50.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:50.122" endtime="20201115 22:11:50.123"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.821" endtime="20201115 22:11:50.124"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.819" endtime="20201115 22:11:50.124"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:50.128" level="INFO">${RESULT} = [{'time': 0.071001986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.52800000000064e-06, 'source_diff': 1.52800000000064e-06}, {'time': 0.071077708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:11:50.125" endtime="20201115 22:11:50.128"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:50.142" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:50.129" endtime="20201115 22:11:50.143"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:50.147" level="INFO">NAME: 00-overhead-1-remove</msg>
<status status="PASS" starttime="20201115 22:11:50.146" endtime="20201115 22:11:50.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:50.150" level="INFO">VALUE: [1.52800000000064e-06, 1.5970000000059548e-06, 1.541999999993271e-06, 1.582999999999446e-06, 1.5420000000071488e-06, 1.541999999993271e-06, 1.514000000008009e-06, 1.5420000000071488e-06, 1.514000000008009e-06, 1.5550000000003061e-06, 1.5839999999989196e-06, 1.5420000000071488e-06, 1.5409999999937973e-06, 1.52800000000064e-06, 1.5410000000076751e-06, 1.5550000000003061e-06, 1.52800000000064e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5139999999941312e-06, 1.4580000000097293e-06, 1.541999999993271e-06, 1.5130000000085353e-06, 1.5559999999997798e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.5550000000003061e-06, 1.514000000008009e-06, 1.5420000000071488e-06, 1.52800000000064e-06, 1.5409999999937973e-06, 1.541999999993271e-06, 1.5410000000076751e-06, 1.5000000000015001e-06, 1.569000000006815e-06, 1.5550000000003061e-06, 1.5269999999872885e-06, 1.473000000001834e-06, 1.5550000000003061e-06, 1.5410000000076751e-06, 1.5410000000076751e-06, 1.5410000000076751e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.5559999999997798e-06, 1.5409999999937973e-06, 1.5420000000071488e-06, 1.5270000000011663e-06, 1.5409999999937973e-06, 1.541999999993271e-06]</msg>
<status status="PASS" starttime="20201115 22:11:50.148" endtime="20201115 22:11:50.150"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.143" endtime="20201115 22:11:50.151"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:50.153" endtime="20201115 22:11:50.154"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:50.156" endtime="20201115 22:11:50.176"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.155" endtime="20201115 22:11:50.176"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.151" endtime="20201115 22:11:50.177"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.788" endtime="20201115 22:11:50.177"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.787" endtime="20201115 22:11:50.177"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.786" endtime="20201115 22:11:50.177"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:50.180" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:50.189" endtime="20201115 22:11:50.203"></status>
</kw>
<msg timestamp="20201115 22:11:50.204" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:50.187" endtime="20201115 22:11:50.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:50.206" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:50.205" endtime="20201115 22:11:50.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:50.207" endtime="20201115 22:11:50.209"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.185" endtime="20201115 22:11:50.210"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.183" endtime="20201115 22:11:50.210"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:50.216" endtime="20201115 22:11:50.502"></status>
</kw>
<msg timestamp="20201115 22:11:50.506" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023091083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023092764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:50.215" endtime="20201115 22:11:50.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:50.514" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023091083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023092764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:50.507" endtime="20201115 22:11:50.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:50.515" endtime="20201115 22:11:50.518"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.212" endtime="20201115 22:11:50.519"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.211" endtime="20201115 22:11:50.519"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:50.524" level="INFO">${RESULT} = [{'time': 0.023092764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6810000000033742e-06, 'source_diff': 1.6810000000033742e-06}, {'time': 0.023174028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:50.520" endtime="20201115 22:11:50.524"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:50.537" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:50.525" endtime="20201115 22:11:50.537"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:50.542" level="INFO">NAME: 00-overhead-2-remove</msg>
<status status="PASS" starttime="20201115 22:11:50.541" endtime="20201115 22:11:50.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:50.544" level="INFO">VALUE: [1.6810000000033742e-06, 1.6809999999999048e-06, 1.6670000000003349e-06, 1.7080000000030404e-06, 1.6800000000004311e-06, 1.6810000000033742e-06, 1.6669999999968654e-06, 1.6949999999994747e-06, 1.6669999999968654e-06, 1.6809999999999048e-06, 1.6250000000016251e-06, 1.6949999999994747e-06, 1.6809999999999048e-06, 1.694000000000001e-06, 1.6800000000004311e-06, 1.6670000000003349e-06, 1.7219999999991409e-06, 1.6949999999994747e-06, 1.6809999999999048e-06, 1.6809999999999048e-06, 1.6800000000004311e-06, 1.6800000000004311e-06, 1.6660000000008612e-06, 1.6800000000004311e-06, 1.6800000000004311e-06, 1.6800000000004311e-06, 1.6250000000016251e-06, 1.6670000000003349e-06, 1.707999999999571e-06, 1.6809999999999048e-06, 1.694000000000001e-06, 1.6520000000012913e-06, 1.707999999999571e-06, 1.6809999999999048e-06, 1.707999999999571e-06, 1.6800000000004311e-06, 1.694000000000001e-06, 1.6809999999999048e-06, 1.6660000000008612e-06, 1.6660000000008612e-06, 1.694000000000001e-06, 1.6949999999994747e-06, 1.6800000000004311e-06, 1.6669999999968654e-06, 1.6949999999994747e-06, 1.6660000000008612e-06, 1.694000000000001e-06, 1.7219999999991409e-06, 1.6670000000003349e-06, 1.6809999999999048e-06]</msg>
<status status="PASS" starttime="20201115 22:11:50.543" endtime="20201115 22:11:50.544"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.538" endtime="20201115 22:11:50.545"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:50.547" endtime="20201115 22:11:50.548"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:50.551" endtime="20201115 22:11:50.570"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.549" endtime="20201115 22:11:50.571"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.546" endtime="20201115 22:11:50.571"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.180" endtime="20201115 22:11:50.571"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.179" endtime="20201115 22:11:50.572"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.178" endtime="20201115 22:11:50.572"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:50.574" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:50.583" endtime="20201115 22:11:50.597"></status>
</kw>
<msg timestamp="20201115 22:11:50.598" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:50.581" endtime="20201115 22:11:50.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:50.600" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:50.599" endtime="20201115 22:11:50.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:50.601" endtime="20201115 22:11:50.603"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.579" endtime="20201115 22:11:50.604"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.577" endtime="20201115 22:11:50.604"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:50.610" endtime="20201115 22:11:50.897"></status>
</kw>
<msg timestamp="20201115 22:11:50.900" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022344847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022346667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:50.609" endtime="20201115 22:11:50.901"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:50.909" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022344847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022346667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:50.902" endtime="20201115 22:11:50.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:50.910" endtime="20201115 22:11:50.912"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.606" endtime="20201115 22:11:50.912"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.605" endtime="20201115 22:11:50.913"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:50.917" level="INFO">${RESULT} = [{'time': 0.022346667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8199999999995997e-06, 'source_diff': 1.8199999999995997e-06}, {'time': 0.02243275, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:11:50.914" endtime="20201115 22:11:50.917"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:50.930" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:50.918" endtime="20201115 22:11:50.930"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:50.934" level="INFO">NAME: 00-overhead-3-remove</msg>
<status status="PASS" starttime="20201115 22:11:50.933" endtime="20201115 22:11:50.935"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:50.937" level="INFO">VALUE: [1.8199999999995997e-06, 1.8610000000023053e-06, 1.8749999999984057e-06, 1.8339999999991696e-06, 1.8609999999988358e-06, 1.832999999999696e-06, 1.832999999999696e-06, 1.832999999999696e-06, 1.819000000000126e-06, 1.846999999999266e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.9029999999975455e-06, 1.832999999999696e-06, 1.8609999999988358e-06, 1.832999999999696e-06, 1.8199999999995997e-06, 1.8339999999991696e-06, 1.832999999999696e-06, 1.832999999999696e-06, 1.832999999999696e-06, 1.7920000000004599e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.832999999999696e-06, 1.8339999999991696e-06, 1.832999999999696e-06, 1.819000000000126e-06, 1.8339999999991696e-06, 1.846999999999266e-06, 1.9029999999975455e-06, 1.8339999999991696e-06, 1.819000000000126e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.819000000000126e-06, 1.846999999999266e-06, 1.8330000000031654e-06, 1.8749999999984057e-06, 1.8610000000023053e-06, 1.8339999999991696e-06, 1.8479999999987395e-06, 1.832999999999696e-06, 1.832999999999696e-06, 1.846999999999266e-06, 1.8200000000030692e-06, 1.8060000000000298e-06, 1.832999999999696e-06, 1.846999999999266e-06, 1.8470000000027353e-06]</msg>
<status status="PASS" starttime="20201115 22:11:50.935" endtime="20201115 22:11:50.937"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.931" endtime="20201115 22:11:50.938"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:50.940" endtime="20201115 22:11:50.941"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:50.943" endtime="20201115 22:11:50.963"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.942" endtime="20201115 22:11:50.963"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.938" endtime="20201115 22:11:50.964"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.575" endtime="20201115 22:11:50.964"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.573" endtime="20201115 22:11:50.964"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.572" endtime="20201115 22:11:50.964"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:50.967" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:50.975" endtime="20201115 22:11:50.990"></status>
</kw>
<msg timestamp="20201115 22:11:50.991" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:50.974" endtime="20201115 22:11:50.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:50.993" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:50.992" endtime="20201115 22:11:50.993"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:50.994" endtime="20201115 22:11:50.996"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.971" endtime="20201115 22:11:50.996"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.969" endtime="20201115 22:11:50.997"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:51.004" endtime="20201115 22:11:51.291"></status>
</kw>
<msg timestamp="20201115 22:11:51.294" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022301389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022303361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:51.002" endtime="20201115 22:11:51.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:51.302" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022301389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022303361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:51.295" endtime="20201115 22:11:51.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:51.304" endtime="20201115 22:11:51.305"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.999" endtime="20201115 22:11:51.306"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.998" endtime="20201115 22:11:51.306"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:51.310" level="INFO">${RESULT} = [{'time': 0.022303361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.971999999999391e-06, 'source_diff': 1.971999999999391e-06}, {'time': 0.022396319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:51.307" endtime="20201115 22:11:51.311"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:51.323" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:51.311" endtime="20201115 22:11:51.324"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:51.328" level="INFO">NAME: 00-overhead-4-remove</msg>
<status status="PASS" starttime="20201115 22:11:51.327" endtime="20201115 22:11:51.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:51.330" level="INFO">VALUE: [1.971999999999391e-06, 1.9720000000028604e-06, 1.971999999999391e-06, 2.000000000002e-06, 1.985999999998961e-06, 1.9720000000028604e-06, 1.9999999999985307e-06, 1.985999999998961e-06, 2.01400000000157e-06, 1.971999999999391e-06, 1.985999999998961e-06, 1.985999999998961e-06, 1.971999999999391e-06, 1.985999999998961e-06, 2.000000000002e-06, 1.9999999999985307e-06, 1.9999999999985307e-06, 1.9860000000024303e-06, 1.9449999999997247e-06, 1.9999999999985307e-06, 1.9999999999985307e-06, 1.9720000000028604e-06, 1.9999999999985307e-06, 1.973000000002334e-06, 1.985999999998961e-06, 1.985999999998961e-06, 1.987000000001904e-06, 1.9860000000024303e-06, 2.000000000002e-06, 2.0139999999981006e-06, 1.971999999999391e-06, 2.0410000000012363e-06, 1.957999999999821e-06, 1.957999999999821e-06, 1.9999999999985307e-06, 1.985999999998961e-06, 1.985999999998961e-06, 1.985999999998961e-06, 1.985999999998961e-06, 2.000000000002e-06, 2.026999999998197e-06, 1.957999999999821e-06, 1.985999999998961e-06, 1.9720000000028604e-06, 2.01400000000157e-06, 2.02800000000114e-06, 1.9860000000024303e-06, 1.957999999999821e-06, 1.9999999999985307e-06, 2.02800000000114e-06]</msg>
<status status="PASS" starttime="20201115 22:11:51.329" endtime="20201115 22:11:51.331"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.324" endtime="20201115 22:11:51.331"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:51.333" endtime="20201115 22:11:51.335"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:51.337" endtime="20201115 22:11:51.356"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.335" endtime="20201115 22:11:51.357"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.332" endtime="20201115 22:11:51.357"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.967" endtime="20201115 22:11:51.357"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.966" endtime="20201115 22:11:51.358"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.965" endtime="20201115 22:11:51.358"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:51.360" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:51.370" endtime="20201115 22:11:51.385"></status>
</kw>
<msg timestamp="20201115 22:11:51.386" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:51.367" endtime="20201115 22:11:51.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:51.388" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:51.387" endtime="20201115 22:11:51.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:51.389" endtime="20201115 22:11:51.391"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.365" endtime="20201115 22:11:51.392"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.363" endtime="20201115 22:11:51.392"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:51.398" endtime="20201115 22:11:51.684"></status>
</kw>
<msg timestamp="20201115 22:11:51.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023791639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023793778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:51.397" endtime="20201115 22:11:51.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:51.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023791639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023793778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:51.688" endtime="20201115 22:11:51.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:51.696" endtime="20201115 22:11:51.698"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.394" endtime="20201115 22:11:51.699"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.393" endtime="20201115 22:11:51.699"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:51.703" level="INFO">${RESULT} = [{'time': 0.023793778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.139000000001695e-06, 'source_diff': 2.139000000001695e-06}, {'time': 0.023894903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:51.700" endtime="20201115 22:11:51.703"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:51.716" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:51.704" endtime="20201115 22:11:51.717"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:51.721" level="INFO">NAME: 00-overhead-5-remove</msg>
<status status="PASS" starttime="20201115 22:11:51.720" endtime="20201115 22:11:51.721"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:51.723" level="INFO">VALUE: [2.139000000001695e-06, 2.1529999999977956e-06, 2.139000000001695e-06, 2.125000000002125e-06, 2.208000000000071e-06, 2.137999999998752e-06, 2.1389999999982257e-06, 2.1389999999982257e-06, 2.1389999999982257e-06, 2.125000000002125e-06, 2.0979999999989896e-06, 2.1249999999986557e-06, 2.1249999999986557e-06, 2.139000000001695e-06, 2.1660000000013613e-06, 2.1389999999982257e-06, 2.110999999999086e-06, 2.1529999999977956e-06, 2.125000000002125e-06, 2.1389999999982257e-06, 2.1249999999986557e-06, 2.1520000000017914e-06, 2.2229999999991146e-06, 2.1389999999982257e-06, 2.1529999999977956e-06, 2.096999999999516e-06, 2.1249999999986557e-06, 2.125000000002125e-06, 2.1389999999982257e-06, 2.139000000001695e-06, 2.069000000000376e-06, 2.139000000001695e-06, 2.139000000001695e-06, 2.125000000002125e-06, 2.069000000000376e-06, 2.125000000002125e-06, 2.125000000002125e-06, 2.1389999999982257e-06, 2.110999999999086e-06, 2.1389999999982257e-06, 2.125000000002125e-06, 2.082999999999946e-06, 2.096999999999516e-06, 2.139000000001695e-06, 2.1249999999986557e-06, 2.1389999999982257e-06, 2.1389999999982257e-06, 2.1380000000022215e-06, 2.0699999999998497e-06, 2.096999999999516e-06]</msg>
<status status="PASS" starttime="20201115 22:11:51.722" endtime="20201115 22:11:51.724"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.717" endtime="20201115 22:11:51.724"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:51.726" endtime="20201115 22:11:51.728"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:51.730" endtime="20201115 22:11:51.749"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.728" endtime="20201115 22:11:51.750"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.725" endtime="20201115 22:11:51.750"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.361" endtime="20201115 22:11:51.750"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.359" endtime="20201115 22:11:51.751"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.358" endtime="20201115 22:11:51.751"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:51.753" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:51.762" endtime="20201115 22:11:51.778"></status>
</kw>
<msg timestamp="20201115 22:11:51.779" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:51.761" endtime="20201115 22:11:51.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:51.781" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:51.780" endtime="20201115 22:11:51.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:51.782" endtime="20201115 22:11:51.784"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.758" endtime="20201115 22:11:51.784"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.756" endtime="20201115 22:11:51.785"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:51.791" endtime="20201115 22:11:52.078"></status>
</kw>
<msg timestamp="20201115 22:11:52.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02296575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022968014, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:11:51.790" endtime="20201115 22:11:52.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:52.089" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02296575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022968014, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:11:52.082" endtime="20201115 22:11:52.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:52.090" endtime="20201115 22:11:52.091"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.787" endtime="20201115 22:11:52.092"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.785" endtime="20201115 22:11:52.092"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:52.096" level="INFO">${RESULT} = [{'time': 0.022968014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2639999999983507e-06, 'source_diff': 2.2639999999983507e-06}, {'time': 0.023074111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:52.093" endtime="20201115 22:11:52.097"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:52.109" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:52.097" endtime="20201115 22:11:52.110"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:52.114" level="INFO">NAME: 00-overhead-6-remove</msg>
<status status="PASS" starttime="20201115 22:11:52.113" endtime="20201115 22:11:52.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:52.116" level="INFO">VALUE: [2.2639999999983507e-06, 2.26400000000182e-06, 2.2910000000014863e-06, 2.29200000000096e-06, 2.290999999998017e-06, 2.305000000001056e-06, 2.3329999999967266e-06, 2.276999999998447e-06, 2.29200000000096e-06, 2.2499999999987808e-06, 2.2919999999974905e-06, 2.30600000000053e-06, 2.27800000000139e-06, 2.29200000000096e-06, 2.3200000000000998e-06, 2.25000000000225e-06, 2.26400000000182e-06, 2.27800000000139e-06, 2.27800000000139e-06, 2.29200000000096e-06, 2.319000000000626e-06, 2.290999999998017e-06, 2.29200000000096e-06, 2.2770000000019164e-06, 2.2779999999979206e-06, 2.3200000000000998e-06, 2.2919999999974905e-06, 2.2639999999983507e-06, 2.3059999999970604e-06, 2.2779999999979206e-06, 2.262999999998877e-06, 2.27800000000139e-06, 2.276999999998447e-06, 2.30600000000053e-06, 2.235999999999211e-06, 2.3049999999975868e-06, 2.29200000000096e-06, 2.30600000000053e-06, 2.2919999999974905e-06, 2.319000000000626e-06, 2.2919999999974905e-06, 2.290999999998017e-06, 2.2779999999979206e-06, 2.346999999999766e-06, 2.2779999999979206e-06, 2.29200000000096e-06, 2.2919999999974905e-06, 2.2779999999979206e-06, 2.305000000001056e-06, 2.27800000000139e-06]</msg>
<status status="PASS" starttime="20201115 22:11:52.115" endtime="20201115 22:11:52.117"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.110" endtime="20201115 22:11:52.118"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:52.120" endtime="20201115 22:11:52.121"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:52.123" endtime="20201115 22:11:52.143"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.122" endtime="20201115 22:11:52.143"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.118" endtime="20201115 22:11:52.144"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.754" endtime="20201115 22:11:52.144"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.752" endtime="20201115 22:11:52.144"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.751" endtime="20201115 22:11:52.144"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:52.147" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:52.155" endtime="20201115 22:11:52.171"></status>
</kw>
<msg timestamp="20201115 22:11:52.171" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:52.154" endtime="20201115 22:11:52.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:52.174" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:52.172" endtime="20201115 22:11:52.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:52.175" endtime="20201115 22:11:52.176"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.151" endtime="20201115 22:11:52.177"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.149" endtime="20201115 22:11:52.177"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:52.184" endtime="20201115 22:11:52.470"></status>
</kw>
<msg timestamp="20201115 22:11:52.473" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022362694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022365125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:52.182" endtime="20201115 22:11:52.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:52.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022362694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022365125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:52.474" endtime="20201115 22:11:52.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:52.482" endtime="20201115 22:11:52.484"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.180" endtime="20201115 22:11:52.484"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.178" endtime="20201115 22:11:52.485"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:52.489" level="INFO">${RESULT} = [{'time': 0.022365125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.431000000000655e-06, 'source_diff': 2.431000000000655e-06}, {'time': 0.022478528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:52.485" endtime="20201115 22:11:52.489"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:52.502" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:52.490" endtime="20201115 22:11:52.502"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:52.506" level="INFO">NAME: 00-overhead-7-remove</msg>
<status status="PASS" starttime="20201115 22:11:52.505" endtime="20201115 22:11:52.507"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:52.509" level="INFO">VALUE: [2.431000000000655e-06, 2.417000000001085e-06, 2.4450000000002248e-06, 2.4450000000002248e-06, 2.4300000000011812e-06, 2.4309999999971854e-06, 2.458000000000321e-06, 2.458000000000321e-06, 2.4589999999997947e-06, 2.4450000000002248e-06, 2.431000000000655e-06, 2.4450000000002248e-06, 2.444000000000751e-06, 2.417000000001085e-06, 2.4160000000016113e-06, 2.4450000000002248e-06, 2.444000000000751e-06, 2.4450000000002248e-06, 2.417000000001085e-06, 2.4439999999972817e-06, 2.360999999999336e-06, 2.4450000000002248e-06, 2.444000000000751e-06, 2.431000000000655e-06, 2.431000000000655e-06, 2.431000000000655e-06, 2.4169999999976155e-06, 2.431000000000655e-06, 2.417000000001085e-06, 2.4450000000002248e-06, 2.4450000000002248e-06, 2.4450000000002248e-06, 2.4579999999968516e-06, 2.4439999999972817e-06, 2.4439999999972817e-06, 2.4439999999972817e-06, 2.4450000000002248e-06, 2.431000000000655e-06, 2.403000000001515e-06, 2.4309999999971854e-06, 2.403000000001515e-06, 2.4589999999997947e-06, 2.4450000000002248e-06, 2.444000000000751e-06, 2.431000000000655e-06, 2.4450000000002248e-06, 2.4160000000016113e-06, 2.431000000000655e-06, 2.431000000000655e-06, 2.52800000000164e-06]</msg>
<status status="PASS" starttime="20201115 22:11:52.507" endtime="20201115 22:11:52.510"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.503" endtime="20201115 22:11:52.510"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:52.513" endtime="20201115 22:11:52.514"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:52.516" endtime="20201115 22:11:52.535"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.514" endtime="20201115 22:11:52.536"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.511" endtime="20201115 22:11:52.536"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.147" endtime="20201115 22:11:52.537"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.145" endtime="20201115 22:11:52.537"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.145" endtime="20201115 22:11:52.537"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:52.539" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:52.549" endtime="20201115 22:11:52.566"></status>
</kw>
<msg timestamp="20201115 22:11:52.567" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:52.547" endtime="20201115 22:11:52.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:52.569" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:52.568" endtime="20201115 22:11:52.569"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:52.570" endtime="20201115 22:11:52.572"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.544" endtime="20201115 22:11:52.572"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.542" endtime="20201115 22:11:52.573"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:52.579" endtime="20201115 22:11:52.867"></status>
</kw>
<msg timestamp="20201115 22:11:52.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023723111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023725722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:52.578" endtime="20201115 22:11:52.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:52.878" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023723111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023725722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:52.871" endtime="20201115 22:11:52.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:52.879" endtime="20201115 22:11:52.881"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.575" endtime="20201115 22:11:52.881"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.573" endtime="20201115 22:11:52.882"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:52.886" level="INFO">${RESULT} = [{'time': 0.023725722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.610999999999586e-06, 'source_diff': 2.610999999999586e-06}, {'time': 0.023850458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:52.883" endtime="20201115 22:11:52.886"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:52.899" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:52.887" endtime="20201115 22:11:52.900"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:52.904" level="INFO">NAME: 00-overhead-8-remove</msg>
<status status="PASS" starttime="20201115 22:11:52.903" endtime="20201115 22:11:52.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:52.906" level="INFO">VALUE: [2.610999999999586e-06, 2.597000000000016e-06, 2.569000000000876e-06, 2.583000000000446e-06, 2.583000000000446e-06, 2.5829999999969766e-06, 2.569000000000876e-06, 2.597000000000016e-06, 2.6249999999991558e-06, 2.583000000000446e-06, 2.569000000000876e-06, 2.583000000000446e-06, 2.597000000000016e-06, 2.583000000000446e-06, 2.6249999999991558e-06, 2.5839999999999197e-06, 2.5839999999999197e-06, 2.597000000000016e-06, 2.653000000001765e-06, 2.583000000000446e-06, 2.5700000000003498e-06, 2.5839999999999197e-06, 2.5839999999999197e-06, 2.583000000000446e-06, 2.583000000000446e-06, 2.597000000000016e-06, 2.5979999999994896e-06, 2.5839999999999197e-06, 2.569000000000876e-06, 2.610999999999586e-06, 2.6389999999987257e-06, 2.610999999999586e-06, 2.5839999999999197e-06, 2.5839999999999197e-06, 2.5839999999999197e-06, 2.583000000000446e-06, 2.5839999999999197e-06, 2.5979999999994896e-06, 2.583000000000446e-06, 2.5979999999994896e-06, 2.5979999999994896e-06, 2.5700000000003498e-06, 2.583000000000446e-06, 2.5979999999994896e-06, 2.583000000000446e-06, 2.5839999999999197e-06, 2.5549999999978368e-06, 2.569000000000876e-06, 2.5839999999999197e-06, 2.583000000000446e-06]</msg>
<status status="PASS" starttime="20201115 22:11:52.905" endtime="20201115 22:11:52.907"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.900" endtime="20201115 22:11:52.907"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:52.909" endtime="20201115 22:11:52.911"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:52.913" endtime="20201115 22:11:52.932"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.911" endtime="20201115 22:11:52.933"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.908" endtime="20201115 22:11:52.933"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.540" endtime="20201115 22:11:52.933"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.538" endtime="20201115 22:11:52.934"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.537" endtime="20201115 22:11:52.934"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:52.936" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:52.945" endtime="20201115 22:11:52.961"></status>
</kw>
<msg timestamp="20201115 22:11:52.962" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:52.943" endtime="20201115 22:11:52.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:52.964" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:52.963" endtime="20201115 22:11:52.965"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:52.965" endtime="20201115 22:11:52.967"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.941" endtime="20201115 22:11:52.967"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.938" endtime="20201115 22:11:52.968"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:52.974" endtime="20201115 22:11:53.260"></status>
</kw>
<msg timestamp="20201115 22:11:53.263" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022370458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022373181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:52.973" endtime="20201115 22:11:53.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:53.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022370458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022373181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:53.264" endtime="20201115 22:11:53.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:53.272" endtime="20201115 22:11:53.274"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.970" endtime="20201115 22:11:53.275"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.968" endtime="20201115 22:11:53.275"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:53.279" level="INFO">${RESULT} = [{'time': 0.022373181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7229999999996146e-06, 'source_diff': 2.7229999999996146e-06}, {'time': 0.022505708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:53.276" endtime="20201115 22:11:53.279"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:53.292" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:53.280" endtime="20201115 22:11:53.292"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:53.296" level="INFO">NAME: 00-overhead-9-remove</msg>
<status status="PASS" starttime="20201115 22:11:53.295" endtime="20201115 22:11:53.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:53.299" level="INFO">VALUE: [2.7229999999996146e-06, 2.735999999999711e-06, 2.7630000000028465e-06, 2.735999999999711e-06, 2.79200000000146e-06, 2.7779999999984206e-06, 2.735999999999711e-06, 2.749999999999281e-06, 2.735999999999711e-06, 2.735999999999711e-06, 2.735999999999711e-06, 2.77800000000189e-06, 2.722000000000141e-06, 2.749999999999281e-06, 2.667000000001335e-06, 2.749999999999281e-06, 2.735999999999711e-06, 2.7919999999979905e-06, 2.722000000000141e-06, 2.79200000000146e-06, 2.7639999999988507e-06, 2.735999999999711e-06, 2.749999999999281e-06, 2.737000000002654e-06, 2.722000000000141e-06, 2.735999999999711e-06, 2.7910000000019863e-06, 2.735999999999711e-06, 2.722000000000141e-06, 2.735999999999711e-06, 2.694000000001001e-06, 2.749999999999281e-06, 2.722000000000141e-06, 2.737000000002654e-06, 2.722000000000141e-06, 2.735999999999711e-06, 2.735999999999711e-06, 2.735999999999711e-06, 2.7229999999996146e-06, 2.7360000000031803e-06, 2.735999999999711e-06, 2.790999999998517e-06, 2.79200000000146e-06, 2.735999999999711e-06, 2.735999999999711e-06, 2.749999999999281e-06, 2.722000000000141e-06, 2.722000000000141e-06, 2.7229999999996146e-06, 2.722000000000141e-06]</msg>
<status status="PASS" starttime="20201115 22:11:53.297" endtime="20201115 22:11:53.299"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.293" endtime="20201115 22:11:53.300"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:53.302" endtime="20201115 22:11:53.303"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:53.305" endtime="20201115 22:11:53.325"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.304" endtime="20201115 22:11:53.325"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.300" endtime="20201115 22:11:53.326"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.937" endtime="20201115 22:11:53.326"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.935" endtime="20201115 22:11:53.326"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.934" endtime="20201115 22:11:53.326"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:53.328" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:53.337" endtime="20201115 22:11:53.354"></status>
</kw>
<msg timestamp="20201115 22:11:53.355" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:53.336" endtime="20201115 22:11:53.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:53.357" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:53.356" endtime="20201115 22:11:53.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:53.358" endtime="20201115 22:11:53.360"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.333" endtime="20201115 22:11:53.360"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.331" endtime="20201115 22:11:53.361"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:53.368" endtime="20201115 22:11:53.654"></status>
</kw>
<msg timestamp="20201115 22:11:53.657" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022341264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022344153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:53.366" endtime="20201115 22:11:53.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:53.665" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022341264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022344153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:53.658" endtime="20201115 22:11:53.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:53.667" endtime="20201115 22:11:53.668"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.363" endtime="20201115 22:11:53.669"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.361" endtime="20201115 22:11:53.669"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:53.673" level="INFO">${RESULT} = [{'time': 0.022344153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8889999999989757e-06, 'source_diff': 2.8889999999989757e-06}, {'time': 0.022485417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:53.670" endtime="20201115 22:11:53.674"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:53.686" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:53.674" endtime="20201115 22:11:53.687"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:53.691" level="INFO">NAME: 00-overhead-10-remove</msg>
<status status="PASS" starttime="20201115 22:11:53.690" endtime="20201115 22:11:53.691"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:53.693" level="INFO">VALUE: [2.8889999999989757e-06, 2.931000000001155e-06, 2.889000000002445e-06, 2.903000000002015e-06, 2.874999999999406e-06, 2.8750000000028753e-06, 2.8889999999989757e-06, 2.9029999999985456e-06, 2.860999999999836e-06, 2.9029999999985456e-06, 2.9029999999985456e-06, 2.915999999998642e-06, 2.874999999999406e-06, 2.889000000002445e-06, 2.8889999999989757e-06, 2.889000000002445e-06, 2.8889999999989757e-06, 2.9020000000025414e-06, 2.860999999999836e-06, 2.887999999999502e-06, 2.8889999999989757e-06, 2.931000000001155e-06, 2.9160000000021113e-06, 2.9309999999976855e-06, 2.833000000000696e-06, 2.9309999999976855e-06, 2.874999999999406e-06, 2.8889999999989757e-06, 2.874999999999406e-06, 2.833000000000696e-06, 2.874999999999406e-06, 2.945000000000725e-06, 2.8619999999993095e-06, 2.8479999999997396e-06, 2.8329999999972266e-06, 2.889000000002445e-06, 2.8889999999989757e-06, 2.8889999999989757e-06, 2.874999999999406e-06, 2.889000000002445e-06, 2.874999999999406e-06, 2.860999999999836e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.903000000002015e-06, 2.8889999999989757e-06, 2.874999999999406e-06, 2.8750000000028753e-06, 2.9029999999985456e-06]</msg>
<status status="PASS" starttime="20201115 22:11:53.692" endtime="20201115 22:11:53.694"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.687" endtime="20201115 22:11:53.694"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:53.696" endtime="20201115 22:11:53.698"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:53.700" endtime="20201115 22:11:53.719"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.698" endtime="20201115 22:11:53.720"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.695" endtime="20201115 22:11:53.720"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.329" endtime="20201115 22:11:53.720"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.327" endtime="20201115 22:11:53.721"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.327" endtime="20201115 22:11:53.721"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:53.723" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:53.732" endtime="20201115 22:11:53.750"></status>
</kw>
<msg timestamp="20201115 22:11:53.750" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:53.730" endtime="20201115 22:11:53.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:53.753" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:53.751" endtime="20201115 22:11:53.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:53.754" endtime="20201115 22:11:53.756"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.728" endtime="20201115 22:11:53.756"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.726" endtime="20201115 22:11:53.756"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:53.763" endtime="20201115 22:11:54.050"></status>
</kw>
<msg timestamp="20201115 22:11:54.053" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022504056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022507083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:53.762" endtime="20201115 22:11:54.053"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:54.061" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022504056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022507083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:54.054" endtime="20201115 22:11:54.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:54.062" endtime="20201115 22:11:54.064"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.759" endtime="20201115 22:11:54.064"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.757" endtime="20201115 22:11:54.065"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:54.069" level="INFO">${RESULT} = [{'time': 0.022507083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.026999999999197e-06, 'source_diff': 3.026999999999197e-06}, {'time': 0.022659556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:54.066" endtime="20201115 22:11:54.069"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:54.082" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:54.070" endtime="20201115 22:11:54.082"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:54.086" level="INFO">NAME: 00-overhead-11-remove</msg>
<status status="PASS" starttime="20201115 22:11:54.085" endtime="20201115 22:11:54.087"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:54.089" level="INFO">VALUE: [3.026999999999197e-06, 3.04200000000171e-06, 3.05600000000128e-06, 3.040999999998767e-06, 3.0139999999991007e-06, 3.0279999999986706e-06, 3.097000000000516e-06, 3.0419999999982406e-06, 3.111000000000086e-06, 3.0550000000018063e-06, 2.972000000000391e-06, 3.083000000000946e-06, 3.02800000000214e-06, 3.07000000000085e-06, 3.02800000000214e-06, 3.02800000000214e-06, 3.026999999999197e-06, 3.02800000000214e-06, 3.01400000000257e-06, 3.054999999998337e-06, 3.05600000000128e-06, 3.0279999999986706e-06, 3.0139999999991007e-06, 3.0139999999991007e-06, 3.04200000000171e-06, 2.972000000000391e-06, 3.040999999998767e-06, 3.040999999998767e-06, 3.0279999999986706e-06, 3.040999999998767e-06, 3.0550000000018063e-06, 3.0419999999982406e-06, 3.04200000000171e-06, 3.0410000000022364e-06, 3.040999999998767e-06, 3.04200000000171e-06, 3.02800000000214e-06, 3.04200000000171e-06, 3.012999999999627e-06, 3.0979999999999897e-06, 3.040999999998767e-06, 3.040999999998767e-06, 3.054999999998337e-06, 3.05600000000128e-06, 3.0419999999982406e-06, 3.0139999999991007e-06, 3.0419999999982406e-06, 2.985999999999961e-06, 3.01400000000257e-06, 3.05600000000128e-06]</msg>
<status status="PASS" starttime="20201115 22:11:54.087" endtime="20201115 22:11:54.089"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:54.083" endtime="20201115 22:11:54.090"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:54.092" endtime="20201115 22:11:54.093"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:54.095" endtime="20201115 22:11:54.115"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:54.094" endtime="20201115 22:11:54.115"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:54.090" endtime="20201115 22:11:54.116"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.724" endtime="20201115 22:11:54.116"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.722" endtime="20201115 22:11:54.116"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.721" endtime="20201115 22:11:54.116"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:54.118" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:54.128" endtime="20201115 22:11:54.146"></status>
</kw>
<msg timestamp="20201115 22:11:54.146" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:54.126" endtime="20201115 22:11:54.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:54.149" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:54.147" endtime="20201115 22:11:54.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:54.150" endtime="20201115 22:11:54.152"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:54.124" endtime="20201115 22:11:54.152"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:54.121" endtime="20201115 22:11:54.153"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:54.159" endtime="20201115 22:11:54.447"></status>
</kw>
<msg timestamp="20201115 22:11:54.450" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022963736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022966917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:54.157" endtime="20201115 22:11:54.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:54.458" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022963736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022966917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:54.451" endtime="20201115 22:11:54.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:54.459" endtime="20201115 22:11:54.461"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:54.155" endtime="20201115 22:11:54.461"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:54.153" endtime="20201115 22:11:54.462"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:54.466" level="INFO">${RESULT} = [{'time': 0.022966917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.181000000001405e-06, 'source_diff': 3.181000000001405e-06}, {'time': 0.023130569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:54.463" endtime="20201115 22:11:54.466"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:54.479" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:54.467" endtime="20201115 22:11:54.480"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:54.484" level="INFO">NAME: 00-overhead-12-remove</msg>
<status status="PASS" starttime="20201115 22:11:54.483" endtime="20201115 22:11:54.484"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:54.486" level="INFO">VALUE: [3.181000000001405e-06, 3.137999999999752e-06, 3.222000000000641e-06, 3.1939999999980317e-06, 3.1949999999975054e-06, 3.194000000001501e-06, 3.1809999999979355e-06, 3.1939999999980317e-06, 3.1809999999979355e-06, 3.139000000002695e-06, 3.1529999999987957e-06, 3.179999999998462e-06, 3.1809999999979355e-06, 3.097000000000516e-06, 3.1669999999983656e-06, 3.181000000001405e-06, 3.1939999999980317e-06, 3.1529999999987957e-06, 3.1949999999975054e-06, 3.179999999998462e-06, 3.208000000001071e-06, 3.1529999999987957e-06, 3.1800000000019313e-06, 3.1389999999992257e-06, 3.2079999999976017e-06, 3.167000000001835e-06, 3.2090000000005448e-06, 3.181000000001405e-06, 3.181000000001405e-06, 3.1939999999980317e-06, 3.1250000000031253e-06, 3.1800000000019313e-06, 3.181000000001405e-06, 3.179999999998462e-06, 3.1800000000019313e-06, 3.2090000000005448e-06, 3.1809999999979355e-06, 3.2090000000005448e-06, 3.194000000001501e-06, 3.165999999998892e-06, 3.1800000000019313e-06, 3.181000000001405e-06, 3.165999999998892e-06, 3.2090000000005448e-06, 3.165999999998892e-06, 3.208000000001071e-06, 3.194000000001501e-06, 3.181000000001405e-06, 3.222000000000641e-06, 3.1669999999983656e-06]</msg>
<status status="PASS" starttime="20201115 22:11:54.485" endtime="20201115 22:11:54.486"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:54.480" endtime="20201115 22:11:54.487"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:54.489" endtime="20201115 22:11:54.491"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:54.493" endtime="20201115 22:11:54.512"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:54.491" endtime="20201115 22:11:54.513"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:54.488" endtime="20201115 22:11:54.513"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:54.119" endtime="20201115 22:11:54.514"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:54.117" endtime="20201115 22:11:54.514"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:54.117" endtime="20201115 22:11:54.514"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:54.516" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:54.525" endtime="20201115 22:11:54.544"></status>
</kw>
<msg timestamp="20201115 22:11:54.544" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:54.524" endtime="20201115 22:11:54.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:54.547" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:54.545" endtime="20201115 22:11:54.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:54.548" endtime="20201115 22:11:54.549"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:54.521" endtime="20201115 22:11:54.550"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:54.519" endtime="20201115 22:11:54.550"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:54.557" endtime="20201115 22:11:54.843"></status>
</kw>
<msg timestamp="20201115 22:11:54.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02252325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022526583, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:11:54.555" endtime="20201115 22:11:54.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:54.854" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02252325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022526583, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:11:54.847" endtime="20201115 22:11:54.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:54.855" endtime="20201115 22:11:54.856"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:54.553" endtime="20201115 22:11:54.857"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:54.551" endtime="20201115 22:11:54.857"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:54.861" level="INFO">${RESULT} = [{'time': 0.022526583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3329999999977267e-06, 'source_diff': 3.3329999999977267e-06}, {'time': 0.022702278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:54.858" endtime="20201115 22:11:54.862"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:54.875" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:54.862" endtime="20201115 22:11:54.875"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:54.879" level="INFO">NAME: 00-overhead-13-remove</msg>
<status status="PASS" starttime="20201115 22:11:54.878" endtime="20201115 22:11:54.879"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:54.881" level="INFO">VALUE: [3.3329999999977267e-06, 3.347000000000766e-06, 3.3469999999972966e-06, 3.3480000000002397e-06, 3.290999999999017e-06, 3.3339999999972003e-06, 3.347000000000766e-06, 3.347000000000766e-06, 3.333000000001196e-06, 3.3329999999977267e-06, 3.3340000000006698e-06, 3.3199999999976304e-06, 3.3329999999977267e-06, 3.361000000000336e-06, 3.290999999999017e-06, 3.333000000001196e-06, 3.3329999999977267e-06, 3.361000000000336e-06, 3.3469999999972966e-06, 3.3329999999977267e-06, 3.3339999999972003e-06, 3.3189999999981568e-06, 3.319000000001626e-06, 3.347000000000766e-06, 3.3480000000002397e-06, 3.304999999998587e-06, 3.3189999999981568e-06, 3.347000000000766e-06, 3.3339999999972003e-06, 3.347000000000766e-06, 3.374999999999906e-06, 3.3189999999981568e-06, 3.3469999999972966e-06, 3.361000000000336e-06, 3.333000000001196e-06, 3.3340000000006698e-06, 3.361000000000336e-06, 3.3340000000006698e-06, 3.3199999999976304e-06, 3.333000000001196e-06, 3.347000000000766e-06, 3.347000000000766e-06, 3.361000000000336e-06, 3.333000000001196e-06, 3.3329999999977267e-06, 3.3329999999977267e-06, 3.319000000001626e-06, 3.304999999998587e-06, 3.361000000000336e-06, 3.3329999999977267e-06]</msg>
<status status="PASS" starttime="20201115 22:11:54.880" endtime="20201115 22:11:54.882"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:54.875" endtime="20201115 22:11:54.883"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:54.885" endtime="20201115 22:11:54.886"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:54.888" endtime="20201115 22:11:54.908"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:54.887" endtime="20201115 22:11:54.908"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:54.883" endtime="20201115 22:11:54.909"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:54.517" endtime="20201115 22:11:54.909"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:54.515" endtime="20201115 22:11:54.909"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:54.515" endtime="20201115 22:11:54.909"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:54.912" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:54.920" endtime="20201115 22:11:54.940"></status>
</kw>
<msg timestamp="20201115 22:11:54.941" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:54.919" endtime="20201115 22:11:54.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:54.943" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:54.942" endtime="20201115 22:11:54.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:54.944" endtime="20201115 22:11:54.946"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:54.916" endtime="20201115 22:11:54.946"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:54.914" endtime="20201115 22:11:54.947"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:54.953" endtime="20201115 22:11:55.240"></status>
</kw>
<msg timestamp="20201115 22:11:55.242" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022681764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022685208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:54.952" endtime="20201115 22:11:55.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:55.250" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022681764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022685208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:55.244" endtime="20201115 22:11:55.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:55.251" endtime="20201115 22:11:55.253"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:54.949" endtime="20201115 22:11:55.254"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:54.947" endtime="20201115 22:11:55.254"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:55.258" level="INFO">${RESULT} = [{'time': 0.022685208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4439999999982818e-06, 'source_diff': 3.4439999999982818e-06}, {'time': 0.022874111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:55.255" endtime="20201115 22:11:55.258"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:55.271" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:55.259" endtime="20201115 22:11:55.272"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:55.276" level="INFO">NAME: 00-overhead-14-remove</msg>
<status status="PASS" starttime="20201115 22:11:55.275" endtime="20201115 22:11:55.276"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:55.283" level="INFO">VALUE: [3.4439999999982818e-06, 3.486000000000461e-06, 3.4730000000003647e-06, 3.486000000000461e-06, 3.500000000000031e-06, 3.486000000000461e-06, 3.5139999999996008e-06, 3.500000000000031e-06, 3.486000000000461e-06, 3.500000000000031e-06, 3.500000000000031e-06, 3.4859999999969915e-06, 3.4439999999982818e-06, 3.4859999999969915e-06, 3.486000000000461e-06, 3.4719999999974216e-06, 3.4869999999999346e-06, 3.500000000000031e-06, 3.500000000000031e-06, 3.500000000000031e-06, 3.500000000000031e-06, 3.4579999999978517e-06, 3.5139999999996008e-06, 3.5140000000030702e-06, 3.486000000000461e-06, 3.486000000000461e-06, 3.486000000000461e-06, 3.55600000000178e-06, 3.4730000000003647e-06, 3.486000000000461e-06, 3.5550000000023063e-06, 3.486000000000461e-06, 3.500000000000031e-06, 3.5559999999983105e-06, 3.486000000000461e-06, 3.5550000000023063e-06, 3.486000000000461e-06, 3.472000000000891e-06, 3.486000000000461e-06, 3.4730000000003647e-06, 3.4719999999974216e-06, 3.486000000000461e-06, 3.486000000000461e-06, 3.500000000000031e-06, 3.486000000000461e-06, 3.500000000000031e-06, 3.4719999999974216e-06, 3.4860000000039304e-06, 3.4860000000039304e-06, 3.4859999999969915e-06]</msg>
<status status="PASS" starttime="20201115 22:11:55.277" endtime="20201115 22:11:55.283"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:55.272" endtime="20201115 22:11:55.284"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:55.286" endtime="20201115 22:11:55.287"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:55.289" endtime="20201115 22:11:55.308"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:55.288" endtime="20201115 22:11:55.309"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:55.284" endtime="20201115 22:11:55.310"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:54.912" endtime="20201115 22:11:55.310"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:54.911" endtime="20201115 22:11:55.310"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:54.910" endtime="20201115 22:11:55.310"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:55.312" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:55.321" endtime="20201115 22:11:55.342"></status>
</kw>
<msg timestamp="20201115 22:11:55.342" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:55.320" endtime="20201115 22:11:55.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:55.345" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:55.343" endtime="20201115 22:11:55.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:55.346" endtime="20201115 22:11:55.347"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:55.317" endtime="20201115 22:11:55.348"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:55.315" endtime="20201115 22:11:55.348"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:55.355" endtime="20201115 22:11:55.642"></status>
</kw>
<msg timestamp="20201115 22:11:55.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022691125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022694764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:55.353" endtime="20201115 22:11:55.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:55.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022691125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022694764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:55.646" endtime="20201115 22:11:55.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:55.654" endtime="20201115 22:11:55.656"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:55.351" endtime="20201115 22:11:55.657"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:55.349" endtime="20201115 22:11:55.657"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:55.661" level="INFO">${RESULT} = [{'time': 0.022694764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6389999999997258e-06, 'source_diff': 3.6389999999997258e-06}, {'time': 0.022896375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:55.658" endtime="20201115 22:11:55.662"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:55.675" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:55.662" endtime="20201115 22:11:55.675"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:55.679" level="INFO">NAME: 00-overhead-15-remove</msg>
<status status="PASS" starttime="20201115 22:11:55.678" endtime="20201115 22:11:55.680"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:55.682" level="INFO">VALUE: [3.6389999999997258e-06, 3.6389999999997258e-06, 3.6389999999997258e-06, 3.6389999999997258e-06, 3.597000000001016e-06, 3.625000000000156e-06, 3.6389999999997258e-06, 3.6389999999997258e-06, 3.6389999999997258e-06, 3.625000000000156e-06, 3.6529999999992957e-06, 3.625000000000156e-06, 3.5980000000004897e-06, 3.6389999999997258e-06, 3.6389999999997258e-06, 3.625000000000156e-06, 3.6389999999997258e-06, 3.6389999999997258e-06, 3.6389999999997258e-06, 3.708000000001571e-06, 3.6529999999992957e-06, 3.709000000001045e-06, 3.6389999999997258e-06, 3.6389999999997258e-06, 3.6389999999997258e-06, 3.6389999999997258e-06, 3.6389999999997258e-06, 3.638000000000252e-06, 3.6389999999997258e-06, 3.6389999999997258e-06, 3.625000000000156e-06, 3.6389999999997258e-06, 3.57000000000135e-06, 3.6389999999997258e-06, 3.611000000000586e-06, 3.625000000000156e-06, 3.6389999999997258e-06, 3.57000000000135e-06, 3.6389999999997258e-06, 3.6389999999997258e-06, 3.6389999999997258e-06, 3.625000000000156e-06, 3.6389999999997258e-06, 3.625000000000156e-06, 3.625000000000156e-06, 3.6389999999997258e-06, 3.6390000000066647e-06, 3.5690000000018762e-06, 3.6389999999997258e-06, 3.6529999999992957e-06]</msg>
<status status="PASS" starttime="20201115 22:11:55.680" endtime="20201115 22:11:55.682"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:55.676" endtime="20201115 22:11:55.683"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:55.685" endtime="20201115 22:11:55.686"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:55.688" endtime="20201115 22:11:55.707"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:55.687" endtime="20201115 22:11:55.708"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:55.683" endtime="20201115 22:11:55.708"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:55.313" endtime="20201115 22:11:55.709"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:55.311" endtime="20201115 22:11:55.709"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:55.311" endtime="20201115 22:11:55.709"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:55.711" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:55.720" endtime="20201115 22:11:55.741"></status>
</kw>
<msg timestamp="20201115 22:11:55.741" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:55.719" endtime="20201115 22:11:55.741"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:55.744" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:55.742" endtime="20201115 22:11:55.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:55.745" endtime="20201115 22:11:55.746"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:55.716" endtime="20201115 22:11:55.747"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:55.714" endtime="20201115 22:11:55.747"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:55.754" endtime="20201115 22:11:56.041"></status>
</kw>
<msg timestamp="20201115 22:11:56.044" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022772889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022776694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:55.752" endtime="20201115 22:11:56.045"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:56.052" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022772889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022776694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:56.045" endtime="20201115 22:11:56.053"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:56.054" endtime="20201115 22:11:56.055"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:55.750" endtime="20201115 22:11:56.056"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:55.748" endtime="20201115 22:11:56.056"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:56.060" level="INFO">${RESULT} = [{'time': 0.022776694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.804999999999087e-06, 'source_diff': 3.804999999999087e-06}, {'time': 0.022988736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:56.057" endtime="20201115 22:11:56.061"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:56.074" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:56.061" endtime="20201115 22:11:56.074"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:56.078" level="INFO">NAME: 00-overhead-16-remove</msg>
<status status="PASS" starttime="20201115 22:11:56.077" endtime="20201115 22:11:56.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:56.081" level="INFO">VALUE: [3.804999999999087e-06, 3.804999999999087e-06, 3.736000000000711e-06, 3.804999999999087e-06, 3.763999999999851e-06, 3.8059999999985605e-06, 3.7919999999989906e-06, 3.84799999999727e-06, 3.79200000000246e-06, 3.763999999999851e-06, 3.7919999999989906e-06, 3.763999999999851e-06, 3.7779999999994207e-06, 3.722000000001141e-06, 3.763999999999851e-06, 3.79200000000246e-06, 3.804999999999087e-06, 3.8050000000025563e-06, 3.7919999999989906e-06, 3.804999999999087e-06, 3.776999999999947e-06, 3.80600000000203e-06, 3.7779999999994207e-06, 3.804999999999087e-06, 3.7919999999989906e-06, 3.763999999999851e-06, 3.7919999999989906e-06, 3.776999999999947e-06, 3.84800000000074e-06, 3.7919999999989906e-06, 3.8059999999985605e-06, 3.790999999999517e-06, 3.7779999999994207e-06, 3.79200000000246e-06, 3.776999999999947e-06, 3.763999999999851e-06, 3.84800000000074e-06, 3.832999999998227e-06, 3.861000000000836e-06, 3.8339999999977e-06, 3.77800000000289e-06, 3.805999999995091e-06, 3.79200000000246e-06, 3.77800000000289e-06, 3.7769999999964776e-06, 3.7640000000033202e-06, 3.83400000000117e-06, 3.80600000000203e-06, 3.80600000000203e-06, 3.833999999994231e-06]</msg>
<status status="PASS" starttime="20201115 22:11:56.079" endtime="20201115 22:11:56.081"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:56.075" endtime="20201115 22:11:56.081"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:56.084" endtime="20201115 22:11:56.085"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:56.087" endtime="20201115 22:11:56.106"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:56.085" endtime="20201115 22:11:56.107"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:56.082" endtime="20201115 22:11:56.107"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:55.712" endtime="20201115 22:11:56.108"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:55.710" endtime="20201115 22:11:56.108"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:55.710" endtime="20201115 22:11:56.108"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:56.110" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:56.119" endtime="20201115 22:11:56.141"></status>
</kw>
<msg timestamp="20201115 22:11:56.141" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:56.117" endtime="20201115 22:11:56.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:56.144" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:56.142" endtime="20201115 22:11:56.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:56.145" endtime="20201115 22:11:56.146"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:56.115" endtime="20201115 22:11:56.147"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:56.113" endtime="20201115 22:11:56.147"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:56.154" endtime="20201115 22:11:56.441"></status>
</kw>
<msg timestamp="20201115 22:11:56.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022706597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022710542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:56.153" endtime="20201115 22:11:56.444"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:56.451" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022706597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022710542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:56.445" endtime="20201115 22:11:56.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:56.453" endtime="20201115 22:11:56.454"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:56.150" endtime="20201115 22:11:56.455"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:56.148" endtime="20201115 22:11:56.455"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:56.459" level="INFO">${RESULT} = [{'time': 0.022710542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.945000000001725e-06, 'source_diff': 3.945000000001725e-06}, {'time': 0.022937194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:56.456" endtime="20201115 22:11:56.459"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:56.472" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:56.460" endtime="20201115 22:11:56.473"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:56.477" level="INFO">NAME: 00-overhead-17-remove</msg>
<status status="PASS" starttime="20201115 22:11:56.476" endtime="20201115 22:11:56.477"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:56.479" level="INFO">VALUE: [3.945000000001725e-06, 3.930000000002681e-06, 3.902999999999546e-06, 3.9309999999986855e-06, 3.944000000002251e-06, 3.929999999999212e-06, 3.929999999999212e-06, 3.945000000001725e-06, 3.943999999998782e-06, 3.931000000002155e-06, 3.9309999999986855e-06, 3.931000000002155e-06, 3.944000000002251e-06, 3.943999999998782e-06, 3.930000000002681e-06, 3.945000000001725e-06, 3.929999999999212e-06, 3.9309999999986855e-06, 3.9449999999982555e-06, 3.929999999999212e-06, 3.915999999999642e-06, 3.943999999998782e-06, 3.9449999999982555e-06, 3.944000000002251e-06, 3.945000000001725e-06, 3.986000000000961e-06, 3.9309999999986855e-06, 3.931000000002155e-06, 3.9309999999986855e-06, 3.930000000002681e-06, 4.000000000000531e-06, 3.945000000001725e-06, 3.931000000002155e-06, 3.957999999998352e-06, 3.929999999999212e-06, 3.930000000002681e-06, 3.943999999998782e-06, 3.943999999998782e-06, 3.9999999999970615e-06, 3.9449999999982555e-06, 3.943999999998782e-06, 3.9309999999986855e-06, 3.9309999999986855e-06, 3.915999999999642e-06, 3.915999999999642e-06, 3.9309999999986855e-06, 3.902000000000072e-06, 3.9170000000060545e-06, 3.9309999999986855e-06, 3.958000000005291e-06]</msg>
<status status="PASS" starttime="20201115 22:11:56.478" endtime="20201115 22:11:56.480"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:56.473" endtime="20201115 22:11:56.480"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:56.482" endtime="20201115 22:11:56.484"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:56.486" endtime="20201115 22:11:56.505"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:56.484" endtime="20201115 22:11:56.506"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:56.481" endtime="20201115 22:11:56.506"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:56.111" endtime="20201115 22:11:56.506"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:56.109" endtime="20201115 22:11:56.507"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:56.108" endtime="20201115 22:11:56.507"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:56.509" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:56.518" endtime="20201115 22:11:56.540"></status>
</kw>
<msg timestamp="20201115 22:11:56.540" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:56.516" endtime="20201115 22:11:56.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:56.543" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:56.542" endtime="20201115 22:11:56.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:56.544" endtime="20201115 22:11:56.546"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:56.514" endtime="20201115 22:11:56.547"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:56.512" endtime="20201115 22:11:56.547"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:56.554" endtime="20201115 22:11:56.840"></status>
</kw>
<msg timestamp="20201115 22:11:56.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022805514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022809597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:56.552" endtime="20201115 22:11:56.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:56.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022805514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022809597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:56.844" endtime="20201115 22:11:56.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:56.852" endtime="20201115 22:11:56.854"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:56.549" endtime="20201115 22:11:56.854"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:56.548" endtime="20201115 22:11:56.855"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:56.859" level="INFO">${RESULT} = [{'time': 0.022809597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.083000000001946e-06, 'source_diff': 4.083000000001946e-06}, {'time': 0.023050542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:56.856" endtime="20201115 22:11:56.859"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:56.872" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:56.860" endtime="20201115 22:11:56.872"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:56.877" level="INFO">NAME: 00-overhead-18-remove</msg>
<status status="PASS" starttime="20201115 22:11:56.876" endtime="20201115 22:11:56.877"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:56.879" level="INFO">VALUE: [4.083000000001946e-06, 4.152999999999796e-06, 4.096999999998047e-06, 4.096999999998047e-06, 4.083000000001946e-06, 4.096999999998047e-06, 4.166999999999366e-06, 4.096999999998047e-06, 4.097000000001516e-06, 4.096999999998047e-06, 4.096999999998047e-06, 4.096999999998047e-06, 4.08400000000142e-06, 4.09800000000099e-06, 4.083000000001946e-06, 4.08399999999795e-06, 4.04200000000271e-06, 4.125000000000656e-06, 4.1109999999976166e-06, 4.08400000000142e-06, 4.179999999999462e-06, 4.014000000000101e-06, 4.083000000001946e-06, 4.068999999998907e-06, 4.082999999998477e-06, 4.08400000000142e-06, 4.152999999999796e-06, 4.125000000000656e-06, 4.0699999999983805e-06, 4.082999999998477e-06, 4.082999999998477e-06, 4.083000000001946e-06, 4.068999999998907e-06, 4.0699999999983805e-06, 4.097000000001516e-06, 4.152999999999796e-06, 4.083000000001946e-06, 4.083000000001946e-06, 4.055999999995341e-06, 4.097000000001516e-06, 4.083000000001946e-06, 4.152999999999796e-06, 4.152999999999796e-06, 4.07000000000185e-06, 4.097000000001516e-06, 4.083000000001946e-06, 4.083000000001946e-06, 4.069000000002376e-06, 4.083000000001946e-06, 4.111000000001086e-06]</msg>
<status status="PASS" starttime="20201115 22:11:56.878" endtime="20201115 22:11:56.879"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:56.873" endtime="20201115 22:11:56.880"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:56.882" endtime="20201115 22:11:56.883"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:56.886" endtime="20201115 22:11:56.905"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:56.884" endtime="20201115 22:11:56.905"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:56.881" endtime="20201115 22:11:56.906"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:56.510" endtime="20201115 22:11:56.906"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:56.508" endtime="20201115 22:11:56.906"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:56.507" endtime="20201115 22:11:56.906"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:56.909" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:56.918" endtime="20201115 22:11:56.941"></status>
</kw>
<msg timestamp="20201115 22:11:56.942" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:56.916" endtime="20201115 22:11:56.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:56.944" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:56.943" endtime="20201115 22:11:56.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:56.945" endtime="20201115 22:11:56.947"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:56.914" endtime="20201115 22:11:56.948"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:56.912" endtime="20201115 22:11:56.948"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:56.955" endtime="20201115 22:11:57.240"></status>
</kw>
<msg timestamp="20201115 22:11:57.243" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023166611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023170861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:56.953" endtime="20201115 22:11:57.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:57.250" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023166611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023170861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:57.244" endtime="20201115 22:11:57.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:57.252" endtime="20201115 22:11:57.253"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:56.950" endtime="20201115 22:11:57.254"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:56.949" endtime="20201115 22:11:57.254"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:57.258" level="INFO">${RESULT} = [{'time': 0.023170861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.250000000000781e-06, 'source_diff': 4.250000000000781e-06}, {'time': 0.0234275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:11:57.255" endtime="20201115 22:11:57.258"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:57.271" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:57.259" endtime="20201115 22:11:57.272"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:57.276" level="INFO">NAME: 00-overhead-19-remove</msg>
<status status="PASS" starttime="20201115 22:11:57.275" endtime="20201115 22:11:57.276"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:57.278" level="INFO">VALUE: [4.250000000000781e-06, 4.236000000001211e-06, 4.222000000001641e-06, 4.236000000001211e-06, 4.236000000001211e-06, 4.195000000001975e-06, 4.223000000001115e-06, 4.166999999999366e-06, 4.277999999999921e-06, 4.236000000001211e-06, 4.250000000000781e-06, 4.221999999998172e-06, 4.221999999998172e-06, 4.2359999999977416e-06, 4.221999999998172e-06, 4.236000000001211e-06, 4.2359999999977416e-06, 4.264000000000351e-06, 4.291999999999491e-06, 4.2359999999977416e-06, 4.194000000002501e-06, 4.222000000001641e-06, 4.2359999999977416e-06, 4.222999999997645e-06, 4.222000000001641e-06, 4.237000000000685e-06, 4.236000000001211e-06, 4.236000000001211e-06, 4.2359999999977416e-06, 4.1949999999985055e-06, 4.223000000001115e-06, 4.264000000000351e-06, 4.221999999998172e-06, 4.2360000000046805e-06, 4.2359999999977416e-06, 4.2359999999977416e-06, 4.2359999999977416e-06, 4.2220000000051106e-06, 4.305999999995591e-06, 4.25000000000425e-06, 4.221999999998172e-06, 4.2359999999977416e-06, 4.2360000000046805e-06, 4.2360000000046805e-06, 4.2359999999977416e-06, 4.25000000000425e-06, 4.165999999999892e-06, 4.2360000000046805e-06, 4.2499999999973115e-06, 4.25000000000425e-06]</msg>
<status status="PASS" starttime="20201115 22:11:57.277" endtime="20201115 22:11:57.279"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:57.272" endtime="20201115 22:11:57.279"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:57.281" endtime="20201115 22:11:57.283"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:57.285" endtime="20201115 22:11:57.305"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:57.284" endtime="20201115 22:11:57.305"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:57.280" endtime="20201115 22:11:57.306"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:56.909" endtime="20201115 22:11:57.306"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:56.908" endtime="20201115 22:11:57.306"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:56.907" endtime="20201115 22:11:57.306"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:57.309" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:57.317" endtime="20201115 22:11:57.342"></status>
</kw>
<msg timestamp="20201115 22:11:57.342" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:57.316" endtime="20201115 22:11:57.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:57.345" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:57.343" endtime="20201115 22:11:57.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:57.346" endtime="20201115 22:11:57.347"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:57.313" endtime="20201115 22:11:57.348"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:57.311" endtime="20201115 22:11:57.348"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:57.355" endtime="20201115 22:11:57.647"></status>
</kw>
<msg timestamp="20201115 22:11:57.650" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022671792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022676167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:57.353" endtime="20201115 22:11:57.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:57.658" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022671792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022676167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:57.651" endtime="20201115 22:11:57.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:57.659" endtime="20201115 22:11:57.660"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:57.351" endtime="20201115 22:11:57.661"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:57.349" endtime="20201115 22:11:57.661"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:57.665" level="INFO">${RESULT} = [{'time': 0.022676167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.375000000000906e-06, 'source_diff': 4.375000000000906e-06}, {'time': 0.022949472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:57.662" endtime="20201115 22:11:57.666"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:57.678" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:57.666" endtime="20201115 22:11:57.679"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:57.683" level="INFO">NAME: 00-overhead-20-remove</msg>
<status status="PASS" starttime="20201115 22:11:57.682" endtime="20201115 22:11:57.683"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:57.685" level="INFO">VALUE: [4.375000000000906e-06, 4.3749999999974365e-06, 4.389000000000476e-06, 4.347000000001766e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.3749999999974365e-06, 4.332999999998727e-06, 4.388000000001002e-06, 4.318999999999157e-06, 4.375000000000906e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.387999999997533e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.360999999997867e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.3749999999974365e-06, 4.3749999999974365e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.375000000000906e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.402000000000572e-06, 4.3749999999974365e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.375000000000906e-06, 4.403000000000046e-06, 4.402000000000572e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.361000000001336e-06, 4.388999999993537e-06, 4.361000000001336e-06, 4.403000000000046e-06, 4.375000000000906e-06, 4.389000000000476e-06, 4.360999999994397e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.388999999993537e-06, 4.389000000000476e-06]</msg>
<status status="PASS" starttime="20201115 22:11:57.684" endtime="20201115 22:11:57.686"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:57.679" endtime="20201115 22:11:57.687"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:57.689" endtime="20201115 22:11:57.690"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:57.692" endtime="20201115 22:11:57.712"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:57.691" endtime="20201115 22:11:57.712"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:57.687" endtime="20201115 22:11:57.713"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:57.309" endtime="20201115 22:11:57.713"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:57.307" endtime="20201115 22:11:57.713"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:57.307" endtime="20201115 22:11:57.713"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:57.716" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:57.725" endtime="20201115 22:11:57.750"></status>
</kw>
<msg timestamp="20201115 22:11:57.750" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:57.723" endtime="20201115 22:11:57.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:57.753" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:57.751" endtime="20201115 22:11:57.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:57.754" endtime="20201115 22:11:57.755"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:57.721" endtime="20201115 22:11:57.756"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:57.718" endtime="20201115 22:11:57.756"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:57.762" endtime="20201115 22:11:58.049"></status>
</kw>
<msg timestamp="20201115 22:11:58.052" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022989819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022994347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:57.761" endtime="20201115 22:11:58.052"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:58.060" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022989819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022994347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:58.053" endtime="20201115 22:11:58.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:58.061" endtime="20201115 22:11:58.063"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:57.758" endtime="20201115 22:11:58.063"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:57.757" endtime="20201115 22:11:58.063"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:58.067" level="INFO">${RESULT} = [{'time': 0.022994347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.527999999996701e-06, 'source_diff': 4.527999999996701e-06}, {'time': 0.023285292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:58.064" endtime="20201115 22:11:58.068"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:58.081" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:58.068" endtime="20201115 22:11:58.081"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:58.085" level="INFO">NAME: 00-overhead-21-remove</msg>
<status status="PASS" starttime="20201115 22:11:58.084" endtime="20201115 22:11:58.085"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:58.088" level="INFO">VALUE: [4.527999999996701e-06, 4.555999999999311e-06, 4.527000000000697e-06, 4.528000000000171e-06, 4.514000000000601e-06, 4.541999999999741e-06, 4.541999999999741e-06, 4.568999999999407e-06, 4.541000000000267e-06, 4.4999999999975615e-06, 4.528000000000171e-06, 4.541999999999741e-06, 4.555999999999311e-06, 4.527999999996701e-06, 4.541999999999741e-06, 4.528000000000171e-06, 4.541999999999741e-06, 4.528000000000171e-06, 4.527999999996701e-06, 4.5699999999988805e-06, 4.500000000001031e-06, 4.485999999997992e-06, 4.528000000000171e-06, 4.528000000000171e-06, 4.485999999997992e-06, 4.528000000000171e-06, 4.528000000000171e-06, 4.541999999999741e-06, 4.569000000002876e-06, 4.541999999996271e-06, 4.52800000000364e-06, 4.513999999997131e-06, 4.540999999996798e-06, 4.527999999996701e-06, 4.568999999995937e-06, 4.541999999996271e-06, 4.513999999997131e-06, 4.540999999996798e-06, 4.526999999997228e-06, 4.54200000000321e-06, 4.513999999997131e-06, 4.541999999996271e-06, 4.555999999995841e-06, 4.513999999997131e-06, 4.457999999998852e-06, 4.555000000003306e-06, 4.54200000000321e-06, 4.513999999997131e-06, 4.5410000000037365e-06, 4.54200000000321e-06]</msg>
<status status="PASS" starttime="20201115 22:11:58.086" endtime="20201115 22:11:58.088"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:58.082" endtime="20201115 22:11:58.089"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:58.091" endtime="20201115 22:11:58.092"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:58.095" endtime="20201115 22:11:58.114"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:58.093" endtime="20201115 22:11:58.114"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:58.090" endtime="20201115 22:11:58.115"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:57.716" endtime="20201115 22:11:58.115"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:57.714" endtime="20201115 22:11:58.115"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:57.714" endtime="20201115 22:11:58.115"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:58.118" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:58.127" endtime="20201115 22:11:58.152"></status>
</kw>
<msg timestamp="20201115 22:11:58.153" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:58.125" endtime="20201115 22:11:58.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:58.155" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:58.154" endtime="20201115 22:11:58.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:58.156" endtime="20201115 22:11:58.158"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:58.122" endtime="20201115 22:11:58.158"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:58.120" endtime="20201115 22:11:58.159"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:58.165" endtime="20201115 22:11:58.451"></status>
</kw>
<msg timestamp="20201115 22:11:58.454" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022725944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022730639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:58.164" endtime="20201115 22:11:58.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:58.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022725944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022730639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:58.455" endtime="20201115 22:11:58.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:58.463" endtime="20201115 22:11:58.465"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:58.161" endtime="20201115 22:11:58.465"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:58.160" endtime="20201115 22:11:58.466"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:58.470" level="INFO">${RESULT} = [{'time': 0.022730639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.6949999999990055e-06, 'source_diff': 4.6949999999990055e-06}, {'time': 0.023037944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:58.466" endtime="20201115 22:11:58.471"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:58.484" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:58.471" endtime="20201115 22:11:58.484"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:58.488" level="INFO">NAME: 00-overhead-22-remove</msg>
<status status="PASS" starttime="20201115 22:11:58.487" endtime="20201115 22:11:58.488"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:58.491" level="INFO">VALUE: [4.6949999999990055e-06, 4.708000000002571e-06, 4.667000000003335e-06, 4.679999999999962e-06, 4.736000000001711e-06, 4.7089999999985754e-06, 4.6949999999990055e-06, 4.722000000002141e-06, 4.666999999999866e-06, 4.7499999999978115e-06, 4.666999999999866e-06, 4.709000000002045e-06, 4.666999999999866e-06, 4.7499999999978115e-06, 4.679999999999962e-06, 4.637999999997783e-06, 4.680999999999436e-06, 4.6949999999990055e-06, 4.693999999999532e-06, 4.693999999999532e-06, 4.693999999999532e-06, 4.7089999999985754e-06, 4.7089999999985754e-06, 4.693999999999532e-06, 4.693999999999532e-06, 4.693999999999532e-06, 4.695000000002475e-06, 4.679999999999962e-06, 4.693999999999532e-06, 4.6949999999990055e-06, 4.693999999999532e-06, 4.666000000000392e-06, 4.6949999999990055e-06, 4.707999999999102e-06, 4.693999999999532e-06, 4.680999999999436e-06, 4.7499999999978115e-06, 4.653000000000296e-06, 4.639000000000726e-06, 4.707999999999102e-06, 4.679999999999962e-06, 4.680999999999436e-06, 4.666000000000392e-06, 4.7499999999978115e-06, 4.680999999999436e-06, 4.679999999999962e-06, 4.680999999999436e-06, 4.6949999999990055e-06, 4.666000000000392e-06, 4.693999999999532e-06]</msg>
<status status="PASS" starttime="20201115 22:11:58.489" endtime="20201115 22:11:58.491"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:58.485" endtime="20201115 22:11:58.491"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:58.494" endtime="20201115 22:11:58.495"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:58.497" endtime="20201115 22:11:58.516"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:58.496" endtime="20201115 22:11:58.517"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:58.492" endtime="20201115 22:11:58.517"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:58.118" endtime="20201115 22:11:58.518"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:58.117" endtime="20201115 22:11:58.518"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:58.116" endtime="20201115 22:11:58.518"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:58.521" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:58.529" endtime="20201115 22:11:58.555"></status>
</kw>
<msg timestamp="20201115 22:11:58.556" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:58.528" endtime="20201115 22:11:58.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:58.558" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:58.557" endtime="20201115 22:11:58.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:58.559" endtime="20201115 22:11:58.561"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:58.525" endtime="20201115 22:11:58.562"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:58.523" endtime="20201115 22:11:58.562"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:58.568" endtime="20201115 22:11:58.857"></status>
</kw>
<msg timestamp="20201115 22:11:58.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022936514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022941347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:58.567" endtime="20201115 22:11:58.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:58.867" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022936514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022941347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:58.861" endtime="20201115 22:11:58.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:58.869" endtime="20201115 22:11:58.871"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:58.564" endtime="20201115 22:11:58.871"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:58.563" endtime="20201115 22:11:58.872"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:58.876" level="INFO">${RESULT} = [{'time': 0.022941347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.832999999999227e-06, 'source_diff': 4.832999999999227e-06}, {'time': 0.023267389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:58.872" endtime="20201115 22:11:58.876"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:58.889" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:58.877" endtime="20201115 22:11:58.889"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:58.893" level="INFO">NAME: 00-overhead-23-remove</msg>
<status status="PASS" starttime="20201115 22:11:58.892" endtime="20201115 22:11:58.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:58.896" level="INFO">VALUE: [4.832999999999227e-06, 4.860999999998367e-06, 4.8200000000026e-06, 4.846999999998797e-06, 4.818999999999657e-06, 4.916000000000642e-06, 4.902999999997076e-06, 4.832999999999227e-06, 4.83400000000217e-06, 4.8339999999987004e-06, 4.8199999999991305e-06, 4.875000000001406e-06, 4.832999999999227e-06, 4.846999999998797e-06, 4.819000000003126e-06, 4.832999999999227e-06, 4.861000000001836e-06, 4.8749999999979365e-06, 4.847000000002266e-06, 4.846999999998797e-06, 4.86200000000131e-06, 4.83400000000217e-06, 4.84799999999827e-06, 4.833000000002696e-06, 4.832999999999227e-06, 4.832999999999227e-06, 4.847000000002266e-06, 4.833000000002696e-06, 4.847000000002266e-06, 4.83400000000217e-06, 4.846999999995327e-06, 4.846999999995327e-06, 4.8189999999961874e-06, 4.832999999995757e-06, 4.832999999995757e-06, 4.83400000000217e-06, 4.833000000002696e-06, 4.83400000000217e-06, 4.846999999995327e-06, 4.83400000000217e-06, 4.76400000000432e-06, 4.875000000001406e-06, 4.847000000002266e-06, 4.833000000002696e-06, 4.861000000001836e-06, 4.889000000000976e-06, 4.847000000002266e-06, 4.84800000000174e-06, 4.833000000002696e-06, 4.83400000000217e-06]</msg>
<status status="PASS" starttime="20201115 22:11:58.894" endtime="20201115 22:11:58.896"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:58.890" endtime="20201115 22:11:58.897"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:58.899" endtime="20201115 22:11:58.900"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:58.902" endtime="20201115 22:11:58.922"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:58.901" endtime="20201115 22:11:58.922"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:58.897" endtime="20201115 22:11:58.923"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:58.521" endtime="20201115 22:11:58.923"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:58.519" endtime="20201115 22:11:58.923"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:58.518" endtime="20201115 22:11:58.923"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:58.926" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:58.934" endtime="20201115 22:11:58.962"></status>
</kw>
<msg timestamp="20201115 22:11:58.962" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:58.933" endtime="20201115 22:11:58.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:58.965" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:58.963" endtime="20201115 22:11:58.965"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:58.966" endtime="20201115 22:11:58.967"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:58.930" endtime="20201115 22:11:58.968"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:58.928" endtime="20201115 22:11:58.968"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:58.975" endtime="20201115 22:11:59.263"></status>
</kw>
<msg timestamp="20201115 22:11:59.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022698431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022703486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:58.973" endtime="20201115 22:11:59.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:59.274" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022698431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022703486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:59.267" endtime="20201115 22:11:59.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:59.276" endtime="20201115 22:11:59.277"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:58.971" endtime="20201115 22:11:59.278"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:58.969" endtime="20201115 22:11:59.278"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:59.282" level="INFO">${RESULT} = [{'time': 0.022703486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.0549999999968676e-06, 'source_diff': 5.0549999999968676e-06}, {'time': 0.023047833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:59.279" endtime="20201115 22:11:59.282"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:59.295" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:59.283" endtime="20201115 22:11:59.295"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:59.300" level="INFO">NAME: 00-overhead-24-remove</msg>
<status status="PASS" starttime="20201115 22:11:59.299" endtime="20201115 22:11:59.300"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:59.302" level="INFO">VALUE: [5.0549999999968676e-06, 4.985999999998492e-06, 4.971999999998922e-06, 4.971999999998922e-06, 5.000000000001531e-06, 5.0139999999976315e-06, 5.000000000001531e-06, 4.986000000001961e-06, 4.986000000001961e-06, 5.014000000001101e-06, 4.985999999998492e-06, 4.957999999999352e-06, 4.957999999999352e-06, 4.972999999998395e-06, 5.000000000001531e-06, 4.985999999998492e-06, 4.971999999998922e-06, 4.972999999998395e-06, 5.000000000001531e-06, 4.985999999998492e-06, 4.986000000001961e-06, 4.986000000001961e-06, 4.986000000001961e-06, 4.973000000001865e-06, 5.000000000001531e-06, 4.985999999998492e-06, 4.985999999998492e-06, 4.9999999999980616e-06, 4.9860000000054305e-06, 4.9860000000054305e-06, 4.971999999998922e-06, 4.971999999998922e-06, 5.027999999997201e-06, 4.985999999998492e-06, 5.0000000000050004e-06, 4.985999999998492e-06, 4.985999999998492e-06, 5.02800000000414e-06, 4.985999999998492e-06, 4.957999999999352e-06, 4.985999999998492e-06, 4.985999999998492e-06, 4.985999999998492e-06, 4.985999999998492e-06, 4.973000000005334e-06, 4.985999999998492e-06, 4.971999999998922e-06, 4.972999999998395e-06, 4.971999999998922e-06, 4.957999999999352e-06]</msg>
<status status="PASS" starttime="20201115 22:11:59.301" endtime="20201115 22:11:59.303"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:59.296" endtime="20201115 22:11:59.303"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:59.305" endtime="20201115 22:11:59.306"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:59.309" endtime="20201115 22:11:59.328"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:59.307" endtime="20201115 22:11:59.328"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:59.304" endtime="20201115 22:11:59.329"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:58.926" endtime="20201115 22:11:59.329"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:58.924" endtime="20201115 22:11:59.329"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:58.924" endtime="20201115 22:11:59.330"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:59.332" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:59.340" endtime="20201115 22:11:59.368"></status>
</kw>
<msg timestamp="20201115 22:11:59.369" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:59.339" endtime="20201115 22:11:59.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:59.372" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:59.370" endtime="20201115 22:11:59.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:59.373" endtime="20201115 22:11:59.375"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:59.336" endtime="20201115 22:11:59.375"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:59.334" endtime="20201115 22:11:59.376"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:59.382" endtime="20201115 22:11:59.669"></status>
</kw>
<msg timestamp="20201115 22:11:59.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022610528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022615667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:59.381" endtime="20201115 22:11:59.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:59.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022610528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022615667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:59.673" endtime="20201115 22:11:59.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:59.681" endtime="20201115 22:11:59.683"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:59.378" endtime="20201115 22:11:59.683"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:59.376" endtime="20201115 22:11:59.684"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:59.688" level="INFO">${RESULT} = [{'time': 0.022615667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.1389999999977565e-06, 'source_diff': 5.1389999999977565e-06}, {'time': 0.022979097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:59.684" endtime="20201115 22:11:59.688"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:59.701" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:59.689" endtime="20201115 22:11:59.701"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:59.705" level="INFO">NAME: 00-overhead-25-remove</msg>
<status status="PASS" starttime="20201115 22:11:59.704" endtime="20201115 22:11:59.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:59.708" level="INFO">VALUE: [5.1389999999977565e-06, 5.139000000001226e-06, 5.1389999999977565e-06, 5.153000000000796e-06, 5.195000000002975e-06, 5.1249999999981866e-06, 5.1249999999981866e-06, 5.194000000000032e-06, 5.1389999999977565e-06, 5.125000000001656e-06, 5.152000000001322e-06, 5.180000000000462e-06, 5.1389999999977565e-06, 5.139000000001226e-06, 5.1249999999981866e-06, 5.151999999997853e-06, 5.153000000000796e-06, 5.139000000001226e-06, 5.139000000001226e-06, 5.111000000002086e-06, 5.125000000001656e-06, 5.138000000001752e-06, 5.139000000001226e-06, 5.153000000000796e-06, 5.111000000002086e-06, 5.139000000001226e-06, 5.124999999994717e-06, 5.139000000001226e-06, 5.125000000001656e-06, 5.139000000001226e-06, 5.194000000000032e-06, 5.139000000001226e-06, 5.111000000002086e-06, 5.125000000001656e-06, 5.138999999994287e-06, 5.138999999994287e-06, 5.153000000000796e-06, 5.110999999995147e-06, 5.152000000001322e-06, 5.124999999994717e-06, 5.125000000001656e-06, 5.111000000002086e-06, 5.153000000000796e-06, 5.110999999995147e-06, 5.153000000000796e-06, 5.139000000001226e-06, 5.125000000001656e-06, 5.167000000000366e-06, 5.139000000001226e-06, 5.139000000001226e-06]</msg>
<status status="PASS" starttime="20201115 22:11:59.706" endtime="20201115 22:11:59.708"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:59.702" endtime="20201115 22:11:59.709"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:59.711" endtime="20201115 22:11:59.712"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:59.714" endtime="20201115 22:11:59.734"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:59.713" endtime="20201115 22:11:59.734"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:59.709" endtime="20201115 22:11:59.735"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:59.332" endtime="20201115 22:11:59.735"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:59.331" endtime="20201115 22:11:59.735"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:59.330" endtime="20201115 22:11:59.735"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.785" endtime="20201115 22:11:59.735"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="teardown">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:59.740" endtime="20201115 22:11:59.759"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:59.738" endtime="20201115 22:11:59.760"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:59.737" endtime="20201115 22:11:59.760"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:11:49.710" endtime="20201115 22:11:59.761" critical="yes"></status>
</test>
<status status="PASS" starttime="20201115 22:11:37.270" endtime="20201115 22:11:59.766"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">esp32-wroom-32</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="PASS" starttime="20201115 22:11:35.322" endtime="20201115 22:11:59.784"></status>
</suite>
<statistics>
<total>
<stat pass="5" fail="0">Critical Tests</stat>
<stat pass="5" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="5" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="5" fail="0">BOARD_esp32-wroom-32</stat>
<stat pass="5" fail="0">dev</stat>
</tag>
<suite>
<stat pass="5" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="4" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
