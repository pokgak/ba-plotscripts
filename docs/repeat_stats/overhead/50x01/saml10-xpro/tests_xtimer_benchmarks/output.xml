<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201115 22:11:30.270" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201115 22:11:30.841" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201115 22:11:30.850" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201115 22:11:31.958" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201115 22:11:30.840" endtime="20201115 22:11:31.958"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201115 22:11:31.961" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201115 22:11:31.959" endtime="20201115 22:11:31.961"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:30.839" endtime="20201115 22:11:31.962"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:31.964" endtime="20201115 22:11:32.206"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:31.963" endtime="20201115 22:11:32.207"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:32.220" endtime="20201115 22:11:32.233"></status>
</kw>
<msg timestamp="20201115 22:11:32.233" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:32.219" endtime="20201115 22:11:32.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:32.236" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:32.234" endtime="20201115 22:11:32.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:11:32.239" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:11:32.237" endtime="20201115 22:11:32.239"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:32.216" endtime="20201115 22:11:32.240"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:32.213" endtime="20201115 22:11:32.240"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.212" endtime="20201115 22:11:32.241"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:11:32.245" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:11:32.244" endtime="20201115 22:11:32.245"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.242" endtime="20201115 22:11:32.245"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.211" endtime="20201115 22:11:32.245"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.211" endtime="20201115 22:11:32.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:32.246" endtime="20201115 22:11:32.248"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.209" endtime="20201115 22:11:32.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:32.249" endtime="20201115 22:11:32.251"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.208" endtime="20201115 22:11:32.251"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:30.837" endtime="20201115 22:11:32.251"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:32.258" endtime="20201115 22:11:32.277"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.256" endtime="20201115 22:11:32.278"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:32.293" endtime="20201115 22:11:32.305"></status>
</kw>
<msg timestamp="20201115 22:11:32.305" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:32.291" endtime="20201115 22:11:32.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:32.308" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:32.306" endtime="20201115 22:11:32.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:11:32.311" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:11:32.309" endtime="20201115 22:11:32.311"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:32.288" endtime="20201115 22:11:32.312"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:32.286" endtime="20201115 22:11:32.312"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.283" endtime="20201115 22:11:32.313"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:11:32.316" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:11:32.316" endtime="20201115 22:11:32.317"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.313" endtime="20201115 22:11:32.317"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.282" endtime="20201115 22:11:32.317"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.282" endtime="20201115 22:11:32.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:32.318" endtime="20201115 22:11:32.320"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.280" endtime="20201115 22:11:32.320"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.279" endtime="20201115 22:11:32.321"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.255" endtime="20201115 22:11:32.321"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:32.329" endtime="20201115 22:11:32.337"></status>
</kw>
<msg timestamp="20201115 22:11:32.337" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:32.327" endtime="20201115 22:11:32.338"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:32.340" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:32.338" endtime="20201115 22:11:32.340"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:32.341" endtime="20201115 22:11:32.343"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.324" endtime="20201115 22:11:32.343"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.322" endtime="20201115 22:11:32.343"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:32.348" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201115 22:11:32.347" endtime="20201115 22:11:32.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:32.350" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201115 22:11:32.349" endtime="20201115 22:11:32.351"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.344" endtime="20201115 22:11:32.351"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:11:32.252" endtime="20201115 22:11:32.352" critical="yes"></status>
</test>
<status status="PASS" starttime="20201115 22:11:30.380" endtime="20201115 22:11:32.356"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201115 22:11:32.411" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201115 22:11:32.419" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201115 22:11:33.528" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201115 22:11:32.409" endtime="20201115 22:11:33.529"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201115 22:11:33.531" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201115 22:11:33.530" endtime="20201115 22:11:33.532"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.408" endtime="20201115 22:11:33.532"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:33.534" endtime="20201115 22:11:33.799"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.533" endtime="20201115 22:11:33.799"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:33.812" endtime="20201115 22:11:33.824"></status>
</kw>
<msg timestamp="20201115 22:11:33.825" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:33.810" endtime="20201115 22:11:33.825"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:33.827" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:33.826" endtime="20201115 22:11:33.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:11:33.831" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:11:33.828" endtime="20201115 22:11:33.831"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:33.808" endtime="20201115 22:11:33.832"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:33.805" endtime="20201115 22:11:33.832"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.804" endtime="20201115 22:11:33.833"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:11:33.836" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:11:33.836" endtime="20201115 22:11:33.837"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.834" endtime="20201115 22:11:33.837"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.803" endtime="20201115 22:11:33.837"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.803" endtime="20201115 22:11:33.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:33.838" endtime="20201115 22:11:33.840"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.801" endtime="20201115 22:11:33.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:33.841" endtime="20201115 22:11:33.842"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.800" endtime="20201115 22:11:33.843"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.406" endtime="20201115 22:11:33.843"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO/">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:33.850" endtime="20201115 22:11:33.869"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.848" endtime="20201115 22:11:33.870"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:33.883" endtime="20201115 22:11:33.895"></status>
</kw>
<msg timestamp="20201115 22:11:33.895" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:33.881" endtime="20201115 22:11:33.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:33.898" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:33.897" endtime="20201115 22:11:33.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:11:33.902" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:11:33.900" endtime="20201115 22:11:33.902"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:33.879" endtime="20201115 22:11:33.902"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:33.876" endtime="20201115 22:11:33.903"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.875" endtime="20201115 22:11:33.903"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:11:33.908" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:11:33.906" endtime="20201115 22:11:33.908"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.904" endtime="20201115 22:11:33.909"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.874" endtime="20201115 22:11:33.909"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.873" endtime="20201115 22:11:33.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:33.910" endtime="20201115 22:11:33.911"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.872" endtime="20201115 22:11:33.912"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.870" endtime="20201115 22:11:33.912"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.846" endtime="20201115 22:11:33.912"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure GPIO Overhead</arg>
</arguments>
<msg timestamp="20201115 22:11:33.916" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:33.923" endtime="20201115 22:11:33.932"></status>
</kw>
<msg timestamp="20201115 22:11:33.933" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:33.922" endtime="20201115 22:11:33.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:33.935" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:33.934" endtime="20201115 22:11:33.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:33.936" endtime="20201115 22:11:33.938"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.919" endtime="20201115 22:11:33.938"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.917" endtime="20201115 22:11:33.939"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:33.945" endtime="20201115 22:11:34.236"></status>
</kw>
<msg timestamp="20201115 22:11:34.239" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063500792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.063502014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:33.944" endtime="20201115 22:11:34.240"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:34.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063500792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.063502014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:34.240" endtime="20201115 22:11:34.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:34.249" endtime="20201115 22:11:34.250"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.941" endtime="20201115 22:11:34.251"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.939" endtime="20201115 22:11:34.251"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:34.255" level="INFO">${RESULT} = [{'time': 0.063502014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2219999999951714e-06, 'source_diff': 1.2219999999951714e-06}, {'time': 0.063529639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:34.252" endtime="20201115 22:11:34.255"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:34.269" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:34.256" endtime="20201115 22:11:34.269"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:34.273" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201115 22:11:34.272" endtime="20201115 22:11:34.274"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:34.276" level="INFO">VALUE: [1.2219999999951714e-06, 9.859999999944913e-07, 1.000000000001e-06, 9.73000000001334e-07, 1.0139999999936311e-06, 1.000000000001e-06, 1.0700000000057885e-06, 1.000000000001e-06, 1.014000000007509e-06, 1.000000000001e-06, 1.000000000001e-06, 9.73000000001334e-07, 1.000000000001e-06, 1.041999999992771e-06, 1.0139999999936311e-06, 1.000000000001e-06, 1.000000000001e-06, 1.000000000001e-06, 9.859999999944913e-07, 1.000000000001e-06, 1.000000000001e-06, 1.000000000001e-06, 1.000000000001e-06, 1.000000000001e-06, 1.02800000000014e-06, 9.720000000018603e-07, 9.859999999944913e-07, 9.999999999871223e-07, 1.054999999999806e-06, 1.000000000001e-06, 1.000000000001e-06, 9.859999999944913e-07, 9.859999999944913e-07, 1.000000000001e-06, 1.02800000000014e-06, 1.000000000001e-06, 9.579999999953515e-07, 9.309999999956853e-07, 9.720000000018603e-07, 9.999999999871223e-07, 9.999999999871223e-07, 1.0139999999936311e-06, 9.859999999944913e-07, 1.000000000001e-06, 1.0139999999936311e-06, 9.859999999944913e-07, 9.86999999993965e-07, 1.000000000001e-06, 1.0139999999936311e-06, 9.720000000018603e-07]</msg>
<status status="PASS" starttime="20201115 22:11:34.275" endtime="20201115 22:11:34.277"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.270" endtime="20201115 22:11:34.277"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:34.279" endtime="20201115 22:11:34.281"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:34.283" endtime="20201115 22:11:34.302"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.281" endtime="20201115 22:11:34.303"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.278" endtime="20201115 22:11:34.303"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.916" endtime="20201115 22:11:34.304"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.914" endtime="20201115 22:11:34.304"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:34.309" endtime="20201115 22:11:34.328"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.307" endtime="20201115 22:11:34.329"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.306" endtime="20201115 22:11:34.329"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:11:33.844" endtime="20201115 22:11:34.330" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:34.338" endtime="20201115 22:11:34.357"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.336" endtime="20201115 22:11:34.358"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:34.371" endtime="20201115 22:11:34.383"></status>
</kw>
<msg timestamp="20201115 22:11:34.384" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:34.369" endtime="20201115 22:11:34.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:34.386" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:34.385" endtime="20201115 22:11:34.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:11:34.389" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:11:34.387" endtime="20201115 22:11:34.389"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:34.367" endtime="20201115 22:11:34.390"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:34.364" endtime="20201115 22:11:34.391"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.363" endtime="20201115 22:11:34.391"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:11:34.395" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:11:34.394" endtime="20201115 22:11:34.395"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.392" endtime="20201115 22:11:34.396"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.362" endtime="20201115 22:11:34.397"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.362" endtime="20201115 22:11:34.397"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:34.398" endtime="20201115 22:11:34.399"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.360" endtime="20201115 22:11:34.400"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.359" endtime="20201115 22:11:34.400"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.335" endtime="20201115 22:11:34.401"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer Now Overhead</arg>
</arguments>
<msg timestamp="20201115 22:11:34.403" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:34.411" endtime="20201115 22:11:34.422"></status>
</kw>
<msg timestamp="20201115 22:11:34.422" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:34.409" endtime="20201115 22:11:34.423"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:34.425" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:34.423" endtime="20201115 22:11:34.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:34.426" endtime="20201115 22:11:34.427"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.407" endtime="20201115 22:11:34.428"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.405" endtime="20201115 22:11:34.428"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:34.435" endtime="20201115 22:11:34.721"></status>
</kw>
<msg timestamp="20201115 22:11:34.724" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063848708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.063861222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:34.433" endtime="20201115 22:11:34.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:34.732" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063848708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.063861222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:34.725" endtime="20201115 22:11:34.732"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:34.733" endtime="20201115 22:11:34.735"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.431" endtime="20201115 22:11:34.735"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.429" endtime="20201115 22:11:34.736"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:34.740" level="INFO">${RESULT} = [{'time': 0.063861222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2513999999991254e-05, 'source_diff': 1.2513999999991254e-05}, {'time': 0.063899681, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:34.736" endtime="20201115 22:11:34.740"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:34.753" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:34.741" endtime="20201115 22:11:34.753"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:34.757" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201115 22:11:34.756" endtime="20201115 22:11:34.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:34.760" level="INFO">VALUE: [1.2513999999991254e-05, 1.2208999999999137e-05, 1.2193999999993155e-05, 1.2235999999998803e-05, 1.2207999999999664e-05, 1.2125000000001718e-05, 1.2221999999992295e-05, 1.2208999999999137e-05, 1.2207999999999664e-05, 1.2209000000013015e-05, 1.212499999998784e-05, 1.2193999999993155e-05, 1.2235999999998803e-05, 1.2208999999999137e-05, 1.2222000000006172e-05, 1.2153000000000858e-05, 1.2152000000001384e-05, 1.2208999999999137e-05, 1.2180999999999997e-05, 1.2194999999992628e-05, 1.2208999999999137e-05, 1.2166999999993489e-05, 1.2208999999999137e-05, 1.2194000000007033e-05, 1.2207999999999664e-05, 1.2207999999999664e-05, 1.2208999999999137e-05, 1.2195000000006506e-05, 1.2207999999999664e-05, 1.2195000000006506e-05, 1.2195000000006506e-05, 1.2207999999999664e-05, 1.2207999999999664e-05, 1.2207999999999664e-05, 1.2180999999999997e-05, 1.2180999999999997e-05, 1.2193999999993155e-05, 1.2194000000007033e-05, 1.2153000000000858e-05, 1.2207999999999664e-05, 1.2180000000000524e-05, 1.2138999999994349e-05, 1.2194000000007033e-05, 1.2194999999992628e-05, 1.2193999999993155e-05, 1.2193999999993155e-05, 1.2180999999999997e-05, 1.2180999999999997e-05, 1.2194000000007033e-05, 1.2194999999992628e-05]</msg>
<status status="PASS" starttime="20201115 22:11:34.758" endtime="20201115 22:11:34.768"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.754" endtime="20201115 22:11:34.768"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:34.771" endtime="20201115 22:11:34.773"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:34.775" endtime="20201115 22:11:34.794"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.773" endtime="20201115 22:11:34.795"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.769" endtime="20201115 22:11:34.795"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.404" endtime="20201115 22:11:34.796"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.402" endtime="20201115 22:11:34.796"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:34.801" endtime="20201115 22:11:34.820"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.799" endtime="20201115 22:11:34.821"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.798" endtime="20201115 22:11:34.821"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:11:34.332" endtime="20201115 22:11:34.822" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set List">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:34.830" endtime="20201115 22:11:34.849"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.828" endtime="20201115 22:11:34.850"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:34.863" endtime="20201115 22:11:34.875"></status>
</kw>
<msg timestamp="20201115 22:11:34.875" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:34.861" endtime="20201115 22:11:34.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:34.878" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:34.876" endtime="20201115 22:11:34.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:11:34.881" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:11:34.879" endtime="20201115 22:11:34.881"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:34.859" endtime="20201115 22:11:34.882"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:34.856" endtime="20201115 22:11:34.882"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.855" endtime="20201115 22:11:34.883"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:11:34.886" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:11:34.886" endtime="20201115 22:11:34.887"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.884" endtime="20201115 22:11:34.887"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.854" endtime="20201115 22:11:34.887"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.853" endtime="20201115 22:11:34.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:34.888" endtime="20201115 22:11:34.890"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.852" endtime="20201115 22:11:34.890"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.850" endtime="20201115 22:11:34.891"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.827" endtime="20201115 22:11:34.891"></status>
</kw>
<kw name="${n} IN RANGE [ 25 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:34.894" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:34.906" endtime="20201115 22:11:34.930"></status>
</kw>
<msg timestamp="20201115 22:11:34.930" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:34.905" endtime="20201115 22:11:34.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:34.933" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:34.931" endtime="20201115 22:11:34.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:34.934" endtime="20201115 22:11:34.935"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.902" endtime="20201115 22:11:34.936"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.899" endtime="20201115 22:11:34.936"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:34.943" endtime="20201115 22:11:35.227"></status>
</kw>
<msg timestamp="20201115 22:11:35.230" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068367681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068399792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:34.941" endtime="20201115 22:11:35.230"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:35.238" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068367681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068399792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:35.231" endtime="20201115 22:11:35.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:35.239" endtime="20201115 22:11:35.240"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.939" endtime="20201115 22:11:35.241"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.937" endtime="20201115 22:11:35.241"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:35.245" level="INFO">${RESULT} = [{'time': 0.068399792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.211100000000133e-05, 'source_diff': 3.211100000000133e-05}, {'time': 0.068717681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:35.242" endtime="20201115 22:11:35.246"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:35.259" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:35.246" endtime="20201115 22:11:35.259"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:35.263" level="INFO">NAME: 00-overhead-1-set</msg>
<status status="PASS" starttime="20201115 22:11:35.262" endtime="20201115 22:11:35.264"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:35.266" level="INFO">VALUE: [3.211100000000133e-05, 3.132000000000135e-05, 3.1304999999995364e-05, 3.130599999999484e-05, 3.129200000000221e-05, 3.1304999999995364e-05, 3.122299999999689e-05, 3.134700000000101e-05, 3.1306000000008716e-05, 3.1304999999995364e-05, 3.130500000000924e-05, 3.131900000000187e-05, 3.131900000000187e-05, 3.132000000000135e-05, 3.1360999999993644e-05, 3.1306000000008716e-05, 3.133300000000838e-05, 3.1304999999995364e-05, 3.132000000000135e-05, 3.129200000000221e-05, 3.131900000000187e-05, 3.129100000000273e-05, 3.1332999999994504e-05, 3.137500000000015e-05, 3.129199999998833e-05, 3.130599999999484e-05, 3.130599999999484e-05, 3.126400000000307e-05, 3.1360999999993644e-05, 3.132000000000135e-05, 3.1306000000008716e-05, 3.1334000000007856e-05, 3.1332999999994504e-05, 3.130500000000924e-05, 3.129200000000221e-05, 3.1388999999992784e-05, 3.1318999999987995e-05, 3.1304999999995364e-05, 3.133300000000838e-05, 3.129200000000221e-05, 3.131900000000187e-05, 3.131900000000187e-05, 3.130500000000924e-05, 3.1360999999993644e-05, 3.132000000000135e-05, 3.131900000000187e-05, 3.1304999999995364e-05, 3.131900000000187e-05, 3.129199999998833e-05, 3.1278000000009576e-05]</msg>
<status status="PASS" starttime="20201115 22:11:35.264" endtime="20201115 22:11:35.266"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.260" endtime="20201115 22:11:35.267"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:35.269" endtime="20201115 22:11:35.270"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:35.272" endtime="20201115 22:11:35.292"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.271" endtime="20201115 22:11:35.292"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.267" endtime="20201115 22:11:35.293"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.895" endtime="20201115 22:11:35.293"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.893" endtime="20201115 22:11:35.294"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.892" endtime="20201115 22:11:35.294"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:35.296" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:35.306" endtime="20201115 22:11:35.330"></status>
</kw>
<msg timestamp="20201115 22:11:35.331" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:35.304" endtime="20201115 22:11:35.331"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:35.333" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:35.332" endtime="20201115 22:11:35.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:35.334" endtime="20201115 22:11:35.336"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.301" endtime="20201115 22:11:35.337"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.299" endtime="20201115 22:11:35.337"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:35.343" endtime="20201115 22:11:35.628"></status>
</kw>
<msg timestamp="20201115 22:11:35.631" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025076875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025102347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:35.342" endtime="20201115 22:11:35.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:35.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025076875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025102347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:35.632" endtime="20201115 22:11:35.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:35.640" endtime="20201115 22:11:35.642"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.339" endtime="20201115 22:11:35.642"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.338" endtime="20201115 22:11:35.643"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:35.647" level="INFO">${RESULT} = [{'time': 0.025102347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5472000000002076e-05, 'source_diff': 2.5472000000002076e-05}, {'time': 0.025442056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:35.643" endtime="20201115 22:11:35.647"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:35.660" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:35.648" endtime="20201115 22:11:35.660"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:35.665" level="INFO">NAME: 00-overhead-2-set</msg>
<status status="PASS" starttime="20201115 22:11:35.664" endtime="20201115 22:11:35.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:35.667" level="INFO">VALUE: [2.5472000000002076e-05, 2.5362000000000995e-05, 2.531900000000281e-05, 2.5346999999998482e-05, 2.5333999999998386e-05, 2.5318999999999342e-05, 2.5333999999998386e-05, 2.5332999999998912e-05, 2.5348000000001425e-05, 2.5333999999998386e-05, 2.534700000000195e-05, 2.5346999999998482e-05, 2.534700000000195e-05, 2.5320000000002285e-05, 2.5346999999998482e-05, 2.5333999999998386e-05, 2.5347999999997956e-05, 2.5346999999998482e-05, 2.534700000000195e-05, 2.5348000000001425e-05, 2.5318999999995873e-05, 2.5360999999994582e-05, 2.534700000000195e-05, 2.529100000000367e-05, 2.534700000000195e-05, 2.534700000000195e-05, 2.540300000000023e-05, 2.538900000000066e-05, 2.534700000000195e-05, 2.5346999999995012e-05, 2.5346999999995012e-05, 2.534700000000195e-05, 2.5304999999996303e-05, 2.534700000000195e-05, 2.536100000000152e-05, 2.534700000000195e-05, 2.533300000000238e-05, 2.5362000000000995e-05, 2.536100000000152e-05, 2.536100000000152e-05, 2.533300000000238e-05, 2.5360999999994582e-05, 2.534700000000195e-05, 2.5263999999997067e-05, 2.5346999999995012e-05, 2.531900000000281e-05, 2.533300000000238e-05, 2.536100000000152e-05, 2.5306000000002715e-05, 2.533300000000238e-05]</msg>
<status status="PASS" starttime="20201115 22:11:35.666" endtime="20201115 22:11:35.668"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.661" endtime="20201115 22:11:35.668"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:35.671" endtime="20201115 22:11:35.672"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:35.674" endtime="20201115 22:11:35.693"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.673" endtime="20201115 22:11:35.694"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.669" endtime="20201115 22:11:35.694"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.297" endtime="20201115 22:11:35.695"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.295" endtime="20201115 22:11:35.695"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.294" endtime="20201115 22:11:35.695"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:35.697" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:35.707" endtime="20201115 22:11:35.733"></status>
</kw>
<msg timestamp="20201115 22:11:35.734" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:35.705" endtime="20201115 22:11:35.734"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:35.736" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:35.735" endtime="20201115 22:11:35.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:35.737" endtime="20201115 22:11:35.739"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.702" endtime="20201115 22:11:35.740"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.700" endtime="20201115 22:11:35.740"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:35.746" endtime="20201115 22:11:36.031"></status>
</kw>
<msg timestamp="20201115 22:11:36.034" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024814014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024841708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:35.745" endtime="20201115 22:11:36.034"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:36.042" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024814014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024841708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:36.035" endtime="20201115 22:11:36.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:36.043" endtime="20201115 22:11:36.045"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.742" endtime="20201115 22:11:36.045"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.741" endtime="20201115 22:11:36.046"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:36.050" level="INFO">${RESULT} = [{'time': 0.024841708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7694000000001717e-05, 'source_diff': 2.7694000000001717e-05}, {'time': 0.025203875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:36.046" endtime="20201115 22:11:36.050"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:36.063" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:36.051" endtime="20201115 22:11:36.063"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:36.068" level="INFO">NAME: 00-overhead-3-set</msg>
<status status="PASS" starttime="20201115 22:11:36.067" endtime="20201115 22:11:36.068"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:36.071" level="INFO">VALUE: [2.7694000000001717e-05, 2.7527999999998887e-05, 2.7583000000001162e-05, 2.7542000000001926e-05, 2.7444000000001467e-05, 2.7527999999998887e-05, 2.7486000000000177e-05, 2.7540999999998983e-05, 2.7542000000001926e-05, 2.7514000000002786e-05, 2.7541999999998457e-05, 2.7513999999999317e-05, 2.7528000000002356e-05, 2.7541999999998457e-05, 2.7499999999999747e-05, 2.7499999999999747e-05, 2.7499999999999747e-05, 2.7528000000002356e-05, 2.7499999999999747e-05, 2.7499999999999747e-05, 2.7513999999999317e-05, 2.7499999999999747e-05, 2.7527999999998887e-05, 2.7527999999998887e-05, 2.7569999999997596e-05, 2.7527999999998887e-05, 2.7541999999998457e-05, 2.7513999999999317e-05, 2.745900000000051e-05, 2.7527999999998887e-05, 2.7457999999994098e-05, 2.7513999999999317e-05, 2.7554999999998553e-05, 2.7499999999999747e-05, 2.7499999999999747e-05, 2.7512999999999843e-05, 2.7472000000000607e-05, 2.7513999999999317e-05, 2.7528000000005826e-05, 2.7499999999999747e-05, 2.7526999999999413e-05, 2.7526999999999413e-05, 2.7527999999998887e-05, 2.7513999999999317e-05, 2.7527999999998887e-05, 2.7513999999999317e-05, 2.7512999999999843e-05, 2.7513999999999317e-05, 2.7513999999999317e-05, 2.7527999999998887e-05]</msg>
<status status="PASS" starttime="20201115 22:11:36.069" endtime="20201115 22:11:36.071"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.064" endtime="20201115 22:11:36.071"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:36.074" endtime="20201115 22:11:36.075"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:36.077" endtime="20201115 22:11:36.097"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.076" endtime="20201115 22:11:36.097"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.072" endtime="20201115 22:11:36.098"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.698" endtime="20201115 22:11:36.098"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.696" endtime="20201115 22:11:36.098"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.695" endtime="20201115 22:11:36.098"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:36.101" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:36.109" endtime="20201115 22:11:36.137"></status>
</kw>
<msg timestamp="20201115 22:11:36.138" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:36.108" endtime="20201115 22:11:36.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:36.140" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:36.139" endtime="20201115 22:11:36.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:36.142" endtime="20201115 22:11:36.144"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.105" endtime="20201115 22:11:36.145"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.103" endtime="20201115 22:11:36.145"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:36.152" endtime="20201115 22:11:36.438"></status>
</kw>
<msg timestamp="20201115 22:11:36.441" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024137139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024167194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:36.151" endtime="20201115 22:11:36.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:36.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024137139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024167194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:36.442" endtime="20201115 22:11:36.449"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:36.450" endtime="20201115 22:11:36.451"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.148" endtime="20201115 22:11:36.452"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.146" endtime="20201115 22:11:36.452"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:36.456" level="INFO">${RESULT} = [{'time': 0.024167194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0055000000001053e-05, 'source_diff': 3.0055000000001053e-05}, {'time': 0.024556653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:36.453" endtime="20201115 22:11:36.457"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:36.470" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:36.458" endtime="20201115 22:11:36.471"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:36.475" level="INFO">NAME: 00-overhead-4-set</msg>
<status status="PASS" starttime="20201115 22:11:36.474" endtime="20201115 22:11:36.475"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:36.477" level="INFO">VALUE: [3.0055000000001053e-05, 2.9931000000000402e-05, 2.9958000000000068e-05, 2.9931000000000402e-05, 2.9944000000000498e-05, 2.9903000000001262e-05, 2.994499999999997e-05, 2.9958000000000068e-05, 2.9958000000000068e-05, 2.9958000000000068e-05, 2.992999999999746e-05, 2.994399999999703e-05, 2.9958000000000068e-05, 2.995899999999954e-05, 2.9944000000000498e-05, 2.995899999999954e-05, 2.9958000000000068e-05, 2.9971999999999638e-05, 2.994500000000344e-05, 2.994500000000344e-05, 2.993100000000387e-05, 2.9958000000003537e-05, 2.994399999999703e-05, 2.994399999999703e-05, 2.995900000000301e-05, 2.9958999999996072e-05, 2.994399999999703e-05, 2.9888999999998223e-05, 2.9958000000003537e-05, 2.9930999999996932e-05, 2.9944000000003967e-05, 2.9944999999996502e-05, 2.994500000000344e-05, 2.9944000000003967e-05, 2.9930999999996932e-05, 2.9972999999995642e-05, 2.9944999999996502e-05, 2.9985999999995738e-05, 2.997199999999617e-05, 2.994500000000344e-05, 2.994399999999703e-05, 2.9944000000003967e-05, 2.9958999999996072e-05, 2.9944999999996502e-05, 2.993100000000387e-05, 2.9874999999998653e-05, 2.992999999999746e-05, 2.9958999999996072e-05, 2.99579999999966e-05, 2.9916999999997362e-05]</msg>
<status status="PASS" starttime="20201115 22:11:36.476" endtime="20201115 22:11:36.478"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.471" endtime="20201115 22:11:36.478"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:36.480" endtime="20201115 22:11:36.482"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:36.484" endtime="20201115 22:11:36.503"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.482" endtime="20201115 22:11:36.504"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.479" endtime="20201115 22:11:36.504"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.101" endtime="20201115 22:11:36.504"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.100" endtime="20201115 22:11:36.505"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.099" endtime="20201115 22:11:36.505"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:36.507" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:36.516" endtime="20201115 22:11:36.545"></status>
</kw>
<msg timestamp="20201115 22:11:36.546" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:36.514" endtime="20201115 22:11:36.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:36.548" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:36.547" endtime="20201115 22:11:36.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:36.549" endtime="20201115 22:11:36.553"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.512" endtime="20201115 22:11:36.553"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.510" endtime="20201115 22:11:36.554"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:36.560" endtime="20201115 22:11:36.845"></status>
</kw>
<msg timestamp="20201115 22:11:36.848" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024119847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024152347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:36.558" endtime="20201115 22:11:36.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:36.856" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024119847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024152347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:36.849" endtime="20201115 22:11:36.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:36.857" endtime="20201115 22:11:36.859"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.556" endtime="20201115 22:11:36.860"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.554" endtime="20201115 22:11:36.860"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:36.864" level="INFO">${RESULT} = [{'time': 0.024152347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.250000000000128e-05, 'source_diff': 3.250000000000128e-05}, {'time': 0.024591125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:36.861" endtime="20201115 22:11:36.864"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:36.877" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:36.865" endtime="20201115 22:11:36.878"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:36.882" level="INFO">NAME: 00-overhead-5-set</msg>
<status status="PASS" starttime="20201115 22:11:36.881" endtime="20201115 22:11:36.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:36.884" level="INFO">VALUE: [3.250000000000128e-05, 3.240299999999682e-05, 3.238900000000072e-05, 3.240300000000029e-05, 3.237500000000115e-05, 3.2374999999997683e-05, 3.238900000000072e-05, 3.241600000000039e-05, 3.237500000000115e-05, 3.237500000000115e-05, 3.237500000000115e-05, 3.238900000000072e-05, 3.237500000000115e-05, 3.238899999999725e-05, 3.237500000000115e-05, 3.238900000000072e-05, 3.240300000000029e-05, 3.2374999999994214e-05, 3.236100000000158e-05, 3.238799999999431e-05, 3.238900000000072e-05, 3.237500000000115e-05, 3.238800000000125e-05, 3.237500000000115e-05, 3.237500000000115e-05, 3.237500000000115e-05, 3.2374999999994214e-05, 3.237500000000115e-05, 3.241699999999986e-05, 3.2362000000001057e-05, 3.236100000000158e-05, 3.238900000000072e-05, 3.241699999999986e-05, 3.242999999999996e-05, 3.243099999999943e-05, 3.241600000000039e-05, 3.238900000000072e-05, 3.237500000000115e-05, 3.237500000000115e-05, 3.238900000000072e-05, 3.240300000000029e-05, 3.240200000000082e-05, 3.231900000000287e-05, 3.238800000000125e-05, 3.230600000000278e-05, 3.2374999999994214e-05, 3.241699999999986e-05, 3.236100000000158e-05, 3.238900000000072e-05, 3.2388999999993784e-05]</msg>
<status status="PASS" starttime="20201115 22:11:36.883" endtime="20201115 22:11:36.884"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.878" endtime="20201115 22:11:36.885"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:36.887" endtime="20201115 22:11:36.889"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:36.891" endtime="20201115 22:11:36.910"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.889" endtime="20201115 22:11:36.911"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.886" endtime="20201115 22:11:36.911"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.508" endtime="20201115 22:11:36.912"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.506" endtime="20201115 22:11:36.912"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.505" endtime="20201115 22:11:36.912"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:36.914" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:36.923" endtime="20201115 22:11:36.954"></status>
</kw>
<msg timestamp="20201115 22:11:36.954" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:36.921" endtime="20201115 22:11:36.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:36.957" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:36.956" endtime="20201115 22:11:36.957"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:36.958" endtime="20201115 22:11:36.961"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.919" endtime="20201115 22:11:36.961"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.917" endtime="20201115 22:11:36.961"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:36.969" endtime="20201115 22:11:37.265"></status>
</kw>
<msg timestamp="20201115 22:11:37.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024090931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024125875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:36.966" endtime="20201115 22:11:37.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:37.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024090931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024125875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:37.274" endtime="20201115 22:11:37.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:37.291" endtime="20201115 22:11:37.295"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.964" endtime="20201115 22:11:37.296"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.962" endtime="20201115 22:11:37.297"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:37.305" level="INFO">${RESULT} = [{'time': 0.024125875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.494400000000203e-05, 'source_diff': 3.494400000000203e-05}, {'time': 0.024587097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:37.298" endtime="20201115 22:11:37.306"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:37.321" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:37.308" endtime="20201115 22:11:37.321"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:37.325" level="INFO">NAME: 00-overhead-6-set</msg>
<status status="PASS" starttime="20201115 22:11:37.324" endtime="20201115 22:11:37.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:37.328" level="INFO">VALUE: [3.494400000000203e-05, 3.4804999999998865e-05, 3.4805000000002334e-05, 3.480600000000181e-05, 3.47779999999992e-05, 3.482000000000138e-05, 3.4818999999998435e-05, 3.4818999999998435e-05, 3.4819000000001904e-05, 3.4804999999998865e-05, 3.4805000000002334e-05, 3.47779999999992e-05, 3.476399999999963e-05, 3.4804999999998865e-05, 3.4804999999998865e-05, 3.4819000000001904e-05, 3.480599999999834e-05, 3.4818999999998435e-05, 3.483300000000494e-05, 3.4818999999998435e-05, 3.4819000000005373e-05, 3.4818999999998435e-05, 3.4804999999998865e-05, 3.480600000000528e-05, 3.480599999999834e-05, 3.4818999999998435e-05, 3.4790999999999295e-05, 3.481999999999791e-05, 3.480599999999834e-05, 3.480599999999834e-05, 3.4818999999998435e-05, 3.479199999999877e-05, 3.4804999999998865e-05, 3.4819000000005373e-05, 3.479199999999877e-05, 3.473600000000049e-05, 3.479200000000571e-05, 3.4805000000005804e-05, 3.479199999999877e-05, 3.47779999999992e-05, 3.4791000000006234e-05, 3.480599999999834e-05, 3.479199999999877e-05, 3.4804999999998865e-05, 3.479199999999877e-05, 3.480600000000528e-05, 3.479199999999877e-05, 3.4805000000005804e-05, 3.480599999999834e-05, 3.4818999999998435e-05]</msg>
<status status="PASS" starttime="20201115 22:11:37.326" endtime="20201115 22:11:37.328"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.322" endtime="20201115 22:11:37.329"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:37.331" endtime="20201115 22:11:37.332"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:37.334" endtime="20201115 22:11:37.354"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.333" endtime="20201115 22:11:37.354"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.329" endtime="20201115 22:11:37.355"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.915" endtime="20201115 22:11:37.355"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.913" endtime="20201115 22:11:37.355"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.912" endtime="20201115 22:11:37.355"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:37.358" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:37.366" endtime="20201115 22:11:37.399"></status>
</kw>
<msg timestamp="20201115 22:11:37.400" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:37.365" endtime="20201115 22:11:37.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:37.403" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:37.401" endtime="20201115 22:11:37.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:37.404" endtime="20201115 22:11:37.406"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.362" endtime="20201115 22:11:37.407"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.360" endtime="20201115 22:11:37.407"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:37.414" endtime="20201115 22:11:37.699"></status>
</kw>
<msg timestamp="20201115 22:11:37.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024182486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024219861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:37.412" endtime="20201115 22:11:37.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:37.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024182486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024219861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:37.703" endtime="20201115 22:11:37.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:37.711" endtime="20201115 22:11:37.713"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.410" endtime="20201115 22:11:37.713"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.408" endtime="20201115 22:11:37.714"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:37.718" level="INFO">${RESULT} = [{'time': 0.024219861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7374999999999214e-05, 'source_diff': 3.7374999999999214e-05}, {'time': 0.024710486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:37.715" endtime="20201115 22:11:37.718"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:37.731" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:37.719" endtime="20201115 22:11:37.731"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:37.736" level="INFO">NAME: 00-overhead-7-set</msg>
<status status="PASS" starttime="20201115 22:11:37.735" endtime="20201115 22:11:37.736"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:37.738" level="INFO">VALUE: [3.7374999999999214e-05, 3.723599999999952e-05, 3.723599999999952e-05, 3.730600000000084e-05, 3.724999999999909e-05, 3.7276999999998756e-05, 3.724999999999909e-05, 3.726399999999866e-05, 3.724999999999909e-05, 3.723599999999952e-05, 3.723599999999952e-05, 3.723599999999952e-05, 3.723599999999952e-05, 3.722199999999995e-05, 3.723599999999952e-05, 3.72780000000017e-05, 3.7236999999995524e-05, 3.725000000000256e-05, 3.723599999999605e-05, 3.723599999999605e-05, 3.724999999999562e-05, 3.726399999999519e-05, 3.7138999999998534e-05, 3.723600000000299e-05, 3.726400000000213e-05, 3.722199999999648e-05, 3.719400000000428e-05, 3.729200000000127e-05, 3.723600000000299e-05, 3.722300000000289e-05, 3.722199999999648e-05, 3.722200000000342e-05, 3.723599999999605e-05, 3.723599999999605e-05, 3.719399999999734e-05, 3.723599999999605e-05, 3.723700000000246e-05, 3.7180999999997244e-05, 3.722200000000342e-05, 3.729200000000127e-05, 3.725000000000256e-05, 3.723599999999605e-05, 3.723599999999605e-05, 3.723599999999605e-05, 3.722200000000342e-05, 3.724999999999562e-05, 3.723600000000299e-05, 3.724999999999562e-05, 3.723599999999605e-05, 3.7222999999995954e-05]</msg>
<status status="PASS" starttime="20201115 22:11:37.737" endtime="20201115 22:11:37.738"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.732" endtime="20201115 22:11:37.739"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:37.741" endtime="20201115 22:11:37.742"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:37.744" endtime="20201115 22:11:37.764"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.743" endtime="20201115 22:11:37.765"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.740" endtime="20201115 22:11:37.765"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.358" endtime="20201115 22:11:37.765"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.357" endtime="20201115 22:11:37.766"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.356" endtime="20201115 22:11:37.766"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:37.768" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:37.777" endtime="20201115 22:11:37.812"></status>
</kw>
<msg timestamp="20201115 22:11:37.813" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:37.776" endtime="20201115 22:11:37.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:37.815" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:37.814" endtime="20201115 22:11:37.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:37.816" endtime="20201115 22:11:37.819"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.773" endtime="20201115 22:11:37.819"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.770" endtime="20201115 22:11:37.820"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:37.826" endtime="20201115 22:11:38.112"></status>
</kw>
<msg timestamp="20201115 22:11:38.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024683236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024723097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:37.825" endtime="20201115 22:11:38.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:38.123" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024683236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024723097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:38.116" endtime="20201115 22:11:38.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:38.124" endtime="20201115 22:11:38.125"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.822" endtime="20201115 22:11:38.126"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.820" endtime="20201115 22:11:38.126"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:38.130" level="INFO">${RESULT} = [{'time': 0.024723097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9860999999998675e-05, 'source_diff': 3.9860999999998675e-05}, {'time': 0.025255903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:38.127" endtime="20201115 22:11:38.131"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:38.144" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:38.131" endtime="20201115 22:11:38.144"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:38.148" level="INFO">NAME: 00-overhead-8-set</msg>
<status status="PASS" starttime="20201115 22:11:38.147" endtime="20201115 22:11:38.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:38.151" level="INFO">VALUE: [3.9860999999998675e-05, 3.9680999999999744e-05, 3.9667000000000174e-05, 3.9625000000001465e-05, 3.9680999999999744e-05, 3.9625000000001465e-05, 3.9639000000001035e-05, 3.9667000000000174e-05, 3.9667000000000174e-05, 3.9624999999997995e-05, 3.965199999999766e-05, 3.9638999999997565e-05, 3.9653000000000604e-05, 3.9680999999999744e-05, 3.9667000000000174e-05, 3.9680999999999744e-05, 3.965200000000113e-05, 3.9667000000000174e-05, 3.9680999999999744e-05, 3.9680999999999744e-05, 3.9667000000000174e-05, 3.9638999999994096e-05, 3.9667000000000174e-05, 3.965200000000113e-05, 3.9667000000000174e-05, 3.9652999999993666e-05, 3.9667000000000174e-05, 3.95980000000018e-05, 3.968000000000027e-05, 3.9667000000000174e-05, 3.9667000000000174e-05, 3.9667000000000174e-05, 3.9667000000000174e-05, 3.9680999999999744e-05, 3.96660000000007e-05, 3.965199999999419e-05, 3.9667000000000174e-05, 3.9653000000000604e-05, 3.9653000000000604e-05, 3.9611000000001895e-05, 3.9653000000000604e-05, 3.9667000000000174e-05, 3.9653000000000604e-05, 3.965200000000113e-05, 3.9625000000001465e-05, 3.96660000000007e-05, 3.9639000000001035e-05, 3.9667000000000174e-05, 3.9639000000001035e-05, 3.9624999999994526e-05]</msg>
<status status="PASS" starttime="20201115 22:11:38.149" endtime="20201115 22:11:38.151"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.145" endtime="20201115 22:11:38.151"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:38.154" endtime="20201115 22:11:38.155"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:38.158" endtime="20201115 22:11:38.177"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.156" endtime="20201115 22:11:38.178"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.152" endtime="20201115 22:11:38.178"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.768" endtime="20201115 22:11:38.179"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.767" endtime="20201115 22:11:38.179"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.766" endtime="20201115 22:11:38.179"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:38.182" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:38.190" endtime="20201115 22:11:38.227"></status>
</kw>
<msg timestamp="20201115 22:11:38.228" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:38.189" endtime="20201115 22:11:38.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:38.230" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:38.229" endtime="20201115 22:11:38.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:38.231" endtime="20201115 22:11:38.235"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.186" endtime="20201115 22:11:38.235"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.184" endtime="20201115 22:11:38.236"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:38.242" endtime="20201115 22:11:38.527"></status>
</kw>
<msg timestamp="20201115 22:11:38.530" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024735931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024778139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:38.241" endtime="20201115 22:11:38.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:38.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024735931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024778139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:38.531" endtime="20201115 22:11:38.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:38.539" endtime="20201115 22:11:38.541"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.238" endtime="20201115 22:11:38.541"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.236" endtime="20201115 22:11:38.542"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:38.546" level="INFO">${RESULT} = [{'time': 0.024778139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.220800000000191e-05, 'source_diff': 4.220800000000191e-05}, {'time': 0.025366903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:38.543" endtime="20201115 22:11:38.546"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:38.559" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:38.547" endtime="20201115 22:11:38.559"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:38.564" level="INFO">NAME: 00-overhead-9-set</msg>
<status status="PASS" starttime="20201115 22:11:38.563" endtime="20201115 22:11:38.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:38.566" level="INFO">VALUE: [4.220800000000191e-05, 4.2125000000000495e-05, 4.2082999999998316e-05, 4.205599999999865e-05, 4.2125000000000495e-05, 4.208399999999779e-05, 4.2097000000001356e-05, 4.2082999999998316e-05, 4.208400000000126e-05, 4.2068999999998746e-05, 4.2097000000001356e-05, 4.2040999999999606e-05, 4.2082999999998316e-05, 4.2083000000005255e-05, 4.2097000000004825e-05, 4.2097000000004825e-05, 4.2097000000004825e-05, 4.2139000000003535e-05, 4.209799999999736e-05, 4.208400000000473e-05, 4.2082999999998316e-05, 4.2110999999997456e-05, 4.207000000000516e-05, 4.208400000000473e-05, 4.2069000000005685e-05, 4.2097000000004825e-05, 4.2068999999998746e-05, 4.2069000000005685e-05, 4.2096999999997886e-05, 4.201399999999994e-05, 4.206999999999822e-05, 4.202799999999951e-05, 4.2096999999997886e-05, 4.208400000000473e-05, 4.204200000000602e-05, 4.2083000000005255e-05, 4.2110999999997456e-05, 4.208399999999779e-05, 4.2082999999998316e-05, 4.2153000000003105e-05, 4.2096999999997886e-05, 4.208400000000473e-05, 4.2068999999998746e-05, 4.2082999999998316e-05, 4.2082999999998316e-05, 4.2124999999997026e-05, 4.2110999999997456e-05, 4.2167000000002675e-05, 4.2125000000003965e-05, 4.2083000000005255e-05]</msg>
<status status="PASS" starttime="20201115 22:11:38.565" endtime="20201115 22:11:38.567"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.560" endtime="20201115 22:11:38.568"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:38.570" endtime="20201115 22:11:38.571"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:38.573" endtime="20201115 22:11:38.593"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.572" endtime="20201115 22:11:38.593"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.568" endtime="20201115 22:11:38.594"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.182" endtime="20201115 22:11:38.594"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.181" endtime="20201115 22:11:38.594"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.180" endtime="20201115 22:11:38.594"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:38.597" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:38.605" endtime="20201115 22:11:38.645"></status>
</kw>
<msg timestamp="20201115 22:11:38.645" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:38.604" endtime="20201115 22:11:38.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:38.648" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:38.646" endtime="20201115 22:11:38.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:38.649" endtime="20201115 22:11:38.651"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.601" endtime="20201115 22:11:38.652"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.599" endtime="20201115 22:11:38.652"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:38.659" endtime="20201115 22:11:38.945"></status>
</kw>
<msg timestamp="20201115 22:11:38.948" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024140611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024185222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:38.657" endtime="20201115 22:11:38.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:38.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024140611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024185222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:38.949" endtime="20201115 22:11:38.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:38.956" endtime="20201115 22:11:38.958"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.654" endtime="20201115 22:11:38.959"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.653" endtime="20201115 22:11:38.959"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:38.963" level="INFO">${RESULT} = [{'time': 0.024185222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.4610999999999956e-05, 'source_diff': 4.4610999999999956e-05}, {'time': 0.024814472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:38.960" endtime="20201115 22:11:38.963"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:38.977" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:38.964" endtime="20201115 22:11:38.977"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:38.981" level="INFO">NAME: 00-overhead-10-set</msg>
<status status="PASS" starttime="20201115 22:11:38.980" endtime="20201115 22:11:38.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:38.984" level="INFO">VALUE: [4.4610999999999956e-05, 4.452800000000201e-05, 4.44999999999994e-05, 4.44999999999994e-05, 4.451399999999897e-05, 4.451399999999897e-05, 4.451399999999897e-05, 4.452799999999854e-05, 4.44999999999994e-05, 4.454199999999811e-05, 4.451399999999897e-05, 4.44999999999994e-05, 4.451400000000244e-05, 4.451400000000244e-05, 4.45139999999955e-05, 4.457000000000072e-05, 4.451299999999603e-05, 4.450000000000287e-05, 4.452800000000201e-05, 4.45139999999955e-05, 4.451400000000244e-05, 4.451400000000244e-05, 4.45269999999956e-05, 4.452800000000201e-05, 4.449999999999593e-05, 4.45139999999955e-05, 4.452800000000201e-05, 4.451400000000244e-05, 4.452799999999507e-05, 4.451400000000244e-05, 4.455600000000115e-05, 4.45269999999956e-05, 4.448599999999636e-05, 4.452800000000201e-05, 4.451400000000244e-05, 4.452799999999507e-05, 4.451400000000244e-05, 4.452800000000201e-05, 4.4569000000001247e-05, 4.45139999999955e-05, 4.452800000000201e-05, 4.451400000000244e-05, 4.450000000000287e-05, 4.45139999999955e-05, 4.452799999999507e-05, 4.448599999999636e-05, 4.452800000000201e-05, 4.449999999999593e-05, 4.4458999999996696e-05, 4.452700000000254e-05]</msg>
<status status="PASS" starttime="20201115 22:11:38.982" endtime="20201115 22:11:38.984"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.978" endtime="20201115 22:11:38.985"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:38.987" endtime="20201115 22:11:38.989"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:38.991" endtime="20201115 22:11:39.010"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.989" endtime="20201115 22:11:39.011"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.986" endtime="20201115 22:11:39.011"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.597" endtime="20201115 22:11:39.011"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.595" endtime="20201115 22:11:39.012"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.595" endtime="20201115 22:11:39.012"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:39.014" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:39.023" endtime="20201115 22:11:39.065"></status>
</kw>
<msg timestamp="20201115 22:11:39.065" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:39.021" endtime="20201115 22:11:39.065"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:39.068" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:39.066" endtime="20201115 22:11:39.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:39.069" endtime="20201115 22:11:39.071"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.019" endtime="20201115 22:11:39.072"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.017" endtime="20201115 22:11:39.072"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:39.079" endtime="20201115 22:11:39.364"></status>
</kw>
<msg timestamp="20201115 22:11:39.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024503194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024550264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:39.077" endtime="20201115 22:11:39.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:39.375" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024503194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024550264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:39.369" endtime="20201115 22:11:39.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:39.377" endtime="20201115 22:11:39.378"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.075" endtime="20201115 22:11:39.379"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.073" endtime="20201115 22:11:39.379"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:39.383" level="INFO">${RESULT} = [{'time': 0.024550264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.706999999999975e-05, 'source_diff': 4.706999999999975e-05}, {'time': 0.025215319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:39.380" endtime="20201115 22:11:39.383"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:39.397" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:39.385" endtime="20201115 22:11:39.397"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:39.401" level="INFO">NAME: 00-overhead-11-set</msg>
<status status="PASS" starttime="20201115 22:11:39.400" endtime="20201115 22:11:39.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:39.404" level="INFO">VALUE: [4.706999999999975e-05, 4.694400000000015e-05, 4.6944999999999626e-05, 4.6944999999999626e-05, 4.6944999999999626e-05, 4.695799999999972e-05, 4.6889000000001346e-05, 4.6958999999999196e-05, 4.687499999999831e-05, 4.694400000000015e-05, 4.6931000000000056e-05, 4.695799999999972e-05, 4.695799999999972e-05, 4.69860000000058e-05, 4.694400000000015e-05, 4.693000000000058e-05, 4.69860000000058e-05, 4.695799999999972e-05, 4.693000000000058e-05, 4.6903000000000916e-05, 4.694400000000015e-05, 4.693000000000058e-05, 4.6944999999999626e-05, 4.694400000000015e-05, 4.6958999999999196e-05, 4.6931000000000056e-05, 4.6931000000000056e-05, 4.6931000000000056e-05, 4.694400000000015e-05, 4.6931000000000056e-05, 4.695799999999972e-05, 4.6958999999999196e-05, 4.6931000000000056e-05, 4.6944999999999626e-05, 4.697199999999929e-05, 4.6929999999993643e-05, 4.6944999999999626e-05, 4.6944999999999626e-05, 4.694400000000015e-05, 4.700000000000537e-05, 4.694400000000015e-05, 4.6944999999999626e-05, 4.686199999999474e-05, 4.694400000000015e-05, 4.69860000000058e-05, 4.695799999999972e-05, 4.694400000000015e-05, 4.693000000000058e-05, 4.6931000000000056e-05, 4.6875000000001776e-05]</msg>
<status status="PASS" starttime="20201115 22:11:39.402" endtime="20201115 22:11:39.404"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.398" endtime="20201115 22:11:39.405"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:39.407" endtime="20201115 22:11:39.408"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:39.410" endtime="20201115 22:11:39.430"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.409" endtime="20201115 22:11:39.430"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.405" endtime="20201115 22:11:39.431"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.015" endtime="20201115 22:11:39.431"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.013" endtime="20201115 22:11:39.431"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.012" endtime="20201115 22:11:39.431"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:39.434" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:39.442" endtime="20201115 22:11:39.487"></status>
</kw>
<msg timestamp="20201115 22:11:39.487" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:39.441" endtime="20201115 22:11:39.487"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:39.490" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:39.488" endtime="20201115 22:11:39.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:39.491" endtime="20201115 22:11:39.493"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.438" endtime="20201115 22:11:39.494"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.436" endtime="20201115 22:11:39.494"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:39.500" endtime="20201115 22:11:39.786"></status>
</kw>
<msg timestamp="20201115 22:11:39.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024290111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024339597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:39.499" endtime="20201115 22:11:39.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:39.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024290111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024339597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:39.790" endtime="20201115 22:11:39.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:39.803" endtime="20201115 22:11:39.805"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.496" endtime="20201115 22:11:39.806"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.495" endtime="20201115 22:11:39.806"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:39.810" level="INFO">${RESULT} = [{'time': 0.024339597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.948600000000136e-05, 'source_diff': 4.948600000000136e-05}, {'time': 0.025066486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:39.807" endtime="20201115 22:11:39.810"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:39.824" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:39.811" endtime="20201115 22:11:39.824"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:39.828" level="INFO">NAME: 00-overhead-12-set</msg>
<status status="PASS" starttime="20201115 22:11:39.827" endtime="20201115 22:11:39.829"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:39.831" level="INFO">VALUE: [4.948600000000136e-05, 4.937499999999734e-05, 4.937500000000081e-05, 4.938900000000038e-05, 4.934700000000167e-05, 4.937500000000081e-05, 4.938900000000038e-05, 4.936100000000124e-05, 4.93469999999982e-05, 4.937500000000081e-05, 4.9375000000004277e-05, 4.936199999999724e-05, 4.936199999999724e-05, 4.936199999999724e-05, 4.9375000000004277e-05, 4.9375000000004277e-05, 4.936099999999777e-05, 4.936100000000471e-05, 4.9445000000002126e-05, 4.938899999999691e-05, 4.9375000000004277e-05, 4.937499999999734e-05, 4.9375000000004277e-05, 4.936099999999777e-05, 4.937499999999734e-05, 4.938899999999691e-05, 4.936200000000418e-05, 4.936099999999777e-05, 4.937499999999734e-05, 4.931999999999853e-05, 4.9389000000003846e-05, 4.938899999999691e-05, 4.937499999999734e-05, 4.9375000000004277e-05, 4.936099999999777e-05, 4.9375000000004277e-05, 4.930599999999896e-05, 4.93469999999982e-05, 4.9375000000004277e-05, 4.937499999999734e-05, 4.9375000000004277e-05, 4.937499999999734e-05, 4.937499999999734e-05, 4.938899999999691e-05, 4.936100000000471e-05, 4.933299999999863e-05, 4.937499999999734e-05, 4.9389000000003846e-05, 4.931899999999906e-05, 4.9375000000004277e-05]</msg>
<status status="PASS" starttime="20201115 22:11:39.829" endtime="20201115 22:11:39.831"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.825" endtime="20201115 22:11:39.831"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:39.834" endtime="20201115 22:11:39.835"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:39.837" endtime="20201115 22:11:39.856"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.836" endtime="20201115 22:11:39.857"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.832" endtime="20201115 22:11:39.858"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.434" endtime="20201115 22:11:39.858"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.433" endtime="20201115 22:11:39.858"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.432" endtime="20201115 22:11:39.858"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:39.861" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:39.869" endtime="20201115 22:11:39.916"></status>
</kw>
<msg timestamp="20201115 22:11:39.917" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:39.868" endtime="20201115 22:11:39.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:39.919" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:39.918" endtime="20201115 22:11:39.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:39.920" endtime="20201115 22:11:39.924"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.865" endtime="20201115 22:11:39.924"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.863" endtime="20201115 22:11:39.925"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:39.932" endtime="20201115 22:11:40.237"></status>
</kw>
<msg timestamp="20201115 22:11:40.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024498514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024550444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:39.930" endtime="20201115 22:11:40.241"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:40.249" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024498514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024550444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:40.242" endtime="20201115 22:11:40.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:40.250" endtime="20201115 22:11:40.252"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.927" endtime="20201115 22:11:40.252"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.925" endtime="20201115 22:11:40.253"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:40.257" level="INFO">${RESULT} = [{'time': 0.024550444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.193000000000211e-05, 'source_diff': 5.193000000000211e-05}, {'time': 0.025319292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:40.253" endtime="20201115 22:11:40.257"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:40.270" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:40.258" endtime="20201115 22:11:40.270"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:40.275" level="INFO">NAME: 00-overhead-13-set</msg>
<status status="PASS" starttime="20201115 22:11:40.274" endtime="20201115 22:11:40.275"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:40.277" level="INFO">VALUE: [5.193000000000211e-05, 5.180600000000146e-05, 5.180500000000199e-05, 5.179200000000189e-05, 5.180500000000199e-05, 5.184800000000017e-05, 5.179199999999842e-05, 5.180500000000199e-05, 5.173600000000014e-05, 5.180600000000146e-05, 5.180500000000199e-05, 5.180500000000199e-05, 5.180599999999452e-05, 5.180599999999452e-05, 5.179200000000189e-05, 5.187499999999984e-05, 5.180499999999505e-05, 5.179200000000189e-05, 5.180500000000199e-05, 5.180500000000199e-05, 5.177799999999538e-05, 5.180500000000199e-05, 5.179200000000189e-05, 5.180599999999452e-05, 5.180600000000146e-05, 5.176300000000328e-05, 5.182000000000103e-05, 5.180499999999505e-05, 5.181900000000156e-05, 5.180500000000199e-05, 5.182000000000103e-05, 5.177700000000285e-05, 5.179200000000189e-05, 5.179100000000242e-05, 5.180499999999505e-05, 5.172200000000404e-05, 5.177699999999591e-05, 5.179099999999548e-05, 5.181899999999462e-05, 5.182000000000103e-05, 5.176299999999634e-05, 5.180600000000146e-05, 5.179100000000242e-05, 5.180499999999505e-05, 5.180599999999452e-05, 5.18470000000007e-05, 5.180599999999452e-05, 5.186100000000027e-05, 5.180599999999452e-05, 5.179200000000189e-05]</msg>
<status status="PASS" starttime="20201115 22:11:40.276" endtime="20201115 22:11:40.277"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.271" endtime="20201115 22:11:40.278"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:40.280" endtime="20201115 22:11:40.281"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:40.284" endtime="20201115 22:11:40.303"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.282" endtime="20201115 22:11:40.304"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.279" endtime="20201115 22:11:40.304"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.861" endtime="20201115 22:11:40.304"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.859" endtime="20201115 22:11:40.305"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.859" endtime="20201115 22:11:40.305"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:40.307" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:40.316" endtime="20201115 22:11:40.365"></status>
</kw>
<msg timestamp="20201115 22:11:40.365" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:40.314" endtime="20201115 22:11:40.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:40.368" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:40.366" endtime="20201115 22:11:40.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:40.370" endtime="20201115 22:11:40.372"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.312" endtime="20201115 22:11:40.373"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.309" endtime="20201115 22:11:40.373"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:40.380" endtime="20201115 22:11:40.666"></status>
</kw>
<msg timestamp="20201115 22:11:40.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024409333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024463681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:40.378" endtime="20201115 22:11:40.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:40.677" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024409333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024463681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:40.671" endtime="20201115 22:11:40.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:40.679" endtime="20201115 22:11:40.680"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.375" endtime="20201115 22:11:40.681"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.374" endtime="20201115 22:11:40.681"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:40.685" level="INFO">${RESULT} = [{'time': 0.024463681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.434800000000267e-05, 'source_diff': 5.434800000000267e-05}, {'time': 0.025282486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:40.682" endtime="20201115 22:11:40.685"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:40.698" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:40.686" endtime="20201115 22:11:40.699"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:40.703" level="INFO">NAME: 00-overhead-14-set</msg>
<status status="PASS" starttime="20201115 22:11:40.702" endtime="20201115 22:11:40.703"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:40.705" level="INFO">VALUE: [5.434800000000267e-05, 5.4235999999999174e-05, 5.4208000000000034e-05, 5.422200000000307e-05, 5.4221999999999604e-05, 5.4235999999999174e-05, 5.4208000000000034e-05, 5.4221999999999604e-05, 5.4208000000000034e-05, 5.4208000000000034e-05, 5.4208000000000034e-05, 5.429200000000439e-05, 5.427800000000482e-05, 5.4235999999999174e-05, 5.422299999999908e-05, 5.4166000000001324e-05, 5.4208000000000034e-05, 5.4208000000000034e-05, 5.4235999999999174e-05, 5.4221999999999604e-05, 5.4249999999998744e-05, 5.423699999999865e-05, 5.418100000000037e-05, 5.4237000000005586e-05, 5.4249999999998744e-05, 5.4221999999999604e-05, 5.4208000000000034e-05, 5.4235999999999174e-05, 5.4235999999999174e-05, 5.4249999999998744e-05, 5.4235999999999174e-05, 5.4235999999999174e-05, 5.4249999999998744e-05, 5.423699999999865e-05, 5.4235999999999174e-05, 5.4235999999999174e-05, 5.420899999999951e-05, 5.420899999999951e-05, 5.4221999999999604e-05, 5.4235999999999174e-05, 5.4235999999999174e-05, 5.4235999999999174e-05, 5.4291999999997453e-05, 5.4235999999999174e-05, 5.423600000000611e-05, 5.427699999999841e-05, 5.422299999999908e-05, 5.422200000000654e-05, 5.4235999999999174e-05, 5.4223000000006016e-05]</msg>
<status status="PASS" starttime="20201115 22:11:40.704" endtime="20201115 22:11:40.706"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.699" endtime="20201115 22:11:40.706"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:40.709" endtime="20201115 22:11:40.710"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:40.712" endtime="20201115 22:11:40.731"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.710" endtime="20201115 22:11:40.732"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.707" endtime="20201115 22:11:40.732"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.308" endtime="20201115 22:11:40.733"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.306" endtime="20201115 22:11:40.733"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.305" endtime="20201115 22:11:40.733"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:40.735" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:40.745" endtime="20201115 22:11:40.797"></status>
</kw>
<msg timestamp="20201115 22:11:40.797" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:40.743" endtime="20201115 22:11:40.798"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:40.800" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:40.798" endtime="20201115 22:11:40.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:40.801" endtime="20201115 22:11:40.802"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.740" endtime="20201115 22:11:40.803"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.738" endtime="20201115 22:11:40.803"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:40.810" endtime="20201115 22:11:41.093"></status>
</kw>
<msg timestamp="20201115 22:11:41.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024982, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025038806, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:11:40.808" endtime="20201115 22:11:41.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:41.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024982, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025038806, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:11:41.098" endtime="20201115 22:11:41.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:41.106" endtime="20201115 22:11:41.107"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.806" endtime="20201115 22:11:41.108"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.804" endtime="20201115 22:11:41.108"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:41.112" level="INFO">${RESULT} = [{'time': 0.025038806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.6805999999999524e-05, 'source_diff': 5.6805999999999524e-05}, {'time': 0.025921347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:41.109" endtime="20201115 22:11:41.112"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:41.126" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:41.113" endtime="20201115 22:11:41.126"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:41.130" level="INFO">NAME: 00-overhead-15-set</msg>
<status status="PASS" starttime="20201115 22:11:41.129" endtime="20201115 22:11:41.130"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:41.133" level="INFO">VALUE: [5.6805999999999524e-05, 5.6666000000000355e-05, 5.665300000000026e-05, 5.665300000000026e-05, 5.663900000000069e-05, 5.659800000000145e-05, 5.6666000000000355e-05, 5.665300000000026e-05, 5.670900000000201e-05, 5.6694000000002964e-05, 5.665299999999679e-05, 5.665300000000373e-05, 5.6651999999997316e-05, 5.665300000000373e-05, 5.6651999999997316e-05, 5.6652000000004255e-05, 5.665300000000373e-05, 5.659699999999851e-05, 5.6694000000002964e-05, 5.668100000000287e-05, 5.663899999999722e-05, 5.661099999999808e-05, 5.66670000000033e-05, 5.665299999999679e-05, 5.665299999999679e-05, 5.665299999999679e-05, 5.665299999999679e-05, 5.665300000000373e-05, 5.662499999999765e-05, 5.665300000000373e-05, 5.663899999999722e-05, 5.663899999999722e-05, 5.6665999999996886e-05, 5.6651999999997316e-05, 5.665299999999679e-05, 5.666699999999636e-05, 5.6680000000003394e-05, 5.66670000000033e-05, 5.663899999999722e-05, 5.659699999999851e-05, 5.665299999999679e-05, 5.6651999999997316e-05, 5.656899999999937e-05, 5.663899999999722e-05, 5.663899999999722e-05, 5.666699999999636e-05, 5.666700000001024e-05, 5.661099999999808e-05, 5.668099999998899e-05, 5.666700000001024e-05]</msg>
<status status="PASS" starttime="20201115 22:11:41.131" endtime="20201115 22:11:41.133"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.126" endtime="20201115 22:11:41.133"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:41.136" endtime="20201115 22:11:41.137"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:41.140" endtime="20201115 22:11:41.159"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.138" endtime="20201115 22:11:41.160"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.134" endtime="20201115 22:11:41.160"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.736" endtime="20201115 22:11:41.160"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.734" endtime="20201115 22:11:41.161"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.733" endtime="20201115 22:11:41.161"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:41.163" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:41.172" endtime="20201115 22:11:41.227"></status>
</kw>
<msg timestamp="20201115 22:11:41.228" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:41.170" endtime="20201115 22:11:41.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:41.230" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:41.229" endtime="20201115 22:11:41.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:41.232" endtime="20201115 22:11:41.233"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.168" endtime="20201115 22:11:41.234"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.165" endtime="20201115 22:11:41.234"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:41.241" endtime="20201115 22:11:41.528"></status>
</kw>
<msg timestamp="20201115 22:11:41.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024712681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024771889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:41.240" endtime="20201115 22:11:41.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:41.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024712681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024771889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:41.532" endtime="20201115 22:11:41.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:41.540" endtime="20201115 22:11:41.541"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.237" endtime="20201115 22:11:41.542"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.235" endtime="20201115 22:11:41.542"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:41.546" level="INFO">${RESULT} = [{'time': 0.024771889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9207999999998095e-05, 'source_diff': 5.9207999999998095e-05}, {'time': 0.025711778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:41.543" endtime="20201115 22:11:41.547"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:41.560" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:41.547" endtime="20201115 22:11:41.560"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:41.564" level="INFO">NAME: 00-overhead-16-set</msg>
<status status="PASS" starttime="20201115 22:11:41.563" endtime="20201115 22:11:41.565"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:41.567" level="INFO">VALUE: [5.9207999999998095e-05, 5.9070000000001344e-05, 5.9084000000000914e-05, 5.908300000000144e-05, 5.913899999999972e-05, 5.9070000000001344e-05, 5.9083999999997444e-05, 5.908300000000144e-05, 5.906899999999493e-05, 5.90829999999945e-05, 5.9070000000001344e-05, 5.9070000000001344e-05, 5.906900000000187e-05, 5.906900000000187e-05, 5.9084000000000914e-05, 5.909700000000101e-05, 5.9083999999993975e-05, 5.9069999999994405e-05, 5.911100000000058e-05, 5.9070000000001344e-05, 5.9084000000000914e-05, 5.912500000000015e-05, 5.90829999999945e-05, 5.9000000000003494e-05, 5.906900000000187e-05, 5.90550000000023e-05, 5.908300000000144e-05, 5.906899999999493e-05, 5.90550000000023e-05, 5.909700000000101e-05, 5.908300000000144e-05, 5.9084000000000914e-05, 5.906900000000187e-05, 5.915299999999929e-05, 5.90550000000023e-05, 5.909700000000101e-05, 5.906900000000187e-05, 5.9013999999996125e-05, 5.9056000000001774e-05, 5.913900000000666e-05, 5.9084000000000914e-05, 5.909699999999407e-05, 5.906900000000881e-05, 5.908300000000144e-05, 5.9056000000001774e-05, 5.908300000000144e-05, 5.9084000000000914e-05, 5.9028000000002634e-05, 5.9069999999994405e-05, 5.912500000000709e-05]</msg>
<status status="PASS" starttime="20201115 22:11:41.565" endtime="20201115 22:11:41.567"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.561" endtime="20201115 22:11:41.568"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:41.570" endtime="20201115 22:11:41.572"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:41.574" endtime="20201115 22:11:41.593"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.572" endtime="20201115 22:11:41.594"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.569" endtime="20201115 22:11:41.594"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.163" endtime="20201115 22:11:41.595"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.162" endtime="20201115 22:11:41.595"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.161" endtime="20201115 22:11:41.595"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:41.597" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:41.606" endtime="20201115 22:11:41.667"></status>
</kw>
<msg timestamp="20201115 22:11:41.668" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:41.604" endtime="20201115 22:11:41.668"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:41.673" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:41.670" endtime="20201115 22:11:41.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:41.676" endtime="20201115 22:11:41.679"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.602" endtime="20201115 22:11:41.680"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.600" endtime="20201115 22:11:41.681"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:41.694" endtime="20201115 22:11:41.988"></status>
</kw>
<msg timestamp="20201115 22:11:41.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026275569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026337236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:41.691" endtime="20201115 22:11:41.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:41.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026275569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026337236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:41.992" endtime="20201115 22:11:41.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:42.000" endtime="20201115 22:11:42.002"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.686" endtime="20201115 22:11:42.002"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.682" endtime="20201115 22:11:42.003"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:42.007" level="INFO">${RESULT} = [{'time': 0.026337236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.166700000000136e-05, 'source_diff': 6.166700000000136e-05}, {'time': 0.027350222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:42.004" endtime="20201115 22:11:42.007"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:42.021" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:42.008" endtime="20201115 22:11:42.021"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:42.025" level="INFO">NAME: 00-overhead-17-set</msg>
<status status="PASS" starttime="20201115 22:11:42.024" endtime="20201115 22:11:42.025"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:42.028" level="INFO">VALUE: [6.166700000000136e-05, 6.152800000000166e-05, 6.148599999999949e-05, 6.15279999999982e-05, 6.15140000000021e-05, 6.15279999999982e-05, 6.152700000000566e-05, 6.15420000000047e-05, 6.154199999999777e-05, 6.147199999999992e-05, 6.151399999999863e-05, 6.149999999999906e-05, 6.149999999999906e-05, 6.154100000000523e-05, 6.145899999999982e-05, 6.151399999999863e-05, 6.154199999999777e-05, 6.15279999999982e-05, 6.147199999999992e-05, 6.15279999999982e-05, 6.15279999999982e-05, 6.149999999999906e-05, 6.151399999999863e-05, 6.151399999999863e-05, 6.152800000000513e-05, 6.151399999999863e-05, 6.152699999999872e-05, 6.15279999999982e-05, 6.151399999999863e-05, 6.15279999999982e-05, 6.15279999999982e-05, 6.1500000000006e-05, 6.151399999999863e-05, 6.154199999999777e-05, 6.151399999999863e-05, 6.15279999999982e-05, 6.151299999999915e-05, 6.151299999999915e-05, 6.15699999999969e-05, 6.1500000000006e-05, 6.148599999999949e-05, 6.148700000001284e-05, 6.149999999999212e-05, 6.15140000000125e-05, 6.148599999999949e-05, 6.148599999999949e-05, 6.1500000000006e-05, 6.1500000000006e-05, 6.141699999999417e-05, 6.158300000000394e-05]</msg>
<status status="PASS" starttime="20201115 22:11:42.026" endtime="20201115 22:11:42.029"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.021" endtime="20201115 22:11:42.029"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:42.031" endtime="20201115 22:11:42.033"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:42.035" endtime="20201115 22:11:42.054"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.033" endtime="20201115 22:11:42.055"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.030" endtime="20201115 22:11:42.055"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.598" endtime="20201115 22:11:42.056"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.596" endtime="20201115 22:11:42.056"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.595" endtime="20201115 22:11:42.056"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:42.059" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:42.067" endtime="20201115 22:11:42.129"></status>
</kw>
<msg timestamp="20201115 22:11:42.129" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:42.066" endtime="20201115 22:11:42.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:42.132" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:42.131" endtime="20201115 22:11:42.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:42.133" endtime="20201115 22:11:42.135"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.063" endtime="20201115 22:11:42.135"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.061" endtime="20201115 22:11:42.136"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:42.142" endtime="20201115 22:11:42.428"></status>
</kw>
<msg timestamp="20201115 22:11:42.431" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025163069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025227125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:42.141" endtime="20201115 22:11:42.431"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:42.439" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025163069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025227125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:42.432" endtime="20201115 22:11:42.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:42.440" endtime="20201115 22:11:42.442"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.138" endtime="20201115 22:11:42.442"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.136" endtime="20201115 22:11:42.443"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:42.447" level="INFO">${RESULT} = [{'time': 0.025227125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.405599999999984e-05, 'source_diff': 6.405599999999984e-05}, {'time': 0.026297125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:42.443" endtime="20201115 22:11:42.447"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:42.461" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:42.448" endtime="20201115 22:11:42.461"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:42.465" level="INFO">NAME: 00-overhead-18-set</msg>
<status status="PASS" starttime="20201115 22:11:42.464" endtime="20201115 22:11:42.465"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:42.468" level="INFO">VALUE: [6.405599999999984e-05, 6.387500000000143e-05, 6.391600000000067e-05, 6.393099999999971e-05, 6.39439999999998e-05, 6.393000000000024e-05, 6.39300000000037e-05, 6.394399999999634e-05, 6.395800000000285e-05, 6.392999999999677e-05, 6.39159999999972e-05, 6.39300000000037e-05, 6.394399999999634e-05, 6.394400000000328e-05, 6.394499999999581e-05, 6.392999999999677e-05, 6.394500000000275e-05, 6.395800000000285e-05, 6.39300000000037e-05, 6.39300000000037e-05, 6.391700000000361e-05, 6.394399999999634e-05, 6.394500000000275e-05, 6.397299999999495e-05, 6.39300000000037e-05, 6.39300000000037e-05, 6.394400000000328e-05, 6.393100000000318e-05, 6.393100000000318e-05, 6.393099999999624e-05, 6.391700000000361e-05, 6.393099999999624e-05, 6.394400000000328e-05, 6.39029999999971e-05, 6.398599999999505e-05, 6.391699999999667e-05, 6.393100000000318e-05, 6.395900000000232e-05, 6.392999999998983e-05, 6.391700000001055e-05, 6.39300000000037e-05, 6.393100000000318e-05, 6.39300000000037e-05, 6.397200000000935e-05, 6.394399999999634e-05, 6.39159999999972e-05, 6.391600000001108e-05, 6.393100000000318e-05, 6.391699999999667e-05, 6.390300000000404e-05]</msg>
<status status="PASS" starttime="20201115 22:11:42.466" endtime="20201115 22:11:42.468"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.461" endtime="20201115 22:11:42.468"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:42.471" endtime="20201115 22:11:42.472"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:42.474" endtime="20201115 22:11:42.495"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.473" endtime="20201115 22:11:42.497"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.469" endtime="20201115 22:11:42.498"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.059" endtime="20201115 22:11:42.498"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.057" endtime="20201115 22:11:42.499"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.056" endtime="20201115 22:11:42.499"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:42.504" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:42.523" endtime="20201115 22:11:42.591"></status>
</kw>
<msg timestamp="20201115 22:11:42.592" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:42.519" endtime="20201115 22:11:42.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:42.597" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:42.594" endtime="20201115 22:11:42.598"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:42.600" endtime="20201115 22:11:42.603"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.514" endtime="20201115 22:11:42.604"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.509" endtime="20201115 22:11:42.605"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:42.619" endtime="20201115 22:11:42.915"></status>
</kw>
<msg timestamp="20201115 22:11:42.918" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04258, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042646444, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201115 22:11:42.616" endtime="20201115 22:11:42.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:42.926" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04258, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042646444, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201115 22:11:42.919" endtime="20201115 22:11:42.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:42.927" endtime="20201115 22:11:42.929"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.610" endtime="20201115 22:11:42.929"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.606" endtime="20201115 22:11:42.930"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:42.934" level="INFO">${RESULT} = [{'time': 0.042646444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.644399999999884e-05, 'source_diff': 6.644399999999884e-05}, {'time': 0.043771389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:42.931" endtime="20201115 22:11:42.934"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:42.947" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:42.935" endtime="20201115 22:11:42.948"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:42.952" level="INFO">NAME: 00-overhead-19-set</msg>
<status status="PASS" starttime="20201115 22:11:42.951" endtime="20201115 22:11:42.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:42.954" level="INFO">VALUE: [6.644399999999884e-05, 6.637500000000046e-05, 6.636100000000089e-05, 6.636100000000089e-05, 6.636100000000089e-05, 6.634700000000132e-05, 6.636100000000089e-05, 6.637500000000046e-05, 6.633400000000123e-05, 6.636100000000089e-05, 6.633300000000175e-05, 6.637499999999352e-05, 6.630499999999567e-05, 6.637500000000046e-05, 6.627800000000295e-05, 6.636100000000089e-05, 6.634700000000132e-05, 6.637500000000046e-05, 6.640300000000654e-05, 6.63750000000074e-05, 6.641699999999917e-05, 6.634699999999438e-05, 6.634699999999438e-05, 6.629199999999558e-05, 6.634700000000826e-05, 6.636100000000089e-05, 6.631899999999524e-05, 6.637499999999352e-05, 6.637499999999352e-05, 6.636100000000089e-05, 6.63750000000074e-05, 6.636100000000089e-05, 6.637499999999352e-05, 6.627800000000295e-05, 6.633400000000123e-05, 6.636100000000089e-05, 6.634799999999386e-05, 6.641699999999917e-05, 6.637499999999352e-05, 6.637499999999352e-05, 6.637499999999352e-05, 6.638900000000003e-05, 6.636100000000089e-05, 6.640299999999266e-05, 6.634799999999386e-05, 6.634700000000826e-05, 6.636100000000089e-05, 6.637499999999352e-05, 6.634700000000826e-05, 6.636099999998701e-05]</msg>
<status status="PASS" starttime="20201115 22:11:42.953" endtime="20201115 22:11:42.955"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.948" endtime="20201115 22:11:42.955"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:42.958" endtime="20201115 22:11:42.959"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:42.961" endtime="20201115 22:11:42.981"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.960" endtime="20201115 22:11:42.981"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.956" endtime="20201115 22:11:42.982"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.505" endtime="20201115 22:11:42.982"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.502" endtime="20201115 22:11:42.982"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.500" endtime="20201115 22:11:42.982"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:42.985" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:42.993" endtime="20201115 22:11:43.062"></status>
</kw>
<msg timestamp="20201115 22:11:43.062" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:42.992" endtime="20201115 22:11:43.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:43.065" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:43.063" endtime="20201115 22:11:43.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:43.066" endtime="20201115 22:11:43.068"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.989" endtime="20201115 22:11:43.068"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.987" endtime="20201115 22:11:43.069"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:43.075" endtime="20201115 22:11:43.361"></status>
</kw>
<msg timestamp="20201115 22:11:43.364" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025028806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025097722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:43.073" endtime="20201115 22:11:43.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:43.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025028806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025097722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:43.365" endtime="20201115 22:11:43.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:43.373" endtime="20201115 22:11:43.374"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.071" endtime="20201115 22:11:43.375"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.069" endtime="20201115 22:11:43.375"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:43.380" level="INFO">${RESULT} = [{'time': 0.025097722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.891599999999873e-05, 'source_diff': 6.891599999999873e-05}, {'time': 0.026304708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:43.376" endtime="20201115 22:11:43.380"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:43.393" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:43.381" endtime="20201115 22:11:43.393"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:43.398" level="INFO">NAME: 00-overhead-20-set</msg>
<status status="PASS" starttime="20201115 22:11:43.397" endtime="20201115 22:11:43.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:43.400" level="INFO">VALUE: [6.891599999999873e-05, 6.876399999999894e-05, 6.876299999999946e-05, 6.877799999999851e-05, 6.877800000000198e-05, 6.879199999999808e-05, 6.87500000000063e-05, 6.879199999999808e-05, 6.874999999999937e-05, 6.879199999999808e-05, 6.877799999999851e-05, 6.880599999999765e-05, 6.877700000000597e-05, 6.87909999999986e-05, 6.87359999999998e-05, 6.87909999999986e-05, 6.877699999999903e-05, 6.884699999999688e-05, 6.880599999999765e-05, 6.87909999999986e-05, 6.87909999999986e-05, 6.87359999999998e-05, 6.876400000000588e-05, 6.876400000000588e-05, 6.876399999999894e-05, 6.876399999999894e-05, 6.877799999999851e-05, 6.877799999999851e-05, 6.879100000000554e-05, 6.883299999999731e-05, 6.880499999999817e-05, 6.879199999999808e-05, 6.876399999999894e-05, 6.880599999999071e-05, 6.877800000000545e-05, 6.879199999999808e-05, 6.877799999999157e-05, 6.877799999999157e-05, 6.879199999999808e-05, 6.877799999999157e-05, 6.877799999999157e-05, 6.877799999999157e-05, 6.879199999999808e-05, 6.877800000000545e-05, 6.881999999999722e-05, 6.877799999999157e-05, 6.87500000000063e-05, 6.877800000000545e-05, 6.880600000000459e-05, 6.880500000000511e-05]</msg>
<status status="PASS" starttime="20201115 22:11:43.399" endtime="20201115 22:11:43.401"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.394" endtime="20201115 22:11:43.401"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:43.404" endtime="20201115 22:11:43.405"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:43.407" endtime="20201115 22:11:43.426"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.405" endtime="20201115 22:11:43.427"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.402" endtime="20201115 22:11:43.428"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.985" endtime="20201115 22:11:43.428"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.984" endtime="20201115 22:11:43.428"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.983" endtime="20201115 22:11:43.428"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:43.431" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:43.440" endtime="20201115 22:11:43.513"></status>
</kw>
<msg timestamp="20201115 22:11:43.514" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:43.438" endtime="20201115 22:11:43.514"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:43.516" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:43.515" endtime="20201115 22:11:43.517"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:43.518" endtime="20201115 22:11:43.519"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.435" endtime="20201115 22:11:43.520"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.433" endtime="20201115 22:11:43.520"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:43.527" endtime="20201115 22:11:43.811"></status>
</kw>
<msg timestamp="20201115 22:11:43.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02706475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027136097, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:11:43.525" endtime="20201115 22:11:43.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:43.822" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02706475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027136097, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:11:43.815" endtime="20201115 22:11:43.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:43.823" endtime="20201115 22:11:43.825"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.523" endtime="20201115 22:11:43.825"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.521" endtime="20201115 22:11:43.825"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:43.830" level="INFO">${RESULT} = [{'time': 0.027136097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.134700000000285e-05, 'source_diff': 7.134700000000285e-05}, {'time': 0.028418319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:43.826" endtime="20201115 22:11:43.830"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:43.843" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:43.831" endtime="20201115 22:11:43.843"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:43.848" level="INFO">NAME: 00-overhead-21-set</msg>
<status status="PASS" starttime="20201115 22:11:43.847" endtime="20201115 22:11:43.848"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:43.850" level="INFO">VALUE: [7.134700000000285e-05, 7.122199999999926e-05, 7.122199999999926e-05, 7.122199999999926e-05, 7.123700000000177e-05, 7.118100000000349e-05, 7.122199999999579e-05, 7.122200000000273e-05, 7.113900000000478e-05, 7.120800000000316e-05, 7.123700000000177e-05, 7.120900000000263e-05, 7.123599999999536e-05, 7.119399999999665e-05, 7.12230000000022e-05, 7.12230000000022e-05, 7.126400000000144e-05, 7.12360000000023e-05, 7.12360000000023e-05, 7.125000000000187e-05, 7.123700000000177e-05, 7.120899999999569e-05, 7.126400000000144e-05, 7.122200000000273e-05, 7.122199999999579e-05, 7.122200000000273e-05, 7.12360000000023e-05, 7.130500000000067e-05, 7.120900000000263e-05, 7.122199999999579e-05, 7.126400000000144e-05, 7.122200000000967e-05, 7.122200000000967e-05, 7.116600000001139e-05, 7.122299999999526e-05, 7.12360000000023e-05, 7.122199999999579e-05, 7.115200000000488e-05, 7.119399999999665e-05, 7.122199999999579e-05, 7.118000000000402e-05, 7.120800000000316e-05, 7.120900000000263e-05, 7.126400000000144e-05, 7.12360000000023e-05, 7.120900000000263e-05, 7.122299999999526e-05, 7.119499999999612e-05, 7.119499999999612e-05, 7.115200000000488e-05]</msg>
<status status="PASS" starttime="20201115 22:11:43.849" endtime="20201115 22:11:43.851"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.844" endtime="20201115 22:11:43.851"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:43.853" endtime="20201115 22:11:43.855"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:43.857" endtime="20201115 22:11:43.876"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.855" endtime="20201115 22:11:43.877"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.852" endtime="20201115 22:11:43.877"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.431" endtime="20201115 22:11:43.878"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.429" endtime="20201115 22:11:43.878"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.429" endtime="20201115 22:11:43.878"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:43.880" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:43.890" endtime="20201115 22:11:43.965"></status>
</kw>
<msg timestamp="20201115 22:11:43.966" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:43.888" endtime="20201115 22:11:43.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:43.968" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:43.967" endtime="20201115 22:11:43.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:43.970" endtime="20201115 22:11:43.971"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.885" endtime="20201115 22:11:43.972"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.883" endtime="20201115 22:11:43.972"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:43.979" endtime="20201115 22:11:44.285"></status>
</kw>
<msg timestamp="20201115 22:11:44.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025757014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025830819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:43.977" endtime="20201115 22:11:44.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:44.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025757014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025830819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:44.289" endtime="20201115 22:11:44.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:44.297" endtime="20201115 22:11:44.299"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.975" endtime="20201115 22:11:44.299"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.973" endtime="20201115 22:11:44.300"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:44.304" level="INFO">${RESULT} = [{'time': 0.025830819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.38049999999997e-05, 'source_diff': 7.38049999999997e-05}, {'time': 0.02716775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 22:11:44.301" endtime="20201115 22:11:44.304"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:44.317" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:44.305" endtime="20201115 22:11:44.318"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:44.322" level="INFO">NAME: 00-overhead-22-set</msg>
<status status="PASS" starttime="20201115 22:11:44.321" endtime="20201115 22:11:44.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:44.324" level="INFO">VALUE: [7.38049999999997e-05, 7.365299999999991e-05, 7.365299999999991e-05, 7.365200000000044e-05, 7.366700000000295e-05, 7.368099999999905e-05, 7.365299999999991e-05, 7.365200000000044e-05, 7.363900000000034e-05, 7.365200000000044e-05, 7.36110000000012e-05, 7.363800000000087e-05, 7.363800000000087e-05, 7.362499999999383e-05, 7.363900000000034e-05, 7.363900000000034e-05, 7.372199999999829e-05, 7.366600000000001e-05, 7.363900000000034e-05, 7.36389999999934e-05, 7.365299999999991e-05, 7.368099999999905e-05, 7.365299999999991e-05, 7.365299999999991e-05, 7.363900000000034e-05, 7.365299999999991e-05, 7.366699999999948e-05, 7.367999999999958e-05, 7.356899999999555e-05, 7.36519999999935e-05, 7.36519999999935e-05, 7.366699999999948e-05, 7.366600000000001e-05, 7.373599999999092e-05, 7.365299999999297e-05, 7.366699999999948e-05, 7.365299999999297e-05, 7.365299999999297e-05, 7.369499999999862e-05, 7.36519999999935e-05, 7.366600000000001e-05, 7.368000000000652e-05, 7.366700000001336e-05, 7.363900000000034e-05, 7.363900000000034e-05, 7.366699999999948e-05, 7.365299999999297e-05, 7.369399999999915e-05, 7.36110000000012e-05, 7.365299999999297e-05]</msg>
<status status="PASS" starttime="20201115 22:11:44.323" endtime="20201115 22:11:44.325"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.318" endtime="20201115 22:11:44.325"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:44.328" endtime="20201115 22:11:44.329"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:44.331" endtime="20201115 22:11:44.351"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.330" endtime="20201115 22:11:44.352"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.326" endtime="20201115 22:11:44.352"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.881" endtime="20201115 22:11:44.352"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.879" endtime="20201115 22:11:44.353"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.879" endtime="20201115 22:11:44.353"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:44.355" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:44.364" endtime="20201115 22:11:44.443"></status>
</kw>
<msg timestamp="20201115 22:11:44.444" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:44.362" endtime="20201115 22:11:44.444"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:44.446" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:44.445" endtime="20201115 22:11:44.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:44.447" endtime="20201115 22:11:44.449"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.360" endtime="20201115 22:11:44.450"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.358" endtime="20201115 22:11:44.450"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:44.456" endtime="20201115 22:11:44.743"></status>
</kw>
<msg timestamp="20201115 22:11:44.746" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025675611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025751792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:44.455" endtime="20201115 22:11:44.746"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:44.753" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025675611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025751792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:44.747" endtime="20201115 22:11:44.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:44.755" endtime="20201115 22:11:44.756"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.452" endtime="20201115 22:11:44.757"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.451" endtime="20201115 22:11:44.757"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:44.761" level="INFO">${RESULT} = [{'time': 0.025751792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.618099999999808e-05, 'source_diff': 7.618099999999808e-05}, {'time': 0.02717125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:11:44.758" endtime="20201115 22:11:44.762"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:44.775" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:44.762" endtime="20201115 22:11:44.775"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:44.780" level="INFO">NAME: 00-overhead-23-set</msg>
<status status="PASS" starttime="20201115 22:11:44.778" endtime="20201115 22:11:44.780"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:44.782" level="INFO">VALUE: [7.618099999999808e-05, 7.60830000000011e-05, 7.608400000000057e-05, 7.6070000000001e-05, 7.608400000000404e-05, 7.606899999999805e-05, 7.606899999999805e-05, 7.605499999999848e-05, 7.60839999999971e-05, 7.60839999999971e-05, 7.60969999999972e-05, 7.608299999999762e-05, 7.6069000000005e-05, 7.607000000000447e-05, 7.611099999999676e-05, 7.60969999999972e-05, 7.60839999999971e-05, 7.612500000000327e-05, 7.604099999999892e-05, 7.606899999999805e-05, 7.6069000000005e-05, 7.606999999999753e-05, 7.608400000000404e-05, 7.60969999999972e-05, 7.606899999999805e-05, 7.608299999999762e-05, 7.606899999999805e-05, 7.608400000000404e-05, 7.605499999999155e-05, 7.604199999999839e-05, 7.606899999999805e-05, 7.604200000001227e-05, 7.606999999999753e-05, 7.612499999999633e-05, 7.605499999999155e-05, 7.606899999999805e-05, 7.60969999999972e-05, 7.608300000000456e-05, 7.608300000000456e-05, 7.606900000001193e-05, 7.604099999999892e-05, 7.601399999999925e-05, 7.60969999999972e-05, 7.606899999999805e-05, 7.604199999999839e-05, 7.60969999999972e-05, 7.611099999998983e-05, 7.609799999999667e-05, 7.608400000000404e-05, 7.609700000001107e-05]</msg>
<status status="PASS" starttime="20201115 22:11:44.781" endtime="20201115 22:11:44.783"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.776" endtime="20201115 22:11:44.783"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:44.786" endtime="20201115 22:11:44.787"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:44.789" endtime="20201115 22:11:44.809"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.788" endtime="20201115 22:11:44.809"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.784" endtime="20201115 22:11:44.810"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.356" endtime="20201115 22:11:44.810"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.354" endtime="20201115 22:11:44.810"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.353" endtime="20201115 22:11:44.810"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:44.813" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:44.821" endtime="20201115 22:11:44.906"></status>
</kw>
<msg timestamp="20201115 22:11:44.907" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:44.820" endtime="20201115 22:11:44.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:44.912" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:44.909" endtime="20201115 22:11:44.913"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:44.915" endtime="20201115 22:11:44.918"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.817" endtime="20201115 22:11:44.919"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.815" endtime="20201115 22:11:44.920"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:44.934" endtime="20201115 22:11:45.229"></status>
</kw>
<msg timestamp="20201115 22:11:45.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02528075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025359403, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:11:44.931" endtime="20201115 22:11:45.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:45.239" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02528075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025359403, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:11:45.233" endtime="20201115 22:11:45.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:45.241" endtime="20201115 22:11:45.242"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.925" endtime="20201115 22:11:45.243"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.922" endtime="20201115 22:11:45.243"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:45.247" level="INFO">${RESULT} = [{'time': 0.025359403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.865299999999797e-05, 'source_diff': 7.865299999999797e-05}, {'time': 0.026866139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:45.244" endtime="20201115 22:11:45.248"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:45.261" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:45.248" endtime="20201115 22:11:45.261"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:45.265" level="INFO">NAME: 00-overhead-24-set</msg>
<status status="PASS" starttime="20201115 22:11:45.264" endtime="20201115 22:11:45.266"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:45.268" level="INFO">VALUE: [7.865299999999797e-05, 7.852800000000132e-05, 7.852800000000132e-05, 7.847300000000251e-05, 7.85269999999949e-05, 7.851399999999481e-05, 7.849999999999524e-05, 7.848600000000261e-05, 7.850000000000218e-05, 7.851399999999481e-05, 7.854200000000089e-05, 7.850000000000218e-05, 7.851400000000175e-05, 7.854200000000089e-05, 7.847200000000304e-05, 7.851399999999481e-05, 7.851299999999534e-05, 7.850000000000218e-05, 7.852700000000185e-05, 7.852799999999438e-05, 7.850000000000218e-05, 7.849999999999524e-05, 7.852800000000132e-05, 7.851400000000175e-05, 7.851399999999481e-05, 7.851400000000175e-05, 7.849999999999524e-05, 7.851400000000175e-05, 7.856900000000056e-05, 7.854099999998754e-05, 7.851400000000175e-05, 7.852799999999438e-05, 7.851400000000175e-05, 7.849999999999524e-05, 7.849999999999524e-05, 7.851400000000175e-05, 7.851400000000175e-05, 7.851400000000175e-05, 7.844499999999643e-05, 7.852800000000826e-05, 7.851400000000175e-05, 7.844399999999696e-05, 7.852799999999438e-05, 7.859799999999917e-05, 7.852799999999438e-05, 7.848599999998873e-05, 7.851400000000175e-05, 7.854200000000089e-05, 7.848599999998873e-05, 7.851400000000175e-05]</msg>
<status status="PASS" starttime="20201115 22:11:45.266" endtime="20201115 22:11:45.269"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.262" endtime="20201115 22:11:45.269"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:45.272" endtime="20201115 22:11:45.273"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:45.275" endtime="20201115 22:11:45.295"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.274" endtime="20201115 22:11:45.295"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.270" endtime="20201115 22:11:45.296"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.813" endtime="20201115 22:11:45.296"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.812" endtime="20201115 22:11:45.297"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.811" endtime="20201115 22:11:45.297"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:45.299" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:45.309" endtime="20201115 22:11:45.398"></status>
</kw>
<msg timestamp="20201115 22:11:45.398" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:45.307" endtime="20201115 22:11:45.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:45.401" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:45.399" endtime="20201115 22:11:45.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:45.402" endtime="20201115 22:11:45.404"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.305" endtime="20201115 22:11:45.404"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.302" endtime="20201115 22:11:45.405"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:45.411" endtime="20201115 22:11:45.699"></status>
</kw>
<msg timestamp="20201115 22:11:45.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028640319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028721375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:45.410" endtime="20201115 22:11:45.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:45.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028640319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028721375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:45.703" endtime="20201115 22:11:45.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:45.711" endtime="20201115 22:11:45.713"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.407" endtime="20201115 22:11:45.713"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.405" endtime="20201115 22:11:45.714"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:45.718" level="INFO">${RESULT} = [{'time': 0.028721375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.105599999999949e-05, 'source_diff': 8.105599999999949e-05}, {'time': 0.030293556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:45.715" endtime="20201115 22:11:45.719"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:45.750" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:45.721" endtime="20201115 22:11:45.751"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:45.760" level="INFO">NAME: 00-overhead-25-set</msg>
<status status="PASS" starttime="20201115 22:11:45.757" endtime="20201115 22:11:45.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:45.765" level="INFO">VALUE: [8.105599999999949e-05, 8.09589999999985e-05, 8.09169999999998e-05, 8.094399999999946e-05, 8.094499999999893e-05, 8.094399999999946e-05, 8.093099999999936e-05, 8.094399999999946e-05, 8.099999999999774e-05, 8.094499999999893e-05, 8.092999999999989e-05, 8.095799999999903e-05, 8.087500000000108e-05, 8.091600000000032e-05, 8.092999999999989e-05, 8.09169999999998e-05, 8.094500000000587e-05, 8.09589999999985e-05, 8.088900000000065e-05, 8.094500000000587e-05, 8.093099999999936e-05, 8.090200000000075e-05, 8.094499999999893e-05, 8.09310000000063e-05, 8.086100000000151e-05, 8.09310000000063e-05, 8.094499999999893e-05, 8.094500000001281e-05, 8.091600000000032e-05, 8.093000000000683e-05, 8.094499999999893e-05, 8.094399999999946e-05, 8.093000000000683e-05, 8.094399999999946e-05, 8.094399999999946e-05, 8.092999999999295e-05, 8.094500000001281e-05, 8.092999999999295e-05, 8.094399999999946e-05, 8.094499999999893e-05, 8.094399999999946e-05, 8.094399999999946e-05, 8.094499999999893e-05, 8.093099999999243e-05, 8.09310000000063e-05, 8.093000000000683e-05, 8.093000000000683e-05, 8.094499999999893e-05, 8.092999999999295e-05, 8.083300000000238e-05]</msg>
<status status="PASS" starttime="20201115 22:11:45.762" endtime="20201115 22:11:45.766"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.752" endtime="20201115 22:11:45.767"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:45.772" endtime="20201115 22:11:45.774"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:45.779" endtime="20201115 22:11:45.801"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.776" endtime="20201115 22:11:45.802"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.768" endtime="20201115 22:11:45.803"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.300" endtime="20201115 22:11:45.804"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.298" endtime="20201115 22:11:45.804"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.297" endtime="20201115 22:11:45.805"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.892" endtime="20201115 22:11:45.805"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="teardown">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:45.819" endtime="20201115 22:11:45.838"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.815" endtime="20201115 22:11:45.839"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.813" endtime="20201115 22:11:45.839"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:11:34.824" endtime="20201115 22:11:45.840" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Remove List">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:45.849" endtime="20201115 22:11:45.868"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.847" endtime="20201115 22:11:45.869"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:45.883" endtime="20201115 22:11:45.895"></status>
</kw>
<msg timestamp="20201115 22:11:45.896" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:45.882" endtime="20201115 22:11:45.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:45.898" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:45.897" endtime="20201115 22:11:45.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:11:45.902" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:11:45.900" endtime="20201115 22:11:45.902"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:45.879" endtime="20201115 22:11:45.903"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:45.876" endtime="20201115 22:11:45.903"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.874" endtime="20201115 22:11:45.904"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:11:45.908" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:11:45.907" endtime="20201115 22:11:45.908"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.905" endtime="20201115 22:11:45.908"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.873" endtime="20201115 22:11:45.908"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.873" endtime="20201115 22:11:45.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:45.909" endtime="20201115 22:11:45.911"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.871" endtime="20201115 22:11:45.911"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.870" endtime="20201115 22:11:45.912"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.846" endtime="20201115 22:11:45.912"></status>
</kw>
<kw name="${n} IN RANGE [ 25 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:45.916" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:45.925" endtime="20201115 22:11:45.949"></status>
</kw>
<msg timestamp="20201115 22:11:45.950" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:45.923" endtime="20201115 22:11:45.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:45.952" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:45.951" endtime="20201115 22:11:45.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:45.953" endtime="20201115 22:11:45.955"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.921" endtime="20201115 22:11:45.955"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.919" endtime="20201115 22:11:45.956"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:45.963" endtime="20201115 22:11:46.249"></status>
</kw>
<msg timestamp="20201115 22:11:46.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068113986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068120069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:45.961" endtime="20201115 22:11:46.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:46.260" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068113986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068120069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:46.253" endtime="20201115 22:11:46.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:46.261" endtime="20201115 22:11:46.263"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.958" endtime="20201115 22:11:46.264"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.956" endtime="20201115 22:11:46.264"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:46.268" level="INFO">${RESULT} = [{'time': 0.068120069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.083000000003946e-06, 'source_diff': 6.083000000003946e-06}, {'time': 0.068430528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:46.265" endtime="20201115 22:11:46.268"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:46.282" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:46.269" endtime="20201115 22:11:46.282"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:46.287" level="INFO">NAME: 00-overhead-1-remove</msg>
<status status="PASS" starttime="20201115 22:11:46.286" endtime="20201115 22:11:46.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:46.289" level="INFO">VALUE: [6.083000000003946e-06, 5.736000000006181e-06, 5.708000000007041e-06, 5.776999999998478e-06, 5.7919999999905825e-06, 5.805999999997091e-06, 5.749999999998812e-06, 5.7919999999905825e-06, 5.7919999999905825e-06, 5.805999999997091e-06, 5.7779999999979514e-06, 5.778000000011829e-06, 5.804999999997618e-06, 5.805999999997091e-06, 5.763999999991443e-06, 5.7779999999979514e-06, 5.79200000000446e-06, 5.79200000000446e-06, 5.7919999999905825e-06, 5.735999999992303e-06, 5.776999999998478e-06, 5.776999999998478e-06, 5.79200000000446e-06, 5.806000000010969e-06, 5.736000000006181e-06, 5.804999999997618e-06, 5.79200000000446e-06, 5.79200000000446e-06, 5.7919999999905825e-06, 5.791000000004987e-06, 5.76400000000532e-06, 5.7779999999979514e-06, 5.7779999999979514e-06, 5.804999999997618e-06, 5.79200000000446e-06, 5.804999999997618e-06, 5.7919999999905825e-06, 5.790999999991109e-06, 5.805999999997091e-06, 5.736000000006181e-06, 5.79200000000446e-06, 5.847000000003266e-06, 5.804999999997618e-06, 5.763999999991443e-06, 5.7779999999979514e-06, 5.7919999999905825e-06, 5.7919999999905825e-06, 5.791000000004987e-06, 5.8329999999967574e-06, 5.7779999999979514e-06]</msg>
<status status="PASS" starttime="20201115 22:11:46.288" endtime="20201115 22:11:46.290"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.283" endtime="20201115 22:11:46.290"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:46.292" endtime="20201115 22:11:46.294"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:46.296" endtime="20201115 22:11:46.316"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.294" endtime="20201115 22:11:46.316"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.291" endtime="20201115 22:11:46.317"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.916" endtime="20201115 22:11:46.317"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.915" endtime="20201115 22:11:46.317"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.914" endtime="20201115 22:11:46.318"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:46.320" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:46.329" endtime="20201115 22:11:46.355"></status>
</kw>
<msg timestamp="20201115 22:11:46.355" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:46.327" endtime="20201115 22:11:46.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:46.358" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:46.356" endtime="20201115 22:11:46.358"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:46.359" endtime="20201115 22:11:46.360"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.325" endtime="20201115 22:11:46.361"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.323" endtime="20201115 22:11:46.361"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:46.369" endtime="20201115 22:11:46.655"></status>
</kw>
<msg timestamp="20201115 22:11:46.658" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025392875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025399792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:46.366" endtime="20201115 22:11:46.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:46.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025392875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025399792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:46.659" endtime="20201115 22:11:46.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:46.667" endtime="20201115 22:11:46.669"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.364" endtime="20201115 22:11:46.669"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.362" endtime="20201115 22:11:46.670"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:46.674" level="INFO">${RESULT} = [{'time': 0.025399792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.917000000002116e-06, 'source_diff': 6.917000000002116e-06}, {'time': 0.025739778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:46.671" endtime="20201115 22:11:46.675"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:46.688" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:46.675" endtime="20201115 22:11:46.688"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:46.692" level="INFO">NAME: 00-overhead-2-remove</msg>
<status status="PASS" starttime="20201115 22:11:46.691" endtime="20201115 22:11:46.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:46.695" level="INFO">VALUE: [6.917000000002116e-06, 6.542000000001741e-06, 6.5969999999970774e-06, 6.597000000000547e-06, 6.597000000000547e-06, 6.624999999999687e-06, 6.6119999999995904e-06, 6.584000000000451e-06, 6.624999999999687e-06, 6.554999999998368e-06, 6.6119999999995904e-06, 6.624999999999687e-06, 6.583000000000977e-06, 6.611000000000117e-06, 6.5980000000000205e-06, 6.5969999999970774e-06, 6.611000000000117e-06, 6.540999999998798e-06, 6.624999999996217e-06, 6.611000000003586e-06, 6.667000000001866e-06, 6.5969999999970774e-06, 6.583000000004446e-06, 6.597000000004016e-06, 6.58400000000392e-06, 6.611999999996121e-06, 6.55600000000478e-06, 6.59800000000349e-06, 6.555999999997841e-06, 6.5969999999970774e-06, 6.624999999996217e-06, 6.625000000003156e-06, 6.610999999996647e-06, 6.611000000003586e-06, 6.597000000004016e-06, 6.667000000001866e-06, 6.59800000000349e-06, 6.5829999999975075e-06, 6.5969999999970774e-06, 6.625000000003156e-06, 6.583000000004446e-06, 6.58400000000392e-06, 6.5279999999987015e-06, 6.583000000004446e-06, 6.5969999999970774e-06, 6.5829999999975075e-06, 6.610999999996647e-06, 6.5969999999970774e-06, 6.610999999996647e-06, 6.5969999999970774e-06]</msg>
<status status="PASS" starttime="20201115 22:11:46.693" endtime="20201115 22:11:46.695"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.689" endtime="20201115 22:11:46.696"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:46.698" endtime="20201115 22:11:46.699"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:46.702" endtime="20201115 22:11:46.721"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.700" endtime="20201115 22:11:46.722"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.696" endtime="20201115 22:11:46.722"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.321" endtime="20201115 22:11:46.722"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.319" endtime="20201115 22:11:46.723"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.318" endtime="20201115 22:11:46.723"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:46.725" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:46.734" endtime="20201115 22:11:46.761"></status>
</kw>
<msg timestamp="20201115 22:11:46.761" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:46.732" endtime="20201115 22:11:46.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:46.764" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:46.762" endtime="20201115 22:11:46.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:46.765" endtime="20201115 22:11:46.766"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.730" endtime="20201115 22:11:46.767"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.728" endtime="20201115 22:11:46.768"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:46.775" endtime="20201115 22:11:47.060"></status>
</kw>
<msg timestamp="20201115 22:11:47.063" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024537347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024544778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:46.772" endtime="20201115 22:11:47.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:47.072" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024537347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024544778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:47.065" endtime="20201115 22:11:47.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:47.073" endtime="20201115 22:11:47.075"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.770" endtime="20201115 22:11:47.075"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.768" endtime="20201115 22:11:47.076"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:47.080" level="INFO">${RESULT} = [{'time': 0.024544778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.430999999998716e-06, 'source_diff': 7.430999999998716e-06}, {'time': 0.024909208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:47.076" endtime="20201115 22:11:47.080"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:47.094" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:47.081" endtime="20201115 22:11:47.095"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:47.099" level="INFO">NAME: 00-overhead-3-remove</msg>
<status status="PASS" starttime="20201115 22:11:47.098" endtime="20201115 22:11:47.099"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:47.102" level="INFO">VALUE: [7.430999999998716e-06, 7.151999999999853e-06, 7.138999999999757e-06, 7.139000000003226e-06, 7.151999999999853e-06, 7.1669999999988965e-06, 7.1669999999988965e-06, 7.1529999999993266e-06, 7.1669999999988965e-06, 7.165999999999423e-06, 7.181000000001936e-06, 7.153000000002796e-06, 7.138999999999757e-06, 7.250000000000312e-06, 7.1529999999993266e-06, 7.165999999999423e-06, 7.1529999999993266e-06, 7.1669999999988965e-06, 7.138999999999757e-06, 7.153000000002796e-06, 7.152000000003322e-06, 7.138999999996287e-06, 7.167000000002366e-06, 7.166999999995427e-06, 7.167000000002366e-06, 7.153000000002796e-06, 7.138999999996287e-06, 7.166000000002892e-06, 7.165999999995953e-06, 7.165999999995953e-06, 7.167000000002366e-06, 7.153000000002796e-06, 7.1519999999963835e-06, 7.165999999995953e-06, 7.181000000001936e-06, 7.167000000002366e-06, 7.167000000002366e-06, 7.180999999994997e-06, 7.2230000000006456e-06, 7.167000000002366e-06, 7.181000000001936e-06, 7.153000000002796e-06, 7.2370000000002155e-06, 7.167000000002366e-06, 7.152000000003322e-06, 7.152999999995857e-06, 7.181000000001936e-06, 7.152999999995857e-06, 7.193999999995093e-06, 7.181000000001936e-06]</msg>
<status status="PASS" starttime="20201115 22:11:47.100" endtime="20201115 22:11:47.102"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.095" endtime="20201115 22:11:47.102"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:47.105" endtime="20201115 22:11:47.106"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:47.108" endtime="20201115 22:11:47.128"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.107" endtime="20201115 22:11:47.128"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.103" endtime="20201115 22:11:47.129"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.726" endtime="20201115 22:11:47.129"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.724" endtime="20201115 22:11:47.129"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.723" endtime="20201115 22:11:47.129"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:47.132" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:47.140" endtime="20201115 22:11:47.169"></status>
</kw>
<msg timestamp="20201115 22:11:47.169" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:47.139" endtime="20201115 22:11:47.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:47.172" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:47.171" endtime="20201115 22:11:47.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:47.173" endtime="20201115 22:11:47.175"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.136" endtime="20201115 22:11:47.175"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.134" endtime="20201115 22:11:47.176"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:47.183" endtime="20201115 22:11:47.469"></status>
</kw>
<msg timestamp="20201115 22:11:47.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024546194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024554208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:47.181" endtime="20201115 22:11:47.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:47.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024546194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024554208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:47.473" endtime="20201115 22:11:47.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:47.481" endtime="20201115 22:11:47.483"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.178" endtime="20201115 22:11:47.483"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.177" endtime="20201115 22:11:47.484"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:47.488" level="INFO">${RESULT} = [{'time': 0.024554208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.014000000000632e-06, 'source_diff': 8.014000000000632e-06}, {'time': 0.024952931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:47.484" endtime="20201115 22:11:47.488"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:47.501" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:47.489" endtime="20201115 22:11:47.501"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:47.506" level="INFO">NAME: 00-overhead-4-remove</msg>
<status status="PASS" starttime="20201115 22:11:47.505" endtime="20201115 22:11:47.506"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:47.508" level="INFO">VALUE: [8.014000000000632e-06, 7.737000000000716e-06, 7.722000000001672e-06, 7.709000000001576e-06, 7.721999999998203e-06, 7.707999999998633e-06, 7.722000000001672e-06, 7.723000000001146e-06, 7.709000000001576e-06, 7.651999999996884e-06, 7.708000000002102e-06, 7.721999999998203e-06, 7.721999999998203e-06, 7.736000000001242e-06, 7.721999999998203e-06, 7.722000000001672e-06, 7.722000000001672e-06, 7.722000000001672e-06, 7.736000000001242e-06, 7.764000000000382e-06, 7.723000000001146e-06, 7.722000000001672e-06, 7.750000000000812e-06, 7.723000000001146e-06, 7.777999999999952e-06, 7.764000000000382e-06, 7.722000000001672e-06, 7.722000000001672e-06, 7.695000000002006e-06, 7.722000000001672e-06, 7.736000000001242e-06, 7.722000000001672e-06, 7.722000000001672e-06, 7.694000000002532e-06, 7.750000000000812e-06, 7.708000000002102e-06, 7.652999999996357e-06, 7.777000000000478e-06, 7.736000000001242e-06, 7.707999999995163e-06, 7.750000000000812e-06, 7.736000000001242e-06, 7.723000000001146e-06, 7.722000000001672e-06, 7.723000000001146e-06, 7.723000000001146e-06, 7.707999999995163e-06, 7.76299999999397e-06, 7.736000000001242e-06, 7.695000000002006e-06]</msg>
<status status="PASS" starttime="20201115 22:11:47.507" endtime="20201115 22:11:47.509"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.502" endtime="20201115 22:11:47.509"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:47.511" endtime="20201115 22:11:47.513"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:47.515" endtime="20201115 22:11:47.534"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.513" endtime="20201115 22:11:47.535"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.510" endtime="20201115 22:11:47.535"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.132" endtime="20201115 22:11:47.536"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.131" endtime="20201115 22:11:47.536"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.130" endtime="20201115 22:11:47.536"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:47.538" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:47.547" endtime="20201115 22:11:47.578"></status>
</kw>
<msg timestamp="20201115 22:11:47.578" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:47.546" endtime="20201115 22:11:47.579"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:47.581" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:47.579" endtime="20201115 22:11:47.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:47.582" endtime="20201115 22:11:47.584"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.543" endtime="20201115 22:11:47.584"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.541" endtime="20201115 22:11:47.584"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:47.591" endtime="20201115 22:11:47.878"></status>
</kw>
<msg timestamp="20201115 22:11:47.881" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025162819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025171403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:47.589" endtime="20201115 22:11:47.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:47.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025162819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025171403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:47.882" endtime="20201115 22:11:47.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:47.891" endtime="20201115 22:11:47.892"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.587" endtime="20201115 22:11:47.893"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.585" endtime="20201115 22:11:47.893"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:47.897" level="INFO">${RESULT} = [{'time': 0.025171403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.583999999998981e-06, 'source_diff': 8.583999999998981e-06}, {'time': 0.025609931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:47.894" endtime="20201115 22:11:47.898"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:47.911" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:47.898" endtime="20201115 22:11:47.911"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:47.915" level="INFO">NAME: 00-overhead-5-remove</msg>
<status status="PASS" starttime="20201115 22:11:47.914" endtime="20201115 22:11:47.915"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:47.918" level="INFO">VALUE: [8.583999999998981e-06, 8.292000000000022e-06, 8.278000000000452e-06, 8.264000000000882e-06, 8.263000000001408e-06, 8.278000000000452e-06, 8.292000000000022e-06, 8.277000000000978e-06, 8.249999999997842e-06, 8.236000000001742e-06, 8.264000000000882e-06, 8.278000000000452e-06, 8.292000000000022e-06, 8.291000000000548e-06, 8.292000000000022e-06, 8.264000000000882e-06, 8.291000000000548e-06, 8.292000000000022e-06, 8.305999999999591e-06, 8.292000000000022e-06, 8.318999999999688e-06, 8.277000000000978e-06, 8.277000000000978e-06, 8.250000000001312e-06, 8.278000000000452e-06, 8.292000000000022e-06, 8.264000000000882e-06, 8.292000000000022e-06, 8.277000000000978e-06, 8.276999999994039e-06, 8.207999999995663e-06, 8.264000000000882e-06, 8.277999999993513e-06, 8.264000000000882e-06, 8.278000000000452e-06, 8.250000000001312e-06, 8.292000000000022e-06, 8.278000000000452e-06, 8.292000000000022e-06, 8.277999999993513e-06, 8.277999999993513e-06, 8.278000000000452e-06, 8.278000000000452e-06, 8.291000000000548e-06, 8.278000000000452e-06, 8.277999999993513e-06, 8.292000000000022e-06, 8.291000000000548e-06, 8.292000000000022e-06, 8.291000000000548e-06]</msg>
<status status="PASS" starttime="20201115 22:11:47.916" endtime="20201115 22:11:47.918"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.912" endtime="20201115 22:11:47.919"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:47.921" endtime="20201115 22:11:47.922"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:47.924" endtime="20201115 22:11:47.944"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.923" endtime="20201115 22:11:47.944"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.919" endtime="20201115 22:11:47.945"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.539" endtime="20201115 22:11:47.945"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.537" endtime="20201115 22:11:47.945"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.536" endtime="20201115 22:11:47.945"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:47.948" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:47.957" endtime="20201115 22:11:47.989"></status>
</kw>
<msg timestamp="20201115 22:11:47.989" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:47.955" endtime="20201115 22:11:47.989"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:47.992" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:47.990" endtime="20201115 22:11:47.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:47.993" endtime="20201115 22:11:47.994"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.953" endtime="20201115 22:11:47.995"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.951" endtime="20201115 22:11:47.995"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:48.002" endtime="20201115 22:11:48.288"></status>
</kw>
<msg timestamp="20201115 22:11:48.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025145958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025155069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:48.001" endtime="20201115 22:11:48.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:48.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025145958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025155069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:48.292" endtime="20201115 22:11:48.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:48.301" endtime="20201115 22:11:48.302"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.998" endtime="20201115 22:11:48.303"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.996" endtime="20201115 22:11:48.303"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:48.307" level="INFO">${RESULT} = [{'time': 0.025155069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.110999999999148e-06, 'source_diff': 9.110999999999148e-06}, {'time': 0.025617056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:48.304" endtime="20201115 22:11:48.308"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:48.321" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:48.308" endtime="20201115 22:11:48.321"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:48.325" level="INFO">NAME: 00-overhead-6-remove</msg>
<status status="PASS" starttime="20201115 22:11:48.324" endtime="20201115 22:11:48.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:48.328" level="INFO">VALUE: [9.110999999999148e-06, 8.819999999999661e-06, 8.832999999999758e-06, 8.860999999998898e-06, 8.889000000001507e-06, 8.833999999999231e-06, 8.820000000003131e-06, 8.818999999996718e-06, 8.860999999998898e-06, 8.832999999999758e-06, 8.860999999998898e-06, 8.846999999999328e-06, 8.846999999999328e-06, 8.833999999999231e-06, 8.846999999999328e-06, 8.847999999998801e-06, 8.832999999999758e-06, 8.847000000006267e-06, 8.847999999998801e-06, 8.888999999998037e-06, 8.846999999999328e-06, 8.832999999999758e-06, 8.833999999999231e-06, 8.819999999999661e-06, 8.819000000000188e-06, 8.847999999998801e-06, 8.860999999998898e-06, 8.860999999998898e-06, 8.846999999999328e-06, 8.832999999999758e-06, 8.819000000000188e-06, 8.832999999999758e-06, 8.860999999998898e-06, 8.83400000000617e-06, 8.860999999998898e-06, 8.875000000005406e-06, 8.846999999999328e-06, 8.846999999999328e-06, 8.846999999999328e-06, 8.846999999999328e-06, 8.832999999999758e-06, 8.819999999999661e-06, 8.846999999999328e-06, 8.819000000000188e-06, 8.846999999999328e-06, 8.860999999998898e-06, 8.832999999999758e-06, 8.833999999999231e-06, 8.861000000005836e-06, 8.861000000005836e-06]</msg>
<status status="PASS" starttime="20201115 22:11:48.326" endtime="20201115 22:11:48.328"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.322" endtime="20201115 22:11:48.329"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:48.331" endtime="20201115 22:11:48.333"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:48.335" endtime="20201115 22:11:48.355"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.333" endtime="20201115 22:11:48.355"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.330" endtime="20201115 22:11:48.356"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.949" endtime="20201115 22:11:48.356"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.947" endtime="20201115 22:11:48.356"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.946" endtime="20201115 22:11:48.357"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:48.359" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:48.368" endtime="20201115 22:11:48.402"></status>
</kw>
<msg timestamp="20201115 22:11:48.402" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:48.366" endtime="20201115 22:11:48.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:48.404" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:48.403" endtime="20201115 22:11:48.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:48.406" endtime="20201115 22:11:48.407"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.364" endtime="20201115 22:11:48.408"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.361" endtime="20201115 22:11:48.408"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:48.415" endtime="20201115 22:11:48.701"></status>
</kw>
<msg timestamp="20201115 22:11:48.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024992292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025002014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:48.413" endtime="20201115 22:11:48.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:48.712" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024992292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025002014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:48.705" endtime="20201115 22:11:48.712"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:48.713" endtime="20201115 22:11:48.715"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.411" endtime="20201115 22:11:48.715"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.409" endtime="20201115 22:11:48.715"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:48.720" level="INFO">${RESULT} = [{'time': 0.025002014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.722000000000203e-06, 'source_diff': 9.722000000000203e-06}, {'time': 0.025498333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:48.716" endtime="20201115 22:11:48.720"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:48.734" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:48.721" endtime="20201115 22:11:48.735"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:48.739" level="INFO">NAME: 00-overhead-7-remove</msg>
<status status="PASS" starttime="20201115 22:11:48.738" endtime="20201115 22:11:48.739"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:48.741" level="INFO">VALUE: [9.722000000000203e-06, 9.333000000000258e-06, 9.403000000001577e-06, 9.402999999998107e-06, 9.387999999999064e-06, 9.402999999998107e-06, 9.388999999998537e-06, 9.388999999998537e-06, 9.333999999999731e-06, 9.388000000002533e-06, 9.389000000002007e-06, 9.417000000001147e-06, 9.416000000001673e-06, 9.417000000004616e-06, 9.403000000005046e-06, 9.402999999998107e-06, 9.416999999997677e-06, 9.416999999997677e-06, 9.416000000005142e-06, 9.445000000003756e-06, 9.388999999998537e-06, 9.402999999998107e-06, 9.388999999998537e-06, 9.401999999998634e-06, 9.417000000004616e-06, 9.388999999998537e-06, 9.486000000002992e-06, 9.416999999997677e-06, 9.402999999998107e-06, 9.389000000005476e-06, 9.388999999998537e-06, 9.374999999998967e-06, 9.333000000000258e-06, 9.403000000005046e-06, 9.430999999997247e-06, 9.402999999998107e-06, 9.401999999998634e-06, 9.403000000005046e-06, 9.401999999998634e-06, 9.401999999998634e-06, 9.402999999998107e-06, 9.402999999998107e-06, 9.416999999997677e-06, 9.416999999997677e-06, 9.402999999998107e-06, 9.402999999998107e-06, 9.402999999998107e-06, 9.416999999997677e-06, 9.389000000005476e-06, 9.374999999998967e-06]</msg>
<status status="PASS" starttime="20201115 22:11:48.740" endtime="20201115 22:11:48.742"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.735" endtime="20201115 22:11:48.743"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:48.745" endtime="20201115 22:11:48.746"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:48.749" endtime="20201115 22:11:48.768"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.747" endtime="20201115 22:11:48.769"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.743" endtime="20201115 22:11:48.769"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.359" endtime="20201115 22:11:48.769"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.358" endtime="20201115 22:11:48.770"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.357" endtime="20201115 22:11:48.770"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:48.772" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:48.781" endtime="20201115 22:11:48.817"></status>
</kw>
<msg timestamp="20201115 22:11:48.817" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:48.779" endtime="20201115 22:11:48.817"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:48.820" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:48.818" endtime="20201115 22:11:48.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:48.821" endtime="20201115 22:11:48.822"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.777" endtime="20201115 22:11:48.823"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.775" endtime="20201115 22:11:48.823"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:48.830" endtime="20201115 22:11:49.116"></status>
</kw>
<msg timestamp="20201115 22:11:49.119" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024652306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024662583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:48.828" endtime="20201115 22:11:49.120"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:49.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024652306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024662583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:49.120" endtime="20201115 22:11:49.128"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:49.128" endtime="20201115 22:11:49.130"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.826" endtime="20201115 22:11:49.131"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.824" endtime="20201115 22:11:49.131"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:49.135" level="INFO">${RESULT} = [{'time': 0.024662583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0276999999999509e-05, 'source_diff': 1.0276999999999509e-05}, {'time': 0.025212861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:49.132" endtime="20201115 22:11:49.135"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:49.149" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:49.136" endtime="20201115 22:11:49.149"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:49.153" level="INFO">NAME: 00-overhead-8-remove</msg>
<status status="PASS" starttime="20201115 22:11:49.152" endtime="20201115 22:11:49.154"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:49.156" level="INFO">VALUE: [1.0276999999999509e-05, 9.958000000000883e-06, 9.986000000000023e-06, 9.972000000000453e-06, 9.958999999996887e-06, 9.972000000000453e-06, 9.972999999999926e-06, 9.958000000000883e-06, 1.0013999999999162e-05, 9.957999999997413e-06, 9.916000000002173e-06, 9.957999999997413e-06, 9.958000000000883e-06, 9.959000000003826e-06, 1.0000000000003062e-05, 9.972999999996457e-06, 9.959000000003826e-06, 9.930999999997747e-06, 9.957999999997413e-06, 9.957999999997413e-06, 1.0000000000003062e-05, 9.958999999996887e-06, 9.958999999996887e-06, 9.959000000003826e-06, 9.959000000003826e-06, 9.972000000003922e-06, 9.972000000003922e-06, 1.0056000000001342e-05, 9.944999999997317e-06, 9.971999999996983e-06, 9.972999999996457e-06, 1.0028000000002202e-05, 9.943999999997843e-06, 1.0000000000003062e-05, 9.972000000003922e-06, 9.957999999997413e-06, 9.944999999997317e-06, 9.971999999996983e-06, 9.971999999996983e-06, 9.971999999996983e-06, 9.958999999996887e-06, 9.944999999997317e-06, 9.986000000003492e-06, 9.958999999996887e-06, 9.958000000004352e-06, 9.959000000003826e-06, 9.958000000004352e-06, 9.972000000003922e-06, 9.971999999996983e-06, 9.973000000003396e-06]</msg>
<status status="PASS" starttime="20201115 22:11:49.155" endtime="20201115 22:11:49.156"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.150" endtime="20201115 22:11:49.157"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:49.159" endtime="20201115 22:11:49.160"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:49.163" endtime="20201115 22:11:49.182"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.161" endtime="20201115 22:11:49.183"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.157" endtime="20201115 22:11:49.183"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.773" endtime="20201115 22:11:49.183"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.771" endtime="20201115 22:11:49.184"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.770" endtime="20201115 22:11:49.184"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:49.186" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:49.195" endtime="20201115 22:11:49.233"></status>
</kw>
<msg timestamp="20201115 22:11:49.233" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:49.193" endtime="20201115 22:11:49.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:49.236" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:49.234" endtime="20201115 22:11:49.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:49.237" endtime="20201115 22:11:49.238"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.191" endtime="20201115 22:11:49.239"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.189" endtime="20201115 22:11:49.239"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:49.246" endtime="20201115 22:11:49.533"></status>
</kw>
<msg timestamp="20201115 22:11:49.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024809194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024820042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:49.244" endtime="20201115 22:11:49.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:49.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024809194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024820042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:49.537" endtime="20201115 22:11:49.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:49.545" endtime="20201115 22:11:49.547"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.242" endtime="20201115 22:11:49.547"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.240" endtime="20201115 22:11:49.548"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:49.552" level="INFO">${RESULT} = [{'time': 0.024820042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0848000000000801e-05, 'source_diff': 1.0848000000000801e-05}, {'time': 0.025405833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:49.549" endtime="20201115 22:11:49.552"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:49.565" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:49.553" endtime="20201115 22:11:49.566"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:49.570" level="INFO">NAME: 00-overhead-9-remove</msg>
<status status="PASS" starttime="20201115 22:11:49.569" endtime="20201115 22:11:49.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:49.572" level="INFO">VALUE: [1.0848000000000801e-05, 1.0486000000000523e-05, 1.0570000000001412e-05, 1.0554999999998899e-05, 1.0527999999999232e-05, 1.0569000000001938e-05, 1.0527999999999232e-05, 1.0528000000002702e-05, 1.0500000000000093e-05, 1.0527999999999232e-05, 1.0513999999999663e-05, 1.0527999999999232e-05, 1.0542000000002272e-05, 1.054099999999586e-05, 1.0527999999995763e-05, 1.0597000000001078e-05, 1.0528000000002702e-05, 1.0514000000003132e-05, 1.052699999999629e-05, 1.0513999999996193e-05, 1.0528000000002702e-05, 1.0527999999995763e-05, 1.0528000000002702e-05, 1.0541000000002798e-05, 1.0528000000002702e-05, 1.0528000000002702e-05, 1.0570000000001412e-05, 1.0528000000002702e-05, 1.0528000000002702e-05, 1.0485999999997053e-05, 1.0500000000003562e-05, 1.0514000000003132e-05, 1.0541999999995333e-05, 1.0514000000003132e-05, 1.0513999999996193e-05, 1.0513999999996193e-05, 1.0513999999996193e-05, 1.0513999999996193e-05, 1.0514000000003132e-05, 1.0499999999996623e-05, 1.0541999999995333e-05, 1.0513000000003658e-05, 1.0541999999995333e-05, 1.052699999999629e-05, 1.0541000000002798e-05, 1.0527999999995763e-05, 1.0485999999997053e-05, 1.0542000000002272e-05, 1.0528000000002702e-05, 1.0528000000002702e-05]</msg>
<status status="PASS" starttime="20201115 22:11:49.571" endtime="20201115 22:11:49.573"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.566" endtime="20201115 22:11:49.573"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:49.576" endtime="20201115 22:11:49.577"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:49.579" endtime="20201115 22:11:49.599"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.577" endtime="20201115 22:11:49.599"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.574" endtime="20201115 22:11:49.600"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.187" endtime="20201115 22:11:49.600"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.185" endtime="20201115 22:11:49.600"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.184" endtime="20201115 22:11:49.600"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:49.603" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:49.611" endtime="20201115 22:11:49.652"></status>
</kw>
<msg timestamp="20201115 22:11:49.652" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:49.610" endtime="20201115 22:11:49.652"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:49.655" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:49.653" endtime="20201115 22:11:49.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:49.656" endtime="20201115 22:11:49.657"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.607" endtime="20201115 22:11:49.658"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.605" endtime="20201115 22:11:49.658"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:49.665" endtime="20201115 22:11:49.953"></status>
</kw>
<msg timestamp="20201115 22:11:49.956" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024964722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024976125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:49.664" endtime="20201115 22:11:49.956"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:49.964" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024964722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024976125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:49.957" endtime="20201115 22:11:49.965"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:49.966" endtime="20201115 22:11:49.967"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.661" endtime="20201115 22:11:49.968"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.659" endtime="20201115 22:11:49.968"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:49.972" level="INFO">${RESULT} = [{'time': 0.024976125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1402999999996638e-05, 'source_diff': 1.1402999999996638e-05}, {'time': 0.025601431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:49.969" endtime="20201115 22:11:49.973"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:49.986" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:49.973" endtime="20201115 22:11:49.986"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:49.990" level="INFO">NAME: 00-overhead-10-remove</msg>
<status status="PASS" starttime="20201115 22:11:49.989" endtime="20201115 22:11:49.991"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:49.993" level="INFO">VALUE: [1.1402999999996638e-05, 1.1098000000001051e-05, 1.1083000000002008e-05, 1.1082999999998538e-05, 1.1082999999998538e-05, 1.1084000000001482e-05, 1.1084000000001482e-05, 1.1098000000001051e-05, 1.1082999999998538e-05, 1.1068999999998969e-05, 1.1125000000000718e-05, 1.1083000000002008e-05, 1.1068999999995499e-05, 1.1097000000001578e-05, 1.1139000000000288e-05, 1.1097000000001578e-05, 1.1098000000001051e-05, 1.1098000000001051e-05, 1.1084000000001482e-05, 1.1084000000001482e-05, 1.1070000000001912e-05, 1.1027999999996263e-05, 1.1097000000001578e-05, 1.1056000000002342e-05, 1.1041999999995833e-05, 1.1152999999999857e-05, 1.1070000000001912e-05, 1.1152999999999857e-05, 1.1083000000002008e-05, 1.1112000000000621e-05, 1.1069999999994973e-05, 1.1069000000002438e-05, 1.1125000000000718e-05, 1.1083000000002008e-05, 1.1083999999994543e-05, 1.1083000000002008e-05, 1.105499999999593e-05, 1.1083000000002008e-05, 1.1096999999994639e-05, 1.1083000000002008e-05, 1.1166999999999427e-05, 1.1070000000001912e-05, 1.1112000000000621e-05, 1.1097000000001578e-05, 1.1096999999994639e-05, 1.1083000000002008e-05, 1.1152999999999857e-05, 1.105499999999593e-05, 1.1014000000003632e-05, 1.1084000000001482e-05]</msg>
<status status="PASS" starttime="20201115 22:11:49.991" endtime="20201115 22:11:49.993"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.987" endtime="20201115 22:11:49.994"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:49.996" endtime="20201115 22:11:49.997"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:50.000" endtime="20201115 22:11:50.019"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.998" endtime="20201115 22:11:50.020"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.994" endtime="20201115 22:11:50.020"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.603" endtime="20201115 22:11:50.021"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.601" endtime="20201115 22:11:50.021"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.601" endtime="20201115 22:11:50.021"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:50.023" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:50.032" endtime="20201115 22:11:50.075"></status>
</kw>
<msg timestamp="20201115 22:11:50.075" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:50.031" endtime="20201115 22:11:50.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:50.078" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:50.076" endtime="20201115 22:11:50.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:50.079" endtime="20201115 22:11:50.081"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.028" endtime="20201115 22:11:50.081"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.026" endtime="20201115 22:11:50.082"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:50.088" endtime="20201115 22:11:50.375"></status>
</kw>
<msg timestamp="20201115 22:11:50.378" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024955056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024966986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:50.087" endtime="20201115 22:11:50.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:50.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024955056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024966986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:50.380" endtime="20201115 22:11:50.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:50.388" endtime="20201115 22:11:50.389"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.084" endtime="20201115 22:11:50.390"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.082" endtime="20201115 22:11:50.390"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:50.395" level="INFO">${RESULT} = [{'time': 0.024966986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1930000000000274e-05, 'source_diff': 1.1930000000000274e-05}, {'time': 0.025643819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:50.391" endtime="20201115 22:11:50.395"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:50.409" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:50.396" endtime="20201115 22:11:50.410"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:50.414" level="INFO">NAME: 00-overhead-11-remove</msg>
<status status="PASS" starttime="20201115 22:11:50.413" endtime="20201115 22:11:50.414"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:50.416" level="INFO">VALUE: [1.1930000000000274e-05, 1.1652000000000884e-05, 1.1624999999997748e-05, 1.1666999999999927e-05, 1.1652000000000884e-05, 1.1652000000000884e-05, 1.1653000000000358e-05, 1.1639000000000788e-05, 1.1653000000000358e-05, 1.1639000000000788e-05, 1.1624999999994279e-05, 1.1638999999993849e-05, 1.1610999999994709e-05, 1.1638999999993849e-05, 1.1653000000000358e-05, 1.1666000000000454e-05, 1.1666999999999927e-05, 1.1639000000000788e-05, 1.1653000000000358e-05, 1.1638000000001314e-05, 1.1639000000000788e-05, 1.1638999999993849e-05, 1.1652000000000884e-05, 1.1707999999999164e-05, 1.1639000000000788e-05, 1.1666999999999927e-05, 1.1639000000000788e-05, 1.1652000000000884e-05, 1.1666000000000454e-05, 1.1639000000000788e-05, 1.1651999999993945e-05, 1.1639000000000788e-05, 1.1666999999999927e-05, 1.1639000000000788e-05, 1.1611000000001648e-05, 1.1653000000000358e-05, 1.1653000000000358e-05, 1.1639000000000788e-05, 1.1597000000002078e-05, 1.1653000000000358e-05, 1.1653000000000358e-05, 1.1639000000000788e-05, 1.1639000000000788e-05, 1.1652000000000884e-05, 1.1638000000001314e-05, 1.1653000000000358e-05, 1.1653000000000358e-05, 1.1625000000001218e-05, 1.1624999999994279e-05, 1.1569999999995473e-05]</msg>
<status status="PASS" starttime="20201115 22:11:50.415" endtime="20201115 22:11:50.417"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.410" endtime="20201115 22:11:50.417"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:50.420" endtime="20201115 22:11:50.421"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:50.423" endtime="20201115 22:11:50.443"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.422" endtime="20201115 22:11:50.443"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.418" endtime="20201115 22:11:50.444"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.024" endtime="20201115 22:11:50.444"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.022" endtime="20201115 22:11:50.444"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.021" endtime="20201115 22:11:50.444"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:50.447" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:50.460" endtime="20201115 22:11:50.505"></status>
</kw>
<msg timestamp="20201115 22:11:50.505" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:50.458" endtime="20201115 22:11:50.505"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:50.508" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:50.506" endtime="20201115 22:11:50.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:50.509" endtime="20201115 22:11:50.510"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.455" endtime="20201115 22:11:50.511"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.453" endtime="20201115 22:11:50.511"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:50.518" endtime="20201115 22:11:50.805"></status>
</kw>
<msg timestamp="20201115 22:11:50.808" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029257389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029269931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:50.516" endtime="20201115 22:11:50.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:50.816" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029257389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029269931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:50.809" endtime="20201115 22:11:50.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:50.817" endtime="20201115 22:11:50.819"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.514" endtime="20201115 22:11:50.820"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.512" endtime="20201115 22:11:50.820"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:50.824" level="INFO">${RESULT} = [{'time': 0.029269931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2541999999997333e-05, 'source_diff': 1.2541999999997333e-05}, {'time': 0.029997264, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:50.821" endtime="20201115 22:11:50.824"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:50.837" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:50.825" endtime="20201115 22:11:50.838"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:50.842" level="INFO">NAME: 00-overhead-12-remove</msg>
<status status="PASS" starttime="20201115 22:11:50.841" endtime="20201115 22:11:50.842"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:50.845" level="INFO">VALUE: [1.2541999999997333e-05, 1.2207999999999664e-05, 1.2194000000000094e-05, 1.2221999999999233e-05, 1.2180000000000524e-05, 1.2207999999999664e-05, 1.2167000000000427e-05, 1.2249999999998373e-05, 1.2194999999999567e-05, 1.2221999999999233e-05, 1.2208999999999137e-05, 1.2208999999999137e-05, 1.2194999999999567e-05, 1.2194000000000094e-05, 1.2249999999998373e-05, 1.2180999999999997e-05, 1.2221999999999233e-05, 1.2207999999999664e-05, 1.2207999999999664e-05, 1.2221999999999233e-05, 1.2207999999999664e-05, 1.2263999999997943e-05, 1.2180000000000524e-05, 1.2249999999998373e-05, 1.2207999999999664e-05, 1.2207999999999664e-05, 1.2221999999999233e-05, 1.2180999999999997e-05, 1.2125000000001718e-05, 1.2264000000004882e-05, 1.2194999999999567e-05, 1.2125000000001718e-05, 1.2167000000000427e-05, 1.2221999999999233e-05, 1.2152999999993919e-05, 1.2207999999999664e-05, 1.2194000000000094e-05, 1.2194999999999567e-05, 1.2194999999999567e-05, 1.2138999999994349e-05, 1.227699999999804e-05, 1.2194000000000094e-05, 1.2207999999999664e-05, 1.2207999999999664e-05, 1.2221999999999233e-05, 1.2235999999998803e-05, 1.2208999999999137e-05, 1.2180000000000524e-05, 1.2180000000000524e-05, 1.2180999999999997e-05]</msg>
<status status="PASS" starttime="20201115 22:11:50.843" endtime="20201115 22:11:50.845"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.838" endtime="20201115 22:11:50.845"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:50.848" endtime="20201115 22:11:50.849"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:50.852" endtime="20201115 22:11:50.871"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.850" endtime="20201115 22:11:50.872"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.846" endtime="20201115 22:11:50.872"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.447" endtime="20201115 22:11:50.873"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.446" endtime="20201115 22:11:50.873"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.445" endtime="20201115 22:11:50.873"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:50.875" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:50.884" endtime="20201115 22:11:50.932"></status>
</kw>
<msg timestamp="20201115 22:11:50.932" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:50.882" endtime="20201115 22:11:50.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:50.935" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:50.933" endtime="20201115 22:11:50.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:50.936" endtime="20201115 22:11:50.937"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.880" endtime="20201115 22:11:50.938"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.878" endtime="20201115 22:11:50.938"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:50.945" endtime="20201115 22:11:51.232"></status>
</kw>
<msg timestamp="20201115 22:11:51.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025067597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025080653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:50.943" endtime="20201115 22:11:51.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:51.244" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025067597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025080653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:51.237" endtime="20201115 22:11:51.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:51.245" endtime="20201115 22:11:51.246"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.941" endtime="20201115 22:11:51.247"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.939" endtime="20201115 22:11:51.247"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:51.252" level="INFO">${RESULT} = [{'time': 0.025080653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3056000000000872e-05, 'source_diff': 1.3056000000000872e-05}, {'time': 0.025862181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:51.248" endtime="20201115 22:11:51.252"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:51.265" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:51.253" endtime="20201115 22:11:51.265"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:51.270" level="INFO">NAME: 00-overhead-13-remove</msg>
<status status="PASS" starttime="20201115 22:11:51.268" endtime="20201115 22:11:51.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:51.272" level="INFO">VALUE: [1.3056000000000872e-05, 1.2737000000002247e-05, 1.2764000000001913e-05, 1.2763999999998443e-05, 1.276299999999897e-05, 1.2763999999998443e-05, 1.2750000000002343e-05, 1.2763999999998443e-05, 1.2749999999998873e-05, 1.2749999999998873e-05, 1.2763999999998443e-05, 1.2750000000005812e-05, 1.2763999999998443e-05, 1.2764000000005382e-05, 1.2777999999998013e-05, 1.2749999999998873e-05, 1.2749999999998873e-05, 1.2777999999998013e-05, 1.2749999999998873e-05, 1.2777999999998013e-05, 1.2749999999998873e-05, 1.2750000000005812e-05, 1.2763999999998443e-05, 1.2763999999998443e-05, 1.276299999999897e-05, 1.279099999999811e-05, 1.2763999999998443e-05, 1.276299999999897e-05, 1.2763999999998443e-05, 1.2763999999998443e-05, 1.2749999999998873e-05, 1.2749999999998873e-05, 1.2791999999997583e-05, 1.277699999999854e-05, 1.2763999999998443e-05, 1.2763999999998443e-05, 1.2721999999999734e-05, 1.2763999999998443e-05, 1.2763999999998443e-05, 1.2764000000005382e-05, 1.2749999999998873e-05, 1.2750000000005812e-05, 1.2777999999998013e-05, 1.2708000000000164e-05, 1.2749999999998873e-05, 1.2763999999998443e-05, 1.2763000000005909e-05, 1.2791999999997583e-05, 1.2749999999998873e-05, 1.2750000000005812e-05]</msg>
<status status="PASS" starttime="20201115 22:11:51.271" endtime="20201115 22:11:51.273"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.266" endtime="20201115 22:11:51.273"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:51.276" endtime="20201115 22:11:51.277"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:51.279" endtime="20201115 22:11:51.299"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.278" endtime="20201115 22:11:51.299"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.274" endtime="20201115 22:11:51.300"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.876" endtime="20201115 22:11:51.300"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.874" endtime="20201115 22:11:51.300"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.873" endtime="20201115 22:11:51.301"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:51.303" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:51.312" endtime="20201115 22:11:51.362"></status>
</kw>
<msg timestamp="20201115 22:11:51.362" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:51.310" endtime="20201115 22:11:51.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:51.365" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:51.364" endtime="20201115 22:11:51.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:51.366" endtime="20201115 22:11:51.369"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.308" endtime="20201115 22:11:51.370"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.305" endtime="20201115 22:11:51.370"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:51.377" endtime="20201115 22:11:51.666"></status>
</kw>
<msg timestamp="20201115 22:11:51.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025389222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025402861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:51.376" endtime="20201115 22:11:51.669"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:51.677" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025389222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025402861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:51.670" endtime="20201115 22:11:51.677"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:51.678" endtime="20201115 22:11:51.680"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.373" endtime="20201115 22:11:51.680"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.371" endtime="20201115 22:11:51.681"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:51.685" level="INFO">${RESULT} = [{'time': 0.025402861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3638999999999318e-05, 'source_diff': 1.3638999999999318e-05}, {'time': 0.026243806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:51.681" endtime="20201115 22:11:51.685"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:51.698" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:51.686" endtime="20201115 22:11:51.698"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:51.703" level="INFO">NAME: 00-overhead-14-remove</msg>
<status status="PASS" starttime="20201115 22:11:51.702" endtime="20201115 22:11:51.703"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:51.706" level="INFO">VALUE: [1.3638999999999318e-05, 1.3334000000000262e-05, 1.3333000000000789e-05, 1.3320000000000692e-05, 1.3333000000000789e-05, 1.331899999999775e-05, 1.3334000000000262e-05, 1.3346999999996889e-05, 1.3375000000002968e-05, 1.3319000000004688e-05, 1.3333999999996793e-05, 1.3319999999997223e-05, 1.3333000000004258e-05, 1.3388999999995599e-05, 1.3305999999997653e-05, 1.331899999999775e-05, 1.330499999999818e-05, 1.333299999999732e-05, 1.331899999999775e-05, 1.3292000000005022e-05, 1.331899999999775e-05, 1.331899999999775e-05, 1.3306000000004592e-05, 1.330499999999818e-05, 1.331899999999775e-05, 1.3320000000004162e-05, 1.3319999999997223e-05, 1.3320000000004162e-05, 1.3333999999996793e-05, 1.3305999999997653e-05, 1.3305999999997653e-05, 1.3291999999998083e-05, 1.3305999999997653e-05, 1.331899999999775e-05, 1.3334000000003732e-05, 1.330499999999818e-05, 1.331899999999775e-05, 1.3375000000002968e-05, 1.3305999999997653e-05, 1.3305999999997653e-05, 1.3334000000003732e-05, 1.3306000000004592e-05, 1.3305000000005118e-05, 1.3334000000003732e-05, 1.330499999999818e-05, 1.3346999999996889e-05, 1.331899999999775e-05, 1.3306000000004592e-05, 1.333299999999038e-05, 1.330499999999124e-05]</msg>
<status status="PASS" starttime="20201115 22:11:51.704" endtime="20201115 22:11:51.706"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.699" endtime="20201115 22:11:51.707"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:51.709" endtime="20201115 22:11:51.710"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:51.712" endtime="20201115 22:11:51.732"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.711" endtime="20201115 22:11:51.733"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.707" endtime="20201115 22:11:51.733"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.303" endtime="20201115 22:11:51.733"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.302" endtime="20201115 22:11:51.734"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.301" endtime="20201115 22:11:51.734"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:51.736" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:51.745" endtime="20201115 22:11:51.798"></status>
</kw>
<msg timestamp="20201115 22:11:51.798" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:51.743" endtime="20201115 22:11:51.799"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:51.801" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:51.799" endtime="20201115 22:11:51.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:51.802" endtime="20201115 22:11:51.804"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.741" endtime="20201115 22:11:51.804"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.739" endtime="20201115 22:11:51.805"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:51.811" endtime="20201115 22:11:52.098"></status>
</kw>
<msg timestamp="20201115 22:11:52.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025263681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025277903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:51.810" endtime="20201115 22:11:52.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:52.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025263681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025277903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:52.102" endtime="20201115 22:11:52.109"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:52.110" endtime="20201115 22:11:52.112"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.807" endtime="20201115 22:11:52.112"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.805" endtime="20201115 22:11:52.113"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:52.117" level="INFO">${RESULT} = [{'time': 0.025277903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4222000000001234e-05, 'source_diff': 1.4222000000001234e-05}, {'time': 0.026175111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:52.113" endtime="20201115 22:11:52.117"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:52.132" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:52.118" endtime="20201115 22:11:52.132"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:52.137" level="INFO">NAME: 00-overhead-15-remove</msg>
<status status="PASS" starttime="20201115 22:11:52.135" endtime="20201115 22:11:52.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:52.139" level="INFO">VALUE: [1.4222000000001234e-05, 1.3888999999999568e-05, 1.3903000000002608e-05, 1.3888999999999568e-05, 1.3874999999999998e-05, 1.3916999999998708e-05, 1.3889000000003038e-05, 1.3889000000003038e-05, 1.3847999999996863e-05, 1.384699999999739e-05, 1.3887999999996625e-05, 1.3874999999996529e-05, 1.3860999999996959e-05, 1.3875000000003468e-05, 1.3820000000004662e-05, 1.3902999999995669e-05, 1.3889000000003038e-05, 1.3874999999996529e-05, 1.3875000000003468e-05, 1.3875000000003468e-05, 1.3861000000003898e-05, 1.3889000000003038e-05, 1.3888999999996099e-05, 1.3861000000003898e-05, 1.3944000000001844e-05, 1.3944000000001844e-05, 1.3860999999996959e-05, 1.3889000000003038e-05, 1.3916000000002704e-05, 1.3888999999996099e-05, 1.3945000000001317e-05, 1.3931000000001748e-05, 1.3875000000003468e-05, 1.3847999999996863e-05, 1.3889000000003038e-05, 1.3902999999995669e-05, 1.3889000000003038e-05, 1.3902999999995669e-05, 1.3887999999996625e-05, 1.3874999999996529e-05, 1.3902999999995669e-05, 1.3888999999996099e-05, 1.3861000000003898e-05, 1.3888000000003564e-05, 1.3861000000003898e-05, 1.3791999999998583e-05, 1.3945000000001317e-05, 1.3889000000003038e-05, 1.3874999999996529e-05, 1.386099999999002e-05]</msg>
<status status="PASS" starttime="20201115 22:11:52.138" endtime="20201115 22:11:52.140"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.133" endtime="20201115 22:11:52.140"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:52.142" endtime="20201115 22:11:52.144"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:52.146" endtime="20201115 22:11:52.165"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.144" endtime="20201115 22:11:52.166"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.141" endtime="20201115 22:11:52.166"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.737" endtime="20201115 22:11:52.167"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.735" endtime="20201115 22:11:52.167"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.734" endtime="20201115 22:11:52.167"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:52.169" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:52.178" endtime="20201115 22:11:52.234"></status>
</kw>
<msg timestamp="20201115 22:11:52.234" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:52.176" endtime="20201115 22:11:52.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:52.237" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:52.235" endtime="20201115 22:11:52.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:52.238" endtime="20201115 22:11:52.240"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.174" endtime="20201115 22:11:52.240"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.172" endtime="20201115 22:11:52.241"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:52.247" endtime="20201115 22:11:52.534"></status>
</kw>
<msg timestamp="20201115 22:11:52.537" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025372986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025387736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:52.245" endtime="20201115 22:11:52.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:52.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025372986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025387736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:52.538" endtime="20201115 22:11:52.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:52.547" endtime="20201115 22:11:52.548"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.243" endtime="20201115 22:11:52.549"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.241" endtime="20201115 22:11:52.549"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:52.554" level="INFO">${RESULT} = [{'time': 0.025387736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4750000000000874e-05, 'source_diff': 1.4750000000000874e-05}, {'time': 0.026329389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:52.550" endtime="20201115 22:11:52.554"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:52.567" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:52.555" endtime="20201115 22:11:52.567"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:52.572" level="INFO">NAME: 00-overhead-16-remove</msg>
<status status="PASS" starttime="20201115 22:11:52.571" endtime="20201115 22:11:52.572"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:52.574" level="INFO">VALUE: [1.4750000000000874e-05, 1.4458000000001914e-05, 1.4445000000001817e-05, 1.4430999999998778e-05, 1.4430999999998778e-05, 1.4459000000001387e-05, 1.4443999999998874e-05, 1.4431000000002248e-05, 1.4445000000001817e-05, 1.4431000000002248e-05, 1.4445000000001817e-05, 1.4444000000002344e-05, 1.4444000000002344e-05, 1.4458999999994449e-05, 1.4430000000002774e-05, 1.4431000000002248e-05, 1.4458000000001914e-05, 1.4458000000001914e-05, 1.4417000000002678e-05, 1.4430999999995309e-05, 1.4472000000001484e-05, 1.4472000000001484e-05, 1.4443999999995405e-05, 1.4431000000002248e-05, 1.4458000000001914e-05, 1.4472000000001484e-05, 1.4444000000002344e-05, 1.4458000000001914e-05, 1.4473000000000957e-05, 1.4459000000001387e-05, 1.4444000000002344e-05, 1.4444000000002344e-05, 1.4472000000001484e-05, 1.4444999999994879e-05, 1.4375000000003968e-05, 1.4459000000001387e-05, 1.4445000000001817e-05, 1.4444999999994879e-05, 1.4457999999994975e-05, 1.4444000000002344e-05, 1.4445000000001817e-05, 1.4374999999997029e-05, 1.4458000000008853e-05, 1.4457999999994975e-05, 1.4430000000009713e-05, 1.4445000000001817e-05, 1.4444000000002344e-05, 1.4416000000003204e-05, 1.4389000000003538e-05, 1.4445000000001817e-05]</msg>
<status status="PASS" starttime="20201115 22:11:52.573" endtime="20201115 22:11:52.575"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.568" endtime="20201115 22:11:52.575"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:52.577" endtime="20201115 22:11:52.579"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:52.581" endtime="20201115 22:11:52.600"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.579" endtime="20201115 22:11:52.601"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.576" endtime="20201115 22:11:52.601"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.170" endtime="20201115 22:11:52.601"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.168" endtime="20201115 22:11:52.602"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.167" endtime="20201115 22:11:52.602"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:52.604" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:52.613" endtime="20201115 22:11:52.672"></status>
</kw>
<msg timestamp="20201115 22:11:52.673" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:52.611" endtime="20201115 22:11:52.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:52.675" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:52.674" endtime="20201115 22:11:52.675"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:52.676" endtime="20201115 22:11:52.678"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.609" endtime="20201115 22:11:52.678"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.607" endtime="20201115 22:11:52.679"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:52.686" endtime="20201115 22:11:52.989"></status>
</kw>
<msg timestamp="20201115 22:11:52.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025251792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025267125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:52.684" endtime="20201115 22:11:52.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:53.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025251792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025267125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:52.998" endtime="20201115 22:11:53.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:53.013" endtime="20201115 22:11:53.014"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.681" endtime="20201115 22:11:53.015"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.679" endtime="20201115 22:11:53.015"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:53.020" level="INFO">${RESULT} = [{'time': 0.025267125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.533300000000279e-05, 'source_diff': 1.533300000000279e-05}, {'time': 0.026273431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:53.016" endtime="20201115 22:11:53.020"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:53.033" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:53.021" endtime="20201115 22:11:53.033"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:53.037" level="INFO">NAME: 00-overhead-17-remove</msg>
<status status="PASS" starttime="20201115 22:11:53.036" endtime="20201115 22:11:53.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:53.040" level="INFO">VALUE: [1.533300000000279e-05, 1.5014000000000693e-05, 1.5013999999997224e-05, 1.501299999999775e-05, 1.5014000000000693e-05, 1.501299999999775e-05, 1.5028000000000263e-05, 1.5000000000001124e-05, 1.5000000000001124e-05, 1.5014000000000693e-05, 1.4986000000001554e-05, 1.5014000000000693e-05, 1.5014000000000693e-05, 1.5000000000001124e-05, 1.4931000000002748e-05, 1.5028000000000263e-05, 1.4986000000001554e-05, 1.5055999999999403e-05, 1.5055999999999403e-05, 1.4971999999995045e-05, 1.4916999999996239e-05, 1.501300000000122e-05, 1.4986000000001554e-05, 1.5000000000001124e-05, 1.5014000000000693e-05, 1.5000000000001124e-05, 1.5014000000000693e-05, 1.5014000000000693e-05, 1.508299999999907e-05, 1.5069999999998973e-05, 1.4986000000001554e-05, 1.502700000000079e-05, 1.4959000000001887e-05, 1.5014000000000693e-05, 1.4999999999994185e-05, 1.5000000000001124e-05, 1.501300000000122e-05, 1.5041999999992894e-05, 1.5000000000001124e-05, 1.4973000000001457e-05, 1.5000000000001124e-05, 1.5028000000000263e-05, 1.4985999999994615e-05, 1.5000000000001124e-05, 1.5000000000001124e-05, 1.5013999999993755e-05, 1.5028000000000263e-05, 1.5000000000001124e-05, 1.5000000000001124e-05, 1.5000000000001124e-05]</msg>
<status status="PASS" starttime="20201115 22:11:53.039" endtime="20201115 22:11:53.040"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.034" endtime="20201115 22:11:53.041"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:53.043" endtime="20201115 22:11:53.044"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:53.047" endtime="20201115 22:11:53.066"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.045" endtime="20201115 22:11:53.067"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.041" endtime="20201115 22:11:53.067"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.605" endtime="20201115 22:11:53.068"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.603" endtime="20201115 22:11:53.068"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.602" endtime="20201115 22:11:53.068"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:53.070" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:53.079" endtime="20201115 22:11:53.141"></status>
</kw>
<msg timestamp="20201115 22:11:53.142" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:53.077" endtime="20201115 22:11:53.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:53.145" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:53.143" endtime="20201115 22:11:53.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:53.146" endtime="20201115 22:11:53.148"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.075" endtime="20201115 22:11:53.148"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.073" endtime="20201115 22:11:53.149"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:53.155" endtime="20201115 22:11:53.442"></status>
</kw>
<msg timestamp="20201115 22:11:53.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025506667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025522542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:53.154" endtime="20201115 22:11:53.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:53.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025506667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025522542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:53.446" endtime="20201115 22:11:53.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:53.454" endtime="20201115 22:11:53.455"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.151" endtime="20201115 22:11:53.456"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.149" endtime="20201115 22:11:53.456"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:53.460" level="INFO">${RESULT} = [{'time': 0.025522542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.587499999999853e-05, 'source_diff': 1.587499999999853e-05}, {'time': 0.026590861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:53.457" endtime="20201115 22:11:53.461"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:53.474" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:53.461" endtime="20201115 22:11:53.474"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:53.478" level="INFO">NAME: 00-overhead-18-remove</msg>
<status status="PASS" starttime="20201115 22:11:53.477" endtime="20201115 22:11:53.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:53.481" level="INFO">VALUE: [1.587499999999853e-05, 1.562500000000175e-05, 1.5555999999999903e-05, 1.5569999999999473e-05, 1.554100000000086e-05, 1.558299999999957e-05, 1.5569e-05, 1.5569e-05, 1.5569999999999473e-05, 1.555500000000043e-05, 1.5555999999999903e-05, 1.555500000000043e-05, 1.5570000000006412e-05, 1.5542000000000333e-05, 1.558299999999957e-05, 1.5597999999998613e-05, 1.5542000000000333e-05, 1.5569e-05, 1.555500000000043e-05, 1.555500000000043e-05, 1.5569e-05, 1.555500000000043e-05, 1.558299999999957e-05, 1.555500000000043e-05, 1.558299999999957e-05, 1.5611999999998183e-05, 1.5569e-05, 1.555500000000043e-05, 1.5542000000000333e-05, 1.555499999999349e-05, 1.5569999999999473e-05, 1.5569e-05, 1.5569999999999473e-05, 1.5611000000005648e-05, 1.5625000000005218e-05, 1.558299999999957e-05, 1.555500000000043e-05, 1.556899999999306e-05, 1.556900000000694e-05, 1.556900000000694e-05, 1.5569999999992534e-05, 1.556900000000694e-05, 1.5528000000000763e-05, 1.5611999999998183e-05, 1.558299999999957e-05, 1.5542000000007272e-05, 1.5570000000006412e-05, 1.5528000000000763e-05, 1.558299999999957e-05, 1.5569999999992534e-05]</msg>
<status status="PASS" starttime="20201115 22:11:53.480" endtime="20201115 22:11:53.481"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.475" endtime="20201115 22:11:53.482"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:53.484" endtime="20201115 22:11:53.485"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:53.488" endtime="20201115 22:11:53.507"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.486" endtime="20201115 22:11:53.508"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.482" endtime="20201115 22:11:53.508"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.071" endtime="20201115 22:11:53.508"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.069" endtime="20201115 22:11:53.509"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.068" endtime="20201115 22:11:53.509"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:53.511" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:53.520" endtime="20201115 22:11:53.586"></status>
</kw>
<msg timestamp="20201115 22:11:53.586" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:53.519" endtime="20201115 22:11:53.587"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:53.589" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:53.588" endtime="20201115 22:11:53.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:53.590" endtime="20201115 22:11:53.592"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.516" endtime="20201115 22:11:53.592"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.514" endtime="20201115 22:11:53.593"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:53.599" endtime="20201115 22:11:53.903"></status>
</kw>
<msg timestamp="20201115 22:11:53.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025980944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025997389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:53.598" endtime="20201115 22:11:53.907"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:53.914" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025980944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025997389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:53.908" endtime="20201115 22:11:53.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:53.916" endtime="20201115 22:11:53.917"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.595" endtime="20201115 22:11:53.918"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.593" endtime="20201115 22:11:53.918"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:53.922" level="INFO">${RESULT} = [{'time': 0.025997389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6445000000000348e-05, 'source_diff': 1.6445000000000348e-05}, {'time': 0.027134722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:53.919" endtime="20201115 22:11:53.923"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:53.937" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:53.923" endtime="20201115 22:11:53.937"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:53.942" level="INFO">NAME: 00-overhead-19-remove</msg>
<status status="PASS" starttime="20201115 22:11:53.941" endtime="20201115 22:11:53.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:53.944" level="INFO">VALUE: [1.6445000000000348e-05, 1.612499999999878e-05, 1.611100000000268e-05, 1.612500000000225e-05, 1.612500000000225e-05, 1.611099999999921e-05, 1.6137999999998875e-05, 1.613899999999835e-05, 1.612499999999878e-05, 1.612499999999878e-05, 1.612499999999878e-05, 1.612499999999878e-05, 1.612499999999878e-05, 1.612499999999878e-05, 1.613899999999835e-05, 1.612499999999878e-05, 1.615299999999792e-05, 1.611099999999921e-05, 1.612499999999878e-05, 1.613899999999835e-05, 1.612499999999878e-05, 1.612499999999878e-05, 1.60690000000005e-05, 1.611099999999921e-05, 1.6165999999998015e-05, 1.615299999999792e-05, 1.612499999999878e-05, 1.611099999999921e-05, 1.611099999999921e-05, 1.6111000000006148e-05, 1.612499999999878e-05, 1.611099999999921e-05, 1.612499999999184e-05, 1.6125000000005718e-05, 1.6125000000005718e-05, 1.613899999999835e-05, 1.613899999999835e-05, 1.613899999999835e-05, 1.615299999999098e-05, 1.6125000000005718e-05, 1.613899999999835e-05, 1.6125000000005718e-05, 1.611099999999921e-05, 1.6125000000005718e-05, 1.605500000000093e-05, 1.613899999999835e-05, 1.612499999999184e-05, 1.611099999999921e-05, 1.6167000000011367e-05, 1.6125000000005718e-05]</msg>
<status status="PASS" starttime="20201115 22:11:53.943" endtime="20201115 22:11:53.945"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.938" endtime="20201115 22:11:53.945"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:53.948" endtime="20201115 22:11:53.949"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:53.952" endtime="20201115 22:11:53.971"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.950" endtime="20201115 22:11:53.972"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.946" endtime="20201115 22:11:53.972"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.512" endtime="20201115 22:11:53.972"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.510" endtime="20201115 22:11:53.973"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.509" endtime="20201115 22:11:53.973"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:53.975" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:53.984" endtime="20201115 22:11:54.053"></status>
</kw>
<msg timestamp="20201115 22:11:54.053" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:53.982" endtime="20201115 22:11:54.054"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:54.056" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:54.054" endtime="20201115 22:11:54.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:54.057" endtime="20201115 22:11:54.059"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.980" endtime="20201115 22:11:54.059"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.978" endtime="20201115 22:11:54.060"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:54.066" endtime="20201115 22:11:54.353"></status>
</kw>
<msg timestamp="20201115 22:11:54.356" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025459764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025476764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:54.064" endtime="20201115 22:11:54.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:54.364" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025459764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025476764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:54.357" endtime="20201115 22:11:54.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:54.365" endtime="20201115 22:11:54.367"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:54.062" endtime="20201115 22:11:54.367"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:54.060" endtime="20201115 22:11:54.368"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:54.372" level="INFO">${RESULT} = [{'time': 0.025476764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6999999999999654e-05, 'source_diff': 1.6999999999999654e-05}, {'time': 0.026686889, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:54.368" endtime="20201115 22:11:54.372"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:54.385" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:54.373" endtime="20201115 22:11:54.385"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:54.390" level="INFO">NAME: 00-overhead-20-remove</msg>
<status status="PASS" starttime="20201115 22:11:54.389" endtime="20201115 22:11:54.390"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:54.392" level="INFO">VALUE: [1.6999999999999654e-05, 1.6707999999997225e-05, 1.6735999999999834e-05, 1.6749999999999404e-05, 1.6749999999999404e-05, 1.665299999999842e-05, 1.665299999999842e-05, 1.6679999999998085e-05, 1.6749999999995935e-05, 1.663899999999885e-05, 1.6681000000004498e-05, 1.6665999999998515e-05, 1.6665999999998515e-05, 1.6679999999998085e-05, 1.668099999999756e-05, 1.665299999999842e-05, 1.6681000000004498e-05, 1.6653000000005358e-05, 1.6665999999998515e-05, 1.6679999999998085e-05, 1.668099999999756e-05, 1.6693999999997655e-05, 1.6680000000005024e-05, 1.6707999999997225e-05, 1.668099999999756e-05, 1.668099999999756e-05, 1.669499999999713e-05, 1.6681000000004498e-05, 1.663899999999885e-05, 1.6693999999997655e-05, 1.669499999999713e-05, 1.6707999999990286e-05, 1.666699999999799e-05, 1.6679999999991146e-05, 1.6708000000004164e-05, 1.6680000000005024e-05, 1.6681000000004498e-05, 1.6679999999991146e-05, 1.6680000000005024e-05, 1.666699999999799e-05, 1.6665999999998515e-05, 1.6681000000004498e-05, 1.6653000000005358e-05, 1.668099999999062e-05, 1.663899999999885e-05, 1.6667000000011867e-05, 1.663899999999885e-05, 1.668099999999062e-05, 1.6665999999998515e-05, 1.6680000000005024e-05]</msg>
<status status="PASS" starttime="20201115 22:11:54.391" endtime="20201115 22:11:54.393"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:54.386" endtime="20201115 22:11:54.394"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:54.396" endtime="20201115 22:11:54.397"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:54.399" endtime="20201115 22:11:54.419"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:54.398" endtime="20201115 22:11:54.419"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:54.394" endtime="20201115 22:11:54.420"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.976" endtime="20201115 22:11:54.420"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.974" endtime="20201115 22:11:54.421"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.973" endtime="20201115 22:11:54.421"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:54.423" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:54.433" endtime="20201115 22:11:54.506"></status>
</kw>
<msg timestamp="20201115 22:11:54.506" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:54.431" endtime="20201115 22:11:54.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:54.509" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:54.507" endtime="20201115 22:11:54.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:54.510" endtime="20201115 22:11:54.511"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:54.428" endtime="20201115 22:11:54.512"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:54.426" endtime="20201115 22:11:54.512"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:54.519" endtime="20201115 22:11:54.823"></status>
</kw>
<msg timestamp="20201115 22:11:54.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026968014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026985569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:54.517" endtime="20201115 22:11:54.827"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:54.834" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026968014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026985569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:54.828" endtime="20201115 22:11:54.835"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:54.836" endtime="20201115 22:11:54.837"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:54.515" endtime="20201115 22:11:54.838"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:54.513" endtime="20201115 22:11:54.838"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:54.842" level="INFO">${RESULT} = [{'time': 0.026985569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.755500000000243e-05, 'source_diff': 1.755500000000243e-05}, {'time': 0.028272806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:54.839" endtime="20201115 22:11:54.843"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:54.856" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:54.843" endtime="20201115 22:11:54.856"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:54.860" level="INFO">NAME: 00-overhead-21-remove</msg>
<status status="PASS" starttime="20201115 22:11:54.859" endtime="20201115 22:11:54.861"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:54.863" level="INFO">VALUE: [1.755500000000243e-05, 1.7249999999999904e-05, 1.7305999999998184e-05, 1.7250000000003374e-05, 1.7249999999996435e-05, 1.7292000000002083e-05, 1.7179999999998585e-05, 1.7263999999996005e-05, 1.7236000000003804e-05, 1.7207999999997725e-05, 1.7249999999996435e-05, 1.7235999999996865e-05, 1.719499999999763e-05, 1.7235999999996865e-05, 1.7263999999996005e-05, 1.7263999999996005e-05, 1.723699999999634e-05, 1.7235999999996865e-05, 1.7249999999996435e-05, 1.7250000000003374e-05, 1.7208000000004664e-05, 1.731899999999481e-05, 1.7236000000003804e-05, 1.7236000000003804e-05, 1.7264000000002944e-05, 1.7292000000002083e-05, 1.7278000000002514e-05, 1.7237000000003277e-05, 1.7249999999996435e-05, 1.7193999999998155e-05, 1.7249999999996435e-05, 1.7221999999997295e-05, 1.7290999999988732e-05, 1.726300000000347e-05, 1.7208000000004664e-05, 1.7235999999989926e-05, 1.7236000000003804e-05, 1.7250000000010313e-05, 1.7236000000003804e-05, 1.7277999999995575e-05, 1.7221999999997295e-05, 1.7249999999996435e-05, 1.7264000000002944e-05, 1.7249999999996435e-05, 1.7237000000003277e-05, 1.7209000000004138e-05, 1.7290999999988732e-05, 1.730499999999524e-05, 1.7264000000002944e-05, 1.7264000000002944e-05]</msg>
<status status="PASS" starttime="20201115 22:11:54.861" endtime="20201115 22:11:54.864"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:54.857" endtime="20201115 22:11:54.864"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:54.866" endtime="20201115 22:11:54.868"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:54.870" endtime="20201115 22:11:54.890"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:54.868" endtime="20201115 22:11:54.890"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:54.865" endtime="20201115 22:11:54.891"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:54.424" endtime="20201115 22:11:54.891"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:54.422" endtime="20201115 22:11:54.891"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:54.421" endtime="20201115 22:11:54.891"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:54.894" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:54.903" endtime="20201115 22:11:54.979"></status>
</kw>
<msg timestamp="20201115 22:11:54.979" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:54.901" endtime="20201115 22:11:54.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:54.982" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:54.980" endtime="20201115 22:11:54.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:54.983" endtime="20201115 22:11:54.985"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:54.898" endtime="20201115 22:11:54.985"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:54.896" endtime="20201115 22:11:54.986"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:54.992" endtime="20201115 22:11:55.280"></status>
</kw>
<msg timestamp="20201115 22:11:55.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025912903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025931, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:11:54.991" endtime="20201115 22:11:55.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:55.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025912903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025931, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:11:55.284" endtime="20201115 22:11:55.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:55.292" endtime="20201115 22:11:55.294"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:54.988" endtime="20201115 22:11:55.294"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:54.986" endtime="20201115 22:11:55.294"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:55.299" level="INFO">${RESULT} = [{'time': 0.025931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.809699999999817e-05, 'source_diff': 1.809699999999817e-05}, {'time': 0.027288181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 22:11:55.295" endtime="20201115 22:11:55.299"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:55.312" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:55.300" endtime="20201115 22:11:55.313"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:55.317" level="INFO">NAME: 00-overhead-22-remove</msg>
<status status="PASS" starttime="20201115 22:11:55.316" endtime="20201115 22:11:55.317"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:55.320" level="INFO">VALUE: [1.809699999999817e-05, 1.7778000000003014e-05, 1.7820000000001723e-05, 1.780500000000268e-05, 1.7764000000003444e-05, 1.781899999999531e-05, 1.7778000000003014e-05, 1.7791999999995645e-05, 1.7736000000004304e-05, 1.780500000000268e-05, 1.7834000000001293e-05, 1.780499999999574e-05, 1.7736000000004304e-05, 1.7777999999996075e-05, 1.780500000000268e-05, 1.7806000000002153e-05, 1.7820000000001723e-05, 1.7805999999995215e-05, 1.7778000000003014e-05, 1.7778000000003014e-05, 1.779099999999617e-05, 1.7820000000001723e-05, 1.7749999999996935e-05, 1.783300000000182e-05, 1.7806000000002153e-05, 1.7764000000003444e-05, 1.7792000000002584e-05, 1.7805999999995215e-05, 1.7805999999995215e-05, 1.7805999999995215e-05, 1.7820000000001723e-05, 1.780500000000962e-05, 1.7792000000002584e-05, 1.781900000000225e-05, 1.780499999999574e-05, 1.7791999999988706e-05, 1.779100000000311e-05, 1.784700000000139e-05, 1.7792000000002584e-05, 1.781900000000225e-05, 1.783299999999488e-05, 1.7820000000001723e-05, 1.787500000000053e-05, 1.780500000000962e-05, 1.7805999999995215e-05, 1.7820000000001723e-05, 1.7792000000002584e-05, 1.779100000000311e-05, 1.7806000000009092e-05, 1.7777999999996075e-05]</msg>
<status status="PASS" starttime="20201115 22:11:55.318" endtime="20201115 22:11:55.320"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:55.313" endtime="20201115 22:11:55.320"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:55.323" endtime="20201115 22:11:55.324"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:55.326" endtime="20201115 22:11:55.346"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:55.325" endtime="20201115 22:11:55.346"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:55.321" endtime="20201115 22:11:55.347"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:54.894" endtime="20201115 22:11:55.347"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:54.893" endtime="20201115 22:11:55.347"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:54.892" endtime="20201115 22:11:55.347"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:55.350" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:55.359" endtime="20201115 22:11:55.439"></status>
</kw>
<msg timestamp="20201115 22:11:55.439" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:55.357" endtime="20201115 22:11:55.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:55.442" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:55.440" endtime="20201115 22:11:55.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:55.443" endtime="20201115 22:11:55.445"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:55.354" endtime="20201115 22:11:55.445"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:55.352" endtime="20201115 22:11:55.446"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:55.453" endtime="20201115 22:11:55.741"></status>
</kw>
<msg timestamp="20201115 22:11:55.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025844375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025863097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:55.452" endtime="20201115 22:11:55.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:55.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025844375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025863097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:55.745" endtime="20201115 22:11:55.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:55.758" endtime="20201115 22:11:55.760"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:55.449" endtime="20201115 22:11:55.760"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:55.447" endtime="20201115 22:11:55.761"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:55.765" level="INFO">${RESULT} = [{'time': 0.025863097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8722000000002265e-05, 'source_diff': 1.8722000000002265e-05}, {'time': 0.027301431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:55.761" endtime="20201115 22:11:55.765"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:55.780" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:55.766" endtime="20201115 22:11:55.780"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:55.784" level="INFO">NAME: 00-overhead-23-remove</msg>
<status status="PASS" starttime="20201115 22:11:55.783" endtime="20201115 22:11:55.784"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:55.787" level="INFO">VALUE: [1.8722000000002265e-05, 1.837500000000103e-05, 1.833299999999885e-05, 1.836100000000146e-05, 1.829099999999667e-05, 1.836100000000146e-05, 1.836100000000146e-05, 1.841699999999974e-05, 1.836100000000146e-05, 1.8416000000000265e-05, 1.837500000000103e-05, 1.8348000000001363e-05, 1.836100000000146e-05, 1.836100000000146e-05, 1.833300000000232e-05, 1.837499999999409e-05, 1.836100000000146e-05, 1.836099999999452e-05, 1.836100000000146e-05, 1.834699999999495e-05, 1.83890000000006e-05, 1.8334000000001793e-05, 1.836100000000146e-05, 1.836100000000146e-05, 1.836100000000146e-05, 1.836099999999452e-05, 1.8333999999994854e-05, 1.837500000000103e-05, 1.834700000000189e-05, 1.836099999999452e-05, 1.834700000000189e-05, 1.8388000000008065e-05, 1.836099999999452e-05, 1.836099999999452e-05, 1.834700000000189e-05, 1.8291999999989206e-05, 1.8402000000000696e-05, 1.8402000000000696e-05, 1.83610000000084e-05, 1.843099999999931e-05, 1.8334000000008732e-05, 1.83610000000084e-05, 1.83610000000084e-05, 1.83610000000084e-05, 1.8320000000002223e-05, 1.836099999999452e-05, 1.843099999999931e-05, 1.838899999999366e-05, 1.8318999999988872e-05, 1.8402000000000696e-05]</msg>
<status status="PASS" starttime="20201115 22:11:55.785" endtime="20201115 22:11:55.787"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:55.780" endtime="20201115 22:11:55.788"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:55.790" endtime="20201115 22:11:55.791"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:55.793" endtime="20201115 22:11:55.813"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:55.792" endtime="20201115 22:11:55.813"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:55.788" endtime="20201115 22:11:55.814"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:55.350" endtime="20201115 22:11:55.814"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:55.349" endtime="20201115 22:11:55.814"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:55.348" endtime="20201115 22:11:55.814"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:55.817" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:55.825" endtime="20201115 22:11:55.909"></status>
</kw>
<msg timestamp="20201115 22:11:55.910" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:55.824" endtime="20201115 22:11:55.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:55.913" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:55.911" endtime="20201115 22:11:55.913"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:55.914" endtime="20201115 22:11:55.915"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:55.821" endtime="20201115 22:11:55.916"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:55.819" endtime="20201115 22:11:55.916"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:55.923" endtime="20201115 22:11:56.225"></status>
</kw>
<msg timestamp="20201115 22:11:56.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025783222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025802486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:55.922" endtime="20201115 22:11:56.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:56.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025783222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025802486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:56.230" endtime="20201115 22:11:56.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:56.238" endtime="20201115 22:11:56.239"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:55.919" endtime="20201115 22:11:56.240"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:55.917" endtime="20201115 22:11:56.240"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:56.244" level="INFO">${RESULT} = [{'time': 0.025802486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9263999999998005e-05, 'source_diff': 1.9263999999998005e-05}, {'time': 0.027320264, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:56.241" endtime="20201115 22:11:56.245"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:56.258" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:56.245" endtime="20201115 22:11:56.258"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:56.262" level="INFO">NAME: 00-overhead-24-remove</msg>
<status status="PASS" starttime="20201115 22:11:56.261" endtime="20201115 22:11:56.263"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:56.265" level="INFO">VALUE: [1.9263999999998005e-05, 1.894499999999938e-05, 1.893099999999981e-05, 1.893099999999981e-05, 1.887500000000153e-05, 1.8943999999999905e-05, 1.8930000000000335e-05, 1.8971999999999045e-05, 1.893099999999981e-05, 1.894499999999938e-05, 1.887500000000153e-05, 1.8957999999999475e-05, 1.895899999999895e-05, 1.893099999999981e-05, 1.8930000000000335e-05, 1.893099999999981e-05, 1.8916000000000766e-05, 1.8930000000000335e-05, 1.8930000000000335e-05, 1.888899999999416e-05, 1.8943999999999905e-05, 1.893099999999981e-05, 1.8957999999999475e-05, 1.8930000000000335e-05, 1.8916000000000766e-05, 1.8917000000007178e-05, 1.8985999999998615e-05, 1.8917000000007178e-05, 1.887500000000153e-05, 1.8915999999993827e-05, 1.8930000000000335e-05, 1.8943999999992966e-05, 1.890300000000067e-05, 1.895899999999895e-05, 1.8930000000000335e-05, 1.8944000000006844e-05, 1.893099999999981e-05, 1.89169999999933e-05, 1.89169999999933e-05, 1.8944000000006844e-05, 1.8902000000001196e-05, 1.893099999999981e-05, 1.8930000000000335e-05, 1.88610000000089e-05, 1.8916000000007704e-05, 1.8915999999993827e-05, 1.89169999999933e-05, 1.8930000000000335e-05, 1.8917000000007178e-05, 1.8889000000008038e-05]</msg>
<status status="PASS" starttime="20201115 22:11:56.263" endtime="20201115 22:11:56.265"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:56.259" endtime="20201115 22:11:56.266"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:56.268" endtime="20201115 22:11:56.269"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:56.272" endtime="20201115 22:11:56.291"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:56.270" endtime="20201115 22:11:56.292"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:56.266" endtime="20201115 22:11:56.292"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:55.817" endtime="20201115 22:11:56.292"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:55.816" endtime="20201115 22:11:56.293"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:55.815" endtime="20201115 22:11:56.293"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:56.295" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:56.304" endtime="20201115 22:11:56.392"></status>
</kw>
<msg timestamp="20201115 22:11:56.393" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:56.302" endtime="20201115 22:11:56.393"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:56.395" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:56.394" endtime="20201115 22:11:56.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:56.396" endtime="20201115 22:11:56.398"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:56.300" endtime="20201115 22:11:56.399"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:56.298" endtime="20201115 22:11:56.399"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:56.406" endtime="20201115 22:11:56.693"></status>
</kw>
<msg timestamp="20201115 22:11:56.696" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026029875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026049667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:56.404" endtime="20201115 22:11:56.696"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:56.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026029875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026049667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:56.697" endtime="20201115 22:11:56.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:56.705" endtime="20201115 22:11:56.707"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:56.401" endtime="20201115 22:11:56.708"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:56.400" endtime="20201115 22:11:56.708"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:56.712" level="INFO">${RESULT} = [{'time': 0.026049667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9791999999997645e-05, 'source_diff': 1.9791999999997645e-05}, {'time': 0.027649042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:56.709" endtime="20201115 22:11:56.712"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:56.726" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:56.713" endtime="20201115 22:11:56.726"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:56.730" level="INFO">NAME: 00-overhead-25-remove</msg>
<status status="PASS" starttime="20201115 22:11:56.729" endtime="20201115 22:11:56.731"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:56.733" level="INFO">VALUE: [1.9791999999997645e-05, 1.94029999999977e-05, 1.9485999999999115e-05, 1.9570000000000004e-05, 1.944499999999988e-05, 1.940300000000117e-05, 1.9499999999998685e-05, 1.954099999999792e-05, 1.947299999999902e-05, 1.9473000000005958e-05, 1.9486000000006054e-05, 1.9500000000005624e-05, 1.9444000000000405e-05, 1.9444000000000405e-05, 1.9457999999999975e-05, 1.9471999999999545e-05, 1.9485999999999115e-05, 1.9485999999999115e-05, 1.9500000000005624e-05, 1.9471999999999545e-05, 1.944499999999988e-05, 1.9485999999999115e-05, 1.9499999999998685e-05, 1.9485999999999115e-05, 1.9485999999999115e-05, 1.948699999999859e-05, 1.9485999999999115e-05, 1.9430000000000835e-05, 1.9471999999992606e-05, 1.948699999999859e-05, 1.948699999999859e-05, 1.9500000000005624e-05, 1.9472000000006484e-05, 1.9500000000005624e-05, 1.9485999999999115e-05, 1.948699999999859e-05, 1.9513999999998255e-05, 1.9527999999990886e-05, 1.9430000000000835e-05, 1.9486000000012993e-05, 1.9500000000005624e-05, 1.9485999999999115e-05, 1.9472000000006484e-05, 1.943100000000031e-05, 1.9485999999999115e-05, 1.9485999999999115e-05, 1.9485999999999115e-05, 1.9485999999999115e-05, 1.9485999999999115e-05, 1.9500000000005624e-05]</msg>
<status status="PASS" starttime="20201115 22:11:56.731" endtime="20201115 22:11:56.733"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:56.727" endtime="20201115 22:11:56.734"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:56.736" endtime="20201115 22:11:56.737"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:56.739" endtime="20201115 22:11:56.759"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:56.738" endtime="20201115 22:11:56.760"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:56.734" endtime="20201115 22:11:56.760"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:56.296" endtime="20201115 22:11:56.760"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:56.294" endtime="20201115 22:11:56.761"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:56.293" endtime="20201115 22:11:56.761"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.913" endtime="20201115 22:11:56.761"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="teardown">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:56.768" endtime="20201115 22:11:56.787"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:56.765" endtime="20201115 22:11:56.788"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:56.763" endtime="20201115 22:11:56.788"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:11:45.843" endtime="20201115 22:11:56.789" critical="yes"></status>
</test>
<status status="PASS" starttime="20201115 22:11:32.361" endtime="20201115 22:11:56.794"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">saml10-xpro</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="PASS" starttime="20201115 22:11:30.273" endtime="20201115 22:11:56.812"></status>
</suite>
<statistics>
<total>
<stat pass="5" fail="0">Critical Tests</stat>
<stat pass="5" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="5" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="5" fail="0">BOARD_saml10-xpro</stat>
<stat pass="5" fail="0">dev</stat>
</tag>
<suite>
<stat pass="5" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="4" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
