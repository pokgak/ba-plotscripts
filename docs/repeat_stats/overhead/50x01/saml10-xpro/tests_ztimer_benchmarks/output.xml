<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201115 22:10:58.138" rpa="false">
<suite id="s1" name="tests_ztimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201115 22:10:58.725" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201115 22:10:58.733" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201115 22:10:59.886" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201115 22:10:58.723" endtime="20201115 22:10:59.886"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201115 22:10:59.889" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201115 22:10:59.887" endtime="20201115 22:10:59.889"></status>
</kw>
<status status="PASS" starttime="20201115 22:10:58.722" endtime="20201115 22:10:59.890"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:10:59.892" endtime="20201115 22:11:00.077"></status>
</kw>
<status status="PASS" starttime="20201115 22:10:59.890" endtime="20201115 22:11:00.078"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:00.098" endtime="20201115 22:11:00.114"></status>
</kw>
<msg timestamp="20201115 22:11:00.115" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:00.093" endtime="20201115 22:11:00.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:00.121" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:00.118" endtime="20201115 22:11:00.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:11:00.127" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:11:00.123" endtime="20201115 22:11:00.128"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:00.087" endtime="20201115 22:11:00.129"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:00.084" endtime="20201115 22:11:00.130"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:00.083" endtime="20201115 22:11:00.131"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:11:00.139" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:11:00.137" endtime="20201115 22:11:00.140"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:00.133" endtime="20201115 22:11:00.140"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:00.082" endtime="20201115 22:11:00.140"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:00.081" endtime="20201115 22:11:00.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:00.142" endtime="20201115 22:11:00.145"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:00.080" endtime="20201115 22:11:00.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:00.148" endtime="20201115 22:11:00.151"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:00.078" endtime="20201115 22:11:00.152"></status>
</kw>
<status status="PASS" starttime="20201115 22:10:58.720" endtime="20201115 22:11:00.153"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:00.165" endtime="20201115 22:11:00.187"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:00.162" endtime="20201115 22:11:00.188"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:00.202" endtime="20201115 22:11:00.214"></status>
</kw>
<msg timestamp="20201115 22:11:00.215" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:00.201" endtime="20201115 22:11:00.215"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:00.217" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:00.216" endtime="20201115 22:11:00.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:11:00.220" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:11:00.218" endtime="20201115 22:11:00.221"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:00.198" endtime="20201115 22:11:00.221"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:00.196" endtime="20201115 22:11:00.222"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:00.193" endtime="20201115 22:11:00.222"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:11:00.226" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:11:00.225" endtime="20201115 22:11:00.226"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:00.223" endtime="20201115 22:11:00.226"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:00.192" endtime="20201115 22:11:00.226"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:00.192" endtime="20201115 22:11:00.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:00.227" endtime="20201115 22:11:00.229"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:00.190" endtime="20201115 22:11:00.229"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:00.189" endtime="20201115 22:11:00.230"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:00.160" endtime="20201115 22:11:00.230"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:00.237" endtime="20201115 22:11:00.245"></status>
</kw>
<msg timestamp="20201115 22:11:00.246" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:00.236" endtime="20201115 22:11:00.246"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:00.248" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:00.247" endtime="20201115 22:11:00.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:00.249" endtime="20201115 22:11:00.251"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:00.233" endtime="20201115 22:11:00.251"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:00.231" endtime="20201115 22:11:00.252"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:00.256" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201115 22:11:00.255" endtime="20201115 22:11:00.257"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:00.258" level="INFO">VALUE: ztimer</msg>
<status status="PASS" starttime="20201115 22:11:00.257" endtime="20201115 22:11:00.259"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:00.253" endtime="20201115 22:11:00.259"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:11:00.154" endtime="20201115 22:11:00.260" critical="yes"></status>
</test>
<status status="PASS" starttime="20201115 22:10:58.257" endtime="20201115 22:11:00.262"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201115 22:11:00.316" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201115 22:11:00.324" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201115 22:11:01.438" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201115 22:11:00.315" endtime="20201115 22:11:01.439"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201115 22:11:01.441" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201115 22:11:01.440" endtime="20201115 22:11:01.442"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:00.314" endtime="20201115 22:11:01.442"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:01.444" endtime="20201115 22:11:01.710"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.443" endtime="20201115 22:11:01.710"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:01.723" endtime="20201115 22:11:01.735"></status>
</kw>
<msg timestamp="20201115 22:11:01.735" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:01.721" endtime="20201115 22:11:01.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:01.738" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:01.736" endtime="20201115 22:11:01.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:11:01.742" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:11:01.739" endtime="20201115 22:11:01.742"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:01.719" endtime="20201115 22:11:01.743"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:01.716" endtime="20201115 22:11:01.743"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.715" endtime="20201115 22:11:01.743"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:11:01.747" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:11:01.746" endtime="20201115 22:11:01.748"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.744" endtime="20201115 22:11:01.748"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.714" endtime="20201115 22:11:01.748"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.714" endtime="20201115 22:11:01.748"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:01.749" endtime="20201115 22:11:01.750"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.712" endtime="20201115 22:11:01.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:01.751" endtime="20201115 22:11:01.753"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.711" endtime="20201115 22:11:01.754"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:00.312" endtime="20201115 22:11:01.754"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO/">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:01.760" endtime="20201115 22:11:01.779"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.758" endtime="20201115 22:11:01.780"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:01.793" endtime="20201115 22:11:01.805"></status>
</kw>
<msg timestamp="20201115 22:11:01.805" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:01.791" endtime="20201115 22:11:01.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:01.808" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:01.807" endtime="20201115 22:11:01.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:11:01.811" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:11:01.809" endtime="20201115 22:11:01.812"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:01.788" endtime="20201115 22:11:01.812"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:01.786" endtime="20201115 22:11:01.813"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.785" endtime="20201115 22:11:01.813"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:11:01.818" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:11:01.816" endtime="20201115 22:11:01.818"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.814" endtime="20201115 22:11:01.818"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.784" endtime="20201115 22:11:01.818"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.783" endtime="20201115 22:11:01.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:01.819" endtime="20201115 22:11:01.821"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.782" endtime="20201115 22:11:01.821"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.780" endtime="20201115 22:11:01.822"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.757" endtime="20201115 22:11:01.822"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure GPIO Overhead</arg>
</arguments>
<msg timestamp="20201115 22:11:01.824" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:01.832" endtime="20201115 22:11:01.841"></status>
</kw>
<msg timestamp="20201115 22:11:01.842" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:01.831" endtime="20201115 22:11:01.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:01.844" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:01.843" endtime="20201115 22:11:01.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:01.845" endtime="20201115 22:11:01.847"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.828" endtime="20201115 22:11:01.847"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.826" endtime="20201115 22:11:01.848"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:01.854" endtime="20201115 22:11:02.145"></status>
</kw>
<msg timestamp="20201115 22:11:02.149" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062392153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.062393458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:01.852" endtime="20201115 22:11:02.149"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:02.157" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062392153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.062393458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:02.150" endtime="20201115 22:11:02.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:02.158" endtime="20201115 22:11:02.160"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.850" endtime="20201115 22:11:02.160"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.848" endtime="20201115 22:11:02.161"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:02.165" level="INFO">${RESULT} = [{'time': 0.062393458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3050000000000561e-06, 'source_diff': 1.3050000000000561e-06}, {'time': 0.062421403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:02.162" endtime="20201115 22:11:02.165"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:02.179" level="INFO">${GPIO_OVERHEAD} = {'time': [0.062393458, 0.062421403, 0.062442278, 0.062463417, 0.062482097, 0.062498903, 0.062529708, 0.062556792, 0.062569847, 0.062601903, 0.062626569, 0.062652653, 0.062683167, 0.062699944, 0.062720...</msg>
<status status="PASS" starttime="20201115 22:11:02.166" endtime="20201115 22:11:02.180"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:02.184" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201115 22:11:02.183" endtime="20201115 22:11:02.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:02.187" level="INFO">VALUE: [1.3050000000000561e-06, 1.2220000000021103e-06, 1.2639999999938811e-06, 1.2360000000016802e-06, 1.2500000000012501e-06, 1.2220000000021103e-06, 1.2220000000090492e-06, 1.26400000000082e-06, 1.2219999999951714e-06, 1.2360000000016802e-06, 1.3330000000061348e-06, 1.26400000000082e-06, 1.277999999993451e-06, 1.2499999999943112e-06, 1.2499999999943112e-06, 1.2360000000016802e-06, 1.2499999999943112e-06, 1.2630000000013464e-06, 1.2219999999951714e-06, 1.2499999999943112e-06, 1.2219999999951714e-06, 1.250000000008189e-06, 1.2499999999943112e-06, 1.2499999999943112e-06, 1.250000000008189e-06, 1.2360000000016802e-06, 1.2219999999951714e-06, 1.2499999999943112e-06, 1.26400000000082e-06, 1.2770000000078552e-06, 1.2359999999878024e-06, 1.2360000000016802e-06, 1.2499999999943112e-06, 1.250000000008189e-06, 1.26400000000082e-06, 1.2219999999951714e-06, 1.2499999999943112e-06, 1.2639999999869422e-06, 1.2219999999951714e-06, 1.277999999993451e-06, 1.26400000000082e-06, 1.2370000000011538e-06, 1.2499999999943112e-06, 1.250000000008189e-06, 1.2219999999951714e-06, 1.2639999999869422e-06, 1.2360000000016802e-06, 1.2079999999886626e-06, 1.1949999999955052e-06, 1.2360000000016802e-06]</msg>
<status status="PASS" starttime="20201115 22:11:02.185" endtime="20201115 22:11:02.187"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.180" endtime="20201115 22:11:02.188"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:02.190" endtime="20201115 22:11:02.191"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:02.194" endtime="20201115 22:11:02.213"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.192" endtime="20201115 22:11:02.214"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.188" endtime="20201115 22:11:02.214"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.825" endtime="20201115 22:11:02.214"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.823" endtime="20201115 22:11:02.215"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:02.219" endtime="20201115 22:11:02.239"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.218" endtime="20201115 22:11:02.239"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.216" endtime="20201115 22:11:02.240"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:11:01.754" endtime="20201115 22:11:02.240" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:02.249" endtime="20201115 22:11:02.268"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.247" endtime="20201115 22:11:02.269"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:02.282" endtime="20201115 22:11:02.294"></status>
</kw>
<msg timestamp="20201115 22:11:02.295" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:02.280" endtime="20201115 22:11:02.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:02.297" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:02.296" endtime="20201115 22:11:02.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:11:02.300" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:11:02.299" endtime="20201115 22:11:02.301"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:02.278" endtime="20201115 22:11:02.301"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:02.275" endtime="20201115 22:11:02.302"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.274" endtime="20201115 22:11:02.302"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:11:02.306" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:11:02.306" endtime="20201115 22:11:02.307"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.304" endtime="20201115 22:11:02.308"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.273" endtime="20201115 22:11:02.308"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.273" endtime="20201115 22:11:02.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:02.309" endtime="20201115 22:11:02.311"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.271" endtime="20201115 22:11:02.311"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.270" endtime="20201115 22:11:02.312"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.246" endtime="20201115 22:11:02.312"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer Now Overhead</arg>
</arguments>
<msg timestamp="20201115 22:11:02.314" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:02.322" endtime="20201115 22:11:02.333"></status>
</kw>
<msg timestamp="20201115 22:11:02.334" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:02.321" endtime="20201115 22:11:02.334"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:02.336" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:02.335" endtime="20201115 22:11:02.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:02.337" endtime="20201115 22:11:02.339"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.318" endtime="20201115 22:11:02.339"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.317" endtime="20201115 22:11:02.340"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:02.346" endtime="20201115 22:11:02.653"></status>
</kw>
<msg timestamp="20201115 22:11:02.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064327167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064336819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:02.345" endtime="20201115 22:11:02.656"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:02.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064327167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064336819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:02.657" endtime="20201115 22:11:02.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:02.665" endtime="20201115 22:11:02.667"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.342" endtime="20201115 22:11:02.668"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.340" endtime="20201115 22:11:02.668"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:02.672" level="INFO">${RESULT} = [{'time': 0.064336819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.651999999998884e-06, 'source_diff': 9.651999999998884e-06}, {'time': 0.064371611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:02.669" endtime="20201115 22:11:02.672"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:02.686" level="INFO">${OVERHEAD} = {'time': [0.064336819, 0.064371611, 0.064409208, 0.064430333, 0.064466375, 0.064490917, 0.064511681, 0.064540556, 0.064562597, 0.064589625, 0.064629083, 0.064652972, 0.064684681, 0.064719778, 0.064757...</msg>
<status status="PASS" starttime="20201115 22:11:02.673" endtime="20201115 22:11:02.686"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:02.691" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201115 22:11:02.690" endtime="20201115 22:11:02.691"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:02.693" level="INFO">VALUE: [9.651999999998884e-06, 8.916999999997177e-06, 8.957999999989474e-06, 8.986000000002492e-06, 8.958000000003352e-06, 8.999999999995123e-06, 8.972999999995457e-06, 8.959000000002826e-06, 8.958000000003352e-06, 8.971999999995983e-06, 8.888999999998037e-06, 8.930000000004212e-06, 8.972999999995457e-06, 8.972000000009861e-06, 8.972000000009861e-06, 8.958000000003352e-06, 8.986000000002492e-06, 8.958000000003352e-06, 8.958000000003352e-06, 8.973000000009335e-06, 8.972000000009861e-06, 8.957999999989474e-06, 8.971999999995983e-06, 9.014000000001632e-06, 8.959000000002826e-06, 8.958000000003352e-06, 8.958000000003352e-06, 8.971999999995983e-06, 8.972999999995457e-06, 8.971999999995983e-06, 8.958999999988948e-06, 8.902000000005073e-06, 8.986000000002492e-06, 8.986000000002492e-06, 8.959000000002826e-06, 8.971999999995983e-06, 8.958999999988948e-06, 8.986000000002492e-06, 8.943999999996843e-06, 8.957999999989474e-06, 8.971999999995983e-06, 8.971999999995983e-06, 8.931000000003686e-06, 8.943999999996843e-06, 8.971999999995983e-06, 8.958999999988948e-06, 8.957999999989474e-06, 8.971999999995983e-06, 9.013000000002158e-06, 8.931000000003686e-06]</msg>
<status status="PASS" starttime="20201115 22:11:02.692" endtime="20201115 22:11:02.694"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.687" endtime="20201115 22:11:02.695"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:02.697" endtime="20201115 22:11:02.699"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:02.701" endtime="20201115 22:11:02.721"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.700" endtime="20201115 22:11:02.721"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.695" endtime="20201115 22:11:02.722"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.315" endtime="20201115 22:11:02.722"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.313" endtime="20201115 22:11:02.722"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:02.727" endtime="20201115 22:11:02.746"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.725" endtime="20201115 22:11:02.747"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.724" endtime="20201115 22:11:02.747"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:11:02.243" endtime="20201115 22:11:02.748" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set List">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:02.755" endtime="20201115 22:11:02.775"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.754" endtime="20201115 22:11:02.775"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:02.788" endtime="20201115 22:11:02.801"></status>
</kw>
<msg timestamp="20201115 22:11:02.801" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:02.787" endtime="20201115 22:11:02.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:02.804" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:02.802" endtime="20201115 22:11:02.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:11:02.807" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:11:02.805" endtime="20201115 22:11:02.807"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:02.784" endtime="20201115 22:11:02.808"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:02.782" endtime="20201115 22:11:02.808"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.781" endtime="20201115 22:11:02.809"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:11:02.812" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:11:02.812" endtime="20201115 22:11:02.813"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.810" endtime="20201115 22:11:02.813"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.780" endtime="20201115 22:11:02.813"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.779" endtime="20201115 22:11:02.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:02.814" endtime="20201115 22:11:02.816"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.778" endtime="20201115 22:11:02.816"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.776" endtime="20201115 22:11:02.817"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.752" endtime="20201115 22:11:02.817"></status>
</kw>
<kw name="${n} IN RANGE [ 25 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:02.821" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:02.832" endtime="20201115 22:11:02.850"></status>
</kw>
<msg timestamp="20201115 22:11:02.851" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:02.831" endtime="20201115 22:11:02.851"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:02.853" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:02.852" endtime="20201115 22:11:02.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:02.854" endtime="20201115 22:11:02.856"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.828" endtime="20201115 22:11:02.856"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.826" endtime="20201115 22:11:02.857"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:02.863" endtime="20201115 22:11:03.149"></status>
</kw>
<msg timestamp="20201115 22:11:03.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068783569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.06881725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:11:02.862" endtime="20201115 22:11:03.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:03.160" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068783569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.06881725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:11:03.153" endtime="20201115 22:11:03.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:03.161" endtime="20201115 22:11:03.163"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.859" endtime="20201115 22:11:03.164"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.857" endtime="20201115 22:11:03.164"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:03.168" level="INFO">${RESULT} = [{'time': 0.06881725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3680999999993744e-05, 'source_diff': 3.3680999999993744e-05}, {'time': 0.069016583, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:11:03.165" endtime="20201115 22:11:03.168"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:03.182" level="INFO">${OVERHEAD} = {'time': [0.06881725, 0.069016583, 0.069210736, 0.069406028, 0.069603569, 0.069804847, 0.069996153, 0.070197139, 0.070382889, 0.070587903, 0.070777361, 0.070971486, 0.071174361, 0.071369083, 0.0715591...</msg>
<status status="PASS" starttime="20201115 22:11:03.169" endtime="20201115 22:11:03.182"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:03.187" level="INFO">NAME: 00-overhead-1-set</msg>
<status status="PASS" starttime="20201115 22:11:03.186" endtime="20201115 22:11:03.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:03.189" level="INFO">VALUE: [3.3680999999993744e-05, 3.3250000000012436e-05, 3.329199999999033e-05, 3.323599999999205e-05, 3.324999999999856e-05, 3.324999999999856e-05, 3.323600000000593e-05, 3.323600000000593e-05, 3.324999999999856e-05, 3.324999999999856e-05, 3.324999999999856e-05, 3.322199999999942e-05, 3.326400000000507e-05, 3.324999999999856e-05, 3.320900000000626e-05, 3.323600000000593e-05, 3.326399999999119e-05, 3.324999999999856e-05, 3.330599999999684e-05, 3.323600000000593e-05, 3.326400000000507e-05, 3.324999999999856e-05, 3.323600000000593e-05, 3.324999999999856e-05, 3.323600000000593e-05, 3.326400000000507e-05, 3.324999999999856e-05, 3.323599999999205e-05, 3.326400000000507e-05, 3.323599999999205e-05, 3.3250000000012436e-05, 3.324999999999856e-05, 3.323699999999152e-05, 3.323599999999205e-05, 3.323600000000593e-05, 3.324999999999856e-05, 3.3263000000005594e-05, 3.324999999999856e-05, 3.3250000000012436e-05, 3.323599999999205e-05, 3.324999999999856e-05, 3.326399999999119e-05, 3.326400000000507e-05, 3.323599999999205e-05, 3.3208999999992384e-05, 3.324999999999856e-05, 3.322199999999942e-05, 3.320800000000679e-05, 3.326400000000507e-05, 3.324999999999856e-05]</msg>
<status status="PASS" starttime="20201115 22:11:03.188" endtime="20201115 22:11:03.190"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.183" endtime="20201115 22:11:03.191"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:03.193" endtime="20201115 22:11:03.194"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:03.196" endtime="20201115 22:11:03.216"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.195" endtime="20201115 22:11:03.217"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.191" endtime="20201115 22:11:03.217"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.822" endtime="20201115 22:11:03.218"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.820" endtime="20201115 22:11:03.218"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.819" endtime="20201115 22:11:03.218"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:03.220" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:03.230" endtime="20201115 22:11:03.250"></status>
</kw>
<msg timestamp="20201115 22:11:03.250" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:03.228" endtime="20201115 22:11:03.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:03.253" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:03.251" endtime="20201115 22:11:03.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:03.254" endtime="20201115 22:11:03.256"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.226" endtime="20201115 22:11:03.256"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.223" endtime="20201115 22:11:03.257"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:03.263" endtime="20201115 22:11:03.549"></status>
</kw>
<msg timestamp="20201115 22:11:03.552" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024938097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024957292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:03.262" endtime="20201115 22:11:03.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:03.561" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024938097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024957292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:03.554" endtime="20201115 22:11:03.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:03.562" endtime="20201115 22:11:03.563"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.259" endtime="20201115 22:11:03.564"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.257" endtime="20201115 22:11:03.564"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:03.568" level="INFO">${RESULT} = [{'time': 0.024957292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.919499999999963e-05, 'source_diff': 1.919499999999963e-05}, {'time': 0.025201278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:03.565" endtime="20201115 22:11:03.569"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:03.582" level="INFO">${OVERHEAD} = {'time': [0.024957292, 0.025201278, 0.025439403, 0.025692194, 0.025931556, 0.026181181, 0.026433028, 0.026676472, 0.026929514, 0.027167653, 0.027411708, 0.027647639, 0.027901, 0.028146611, 0.028382847...</msg>
<status status="PASS" starttime="20201115 22:11:03.569" endtime="20201115 22:11:03.583"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:03.587" level="INFO">NAME: 00-overhead-2-set</msg>
<status status="PASS" starttime="20201115 22:11:03.586" endtime="20201115 22:11:03.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:03.590" level="INFO">VALUE: [1.919499999999963e-05, 1.916700000000049e-05, 1.916700000000049e-05, 1.9208000000003195e-05, 1.916700000000049e-05, 1.916700000000049e-05, 1.916700000000049e-05, 1.9194000000000155e-05, 1.916700000000049e-05, 1.916700000000049e-05, 1.9180000000000585e-05, 1.916700000000049e-05, 1.915299999999745e-05, 1.916699999999702e-05, 1.9165999999997546e-05, 1.918100000000006e-05, 1.9138000000001876e-05, 1.918100000000006e-05, 1.9138000000001876e-05, 1.918100000000006e-05, 1.9180000000000585e-05, 1.916700000000049e-05, 1.9194000000000155e-05, 1.9179999999997116e-05, 1.916700000000049e-05, 1.916700000000049e-05, 1.915300000000092e-05, 1.916700000000049e-05, 1.9151999999994507e-05, 1.918100000000006e-05, 1.9138000000001876e-05, 1.918099999999312e-05, 1.916700000000049e-05, 1.916700000000049e-05, 1.912500000000178e-05, 1.916700000000049e-05, 1.9207999999999725e-05, 1.912500000000178e-05, 1.9180000000000585e-05, 1.9180000000000585e-05, 1.916700000000049e-05, 1.9166000000001016e-05, 1.9166000000001016e-05, 1.915300000000092e-05, 1.918100000000006e-05, 1.9207999999999725e-05, 1.916700000000049e-05, 1.915300000000092e-05, 1.919499999999963e-05, 1.915300000000092e-05]</msg>
<status status="PASS" starttime="20201115 22:11:03.588" endtime="20201115 22:11:03.590"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.583" endtime="20201115 22:11:03.591"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:03.593" endtime="20201115 22:11:03.594"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:03.597" endtime="20201115 22:11:03.616"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.595" endtime="20201115 22:11:03.617"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.591" endtime="20201115 22:11:03.617"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.221" endtime="20201115 22:11:03.618"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.219" endtime="20201115 22:11:03.618"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.218" endtime="20201115 22:11:03.618"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:03.621" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:03.631" endtime="20201115 22:11:03.654"></status>
</kw>
<msg timestamp="20201115 22:11:03.654" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:03.629" endtime="20201115 22:11:03.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:03.657" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:03.656" endtime="20201115 22:11:03.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:03.658" endtime="20201115 22:11:03.660"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.626" endtime="20201115 22:11:03.660"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.623" endtime="20201115 22:11:03.661"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:03.667" endtime="20201115 22:11:03.954"></status>
</kw>
<msg timestamp="20201115 22:11:03.957" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026568889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026588625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:03.666" endtime="20201115 22:11:03.957"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:03.965" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026568889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026588625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:03.958" endtime="20201115 22:11:03.965"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:03.966" endtime="20201115 22:11:03.968"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.663" endtime="20201115 22:11:03.968"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.661" endtime="20201115 22:11:03.969"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:03.973" level="INFO">${RESULT} = [{'time': 0.026588625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9736000000002835e-05, 'source_diff': 1.9736000000002835e-05}, {'time': 0.026875528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:03.969" endtime="20201115 22:11:03.973"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:03.987" level="INFO">${OVERHEAD} = {'time': [0.026588625, 0.026875528, 0.027165611, 0.027460431, 0.027750819, 0.028050569, 0.028344722, 0.028629917, 0.028911806, 0.029209056, 0.029492611, 0.029789569, 0.030084611, 0.030381222, 0.030670...</msg>
<status status="PASS" starttime="20201115 22:11:03.974" endtime="20201115 22:11:03.988"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:03.992" level="INFO">NAME: 00-overhead-3-set</msg>
<status status="PASS" starttime="20201115 22:11:03.991" endtime="20201115 22:11:03.993"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:03.995" level="INFO">VALUE: [1.9736000000002835e-05, 1.968100000000056e-05, 1.9735999999999365e-05, 1.9749999999998935e-05, 1.9735999999999365e-05, 1.9735999999999365e-05, 1.9749999999998935e-05, 1.9820000000000254e-05, 1.9737000000002308e-05, 1.969500000000013e-05, 1.9721999999999795e-05, 1.9749999999998935e-05, 1.9735999999999365e-05, 1.9665999999998046e-05, 1.9721999999999795e-05, 1.9721999999999795e-05, 1.9737000000002308e-05, 1.9763999999998505e-05, 1.9735999999999365e-05, 1.966700000000099e-05, 1.9763999999998505e-05, 1.9721999999999795e-05, 1.97089999999997e-05, 1.9749999999998935e-05, 1.9749999999998935e-05, 1.9763999999998505e-05, 1.9749999999998935e-05, 1.9735999999999365e-05, 1.9749999999998935e-05, 1.9735999999999365e-05, 1.9735999999999365e-05, 1.9735999999999365e-05, 1.9749999999998935e-05, 1.9763999999998505e-05, 1.9763999999998505e-05, 1.9749999999998935e-05, 1.9750000000005874e-05, 1.9721999999999795e-05, 1.9735999999999365e-05, 1.9735999999999365e-05, 1.9735999999999365e-05, 1.9735999999999365e-05, 1.9721999999999795e-05, 1.9735999999999365e-05, 1.9749999999998935e-05, 1.9735999999999365e-05, 1.9749999999998935e-05, 1.9735999999999365e-05, 1.9749999999998935e-05, 1.9721999999999795e-05]</msg>
<status status="PASS" starttime="20201115 22:11:03.993" endtime="20201115 22:11:03.995"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.988" endtime="20201115 22:11:03.996"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:03.998" endtime="20201115 22:11:04.000"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:04.002" endtime="20201115 22:11:04.021"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.000" endtime="20201115 22:11:04.022"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.997" endtime="20201115 22:11:04.022"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.621" endtime="20201115 22:11:04.023"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.619" endtime="20201115 22:11:04.023"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.619" endtime="20201115 22:11:04.023"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:04.025" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:04.034" endtime="20201115 22:11:04.059"></status>
</kw>
<msg timestamp="20201115 22:11:04.059" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:04.032" endtime="20201115 22:11:04.059"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:04.062" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:04.060" endtime="20201115 22:11:04.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:04.063" endtime="20201115 22:11:04.065"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.030" endtime="20201115 22:11:04.066"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.028" endtime="20201115 22:11:04.066"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:04.073" endtime="20201115 22:11:04.357"></status>
</kw>
<msg timestamp="20201115 22:11:04.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023845222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023865653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:04.071" endtime="20201115 22:11:04.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:04.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023845222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023865653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:04.361" endtime="20201115 22:11:04.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:04.370" endtime="20201115 22:11:04.371"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.069" endtime="20201115 22:11:04.372"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.067" endtime="20201115 22:11:04.372"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:04.377" level="INFO">${RESULT} = [{'time': 0.023865653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.043100000000131e-05, 'source_diff': 2.043100000000131e-05}, {'time': 0.024198319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:04.373" endtime="20201115 22:11:04.377"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:04.390" level="INFO">${OVERHEAD} = {'time': [0.023865653, 0.024198319, 0.024533819, 0.024875292, 0.025207403, 0.025549569, 0.025882597, 0.026213458, 0.026546208, 0.026885819, 0.027228458, 0.027559625, 0.027898583, 0.028242208, 0.028585...</msg>
<status status="PASS" starttime="20201115 22:11:04.378" endtime="20201115 22:11:04.391"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:04.395" level="INFO">NAME: 00-overhead-4-set</msg>
<status status="PASS" starttime="20201115 22:11:04.394" endtime="20201115 22:11:04.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:04.398" level="INFO">VALUE: [2.043100000000131e-05, 2.0443999999997936e-05, 2.0415999999998796e-05, 2.043100000000131e-05, 2.043100000000131e-05, 2.0486000000000115e-05, 2.0430000000001836e-05, 2.037499999999956e-05, 2.0416000000002266e-05, 2.0471999999997076e-05, 2.0430000000001836e-05, 2.041700000000174e-05, 2.0416000000002266e-05, 2.0430000000001836e-05, 2.04029999999987e-05, 2.041699999999827e-05, 2.043099999999784e-05, 2.0401999999999226e-05, 2.0401999999999226e-05, 2.043100000000131e-05, 2.043099999999784e-05, 2.041699999999827e-05, 2.041700000000174e-05, 2.043100000000131e-05, 2.044500000000088e-05, 2.0416000000002266e-05, 2.041700000000174e-05, 2.040300000000217e-05, 2.040300000000217e-05, 2.0415999999995327e-05, 2.041700000000174e-05, 2.04169999999948e-05, 2.043100000000131e-05, 2.0458000000000975e-05, 2.04169999999948e-05, 2.0486000000000115e-05, 2.04169999999948e-05, 2.044499999999394e-05, 2.044500000000088e-05, 2.041700000000174e-05, 2.041700000000174e-05, 2.044500000000088e-05, 2.040300000000217e-05, 2.037499999999609e-05, 2.041700000000174e-05, 2.041700000000174e-05, 2.041700000000174e-05, 2.040299999999523e-05, 2.0430000000001836e-05, 2.0347999999996425e-05]</msg>
<status status="PASS" starttime="20201115 22:11:04.396" endtime="20201115 22:11:04.398"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.391" endtime="20201115 22:11:04.399"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:04.401" endtime="20201115 22:11:04.402"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:04.404" endtime="20201115 22:11:04.424"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.403" endtime="20201115 22:11:04.424"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.399" endtime="20201115 22:11:04.425"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.026" endtime="20201115 22:11:04.425"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.024" endtime="20201115 22:11:04.425"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.023" endtime="20201115 22:11:04.425"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:04.428" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:04.436" endtime="20201115 22:11:04.464"></status>
</kw>
<msg timestamp="20201115 22:11:04.464" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:04.435" endtime="20201115 22:11:04.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:04.467" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:04.465" endtime="20201115 22:11:04.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:04.468" endtime="20201115 22:11:04.471"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.432" endtime="20201115 22:11:04.472"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.430" endtime="20201115 22:11:04.472"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:04.479" endtime="20201115 22:11:04.764"></status>
</kw>
<msg timestamp="20201115 22:11:04.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023989639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024010847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:04.477" endtime="20201115 22:11:04.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:04.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023989639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024010847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:04.768" endtime="20201115 22:11:04.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:04.776" endtime="20201115 22:11:04.778"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.475" endtime="20201115 22:11:04.779"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.473" endtime="20201115 22:11:04.779"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:04.783" level="INFO">${RESULT} = [{'time': 0.024010847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1207999999998256e-05, 'source_diff': 2.1207999999998256e-05}, {'time': 0.024409583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:04.780" endtime="20201115 22:11:04.783"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:04.797" level="INFO">${OVERHEAD} = {'time': [0.024010847, 0.024409583, 0.024796917, 0.025181667, 0.025574556, 0.025954097, 0.026347278, 0.026737153, 0.027129792, 0.027519819, 0.027904681, 0.028284236, 0.028667208, 0.029053306, 0.029441...</msg>
<status status="PASS" starttime="20201115 22:11:04.784" endtime="20201115 22:11:04.797"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:04.802" level="INFO">NAME: 00-overhead-5-set</msg>
<status status="PASS" starttime="20201115 22:11:04.801" endtime="20201115 22:11:04.802"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:04.804" level="INFO">VALUE: [2.1207999999998256e-05, 2.1179999999999116e-05, 2.12090000000012e-05, 2.116700000000249e-05, 2.116699999999902e-05, 2.1193999999998686e-05, 2.115299999999945e-05, 2.12090000000012e-05, 2.1236000000000865e-05, 2.10830000000016e-05, 2.116699999999902e-05, 2.1179999999999116e-05, 2.1179999999999116e-05, 2.116700000000249e-05, 2.116699999999902e-05, 2.119500000000163e-05, 2.115299999999945e-05, 2.116700000000249e-05, 2.119499999999816e-05, 2.1180000000002586e-05, 2.1180000000002586e-05, 2.116700000000249e-05, 2.1165999999996077e-05, 2.118100000000206e-05, 2.118099999999512e-05, 2.118100000000206e-05, 2.10969999999977e-05, 2.118100000000206e-05, 2.115300000000292e-05, 2.116700000000249e-05, 2.118100000000206e-05, 2.1165999999996077e-05, 2.1179999999995647e-05, 2.12090000000012e-05, 2.115300000000292e-05, 2.116700000000249e-05, 2.1166000000003016e-05, 2.112500000000378e-05, 2.115299999999598e-05, 2.1179999999995647e-05, 2.116700000000249e-05, 2.1179999999995647e-05, 2.115300000000292e-05, 2.1179999999995647e-05, 2.1166000000003016e-05, 2.115299999999598e-05, 2.116700000000249e-05, 2.119500000000163e-05, 2.1165999999996077e-05, 2.115299999999598e-05]</msg>
<status status="PASS" starttime="20201115 22:11:04.803" endtime="20201115 22:11:04.804"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.798" endtime="20201115 22:11:04.805"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:04.807" endtime="20201115 22:11:04.809"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:04.811" endtime="20201115 22:11:04.830"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.809" endtime="20201115 22:11:04.831"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.806" endtime="20201115 22:11:04.831"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.428" endtime="20201115 22:11:04.832"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.427" endtime="20201115 22:11:04.832"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.426" endtime="20201115 22:11:04.832"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:04.834" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:04.843" endtime="20201115 22:11:04.873"></status>
</kw>
<msg timestamp="20201115 22:11:04.873" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:04.842" endtime="20201115 22:11:04.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:04.876" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:04.874" endtime="20201115 22:11:04.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:04.877" endtime="20201115 22:11:04.880"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.839" endtime="20201115 22:11:04.880"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.837" endtime="20201115 22:11:04.881"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:04.887" endtime="20201115 22:11:05.172"></status>
</kw>
<msg timestamp="20201115 22:11:05.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023954611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023976542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:04.886" endtime="20201115 22:11:05.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:05.184" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023954611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023976542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:05.177" endtime="20201115 22:11:05.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:05.185" endtime="20201115 22:11:05.186"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.883" endtime="20201115 22:11:05.187"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.881" endtime="20201115 22:11:05.187"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:05.192" level="INFO">${RESULT} = [{'time': 0.023976542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.193099999999934e-05, 'source_diff': 2.193099999999934e-05}, {'time': 0.024412889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:05.188" endtime="20201115 22:11:05.192"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:05.206" level="INFO">${OVERHEAD} = {'time': [0.023976542, 0.024412889, 0.024850833, 0.025299069, 0.025734875, 0.026170986, 0.026600611, 0.027041375, 0.027489, 0.027931319, 0.028369278, 0.02881225, 0.029247139, 0.029695083, 0.030127472,...</msg>
<status status="PASS" starttime="20201115 22:11:05.193" endtime="20201115 22:11:05.206"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:05.210" level="INFO">NAME: 00-overhead-6-set</msg>
<status status="PASS" starttime="20201115 22:11:05.209" endtime="20201115 22:11:05.211"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:05.213" level="INFO">VALUE: [2.193099999999934e-05, 2.194499999999891e-05, 2.1916000000000296e-05, 2.1916000000000296e-05, 2.19030000000002e-05, 2.19030000000002e-05, 2.19030000000002e-05, 2.188900000000063e-05, 2.191699999999977e-05, 2.1929999999999866e-05, 2.19030000000002e-05, 2.191699999999977e-05, 2.191699999999977e-05, 2.1916000000000296e-05, 2.1916000000000296e-05, 2.191699999999977e-05, 2.193099999999934e-05, 2.19169999999963e-05, 2.18890000000041e-05, 2.19169999999963e-05, 2.1972000000002045e-05, 2.186100000000496e-05, 2.19169999999963e-05, 2.19169999999963e-05, 2.1915999999996827e-05, 2.190300000000367e-05, 2.1916000000003766e-05, 2.193100000000281e-05, 2.187500000000453e-05, 2.190300000000367e-05, 2.1916000000003766e-05, 2.1930000000003336e-05, 2.1915999999996827e-05, 2.1902000000004196e-05, 2.193099999999587e-05, 2.190299999999673e-05, 2.1915999999996827e-05, 2.1958000000002476e-05, 2.1943999999995967e-05, 2.190300000000367e-05, 2.191700000000324e-05, 2.184699999999845e-05, 2.1916000000003766e-05, 2.193099999999587e-05, 2.188899999999716e-05, 2.19169999999963e-05, 2.1915999999996827e-05, 2.187499999999759e-05, 2.18890000000041e-05, 2.193099999999587e-05]</msg>
<status status="PASS" starttime="20201115 22:11:05.211" endtime="20201115 22:11:05.213"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.206" endtime="20201115 22:11:05.214"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:05.216" endtime="20201115 22:11:05.217"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:05.219" endtime="20201115 22:11:05.239"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.218" endtime="20201115 22:11:05.239"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.214" endtime="20201115 22:11:05.240"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.835" endtime="20201115 22:11:05.240"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.833" endtime="20201115 22:11:05.240"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.832" endtime="20201115 22:11:05.240"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:05.243" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:05.252" endtime="20201115 22:11:05.284"></status>
</kw>
<msg timestamp="20201115 22:11:05.285" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:05.250" endtime="20201115 22:11:05.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:05.287" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:05.286" endtime="20201115 22:11:05.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:05.288" endtime="20201115 22:11:05.291"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.248" endtime="20201115 22:11:05.292"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.245" endtime="20201115 22:11:05.292"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:05.299" endtime="20201115 22:11:05.584"></status>
</kw>
<msg timestamp="20201115 22:11:05.587" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024593694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024616347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:05.297" endtime="20201115 22:11:05.587"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:05.595" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024593694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024616347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:05.588" endtime="20201115 22:11:05.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:05.596" endtime="20201115 22:11:05.598"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.294" endtime="20201115 22:11:05.599"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.293" endtime="20201115 22:11:05.599"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:05.603" level="INFO">${RESULT} = [{'time': 0.024616347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.265300000000095e-05, 'source_diff': 2.265300000000095e-05}, {'time': 0.02509575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:11:05.600" endtime="20201115 22:11:05.603"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:05.617" level="INFO">${OVERHEAD} = {'time': [0.024616347, 0.02509575, 0.025594417, 0.026078542, 0.026571972, 0.027061986, 0.027549569, 0.0280455, 0.028543, 0.029038917, 0.029520569, 0.030003458, 0.030492556, 0.030974778, 0.031468583, 0...</msg>
<status status="PASS" starttime="20201115 22:11:05.604" endtime="20201115 22:11:05.617"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:05.621" level="INFO">NAME: 00-overhead-7-set</msg>
<status status="PASS" starttime="20201115 22:11:05.620" endtime="20201115 22:11:05.622"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:05.624" level="INFO">VALUE: [2.265300000000095e-05, 2.2694000000000186e-05, 2.266700000000052e-05, 2.266700000000052e-05, 2.263899999999791e-05, 2.265300000000095e-05, 2.2694000000000186e-05, 2.266700000000052e-05, 2.265299999999748e-05, 2.265300000000095e-05, 2.2637999999998437e-05, 2.2666000000001046e-05, 2.262500000000181e-05, 2.2570000000003004e-05, 2.263899999999791e-05, 2.266699999999705e-05, 2.2665999999997577e-05, 2.2665999999997577e-05, 2.263899999999791e-05, 2.265300000000442e-05, 2.265300000000442e-05, 2.2651999999998007e-05, 2.2665999999997577e-05, 2.263899999999791e-05, 2.263899999999791e-05, 2.2665999999997577e-05, 2.2666000000004516e-05, 2.2721999999995857e-05, 2.2666000000004516e-05, 2.263899999999791e-05, 2.266700000000399e-05, 2.2665999999997577e-05, 2.2651999999998007e-05, 2.266699999999705e-05, 2.2666000000004516e-05, 2.2736000000002365e-05, 2.261100000000571e-05, 2.265299999999748e-05, 2.263899999999791e-05, 2.265300000000442e-05, 2.2666000000004516e-05, 2.266699999999705e-05, 2.263899999999791e-05, 2.265299999999748e-05, 2.263899999999791e-05, 2.2652000000004946e-05, 2.266700000000399e-05, 2.2680000000004086e-05, 2.2666000000004516e-05, 2.265299999999748e-05]</msg>
<status status="PASS" starttime="20201115 22:11:05.623" endtime="20201115 22:11:05.624"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.618" endtime="20201115 22:11:05.625"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:05.627" endtime="20201115 22:11:05.629"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:05.631" endtime="20201115 22:11:05.651"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.629" endtime="20201115 22:11:05.651"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.626" endtime="20201115 22:11:05.652"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.243" endtime="20201115 22:11:05.652"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.242" endtime="20201115 22:11:05.652"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.241" endtime="20201115 22:11:05.653"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:05.655" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:05.665" endtime="20201115 22:11:05.699"></status>
</kw>
<msg timestamp="20201115 22:11:05.700" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:05.663" endtime="20201115 22:11:05.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:05.702" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:05.701" endtime="20201115 22:11:05.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:05.703" endtime="20201115 22:11:05.706"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.660" endtime="20201115 22:11:05.707"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.658" endtime="20201115 22:11:05.707"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:05.714" endtime="20201115 22:11:06.000"></status>
</kw>
<msg timestamp="20201115 22:11:06.003" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025335528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025358917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:05.712" endtime="20201115 22:11:06.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:06.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025335528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025358917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:06.004" endtime="20201115 22:11:06.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:06.012" endtime="20201115 22:11:06.013"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.709" endtime="20201115 22:11:06.014"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.708" endtime="20201115 22:11:06.014"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:06.019" level="INFO">${RESULT} = [{'time': 0.025358917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.338900000000213e-05, 'source_diff': 2.338900000000213e-05}, {'time': 0.025892333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:06.015" endtime="20201115 22:11:06.019"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:06.032" level="INFO">${OVERHEAD} = {'time': [0.025358917, 0.025892333, 0.026430806, 0.026968028, 0.027507139, 0.028039667, 0.028583736, 0.029120014, 0.029660653, 0.030201917, 0.030751847, 0.031284083, 0.031825653, 0.032358194, 0.032898...</msg>
<status status="PASS" starttime="20201115 22:11:06.020" endtime="20201115 22:11:06.033"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:06.037" level="INFO">NAME: 00-overhead-8-set</msg>
<status status="PASS" starttime="20201115 22:11:06.036" endtime="20201115 22:11:06.037"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:06.039" level="INFO">VALUE: [2.338900000000213e-05, 2.3415999999998327e-05, 2.341700000000127e-05, 2.34030000000017e-05, 2.343100000000084e-05, 2.341700000000127e-05, 2.340299999999823e-05, 2.338899999999866e-05, 2.340299999999823e-05, 2.343100000000084e-05, 2.338899999999866e-05, 2.3401999999998757e-05, 2.33890000000056e-05, 2.3415999999998327e-05, 2.340300000000517e-05, 2.340300000000517e-05, 2.340299999999823e-05, 2.334699999999995e-05, 2.340299999999823e-05, 2.34169999999978e-05, 2.340300000000517e-05, 2.3415999999998327e-05, 2.340300000000517e-05, 2.3401999999998757e-05, 2.334699999999995e-05, 2.340299999999823e-05, 2.343100000000431e-05, 2.340300000000517e-05, 2.34169999999978e-05, 2.3415999999998327e-05, 2.340299999999823e-05, 2.341700000000474e-05, 2.340299999999823e-05, 2.340300000000517e-05, 2.3415999999998327e-05, 2.3415999999998327e-05, 2.33890000000056e-05, 2.343099999999737e-05, 2.336099999999952e-05, 2.343099999999737e-05, 2.343100000000431e-05, 2.3415999999998327e-05, 2.338899999999866e-05, 2.3401999999998757e-05, 2.340300000000517e-05, 2.340300000000517e-05, 2.340299999999823e-05, 2.338899999999866e-05, 2.341700000000474e-05, 2.337500000000603e-05]</msg>
<status status="PASS" starttime="20201115 22:11:06.038" endtime="20201115 22:11:06.040"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.033" endtime="20201115 22:11:06.041"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:06.043" endtime="20201115 22:11:06.044"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:06.046" endtime="20201115 22:11:06.066"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.045" endtime="20201115 22:11:06.067"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.041" endtime="20201115 22:11:06.067"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.656" endtime="20201115 22:11:06.067"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.654" endtime="20201115 22:11:06.068"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.653" endtime="20201115 22:11:06.068"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:06.070" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:06.079" endtime="20201115 22:11:06.116"></status>
</kw>
<msg timestamp="20201115 22:11:06.117" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:06.077" endtime="20201115 22:11:06.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:06.119" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:06.118" endtime="20201115 22:11:06.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:06.121" endtime="20201115 22:11:06.124"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.075" endtime="20201115 22:11:06.125"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.073" endtime="20201115 22:11:06.125"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:06.131" endtime="20201115 22:11:06.418"></status>
</kw>
<msg timestamp="20201115 22:11:06.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024138944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024163111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:06.130" endtime="20201115 22:11:06.421"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:06.429" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024138944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024163111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:06.422" endtime="20201115 22:11:06.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:06.430" endtime="20201115 22:11:06.432"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.127" endtime="20201115 22:11:06.432"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.126" endtime="20201115 22:11:06.433"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:06.437" level="INFO">${RESULT} = [{'time': 0.024163111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.416700000000202e-05, 'source_diff': 2.416700000000202e-05}, {'time': 0.024762514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:06.433" endtime="20201115 22:11:06.437"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:06.451" level="INFO">${OVERHEAD} = {'time': [0.024163111, 0.024762514, 0.025357333, 0.025943472, 0.026528958, 0.027118486, 0.027707389, 0.028306861, 0.028906694, 0.029491611, 0.030080222, 0.030673542, 0.031264667, 0.031853361, 0.032436...</msg>
<status status="PASS" starttime="20201115 22:11:06.438" endtime="20201115 22:11:06.451"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:06.455" level="INFO">NAME: 00-overhead-9-set</msg>
<status status="PASS" starttime="20201115 22:11:06.454" endtime="20201115 22:11:06.456"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:06.458" level="INFO">VALUE: [2.416700000000202e-05, 2.415299999999898e-05, 2.4151999999999507e-05, 2.4165999999999077e-05, 2.4151999999999507e-05, 2.416700000000202e-05, 2.415299999999898e-05, 2.413899999999941e-05, 2.4165999999999077e-05, 2.413899999999941e-05, 2.4165999999999077e-05, 2.415300000000245e-05, 2.415300000000245e-05, 2.415299999999898e-05, 2.418099999999812e-05, 2.413899999999941e-05, 2.416699999999855e-05, 2.415299999999898e-05, 2.415299999999898e-05, 2.413899999999941e-05, 2.416699999999855e-05, 2.415299999999898e-05, 2.422300000000377e-05, 2.4165999999999077e-05, 2.416700000000549e-05, 2.416699999999855e-05, 2.413899999999941e-05, 2.413899999999941e-05, 2.415299999999898e-05, 2.4151999999999507e-05, 2.4207999999997787e-05, 2.415300000000592e-05, 2.418099999999812e-05, 2.415299999999898e-05, 2.415299999999898e-05, 2.422300000000377e-05, 2.413899999999941e-05, 2.4180000000005586e-05, 2.4193999999998217e-05, 2.413899999999941e-05, 2.4151999999999507e-05, 2.415299999999898e-05, 2.416700000000549e-05, 2.415300000000592e-05, 2.4179999999998647e-05, 2.4152000000006446e-05, 2.4151999999999507e-05, 2.415299999999898e-05, 2.413899999999941e-05, 2.4236000000003866e-05]</msg>
<status status="PASS" starttime="20201115 22:11:06.456" endtime="20201115 22:11:06.459"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.452" endtime="20201115 22:11:06.459"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:06.461" endtime="20201115 22:11:06.463"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:06.465" endtime="20201115 22:11:06.484"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.463" endtime="20201115 22:11:06.485"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.460" endtime="20201115 22:11:06.485"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.071" endtime="20201115 22:11:06.486"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.069" endtime="20201115 22:11:06.486"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.068" endtime="20201115 22:11:06.486"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:06.489" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:06.497" endtime="20201115 22:11:06.538"></status>
</kw>
<msg timestamp="20201115 22:11:06.538" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:06.496" endtime="20201115 22:11:06.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:06.541" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:06.539" endtime="20201115 22:11:06.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:06.542" endtime="20201115 22:11:06.544"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.493" endtime="20201115 22:11:06.545"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.491" endtime="20201115 22:11:06.545"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:06.552" endtime="20201115 22:11:06.838"></status>
</kw>
<msg timestamp="20201115 22:11:06.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024427375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024452278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:06.550" endtime="20201115 22:11:06.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:06.849" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024427375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024452278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:06.842" endtime="20201115 22:11:06.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:06.851" endtime="20201115 22:11:06.852"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.547" endtime="20201115 22:11:06.853"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.546" endtime="20201115 22:11:06.853"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:06.858" level="INFO">${RESULT} = [{'time': 0.024452278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.490299999999973e-05, 'source_diff': 2.490299999999973e-05}, {'time': 0.025100778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:06.854" endtime="20201115 22:11:06.858"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:06.872" level="INFO">${OVERHEAD} = {'time': [0.024452278, 0.025100778, 0.02574925, 0.026399028, 0.027048208, 0.027689333, 0.028344111, 0.028988681, 0.029629389, 0.030279486, 0.030924264, 0.031570278, 0.032210722, 0.032864903, 0.0335184...</msg>
<status status="PASS" starttime="20201115 22:11:06.859" endtime="20201115 22:11:06.872"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:06.876" level="INFO">NAME: 00-overhead-10-set</msg>
<status status="PASS" starttime="20201115 22:11:06.875" endtime="20201115 22:11:06.877"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:06.879" level="INFO">VALUE: [2.490299999999973e-05, 2.494500000000191e-05, 2.490299999999973e-05, 2.488900000000016e-05, 2.488900000000016e-05, 2.4943999999998967e-05, 2.49030000000032e-05, 2.49169999999993e-05, 2.488900000000016e-05, 2.488900000000016e-05, 2.49169999999993e-05, 2.490299999999973e-05, 2.488900000000016e-05, 2.490299999999973e-05, 2.4943999999998967e-05, 2.490299999999973e-05, 2.4902000000000257e-05, 2.495900000000495e-05, 2.490199999999332e-05, 2.490299999999973e-05, 2.490299999999973e-05, 2.486100000000102e-05, 2.493099999999887e-05, 2.490299999999973e-05, 2.4971999999998107e-05, 2.4915999999999827e-05, 2.4915999999999827e-05, 2.4888000000000687e-05, 2.4846999999994512e-05, 2.487500000000059e-05, 2.488900000000016e-05, 2.488900000000016e-05, 2.488900000000016e-05, 2.490299999999973e-05, 2.490199999999332e-05, 2.49169999999993e-05, 2.4915999999999827e-05, 2.490299999999973e-05, 2.490299999999973e-05, 2.4915999999999827e-05, 2.487500000000059e-05, 2.4915999999999827e-05, 2.49169999999993e-05, 2.490299999999973e-05, 2.4943999999998967e-05, 2.490299999999973e-05, 2.490299999999973e-05, 2.4943999999998967e-05, 2.4915999999999827e-05, 2.490299999999973e-05]</msg>
<status status="PASS" starttime="20201115 22:11:06.878" endtime="20201115 22:11:06.879"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.873" endtime="20201115 22:11:06.880"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:06.882" endtime="20201115 22:11:06.883"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:06.885" endtime="20201115 22:11:06.905"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.884" endtime="20201115 22:11:06.906"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.880" endtime="20201115 22:11:06.906"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.489" endtime="20201115 22:11:06.906"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.487" endtime="20201115 22:11:06.907"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.486" endtime="20201115 22:11:06.907"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:06.909" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:06.918" endtime="20201115 22:11:06.961"></status>
</kw>
<msg timestamp="20201115 22:11:06.961" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:06.916" endtime="20201115 22:11:06.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:06.964" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:06.962" endtime="20201115 22:11:06.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:06.965" endtime="20201115 22:11:06.967"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.914" endtime="20201115 22:11:06.968"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.912" endtime="20201115 22:11:06.968"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:06.975" endtime="20201115 22:11:07.261"></status>
</kw>
<msg timestamp="20201115 22:11:07.264" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024430597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02445625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:11:06.973" endtime="20201115 22:11:07.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:07.272" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024430597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02445625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:11:07.265" endtime="20201115 22:11:07.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:07.274" endtime="20201115 22:11:07.275"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.971" endtime="20201115 22:11:07.276"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.969" endtime="20201115 22:11:07.276"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:07.280" level="INFO">${RESULT} = [{'time': 0.02445625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.565300000000048e-05, 'source_diff': 2.565300000000048e-05}, {'time': 0.025147292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:11:07.277" endtime="20201115 22:11:07.281"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:07.294" level="INFO">${OVERHEAD} = {'time': [0.02445625, 0.025147292, 0.02584625, 0.026537597, 0.0272365, 0.027943542, 0.028639083, 0.029329597, 0.030020986, 0.030717361, 0.031417181, 0.032125153, 0.032824375, 0.033514917, 0.034216625,...</msg>
<status status="PASS" starttime="20201115 22:11:07.281" endtime="20201115 22:11:07.295"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:07.299" level="INFO">NAME: 00-overhead-11-set</msg>
<status status="PASS" starttime="20201115 22:11:07.298" endtime="20201115 22:11:07.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:07.302" level="INFO">VALUE: [2.565300000000048e-05, 2.565300000000048e-05, 2.562500000000134e-05, 2.565300000000048e-05, 2.562500000000134e-05, 2.565299999999701e-05, 2.5651999999997538e-05, 2.565300000000048e-05, 2.563900000000091e-05, 2.565299999999701e-05, 2.565300000000048e-05, 2.5666999999993112e-05, 2.563900000000091e-05, 2.568099999999962e-05, 2.565300000000048e-05, 2.565300000000048e-05, 2.565300000000048e-05, 2.565300000000048e-05, 2.562500000000134e-05, 2.563900000000091e-05, 2.563900000000091e-05, 2.563900000000091e-05, 2.5666000000000577e-05, 2.563900000000091e-05, 2.565300000000048e-05, 2.562500000000134e-05, 2.568099999999962e-05, 2.566700000000005e-05, 2.566700000000005e-05, 2.565300000000048e-05, 2.5638000000001437e-05, 2.566700000000005e-05, 2.562500000000134e-05, 2.565300000000048e-05, 2.5638999999993972e-05, 2.5652000000001007e-05, 2.562500000000134e-05, 2.5666000000000577e-05, 2.563900000000091e-05, 2.565300000000048e-05, 2.562500000000134e-05, 2.565300000000048e-05, 2.565300000000048e-05, 2.565300000000048e-05, 2.566700000000005e-05, 2.565300000000048e-05, 2.565300000000048e-05, 2.565300000000048e-05, 2.563900000000091e-05, 2.566700000000005e-05]</msg>
<status status="PASS" starttime="20201115 22:11:07.300" endtime="20201115 22:11:07.302"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.295" endtime="20201115 22:11:07.302"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:07.305" endtime="20201115 22:11:07.306"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:07.308" endtime="20201115 22:11:07.328"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.307" endtime="20201115 22:11:07.328"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.303" endtime="20201115 22:11:07.329"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.910" endtime="20201115 22:11:07.329"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.908" endtime="20201115 22:11:07.329"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.907" endtime="20201115 22:11:07.330"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:07.332" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:07.341" endtime="20201115 22:11:07.386"></status>
</kw>
<msg timestamp="20201115 22:11:07.387" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:07.339" endtime="20201115 22:11:07.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:07.389" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:07.388" endtime="20201115 22:11:07.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:07.390" endtime="20201115 22:11:07.393"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.336" endtime="20201115 22:11:07.393"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.334" endtime="20201115 22:11:07.394"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:07.401" endtime="20201115 22:11:07.687"></status>
</kw>
<msg timestamp="20201115 22:11:07.690" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024279875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024306292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:07.399" endtime="20201115 22:11:07.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:07.698" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024279875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024306292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:07.691" endtime="20201115 22:11:07.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:07.700" endtime="20201115 22:11:07.701"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.396" endtime="20201115 22:11:07.702"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.394" endtime="20201115 22:11:07.702"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:07.707" level="INFO">${RESULT} = [{'time': 0.024306292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.64170000000008e-05, 'source_diff': 2.64170000000008e-05}, {'time': 0.025064194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:11:07.703" endtime="20201115 22:11:07.707"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:07.720" level="INFO">${OVERHEAD} = {'time': [0.024306292, 0.025064194, 0.025814708, 0.026568986, 0.02731675, 0.028078528, 0.028834403, 0.029591514, 0.030337389, 0.031085458, 0.031843472, 0.032591542, 0.033334903, 0.034096069, 0.0348432...</msg>
<status status="PASS" starttime="20201115 22:11:07.708" endtime="20201115 22:11:07.721"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:07.725" level="INFO">NAME: 00-overhead-12-set</msg>
<status status="PASS" starttime="20201115 22:11:07.724" endtime="20201115 22:11:07.725"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:07.728" level="INFO">VALUE: [2.64170000000008e-05, 2.6402000000001757e-05, 2.638899999999819e-05, 2.6360999999999052e-05, 2.640300000000123e-05, 2.640299999999776e-05, 2.640300000000123e-05, 2.638899999999819e-05, 2.638899999999819e-05, 2.6401999999998288e-05, 2.6402999999994292e-05, 2.640300000000123e-05, 2.638900000000166e-05, 2.6402000000001757e-05, 2.643100000000037e-05, 2.6430000000000897e-05, 2.64170000000008e-05, 2.640300000000123e-05, 2.6388000000002187e-05, 2.638799999999525e-05, 2.637500000000209e-05, 2.638799999999525e-05, 2.640300000000123e-05, 2.637500000000209e-05, 2.6333999999995916e-05, 2.6416000000001327e-05, 2.6402999999994292e-05, 2.640300000000123e-05, 2.640300000000123e-05, 2.6388999999994722e-05, 2.643100000000037e-05, 2.6333999999995916e-05, 2.638900000000166e-05, 2.64170000000008e-05, 2.6346999999996012e-05, 2.637500000000209e-05, 2.6430000000000897e-05, 2.638900000000166e-05, 2.6402999999994292e-05, 2.640300000000123e-05, 2.6388999999994722e-05, 2.640300000000123e-05, 2.636100000000252e-05, 2.640300000000123e-05, 2.638900000000166e-05, 2.6402000000001757e-05, 2.6444000000000467e-05, 2.64170000000008e-05, 2.6402999999994292e-05, 2.633300000000338e-05]</msg>
<status status="PASS" starttime="20201115 22:11:07.726" endtime="20201115 22:11:07.728"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.721" endtime="20201115 22:11:07.728"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:07.731" endtime="20201115 22:11:07.732"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:07.734" endtime="20201115 22:11:07.754"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.732" endtime="20201115 22:11:07.754"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.729" endtime="20201115 22:11:07.755"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.332" endtime="20201115 22:11:07.755"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.331" endtime="20201115 22:11:07.755"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.330" endtime="20201115 22:11:07.755"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:07.758" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:07.766" endtime="20201115 22:11:07.815"></status>
</kw>
<msg timestamp="20201115 22:11:07.815" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:07.765" endtime="20201115 22:11:07.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:07.818" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:07.816" endtime="20201115 22:11:07.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:07.819" endtime="20201115 22:11:07.823"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.762" endtime="20201115 22:11:07.823"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.760" endtime="20201115 22:11:07.824"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:07.830" endtime="20201115 22:11:08.117"></status>
</kw>
<msg timestamp="20201115 22:11:08.120" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024378736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024405889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:07.829" endtime="20201115 22:11:08.120"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:08.128" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024378736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024405889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:08.121" endtime="20201115 22:11:08.128"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:08.129" endtime="20201115 22:11:08.131"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.826" endtime="20201115 22:11:08.131"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.824" endtime="20201115 22:11:08.132"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:08.136" level="INFO">${RESULT} = [{'time': 0.024405889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.715299999999851e-05, 'source_diff': 2.715299999999851e-05}, {'time': 0.025209306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:08.132" endtime="20201115 22:11:08.136"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:08.150" level="INFO">${OVERHEAD} = {'time': [0.024405889, 0.025209306, 0.026019333, 0.026825, 0.027625181, 0.028426111, 0.029230889, 0.030039, 0.030856181, 0.031657792, 0.032474583, 0.033284264, 0.034093611, 0.034902014, 0.035711708, 0...</msg>
<status status="PASS" starttime="20201115 22:11:08.137" endtime="20201115 22:11:08.150"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:08.154" level="INFO">NAME: 00-overhead-13-set</msg>
<status status="PASS" starttime="20201115 22:11:08.153" endtime="20201115 22:11:08.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:08.157" level="INFO">VALUE: [2.715299999999851e-05, 2.713900000000241e-05, 2.7138999999998942e-05, 2.715300000000198e-05, 2.722299999999983e-05, 2.7124999999999372e-05, 2.716699999999808e-05, 2.7110999999999802e-05, 2.7138999999998942e-05, 2.7138999999995472e-05, 2.713900000000241e-05, 2.713900000000241e-05, 2.715300000000198e-05, 2.712500000000284e-05, 2.713900000000241e-05, 2.715300000000198e-05, 2.713900000000241e-05, 2.7166000000002077e-05, 2.713900000000241e-05, 2.713900000000241e-05, 2.711100000000327e-05, 2.713900000000241e-05, 2.713900000000241e-05, 2.711100000000327e-05, 2.7138999999995472e-05, 2.715300000000198e-05, 2.7152000000002507e-05, 2.7152999999995042e-05, 2.716599999999514e-05, 2.7152999999995042e-05, 2.7180000000001647e-05, 2.7138999999995472e-05, 2.715300000000198e-05, 2.7152999999995042e-05, 2.715300000000198e-05, 2.713900000000241e-05, 2.7208000000000787e-05, 2.715300000000198e-05, 2.7180000000001647e-05, 2.715300000000198e-05, 2.7222000000000357e-05, 2.7166000000002077e-05, 2.713900000000241e-05, 2.7166000000002077e-05, 2.712500000000284e-05, 2.715300000000198e-05, 2.713900000000241e-05, 2.715300000000198e-05, 2.716700000000849e-05, 2.715300000000198e-05]</msg>
<status status="PASS" starttime="20201115 22:11:08.155" endtime="20201115 22:11:08.157"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.151" endtime="20201115 22:11:08.158"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:08.160" endtime="20201115 22:11:08.161"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:08.163" endtime="20201115 22:11:08.183"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.162" endtime="20201115 22:11:08.184"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.158" endtime="20201115 22:11:08.184"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.758" endtime="20201115 22:11:08.184"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.756" endtime="20201115 22:11:08.185"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.756" endtime="20201115 22:11:08.185"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:08.187" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:08.202" endtime="20201115 22:11:08.254"></status>
</kw>
<msg timestamp="20201115 22:11:08.254" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:08.201" endtime="20201115 22:11:08.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:08.257" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:08.255" endtime="20201115 22:11:08.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:08.258" endtime="20201115 22:11:08.260"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.198" endtime="20201115 22:11:08.261"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.189" endtime="20201115 22:11:08.261"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:08.268" endtime="20201115 22:11:08.553"></status>
</kw>
<msg timestamp="20201115 22:11:08.556" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031141417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031169306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:08.266" endtime="20201115 22:11:08.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:08.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031141417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031169306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:08.557" endtime="20201115 22:11:08.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:08.565" endtime="20201115 22:11:08.567"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.264" endtime="20201115 22:11:08.568"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.262" endtime="20201115 22:11:08.568"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:08.572" level="INFO">${RESULT} = [{'time': 0.031169306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7888999999999692e-05, 'source_diff': 2.7888999999999692e-05}, {'time': 0.032024431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:08.569" endtime="20201115 22:11:08.572"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:08.586" level="INFO">${OVERHEAD} = {'time': [0.031169306, 0.032024431, 0.032888375, 0.033758208, 0.034627097, 0.035489139, 0.036355722, 0.037219625, 0.038085653, 0.038958014, 0.039816542, 0.040680667, 0.041536694, 0.042395278, 0.043258...</msg>
<status status="PASS" starttime="20201115 22:11:08.573" endtime="20201115 22:11:08.586"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:08.591" level="INFO">NAME: 00-overhead-14-set</msg>
<status status="PASS" starttime="20201115 22:11:08.590" endtime="20201115 22:11:08.591"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:08.593" level="INFO">VALUE: [2.7888999999999692e-05, 2.7874999999996652e-05, 2.7888999999996222e-05, 2.791599999999589e-05, 2.788900000000316e-05, 2.7958000000001537e-05, 2.788900000000316e-05, 2.7888999999996222e-05, 2.7888999999996222e-05, 2.7958000000001537e-05, 2.788900000000316e-05, 2.7888999999996222e-05, 2.788799999999675e-05, 2.790300000000273e-05, 2.788900000000316e-05, 2.7874999999996652e-05, 2.787500000000359e-05, 2.7874999999996652e-05, 2.788799999999675e-05, 2.790300000000273e-05, 2.7916999999995362e-05, 2.7874999999996652e-05, 2.7888999999996222e-05, 2.7888999999996222e-05, 2.788900000000316e-05, 2.788900000000316e-05, 2.7958000000001537e-05, 2.7874999999996652e-05, 2.7930999999994932e-05, 2.7916000000002827e-05, 2.787500000000359e-05, 2.7888999999996222e-05, 2.7902999999995792e-05, 2.7958000000001537e-05, 2.787500000000359e-05, 2.7874999999996652e-05, 2.7888999999996222e-05, 2.790300000000967e-05, 2.7902999999995792e-05, 2.7930000000009336e-05, 2.788900000000316e-05, 2.7847999999996986e-05, 2.79170000000023e-05, 2.788900000000316e-05, 2.794500000000144e-05, 2.7944000000001967e-05, 2.7916000000002827e-05, 2.7888999999989283e-05, 2.79170000000023e-05, 2.7874999999996652e-05]</msg>
<status status="PASS" starttime="20201115 22:11:08.592" endtime="20201115 22:11:08.594"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.587" endtime="20201115 22:11:08.594"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:08.596" endtime="20201115 22:11:08.598"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:08.600" endtime="20201115 22:11:08.620"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.598" endtime="20201115 22:11:08.620"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.595" endtime="20201115 22:11:08.621"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.187" endtime="20201115 22:11:08.621"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.186" endtime="20201115 22:11:08.621"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.185" endtime="20201115 22:11:08.622"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:08.624" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:08.633" endtime="20201115 22:11:08.687"></status>
</kw>
<msg timestamp="20201115 22:11:08.687" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:08.631" endtime="20201115 22:11:08.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:08.690" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:08.688" endtime="20201115 22:11:08.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:08.691" endtime="20201115 22:11:08.693"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.628" endtime="20201115 22:11:08.693"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.626" endtime="20201115 22:11:08.694"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:08.701" endtime="20201115 22:11:08.984"></status>
</kw>
<msg timestamp="20201115 22:11:08.987" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024439, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024467639, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:11:08.699" endtime="20201115 22:11:08.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:08.995" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024439, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024467639, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:11:08.988" endtime="20201115 22:11:08.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:08.996" endtime="20201115 22:11:08.998"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.696" endtime="20201115 22:11:08.999"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.694" endtime="20201115 22:11:08.999"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:09.003" level="INFO">${RESULT} = [{'time': 0.024467639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8639000000000442e-05, 'source_diff': 2.8639000000000442e-05}, {'time': 0.025386486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:09.000" endtime="20201115 22:11:09.004"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:09.018" level="INFO">${OVERHEAD} = {'time': [0.024467639, 0.025386486, 0.026315389, 0.027235069, 0.028154111, 0.029079028, 0.029992347, 0.030915694, 0.031832472, 0.032744222, 0.033662264, 0.034588694, 0.035511097, 0.036429181, 0.037346...</msg>
<status status="PASS" starttime="20201115 22:11:09.004" endtime="20201115 22:11:09.018"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:09.022" level="INFO">NAME: 00-overhead-15-set</msg>
<status status="PASS" starttime="20201115 22:11:09.021" endtime="20201115 22:11:09.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:09.025" level="INFO">VALUE: [2.8639000000000442e-05, 2.8611000000001302e-05, 2.8639000000000442e-05, 2.8638000000000968e-05, 2.8653000000000012e-05, 2.8666999999999582e-05, 2.8639000000000442e-05, 2.8638000000000968e-05, 2.865300000000348e-05, 2.863900000000391e-05, 2.8666999999996112e-05, 2.8652000000004008e-05, 2.8638999999996972e-05, 2.8652999999996542e-05, 2.863900000000391e-05, 2.8652999999996542e-05, 2.8638999999996972e-05, 2.863900000000391e-05, 2.863900000000391e-05, 2.8624999999997403e-05, 2.8638999999996972e-05, 2.863900000000391e-05, 2.8638999999996972e-05, 2.8652000000004008e-05, 2.8624999999997403e-05, 2.8652999999996542e-05, 2.8638999999996972e-05, 2.8638999999996972e-05, 2.8652999999996542e-05, 2.8638999999996972e-05, 2.863900000000391e-05, 2.863900000000391e-05, 2.863900000000391e-05, 2.8666999999996112e-05, 2.863900000000391e-05, 2.8666000000003578e-05, 2.8554999999999553e-05, 2.862500000000434e-05, 2.863900000000391e-05, 2.8612000000004245e-05, 2.865300000000348e-05, 2.8638999999996972e-05, 2.866599999999664e-05, 2.8666000000010516e-05, 2.8610999999997833e-05, 2.8638999999996972e-05, 2.863900000001085e-05, 2.8652000000004008e-05, 2.86379999999975e-05, 2.8638999999996972e-05]</msg>
<status status="PASS" starttime="20201115 22:11:09.023" endtime="20201115 22:11:09.025"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.018" endtime="20201115 22:11:09.026"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:09.028" endtime="20201115 22:11:09.029"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:09.032" endtime="20201115 22:11:09.051"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.030" endtime="20201115 22:11:09.052"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.026" endtime="20201115 22:11:09.052"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.624" endtime="20201115 22:11:09.052"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.623" endtime="20201115 22:11:09.053"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.622" endtime="20201115 22:11:09.053"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:09.055" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:09.064" endtime="20201115 22:11:09.121"></status>
</kw>
<msg timestamp="20201115 22:11:09.122" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:09.063" endtime="20201115 22:11:09.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:09.124" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:09.123" endtime="20201115 22:11:09.124"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:09.125" endtime="20201115 22:11:09.127"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.060" endtime="20201115 22:11:09.127"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.058" endtime="20201115 22:11:09.128"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:09.134" endtime="20201115 22:11:09.419"></status>
</kw>
<msg timestamp="20201115 22:11:09.422" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024581847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02461125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:11:09.133" endtime="20201115 22:11:09.423"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:09.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024581847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02461125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:11:09.423" endtime="20201115 22:11:09.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:09.432" endtime="20201115 22:11:09.433"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.130" endtime="20201115 22:11:09.434"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.128" endtime="20201115 22:11:09.434"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:09.439" level="INFO">${RESULT} = [{'time': 0.02461125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9403000000000762e-05, 'source_diff': 2.9403000000000762e-05}, {'time': 0.025585764, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:11:09.435" endtime="20201115 22:11:09.439"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:09.452" level="INFO">${OVERHEAD} = {'time': [0.02461125, 0.025585764, 0.026563458, 0.027547069, 0.028522819, 0.029508, 0.030484806, 0.031461931, 0.032432444, 0.033408264, 0.034387819, 0.035359306, 0.036336, 0.037313278, 0.038285097, 0....</msg>
<status status="PASS" starttime="20201115 22:11:09.439" endtime="20201115 22:11:09.453"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:09.457" level="INFO">NAME: 00-overhead-16-set</msg>
<status status="PASS" starttime="20201115 22:11:09.456" endtime="20201115 22:11:09.458"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:09.460" level="INFO">VALUE: [2.9403000000000762e-05, 2.9389000000001192e-05, 2.9375000000001622e-05, 2.9375000000001622e-05, 2.9388000000001718e-05, 2.9403000000000762e-05, 2.9374999999998153e-05, 2.9388999999997723e-05, 2.9318999999999873e-05, 2.9388999999997723e-05, 2.9374999999998153e-05, 2.9374999999998153e-05, 2.9388999999997723e-05, 2.9360999999998583e-05, 2.9360999999998583e-05, 2.9374999999998153e-05, 2.9374999999998153e-05, 2.937500000000509e-05, 2.942999999999696e-05, 2.938900000000466e-05, 2.938900000000466e-05, 2.9346999999999013e-05, 2.9374999999998153e-05, 2.938900000000466e-05, 2.937500000000509e-05, 2.9402999999997292e-05, 2.938900000000466e-05, 2.9388999999997723e-05, 2.9388999999997723e-05, 2.938900000000466e-05, 2.9388999999997723e-05, 2.9402999999997292e-05, 2.938900000000466e-05, 2.9388999999997723e-05, 2.940300000000423e-05, 2.9402999999997292e-05, 2.9388999999997723e-05, 2.934700000000595e-05, 2.9333000000006382e-05, 2.938900000000466e-05, 2.9402999999997292e-05, 2.938900000000466e-05, 2.9374999999998153e-05, 2.9458000000009976e-05, 2.9388999999990784e-05, 2.940300000001117e-05, 2.94170000000038e-05, 2.9374999999998153e-05, 2.9444000000003467e-05, 2.9374999999998153e-05]</msg>
<status status="PASS" starttime="20201115 22:11:09.458" endtime="20201115 22:11:09.461"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.453" endtime="20201115 22:11:09.461"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:09.463" endtime="20201115 22:11:09.465"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:09.467" endtime="20201115 22:11:09.486"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.465" endtime="20201115 22:11:09.487"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.462" endtime="20201115 22:11:09.487"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.056" endtime="20201115 22:11:09.488"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.054" endtime="20201115 22:11:09.488"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.053" endtime="20201115 22:11:09.488"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:09.490" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:09.499" endtime="20201115 22:11:09.561"></status>
</kw>
<msg timestamp="20201115 22:11:09.561" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:09.498" endtime="20201115 22:11:09.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:09.564" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:09.562" endtime="20201115 22:11:09.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:09.565" endtime="20201115 22:11:09.567"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.495" endtime="20201115 22:11:09.567"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.493" endtime="20201115 22:11:09.568"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:09.574" endtime="20201115 22:11:09.860"></status>
</kw>
<msg timestamp="20201115 22:11:09.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026246139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026276264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:09.572" endtime="20201115 22:11:09.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:09.871" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026246139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026276264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:09.864" endtime="20201115 22:11:09.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:09.872" endtime="20201115 22:11:09.874"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.570" endtime="20201115 22:11:09.874"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.568" endtime="20201115 22:11:09.875"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:09.879" level="INFO">${RESULT} = [{'time': 0.026276264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0124999999998903e-05, 'source_diff': 3.0124999999998903e-05}, {'time': 0.027320583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:09.875" endtime="20201115 22:11:09.879"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:09.893" level="INFO">${OVERHEAD} = {'time': [0.026276264, 0.027320583, 0.028359431, 0.029404083, 0.030439764, 0.031474153, 0.032518528, 0.0335545, 0.034584236, 0.035610014, 0.036644417, 0.0376795, 0.038707986, 0.039745903, 0.040787069,...</msg>
<status status="PASS" starttime="20201115 22:11:09.880" endtime="20201115 22:11:09.893"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:09.898" level="INFO">NAME: 00-overhead-17-set</msg>
<status status="PASS" starttime="20201115 22:11:09.897" endtime="20201115 22:11:09.898"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:09.900" level="INFO">VALUE: [3.0124999999998903e-05, 3.0124999999998903e-05, 3.019500000000022e-05, 3.0125000000002372e-05, 3.0167000000001082e-05, 3.0124999999998903e-05, 3.0138999999998473e-05, 3.0124999999998903e-05, 3.0096999999999763e-05, 3.018100000000412e-05, 3.0152999999998042e-05, 3.0152999999998042e-05, 3.0124999999998903e-05, 3.0194999999996752e-05, 3.0124999999998903e-05, 3.0110999999999333e-05, 3.0124999999998903e-05, 3.0124999999998903e-05, 3.0110999999999333e-05, 3.0110999999999333e-05, 3.0055000000001053e-05, 3.020799999999685e-05, 3.0138999999998473e-05, 3.0152999999998042e-05, 3.0138999999998473e-05, 3.0124999999998903e-05, 3.0124999999998903e-05, 3.0124999999998903e-05, 3.0124999999998903e-05, 3.0138999999998473e-05, 3.0124999999998903e-05, 3.0180999999997182e-05, 3.0138999999998473e-05, 3.0138999999998473e-05, 3.0110999999999333e-05, 3.0083999999999667e-05, 3.013900000001235e-05, 3.018100000000412e-05, 3.0138999999998473e-05, 3.0152000000005508e-05, 3.0138999999998473e-05, 3.0138999999998473e-05, 3.019500000001063e-05, 3.013900000001235e-05, 3.012500000000584e-05, 3.0110999999999333e-05, 3.0110999999999333e-05, 3.0138999999998473e-05, 3.012500000000584e-05, 3.0138999999998473e-05]</msg>
<status status="PASS" starttime="20201115 22:11:09.899" endtime="20201115 22:11:09.901"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.894" endtime="20201115 22:11:09.901"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:09.903" endtime="20201115 22:11:09.905"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:09.907" endtime="20201115 22:11:09.927"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.905" endtime="20201115 22:11:09.927"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.902" endtime="20201115 22:11:09.928"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.491" endtime="20201115 22:11:09.928"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.489" endtime="20201115 22:11:09.928"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.488" endtime="20201115 22:11:09.928"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:09.931" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:09.939" endtime="20201115 22:11:10.002"></status>
</kw>
<msg timestamp="20201115 22:11:10.003" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:09.938" endtime="20201115 22:11:10.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:10.005" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:10.004" endtime="20201115 22:11:10.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:10.006" endtime="20201115 22:11:10.008"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.935" endtime="20201115 22:11:10.009"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.933" endtime="20201115 22:11:10.009"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:10.015" endtime="20201115 22:11:10.301"></status>
</kw>
<msg timestamp="20201115 22:11:10.305" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024447361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024478306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:10.014" endtime="20201115 22:11:10.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:10.313" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024447361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024478306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:10.306" endtime="20201115 22:11:10.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:10.314" endtime="20201115 22:11:10.316"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.011" endtime="20201115 22:11:10.316"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.010" endtime="20201115 22:11:10.317"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:10.321" level="INFO">${RESULT} = [{'time': 0.024478306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.09449999999975e-05, 'source_diff': 3.09449999999975e-05}, {'time': 0.025574903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:11:10.318" endtime="20201115 22:11:10.321"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:10.335" level="INFO">${OVERHEAD} = {'time': [0.024478306, 0.025574903, 0.026676194, 0.027773736, 0.028867306, 0.029956278, 0.031058236, 0.032161139, 0.033249139, 0.034333667, 0.035421028, 0.036523125, 0.037612708, 0.038712611, 0.039804...</msg>
<status status="PASS" starttime="20201115 22:11:10.322" endtime="20201115 22:11:10.335"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:10.339" level="INFO">NAME: 00-overhead-18-set</msg>
<status status="PASS" starttime="20201115 22:11:10.338" endtime="20201115 22:11:10.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:10.342" level="INFO">VALUE: [3.09449999999975e-05, 3.087499999999965e-05, 3.088799999999975e-05, 3.086100000000008e-05, 3.087499999999965e-05, 3.086100000000008e-05, 3.087499999999965e-05, 3.086100000000008e-05, 3.090299999999879e-05, 3.087499999999965e-05, 3.088899999999922e-05, 3.088899999999922e-05, 3.090199999999932e-05, 3.09579999999976e-05, 3.088799999999975e-05, 3.094500000000444e-05, 3.087499999999965e-05, 3.087499999999965e-05, 3.088899999999922e-05, 3.088899999999922e-05, 3.090199999999932e-05, 3.0846999999993574e-05, 3.083300000000094e-05, 3.087499999999965e-05, 3.088899999999922e-05, 3.087499999999965e-05, 3.087499999999965e-05, 3.088899999999922e-05, 3.092999999999846e-05, 3.088900000000616e-05, 3.087499999999965e-05, 3.092999999999846e-05, 3.090300000000573e-05, 3.086100000000008e-05, 3.088899999999922e-05, 3.087499999999965e-05, 3.087499999999965e-05, 3.090299999999879e-05, 3.087499999999965e-05, 3.088900000000616e-05, 3.088900000000616e-05, 3.087499999999965e-05, 3.0916999999991424e-05, 3.088900000000616e-05, 3.090300000001267e-05, 3.0834000000007356e-05, 3.087499999999965e-05, 3.087499999999965e-05, 3.0888999999992284e-05, 3.0888999999992284e-05]</msg>
<status status="PASS" starttime="20201115 22:11:10.341" endtime="20201115 22:11:10.342"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.336" endtime="20201115 22:11:10.343"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:10.345" endtime="20201115 22:11:10.346"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:10.349" endtime="20201115 22:11:10.368"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.347" endtime="20201115 22:11:10.369"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.343" endtime="20201115 22:11:10.369"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.931" endtime="20201115 22:11:10.369"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.930" endtime="20201115 22:11:10.370"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.929" endtime="20201115 22:11:10.370"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:10.372" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:10.381" endtime="20201115 22:11:10.447"></status>
</kw>
<msg timestamp="20201115 22:11:10.447" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:10.379" endtime="20201115 22:11:10.447"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:10.450" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:10.448" endtime="20201115 22:11:10.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:10.451" endtime="20201115 22:11:10.452"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.377" endtime="20201115 22:11:10.453"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.375" endtime="20201115 22:11:10.453"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:10.460" endtime="20201115 22:11:10.747"></status>
</kw>
<msg timestamp="20201115 22:11:10.750" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024506903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024538514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:10.458" endtime="20201115 22:11:10.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:10.758" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024506903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024538514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:10.751" endtime="20201115 22:11:10.758"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:10.759" endtime="20201115 22:11:10.761"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.456" endtime="20201115 22:11:10.761"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.454" endtime="20201115 22:11:10.762"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:10.766" level="INFO">${RESULT} = [{'time': 0.024538514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.161100000000083e-05, 'source_diff': 3.161100000000083e-05}, {'time': 0.025683208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:10.762" endtime="20201115 22:11:10.766"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:10.780" level="INFO">${OVERHEAD} = {'time': [0.024538514, 0.025683208, 0.02682925, 0.027980319, 0.029126111, 0.030280042, 0.031424611, 0.032585792, 0.033742847, 0.034905153, 0.036060361, 0.037210903, 0.038370431, 0.039519403, 0.0406683...</msg>
<status status="PASS" starttime="20201115 22:11:10.767" endtime="20201115 22:11:10.780"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:10.784" level="INFO">NAME: 00-overhead-19-set</msg>
<status status="PASS" starttime="20201115 22:11:10.783" endtime="20201115 22:11:10.785"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:10.787" level="INFO">VALUE: [3.161100000000083e-05, 3.16250000000004e-05, 3.16250000000004e-05, 3.16250000000004e-05, 3.163899999999997e-05, 3.163899999999997e-05, 3.154199999999552e-05, 3.165299999999954e-05, 3.163899999999997e-05, 3.16250000000004e-05, 3.163899999999997e-05, 3.1624999999993464e-05, 3.1612000000000307e-05, 3.163899999999997e-05, 3.16250000000004e-05, 3.16250000000004e-05, 3.16250000000004e-05, 3.163899999999997e-05, 3.163899999999997e-05, 3.16250000000004e-05, 3.161100000000083e-05, 3.16250000000004e-05, 3.169499999999825e-05, 3.165200000000007e-05, 3.16380000000005e-05, 3.163899999999997e-05, 3.163899999999997e-05, 3.16250000000004e-05, 3.15700000000016e-05, 3.16250000000004e-05, 3.161100000000083e-05, 3.163899999999997e-05, 3.163899999999997e-05, 3.169499999999825e-05, 3.16380000000005e-05, 3.163899999999997e-05, 3.163899999999997e-05, 3.163899999999997e-05, 3.1624999999993464e-05, 3.1596999999994324e-05, 3.163899999999997e-05, 3.166599999999964e-05, 3.1612000000000307e-05, 3.162500000000734e-05, 3.165199999999313e-05, 3.165199999999313e-05, 3.15970000000082e-05, 3.163899999999997e-05, 3.168100000000562e-05, 3.158400000000117e-05]</msg>
<status status="PASS" starttime="20201115 22:11:10.785" endtime="20201115 22:11:10.787"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.781" endtime="20201115 22:11:10.788"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:10.790" endtime="20201115 22:11:10.791"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:10.793" endtime="20201115 22:11:10.813"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.792" endtime="20201115 22:11:10.813"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.788" endtime="20201115 22:11:10.814"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.373" endtime="20201115 22:11:10.814"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.371" endtime="20201115 22:11:10.814"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.370" endtime="20201115 22:11:10.815"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:10.817" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:10.826" endtime="20201115 22:11:10.894"></status>
</kw>
<msg timestamp="20201115 22:11:10.895" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:10.824" endtime="20201115 22:11:10.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:10.897" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:10.896" endtime="20201115 22:11:10.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:10.899" endtime="20201115 22:11:10.901"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.821" endtime="20201115 22:11:10.901"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.819" endtime="20201115 22:11:10.902"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:10.908" endtime="20201115 22:11:11.195"></status>
</kw>
<msg timestamp="20201115 22:11:11.199" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024485847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024518222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:10.907" endtime="20201115 22:11:11.199"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:11.206" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024485847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024518222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:11.200" endtime="20201115 22:11:11.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:11.208" endtime="20201115 22:11:11.210"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.904" endtime="20201115 22:11:11.210"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.902" endtime="20201115 22:11:11.211"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:11.215" level="INFO">${RESULT} = [{'time': 0.024518222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.2374999999997683e-05, 'source_diff': 3.2374999999997683e-05}, {'time': 0.025737014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:11.211" endtime="20201115 22:11:11.215"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:11.230" level="INFO">${OVERHEAD} = {'time': [0.024518222, 0.025737014, 0.026942417, 0.028146306, 0.029364486, 0.030581361, 0.031799819, 0.033017708, 0.034221917, 0.035425833, 0.036648681, 0.037860972, 0.039076694, 0.040292514, 0.041502...</msg>
<status status="PASS" starttime="20201115 22:11:11.216" endtime="20201115 22:11:11.230"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:11.234" level="INFO">NAME: 00-overhead-20-set</msg>
<status status="PASS" starttime="20201115 22:11:11.233" endtime="20201115 22:11:11.235"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:11.237" level="INFO">VALUE: [3.2374999999997683e-05, 3.240300000000029e-05, 3.237500000000115e-05, 3.2362000000001057e-05, 3.2374999999997683e-05, 3.240300000000029e-05, 3.237500000000115e-05, 3.238900000000072e-05, 3.240300000000029e-05, 3.2374999999994214e-05, 3.237500000000115e-05, 3.237500000000115e-05, 3.237500000000115e-05, 3.2444999999999e-05, 3.237500000000115e-05, 3.244400000000647e-05, 3.238900000000072e-05, 3.2362000000001057e-05, 3.238799999999431e-05, 3.242999999999996e-05, 3.237500000000115e-05, 3.237500000000115e-05, 3.237500000000115e-05, 3.237500000000115e-05, 3.2346999999995074e-05, 3.237500000000115e-05, 3.234700000000201e-05, 3.241600000000039e-05, 3.238900000000072e-05, 3.234800000000149e-05, 3.236100000000158e-05, 3.2346999999995074e-05, 3.238900000000766e-05, 3.2388999999993784e-05, 3.238800000000819e-05, 3.231900000000287e-05, 3.237500000000115e-05, 3.240300000000029e-05, 3.243099999999943e-05, 3.2388999999993784e-05, 3.237500000000115e-05, 3.234700000000201e-05, 3.237500000000115e-05, 3.237500000000115e-05, 3.237500000000115e-05, 3.240200000000082e-05, 3.236100000000852e-05, 3.237500000000115e-05, 3.2360999999994644e-05, 3.236100000000852e-05]</msg>
<status status="PASS" starttime="20201115 22:11:11.235" endtime="20201115 22:11:11.237"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.231" endtime="20201115 22:11:11.238"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:11.240" endtime="20201115 22:11:11.241"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:11.244" endtime="20201115 22:11:11.263"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.242" endtime="20201115 22:11:11.264"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.238" endtime="20201115 22:11:11.264"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.817" endtime="20201115 22:11:11.265"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.816" endtime="20201115 22:11:11.265"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.815" endtime="20201115 22:11:11.265"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:11.267" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:11.277" endtime="20201115 22:11:11.350"></status>
</kw>
<msg timestamp="20201115 22:11:11.351" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:11.275" endtime="20201115 22:11:11.351"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:11.353" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:11.352" endtime="20201115 22:11:11.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:11.354" endtime="20201115 22:11:11.356"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.273" endtime="20201115 22:11:11.356"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.270" endtime="20201115 22:11:11.357"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:11.364" endtime="20201115 22:11:11.649"></status>
</kw>
<msg timestamp="20201115 22:11:11.652" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026956986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026990153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:11.362" endtime="20201115 22:11:11.653"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:11.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026956986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026990153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:11.654" endtime="20201115 22:11:11.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:11.662" endtime="20201115 22:11:11.664"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.359" endtime="20201115 22:11:11.665"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.358" endtime="20201115 22:11:11.665"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:11.670" level="INFO">${RESULT} = [{'time': 0.026990153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.316700000000061e-05, 'source_diff': 3.316700000000061e-05}, {'time': 0.028274014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:11.666" endtime="20201115 22:11:11.670"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:11.684" level="INFO">${OVERHEAD} = {'time': [0.026990153, 0.028274014, 0.0295575, 0.030830653, 0.032096917, 0.033364806, 0.034643861, 0.035925681, 0.037204722, 0.038470306, 0.039745208, 0.041013333, 0.042284875, 0.043562319, 0.04483640...</msg>
<status status="PASS" starttime="20201115 22:11:11.671" endtime="20201115 22:11:11.684"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:11.689" level="INFO">NAME: 00-overhead-21-set</msg>
<status status="PASS" starttime="20201115 22:11:11.688" endtime="20201115 22:11:11.689"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:11.691" level="INFO">VALUE: [3.316700000000061e-05, 3.3110999999998864e-05, 3.3110999999998864e-05, 3.3124999999998433e-05, 3.315300000000104e-05, 3.3124999999994964e-05, 3.3124999999994964e-05, 3.313900000000147e-05, 3.31250000000019e-05, 3.31250000000019e-05, 3.3138999999994534e-05, 3.311100000000233e-05, 3.311100000000233e-05, 3.3138000000002e-05, 3.3166999999993674e-05, 3.3138999999994534e-05, 3.320799999999985e-05, 3.309800000000224e-05, 3.31250000000019e-05, 3.31250000000019e-05, 3.31250000000019e-05, 3.315300000000104e-05, 3.31250000000019e-05, 3.311100000000233e-05, 3.318000000000071e-05, 3.311200000000181e-05, 3.311100000000233e-05, 3.3110999999995394e-05, 3.3124999999994964e-05, 3.315199999999463e-05, 3.3124999999994964e-05, 3.312500000000884e-05, 3.3124999999994964e-05, 3.3124999999994964e-05, 3.3110999999988455e-05, 3.3124999999994964e-05, 3.315199999999463e-05, 3.3124999999994964e-05, 3.313900000000147e-05, 3.3124999999994964e-05, 3.313799999998812e-05, 3.313799999998812e-05, 3.313900000000147e-05, 3.3070000000010036e-05, 3.312500000000884e-05, 3.3124999999994964e-05, 3.313900000000147e-05, 3.311100000000233e-05, 3.3096999999995824e-05, 3.313900000000147e-05]</msg>
<status status="PASS" starttime="20201115 22:11:11.690" endtime="20201115 22:11:11.692"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.685" endtime="20201115 22:11:11.692"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:11.694" endtime="20201115 22:11:11.696"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:11.698" endtime="20201115 22:11:11.718"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.696" endtime="20201115 22:11:11.718"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.693" endtime="20201115 22:11:11.719"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.268" endtime="20201115 22:11:11.719"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.266" endtime="20201115 22:11:11.720"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.265" endtime="20201115 22:11:11.720"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:11.722" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:11.731" endtime="20201115 22:11:11.806"></status>
</kw>
<msg timestamp="20201115 22:11:11.806" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:11.729" endtime="20201115 22:11:11.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:11.809" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:11.807" endtime="20201115 22:11:11.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:11.810" endtime="20201115 22:11:11.812"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.727" endtime="20201115 22:11:11.813"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.724" endtime="20201115 22:11:11.813"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:11.820" endtime="20201115 22:11:12.105"></status>
</kw>
<msg timestamp="20201115 22:11:12.108" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025149292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025183167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:11.818" endtime="20201115 22:11:12.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:12.116" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025149292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025183167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:12.109" endtime="20201115 22:11:12.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:12.118" endtime="20201115 22:11:12.119"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.815" endtime="20201115 22:11:12.120"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.814" endtime="20201115 22:11:12.120"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:12.125" level="INFO">${RESULT} = [{'time': 0.025183167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3874999999999184e-05, 'source_diff': 3.3874999999999184e-05}, {'time': 0.026510056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:12.121" endtime="20201115 22:11:12.125"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:12.138" level="INFO">${OVERHEAD} = {'time': [0.025183167, 0.026510056, 0.027836764, 0.029176042, 0.030511208, 0.031850583, 0.033179375, 0.034522222, 0.035857889, 0.037200458, 0.038541694, 0.039877667, 0.041216167, 0.042544514, 0.043889...</msg>
<status status="PASS" starttime="20201115 22:11:12.126" endtime="20201115 22:11:12.139"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:12.143" level="INFO">NAME: 00-overhead-22-set</msg>
<status status="PASS" starttime="20201115 22:11:12.142" endtime="20201115 22:11:12.143"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:12.145" level="INFO">VALUE: [3.3874999999999184e-05, 3.386199999999909e-05, 3.3860999999999614e-05, 3.380600000000081e-05, 3.388900000000222e-05, 3.3790999999998295e-05, 3.3860999999996144e-05, 3.3860999999996144e-05, 3.3860999999996144e-05, 3.3818999999997434e-05, 3.381900000000437e-05, 3.3874999999995714e-05, 3.3860999999996144e-05, 3.39450000000005e-05, 3.3902999999994854e-05, 3.386200000000256e-05, 3.3846999999996574e-05, 3.3846999999996574e-05, 3.388800000000275e-05, 3.3874999999995714e-05, 3.3888999999995284e-05, 3.381999999999691e-05, 3.393000000000146e-05, 3.3860999999996144e-05, 3.388900000000222e-05, 3.387500000000265e-05, 3.3860999999996144e-05, 3.387500000000265e-05, 3.393100000000093e-05, 3.3888999999995284e-05, 3.384700000000351e-05, 3.3860999999996144e-05, 3.387500000000265e-05, 3.387500000000265e-05, 3.387500000000265e-05, 3.387500000000265e-05, 3.381900000000437e-05, 3.387500000000265e-05, 3.3860999999996144e-05, 3.387500000000265e-05, 3.388799999999581e-05, 3.387500000000265e-05, 3.383399999999648e-05, 3.387500000000265e-05, 3.387500000000265e-05, 3.3888999999995284e-05, 3.387500000000265e-05, 3.388900000000916e-05, 3.387500000000265e-05, 3.379200000000471e-05]</msg>
<status status="PASS" starttime="20201115 22:11:12.144" endtime="20201115 22:11:12.146"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.139" endtime="20201115 22:11:12.147"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:12.149" endtime="20201115 22:11:12.150"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:12.153" endtime="20201115 22:11:12.172"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.151" endtime="20201115 22:11:12.173"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.147" endtime="20201115 22:11:12.173"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.722" endtime="20201115 22:11:12.173"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.721" endtime="20201115 22:11:12.174"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.720" endtime="20201115 22:11:12.174"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:12.176" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:12.185" endtime="20201115 22:11:12.263"></status>
</kw>
<msg timestamp="20201115 22:11:12.263" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:12.183" endtime="20201115 22:11:12.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:12.266" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:12.264" endtime="20201115 22:11:12.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:12.267" endtime="20201115 22:11:12.269"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.181" endtime="20201115 22:11:12.269"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.179" endtime="20201115 22:11:12.270"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:12.276" endtime="20201115 22:11:12.581"></status>
</kw>
<msg timestamp="20201115 22:11:12.585" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024590847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024625431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:12.274" endtime="20201115 22:11:12.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:12.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024590847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024625431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:12.586" endtime="20201115 22:11:12.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:12.594" endtime="20201115 22:11:12.595"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.272" endtime="20201115 22:11:12.596"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.270" endtime="20201115 22:11:12.596"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:12.601" level="INFO">${RESULT} = [{'time': 0.024625431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.45840000000007e-05, 'source_diff': 3.45840000000007e-05}, {'time': 0.026021375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:11:12.597" endtime="20201115 22:11:12.601"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:12.615" level="INFO">${OVERHEAD} = {'time': [0.024625431, 0.026021375, 0.027428931, 0.02883275, 0.030240889, 0.031648097, 0.033043542, 0.034432736, 0.035838153, 0.037243625, 0.038645611, 0.040054097, 0.041456028, 0.042853903, 0.0442467...</msg>
<status status="PASS" starttime="20201115 22:11:12.602" endtime="20201115 22:11:12.615"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:12.619" level="INFO">NAME: 00-overhead-23-set</msg>
<status status="PASS" starttime="20201115 22:11:12.618" endtime="20201115 22:11:12.620"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:12.622" level="INFO">VALUE: [3.45840000000007e-05, 3.4611000000000364e-05, 3.4624999999999934e-05, 3.4597000000000794e-05, 3.4652999999999073e-05, 3.4610999999996894e-05, 3.463900000000297e-05, 3.4624999999996464e-05, 3.4624999999996464e-05, 3.46250000000034e-05, 3.463900000000297e-05, 3.4638999999996034e-05, 3.456999999999766e-05, 3.4652999999995604e-05, 3.463900000000297e-05, 3.4624999999996464e-05, 3.4624999999996464e-05, 3.46250000000034e-05, 3.4610999999996894e-05, 3.4624999999996464e-05, 3.466700000000211e-05, 3.463900000000297e-05, 3.46250000000034e-05, 3.4624999999996464e-05, 3.4610999999996894e-05, 3.463799999999656e-05, 3.4638999999996034e-05, 3.455599999999809e-05, 3.4624999999996464e-05, 3.4610999999989955e-05, 3.462500000001034e-05, 3.463900000000297e-05, 3.461100000000383e-05, 3.462500000001034e-05, 3.461100000000383e-05, 3.458399999999029e-05, 3.4638999999989095e-05, 3.4624999999996464e-05, 3.4638999999989095e-05, 3.4624999999996464e-05, 3.463900000000297e-05, 3.458300000000469e-05, 3.461100000000383e-05, 3.461100000000383e-05, 3.461100000000383e-05, 3.462500000001034e-05, 3.4624999999996464e-05, 3.4596999999997324e-05, 3.461100000000383e-05, 3.4624999999996464e-05]</msg>
<status status="PASS" starttime="20201115 22:11:12.620" endtime="20201115 22:11:12.623"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.616" endtime="20201115 22:11:12.623"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:12.625" endtime="20201115 22:11:12.627"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:12.629" endtime="20201115 22:11:12.648"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.627" endtime="20201115 22:11:12.649"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.624" endtime="20201115 22:11:12.650"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.176" endtime="20201115 22:11:12.650"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.175" endtime="20201115 22:11:12.650"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.174" endtime="20201115 22:11:12.650"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:12.652" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:12.661" endtime="20201115 22:11:12.743"></status>
</kw>
<msg timestamp="20201115 22:11:12.743" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:12.660" endtime="20201115 22:11:12.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:12.746" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:12.744" endtime="20201115 22:11:12.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:12.747" endtime="20201115 22:11:12.748"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.657" endtime="20201115 22:11:12.749"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.655" endtime="20201115 22:11:12.750"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:12.757" endtime="20201115 22:11:13.044"></status>
</kw>
<msg timestamp="20201115 22:11:13.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024791083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024826444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:12.755" endtime="20201115 22:11:13.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:13.055" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024791083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024826444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:13.049" endtime="20201115 22:11:13.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:13.057" endtime="20201115 22:11:13.058"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.752" endtime="20201115 22:11:13.059"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.750" endtime="20201115 22:11:13.059"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:13.063" level="INFO">${RESULT} = [{'time': 0.024826444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5361000000001114e-05, 'source_diff': 3.5361000000001114e-05}, {'time': 0.026294764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:13.060" endtime="20201115 22:11:13.064"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:13.078" level="INFO">${OVERHEAD} = {'time': [0.024826444, 0.026294764, 0.027763958, 0.029226486, 0.030682306, 0.032144792, 0.033610292, 0.035081403, 0.036544125, 0.038011569, 0.039474917, 0.040940778, 0.042410056, 0.043870556, 0.045322...</msg>
<status status="PASS" starttime="20201115 22:11:13.065" endtime="20201115 22:11:13.078"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:13.082" level="INFO">NAME: 00-overhead-24-set</msg>
<status status="PASS" starttime="20201115 22:11:13.081" endtime="20201115 22:11:13.083"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:13.085" level="INFO">VALUE: [3.5361000000001114e-05, 3.5361000000001114e-05, 3.5374999999997214e-05, 3.544399999999906e-05, 3.534800000000102e-05, 3.5374999999997214e-05, 3.531999999999841e-05, 3.5360999999997644e-05, 3.5360999999997644e-05, 3.537500000000415e-05, 3.5374999999997214e-05, 3.5360999999997644e-05, 3.537500000000415e-05, 3.5388999999996784e-05, 3.5374999999997214e-05, 3.5360999999997644e-05, 3.5319000000005873e-05, 3.536199999999712e-05, 3.5374999999997214e-05, 3.5388999999996784e-05, 3.5374999999997214e-05, 3.531999999999841e-05, 3.5318999999998935e-05, 3.537500000000415e-05, 3.5388999999996784e-05, 3.537500000000415e-05, 3.5360999999997644e-05, 3.5388999999996784e-05, 3.536199999999712e-05, 3.5360999999997644e-05, 3.5360999999997644e-05, 3.536100000001152e-05, 3.536199999999712e-05, 3.537500000000415e-05, 3.536100000001152e-05, 3.537500000000415e-05, 3.5388999999996784e-05, 3.5332999999998504e-05, 3.538900000001066e-05, 3.5416999999995924e-05, 3.537500000000415e-05, 3.537500000000415e-05, 3.537500000000415e-05, 3.5416999999995924e-05, 3.5346999999991136e-05, 3.537500000000415e-05, 3.534800000000449e-05, 3.5360999999997644e-05, 3.5388999999996784e-05, 3.5332999999998504e-05]</msg>
<status status="PASS" starttime="20201115 22:11:13.083" endtime="20201115 22:11:13.085"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.079" endtime="20201115 22:11:13.086"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:13.088" endtime="20201115 22:11:13.089"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:13.091" endtime="20201115 22:11:13.111"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.090" endtime="20201115 22:11:13.111"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.086" endtime="20201115 22:11:13.112"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.653" endtime="20201115 22:11:13.112"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.651" endtime="20201115 22:11:13.113"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.651" endtime="20201115 22:11:13.113"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:13.115" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:13.124" endtime="20201115 22:11:13.211"></status>
</kw>
<msg timestamp="20201115 22:11:13.212" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:13.122" endtime="20201115 22:11:13.213"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:13.218" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:13.215" endtime="20201115 22:11:13.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:13.220" endtime="20201115 22:11:13.224"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.120" endtime="20201115 22:11:13.225"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.118" endtime="20201115 22:11:13.226"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:13.239" endtime="20201115 22:11:13.536"></status>
</kw>
<msg timestamp="20201115 22:11:13.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026556458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026592556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:13.236" endtime="20201115 22:11:13.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:13.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026556458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026592556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:13.540" endtime="20201115 22:11:13.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:13.555" endtime="20201115 22:11:13.557"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.231" endtime="20201115 22:11:13.558"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.227" endtime="20201115 22:11:13.558"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:13.563" level="INFO">${RESULT} = [{'time': 0.026592556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.60979999999983e-05, 'source_diff': 3.60979999999983e-05}, {'time': 0.028109528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:11:13.559" endtime="20201115 22:11:13.563"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:13.577" level="INFO">${OVERHEAD} = {'time': [0.026592556, 0.028109528, 0.029644958, 0.031173292, 0.032691333, 0.034213972, 0.035746986, 0.037267194, 0.038785597, 0.040319806, 0.041854931, 0.043382333, 0.044909625, 0.046427028, 0.047943...</msg>
<status status="PASS" starttime="20201115 22:11:13.564" endtime="20201115 22:11:13.577"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:13.581" level="INFO">NAME: 00-overhead-25-set</msg>
<status status="PASS" starttime="20201115 22:11:13.580" endtime="20201115 22:11:13.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:13.584" level="INFO">VALUE: [3.60979999999983e-05, 3.6111000000001864e-05, 3.6110999999998394e-05, 3.6124999999997964e-05, 3.618000000000371e-05, 3.611100000000533e-05, 3.6124999999997964e-05, 3.6124999999997964e-05, 3.6096999999998824e-05, 3.6124999999997964e-05, 3.6138999999997534e-05, 3.618000000000371e-05, 3.618100000000318e-05, 3.615300000000404e-05, 3.6124999999997964e-05, 3.617999999999677e-05, 3.6110999999998394e-05, 3.6152999999997104e-05, 3.61250000000049e-05, 3.6110999999998394e-05, 3.6124999999997964e-05, 3.6110999999998394e-05, 3.61250000000049e-05, 3.6124999999997964e-05, 3.616700000000361e-05, 3.616599999999026e-05, 3.6152999999997104e-05, 3.6110999999991455e-05, 3.6138999999990595e-05, 3.6124999999997964e-05, 3.613900000000447e-05, 3.616700000000361e-05, 3.611100000000533e-05, 3.6096999999998824e-05, 3.611100000000533e-05, 3.60979999999983e-05, 3.6124999999997964e-05, 3.6124999999997964e-05, 3.611200000000481e-05, 3.619400000000328e-05, 3.611200000000481e-05, 3.611100000000533e-05, 3.6124999999997964e-05, 3.6110999999991455e-05, 3.6124999999997964e-05, 3.6110999999991455e-05, 3.6110999999991455e-05, 3.6096999999998824e-05, 3.6124999999997964e-05, 3.6096999999998824e-05]</msg>
<status status="PASS" starttime="20201115 22:11:13.582" endtime="20201115 22:11:13.584"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.578" endtime="20201115 22:11:13.585"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:13.587" endtime="20201115 22:11:13.588"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:13.590" endtime="20201115 22:11:13.610"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.589" endtime="20201115 22:11:13.610"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.585" endtime="20201115 22:11:13.611"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.116" endtime="20201115 22:11:13.611"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.114" endtime="20201115 22:11:13.611"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.113" endtime="20201115 22:11:13.611"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.818" endtime="20201115 22:11:13.612"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="teardown">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:13.618" endtime="20201115 22:11:13.637"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.616" endtime="20201115 22:11:13.638"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.614" endtime="20201115 22:11:13.638"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:11:02.750" endtime="20201115 22:11:13.639" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Remove List">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:13.646" endtime="20201115 22:11:13.666"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.645" endtime="20201115 22:11:13.666"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:13.681" endtime="20201115 22:11:13.693"></status>
</kw>
<msg timestamp="20201115 22:11:13.694" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:13.679" endtime="20201115 22:11:13.694"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:13.696" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:13.695" endtime="20201115 22:11:13.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:11:13.699" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:11:13.697" endtime="20201115 22:11:13.700"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:13.676" endtime="20201115 22:11:13.700"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:13.674" endtime="20201115 22:11:13.701"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.672" endtime="20201115 22:11:13.701"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:11:13.705" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:11:13.704" endtime="20201115 22:11:13.705"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.702" endtime="20201115 22:11:13.706"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.671" endtime="20201115 22:11:13.706"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.670" endtime="20201115 22:11:13.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:13.707" endtime="20201115 22:11:13.708"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.669" endtime="20201115 22:11:13.709"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.667" endtime="20201115 22:11:13.709"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.643" endtime="20201115 22:11:13.709"></status>
</kw>
<kw name="${n} IN RANGE [ 25 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:13.713" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:13.722" endtime="20201115 22:11:13.740"></status>
</kw>
<msg timestamp="20201115 22:11:13.741" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:13.720" endtime="20201115 22:11:13.741"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:13.743" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:13.742" endtime="20201115 22:11:13.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:13.744" endtime="20201115 22:11:13.746"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.718" endtime="20201115 22:11:13.746"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.716" endtime="20201115 22:11:13.747"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:13.755" endtime="20201115 22:11:14.041"></status>
</kw>
<msg timestamp="20201115 22:11:14.044" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067748889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067771736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:13.752" endtime="20201115 22:11:14.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:14.052" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067748889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067771736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:14.045" endtime="20201115 22:11:14.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:14.053" endtime="20201115 22:11:14.055"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.749" endtime="20201115 22:11:14.055"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.747" endtime="20201115 22:11:14.056"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:14.060" level="INFO">${RESULT} = [{'time': 0.067771736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2846999999992512e-05, 'source_diff': 2.2846999999992512e-05}, {'time': 0.067961556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:14.056" endtime="20201115 22:11:14.061"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:14.074" level="INFO">${OVERHEAD} = {'time': [0.067771736, 0.067961556, 0.068160069, 0.068362639, 0.068570125, 0.068769875, 0.068968694, 0.069160972, 0.069358542, 0.069550486, 0.069744, 0.069937833, 0.070128542, 0.070332347, 0.070521514...</msg>
<status status="PASS" starttime="20201115 22:11:14.061" endtime="20201115 22:11:14.075"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:14.079" level="INFO">NAME: 00-overhead-1-remove</msg>
<status status="PASS" starttime="20201115 22:11:14.078" endtime="20201115 22:11:14.079"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:14.081" level="INFO">VALUE: [2.2846999999992512e-05, 2.2750000000001935e-05, 2.2736000000009304e-05, 2.2764000000008444e-05, 2.2693999999989778e-05, 2.2707999999996287e-05, 2.2694000000003656e-05, 2.2735999999995427e-05, 2.270899999999576e-05, 2.2735999999995427e-05, 2.2722000000002796e-05, 2.2750000000001935e-05, 2.270899999999576e-05, 2.2722000000002796e-05, 2.2721999999988918e-05, 2.2709000000009638e-05, 2.2722000000002796e-05, 2.2750000000001935e-05, 2.2694000000003656e-05, 2.2722000000002796e-05, 2.270899999999576e-05, 2.2651999999998007e-05, 2.2735999999995427e-05, 2.2736000000009304e-05, 2.2763999999994566e-05, 2.2666999999990112e-05, 2.269499999998925e-05, 2.2735999999995427e-05, 2.2721999999988918e-05, 2.2707999999996287e-05, 2.2735999999995427e-05, 2.270899999999576e-05, 2.2722000000002796e-05, 2.2750000000001935e-05, 2.2749999999988058e-05, 2.2679999999997147e-05, 2.2722000000002796e-05, 2.2694000000003656e-05, 2.2735999999995427e-05, 2.2735999999995427e-05, 2.2722000000002796e-05, 2.2735999999995427e-05, 2.2763999999994566e-05, 2.2722000000002796e-05, 2.280500000000074e-05, 2.269500000000313e-05, 2.2736000000009304e-05, 2.2707999999996287e-05, 2.280500000000074e-05, 2.2735999999995427e-05]</msg>
<status status="PASS" starttime="20201115 22:11:14.080" endtime="20201115 22:11:14.082"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.075" endtime="20201115 22:11:14.082"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:14.085" endtime="20201115 22:11:14.086"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:14.088" endtime="20201115 22:11:14.108"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.086" endtime="20201115 22:11:14.108"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.083" endtime="20201115 22:11:14.109"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.713" endtime="20201115 22:11:14.109"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.712" endtime="20201115 22:11:14.109"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.711" endtime="20201115 22:11:14.109"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:14.112" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:14.121" endtime="20201115 22:11:14.141"></status>
</kw>
<msg timestamp="20201115 22:11:14.142" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:14.119" endtime="20201115 22:11:14.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:14.144" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:14.143" endtime="20201115 22:11:14.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:14.145" endtime="20201115 22:11:14.147"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.116" endtime="20201115 22:11:14.147"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.114" endtime="20201115 22:11:14.148"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:14.155" endtime="20201115 22:11:14.441"></status>
</kw>
<msg timestamp="20201115 22:11:14.445" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024511875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024546986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:14.153" endtime="20201115 22:11:14.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:14.453" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024511875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024546986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:14.446" endtime="20201115 22:11:14.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:14.454" endtime="20201115 22:11:14.456"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.150" endtime="20201115 22:11:14.456"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.148" endtime="20201115 22:11:14.457"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:14.461" level="INFO">${RESULT} = [{'time': 0.024546986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5111000000000864e-05, 'source_diff': 3.5111000000000864e-05}, {'time': 0.024789417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:14.458" endtime="20201115 22:11:14.461"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:14.475" level="INFO">${OVERHEAD} = {'time': [0.024546986, 0.024789417, 0.025033708, 0.025277986, 0.025521653, 0.025761278, 0.026008319, 0.026255125, 0.026501903, 0.026747444, 0.026996403, 0.027246292, 0.027483722, 0.027723667, 0.027971...</msg>
<status status="PASS" starttime="20201115 22:11:14.462" endtime="20201115 22:11:14.475"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:14.480" level="INFO">NAME: 00-overhead-2-remove</msg>
<status status="PASS" starttime="20201115 22:11:14.478" endtime="20201115 22:11:14.480"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:14.482" level="INFO">VALUE: [3.5111000000000864e-05, 3.502799999999945e-05, 3.5068999999998685e-05, 3.5068999999998685e-05, 3.508399999999773e-05, 3.5096999999997824e-05, 3.499999999999684e-05, 3.5083000000001724e-05, 3.507000000000163e-05, 3.500000000000031e-05, 3.506999999999816e-05, 3.505599999999859e-05, 3.502799999999945e-05, 3.507000000000163e-05, 3.5082999999998254e-05, 3.504199999999902e-05, 3.505599999999859e-05, 3.504199999999902e-05, 3.504199999999902e-05, 3.501399999999988e-05, 3.505599999999859e-05, 3.5096999999997824e-05, 3.504199999999902e-05, 3.504199999999902e-05, 3.505600000000206e-05, 3.505600000000206e-05, 3.5041000000003014e-05, 3.5096999999997824e-05, 3.5068999999998685e-05, 3.505599999999859e-05, 3.502799999999945e-05, 3.5068999999998685e-05, 3.505600000000553e-05, 3.5054999999999115e-05, 3.5054999999999115e-05, 3.500000000000031e-05, 3.502799999999945e-05, 3.502799999999945e-05, 3.5054999999999115e-05, 3.504199999999902e-05, 3.498600000000074e-05, 3.5055000000006054e-05, 3.5068999999998685e-05, 3.5068999999998685e-05, 3.505599999999859e-05, 3.5040999999999545e-05, 3.506999999999816e-05, 3.50979999999973e-05, 3.5068999999998685e-05, 3.504199999999902e-05]</msg>
<status status="PASS" starttime="20201115 22:11:14.481" endtime="20201115 22:11:14.482"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.476" endtime="20201115 22:11:14.483"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:14.485" endtime="20201115 22:11:14.486"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:14.489" endtime="20201115 22:11:14.508"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.487" endtime="20201115 22:11:14.509"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.483" endtime="20201115 22:11:14.509"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.112" endtime="20201115 22:11:14.509"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.111" endtime="20201115 22:11:14.510"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.110" endtime="20201115 22:11:14.510"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:14.512" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:14.521" endtime="20201115 22:11:14.544"></status>
</kw>
<msg timestamp="20201115 22:11:14.545" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:14.520" endtime="20201115 22:11:14.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:14.547" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:14.546" endtime="20201115 22:11:14.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:14.548" endtime="20201115 22:11:14.550"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.517" endtime="20201115 22:11:14.550"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.515" endtime="20201115 22:11:14.551"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:14.559" endtime="20201115 22:11:14.849"></status>
</kw>
<msg timestamp="20201115 22:11:14.852" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024591542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024627347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:14.556" endtime="20201115 22:11:14.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:14.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024591542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024627347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:14.853" endtime="20201115 22:11:14.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:14.861" endtime="20201115 22:11:14.863"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.554" endtime="20201115 22:11:14.864"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.552" endtime="20201115 22:11:14.864"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:14.868" level="INFO">${RESULT} = [{'time': 0.024627347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5804999999999865e-05, 'source_diff': 3.5804999999999865e-05}, {'time': 0.024914319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:14.865" endtime="20201115 22:11:14.869"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:14.883" level="INFO">${OVERHEAD} = {'time': [0.024627347, 0.024914319, 0.025210917, 0.025504694, 0.02579225, 0.0260935, 0.026392903, 0.026681417, 0.026967694, 0.027263681, 0.027565222, 0.027862111, 0.028161181, 0.028459944, 0.028760903...</msg>
<status status="PASS" starttime="20201115 22:11:14.869" endtime="20201115 22:11:14.884"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:14.888" level="INFO">NAME: 00-overhead-3-remove</msg>
<status status="PASS" starttime="20201115 22:11:14.887" endtime="20201115 22:11:14.888"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:14.890" level="INFO">VALUE: [3.5804999999999865e-05, 3.573600000000149e-05, 3.573599999999802e-05, 3.573600000000149e-05, 3.574999999999759e-05, 3.573599999999802e-05, 3.573599999999802e-05, 3.576400000000063e-05, 3.572200000000192e-05, 3.576400000000063e-05, 3.575000000000106e-05, 3.573599999999802e-05, 3.572300000000139e-05, 3.572200000000192e-05, 3.575000000000106e-05, 3.569500000000225e-05, 3.573600000000149e-05, 3.574999999999759e-05, 3.575000000000106e-05, 3.576399999999716e-05, 3.57780000000002e-05, 3.575000000000106e-05, 3.5791000000000295e-05, 3.568000000000321e-05, 3.5708999999994884e-05, 3.572199999999498e-05, 3.576400000000063e-05, 3.575000000000106e-05, 3.575000000000106e-05, 3.575000000000106e-05, 3.573600000000149e-05, 3.572200000000192e-05, 3.575000000000106e-05, 3.580599999999934e-05, 3.575000000000106e-05, 3.574999999999412e-05, 3.568100000000268e-05, 3.5680999999995744e-05, 3.5791000000000295e-05, 3.573600000000149e-05, 3.575000000000106e-05, 3.570799999999541e-05, 3.575000000000106e-05, 3.575000000000106e-05, 3.5763000000001155e-05, 3.567999999999627e-05, 3.575000000000106e-05, 3.575000000000106e-05, 3.575000000000106e-05, 3.573700000000096e-05]</msg>
<status status="PASS" starttime="20201115 22:11:14.889" endtime="20201115 22:11:14.891"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.884" endtime="20201115 22:11:14.891"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:14.894" endtime="20201115 22:11:14.895"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:14.897" endtime="20201115 22:11:14.917"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.895" endtime="20201115 22:11:14.917"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.892" endtime="20201115 22:11:14.918"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.513" endtime="20201115 22:11:14.918"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.511" endtime="20201115 22:11:14.918"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.510" endtime="20201115 22:11:14.918"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:14.921" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:14.929" endtime="20201115 22:11:14.955"></status>
</kw>
<msg timestamp="20201115 22:11:14.956" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:14.928" endtime="20201115 22:11:14.956"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:14.958" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:14.957" endtime="20201115 22:11:14.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:14.959" endtime="20201115 22:11:14.961"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.925" endtime="20201115 22:11:14.961"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.923" endtime="20201115 22:11:14.962"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:14.969" endtime="20201115 22:11:15.255"></status>
</kw>
<msg timestamp="20201115 22:11:15.258" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024838931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024875306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:14.967" endtime="20201115 22:11:15.258"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:15.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024838931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024875306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:15.259" endtime="20201115 22:11:15.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:15.267" endtime="20201115 22:11:15.269"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.964" endtime="20201115 22:11:15.269"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.962" endtime="20201115 22:11:15.270"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:15.274" level="INFO">${RESULT} = [{'time': 0.024875306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6374999999998214e-05, 'source_diff': 3.6374999999998214e-05}, {'time': 0.025214514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:15.270" endtime="20201115 22:11:15.274"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:15.288" level="INFO">${OVERHEAD} = {'time': [0.024875306, 0.025214514, 0.025564653, 0.02591375, 0.026256361, 0.026589083, 0.026930097, 0.027275514, 0.027621583, 0.027969764, 0.028304264, 0.02865125, 0.028997917, 0.029349042, 0.02969094...</msg>
<status status="PASS" starttime="20201115 22:11:15.275" endtime="20201115 22:11:15.288"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:15.292" level="INFO">NAME: 00-overhead-4-remove</msg>
<status status="PASS" starttime="20201115 22:11:15.291" endtime="20201115 22:11:15.292"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:15.295" level="INFO">VALUE: [3.6374999999998214e-05, 3.629200000000027e-05, 3.6374999999998214e-05, 3.624999999999809e-05, 3.626399999999766e-05, 3.6360999999998644e-05, 3.6291000000000795e-05, 3.630599999999984e-05, 3.6305000000000365e-05, 3.629200000000027e-05, 3.62780000000007e-05, 3.629200000000027e-05, 3.629200000000027e-05, 3.6374999999998214e-05, 3.6277000000001225e-05, 3.6305000000000365e-05, 3.630599999999984e-05, 3.62919999999968e-05, 3.6318999999999935e-05, 3.629200000000027e-05, 3.634700000000601e-05, 3.62780000000007e-05, 3.630599999999984e-05, 3.6277000000001225e-05, 3.6318999999999935e-05, 3.6318999999999935e-05, 3.6263000000001655e-05, 3.6374999999998214e-05, 3.626400000000113e-05, 3.6318999999999935e-05, 3.630599999999984e-05, 3.6290999999993856e-05, 3.6305000000000365e-05, 3.6291000000000795e-05, 3.630599999999984e-05, 3.630599999999984e-05, 3.625000000000156e-05, 3.629200000000027e-05, 3.6305000000000365e-05, 3.630599999999984e-05, 3.6332999999999505e-05, 3.633400000000592e-05, 3.622200000000242e-05, 3.6304999999993426e-05, 3.630599999999984e-05, 3.629200000000027e-05, 3.629200000000027e-05, 3.630599999999984e-05, 3.6305000000000365e-05, 3.631999999999941e-05]</msg>
<status status="PASS" starttime="20201115 22:11:15.293" endtime="20201115 22:11:15.295"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.289" endtime="20201115 22:11:15.296"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:15.298" endtime="20201115 22:11:15.299"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:15.301" endtime="20201115 22:11:15.321"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.300" endtime="20201115 22:11:15.321"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.296" endtime="20201115 22:11:15.322"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.921" endtime="20201115 22:11:15.322"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.920" endtime="20201115 22:11:15.322"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.919" endtime="20201115 22:11:15.323"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:15.325" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:15.334" endtime="20201115 22:11:15.362"></status>
</kw>
<msg timestamp="20201115 22:11:15.362" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:15.332" endtime="20201115 22:11:15.362"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:15.365" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:15.363" endtime="20201115 22:11:15.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:15.366" endtime="20201115 22:11:15.367"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.330" endtime="20201115 22:11:15.368"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.328" endtime="20201115 22:11:15.368"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:15.375" endtime="20201115 22:11:15.662"></status>
</kw>
<msg timestamp="20201115 22:11:15.665" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024750333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024787292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:15.373" endtime="20201115 22:11:15.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:15.673" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024750333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024787292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:15.666" endtime="20201115 22:11:15.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:15.675" endtime="20201115 22:11:15.676"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.371" endtime="20201115 22:11:15.677"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.369" endtime="20201115 22:11:15.677"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:15.681" level="INFO">${RESULT} = [{'time': 0.024787292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.69589999999996e-05, 'source_diff': 3.69589999999996e-05}, {'time': 0.025182569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:11:15.678" endtime="20201115 22:11:15.682"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:15.695" level="INFO">${OVERHEAD} = {'time': [0.024787292, 0.025182569, 0.025576611, 0.025965681, 0.026362222, 0.026745958, 0.027144042, 0.027533736, 0.027929986, 0.028315014, 0.028713125, 0.029097833, 0.029494097, 0.029882181, 0.030275...</msg>
<status status="PASS" starttime="20201115 22:11:15.682" endtime="20201115 22:11:15.695"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:15.700" level="INFO">NAME: 00-overhead-5-remove</msg>
<status status="PASS" starttime="20201115 22:11:15.699" endtime="20201115 22:11:15.700"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:15.702" level="INFO">VALUE: [3.69589999999996e-05, 3.6833000000000005e-05, 3.6860999999999144e-05, 3.686200000000209e-05, 3.6875000000002184e-05, 3.6860999999999144e-05, 3.6860999999999144e-05, 3.6846999999999575e-05, 3.6874999999998714e-05, 3.6860999999999144e-05, 3.6874999999998714e-05, 3.6874999999998714e-05, 3.691600000000142e-05, 3.686200000000209e-05, 3.6861000000002614e-05, 3.6846999999999575e-05, 3.6861000000002614e-05, 3.684799999999905e-05, 3.687500000000565e-05, 3.6874999999998714e-05, 3.6888999999998284e-05, 3.6874999999998714e-05, 3.6791000000001295e-05, 3.6846999999999575e-05, 3.6874999999998714e-05, 3.6860999999999144e-05, 3.6860999999999144e-05, 3.686100000000608e-05, 3.6916999999997424e-05, 3.6860999999999144e-05, 3.6874999999998714e-05, 3.6846999999999575e-05, 3.6874999999998714e-05, 3.6874999999998714e-05, 3.6888999999998284e-05, 3.6860999999999144e-05, 3.6860999999999144e-05, 3.6874999999998714e-05, 3.6860999999999144e-05, 3.6860999999999144e-05, 3.6860999999999144e-05, 3.6888999999998284e-05, 3.6860999999999144e-05, 3.6874999999998714e-05, 3.6874999999998714e-05, 3.686199999999862e-05, 3.688799999999881e-05, 3.6860999999999144e-05, 3.6874999999998714e-05, 3.688900000000522e-05]</msg>
<status status="PASS" starttime="20201115 22:11:15.701" endtime="20201115 22:11:15.703"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.696" endtime="20201115 22:11:15.704"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:15.706" endtime="20201115 22:11:15.707"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:15.709" endtime="20201115 22:11:15.729"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.708" endtime="20201115 22:11:15.730"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.704" endtime="20201115 22:11:15.730"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.326" endtime="20201115 22:11:15.730"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.324" endtime="20201115 22:11:15.731"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.323" endtime="20201115 22:11:15.731"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:15.733" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:15.742" endtime="20201115 22:11:15.772"></status>
</kw>
<msg timestamp="20201115 22:11:15.772" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:15.740" endtime="20201115 22:11:15.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:15.775" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:15.774" endtime="20201115 22:11:15.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:15.776" endtime="20201115 22:11:15.778"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.738" endtime="20201115 22:11:15.778"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.735" endtime="20201115 22:11:15.779"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:15.785" endtime="20201115 22:11:16.073"></status>
</kw>
<msg timestamp="20201115 22:11:16.076" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024432583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024470069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:15.784" endtime="20201115 22:11:16.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:16.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024432583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024470069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:16.078" endtime="20201115 22:11:16.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:16.086" endtime="20201115 22:11:16.087"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.781" endtime="20201115 22:11:16.088"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.779" endtime="20201115 22:11:16.088"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:16.093" level="INFO">${RESULT} = [{'time': 0.024470069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.748599999999977e-05, 'source_diff': 3.748599999999977e-05}, {'time': 0.0249035, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:11:16.089" endtime="20201115 22:11:16.093"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:16.106" level="INFO">${OVERHEAD} = {'time': [0.024470069, 0.0249035, 0.025341903, 0.025782528, 0.026214764, 0.02664575, 0.027087333, 0.027528514, 0.027976944, 0.028409764, 0.028852264, 0.029295014, 0.029742514, 0.030192153, 0.030632431...</msg>
<status status="PASS" starttime="20201115 22:11:16.094" endtime="20201115 22:11:16.107"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:16.111" level="INFO">NAME: 00-overhead-6-remove</msg>
<status status="PASS" starttime="20201115 22:11:16.110" endtime="20201115 22:11:16.111"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:16.113" level="INFO">VALUE: [3.748599999999977e-05, 3.7416999999997924e-05, 3.7402999999998354e-05, 3.7445000000000533e-05, 3.7417000000001394e-05, 3.7416999999997924e-05, 3.750000000000281e-05, 3.7431000000000964e-05, 3.745800000000063e-05, 3.7403000000001824e-05, 3.74720000000002e-05, 3.7417000000001394e-05, 3.7445000000000533e-05, 3.7416999999997924e-05, 3.7431000000000964e-05, 3.7431000000000964e-05, 3.7402999999998354e-05, 3.7416999999997924e-05, 3.7416999999997924e-05, 3.741600000000539e-05, 3.741600000000539e-05, 3.741599999999845e-05, 3.741599999999845e-05, 3.7416999999997924e-05, 3.741700000000486e-05, 3.7402999999998354e-05, 3.7416999999997924e-05, 3.744399999999759e-05, 3.747200000000367e-05, 3.741599999999845e-05, 3.744400000000453e-05, 3.7430999999997494e-05, 3.7458999999996634e-05, 3.744400000000453e-05, 3.741600000000539e-05, 3.741599999999845e-05, 3.741599999999845e-05, 3.741599999999845e-05, 3.7430999999997494e-05, 3.741599999999845e-05, 3.743100000000443e-05, 3.7402999999998354e-05, 3.741599999999845e-05, 3.7430999999997494e-05, 3.742999999999802e-05, 3.7416999999997924e-05, 3.7416999999997924e-05, 3.741700000000486e-05, 3.7430999999997494e-05, 3.7416999999997924e-05]</msg>
<status status="PASS" starttime="20201115 22:11:16.112" endtime="20201115 22:11:16.114"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.107" endtime="20201115 22:11:16.115"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:16.117" endtime="20201115 22:11:16.119"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:16.121" endtime="20201115 22:11:16.140"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.119" endtime="20201115 22:11:16.141"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.115" endtime="20201115 22:11:16.141"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.733" endtime="20201115 22:11:16.142"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.732" endtime="20201115 22:11:16.142"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.731" endtime="20201115 22:11:16.142"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:16.144" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:16.153" endtime="20201115 22:11:16.186"></status>
</kw>
<msg timestamp="20201115 22:11:16.186" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:16.152" endtime="20201115 22:11:16.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:16.189" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:16.188" endtime="20201115 22:11:16.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:16.190" endtime="20201115 22:11:16.192"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.149" endtime="20201115 22:11:16.192"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.147" endtime="20201115 22:11:16.193"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:16.199" endtime="20201115 22:11:16.486"></status>
</kw>
<msg timestamp="20201115 22:11:16.489" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024552236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024590208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:16.197" endtime="20201115 22:11:16.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:16.497" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024552236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024590208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:16.490" endtime="20201115 22:11:16.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:16.498" endtime="20201115 22:11:16.500"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.195" endtime="20201115 22:11:16.500"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.193" endtime="20201115 22:11:16.501"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:16.505" level="INFO">${RESULT} = [{'time': 0.024590208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.797199999999723e-05, 'source_diff': 3.797199999999723e-05}, {'time': 0.025071028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:16.502" endtime="20201115 22:11:16.505"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:16.521" level="INFO">${OVERHEAD} = {'time': [0.024590208, 0.025071028, 0.025556181, 0.026053361, 0.026551208, 0.027040986, 0.027530431, 0.028011778, 0.028499986, 0.028983875, 0.029467361, 0.029961167, 0.030457125, 0.030953153, 0.031434...</msg>
<status status="PASS" starttime="20201115 22:11:16.506" endtime="20201115 22:11:16.521"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:16.525" level="INFO">NAME: 00-overhead-7-remove</msg>
<status status="PASS" starttime="20201115 22:11:16.524" endtime="20201115 22:11:16.525"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:16.528" level="INFO">VALUE: [3.797199999999723e-05, 3.801399999999941e-05, 3.798699999999974e-05, 3.798600000000027e-05, 3.79720000000007e-05, 3.798600000000027e-05, 3.797300000000017e-05, 3.798600000000027e-05, 3.798600000000027e-05, 3.798600000000027e-05, 3.798600000000027e-05, 3.798600000000027e-05, 3.79720000000007e-05, 3.802799999999898e-05, 3.797199999999723e-05, 3.79580000000046e-05, 3.79580000000046e-05, 3.797200000000417e-05, 3.797200000000417e-05, 3.797199999999723e-05, 3.797200000000417e-05, 3.797200000000417e-05, 3.802799999999551e-05, 3.798600000000374e-05, 3.7972999999996704e-05, 3.797199999999723e-05, 3.8026999999996036e-05, 3.7958999999997134e-05, 3.798600000000374e-05, 3.799999999999637e-05, 3.79859999999968e-05, 3.801400000000288e-05, 3.79859999999968e-05, 3.804200000000202e-05, 3.797199999999723e-05, 3.79859999999968e-05, 3.79859999999968e-05, 3.79859999999968e-05, 3.799999999999637e-05, 3.797199999999723e-05, 3.794399999999809e-05, 3.798600000000374e-05, 3.799999999999637e-05, 3.79859999999968e-05, 3.800000000000331e-05, 3.79859999999968e-05, 3.798600000000374e-05, 3.79859999999968e-05, 3.802800000000245e-05, 3.797199999999723e-05]</msg>
<status status="PASS" starttime="20201115 22:11:16.526" endtime="20201115 22:11:16.528"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.522" endtime="20201115 22:11:16.529"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:16.531" endtime="20201115 22:11:16.532"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:16.534" endtime="20201115 22:11:16.554"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.533" endtime="20201115 22:11:16.554"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.529" endtime="20201115 22:11:16.555"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.145" endtime="20201115 22:11:16.555"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.143" endtime="20201115 22:11:16.555"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.142" endtime="20201115 22:11:16.555"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:16.558" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:16.566" endtime="20201115 22:11:16.602"></status>
</kw>
<msg timestamp="20201115 22:11:16.602" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:16.565" endtime="20201115 22:11:16.603"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:16.605" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:16.603" endtime="20201115 22:11:16.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:16.606" endtime="20201115 22:11:16.608"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.562" endtime="20201115 22:11:16.608"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.560" endtime="20201115 22:11:16.608"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:16.615" endtime="20201115 22:11:16.910"></status>
</kw>
<msg timestamp="20201115 22:11:16.913" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024527833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024566417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:16.613" endtime="20201115 22:11:16.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:16.921" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024527833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024566417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:16.914" endtime="20201115 22:11:16.922"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:16.923" endtime="20201115 22:11:16.925"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.611" endtime="20201115 22:11:16.925"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.609" endtime="20201115 22:11:16.926"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:16.930" level="INFO">${RESULT} = [{'time': 0.024566417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.858400000000123e-05, 'source_diff': 3.858400000000123e-05}, {'time': 0.025112375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:16.926" endtime="20201115 22:11:16.930"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:16.944" level="INFO">${OVERHEAD} = {'time': [0.024566417, 0.025112375, 0.025648389, 0.026190028, 0.026737819, 0.027274736, 0.027820375, 0.028360097, 0.028910361, 0.029458153, 0.030003806, 0.0305395, 0.031085833, 0.031632361, 0.03217922...</msg>
<status status="PASS" starttime="20201115 22:11:16.931" endtime="20201115 22:11:16.944"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:16.948" level="INFO">NAME: 00-overhead-8-remove</msg>
<status status="PASS" starttime="20201115 22:11:16.947" endtime="20201115 22:11:16.949"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:16.951" level="INFO">VALUE: [3.858400000000123e-05, 3.854199999999905e-05, 3.851399999999991e-05, 3.855600000000209e-05, 3.850000000000034e-05, 3.8554999999999146e-05, 3.854200000000252e-05, 3.8540999999999576e-05, 3.854199999999905e-05, 3.855600000000209e-05, 3.854200000000252e-05, 3.854199999999905e-05, 3.8568999999998715e-05, 3.852799999999601e-05, 3.8541000000003045e-05, 3.8541000000003045e-05, 3.849999999999687e-05, 3.8540999999996106e-05, 3.854199999999558e-05, 3.854200000000252e-05, 3.854200000000252e-05, 3.857000000000166e-05, 3.854200000000252e-05, 3.855600000000209e-05, 3.8568999999995246e-05, 3.852800000000295e-05, 3.8541000000003045e-05, 3.8486999999996774e-05, 3.851400000000338e-05, 3.855599999999515e-05, 3.8555000000002615e-05, 3.8569000000002185e-05, 3.8541000000003045e-05, 3.855600000000209e-05, 3.8569000000002185e-05, 3.855600000000209e-05, 3.854199999999558e-05, 3.8597000000001325e-05, 3.8568999999995246e-05, 3.8555000000002615e-05, 3.852800000000295e-05, 3.854200000000252e-05, 3.8555000000002615e-05, 3.852800000000295e-05, 3.850000000000381e-05, 3.854199999999558e-05, 3.849999999999687e-05, 3.8527000000003475e-05, 3.8555000000002615e-05, 3.851399999999644e-05]</msg>
<status status="PASS" starttime="20201115 22:11:16.949" endtime="20201115 22:11:16.951"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.944" endtime="20201115 22:11:16.952"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:16.954" endtime="20201115 22:11:16.955"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:16.957" endtime="20201115 22:11:16.977"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.956" endtime="20201115 22:11:16.977"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.952" endtime="20201115 22:11:16.978"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.558" endtime="20201115 22:11:16.978"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.557" endtime="20201115 22:11:16.978"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.556" endtime="20201115 22:11:16.979"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:16.981" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:16.990" endtime="20201115 22:11:17.028"></status>
</kw>
<msg timestamp="20201115 22:11:17.028" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:16.988" endtime="20201115 22:11:17.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:17.031" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:17.029" endtime="20201115 22:11:17.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:17.032" endtime="20201115 22:11:17.033"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.986" endtime="20201115 22:11:17.034"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.983" endtime="20201115 22:11:17.034"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:17.041" endtime="20201115 22:11:17.326"></status>
</kw>
<msg timestamp="20201115 22:11:17.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024696597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02473575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:11:17.039" endtime="20201115 22:11:17.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:17.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024696597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02473575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:11:17.330" endtime="20201115 22:11:17.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:17.338" endtime="20201115 22:11:17.340"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.037" endtime="20201115 22:11:17.340"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.035" endtime="20201115 22:11:17.341"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:17.345" level="INFO">${RESULT} = [{'time': 0.02473575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9153000000000104e-05, 'source_diff': 3.9153000000000104e-05}, {'time': 0.025326681, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:11:17.341" endtime="20201115 22:11:17.345"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:17.359" level="INFO">${OVERHEAD} = {'time': [0.02473575, 0.025326681, 0.02592175, 0.026506458, 0.027089986, 0.027681944, 0.028282583, 0.028882014, 0.029475222, 0.030058667, 0.030646222, 0.0312335, 0.031831292, 0.032418556, 0.033003306,...</msg>
<status status="PASS" starttime="20201115 22:11:17.346" endtime="20201115 22:11:17.359"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:17.363" level="INFO">NAME: 00-overhead-9-remove</msg>
<status status="PASS" starttime="20201115 22:11:17.362" endtime="20201115 22:11:17.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:17.365" level="INFO">VALUE: [3.9153000000000104e-05, 3.90980000000013e-05, 3.9139000000000534e-05, 3.9082999999998785e-05, 3.9096999999998355e-05, 3.9125000000000965e-05, 3.9111000000001395e-05, 3.9125000000000965e-05, 3.9139000000000534e-05, 3.902799999999998e-05, 3.9054999999999646e-05, 3.9083000000002255e-05, 3.909799999999436e-05, 3.908400000000173e-05, 3.90980000000013e-05, 3.9097000000001825e-05, 3.9082999999995316e-05, 3.9097000000001825e-05, 3.9097000000001825e-05, 3.9097000000001825e-05, 3.9111000000001395e-05, 3.907000000000216e-05, 3.9111000000001395e-05, 3.9139000000000534e-05, 3.9111000000001395e-05, 3.9096999999994886e-05, 3.9110999999994456e-05, 3.902799999999651e-05, 3.9097000000001825e-05, 3.9083000000002255e-05, 3.9139000000000534e-05, 3.9153000000000104e-05, 3.9082999999995316e-05, 3.908399999999479e-05, 3.9069000000002685e-05, 3.9125000000000965e-05, 3.9097000000001825e-05, 3.90980000000013e-05, 3.9125000000000965e-05, 3.9097000000001825e-05, 3.908399999999479e-05, 3.9125000000000965e-05, 3.9083000000002255e-05, 3.9096999999994886e-05, 3.9111000000001395e-05, 3.9111000000001395e-05, 3.908400000000173e-05, 3.9083000000002255e-05, 3.9125000000000965e-05, 3.9111000000001395e-05]</msg>
<status status="PASS" starttime="20201115 22:11:17.364" endtime="20201115 22:11:17.366"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.359" endtime="20201115 22:11:17.366"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:17.369" endtime="20201115 22:11:17.370"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:17.372" endtime="20201115 22:11:17.392"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.371" endtime="20201115 22:11:17.392"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.367" endtime="20201115 22:11:17.393"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.981" endtime="20201115 22:11:17.393"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.980" endtime="20201115 22:11:17.393"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.979" endtime="20201115 22:11:17.394"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:17.396" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:17.405" endtime="20201115 22:11:17.445"></status>
</kw>
<msg timestamp="20201115 22:11:17.446" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:17.403" endtime="20201115 22:11:17.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:17.449" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:17.447" endtime="20201115 22:11:17.449"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:17.450" endtime="20201115 22:11:17.452"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.401" endtime="20201115 22:11:17.452"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.398" endtime="20201115 22:11:17.453"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:17.459" endtime="20201115 22:11:17.746"></status>
</kw>
<msg timestamp="20201115 22:11:17.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024651681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024691472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:17.457" endtime="20201115 22:11:17.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:17.757" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024651681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024691472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:17.750" endtime="20201115 22:11:17.758"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:17.758" endtime="20201115 22:11:17.760"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.455" endtime="20201115 22:11:17.761"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.453" endtime="20201115 22:11:17.761"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:17.765" level="INFO">${RESULT} = [{'time': 0.024691472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9790999999997356e-05, 'source_diff': 3.9790999999997356e-05}, {'time': 0.025329806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:17.762" endtime="20201115 22:11:17.765"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:17.779" level="INFO">${OVERHEAD} = {'time': [0.024691472, 0.025329806, 0.025968819, 0.026606014, 0.027256222, 0.027907069, 0.028554819, 0.029200972, 0.02984475, 0.030498375, 0.031148931, 0.031799528, 0.032442042, 0.033091111, 0.0337311...</msg>
<status status="PASS" starttime="20201115 22:11:17.766" endtime="20201115 22:11:17.779"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:17.784" level="INFO">NAME: 00-overhead-10-remove</msg>
<status status="PASS" starttime="20201115 22:11:17.782" endtime="20201115 22:11:17.784"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:17.786" level="INFO">VALUE: [3.9790999999997356e-05, 3.9667000000000174e-05, 3.965200000000113e-05, 3.9653000000000604e-05, 3.9653000000000604e-05, 3.968000000000027e-05, 3.972199999999898e-05, 3.9652999999997135e-05, 3.9653000000000604e-05, 3.9639000000001035e-05, 3.9653000000000604e-05, 3.9625000000001465e-05, 3.9680999999999744e-05, 3.9639000000001035e-05, 3.9653000000000604e-05, 3.963800000000156e-05, 3.9680999999999744e-05, 3.9680999999999744e-05, 3.958399999999529e-05, 3.96660000000007e-05, 3.9680999999999744e-05, 3.9653000000000604e-05, 3.9667000000000174e-05, 3.965200000000113e-05, 3.96660000000007e-05, 3.96660000000007e-05, 3.969500000000625e-05, 3.96660000000007e-05, 3.96660000000007e-05, 3.9667000000000174e-05, 3.965199999999419e-05, 3.9680999999999744e-05, 3.9667000000000174e-05, 3.9667000000000174e-05, 3.9680999999999744e-05, 3.9667000000000174e-05, 3.9667000000000174e-05, 3.968000000000027e-05, 3.968000000000027e-05, 3.961200000000137e-05, 3.965200000000113e-05, 3.968100000000668e-05, 3.9667000000000174e-05, 3.9667000000000174e-05, 3.9653000000000604e-05, 3.968000000000027e-05, 3.9639000000001035e-05, 3.9653000000000604e-05, 3.9680999999999744e-05, 3.9653000000000604e-05]</msg>
<status status="PASS" starttime="20201115 22:11:17.785" endtime="20201115 22:11:17.786"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.780" endtime="20201115 22:11:17.787"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:17.789" endtime="20201115 22:11:17.791"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:17.793" endtime="20201115 22:11:17.812"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.791" endtime="20201115 22:11:17.813"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.788" endtime="20201115 22:11:17.813"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.396" endtime="20201115 22:11:17.813"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.395" endtime="20201115 22:11:17.814"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.394" endtime="20201115 22:11:17.814"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:17.816" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:17.826" endtime="20201115 22:11:17.870"></status>
</kw>
<msg timestamp="20201115 22:11:17.870" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:17.824" endtime="20201115 22:11:17.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:17.873" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:17.871" endtime="20201115 22:11:17.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:17.874" endtime="20201115 22:11:17.875"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.821" endtime="20201115 22:11:17.876"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.819" endtime="20201115 22:11:17.876"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:17.883" endtime="20201115 22:11:18.169"></status>
</kw>
<msg timestamp="20201115 22:11:18.172" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026011958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026052208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:17.881" endtime="20201115 22:11:18.173"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:18.181" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026011958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026052208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:18.174" endtime="20201115 22:11:18.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:18.182" endtime="20201115 22:11:18.184"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.879" endtime="20201115 22:11:18.184"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.877" endtime="20201115 22:11:18.185"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:18.189" level="INFO">${RESULT} = [{'time': 0.026052208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.024999999999862e-05, 'source_diff': 4.024999999999862e-05}, {'time': 0.026748403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:18.185" endtime="20201115 22:11:18.189"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:18.204" level="INFO">${OVERHEAD} = {'time': [0.026052208, 0.026748403, 0.027448917, 0.028154111, 0.028848375, 0.029555125, 0.030255958, 0.030960514, 0.031651667, 0.032359639, 0.033050806, 0.033754111, 0.034449681, 0.035156389, 0.035846...</msg>
<status status="PASS" starttime="20201115 22:11:18.190" endtime="20201115 22:11:18.204"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:18.209" level="INFO">NAME: 00-overhead-11-remove</msg>
<status status="PASS" starttime="20201115 22:11:18.207" endtime="20201115 22:11:18.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:18.211" level="INFO">VALUE: [4.024999999999862e-05, 4.025000000000209e-05, 4.0222999999998954e-05, 4.022199999999948e-05, 4.0167000000000674e-05, 4.020799999999991e-05, 4.020799999999991e-05, 4.022200000000295e-05, 4.0194999999999814e-05, 4.020799999999991e-05, 4.023700000000546e-05, 4.023600000000599e-05, 4.026400000000513e-05, 4.0194999999999814e-05, 4.022199999999948e-05, 4.020900000000632e-05, 4.022199999999948e-05, 4.023599999999905e-05, 4.01660000000012e-05, 4.0222999999998954e-05, 4.023599999999905e-05, 4.023599999999905e-05, 4.024999999999862e-05, 4.0222999999998954e-05, 4.022199999999948e-05, 4.026399999999819e-05, 4.026400000000513e-05, 4.022199999999948e-05, 4.0194999999999814e-05, 4.022199999999948e-05, 4.0167000000000674e-05, 4.0290999999997856e-05, 4.023599999999905e-05, 4.022199999999948e-05, 4.0222999999998954e-05, 4.020799999999991e-05, 4.023599999999905e-05, 4.0277000000005225e-05, 4.0194999999999814e-05, 4.0208999999999384e-05, 4.018000000000077e-05, 4.020799999999991e-05, 4.026399999999819e-05, 4.0181000000000244e-05, 4.025000000000556e-05, 4.022199999999948e-05, 4.023599999999905e-05, 4.022199999999948e-05, 4.023599999999905e-05, 4.023599999999905e-05]</msg>
<status status="PASS" starttime="20201115 22:11:18.210" endtime="20201115 22:11:18.211"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.205" endtime="20201115 22:11:18.212"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:18.214" endtime="20201115 22:11:18.215"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:18.218" endtime="20201115 22:11:18.238"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.216" endtime="20201115 22:11:18.238"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.212" endtime="20201115 22:11:18.239"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.817" endtime="20201115 22:11:18.239"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.815" endtime="20201115 22:11:18.239"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.814" endtime="20201115 22:11:18.239"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:18.242" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:18.250" endtime="20201115 22:11:18.297"></status>
</kw>
<msg timestamp="20201115 22:11:18.297" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:18.249" endtime="20201115 22:11:18.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:18.300" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:18.298" endtime="20201115 22:11:18.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:18.301" endtime="20201115 22:11:18.302"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.246" endtime="20201115 22:11:18.303"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.244" endtime="20201115 22:11:18.303"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:18.310" endtime="20201115 22:11:18.596"></status>
</kw>
<msg timestamp="20201115 22:11:18.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024845194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024886014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:18.308" endtime="20201115 22:11:18.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:18.607" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024845194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024886014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:18.600" endtime="20201115 22:11:18.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:18.608" endtime="20201115 22:11:18.610"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.305" endtime="20201115 22:11:18.610"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.304" endtime="20201115 22:11:18.611"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:18.615" level="INFO">${RESULT} = [{'time': 0.024886014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.082000000000044e-05, 'source_diff': 4.082000000000044e-05}, {'time': 0.025637292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:18.612" endtime="20201115 22:11:18.615"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:18.629" level="INFO">${OVERHEAD} = {'time': [0.024886014, 0.025637292, 0.026382597, 0.027133542, 0.027888597, 0.028638208, 0.029399986, 0.03016025, 0.030913944, 0.031662708, 0.032409903, 0.033160847, 0.033912444, 0.034668056, 0.0354142...</msg>
<status status="PASS" starttime="20201115 22:11:18.616" endtime="20201115 22:11:18.629"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:18.633" level="INFO">NAME: 00-overhead-12-remove</msg>
<status status="PASS" starttime="20201115 22:11:18.632" endtime="20201115 22:11:18.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:18.636" level="INFO">VALUE: [4.082000000000044e-05, 4.08059999999974e-05, 4.0791000000001826e-05, 4.077800000000173e-05, 4.0875000000002715e-05, 4.0776999999998786e-05, 4.076399999999869e-05, 4.076399999999869e-05, 4.0776999999998786e-05, 4.0790999999998356e-05, 4.079199999999783e-05, 4.0790999999998356e-05, 4.0790999999998356e-05, 4.082000000000391e-05, 4.08059999999974e-05, 4.07780000000052e-05, 4.077799999999826e-05, 4.077799999999826e-05, 4.08059999999974e-05, 4.0805000000004865e-05, 4.072199999999998e-05, 4.0762999999999217e-05, 4.0805000000004865e-05, 4.079200000000477e-05, 4.076400000000563e-05, 4.0805000000004865e-05, 4.0777000000005725e-05, 4.077799999999826e-05, 4.0791000000005295e-05, 4.079199999999783e-05, 4.077799999999826e-05, 4.0776999999998786e-05, 4.07780000000052e-05, 4.08059999999974e-05, 4.080600000000434e-05, 4.0763000000006155e-05, 4.08059999999974e-05, 4.0777000000005725e-05, 4.081999999999697e-05, 4.07780000000052e-05, 4.079199999999783e-05, 4.0790999999998356e-05, 4.07780000000052e-05, 4.079199999999783e-05, 4.07780000000052e-05, 4.0776999999998786e-05, 4.079199999999783e-05, 4.076400000000563e-05, 4.079199999999783e-05, 4.076399999999869e-05]</msg>
<status status="PASS" starttime="20201115 22:11:18.635" endtime="20201115 22:11:18.640"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.630" endtime="20201115 22:11:18.641"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:18.644" endtime="20201115 22:11:18.645"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:18.647" endtime="20201115 22:11:18.667"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.645" endtime="20201115 22:11:18.667"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.642" endtime="20201115 22:11:18.668"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.242" endtime="20201115 22:11:18.668"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.241" endtime="20201115 22:11:18.668"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.240" endtime="20201115 22:11:18.668"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:18.671" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:18.680" endtime="20201115 22:11:18.729"></status>
</kw>
<msg timestamp="20201115 22:11:18.729" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:18.678" endtime="20201115 22:11:18.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:18.731" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:18.730" endtime="20201115 22:11:18.732"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:18.733" endtime="20201115 22:11:18.734"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.675" endtime="20201115 22:11:18.735"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.673" endtime="20201115 22:11:18.735"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:18.742" endtime="20201115 22:11:19.029"></status>
</kw>
<msg timestamp="20201115 22:11:19.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025078222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025119625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:18.740" endtime="20201115 22:11:19.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:19.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025078222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025119625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:19.033" endtime="20201115 22:11:19.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:19.041" endtime="20201115 22:11:19.043"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.737" endtime="20201115 22:11:19.043"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.736" endtime="20201115 22:11:19.044"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:19.048" level="INFO">${RESULT} = [{'time': 0.025119625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1402999999998885e-05, 'source_diff': 4.1402999999998885e-05}, {'time': 0.025928028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:19.045" endtime="20201115 22:11:19.048"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:19.062" level="INFO">${OVERHEAD} = {'time': [0.025119625, 0.025928028, 0.026730125, 0.027531694, 0.028343792, 0.029150236, 0.029964778, 0.030764792, 0.03156475, 0.032368333, 0.033170444, 0.033969097, 0.034785264, 0.035599236, 0.0364007...</msg>
<status status="PASS" starttime="20201115 22:11:19.049" endtime="20201115 22:11:19.062"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:19.067" level="INFO">NAME: 00-overhead-13-remove</msg>
<status status="PASS" starttime="20201115 22:11:19.065" endtime="20201115 22:11:19.067"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:19.070" level="INFO">VALUE: [4.1402999999998885e-05, 4.133400000000051e-05, 4.1333000000001036e-05, 4.1361000000000175e-05, 4.134800000000008e-05, 4.1361000000000175e-05, 4.1347000000000605e-05, 4.133400000000051e-05, 4.1347000000004075e-05, 4.1332999999997566e-05, 4.1361000000003645e-05, 4.1346999999997136e-05, 4.1361000000003645e-05, 4.1346999999997136e-05, 4.1347000000004075e-05, 4.134800000000355e-05, 4.1375000000003215e-05, 4.134799999999661e-05, 4.136199999999618e-05, 4.1332999999997566e-05, 4.1346999999997136e-05, 4.134800000000355e-05, 4.1347000000004075e-05, 4.131999999999747e-05, 4.1389000000002785e-05, 4.1403000000002355e-05, 4.1333000000004505e-05, 4.133399999999704e-05, 4.1360999999996706e-05, 4.1346999999997136e-05, 4.133399999999704e-05, 4.1319000000004935e-05, 4.1375000000003215e-05, 4.1346999999997136e-05, 4.1361000000003645e-05, 4.1403000000002355e-05, 4.1346999999997136e-05, 4.1402999999995416e-05, 4.134800000000355e-05, 4.1361000000003645e-05, 4.1360999999996706e-05, 4.1346999999997136e-05, 4.1388999999995846e-05, 4.134800000000355e-05, 4.1346999999997136e-05, 4.1319000000004935e-05, 4.1332999999997566e-05, 4.1403000000009293e-05, 4.1361000000003645e-05, 4.138899999998891e-05]</msg>
<status status="PASS" starttime="20201115 22:11:19.068" endtime="20201115 22:11:19.070"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.063" endtime="20201115 22:11:19.070"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:19.073" endtime="20201115 22:11:19.074"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:19.076" endtime="20201115 22:11:19.096"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.075" endtime="20201115 22:11:19.096"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.071" endtime="20201115 22:11:19.097"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.671" endtime="20201115 22:11:19.097"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.670" endtime="20201115 22:11:19.098"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.669" endtime="20201115 22:11:19.098"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:19.100" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:19.109" endtime="20201115 22:11:19.160"></status>
</kw>
<msg timestamp="20201115 22:11:19.161" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:19.107" endtime="20201115 22:11:19.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:19.163" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:19.162" endtime="20201115 22:11:19.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:19.164" endtime="20201115 22:11:19.166"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.104" endtime="20201115 22:11:19.166"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.102" endtime="20201115 22:11:19.167"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:19.173" endtime="20201115 22:11:19.461"></status>
</kw>
<msg timestamp="20201115 22:11:19.464" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024848139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024890097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:19.172" endtime="20201115 22:11:19.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:19.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024848139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024890097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:19.465" endtime="20201115 22:11:19.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:19.473" endtime="20201115 22:11:19.475"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.169" endtime="20201115 22:11:19.476"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.167" endtime="20201115 22:11:19.476"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:19.480" level="INFO">${RESULT} = [{'time': 0.024890097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.195799999999819e-05, 'source_diff': 4.195799999999819e-05}, {'time': 0.025759111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:19.477" endtime="20201115 22:11:19.481"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:19.495" level="INFO">${OVERHEAD} = {'time': [0.024890097, 0.025759111, 0.026620681, 0.027474472, 0.028341292, 0.029211667, 0.030069458, 0.030923944, 0.031794778, 0.032666319, 0.033524153, 0.034394792, 0.035246958, 0.036107875, 0.036967...</msg>
<status status="PASS" starttime="20201115 22:11:19.482" endtime="20201115 22:11:19.495"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:19.499" level="INFO">NAME: 00-overhead-14-remove</msg>
<status status="PASS" starttime="20201115 22:11:19.498" endtime="20201115 22:11:19.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:19.502" level="INFO">VALUE: [4.195799999999819e-05, 4.1917000000002425e-05, 4.1930999999998525e-05, 4.197200000000123e-05, 4.1916999999998955e-05, 4.1973000000000704e-05, 4.190199999999991e-05, 4.198599999999733e-05, 4.183400000000448e-05, 4.190199999999644e-05, 4.1903000000002855e-05, 4.1903000000002855e-05, 4.190200000000338e-05, 4.1916999999995486e-05, 4.191599999999601e-05, 4.193000000000252e-05, 4.1888999999996346e-05, 4.1903000000002855e-05, 4.1902999999995916e-05, 4.1902999999995916e-05, 4.1874999999996776e-05, 4.188800000000381e-05, 4.1916999999995486e-05, 4.191600000000295e-05, 4.1860999999997206e-05, 4.1916999999995486e-05, 4.191600000000295e-05, 4.1917000000002425e-05, 4.191599999999601e-05, 4.1875000000003715e-05, 4.1931000000001994e-05, 4.1917000000002425e-05, 4.1888999999996346e-05, 4.1916999999995486e-05, 4.1889000000003285e-05, 4.1889000000003285e-05, 4.193000000000252e-05, 4.1903000000002855e-05, 4.1917000000002425e-05, 4.1889000000003285e-05, 4.191600000000295e-05, 4.190199999999644e-05, 4.191600000000295e-05, 4.1903000000002855e-05, 4.1889000000003285e-05, 4.1917000000002425e-05, 4.1917000000002425e-05, 4.194399999998821e-05, 4.1902999999995916e-05, 4.1846999999997636e-05]</msg>
<status status="PASS" starttime="20201115 22:11:19.500" endtime="20201115 22:11:19.502"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.496" endtime="20201115 22:11:19.503"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:19.505" endtime="20201115 22:11:19.506"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:19.508" endtime="20201115 22:11:19.528"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.507" endtime="20201115 22:11:19.529"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.503" endtime="20201115 22:11:19.529"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.100" endtime="20201115 22:11:19.529"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.099" endtime="20201115 22:11:19.530"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.098" endtime="20201115 22:11:19.530"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:19.532" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:19.541" endtime="20201115 22:11:19.595"></status>
</kw>
<msg timestamp="20201115 22:11:19.596" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:19.539" endtime="20201115 22:11:19.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:19.598" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:19.597" endtime="20201115 22:11:19.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:19.599" endtime="20201115 22:11:19.601"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.537" endtime="20201115 22:11:19.601"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.535" endtime="20201115 22:11:19.602"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:19.608" endtime="20201115 22:11:19.900"></status>
</kw>
<msg timestamp="20201115 22:11:19.903" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024974042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025016556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:19.607" endtime="20201115 22:11:19.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:19.911" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024974042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025016556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:19.904" endtime="20201115 22:11:19.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:19.912" endtime="20201115 22:11:19.914"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.604" endtime="20201115 22:11:19.914"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.602" endtime="20201115 22:11:19.915"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:19.919" level="INFO">${RESULT} = [{'time': 0.025016556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.251400000000044e-05, 'source_diff': 4.251400000000044e-05}, {'time': 0.025941347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:19.916" endtime="20201115 22:11:19.919"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:19.934" level="INFO">${OVERHEAD} = {'time': [0.025016556, 0.025941347, 0.026855236, 0.027764181, 0.028682389, 0.029607153, 0.030518167, 0.031441986, 0.032369542, 0.033287486, 0.034208486, 0.035124472, 0.036045222, 0.036968208, 0.037883...</msg>
<status status="PASS" starttime="20201115 22:11:19.920" endtime="20201115 22:11:19.935"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:19.939" level="INFO">NAME: 00-overhead-15-remove</msg>
<status status="PASS" starttime="20201115 22:11:19.938" endtime="20201115 22:11:19.939"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:19.942" level="INFO">VALUE: [4.251400000000044e-05, 4.245799999999869e-05, 4.247200000000173e-05, 4.2486999999997305e-05, 4.245799999999869e-05, 4.2445000000002064e-05, 4.2458999999998165e-05, 4.247199999999479e-05, 4.2473000000001204e-05, 4.24860000000013e-05, 4.247200000000173e-05, 4.245799999999522e-05, 4.245800000000216e-05, 4.247200000000173e-05, 4.247200000000173e-05, 4.244400000000259e-05, 4.2472999999994265e-05, 4.245799999999522e-05, 4.244400000000259e-05, 4.251400000000044e-05, 4.2403000000003355e-05, 4.243000000000302e-05, 4.2444999999995126e-05, 4.24860000000013e-05, 4.244400000000259e-05, 4.2458999999994695e-05, 4.247199999999479e-05, 4.2473000000001204e-05, 4.24860000000013e-05, 4.247200000000173e-05, 4.245799999999522e-05, 4.247199999999479e-05, 4.251400000000044e-05, 4.2445000000002064e-05, 4.250000000000087e-05, 4.244399999999565e-05, 4.24860000000013e-05, 4.247200000000173e-05, 4.252800000000001e-05, 4.247200000000173e-05, 4.245800000000216e-05, 4.241600000000345e-05, 4.248599999999436e-05, 4.245799999999522e-05, 4.2389000000003785e-05, 4.244400000000259e-05, 4.24580000000091e-05, 4.248599999999436e-05, 4.2417000000002925e-05, 4.247200000000173e-05]</msg>
<status status="PASS" starttime="20201115 22:11:19.940" endtime="20201115 22:11:19.942"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.935" endtime="20201115 22:11:19.942"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:19.945" endtime="20201115 22:11:19.946"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:19.948" endtime="20201115 22:11:19.968"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.947" endtime="20201115 22:11:19.968"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.943" endtime="20201115 22:11:19.969"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.533" endtime="20201115 22:11:19.969"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.531" endtime="20201115 22:11:19.969"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.530" endtime="20201115 22:11:19.969"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:19.972" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:19.981" endtime="20201115 22:11:20.038"></status>
</kw>
<msg timestamp="20201115 22:11:20.038" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:19.979" endtime="20201115 22:11:20.038"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:20.041" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:20.039" endtime="20201115 22:11:20.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:20.042" endtime="20201115 22:11:20.043"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.976" endtime="20201115 22:11:20.044"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.974" endtime="20201115 22:11:20.044"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:20.051" endtime="20201115 22:11:20.339"></status>
</kw>
<msg timestamp="20201115 22:11:20.342" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024958778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025001806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:20.050" endtime="20201115 22:11:20.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:20.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024958778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025001806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:20.343" endtime="20201115 22:11:20.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:20.351" endtime="20201115 22:11:20.353"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.047" endtime="20201115 22:11:20.354"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.045" endtime="20201115 22:11:20.354"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:20.358" level="INFO">${RESULT} = [{'time': 0.025001806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.302800000000051e-05, 'source_diff': 4.302800000000051e-05}, {'time': 0.025968792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:20.355" endtime="20201115 22:11:20.358"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:20.372" level="INFO">${OVERHEAD} = {'time': [0.025001806, 0.025968792, 0.026938972, 0.027908444, 0.028885056, 0.029858597, 0.030835278, 0.031819389, 0.032786667, 0.033768653, 0.034737819, 0.035709764, 0.036680792, 0.037649, 0.038615319...</msg>
<status status="PASS" starttime="20201115 22:11:20.359" endtime="20201115 22:11:20.372"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:20.376" level="INFO">NAME: 00-overhead-16-remove</msg>
<status status="PASS" starttime="20201115 22:11:20.375" endtime="20201115 22:11:20.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:20.379" level="INFO">VALUE: [4.302800000000051e-05, 4.302800000000051e-05, 4.3082999999999316e-05, 4.3082999999999316e-05, 4.302800000000051e-05, 4.302800000000051e-05, 4.304200000000008e-05, 4.304199999999314e-05, 4.301400000000094e-05, 4.304200000000008e-05, 4.300000000000137e-05, 4.302800000000051e-05, 4.3013999999994e-05, 4.302800000000051e-05, 4.300000000000137e-05, 4.3110999999998456e-05, 4.294399999999615e-05, 4.295800000000266e-05, 4.301400000000094e-05, 4.301400000000094e-05, 4.302800000000051e-05, 4.301400000000094e-05, 4.302800000000051e-05, 4.300000000000137e-05, 4.301400000000094e-05, 4.3082999999999316e-05, 4.302700000000104e-05, 4.302700000000104e-05, 4.301400000000094e-05, 4.301400000000094e-05, 4.300000000000137e-05, 4.301400000000094e-05, 4.295800000000266e-05, 4.3055000000000176e-05, 4.3013999999994e-05, 4.3041000000000607e-05, 4.301400000000094e-05, 4.300000000000137e-05, 4.304200000000008e-05, 4.304099999999367e-05, 4.301400000000788e-05, 4.297200000000223e-05, 4.301400000000788e-05, 4.304200000000702e-05, 4.301400000000788e-05, 4.302800000000051e-05, 4.304199999999314e-05, 4.300000000000137e-05, 4.300000000000137e-05, 4.304200000000702e-05]</msg>
<status status="PASS" starttime="20201115 22:11:20.378" endtime="20201115 22:11:20.380"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.373" endtime="20201115 22:11:20.380"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:20.382" endtime="20201115 22:11:20.384"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:20.386" endtime="20201115 22:11:20.405"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.384" endtime="20201115 22:11:20.406"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.381" endtime="20201115 22:11:20.406"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.972" endtime="20201115 22:11:20.406"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.971" endtime="20201115 22:11:20.407"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.970" endtime="20201115 22:11:20.407"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:20.409" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:20.418" endtime="20201115 22:11:20.478"></status>
</kw>
<msg timestamp="20201115 22:11:20.478" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:20.416" endtime="20201115 22:11:20.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:20.481" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:20.480" endtime="20201115 22:11:20.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:20.482" endtime="20201115 22:11:20.484"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.414" endtime="20201115 22:11:20.484"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.412" endtime="20201115 22:11:20.485"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:20.492" endtime="20201115 22:11:20.779"></status>
</kw>
<msg timestamp="20201115 22:11:20.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024858778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024902444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:20.490" endtime="20201115 22:11:20.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:20.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024858778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024902444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:20.783" endtime="20201115 22:11:20.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:20.791" endtime="20201115 22:11:20.793"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.487" endtime="20201115 22:11:20.793"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.486" endtime="20201115 22:11:20.794"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:20.798" level="INFO">${RESULT} = [{'time': 0.024902444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.366599999999776e-05, 'source_diff': 4.366599999999776e-05}, {'time': 0.025930069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:20.795" endtime="20201115 22:11:20.798"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:20.812" level="INFO">${OVERHEAD} = {'time': [0.024902444, 0.025930069, 0.026961986, 0.027987083, 0.029021153, 0.03005275, 0.031090292, 0.032122833, 0.033153167, 0.034188778, 0.035221264, 0.036262194, 0.037285097, 0.038325458, 0.0393520...</msg>
<status status="PASS" starttime="20201115 22:11:20.799" endtime="20201115 22:11:20.812"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:20.816" level="INFO">NAME: 00-overhead-17-remove</msg>
<status status="PASS" starttime="20201115 22:11:20.815" endtime="20201115 22:11:20.817"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:20.819" level="INFO">VALUE: [4.366599999999776e-05, 4.3582999999999816e-05, 4.3582999999999816e-05, 4.3596999999999386e-05, 4.358399999999929e-05, 4.3582999999999816e-05, 4.359799999999886e-05, 4.3583000000006755e-05, 4.358399999999929e-05, 4.358400000000623e-05, 4.3582999999999816e-05, 4.3596999999999386e-05, 4.3569000000000246e-05, 4.3582999999999816e-05, 4.358400000000623e-05, 4.358399999999929e-05, 4.359799999999886e-05, 4.358399999999929e-05, 4.3541000000001107e-05, 4.3582999999999816e-05, 4.3583000000006755e-05, 4.356999999999972e-05, 4.3569000000000246e-05, 4.3582999999999816e-05, 4.3624999999998526e-05, 4.3596999999999386e-05, 4.3582999999999816e-05, 4.3569000000000246e-05, 4.354199999999364e-05, 4.356999999999972e-05, 4.3582999999999816e-05, 4.3582999999999816e-05, 4.356999999999972e-05, 4.3610999999998956e-05, 4.3596999999999386e-05, 4.355600000000015e-05, 4.359799999999886e-05, 4.3639000000011974e-05, 4.3611000000012834e-05, 4.356899999999331e-05, 4.3610999999998956e-05, 4.3582999999999816e-05, 4.3569000000007185e-05, 4.3653000000004605e-05, 4.3555000000000677e-05, 4.3610999999998956e-05, 4.359799999999192e-05, 4.3582999999999816e-05, 4.3625000000005465e-05, 4.3667000000011114e-05]</msg>
<status status="PASS" starttime="20201115 22:11:20.817" endtime="20201115 22:11:20.819"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.813" endtime="20201115 22:11:20.820"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:20.822" endtime="20201115 22:11:20.823"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:20.826" endtime="20201115 22:11:20.845"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.824" endtime="20201115 22:11:20.846"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.820" endtime="20201115 22:11:20.846"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.410" endtime="20201115 22:11:20.846"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.408" endtime="20201115 22:11:20.847"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.407" endtime="20201115 22:11:20.847"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:20.849" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:20.858" endtime="20201115 22:11:20.921"></status>
</kw>
<msg timestamp="20201115 22:11:20.922" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:20.857" endtime="20201115 22:11:20.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:20.924" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:20.923" endtime="20201115 22:11:20.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:20.925" endtime="20201115 22:11:20.927"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.854" endtime="20201115 22:11:20.928"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.852" endtime="20201115 22:11:20.928"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:20.935" endtime="20201115 22:11:21.246"></status>
</kw>
<msg timestamp="20201115 22:11:21.249" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025370806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025415014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:20.933" endtime="20201115 22:11:21.249"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:21.257" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025370806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025415014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:21.250" endtime="20201115 22:11:21.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:21.258" endtime="20201115 22:11:21.260"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.930" endtime="20201115 22:11:21.260"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.929" endtime="20201115 22:11:21.261"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:21.265" level="INFO">${RESULT} = [{'time': 0.025415014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.420800000000044e-05, 'source_diff': 4.420800000000044e-05}, {'time': 0.026499125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:21.261" endtime="20201115 22:11:21.265"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:21.279" level="INFO">${OVERHEAD} = {'time': [0.025415014, 0.026499125, 0.027599417, 0.028682569, 0.029771667, 0.030868528, 0.031953264, 0.033046431, 0.034134944, 0.035235236, 0.036319347, 0.037419972, 0.038515056, 0.039611028, 0.040711...</msg>
<status status="PASS" starttime="20201115 22:11:21.266" endtime="20201115 22:11:21.279"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:21.283" level="INFO">NAME: 00-overhead-18-remove</msg>
<status status="PASS" starttime="20201115 22:11:21.282" endtime="20201115 22:11:21.284"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:21.286" level="INFO">VALUE: [4.420800000000044e-05, 4.4152999999998166e-05, 4.4153000000001635e-05, 4.416600000000173e-05, 4.4125000000002496e-05, 4.4124999999999026e-05, 4.4153000000005105e-05, 4.4124999999999026e-05, 4.417999999999783e-05, 4.4139000000005535e-05, 4.41660000000052e-05, 4.4153000000005105e-05, 4.4152999999998166e-05, 4.408399999999979e-05, 4.4152999999998166e-05, 4.4138999999998596e-05, 4.4180999999997306e-05, 4.4138999999998596e-05, 4.4139000000005535e-05, 4.4139000000005535e-05, 4.4138999999998596e-05, 4.4138999999998596e-05, 4.4138999999998596e-05, 4.417999999999783e-05, 4.4138999999998596e-05, 4.4139000000005535e-05, 4.4125000000005965e-05, 4.4152999999998166e-05, 4.4138999999998596e-05, 4.4138999999998596e-05, 4.4152999999998166e-05, 4.4152999999998166e-05, 4.4110999999999456e-05, 4.4138999999998596e-05, 4.4153000000005105e-05, 4.40980000000063e-05, 4.412499999999209e-05, 4.41939999999974e-05, 4.4125000000005965e-05, 4.4125000000005965e-05, 4.4083000000000316e-05, 4.4153000000005105e-05, 4.415299999999123e-05, 4.4097000000006825e-05, 4.4125000000005965e-05, 4.4125000000005965e-05, 4.4138999999998596e-05, 4.415299999999123e-05, 4.4125000000005965e-05, 4.4138000000013e-05]</msg>
<status status="PASS" starttime="20201115 22:11:21.284" endtime="20201115 22:11:21.286"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.280" endtime="20201115 22:11:21.287"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:21.289" endtime="20201115 22:11:21.291"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:21.293" endtime="20201115 22:11:21.312"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.291" endtime="20201115 22:11:21.313"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.287" endtime="20201115 22:11:21.313"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.850" endtime="20201115 22:11:21.314"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.848" endtime="20201115 22:11:21.314"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.847" endtime="20201115 22:11:21.314"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:21.316" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:21.325" endtime="20201115 22:11:21.391"></status>
</kw>
<msg timestamp="20201115 22:11:21.392" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:21.324" endtime="20201115 22:11:21.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:21.394" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:21.393" endtime="20201115 22:11:21.394"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:21.395" endtime="20201115 22:11:21.397"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.321" endtime="20201115 22:11:21.397"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.319" endtime="20201115 22:11:21.398"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:21.404" endtime="20201115 22:11:21.691"></status>
</kw>
<msg timestamp="20201115 22:11:21.694" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024925028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024969806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:21.403" endtime="20201115 22:11:21.694"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:21.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024925028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024969806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:21.695" endtime="20201115 22:11:21.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:21.703" endtime="20201115 22:11:21.705"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.400" endtime="20201115 22:11:21.706"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.398" endtime="20201115 22:11:21.706"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:21.710" level="INFO">${RESULT} = [{'time': 0.024969806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.477800000000226e-05, 'source_diff': 4.477800000000226e-05}, {'time': 0.026115861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:21.707" endtime="20201115 22:11:21.710"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:21.725" level="INFO">${OVERHEAD} = {'time': [0.024969806, 0.026115861, 0.027265597, 0.028414319, 0.029563458, 0.030705944, 0.031862472, 0.033010639, 0.034155097, 0.035307931, 0.036458319, 0.037602458, 0.038744361, 0.039901528, 0.041060...</msg>
<status status="PASS" starttime="20201115 22:11:21.711" endtime="20201115 22:11:21.726"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:21.730" level="INFO">NAME: 00-overhead-19-remove</msg>
<status status="PASS" starttime="20201115 22:11:21.729" endtime="20201115 22:11:21.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:21.732" level="INFO">VALUE: [4.477800000000226e-05, 4.470800000000094e-05, 4.472200000000051e-05, 4.469400000000137e-05, 4.469400000000137e-05, 4.46939999999979e-05, 4.469400000000484e-05, 4.470800000000441e-05, 4.469400000000484e-05, 4.4709000000003885e-05, 4.470800000000441e-05, 4.470799999999747e-05, 4.470799999999747e-05, 4.4708999999996946e-05, 4.4709000000003885e-05, 4.468000000000527e-05, 4.4708999999996946e-05, 4.470799999999747e-05, 4.469400000000484e-05, 4.468000000000527e-05, 4.4638999999999096e-05, 4.469400000000484e-05, 4.472200000000398e-05, 4.470799999999747e-05, 4.4694999999997376e-05, 4.46939999999979e-05, 4.470799999999747e-05, 4.4695000000004315e-05, 4.4681000000004745e-05, 4.470800000000441e-05, 4.4680999999997806e-05, 4.4709000000003885e-05, 4.4680999999997806e-05, 4.46939999999979e-05, 4.473600000000355e-05, 4.470799999999053e-05, 4.4709000000003885e-05, 4.4709000000003885e-05, 4.4653000000005605e-05, 4.470899999999001e-05, 4.4681000000004745e-05, 4.4709000000003885e-05, 4.474999999999618e-05, 4.468000000000527e-05, 4.46939999999979e-05, 4.470800000000441e-05, 4.4694999999997376e-05, 4.470800000000441e-05, 4.472200000001092e-05, 4.46939999999979e-05]</msg>
<status status="PASS" starttime="20201115 22:11:21.731" endtime="20201115 22:11:21.733"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.726" endtime="20201115 22:11:21.734"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:21.736" endtime="20201115 22:11:21.737"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:21.740" endtime="20201115 22:11:21.759"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.738" endtime="20201115 22:11:21.760"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.734" endtime="20201115 22:11:21.760"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.317" endtime="20201115 22:11:21.760"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.315" endtime="20201115 22:11:21.761"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.315" endtime="20201115 22:11:21.761"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:21.763" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:21.772" endtime="20201115 22:11:21.841"></status>
</kw>
<msg timestamp="20201115 22:11:21.841" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:21.770" endtime="20201115 22:11:21.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:21.844" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:21.842" endtime="20201115 22:11:21.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:21.845" endtime="20201115 22:11:21.847"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.768" endtime="20201115 22:11:21.847"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.766" endtime="20201115 22:11:21.848"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:21.854" endtime="20201115 22:11:22.142"></status>
</kw>
<msg timestamp="20201115 22:11:22.145" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025060889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025106222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:21.852" endtime="20201115 22:11:22.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:22.153" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025060889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025106222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:22.146" endtime="20201115 22:11:22.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:22.155" endtime="20201115 22:11:22.156"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.850" endtime="20201115 22:11:22.157"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.848" endtime="20201115 22:11:22.157"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:22.161" level="INFO">${RESULT} = [{'time': 0.025106222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.5333000000001566e-05, 'source_diff': 4.5333000000001566e-05}, {'time': 0.026316056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:22.158" endtime="20201115 22:11:22.162"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:22.175" level="INFO">${OVERHEAD} = {'time': [0.025106222, 0.026316056, 0.027515861, 0.028720958, 0.029925444, 0.031141417, 0.032342889, 0.033561681, 0.03476475, 0.035977069, 0.037193486, 0.038397111, 0.039598194, 0.040807736, 0.0420185...</msg>
<status status="PASS" starttime="20201115 22:11:22.162" endtime="20201115 22:11:22.175"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:22.180" level="INFO">NAME: 00-overhead-20-remove</msg>
<status status="PASS" starttime="20201115 22:11:22.179" endtime="20201115 22:11:22.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:22.183" level="INFO">VALUE: [4.5333000000001566e-05, 4.5237000000000055e-05, 4.523600000000058e-05, 4.526399999999972e-05, 4.525000000000015e-05, 4.525000000000015e-05, 4.527800000000276e-05, 4.526400000000319e-05, 4.529199999999539e-05, 4.525000000000362e-05, 4.526399999999625e-05, 4.527799999999582e-05, 4.526300000000372e-05, 4.523599999999711e-05, 4.526400000000319e-05, 4.529200000000233e-05, 4.525000000000362e-05, 4.525000000000362e-05, 4.529200000000233e-05, 4.526400000000319e-05, 4.526399999999625e-05, 4.526399999999625e-05, 4.526400000000319e-05, 4.5194999999997876e-05, 4.525000000000362e-05, 4.526399999999625e-05, 4.526399999999625e-05, 4.529100000000286e-05, 4.527799999999582e-05, 4.526399999999625e-05, 4.525000000000362e-05, 4.525000000001056e-05, 4.524999999999668e-05, 4.523600000000405e-05, 4.527699999999635e-05, 4.526400000000319e-05, 4.526399999998931e-05, 4.525000000001056e-05, 4.524999999999668e-05, 4.526400000000319e-05, 4.523600000000405e-05, 4.525000000001056e-05, 4.524999999999668e-05, 4.523599999999017e-05, 4.529100000000286e-05, 4.526400000000319e-05, 4.527799999999582e-05, 4.527799999999582e-05, 4.52780000000097e-05, 4.526299999998984e-05]</msg>
<status status="PASS" starttime="20201115 22:11:22.181" endtime="20201115 22:11:22.183"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.176" endtime="20201115 22:11:22.184"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:22.186" endtime="20201115 22:11:22.187"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:22.189" endtime="20201115 22:11:22.209"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.188" endtime="20201115 22:11:22.210"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.184" endtime="20201115 22:11:22.210"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.764" endtime="20201115 22:11:22.210"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.762" endtime="20201115 22:11:22.211"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.761" endtime="20201115 22:11:22.211"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:22.213" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:22.222" endtime="20201115 22:11:22.296"></status>
</kw>
<msg timestamp="20201115 22:11:22.296" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:22.220" endtime="20201115 22:11:22.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:22.299" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:22.297" endtime="20201115 22:11:22.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:22.300" endtime="20201115 22:11:22.301"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.218" endtime="20201115 22:11:22.302"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.215" endtime="20201115 22:11:22.302"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:22.309" endtime="20201115 22:11:22.596"></status>
</kw>
<msg timestamp="20201115 22:11:22.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024999056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025044931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:22.307" endtime="20201115 22:11:22.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:22.607" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024999056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025044931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:22.600" endtime="20201115 22:11:22.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:22.608" endtime="20201115 22:11:22.610"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.305" endtime="20201115 22:11:22.611"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.303" endtime="20201115 22:11:22.611"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:22.615" level="INFO">${RESULT} = [{'time': 0.025044931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.5875000000000776e-05, 'source_diff': 4.5875000000000776e-05}, {'time': 0.026321208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:22.612" endtime="20201115 22:11:22.616"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:22.629" level="INFO">${OVERHEAD} = {'time': [0.025044931, 0.026321208, 0.027597625, 0.028868417, 0.030134556, 0.031410806, 0.032685597, 0.033948833, 0.035217944, 0.036483333, 0.037758139, 0.039035056, 0.040311069, 0.041573736, 0.042845...</msg>
<status status="PASS" starttime="20201115 22:11:22.616" endtime="20201115 22:11:22.630"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:22.634" level="INFO">NAME: 00-overhead-21-remove</msg>
<status status="PASS" starttime="20201115 22:11:22.633" endtime="20201115 22:11:22.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:22.637" level="INFO">VALUE: [4.5875000000000776e-05, 4.581899999999903e-05, 4.5833000000002067e-05, 4.584800000000111e-05, 4.5875000000000776e-05, 4.58060000000024e-05, 4.581899999999556e-05, 4.581899999999556e-05, 4.5833000000002067e-05, 4.580500000000293e-05, 4.582000000000197e-05, 4.580599999999546e-05, 4.576299999999728e-05, 4.580500000000293e-05, 4.5861000000001206e-05, 4.577799999999632e-05, 4.580599999999546e-05, 4.582000000000197e-05, 4.58190000000025e-05, 4.583400000000154e-05, 4.582000000000197e-05, 4.5847000000001636e-05, 4.58190000000025e-05, 4.583299999999513e-05, 4.58060000000024e-05, 4.58190000000025e-05, 4.583299999999513e-05, 4.583299999999513e-05, 4.579200000000283e-05, 4.579199999999589e-05, 4.580599999999546e-05, 4.580599999999546e-05, 4.584800000000111e-05, 4.582000000000197e-05, 4.580599999999546e-05, 4.581999999998809e-05, 4.5833000000009005e-05, 4.582000000000197e-05, 4.58190000000025e-05, 4.580599999999546e-05, 4.58190000000025e-05, 4.5833000000009005e-05, 4.5847000000001636e-05, 4.576400000000369e-05, 4.5833000000009005e-05, 4.579200000000283e-05, 4.583299999999513e-05, 4.576400000000369e-05, 4.580599999999546e-05, 4.5847000000001636e-05]</msg>
<status status="PASS" starttime="20201115 22:11:22.635" endtime="20201115 22:11:22.637"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.630" endtime="20201115 22:11:22.638"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:22.640" endtime="20201115 22:11:22.641"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:22.643" endtime="20201115 22:11:22.663"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.642" endtime="20201115 22:11:22.663"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.638" endtime="20201115 22:11:22.664"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.213" endtime="20201115 22:11:22.664"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.212" endtime="20201115 22:11:22.664"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.211" endtime="20201115 22:11:22.664"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:22.667" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:22.675" endtime="20201115 22:11:22.750"></status>
</kw>
<msg timestamp="20201115 22:11:22.751" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:22.674" endtime="20201115 22:11:22.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:22.753" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:22.752" endtime="20201115 22:11:22.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:22.755" endtime="20201115 22:11:22.756"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.671" endtime="20201115 22:11:22.757"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.669" endtime="20201115 22:11:22.757"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:22.764" endtime="20201115 22:11:23.052"></status>
</kw>
<msg timestamp="20201115 22:11:23.055" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025005319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025051764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:22.762" endtime="20201115 22:11:23.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:23.063" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025005319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025051764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:23.056" endtime="20201115 22:11:23.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:23.064" endtime="20201115 22:11:23.066"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.760" endtime="20201115 22:11:23.067"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.758" endtime="20201115 22:11:23.067"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:23.071" level="INFO">${RESULT} = [{'time': 0.025051764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.6444999999999126e-05, 'source_diff': 4.6444999999999126e-05}, {'time': 0.026385764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:23.068" endtime="20201115 22:11:23.071"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:23.085" level="INFO">${OVERHEAD} = {'time': [0.025051764, 0.026385764, 0.027708306, 0.029039306, 0.030374069, 0.031705625, 0.033038889, 0.034369944, 0.035695736, 0.037028764, 0.038351903, 0.039678181, 0.041018861, 0.042350139, 0.043679...</msg>
<status status="PASS" starttime="20201115 22:11:23.072" endtime="20201115 22:11:23.085"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:23.090" level="INFO">NAME: 00-overhead-22-remove</msg>
<status status="PASS" starttime="20201115 22:11:23.089" endtime="20201115 22:11:23.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:23.092" level="INFO">VALUE: [4.6444999999999126e-05, 4.636099999999824e-05, 4.637499999999781e-05, 4.6375000000001276e-05, 4.6375000000001276e-05, 4.6361000000001706e-05, 4.6389000000000846e-05, 4.6375000000001276e-05, 4.6375000000001276e-05, 4.6430999999999556e-05, 4.632000000000247e-05, 4.6375000000001276e-05, 4.638899999999391e-05, 4.6375000000001276e-05, 4.6375000000001276e-05, 4.6403000000000416e-05, 4.6389000000000846e-05, 4.638899999999391e-05, 4.6389000000000846e-05, 4.63469999999952e-05, 4.6389000000000846e-05, 4.6361000000001706e-05, 4.6361000000001706e-05, 4.6319000000003e-05, 4.6375000000001276e-05, 4.6375000000001276e-05, 4.63469999999952e-05, 4.6389000000000846e-05, 4.637499999999434e-05, 4.6375000000001276e-05, 4.645799999999922e-05, 4.638899999999391e-05, 4.638899999999391e-05, 4.6403000000000416e-05, 4.638899999999391e-05, 4.6375000000001276e-05, 4.6375000000001276e-05, 4.6375000000001276e-05, 4.638899999999391e-05, 4.6375000000001276e-05, 4.636099999999477e-05, 4.636099999999477e-05, 4.6375000000001276e-05, 4.6375000000001276e-05, 4.6361000000008645e-05, 4.6375000000001276e-05, 4.6430999999999556e-05, 4.6375000000001276e-05, 4.6375000000001276e-05, 4.636200000000812e-05]</msg>
<status status="PASS" starttime="20201115 22:11:23.091" endtime="20201115 22:11:23.093"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:23.086" endtime="20201115 22:11:23.093"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:23.095" endtime="20201115 22:11:23.097"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:23.099" endtime="20201115 22:11:23.118"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:23.097" endtime="20201115 22:11:23.119"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:23.094" endtime="20201115 22:11:23.120"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.667" endtime="20201115 22:11:23.120"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.666" endtime="20201115 22:11:23.120"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.665" endtime="20201115 22:11:23.120"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:23.122" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:23.131" endtime="20201115 22:11:23.210"></status>
</kw>
<msg timestamp="20201115 22:11:23.210" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:23.130" endtime="20201115 22:11:23.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:23.213" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:23.211" endtime="20201115 22:11:23.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:23.214" endtime="20201115 22:11:23.215"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:23.127" endtime="20201115 22:11:23.216"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:23.125" endtime="20201115 22:11:23.216"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:23.223" endtime="20201115 22:11:23.511"></status>
</kw>
<msg timestamp="20201115 22:11:23.514" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025264583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025311597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:23.222" endtime="20201115 22:11:23.514"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:23.522" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025264583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025311597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:23.515" endtime="20201115 22:11:23.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:23.524" endtime="20201115 22:11:23.525"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:23.219" endtime="20201115 22:11:23.526"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:23.217" endtime="20201115 22:11:23.526"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:23.530" level="INFO">${RESULT} = [{'time': 0.025311597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.701400000000147e-05, 'source_diff': 4.701400000000147e-05}, {'time': 0.026713139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:23.527" endtime="20201115 22:11:23.531"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:23.546" level="INFO">${OVERHEAD} = {'time': [0.025311597, 0.026713139, 0.028107875, 0.029494097, 0.030886889, 0.032278972, 0.033669597, 0.035056139, 0.036454847, 0.037840486, 0.03922825, 0.040630403, 0.042027167, 0.043427736, 0.0448218...</msg>
<status status="PASS" starttime="20201115 22:11:23.531" endtime="20201115 22:11:23.546"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:23.550" level="INFO">NAME: 00-overhead-23-remove</msg>
<status status="PASS" starttime="20201115 22:11:23.549" endtime="20201115 22:11:23.551"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:23.553" level="INFO">VALUE: [4.701400000000147e-05, 4.6944999999999626e-05, 4.695799999999972e-05, 4.6875000000001776e-05, 4.6944999999999626e-05, 4.694400000000015e-05, 4.700000000000537e-05, 4.695799999999972e-05, 4.691600000000101e-05, 4.694400000000015e-05, 4.6917000000000486e-05, 4.700000000000537e-05, 4.6958999999999196e-05, 4.695799999999972e-05, 4.699999999999843e-05, 4.698599999999886e-05, 4.6944999999999626e-05, 4.697199999999929e-05, 4.694400000000015e-05, 4.6944999999999626e-05, 4.694400000000015e-05, 4.6917000000000486e-05, 4.6931000000000056e-05, 4.693000000000058e-05, 4.6915999999994074e-05, 4.695799999999972e-05, 4.698599999999886e-05, 4.6958999999999196e-05, 4.694399999999321e-05, 4.688800000000881e-05, 4.688899999999441e-05, 4.6931000000000056e-05, 4.693000000000058e-05, 4.701299999999853e-05, 4.695799999999972e-05, 4.693000000000058e-05, 4.694400000000709e-05, 4.6931000000000056e-05, 4.697200000000623e-05, 4.694399999999321e-05, 4.693000000000058e-05, 4.6931000000000056e-05, 4.694499999999269e-05, 4.6945000000006565e-05, 4.693000000000058e-05, 4.6917000000007425e-05, 4.695799999999972e-05, 4.695799999999972e-05, 4.694499999999269e-05, 4.6875000000001776e-05]</msg>
<status status="PASS" starttime="20201115 22:11:23.551" endtime="20201115 22:11:23.553"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:23.547" endtime="20201115 22:11:23.554"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:23.556" endtime="20201115 22:11:23.557"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:23.559" endtime="20201115 22:11:23.579"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:23.558" endtime="20201115 22:11:23.579"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:23.554" endtime="20201115 22:11:23.580"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:23.123" endtime="20201115 22:11:23.580"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:23.121" endtime="20201115 22:11:23.580"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:23.121" endtime="20201115 22:11:23.581"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:23.583" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:23.592" endtime="20201115 22:11:23.673"></status>
</kw>
<msg timestamp="20201115 22:11:23.674" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:23.590" endtime="20201115 22:11:23.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:23.681" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:23.675" endtime="20201115 22:11:23.682"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:23.682" endtime="20201115 22:11:23.684"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:23.588" endtime="20201115 22:11:23.685"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:23.585" endtime="20201115 22:11:23.685"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:23.692" endtime="20201115 22:11:23.979"></status>
</kw>
<msg timestamp="20201115 22:11:23.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025293653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025341208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:23.690" endtime="20201115 22:11:23.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:23.990" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025293653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025341208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:23.983" endtime="20201115 22:11:23.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:23.991" endtime="20201115 22:11:23.993"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:23.688" endtime="20201115 22:11:23.994"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:23.686" endtime="20201115 22:11:23.994"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:23.998" level="INFO">${RESULT} = [{'time': 0.025341208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.755500000000121e-05, 'source_diff': 4.755500000000121e-05}, {'time': 0.026806069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:23.995" endtime="20201115 22:11:23.999"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:24.012" level="INFO">${OVERHEAD} = {'time': [0.025341208, 0.026806069, 0.028264, 0.029722944, 0.031186292, 0.032639583, 0.034104125, 0.035556486, 0.037018931, 0.038476028, 0.039933153, 0.041382222, 0.042835847, 0.044285139, 0.045750431...</msg>
<status status="PASS" starttime="20201115 22:11:23.999" endtime="20201115 22:11:24.012"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:24.017" level="INFO">NAME: 00-overhead-24-remove</msg>
<status status="PASS" starttime="20201115 22:11:24.016" endtime="20201115 22:11:24.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:24.019" level="INFO">VALUE: [4.755500000000121e-05, 4.749999999999893e-05, 4.75000000000024e-05, 4.75130000000025e-05, 4.752800000000154e-05, 4.747199999999979e-05, 4.748599999999936e-05, 4.749999999999893e-05, 4.749999999999893e-05, 4.747199999999979e-05, 4.749999999999893e-05, 4.756900000000425e-05, 4.751400000000544e-05, 4.748599999999936e-05, 4.7458999999999696e-05, 4.751400000000544e-05, 4.75139999999985e-05, 4.751400000000544e-05, 4.743000000000108e-05, 4.749999999999893e-05, 4.745800000000022e-05, 4.749999999999893e-05, 4.754199999999764e-05, 4.7472999999999266e-05, 4.749999999999893e-05, 4.749999999999893e-05, 4.75139999999985e-05, 4.749999999999199e-05, 4.751299999999903e-05, 4.748600000001324e-05, 4.7473000000006205e-05, 4.750000000000587e-05, 4.748599999999936e-05, 4.749999999999199e-05, 4.748599999999936e-05, 4.750000000000587e-05, 4.75139999999985e-05, 4.748599999999936e-05, 4.748599999999936e-05, 4.748599999999936e-05, 4.750000000000587e-05, 4.750000000000587e-05, 4.750000000000587e-05, 4.748599999999936e-05, 4.7486999999998836e-05, 4.750000000000587e-05, 4.750000000000587e-05, 4.748599999999936e-05, 4.7431000000000556e-05, 4.75139999999985e-05]</msg>
<status status="PASS" starttime="20201115 22:11:24.018" endtime="20201115 22:11:24.020"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:24.013" endtime="20201115 22:11:24.020"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:24.022" endtime="20201115 22:11:24.024"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:24.026" endtime="20201115 22:11:24.045"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:24.024" endtime="20201115 22:11:24.046"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:24.021" endtime="20201115 22:11:24.046"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:23.583" endtime="20201115 22:11:24.047"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:23.582" endtime="20201115 22:11:24.047"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:23.581" endtime="20201115 22:11:24.047"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:24.049" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:24.059" endtime="20201115 22:11:24.143"></status>
</kw>
<msg timestamp="20201115 22:11:24.144" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:24.057" endtime="20201115 22:11:24.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:24.146" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:24.145" endtime="20201115 22:11:24.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:24.147" endtime="20201115 22:11:24.149"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:24.054" endtime="20201115 22:11:24.149"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:24.052" endtime="20201115 22:11:24.150"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:24.156" endtime="20201115 22:11:24.444"></status>
</kw>
<msg timestamp="20201115 22:11:24.447" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025745986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025794111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:24.155" endtime="20201115 22:11:24.447"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:24.455" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025745986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025794111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:24.448" endtime="20201115 22:11:24.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:24.456" endtime="20201115 22:11:24.458"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:24.152" endtime="20201115 22:11:24.458"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:24.151" endtime="20201115 22:11:24.459"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:24.463" level="INFO">${RESULT} = [{'time': 0.025794111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.8125000000003026e-05, 'source_diff': 4.8125000000003026e-05}, {'time': 0.027323333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:24.459" endtime="20201115 22:11:24.463"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:24.477" level="INFO">${OVERHEAD} = {'time': [0.025794111, 0.027323333, 0.028842514, 0.030370472, 0.031882486, 0.033406639, 0.034925319, 0.036441167, 0.037968444, 0.039498222, 0.041018375, 0.042541653, 0.044056167, 0.045585778, 0.047102...</msg>
<status status="PASS" starttime="20201115 22:11:24.464" endtime="20201115 22:11:24.477"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:24.481" level="INFO">NAME: 00-overhead-25-remove</msg>
<status status="PASS" starttime="20201115 22:11:24.480" endtime="20201115 22:11:24.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:24.484" level="INFO">VALUE: [4.8125000000003026e-05, 4.8111000000003457e-05, 4.807000000000075e-05, 4.805499999999824e-05, 4.806900000000475e-05, 4.805600000000465e-05, 4.805500000000518e-05, 4.805599999999771e-05, 4.801299999999953e-05, 4.805499999999824e-05, 4.806900000000475e-05, 4.802799999999857e-05, 4.804199999999814e-05, 4.805599999999771e-05, 4.805500000000518e-05, 4.80269999999991e-05, 4.805499999999824e-05, 4.805599999999771e-05, 4.805599999999771e-05, 4.806999999999728e-05, 4.799999999999943e-05, 4.802800000000551e-05, 4.804199999999814e-05, 4.805500000000518e-05, 4.805499999999824e-05, 4.805500000000518e-05, 4.804199999999814e-05, 4.805500000000518e-05, 4.8111000000003457e-05, 4.804200000001202e-05, 4.804099999999867e-05, 4.8013999999999e-05, 4.806899999999781e-05, 4.800000000000637e-05, 4.805600000000465e-05, 4.806899999999781e-05, 4.806899999999781e-05, 4.809699999999695e-05, 4.806899999999781e-05, 4.805600000000465e-05, 4.805599999999077e-05, 4.805600000000465e-05, 4.804199999999814e-05, 4.804199999999814e-05, 4.808400000000379e-05, 4.804099999999867e-05, 4.806899999999781e-05, 4.806899999999781e-05, 4.805600000000465e-05, 4.808300000000432e-05]</msg>
<status status="PASS" starttime="20201115 22:11:24.482" endtime="20201115 22:11:24.484"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:24.477" endtime="20201115 22:11:24.484"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:24.487" endtime="20201115 22:11:24.488"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:24.491" endtime="20201115 22:11:24.510"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:24.489" endtime="20201115 22:11:24.511"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:24.485" endtime="20201115 22:11:24.511"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:24.050" endtime="20201115 22:11:24.512"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:24.048" endtime="20201115 22:11:24.512"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:24.048" endtime="20201115 22:11:24.512"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.710" endtime="20201115 22:11:24.512"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="teardown">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:24.517" endtime="20201115 22:11:24.537"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:24.515" endtime="20201115 22:11:24.537"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:24.514" endtime="20201115 22:11:24.538"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:11:13.641" endtime="20201115 22:11:24.538" critical="yes"></status>
</test>
<status status="PASS" starttime="20201115 22:11:00.267" endtime="20201115 22:11:24.544"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_ztimer_benchmarks</item>
<item name="RIOT-Board">saml10-xpro</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="PASS" starttime="20201115 22:10:58.150" endtime="20201115 22:11:24.563"></status>
</suite>
<statistics>
<total>
<stat pass="5" fail="0">Critical Tests</stat>
<stat pass="5" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="5" fail="0">APP_tests_ztimer_benchmarks</stat>
<stat pass="5" fail="0">BOARD_saml10-xpro</stat>
<stat pass="5" fail="0">dev</stat>
</tag>
<suite>
<stat pass="5" fail="0" id="s1" name="tests_ztimer_benchmarks">tests_ztimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_ztimer_benchmarks.Timer Version</stat>
<stat pass="4" fail="0" id="s1-s2" name="Timer Overhead">tests_ztimer_benchmarks.Timer Overhead</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
