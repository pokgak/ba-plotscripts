<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2 (Python 3.7.3 on linux)" generated="20201115 22:11:00.188" rpa="false">
<suite id="s1" name="tests_ztimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201115 22:11:01.407" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201115 22:11:01.423" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201115 22:11:03.345" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201115 22:11:01.403" endtime="20201115 22:11:03.346"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201115 22:11:03.348" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201115 22:11:03.347" endtime="20201115 22:11:03.349"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.400" endtime="20201115 22:11:03.350"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:03.352" endtime="20201115 22:11:03.577"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.350" endtime="20201115 22:11:03.578"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:03.608" endtime="20201115 22:11:03.630"></status>
</kw>
<msg timestamp="20201115 22:11:03.631" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['his is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:03.605" endtime="20201115 22:11:03.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:03.638" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['his is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:03.634" endtime="20201115 22:11:03.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:11:03.645" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:11:03.640" endtime="20201115 22:11:03.645"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:03.599" endtime="20201115 22:11:03.647"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:03.593" endtime="20201115 22:11:03.649"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.591" endtime="20201115 22:11:03.650"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:11:03.657" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:11:03.656" endtime="20201115 22:11:03.658"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.651" endtime="20201115 22:11:03.659"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.589" endtime="20201115 22:11:03.659"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.587" endtime="20201115 22:11:03.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:03.661" endtime="20201115 22:11:03.665"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.583" endtime="20201115 22:11:03.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:03.668" endtime="20201115 22:11:03.671"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.580" endtime="20201115 22:11:03.673"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.397" endtime="20201115 22:11:03.674"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:03.690" endtime="20201115 22:11:03.712"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.686" endtime="20201115 22:11:03.713"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:03.747" endtime="20201115 22:11:03.766"></status>
</kw>
<msg timestamp="20201115 22:11:03.767" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:03.744" endtime="20201115 22:11:03.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:03.773" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:03.769" endtime="20201115 22:11:03.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:11:03.780" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:11:03.775" endtime="20201115 22:11:03.780"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:03.737" endtime="20201115 22:11:03.782"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:03.730" endtime="20201115 22:11:03.784"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.727" endtime="20201115 22:11:03.785"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:11:03.792" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:11:03.791" endtime="20201115 22:11:03.793"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.786" endtime="20201115 22:11:03.794"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.725" endtime="20201115 22:11:03.794"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.723" endtime="20201115 22:11:03.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:03.796" endtime="20201115 22:11:03.799"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.719" endtime="20201115 22:11:03.801"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.715" endtime="20201115 22:11:03.802"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.683" endtime="20201115 22:11:03.803"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:03.821" endtime="20201115 22:11:03.835"></status>
</kw>
<msg timestamp="20201115 22:11:03.836" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:03.817" endtime="20201115 22:11:03.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:03.842" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:03.838" endtime="20201115 22:11:03.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:03.845" endtime="20201115 22:11:03.850"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.810" endtime="20201115 22:11:03.852"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.805" endtime="20201115 22:11:03.853"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:03.864" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201115 22:11:03.861" endtime="20201115 22:11:03.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:03.868" level="INFO">VALUE: ztimer</msg>
<status status="PASS" starttime="20201115 22:11:03.866" endtime="20201115 22:11:03.869"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.855" endtime="20201115 22:11:03.870"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:11:03.675" endtime="20201115 22:11:03.873" critical="yes"></status>
</test>
<status status="PASS" starttime="20201115 22:11:00.446" endtime="20201115 22:11:03.880"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201115 22:11:04.014" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201115 22:11:04.029" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201115 22:11:05.983" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201115 22:11:04.010" endtime="20201115 22:11:05.984"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201115 22:11:05.990" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201115 22:11:05.987" endtime="20201115 22:11:05.990"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.007" endtime="20201115 22:11:05.992"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:05.997" endtime="20201115 22:11:06.322"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.994" endtime="20201115 22:11:06.324"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:06.353" endtime="20201115 22:11:06.375"></status>
</kw>
<msg timestamp="20201115 22:11:06.376" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['n(): This is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Succ...</msg>
<status status="PASS" starttime="20201115 22:11:06.350" endtime="20201115 22:11:06.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:06.383" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['n(): This is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Succ...</msg>
<status status="PASS" starttime="20201115 22:11:06.379" endtime="20201115 22:11:06.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:11:06.390" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:11:06.385" endtime="20201115 22:11:06.392"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:06.344" endtime="20201115 22:11:06.394"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:06.338" endtime="20201115 22:11:06.395"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.335" endtime="20201115 22:11:06.396"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:11:06.404" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:11:06.403" endtime="20201115 22:11:06.405"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.398" endtime="20201115 22:11:06.405"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.334" endtime="20201115 22:11:06.406"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.332" endtime="20201115 22:11:06.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:06.408" endtime="20201115 22:11:06.411"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.329" endtime="20201115 22:11:06.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:06.414" endtime="20201115 22:11:06.418"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.325" endtime="20201115 22:11:06.419"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.004" endtime="20201115 22:11:06.420"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO/">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:06.434" endtime="20201115 22:11:06.455"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.430" endtime="20201115 22:11:06.457"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:06.490" endtime="20201115 22:11:06.517"></status>
</kw>
<msg timestamp="20201115 22:11:06.519" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:06.487" endtime="20201115 22:11:06.519"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:06.525" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:06.521" endtime="20201115 22:11:06.526"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:11:06.532" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:11:06.527" endtime="20201115 22:11:06.532"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:06.480" endtime="20201115 22:11:06.534"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:06.473" endtime="20201115 22:11:06.536"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.470" endtime="20201115 22:11:06.536"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:11:06.544" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:11:06.543" endtime="20201115 22:11:06.545"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.538" endtime="20201115 22:11:06.545"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.469" endtime="20201115 22:11:06.607"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.467" endtime="20201115 22:11:06.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:06.610" endtime="20201115 22:11:06.613"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.463" endtime="20201115 22:11:06.615"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.458" endtime="20201115 22:11:06.616"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.427" endtime="20201115 22:11:06.617"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure GPIO Overhead</arg>
</arguments>
<msg timestamp="20201115 22:11:06.622" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:06.641" endtime="20201115 22:11:06.655"></status>
</kw>
<msg timestamp="20201115 22:11:06.656" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:06.638" endtime="20201115 22:11:06.656"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:06.662" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:06.658" endtime="20201115 22:11:06.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:06.664" endtime="20201115 22:11:06.668"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.631" endtime="20201115 22:11:06.670"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.626" endtime="20201115 22:11:06.671"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:06.687" endtime="20201115 22:11:06.997"></status>
</kw>
<msg timestamp="20201115 22:11:06.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.198539278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.198551847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:06.684" endtime="20201115 22:11:06.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:07.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.198539278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.198551847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:07.000" endtime="20201115 22:11:07.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:07.006" endtime="20201115 22:11:07.008"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.677" endtime="20201115 22:11:07.008"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.672" endtime="20201115 22:11:07.009"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:07.013" level="INFO">${RESULT} = [{'time': 0.198551847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.256899999999006e-05, 'source_diff': 1.256899999999006e-05}, {'time': 0.198567389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:07.010" endtime="20201115 22:11:07.014"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:07.022" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:07.015" endtime="20201115 22:11:07.022"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:07.027" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201115 22:11:07.026" endtime="20201115 22:11:07.028"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:07.030" level="INFO">VALUE: [1.256899999999006e-05, 7.917000000023933e-06, 4.9860000000123694e-06, 1.1861000000001898e-05, 1.5167000000010367e-05, 1.1277000000003978e-05, 4.971999999991983e-06, 1.4582999999984692e-05, 3.1530000000057345e-06, 1.4361000000018276e-05, 1.0402999999992169e-05, 1.1263999999983065e-05, 3.7360000000041804e-06, 7.916999999996177e-06, 1.5416000000018082e-05, 3.945000000005194e-06, 2.6939999999975317e-06, 1.2318999999982871e-05, 6.2910000000193644e-06, 4.52800000000364e-06, 7.513999999986254e-06, 1.088899999998616e-05, 1.3542000000005272e-05, 7.2779999999994516e-06, 8.736999999980899e-06]</msg>
<status status="PASS" starttime="20201115 22:11:07.028" endtime="20201115 22:11:07.030"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.023" endtime="20201115 22:11:07.032"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:07.038" endtime="20201115 22:11:07.041"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:07.047" endtime="20201115 22:11:07.068"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.042" endtime="20201115 22:11:07.070"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.034" endtime="20201115 22:11:07.071"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.623" endtime="20201115 22:11:07.072"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.619" endtime="20201115 22:11:07.073"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:07.083" endtime="20201115 22:11:07.105"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.079" endtime="20201115 22:11:07.106"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.076" endtime="20201115 22:11:07.107"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:11:06.421" endtime="20201115 22:11:07.108" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:07.126" endtime="20201115 22:11:07.148"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.122" endtime="20201115 22:11:07.149"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:07.184" endtime="20201115 22:11:07.204"></status>
</kw>
<msg timestamp="20201115 22:11:07.205" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:07.180" endtime="20201115 22:11:07.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:07.211" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:07.207" endtime="20201115 22:11:07.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:11:07.218" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:11:07.214" endtime="20201115 22:11:07.219"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:07.173" endtime="20201115 22:11:07.220"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:07.166" endtime="20201115 22:11:07.222"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.163" endtime="20201115 22:11:07.223"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:11:07.231" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:11:07.230" endtime="20201115 22:11:07.232"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.225" endtime="20201115 22:11:07.233"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.161" endtime="20201115 22:11:07.233"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.159" endtime="20201115 22:11:07.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:07.235" endtime="20201115 22:11:07.238"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.155" endtime="20201115 22:11:07.240"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.151" endtime="20201115 22:11:07.241"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.119" endtime="20201115 22:11:07.242"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer Now Overhead</arg>
</arguments>
<msg timestamp="20201115 22:11:07.247" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:07.267" endtime="20201115 22:11:07.282"></status>
</kw>
<msg timestamp="20201115 22:11:07.283" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:07.263" endtime="20201115 22:11:07.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:07.289" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:07.285" endtime="20201115 22:11:07.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:07.291" endtime="20201115 22:11:07.295"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.256" endtime="20201115 22:11:07.297"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.251" endtime="20201115 22:11:07.298"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:07.314" endtime="20201115 22:11:07.664"></status>
</kw>
<msg timestamp="20201115 22:11:07.671" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.132366903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.132368681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:07.311" endtime="20201115 22:11:07.671"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:07.690" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.132366903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.132368681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:07.673" endtime="20201115 22:11:07.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:07.692" endtime="20201115 22:11:07.696"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.304" endtime="20201115 22:11:07.697"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.299" endtime="20201115 22:11:07.699"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:07.709" level="INFO">${RESULT} = [{'time': 0.132368681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7779999999800733e-06, 'source_diff': 1.7779999999800733e-06}, {'time': 0.132382028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:07.701" endtime="20201115 22:11:07.710"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:07.741" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:07.712" endtime="20201115 22:11:07.742"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:07.751" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201115 22:11:07.749" endtime="20201115 22:11:07.752"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:07.757" level="INFO">VALUE: [1.7779999999800733e-06, 1.7500000000225668e-06, 1.7499999999948113e-06, 1.7640000000151979e-06, 1.7499999999948113e-06, 1.7499999999948113e-06, 1.7499999999948113e-06, 1.7499999999948113e-06, 1.7360000000021802e-06, 1.7499999999948113e-06, 1.7499999999948113e-06, 1.7779999999800733e-06, 1.7370000000016539e-06, 1.7499999999948113e-06, 1.7360000000021802e-06, 1.7499999999948113e-06, 1.7360000000021802e-06, 1.7079999999891626e-06, 1.7769999999805997e-06, 1.7359999999744247e-06, 1.7360000000021802e-06, 1.7499999999948113e-06, 1.7079999999891626e-06, 1.7359999999744247e-06, 1.7499999999948113e-06, 1.805999999993091e-06, 1.7360000000021802e-06, 1.7640000000151979e-06, 1.7370000000016539e-06, 1.7220000000095492e-06, 1.7220000000095492e-06, 1.7500000000225668e-06, 1.7499999999948113e-06, 1.7370000000016539e-06, 1.7370000000016539e-06, 1.7499999999948113e-06, 1.7360000000021802e-06, 1.7080000000169182e-06, 1.7360000000021802e-06, 1.7499999999948113e-06, 1.7780000000078289e-06, 1.7770000000083552e-06, 1.7360000000021802e-06, 1.7780000000078289e-06, 1.7220000000095492e-06, 1.7230000000090229e-06, 1.7220000000095492e-06, 1.7499999999948113e-06, 1.7500000000225668e-06, 1.7090000000163919e-06]</msg>
<status status="PASS" starttime="20201115 22:11:07.753" endtime="20201115 22:11:07.758"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.743" endtime="20201115 22:11:07.760"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:07.766" endtime="20201115 22:11:07.769"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:07.774" endtime="20201115 22:11:07.796"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.770" endtime="20201115 22:11:07.797"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.762" endtime="20201115 22:11:07.799"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.248" endtime="20201115 22:11:07.800"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.244" endtime="20201115 22:11:07.800"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:07.811" endtime="20201115 22:11:07.832"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.806" endtime="20201115 22:11:07.834"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.804" endtime="20201115 22:11:07.835"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:11:07.113" endtime="20201115 22:11:07.836" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set List">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:07.854" endtime="20201115 22:11:07.875"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.850" endtime="20201115 22:11:07.877"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:07.910" endtime="20201115 22:11:07.929"></status>
</kw>
<msg timestamp="20201115 22:11:07.930" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:07.906" endtime="20201115 22:11:07.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:07.936" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:07.932" endtime="20201115 22:11:07.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:11:07.944" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:11:07.938" endtime="20201115 22:11:07.945"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:07.899" endtime="20201115 22:11:07.947"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:07.893" endtime="20201115 22:11:07.949"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.890" endtime="20201115 22:11:07.949"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:11:07.957" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:11:07.956" endtime="20201115 22:11:07.958"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.951" endtime="20201115 22:11:07.958"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.888" endtime="20201115 22:11:07.959"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.887" endtime="20201115 22:11:07.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:07.961" endtime="20201115 22:11:07.964"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.883" endtime="20201115 22:11:07.966"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.878" endtime="20201115 22:11:07.967"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.847" endtime="20201115 22:11:07.968"></status>
</kw>
<kw name="${n} IN RANGE [ 25 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:07.975" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:07.999" endtime="20201115 22:11:08.014"></status>
</kw>
<msg timestamp="20201115 22:11:08.015" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:07.995" endtime="20201115 22:11:08.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:08.021" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:08.017" endtime="20201115 22:11:08.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:08.024" endtime="20201115 22:11:08.027"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.987" endtime="20201115 22:11:08.029"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.981" endtime="20201115 22:11:08.030"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:08.047" endtime="20201115 22:11:08.402"></status>
</kw>
<msg timestamp="20201115 22:11:08.409" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.138437458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.138442861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:08.044" endtime="20201115 22:11:08.410"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:08.428" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.138437458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.138442861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:08.412" endtime="20201115 22:11:08.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:08.430" endtime="20201115 22:11:08.434"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.036" endtime="20201115 22:11:08.436"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.032" endtime="20201115 22:11:08.437"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:08.448" level="INFO">${RESULT} = [{'time': 0.138442861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.402999999987168e-06, 'source_diff': 5.402999999987168e-06}, {'time': 0.138495403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:08.439" endtime="20201115 22:11:08.448"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:08.479" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:08.450" endtime="20201115 22:11:08.479"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:08.490" level="INFO">NAME: 00-overhead-1-set</msg>
<status status="PASS" starttime="20201115 22:11:08.487" endtime="20201115 22:11:08.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:08.495" level="INFO">VALUE: [5.402999999987168e-06, 5.402999999987168e-06, 5.402999999987168e-06, 5.416999999979799e-06, 5.431000000000186e-06, 5.457999999985974e-06, 5.403000000014924e-06, 5.403000000014924e-06, 5.430000000000712e-06, 5.431000000000186e-06, 5.40200000001545e-06, 5.388999999994537e-06, 5.403000000014924e-06, 5.417000000007555e-06, 5.362000000008749e-06, 5.401999999987694e-06, 5.346999999988888e-06, 5.388999999994537e-06, 5.416000000008081e-06, 5.416000000008081e-06, 5.402999999987168e-06, 5.347000000016644e-06, 5.417000000007555e-06, 5.417000000007555e-06, 5.403000000014924e-06, 5.346999999988888e-06, 5.416000000008081e-06, 5.402999999987168e-06, 5.388999999994537e-06, 5.417000000007555e-06, 5.431000000000186e-06, 5.402999999987168e-06, 5.40200000001545e-06, 5.403000000014924e-06, 5.347000000016644e-06, 5.417000000007555e-06, 5.403000000014924e-06, 5.4159999999803254e-06, 5.402999999987168e-06, 5.388000000022819e-06, 5.402999999987168e-06, 5.401999999987694e-06, 5.403000000014924e-06, 5.416999999979799e-06, 5.401999999987694e-06, 5.403000000014924e-06, 5.485999999998992e-06, 5.387999999995063e-06, 5.402999999987168e-06, 5.4159999999803254e-06]</msg>
<status status="PASS" starttime="20201115 22:11:08.492" endtime="20201115 22:11:08.496"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.481" endtime="20201115 22:11:08.498"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:08.504" endtime="20201115 22:11:08.507"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:08.512" endtime="20201115 22:11:08.534"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.508" endtime="20201115 22:11:08.536"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.499" endtime="20201115 22:11:08.537"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.976" endtime="20201115 22:11:08.539"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.973" endtime="20201115 22:11:08.539"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.971" endtime="20201115 22:11:08.539"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:08.544" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:08.567" endtime="20201115 22:11:08.582"></status>
</kw>
<msg timestamp="20201115 22:11:08.584" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:08.564" endtime="20201115 22:11:08.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:08.590" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:08.586" endtime="20201115 22:11:08.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:08.592" endtime="20201115 22:11:08.596"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.557" endtime="20201115 22:11:08.597"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.551" endtime="20201115 22:11:08.599"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:08.615" endtime="20201115 22:11:08.961"></status>
</kw>
<msg timestamp="20201115 22:11:08.969" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048141, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048144625, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:11:08.612" endtime="20201115 22:11:08.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:08.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048141, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048144625, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:11:08.971" endtime="20201115 22:11:08.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:08.990" endtime="20201115 22:11:08.994"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.605" endtime="20201115 22:11:08.996"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.600" endtime="20201115 22:11:08.997"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:09.008" level="INFO">${RESULT} = [{'time': 0.048144625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.625000000000156e-06, 'source_diff': 3.625000000000156e-06}, {'time': 0.048203361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:08.999" endtime="20201115 22:11:09.009"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:09.044" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:09.010" endtime="20201115 22:11:09.044"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:09.055" level="INFO">NAME: 00-overhead-2-set</msg>
<status status="PASS" starttime="20201115 22:11:09.053" endtime="20201115 22:11:09.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:09.060" level="INFO">VALUE: [3.625000000000156e-06, 3.6529999999992957e-06, 3.6389999999997258e-06, 3.583000000001446e-06, 3.6529999999992957e-06, 3.6390000000066647e-06, 3.625000000000156e-06, 3.625000000000156e-06, 3.625000000000156e-06, 3.6389999999997258e-06, 3.6669999999988656e-06, 3.6389999999997258e-06, 3.638000000000252e-06, 3.6389999999997258e-06, 3.6389999999997258e-06, 3.610999999993647e-06, 3.611000000000586e-06, 3.6389999999997258e-06, 3.625000000000156e-06, 3.6389999999997258e-06, 3.611000000000586e-06, 3.611000000000586e-06, 3.6530000000062346e-06, 3.597000000001016e-06, 3.6529999999992957e-06, 3.5829999999945072e-06, 3.6389999999997258e-06, 3.625000000000156e-06, 3.6389999999997258e-06, 3.625000000000156e-06, 3.6120000000000596e-06, 3.625000000000156e-06, 3.625000000000156e-06, 3.625000000000156e-06, 3.625000000000156e-06, 3.5829999999945072e-06, 3.625000000000156e-06, 3.625000000000156e-06, 3.625000000000156e-06, 3.583000000001446e-06, 3.6529999999992957e-06, 3.6389999999997258e-06, 3.625000000000156e-06, 3.625000000000156e-06, 3.638000000000252e-06, 3.6389999999997258e-06, 3.5829999999945072e-06, 3.6389999999997258e-06, 3.6389999999997258e-06, 3.625000000000156e-06]</msg>
<status status="PASS" starttime="20201115 22:11:09.057" endtime="20201115 22:11:09.062"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.046" endtime="20201115 22:11:09.064"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:09.070" endtime="20201115 22:11:09.073"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:09.079" endtime="20201115 22:11:09.100"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.074" endtime="20201115 22:11:09.102"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.066" endtime="20201115 22:11:09.104"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.546" endtime="20201115 22:11:09.104"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.542" endtime="20201115 22:11:09.105"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.540" endtime="20201115 22:11:09.105"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:09.110" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:09.134" endtime="20201115 22:11:09.150"></status>
</kw>
<msg timestamp="20201115 22:11:09.151" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:09.130" endtime="20201115 22:11:09.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:09.157" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:09.153" endtime="20201115 22:11:09.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:09.159" endtime="20201115 22:11:09.163"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.123" endtime="20201115 22:11:09.165"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.117" endtime="20201115 22:11:09.166"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:09.183" endtime="20201115 22:11:09.533"></status>
</kw>
<msg timestamp="20201115 22:11:09.540" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048084583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048088472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:09.180" endtime="20201115 22:11:09.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:09.559" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048084583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048088472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:09.542" endtime="20201115 22:11:09.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:09.561" endtime="20201115 22:11:09.565"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.173" endtime="20201115 22:11:09.566"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.168" endtime="20201115 22:11:09.568"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:09.578" level="INFO">${RESULT} = [{'time': 0.048088472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.888999999999976e-06, 'source_diff': 3.888999999999976e-06}, {'time': 0.048152486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:09.569" endtime="20201115 22:11:09.579"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:09.609" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:09.580" endtime="20201115 22:11:09.610"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:09.621" level="INFO">NAME: 00-overhead-3-set</msg>
<status status="PASS" starttime="20201115 22:11:09.619" endtime="20201115 22:11:09.622"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:09.627" level="INFO">VALUE: [3.888999999999976e-06, 3.833000000001696e-06, 3.833000000001696e-06, 3.83400000000117e-06, 3.791999999995521e-06, 3.833000000001696e-06, 3.833000000001696e-06, 3.819000000002126e-06, 3.79200000000246e-06, 3.818999999995187e-06, 3.805999999995091e-06, 3.833000000001696e-06, 3.83400000000117e-06, 3.832999999994757e-06, 3.83400000000117e-06, 3.819000000002126e-06, 3.833000000001696e-06, 3.833000000001696e-06, 3.833000000001696e-06, 3.902999999999546e-06, 3.833000000001696e-06, 3.832999999994757e-06, 3.833000000001696e-06, 3.819000000002126e-06, 3.7639999999963814e-06, 3.847000000001266e-06, 3.847000000001266e-06, 3.8200000000016e-06, 3.819999999994661e-06, 3.833000000001696e-06, 3.8050000000025563e-06, 3.8050000000025563e-06, 3.83400000000117e-06, 3.833000000001696e-06, 3.8200000000016e-06, 3.83400000000117e-06, 3.83400000000117e-06, 3.833000000001696e-06, 3.7770000000034165e-06, 3.819000000002126e-06, 3.832999999994757e-06, 3.902000000000072e-06, 3.819000000002126e-06, 3.861000000000836e-06, 3.819999999994661e-06, 3.8050000000025563e-06, 3.819000000002126e-06, 3.819000000002126e-06, 3.819000000002126e-06, 3.8049999999956174e-06]</msg>
<status status="PASS" starttime="20201115 22:11:09.624" endtime="20201115 22:11:09.628"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.611" endtime="20201115 22:11:09.630"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:09.636" endtime="20201115 22:11:09.639"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:09.645" endtime="20201115 22:11:09.666"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.640" endtime="20201115 22:11:09.668"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.632" endtime="20201115 22:11:09.669"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.111" endtime="20201115 22:11:09.670"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.108" endtime="20201115 22:11:09.671"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.106" endtime="20201115 22:11:09.671"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:09.676" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:09.699" endtime="20201115 22:11:09.715"></status>
</kw>
<msg timestamp="20201115 22:11:09.716" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:09.695" endtime="20201115 22:11:09.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:09.722" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:09.718" endtime="20201115 22:11:09.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:09.725" endtime="20201115 22:11:09.729"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.688" endtime="20201115 22:11:09.730"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.682" endtime="20201115 22:11:09.732"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:09.748" endtime="20201115 22:11:10.097"></status>
</kw>
<msg timestamp="20201115 22:11:10.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047507278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047511306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:09.745" endtime="20201115 22:11:10.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:10.123" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047507278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047511306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:10.106" endtime="20201115 22:11:10.124"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:10.125" endtime="20201115 22:11:10.129"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.738" endtime="20201115 22:11:10.131"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.733" endtime="20201115 22:11:10.132"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:10.143" level="INFO">${RESULT} = [{'time': 0.047511306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.02800000000314e-06, 'source_diff': 4.02800000000314e-06}, {'time': 0.047582569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:11:10.134" endtime="20201115 22:11:10.143"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:10.174" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:10.145" endtime="20201115 22:11:10.174"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:10.186" level="INFO">NAME: 00-overhead-4-set</msg>
<status status="PASS" starttime="20201115 22:11:10.182" endtime="20201115 22:11:10.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:10.191" level="INFO">VALUE: [4.02800000000314e-06, 4.012999999997158e-06, 3.9859999999974915e-06, 4.041999999995771e-06, 4.01400000000357e-06, 4.000000000004e-06, 4.04200000000271e-06, 4.0270000000036665e-06, 4.013999999996631e-06, 3.9999999999970615e-06, 4.069000000002376e-06, 3.9859999999974915e-06, 4.01400000000357e-06, 4.041999999995771e-06, 4.02800000000314e-06, 4.013999999996631e-06, 3.9859999999974915e-06, 3.9999999999970615e-06, 4.026999999996728e-06, 4.027999999996201e-06, 4.01400000000357e-06, 4.02800000000314e-06, 4.027999999996201e-06, 4.026999999996728e-06, 4.0270000000036665e-06, 4.02800000000314e-06, 4.027999999996201e-06, 4.02800000000314e-06, 4.02800000000314e-06, 4.02800000000314e-06, 4.04200000000271e-06, 4.027999999996201e-06, 4.05600000000228e-06, 4.02800000000314e-06, 4.041999999995771e-06, 4.04200000000271e-06, 4.027999999996201e-06, 4.027999999996201e-06, 3.9999999999970615e-06, 4.013999999996631e-06, 4.04200000000271e-06, 4.04200000000271e-06, 4.04200000000271e-06, 3.971999999997922e-06, 4.000000000004e-06, 4.083000000001946e-06, 4.0409999999962976e-06, 3.9859999999974915e-06, 4.02800000000314e-06, 4.01400000000357e-06]</msg>
<status status="PASS" starttime="20201115 22:11:10.188" endtime="20201115 22:11:10.192"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.176" endtime="20201115 22:11:10.194"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:10.200" endtime="20201115 22:11:10.203"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:10.208" endtime="20201115 22:11:10.230"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.204" endtime="20201115 22:11:10.232"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.196" endtime="20201115 22:11:10.233"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.677" endtime="20201115 22:11:10.234"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.674" endtime="20201115 22:11:10.235"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.672" endtime="20201115 22:11:10.235"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:10.240" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:10.263" endtime="20201115 22:11:10.280"></status>
</kw>
<msg timestamp="20201115 22:11:10.282" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:10.259" endtime="20201115 22:11:10.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:10.288" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:10.284" endtime="20201115 22:11:10.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:10.290" endtime="20201115 22:11:10.294"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.252" endtime="20201115 22:11:10.296"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.246" endtime="20201115 22:11:10.298"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:10.315" endtime="20201115 22:11:10.654"></status>
</kw>
<msg timestamp="20201115 22:11:10.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047657944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047662139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:10.311" endtime="20201115 22:11:10.662"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:10.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047657944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047662139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:10.664" endtime="20201115 22:11:10.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:10.683" endtime="20201115 22:11:10.687"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.304" endtime="20201115 22:11:10.688"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.299" endtime="20201115 22:11:10.690"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:10.700" level="INFO">${RESULT} = [{'time': 0.047662139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1949999999985055e-06, 'source_diff': 4.1949999999985055e-06}, {'time': 0.047753917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:10.691" endtime="20201115 22:11:10.701"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:10.731" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:10.702" endtime="20201115 22:11:10.732"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:10.742" level="INFO">NAME: 00-overhead-5-set</msg>
<status status="PASS" starttime="20201115 22:11:10.740" endtime="20201115 22:11:10.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:10.749" level="INFO">VALUE: [4.1949999999985055e-06, 4.222999999997645e-06, 4.263999999996881e-06, 4.207999999998602e-06, 4.209000000005014e-06, 4.221999999998172e-06, 4.2360000000046805e-06, 4.221999999998172e-06, 4.152999999999796e-06, 4.221999999998172e-06, 4.1949999999985055e-06, 4.221999999998172e-06, 4.207999999998602e-06, 4.166999999999366e-06, 4.194000000005971e-06, 4.2909999999965476e-06, 4.2359999999977416e-06, 4.208999999998075e-06, 4.2360000000046805e-06, 4.193999999999032e-06, 4.2359999999977416e-06, 4.208999999998075e-06, 4.2360000000046805e-06, 4.208999999998075e-06, 4.166999999999366e-06, 4.221999999998172e-06, 4.2360000000046805e-06, 4.207999999998602e-06, 4.2359999999977416e-06, 4.209000000005014e-06, 4.221999999998172e-06, 4.207999999998602e-06, 4.2220000000051106e-06, 4.223000000004584e-06, 4.179999999999462e-06, 4.193999999999032e-06, 4.1949999999985055e-06, 4.193999999999032e-06, 4.193999999999032e-06, 4.207999999998602e-06, 4.209000000005014e-06, 4.2359999999977416e-06, 4.207999999998602e-06, 4.208999999998075e-06, 4.30600000000253e-06, 4.207999999998602e-06, 4.236999999997215e-06, 4.152000000000322e-06, 4.26400000000382e-06, 4.208999999998075e-06]</msg>
<status status="PASS" starttime="20201115 22:11:10.744" endtime="20201115 22:11:10.750"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.733" endtime="20201115 22:11:10.751"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:10.758" endtime="20201115 22:11:10.760"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:10.766" endtime="20201115 22:11:10.787"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.762" endtime="20201115 22:11:10.789"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.753" endtime="20201115 22:11:10.791"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.241" endtime="20201115 22:11:10.791"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.238" endtime="20201115 22:11:10.792"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.236" endtime="20201115 22:11:10.792"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:10.797" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:10.820" endtime="20201115 22:11:10.837"></status>
</kw>
<msg timestamp="20201115 22:11:10.838" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:10.817" endtime="20201115 22:11:10.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:10.844" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:10.840" endtime="20201115 22:11:10.845"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:10.847" endtime="20201115 22:11:10.850"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.810" endtime="20201115 22:11:10.852"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.804" endtime="20201115 22:11:10.853"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:10.871" endtime="20201115 22:11:11.182"></status>
</kw>
<msg timestamp="20201115 22:11:11.185" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047383083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047387486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:10.867" endtime="20201115 22:11:11.185"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:11.193" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047383083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047387486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:11.186" endtime="20201115 22:11:11.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:11.195" endtime="20201115 22:11:11.196"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.859" endtime="20201115 22:11:11.197"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.855" endtime="20201115 22:11:11.198"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:11.203" level="INFO">${RESULT} = [{'time': 0.047387486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.047480389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:11.199" endtime="20201115 22:11:11.203"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:11.217" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:11.204" endtime="20201115 22:11:11.217"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:11.223" level="INFO">NAME: 00-overhead-6-set</msg>
<status status="PASS" starttime="20201115 22:11:11.222" endtime="20201115 22:11:11.223"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:11.226" level="INFO">VALUE: [4.403000000000046e-06, 4.403000000000046e-06, 4.457999999998852e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.416999999999616e-06, 4.416000000000142e-06, 4.416000000000142e-06, 4.403000000000046e-06, 4.402000000000572e-06, 4.403000000000046e-06, 4.430999999999186e-06, 4.416999999999616e-06, 4.361000000001336e-06, 4.403000000000046e-06, 4.402000000000572e-06, 4.389000000000476e-06, 4.402000000000572e-06, 4.445000000005694e-06, 4.430999999999186e-06, 4.416000000000142e-06, 4.4170000000065546e-06, 4.388000000001002e-06, 4.430999999999186e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.332999999995257e-06, 4.389000000000476e-06, 4.430999999999186e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.457999999998852e-06, 4.430999999999186e-06, 4.403000000000046e-06, 4.471999999998422e-06, 4.416000000000142e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.347000000001766e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.375000000000906e-06, 4.389000000000476e-06, 4.416000000000142e-06, 4.333000000002196e-06]</msg>
<status status="PASS" starttime="20201115 22:11:11.224" endtime="20201115 22:11:11.227"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.218" endtime="20201115 22:11:11.227"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:11.230" endtime="20201115 22:11:11.232"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:11.234" endtime="20201115 22:11:11.254"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.232" endtime="20201115 22:11:11.255"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.228" endtime="20201115 22:11:11.255"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.798" endtime="20201115 22:11:11.256"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.795" endtime="20201115 22:11:11.256"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.793" endtime="20201115 22:11:11.256"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:11.258" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:11.269" endtime="20201115 22:11:11.286"></status>
</kw>
<msg timestamp="20201115 22:11:11.287" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:11.268" endtime="20201115 22:11:11.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:11.294" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:11.289" endtime="20201115 22:11:11.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:11.296" endtime="20201115 22:11:11.300"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.264" endtime="20201115 22:11:11.302"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.262" endtime="20201115 22:11:11.303"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:11.321" endtime="20201115 22:11:11.659"></status>
</kw>
<msg timestamp="20201115 22:11:11.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027243681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027248292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:11.317" endtime="20201115 22:11:11.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:11.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027243681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027248292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:11.668" endtime="20201115 22:11:11.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:11.687" endtime="20201115 22:11:11.691"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.310" endtime="20201115 22:11:11.692"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.305" endtime="20201115 22:11:11.694"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:11.704" level="INFO">${RESULT} = [{'time': 0.027248292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.611000000001586e-06, 'source_diff': 4.611000000001586e-06}, {'time': 0.027345611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:11.695" endtime="20201115 22:11:11.705"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:11.734" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:11.706" endtime="20201115 22:11:11.735"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:11.745" level="INFO">NAME: 00-overhead-7-set</msg>
<status status="PASS" starttime="20201115 22:11:11.743" endtime="20201115 22:11:11.746"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:11.751" level="INFO">VALUE: [4.611000000001586e-06, 4.596999999998547e-06, 4.554999999999837e-06, 4.611000000001586e-06, 4.611000000001586e-06, 4.5839999999984504e-06, 4.596999999998547e-06, 4.653000000000296e-06, 4.666999999999866e-06, 4.582999999998977e-06, 4.568999999999407e-06, 4.625000000001156e-06, 4.611000000001586e-06, 4.625000000001156e-06, 4.596999999998547e-06, 4.596999999998547e-06, 4.611000000001586e-06, 4.597000000002016e-06, 4.653000000000296e-06, 4.59800000000149e-06, 4.528000000000171e-06, 4.597000000002016e-06, 4.680999999999436e-06, 4.653000000000296e-06, 4.59800000000149e-06, 4.596999999998547e-06, 4.5839999999984504e-06, 4.639000000000726e-06, 4.596999999998547e-06, 4.59800000000149e-06, 4.596999999998547e-06, 4.611000000001586e-06, 4.639000000000726e-06, 4.596999999998547e-06, 4.568999999999407e-06, 4.611000000001586e-06, 4.59799999999802e-06, 4.610999999998117e-06, 4.59800000000149e-06, 4.58400000000192e-06, 4.596999999995077e-06, 4.611000000001586e-06, 4.59800000000149e-06, 4.625000000001156e-06, 4.610999999994647e-06, 4.611000000001586e-06, 4.597999999994551e-06, 4.653000000000296e-06, 4.582999999995507e-06, 4.597000000002016e-06]</msg>
<status status="PASS" starttime="20201115 22:11:11.748" endtime="20201115 22:11:11.753"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.736" endtime="20201115 22:11:11.754"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:11.761" endtime="20201115 22:11:11.764"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:11.769" endtime="20201115 22:11:11.791"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.765" endtime="20201115 22:11:11.792"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.756" endtime="20201115 22:11:11.794"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.259" endtime="20201115 22:11:11.794"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.257" endtime="20201115 22:11:11.795"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.256" endtime="20201115 22:11:11.795"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:11.800" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:11.828" endtime="20201115 22:11:11.846"></status>
</kw>
<msg timestamp="20201115 22:11:11.847" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:11.824" endtime="20201115 22:11:11.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:11.854" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:11.850" endtime="20201115 22:11:11.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:11.856" endtime="20201115 22:11:11.860"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.817" endtime="20201115 22:11:11.861"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.807" endtime="20201115 22:11:11.863"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:11.880" endtime="20201115 22:11:12.217"></status>
</kw>
<msg timestamp="20201115 22:11:12.224" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.051988389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.051993167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:11.876" endtime="20201115 22:11:12.225"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:12.242" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.051988389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.051993167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:12.226" endtime="20201115 22:11:12.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:12.245" endtime="20201115 22:11:12.249"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.869" endtime="20201115 22:11:12.250"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.864" endtime="20201115 22:11:12.252"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:12.262" level="INFO">${RESULT} = [{'time': 0.051993167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.777999999996951e-06, 'source_diff': 4.777999999996951e-06}, {'time': 0.052102014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:12.253" endtime="20201115 22:11:12.263"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:12.293" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:12.264" endtime="20201115 22:11:12.293"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:12.304" level="INFO">NAME: 00-overhead-8-set</msg>
<status status="PASS" starttime="20201115 22:11:12.301" endtime="20201115 22:11:12.304"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:12.309" level="INFO">VALUE: [4.777999999996951e-06, 4.79200000000346e-06, 4.805999999996091e-06, 4.8049999999966175e-06, 4.8049999999966175e-06, 4.777999999996951e-06, 4.805999999996091e-06, 4.8049999999966175e-06, 4.805999999996091e-06, 4.833000000002696e-06, 4.80600000000303e-06, 4.86200000000131e-06, 4.791999999996521e-06, 4.79200000000346e-06, 4.791999999996521e-06, 4.8200000000026e-06, 4.79200000000346e-06, 4.8189999999961874e-06, 4.791999999996521e-06, 4.777999999996951e-06, 4.777000000004417e-06, 4.791999999996521e-06, 4.7499999999978115e-06, 4.791999999996521e-06, 4.790999999997048e-06, 4.80600000000303e-06, 4.847000000002266e-06, 4.79200000000346e-06, 4.790999999997048e-06, 4.79200000000346e-06, 4.791999999996521e-06, 4.832999999995757e-06, 4.791999999996521e-06, 4.805999999996091e-06, 4.80600000000303e-06, 4.8050000000035564e-06, 4.80600000000303e-06, 4.8189999999961874e-06, 4.77800000000389e-06, 4.777999999996951e-06, 4.79200000000346e-06, 4.80600000000303e-06, 4.791999999996521e-06, 4.79200000000346e-06, 4.79200000000346e-06, 4.791999999996521e-06, 4.80600000000303e-06, 4.791999999996521e-06, 4.805999999996091e-06, 4.79200000000346e-06]</msg>
<status status="PASS" starttime="20201115 22:11:12.306" endtime="20201115 22:11:12.311"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.295" endtime="20201115 22:11:12.313"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:12.319" endtime="20201115 22:11:12.322"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:12.328" endtime="20201115 22:11:12.349"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.323" endtime="20201115 22:11:12.352"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.315" endtime="20201115 22:11:12.353"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.801" endtime="20201115 22:11:12.354"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.798" endtime="20201115 22:11:12.355"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.796" endtime="20201115 22:11:12.355"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:12.360" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:12.384" endtime="20201115 22:11:12.403"></status>
</kw>
<msg timestamp="20201115 22:11:12.404" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:12.381" endtime="20201115 22:11:12.405"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:12.410" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:12.406" endtime="20201115 22:11:12.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:12.413" endtime="20201115 22:11:12.416"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.373" endtime="20201115 22:11:12.418"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.367" endtime="20201115 22:11:12.419"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:12.436" endtime="20201115 22:11:12.773"></status>
</kw>
<msg timestamp="20201115 22:11:12.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049713389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049718389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:12.433" endtime="20201115 22:11:12.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:12.798" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049713389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049718389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:12.782" endtime="20201115 22:11:12.799"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:12.800" endtime="20201115 22:11:12.804"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.426" endtime="20201115 22:11:12.806"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.421" endtime="20201115 22:11:12.807"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:12.818" level="INFO">${RESULT} = [{'time': 0.049718389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.0000000000050004e-06, 'source_diff': 5.0000000000050004e-06}, {'time': 0.049846458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:12.809" endtime="20201115 22:11:12.818"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:12.848" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:12.820" endtime="20201115 22:11:12.849"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:12.859" level="INFO">NAME: 00-overhead-9-set</msg>
<status status="PASS" starttime="20201115 22:11:12.857" endtime="20201115 22:11:12.860"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:12.865" level="INFO">VALUE: [5.0000000000050004e-06, 4.9860000000054305e-06, 4.985999999998492e-06, 4.986999999997965e-06, 5.02800000000414e-06, 4.9860000000054305e-06, 4.943999999999782e-06, 4.9999999999980616e-06, 4.9999999999980616e-06, 5.0000000000050004e-06, 4.9999999999980616e-06, 5.01400000000457e-06, 4.930000000000212e-06, 4.985999999998492e-06, 4.971999999998922e-06, 5.01400000000457e-06, 5.027000000004667e-06, 4.972000000005861e-06, 4.9589999999988255e-06, 4.985999999998492e-06, 4.985999999998492e-06, 4.985999999998492e-06, 4.971999999998922e-06, 4.9860000000054305e-06, 4.985999999998492e-06, 5.0139999999976315e-06, 4.9449999999992555e-06, 4.971999999998922e-06, 5.01400000000457e-06, 4.971999999998922e-06, 4.985999999998492e-06, 4.9999999999980616e-06, 5.04200000000371e-06, 4.985999999998492e-06, 5.0139999999976315e-06, 5.0549999999968676e-06, 5.0139999999976315e-06, 4.9999999999980616e-06, 5.02800000000414e-06, 5.01400000000457e-06, 5.0000000000050004e-06, 4.9999999999980616e-06, 4.943999999999782e-06, 4.985999999998492e-06, 4.971999999998922e-06, 5.0139999999976315e-06, 5.0000000000050004e-06, 4.985999999998492e-06, 4.972999999998395e-06, 4.985999999998492e-06]</msg>
<status status="PASS" starttime="20201115 22:11:12.862" endtime="20201115 22:11:12.868"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.850" endtime="20201115 22:11:12.870"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:12.876" endtime="20201115 22:11:12.879"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:12.884" endtime="20201115 22:11:12.906"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.880" endtime="20201115 22:11:12.907"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.871" endtime="20201115 22:11:12.909"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.362" endtime="20201115 22:11:12.909"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.358" endtime="20201115 22:11:12.910"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.356" endtime="20201115 22:11:12.911"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:12.915" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:12.938" endtime="20201115 22:11:12.957"></status>
</kw>
<msg timestamp="20201115 22:11:12.958" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:12.935" endtime="20201115 22:11:12.959"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:12.965" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:12.961" endtime="20201115 22:11:12.965"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:12.967" endtime="20201115 22:11:12.971"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.928" endtime="20201115 22:11:12.972"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.922" endtime="20201115 22:11:12.974"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:12.990" endtime="20201115 22:11:13.328"></status>
</kw>
<msg timestamp="20201115 22:11:13.335" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047188486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047193681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:12.987" endtime="20201115 22:11:13.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:13.353" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047188486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047193681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:13.337" endtime="20201115 22:11:13.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:13.355" endtime="20201115 22:11:13.359"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.980" endtime="20201115 22:11:13.361"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.975" endtime="20201115 22:11:13.362"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:13.373" level="INFO">${RESULT} = [{'time': 0.047193681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.1949999999995056e-06, 'source_diff': 5.1949999999995056e-06}, {'time': 0.047329292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:13.364" endtime="20201115 22:11:13.373"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:13.406" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:13.375" endtime="20201115 22:11:13.407"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:13.417" level="INFO">NAME: 00-overhead-10-set</msg>
<status status="PASS" starttime="20201115 22:11:13.415" endtime="20201115 22:11:13.418"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:13.424" level="INFO">VALUE: [5.1949999999995056e-06, 5.1949999999995056e-06, 5.180000000000462e-06, 5.180000000000462e-06, 5.167000000000366e-06, 5.194000000000032e-06, 5.180999999999936e-06, 5.180999999999936e-06, 5.194000000000032e-06, 5.194000000000032e-06, 5.1949999999995056e-06, 5.153000000000796e-06, 5.167000000000366e-06, 5.167000000000366e-06, 5.194000000000032e-06, 5.125000000001656e-06, 5.096999999995577e-06, 5.207999999999602e-06, 5.139000000001226e-06, 5.180000000000462e-06, 5.167000000000366e-06, 5.1949999999995056e-06, 5.221999999999172e-06, 5.194000000000032e-06, 5.179999999993523e-06, 5.180000000000462e-06, 5.180999999999936e-06, 5.1949999999995056e-06, 5.1949999999995056e-06, 5.180999999999936e-06, 5.235999999998742e-06, 5.207999999999602e-06, 5.222999999998645e-06, 5.180999999999936e-06, 5.207999999999602e-06, 5.207999999999602e-06, 5.1949999999995056e-06, 5.180000000000462e-06, 5.180999999999936e-06, 5.139000000001226e-06, 5.207999999999602e-06, 5.167000000000366e-06, 5.139000000001226e-06, 5.165999999993953e-06, 5.194000000000032e-06, 5.124999999994717e-06, 5.180000000000462e-06, 5.180999999999936e-06, 5.180999999999936e-06, 5.180999999999936e-06]</msg>
<status status="PASS" starttime="20201115 22:11:13.420" endtime="20201115 22:11:13.426"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.408" endtime="20201115 22:11:13.427"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:13.434" endtime="20201115 22:11:13.436"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:13.442" endtime="20201115 22:11:13.464"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.438" endtime="20201115 22:11:13.465"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.429" endtime="20201115 22:11:13.467"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.916" endtime="20201115 22:11:13.467"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.913" endtime="20201115 22:11:13.468"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.911" endtime="20201115 22:11:13.468"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:13.473" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:13.496" endtime="20201115 22:11:13.516"></status>
</kw>
<msg timestamp="20201115 22:11:13.517" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:13.493" endtime="20201115 22:11:13.517"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:13.523" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:13.519" endtime="20201115 22:11:13.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:13.525" endtime="20201115 22:11:13.529"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.486" endtime="20201115 22:11:13.531"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.480" endtime="20201115 22:11:13.532"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:13.549" endtime="20201115 22:11:13.883"></status>
</kw>
<msg timestamp="20201115 22:11:13.890" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047254569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047259931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:13.545" endtime="20201115 22:11:13.891"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:13.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047254569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047259931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:13.893" endtime="20201115 22:11:13.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:13.911" endtime="20201115 22:11:13.915"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.538" endtime="20201115 22:11:13.916"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.533" endtime="20201115 22:11:13.918"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:13.928" level="INFO">${RESULT} = [{'time': 0.047259931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.361999999994871e-06, 'source_diff': 5.361999999994871e-06}, {'time': 0.047398444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:13.919" endtime="20201115 22:11:13.929"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:13.959" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:13.931" endtime="20201115 22:11:13.960"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:13.970" level="INFO">NAME: 00-overhead-11-set</msg>
<status status="PASS" starttime="20201115 22:11:13.968" endtime="20201115 22:11:13.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:13.976" level="INFO">VALUE: [5.361999999994871e-06, 5.374999999994967e-06, 5.374999999994967e-06, 5.36200000000181e-06, 5.375000000001906e-06, 5.375000000001906e-06, 5.347000000002766e-06, 5.333999999995731e-06, 5.375000000001906e-06, 5.375000000001906e-06, 5.389000000001476e-06, 5.388999999994537e-06, 5.403000000001046e-06, 5.403000000001046e-06, 5.389000000001476e-06, 5.416000000001142e-06, 5.403000000001046e-06, 5.375000000001906e-06, 5.389000000001476e-06, 5.403000000001046e-06, 5.417000000000616e-06, 5.375000000001906e-06, 5.388999999994537e-06, 5.333000000003196e-06, 5.389000000001476e-06, 5.388000000002002e-06, 5.389000000001476e-06, 5.389000000001476e-06, 5.375000000001906e-06, 5.389000000001476e-06, 5.360999999995397e-06, 5.416000000001142e-06, 5.388000000002002e-06, 5.402999999994107e-06, 5.374999999994967e-06, 5.389000000001476e-06, 5.375000000001906e-06, 5.389000000001476e-06, 5.361000000002336e-06, 5.361000000002336e-06, 5.416000000001142e-06, 5.375000000001906e-06, 5.360999999995397e-06, 5.33400000000267e-06, 5.375000000001906e-06, 5.361000000002336e-06, 5.389000000001476e-06, 5.375000000001906e-06, 5.375000000001906e-06, 5.416999999993677e-06]</msg>
<status status="PASS" starttime="20201115 22:11:13.973" endtime="20201115 22:11:13.978"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.961" endtime="20201115 22:11:13.979"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:13.986" endtime="20201115 22:11:13.988"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:13.994" endtime="20201115 22:11:14.016"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.989" endtime="20201115 22:11:14.017"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.981" endtime="20201115 22:11:14.019"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.474" endtime="20201115 22:11:14.020"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.471" endtime="20201115 22:11:14.020"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.469" endtime="20201115 22:11:14.021"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:14.025" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:14.048" endtime="20201115 22:11:14.069"></status>
</kw>
<msg timestamp="20201115 22:11:14.070" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:14.045" endtime="20201115 22:11:14.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:14.077" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:14.073" endtime="20201115 22:11:14.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:14.079" endtime="20201115 22:11:14.083"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.038" endtime="20201115 22:11:14.084"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.032" endtime="20201115 22:11:14.086"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:14.102" endtime="20201115 22:11:14.439"></status>
</kw>
<msg timestamp="20201115 22:11:14.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047566042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047571625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:14.099" endtime="20201115 22:11:14.447"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:14.464" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047566042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047571625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:14.448" endtime="20201115 22:11:14.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:14.467" endtime="20201115 22:11:14.471"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.092" endtime="20201115 22:11:14.473"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.087" endtime="20201115 22:11:14.474"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:14.485" level="INFO">${RESULT} = [{'time': 0.047571625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.582999999996507e-06, 'source_diff': 5.582999999996507e-06}, {'time': 0.047729139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:14.476" endtime="20201115 22:11:14.485"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:14.515" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:14.487" endtime="20201115 22:11:14.516"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:14.523" level="INFO">NAME: 00-overhead-12-set</msg>
<status status="PASS" starttime="20201115 22:11:14.522" endtime="20201115 22:11:14.523"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:14.525" level="INFO">VALUE: [5.582999999996507e-06, 5.624999999995217e-06, 5.596999999996077e-06, 5.582999999996507e-06, 5.58400000000292e-06, 5.527000000005167e-06, 5.597000000003016e-06, 5.638000000002252e-06, 5.582999999996507e-06, 5.569000000003876e-06, 5.55600000000378e-06, 5.57000000000335e-06, 5.582999999996507e-06, 5.5139999999981315e-06, 5.596999999996077e-06, 5.625000000002156e-06, 5.541000000004737e-06, 5.55600000000378e-06, 5.58400000000292e-06, 5.5689999999969375e-06, 5.541999999997271e-06, 5.569999999996411e-06, 5.582999999996507e-06, 5.57000000000335e-06, 5.596999999996077e-06, 5.5689999999969375e-06, 5.57000000000335e-06, 5.582999999996507e-06, 5.54200000000421e-06, 5.610999999995647e-06, 5.57000000000335e-06, 5.583999999995981e-06, 5.527999999997701e-06, 5.582999999996507e-06, 5.58400000000292e-06, 5.527999999997701e-06, 5.58400000000292e-06, 5.582999999996507e-06, 5.582999999996507e-06, 5.54200000000421e-06, 5.653000000001296e-06, 5.58400000000292e-06, 5.582999999996507e-06, 5.569999999996411e-06, 5.5689999999969375e-06, 5.59800000000249e-06, 5.5689999999969375e-06, 5.583000000003446e-06, 5.5550000000043065e-06, 5.57000000000335e-06]</msg>
<status status="PASS" starttime="20201115 22:11:14.524" endtime="20201115 22:11:14.526"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.517" endtime="20201115 22:11:14.527"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:14.530" endtime="20201115 22:11:14.532"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:14.534" endtime="20201115 22:11:14.554"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.532" endtime="20201115 22:11:14.554"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.528" endtime="20201115 22:11:14.555"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.026" endtime="20201115 22:11:14.555"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.023" endtime="20201115 22:11:14.556"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.021" endtime="20201115 22:11:14.556"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:14.558" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:14.569" endtime="20201115 22:11:14.588"></status>
</kw>
<msg timestamp="20201115 22:11:14.589" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:14.567" endtime="20201115 22:11:14.589"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:14.592" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:14.590" endtime="20201115 22:11:14.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:14.593" endtime="20201115 22:11:14.595"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.564" endtime="20201115 22:11:14.595"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.561" endtime="20201115 22:11:14.596"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:14.604" endtime="20201115 22:11:14.937"></status>
</kw>
<msg timestamp="20201115 22:11:14.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027359792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027365569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:14.602" endtime="20201115 22:11:14.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:14.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027359792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027365569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:14.946" endtime="20201115 22:11:14.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:14.964" endtime="20201115 22:11:14.968"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.599" endtime="20201115 22:11:14.970"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.597" endtime="20201115 22:11:14.971"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:14.982" level="INFO">${RESULT} = [{'time': 0.027365569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.776999999998478e-06, 'source_diff': 5.776999999998478e-06}, {'time': 0.027527264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:14.973" endtime="20201115 22:11:14.983"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:15.013" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:14.984" endtime="20201115 22:11:15.013"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:15.024" level="INFO">NAME: 00-overhead-13-set</msg>
<status status="PASS" starttime="20201115 22:11:15.022" endtime="20201115 22:11:15.025"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:15.029" level="INFO">VALUE: [5.776999999998478e-06, 5.833000000000227e-06, 5.749999999998812e-06, 5.750000000002281e-06, 5.7779999999979514e-06, 5.7639999999983815e-06, 5.778000000001421e-06, 5.7639999999983815e-06, 5.778000000001421e-06, 5.762999999998908e-06, 5.778000000001421e-06, 5.7779999999979514e-06, 5.819000000000657e-06, 5.778000000001421e-06, 5.820000000000131e-06, 5.7779999999979514e-06, 5.7639999999983815e-06, 5.778000000001421e-06, 5.762999999998908e-06, 5.722000000003141e-06, 5.778000000001421e-06, 5.749999999998812e-06, 5.764000000001851e-06, 5.7639999999983815e-06, 5.736000000006181e-06, 5.749999999998812e-06, 5.749999999998812e-06, 5.7779999999979514e-06, 5.7639999999983815e-06, 5.749999999998812e-06, 5.7639999999983815e-06, 5.735999999999242e-06, 5.791999999997521e-06, 5.8200000000036e-06, 5.8189999999971875e-06, 5.7500000000057505e-06, 5.749999999998812e-06, 5.7779999999979514e-06, 5.7639999999983815e-06, 5.77800000000489e-06, 5.790999999998048e-06, 5.77800000000489e-06, 5.7779999999979514e-06, 5.7779999999979514e-06, 5.7779999999979514e-06, 5.7639999999983815e-06, 5.76400000000532e-06, 5.776999999998478e-06, 5.7639999999983815e-06, 5.790999999998048e-06]</msg>
<status status="PASS" starttime="20201115 22:11:15.026" endtime="20201115 22:11:15.031"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.015" endtime="20201115 22:11:15.033"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:15.039" endtime="20201115 22:11:15.042"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:15.048" endtime="20201115 22:11:15.069"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.043" endtime="20201115 22:11:15.071"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.035" endtime="20201115 22:11:15.072"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.559" endtime="20201115 22:11:15.073"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.557" endtime="20201115 22:11:15.074"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.556" endtime="20201115 22:11:15.074"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:15.079" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:15.102" endtime="20201115 22:11:15.123"></status>
</kw>
<msg timestamp="20201115 22:11:15.124" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:15.098" endtime="20201115 22:11:15.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:15.130" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:15.126" endtime="20201115 22:11:15.131"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:15.133" endtime="20201115 22:11:15.137"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.091" endtime="20201115 22:11:15.138"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.085" endtime="20201115 22:11:15.140"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:15.157" endtime="20201115 22:11:15.494"></status>
</kw>
<msg timestamp="20201115 22:11:15.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047311653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047317583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:15.154" endtime="20201115 22:11:15.502"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:15.520" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047311653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047317583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:15.504" endtime="20201115 22:11:15.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:15.522" endtime="20201115 22:11:15.526"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.146" endtime="20201115 22:11:15.528"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.141" endtime="20201115 22:11:15.529"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:15.540" level="INFO">${RESULT} = [{'time': 0.047317583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.930000000001212e-06, 'source_diff': 5.930000000001212e-06}, {'time': 0.047487347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:15.531" endtime="20201115 22:11:15.540"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:15.572" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:15.542" endtime="20201115 22:11:15.573"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:15.583" level="INFO">NAME: 00-overhead-14-set</msg>
<status status="PASS" starttime="20201115 22:11:15.581" endtime="20201115 22:11:15.584"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:15.589" level="INFO">VALUE: [5.930000000001212e-06, 5.971999999999922e-06, 5.999999999999062e-06, 5.971999999999922e-06, 5.943999999993843e-06, 5.958000000000352e-06, 5.958000000000352e-06, 6.026999999998728e-06, 5.971999999999922e-06, 6.041999999997771e-06, 5.971999999999922e-06, 5.9589999999998255e-06, 5.958000000000352e-06, 5.958000000000352e-06, 5.971999999999922e-06, 5.958000000000352e-06, 5.971999999999922e-06, 5.971999999999922e-06, 5.9729999999993955e-06, 5.9729999999993955e-06, 5.971999999999922e-06, 5.971999999999922e-06, 5.944000000000782e-06, 5.999999999999062e-06, 5.944000000000782e-06, 5.958000000000352e-06, 5.9729999999993955e-06, 5.971999999999922e-06, 5.986999999998965e-06, 5.9729999999993955e-06, 5.971999999999922e-06, 5.9729999999993955e-06, 5.971999999999922e-06, 5.985999999999492e-06, 5.971999999999922e-06, 6.026999999998728e-06, 5.944000000000782e-06, 5.9729999999993955e-06, 5.9589999999998255e-06, 5.9589999999998255e-06, 5.944000000000782e-06, 5.971999999999922e-06, 5.971999999999922e-06, 5.971999999999922e-06, 5.958000000000352e-06, 5.971999999999922e-06, 6.0139999999986316e-06, 5.9729999999993955e-06, 5.930000000001212e-06, 5.958000000000352e-06]</msg>
<status status="PASS" starttime="20201115 22:11:15.586" endtime="20201115 22:11:15.591"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.574" endtime="20201115 22:11:15.593"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:15.599" endtime="20201115 22:11:15.602"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:15.607" endtime="20201115 22:11:15.629"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.603" endtime="20201115 22:11:15.631"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.594" endtime="20201115 22:11:15.632"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.080" endtime="20201115 22:11:15.633"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.076" endtime="20201115 22:11:15.633"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.075" endtime="20201115 22:11:15.634"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:15.639" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:15.662" endtime="20201115 22:11:15.684"></status>
</kw>
<msg timestamp="20201115 22:11:15.685" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:15.659" endtime="20201115 22:11:15.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:15.691" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:15.687" endtime="20201115 22:11:15.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:15.694" endtime="20201115 22:11:15.697"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.652" endtime="20201115 22:11:15.699"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.645" endtime="20201115 22:11:15.700"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:15.717" endtime="20201115 22:11:16.054"></status>
</kw>
<msg timestamp="20201115 22:11:16.061" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048105403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048111556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:15.713" endtime="20201115 22:11:16.061"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:16.079" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048105403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048111556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:16.063" endtime="20201115 22:11:16.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:16.081" endtime="20201115 22:11:16.085"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.706" endtime="20201115 22:11:16.087"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.702" endtime="20201115 22:11:16.088"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:16.099" level="INFO">${RESULT} = [{'time': 0.048111556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.153000000001796e-06, 'source_diff': 6.153000000001796e-06}, {'time': 0.048297306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:16.090" endtime="20201115 22:11:16.099"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:16.129" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:16.101" endtime="20201115 22:11:16.130"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:16.140" level="INFO">NAME: 00-overhead-15-set</msg>
<status status="PASS" starttime="20201115 22:11:16.138" endtime="20201115 22:11:16.141"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:16.145" level="INFO">VALUE: [6.153000000001796e-06, 6.152999999994857e-06, 6.153000000001796e-06, 6.167000000001366e-06, 6.151999999995383e-06, 6.167000000001366e-06, 6.153000000001796e-06, 6.138999999995287e-06, 6.181000000000936e-06, 6.167000000001366e-06, 6.181000000000936e-06, 6.166000000001892e-06, 6.167000000001366e-06, 6.152999999994857e-06, 6.167000000001366e-06, 6.124999999995717e-06, 6.139000000002226e-06, 6.195000000000506e-06, 6.110999999996147e-06, 6.167000000001366e-06, 6.180000000001462e-06, 6.138999999995287e-06, 6.165999999994953e-06, 6.153000000001796e-06, 6.138999999995287e-06, 6.166000000001892e-06, 6.167000000001366e-06, 6.111000000003086e-06, 6.139000000002226e-06, 6.167000000001366e-06, 6.153000000001796e-06, 6.167000000001366e-06, 6.167000000001366e-06, 6.2090000000000756e-06, 6.152999999994857e-06, 6.167000000001366e-06, 6.166999999994427e-06, 6.167000000001366e-06, 6.124999999995717e-06, 6.1379999999958135e-06, 6.167000000001366e-06, 6.167000000001366e-06, 6.167000000001366e-06, 6.195000000000506e-06, 6.153000000001796e-06, 6.179999999994523e-06, 6.1379999999958135e-06, 6.153000000001796e-06, 6.111000000003086e-06, 6.167000000001366e-06]</msg>
<status status="PASS" starttime="20201115 22:11:16.142" endtime="20201115 22:11:16.148"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.131" endtime="20201115 22:11:16.149"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:16.156" endtime="20201115 22:11:16.158"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:16.164" endtime="20201115 22:11:16.185"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.159" endtime="20201115 22:11:16.188"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.151" endtime="20201115 22:11:16.189"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.640" endtime="20201115 22:11:16.190"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.636" endtime="20201115 22:11:16.191"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.635" endtime="20201115 22:11:16.191"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:16.196" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:16.219" endtime="20201115 22:11:16.241"></status>
</kw>
<msg timestamp="20201115 22:11:16.242" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:16.215" endtime="20201115 22:11:16.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:16.248" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:16.244" endtime="20201115 22:11:16.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:16.250" endtime="20201115 22:11:16.254"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.208" endtime="20201115 22:11:16.256"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.202" endtime="20201115 22:11:16.257"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:16.274" endtime="20201115 22:11:16.612"></status>
</kw>
<msg timestamp="20201115 22:11:16.619" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048252375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048258736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:16.270" endtime="20201115 22:11:16.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:16.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048252375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048258736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:16.621" endtime="20201115 22:11:16.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:16.639" endtime="20201115 22:11:16.643"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.263" endtime="20201115 22:11:16.645"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.258" endtime="20201115 22:11:16.646"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:16.657" level="INFO">${RESULT} = [{'time': 0.048258736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.361000000003336e-06, 'source_diff': 6.361000000003336e-06}, {'time': 0.048454611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:16.648" endtime="20201115 22:11:16.657"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:16.687" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:16.659" endtime="20201115 22:11:16.688"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:16.698" level="INFO">NAME: 00-overhead-16-set</msg>
<status status="PASS" starttime="20201115 22:11:16.696" endtime="20201115 22:11:16.699"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:16.704" level="INFO">VALUE: [6.361000000003336e-06, 6.333000000004196e-06, 6.34800000000324e-06, 6.3329999999972575e-06, 6.347000000003766e-06, 6.360999999996397e-06, 6.347000000003766e-06, 6.416000000002142e-06, 6.305999999997591e-06, 6.361000000003336e-06, 6.347000000003766e-06, 6.403000000002046e-06, 6.318999999997688e-06, 6.34800000000324e-06, 6.30600000000453e-06, 6.374999999995967e-06, 6.346999999996827e-06, 6.290999999998548e-06, 6.361000000003336e-06, 6.347000000003766e-06, 6.346999999996827e-06, 6.347000000003766e-06, 6.360999999996397e-06, 6.346999999996827e-06, 6.361000000003336e-06, 6.346999999996827e-06, 6.360999999996397e-06, 6.361000000003336e-06, 6.417000000001616e-06, 6.3329999999972575e-06, 6.291999999998021e-06, 6.291000000005487e-06, 6.360999999996397e-06, 6.361000000003336e-06, 6.361000000003336e-06, 6.347000000003766e-06, 6.347000000003766e-06, 6.291999999998021e-06, 6.346999999996827e-06, 6.361000000003336e-06, 6.347000000003766e-06, 6.347000000003766e-06, 6.361000000003336e-06, 6.346999999996827e-06, 6.346999999996827e-06, 6.360999999996397e-06, 6.346999999996827e-06, 6.375000000002906e-06, 6.346999999996827e-06, 6.347999999996301e-06]</msg>
<status status="PASS" starttime="20201115 22:11:16.700" endtime="20201115 22:11:16.706"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.689" endtime="20201115 22:11:16.708"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:16.714" endtime="20201115 22:11:16.717"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:16.723" endtime="20201115 22:11:16.744"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.718" endtime="20201115 22:11:16.746"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.710" endtime="20201115 22:11:16.748"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.197" endtime="20201115 22:11:16.748"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.194" endtime="20201115 22:11:16.749"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.192" endtime="20201115 22:11:16.749"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:16.754" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:16.777" endtime="20201115 22:11:16.799"></status>
</kw>
<msg timestamp="20201115 22:11:16.801" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:16.774" endtime="20201115 22:11:16.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:16.807" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:16.803" endtime="20201115 22:11:16.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:16.809" endtime="20201115 22:11:16.813"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.766" endtime="20201115 22:11:16.814"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.761" endtime="20201115 22:11:16.816"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:16.833" endtime="20201115 22:11:17.171"></status>
</kw>
<msg timestamp="20201115 22:11:17.178" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047336056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047342583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:16.829" endtime="20201115 22:11:17.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:17.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047336056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047342583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:17.180" endtime="20201115 22:11:17.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:17.199" endtime="20201115 22:11:17.203"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.822" endtime="20201115 22:11:17.204"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.817" endtime="20201115 22:11:17.206"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:17.216" level="INFO">${RESULT} = [{'time': 0.047342583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.526999999999228e-06, 'source_diff': 6.526999999999228e-06}, {'time': 0.047557778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:17.207" endtime="20201115 22:11:17.217"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:17.247" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:17.218" endtime="20201115 22:11:17.247"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:17.258" level="INFO">NAME: 00-overhead-17-set</msg>
<status status="PASS" starttime="20201115 22:11:17.255" endtime="20201115 22:11:17.258"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:17.268" level="INFO">VALUE: [6.526999999999228e-06, 6.5279999999987015e-06, 6.540999999998798e-06, 6.555999999997841e-06, 6.583999999996981e-06, 6.555999999997841e-06, 6.554999999998368e-06, 6.555000000005307e-06, 6.5279999999987015e-06, 6.540999999998798e-06, 6.555000000005307e-06, 6.568999999997938e-06, 6.541999999998271e-06, 6.500000000006501e-06, 6.540999999998798e-06, 6.555000000005307e-06, 6.555999999997841e-06, 6.5279999999987015e-06, 6.568999999997938e-06, 6.57000000000435e-06, 6.583999999996981e-06, 6.54200000000521e-06, 6.513999999999132e-06, 6.555999999997841e-06, 6.52800000000564e-06, 6.569999999997411e-06, 6.540999999998798e-06, 6.541999999998271e-06, 6.554999999998368e-06, 6.540999999998798e-06, 6.569999999997411e-06, 6.513999999999132e-06, 6.541999999998271e-06, 6.5279999999987015e-06, 6.569999999997411e-06, 6.513999999999132e-06, 6.541999999998271e-06, 6.554999999998368e-06, 6.540999999998798e-06, 6.555999999997841e-06, 6.57000000000435e-06, 6.540999999998798e-06, 6.568999999997938e-06, 6.5969999999970774e-06, 6.541999999998271e-06, 6.5140000000060705e-06, 6.540999999998798e-06, 6.5279999999987015e-06, 6.541999999998271e-06, 6.541999999998271e-06]</msg>
<status status="PASS" starttime="20201115 22:11:17.260" endtime="20201115 22:11:17.270"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.249" endtime="20201115 22:11:17.272"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:17.278" endtime="20201115 22:11:17.281"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:17.286" endtime="20201115 22:11:17.308"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.282" endtime="20201115 22:11:17.310"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.273" endtime="20201115 22:11:17.311"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.755" endtime="20201115 22:11:17.312"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.752" endtime="20201115 22:11:17.312"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.750" endtime="20201115 22:11:17.313"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:17.318" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:17.340" endtime="20201115 22:11:17.364"></status>
</kw>
<msg timestamp="20201115 22:11:17.366" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:17.337" endtime="20201115 22:11:17.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:17.372" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:17.368" endtime="20201115 22:11:17.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:17.374" endtime="20201115 22:11:17.378"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.330" endtime="20201115 22:11:17.379"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.324" endtime="20201115 22:11:17.381"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:17.397" endtime="20201115 22:11:17.735"></status>
</kw>
<msg timestamp="20201115 22:11:17.742" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047438847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047445569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:17.394" endtime="20201115 22:11:17.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:17.761" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047438847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047445569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:17.745" endtime="20201115 22:11:17.761"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:17.763" endtime="20201115 22:11:17.767"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.387" endtime="20201115 22:11:17.768"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.382" endtime="20201115 22:11:17.770"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:17.781" level="INFO">${RESULT} = [{'time': 0.047445569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.722000000000672e-06, 'source_diff': 6.722000000000672e-06}, {'time': 0.047667986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:17.772" endtime="20201115 22:11:17.781"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:17.816" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:17.785" endtime="20201115 22:11:17.817"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:17.827" level="INFO">NAME: 00-overhead-18-set</msg>
<status status="PASS" starttime="20201115 22:11:17.825" endtime="20201115 22:11:17.828"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:17.833" level="INFO">VALUE: [6.722000000000672e-06, 6.749999999999812e-06, 6.749999999999812e-06, 6.708000000001102e-06, 6.694000000001532e-06, 6.695000000001006e-06, 6.708000000001102e-06, 6.736000000000242e-06, 6.722000000000672e-06, 6.722000000000672e-06, 6.749999999999812e-06, 6.763999999999382e-06, 6.749999999999812e-06, 6.709000000000576e-06, 6.736000000000242e-06, 6.695000000001006e-06, 6.736000000000242e-06, 6.709000000000576e-06, 6.805999999998091e-06, 6.749999999999812e-06, 6.695000000001006e-06, 6.736000000000242e-06, 6.680000000001962e-06, 6.749999999999812e-06, 6.736000000000242e-06, 6.749999999999812e-06, 6.735999999993303e-06, 6.749999999999812e-06, 6.736000000000242e-06, 6.679999999995023e-06, 6.749999999999812e-06, 6.749999999999812e-06, 6.7919999999985214e-06, 6.722000000000672e-06, 6.7369999999997154e-06, 6.804999999998618e-06, 6.749999999999812e-06, 6.819999999997661e-06, 6.749999999999812e-06, 6.7230000000001455e-06, 6.790999999999048e-06, 6.749999999999812e-06, 6.736000000000242e-06, 6.722000000000672e-06, 6.722000000000672e-06, 6.736000000000242e-06, 6.763999999999382e-06, 6.736000000000242e-06, 6.7369999999997154e-06, 6.736000000000242e-06]</msg>
<status status="PASS" starttime="20201115 22:11:17.830" endtime="20201115 22:11:17.835"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.818" endtime="20201115 22:11:17.837"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:17.843" endtime="20201115 22:11:17.846"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:17.851" endtime="20201115 22:11:17.871"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.847" endtime="20201115 22:11:17.872"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.838" endtime="20201115 22:11:17.873"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.319" endtime="20201115 22:11:17.873"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.315" endtime="20201115 22:11:17.874"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.314" endtime="20201115 22:11:17.874"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:17.876" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:17.887" endtime="20201115 22:11:17.909"></status>
</kw>
<msg timestamp="20201115 22:11:17.910" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:17.885" endtime="20201115 22:11:17.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:17.913" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:17.911" endtime="20201115 22:11:17.913"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:17.914" endtime="20201115 22:11:17.916"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.882" endtime="20201115 22:11:17.917"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.879" endtime="20201115 22:11:17.917"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:17.925" endtime="20201115 22:11:18.239"></status>
</kw>
<msg timestamp="20201115 22:11:18.246" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027557986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027564917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:17.923" endtime="20201115 22:11:18.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:18.264" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027557986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027564917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:18.248" endtime="20201115 22:11:18.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:18.267" endtime="20201115 22:11:18.271"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.920" endtime="20201115 22:11:18.273"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.918" endtime="20201115 22:11:18.274"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:18.285" level="INFO">${RESULT} = [{'time': 0.027564917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.931000000001686e-06, 'source_diff': 6.931000000001686e-06}, {'time': 0.027791625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:18.276" endtime="20201115 22:11:18.285"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:18.315" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:18.287" endtime="20201115 22:11:18.316"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:18.326" level="INFO">NAME: 00-overhead-19-set</msg>
<status status="PASS" starttime="20201115 22:11:18.324" endtime="20201115 22:11:18.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:18.332" level="INFO">VALUE: [6.931000000001686e-06, 6.958000000001352e-06, 6.944000000001782e-06, 6.959000000000826e-06, 6.944999999997786e-06, 6.944000000001782e-06, 6.945000000001256e-06, 6.874999999999937e-06, 6.945000000001256e-06, 6.9579999999978825e-06, 6.929999999998743e-06, 6.931000000001686e-06, 6.943999999998313e-06, 6.972000000000922e-06, 6.930999999998216e-06, 6.930000000002212e-06, 6.944999999994317e-06, 6.916999999995177e-06, 7.000000000000062e-06, 6.875000000003406e-06, 6.930999999994747e-06, 6.958000000001352e-06, 6.916999999995177e-06, 6.944000000001782e-06, 6.917000000002116e-06, 6.931000000001686e-06, 6.930999999994747e-06, 6.971999999993983e-06, 6.903000000002546e-06, 6.931000000001686e-06, 6.929999999995273e-06, 6.929999999995273e-06, 6.944000000001782e-06, 6.929999999995273e-06, 6.943999999994843e-06, 6.931000000001686e-06, 6.930000000002212e-06, 6.945000000001256e-06, 6.944999999994317e-06, 6.986000000000492e-06, 6.931000000001686e-06, 6.930999999994747e-06, 6.874999999996467e-06, 6.945000000001256e-06, 6.874999999996467e-06, 6.930999999994747e-06, 6.971999999993983e-06, 6.944999999994317e-06, 6.930000000002212e-06, 6.931000000001686e-06]</msg>
<status status="PASS" starttime="20201115 22:11:18.328" endtime="20201115 22:11:18.334"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.317" endtime="20201115 22:11:18.335"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:18.342" endtime="20201115 22:11:18.344"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:18.350" endtime="20201115 22:11:18.372"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.346" endtime="20201115 22:11:18.373"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.337" endtime="20201115 22:11:18.375"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.877" endtime="20201115 22:11:18.375"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.875" endtime="20201115 22:11:18.376"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.874" endtime="20201115 22:11:18.376"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:18.381" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:18.405" endtime="20201115 22:11:18.430"></status>
</kw>
<msg timestamp="20201115 22:11:18.431" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:18.401" endtime="20201115 22:11:18.431"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:18.437" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:18.433" endtime="20201115 22:11:18.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:18.439" endtime="20201115 22:11:18.443"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.394" endtime="20201115 22:11:18.445"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.388" endtime="20201115 22:11:18.446"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:18.463" endtime="20201115 22:11:18.800"></status>
</kw>
<msg timestamp="20201115 22:11:18.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048368, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048375125, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:11:18.459" endtime="20201115 22:11:18.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:18.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048368, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048375125, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:11:18.809" endtime="20201115 22:11:18.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:18.828" endtime="20201115 22:11:18.832"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.452" endtime="20201115 22:11:18.833"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.447" endtime="20201115 22:11:18.835"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:18.845" level="INFO">${RESULT} = [{'time': 0.048375125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.124999999996717e-06, 'source_diff': 7.124999999996717e-06}, {'time': 0.048622972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:18.836" endtime="20201115 22:11:18.846"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:18.876" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:18.847" endtime="20201115 22:11:18.876"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:18.887" level="INFO">NAME: 00-overhead-20-set</msg>
<status status="PASS" starttime="20201115 22:11:18.885" endtime="20201115 22:11:18.888"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:18.894" level="INFO">VALUE: [7.124999999996717e-06, 7.139000000003226e-06, 7.153000000002796e-06, 7.07000000000485e-06, 7.110999999997147e-06, 7.125000000003656e-06, 7.138999999996287e-06, 7.097000000004516e-06, 7.221999999994233e-06, 7.139000000003226e-06, 7.153000000002796e-06, 7.138999999996287e-06, 7.0830000000049465e-06, 7.124999999996717e-06, 7.11200000000356e-06, 7.138999999996287e-06, 7.124999999996717e-06, 7.221999999994233e-06, 7.125000000003656e-06, 7.139000000003226e-06, 7.139000000003226e-06, 7.125000000003656e-06, 7.138999999996287e-06, 7.124999999996717e-06, 7.125000000003656e-06, 7.195000000001506e-06, 7.153000000002796e-06, 7.125000000003656e-06, 7.153000000002796e-06, 7.138999999996287e-06, 7.139000000003226e-06, 7.138999999996287e-06, 7.125000000003656e-06, 7.153000000002796e-06, 7.125000000003656e-06, 7.153000000002796e-06, 7.0969999999975775e-06, 7.195000000001506e-06, 7.124999999996717e-06, 7.139000000003226e-06, 7.124999999996717e-06, 7.124999999996717e-06, 7.124999999996717e-06, 7.125000000003656e-06, 7.152999999995857e-06, 7.124999999996717e-06, 7.194000000002032e-06, 7.138999999996287e-06, 7.139000000003226e-06, 7.125000000003656e-06]</msg>
<status status="PASS" starttime="20201115 22:11:18.889" endtime="20201115 22:11:18.894"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.878" endtime="20201115 22:11:18.896"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:18.902" endtime="20201115 22:11:18.905"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:18.911" endtime="20201115 22:11:18.932"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.906" endtime="20201115 22:11:18.934"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.898" endtime="20201115 22:11:18.935"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.382" endtime="20201115 22:11:18.936"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.379" endtime="20201115 22:11:18.937"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.377" endtime="20201115 22:11:18.937"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:18.942" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:18.965" endtime="20201115 22:11:18.990"></status>
</kw>
<msg timestamp="20201115 22:11:18.992" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:18.962" endtime="20201115 22:11:18.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:18.998" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:18.994" endtime="20201115 22:11:18.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:19.001" endtime="20201115 22:11:19.005"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.954" endtime="20201115 22:11:19.006"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.949" endtime="20201115 22:11:19.008"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:19.024" endtime="20201115 22:11:19.363"></status>
</kw>
<msg timestamp="20201115 22:11:19.370" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047552181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0475595, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:11:19.021" endtime="20201115 22:11:19.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:19.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047552181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0475595, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:11:19.372" endtime="20201115 22:11:19.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:19.390" endtime="20201115 22:11:19.394"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.014" endtime="20201115 22:11:19.396"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.009" endtime="20201115 22:11:19.397"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:19.408" level="INFO">${RESULT} = [{'time': 0.0475595, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.318999999998688e-06, 'source_diff': 7.318999999998688e-06}, {'time': 0.047822208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:11:19.399" endtime="20201115 22:11:19.408"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:19.439" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:19.410" endtime="20201115 22:11:19.439"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:19.450" level="INFO">NAME: 00-overhead-21-set</msg>
<status status="PASS" starttime="20201115 22:11:19.448" endtime="20201115 22:11:19.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:19.457" level="INFO">VALUE: [7.318999999998688e-06, 7.318999999998688e-06, 7.332999999998258e-06, 7.305999999998591e-06, 7.304999999999118e-06, 7.333999999997731e-06, 7.360999999997397e-06, 7.332999999998258e-06, 7.319999999998161e-06, 7.305999999998591e-06, 7.375000000003906e-06, 7.319999999998161e-06, 7.360999999997397e-06, 7.319999999998161e-06, 7.332999999998258e-06, 7.319999999998161e-06, 7.304999999999118e-06, 7.360999999997397e-06, 7.2779999999994516e-06, 7.347000000004766e-06, 7.3330000000051965e-06, 7.318999999998688e-06, 7.332999999998258e-06, 7.3190000000056266e-06, 7.3200000000051e-06, 7.319999999998161e-06, 7.3200000000051e-06, 7.319999999998161e-06, 7.347000000004766e-06, 7.319999999998161e-06, 7.347000000004766e-06, 7.250000000000312e-06, 7.318999999998688e-06, 7.332999999998258e-06, 7.332999999998258e-06, 7.305999999998591e-06, 7.319999999998161e-06, 7.347000000004766e-06, 7.332999999998258e-06, 7.361000000004336e-06, 7.33400000000467e-06, 7.318999999998688e-06, 7.360999999997397e-06, 7.319999999998161e-06, 7.319999999998161e-06, 7.318999999998688e-06, 7.332999999998258e-06, 7.318999999998688e-06, 7.319999999998161e-06, 7.3190000000056266e-06]</msg>
<status status="PASS" starttime="20201115 22:11:19.452" endtime="20201115 22:11:19.458"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.441" endtime="20201115 22:11:19.459"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:19.466" endtime="20201115 22:11:19.468"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:19.474" endtime="20201115 22:11:19.496"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.469" endtime="20201115 22:11:19.497"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.461" endtime="20201115 22:11:19.499"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.943" endtime="20201115 22:11:19.499"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.940" endtime="20201115 22:11:19.500"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.938" endtime="20201115 22:11:19.500"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:19.505" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:19.529" endtime="20201115 22:11:19.555"></status>
</kw>
<msg timestamp="20201115 22:11:19.556" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:19.526" endtime="20201115 22:11:19.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:19.562" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:19.558" endtime="20201115 22:11:19.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:19.565" endtime="20201115 22:11:19.568"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.518" endtime="20201115 22:11:19.570"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.512" endtime="20201115 22:11:19.571"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:19.588" endtime="20201115 22:11:19.926"></status>
</kw>
<msg timestamp="20201115 22:11:19.933" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048584472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048592028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:19.585" endtime="20201115 22:11:19.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:19.951" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048584472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048592028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:19.935" endtime="20201115 22:11:19.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:19.954" endtime="20201115 22:11:19.957"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.577" endtime="20201115 22:11:19.959"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.573" endtime="20201115 22:11:19.961"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:19.971" level="INFO">${RESULT} = [{'time': 0.048592028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.55600000000578e-06, 'source_diff': 7.55600000000578e-06}, {'time': 0.048854583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:11:19.962" endtime="20201115 22:11:19.972"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:20.004" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:19.973" endtime="20201115 22:11:20.004"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:20.015" level="INFO">NAME: 00-overhead-22-set</msg>
<status status="PASS" starttime="20201115 22:11:20.013" endtime="20201115 22:11:20.016"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:20.022" level="INFO">VALUE: [7.55600000000578e-06, 7.540999999999798e-06, 7.527999999999702e-06, 7.514000000000132e-06, 7.4870000000004655e-06, 7.527999999999702e-06, 7.527000000000228e-06, 7.499999999993623e-06, 7.568999999998938e-06, 7.514000000000132e-06, 7.527999999999702e-06, 7.527000000000228e-06, 7.527999999999702e-06, 7.527999999999702e-06, 7.57000000000535e-06, 7.583999999997981e-06, 7.555999999998841e-06, 7.527999999999702e-06, 7.527000000000228e-06, 7.582999999998508e-06, 7.527999999999702e-06, 7.514000000000132e-06, 7.527000000000228e-06, 7.514000000000132e-06, 7.500000000000562e-06, 7.527999999999702e-06, 7.472000000001422e-06, 7.527999999999702e-06, 7.582999999998508e-06, 7.486000000000992e-06, 7.527999999999702e-06, 7.554999999999368e-06, 7.527999999999702e-06, 7.486000000000992e-06, 7.527999999999702e-06, 7.54200000000621e-06, 7.514000000000132e-06, 7.486000000000992e-06, 7.500000000000562e-06, 7.514000000000132e-06, 7.527999999999702e-06, 7.527999999999702e-06, 7.527999999999702e-06, 7.500000000000562e-06, 7.500000000000562e-06, 7.459000000001326e-06, 7.527999999999702e-06, 7.500000000000562e-06, 7.514000000000132e-06, 7.5419999999992715e-06]</msg>
<status status="PASS" starttime="20201115 22:11:20.017" endtime="20201115 22:11:20.023"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.006" endtime="20201115 22:11:20.024"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:20.031" endtime="20201115 22:11:20.033"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:20.039" endtime="20201115 22:11:20.061"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.035" endtime="20201115 22:11:20.063"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.026" endtime="20201115 22:11:20.064"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.506" endtime="20201115 22:11:20.065"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.503" endtime="20201115 22:11:20.066"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.501" endtime="20201115 22:11:20.066"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:20.071" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:20.094" endtime="20201115 22:11:20.121"></status>
</kw>
<msg timestamp="20201115 22:11:20.122" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:20.090" endtime="20201115 22:11:20.123"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:20.128" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:20.124" endtime="20201115 22:11:20.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:20.131" endtime="20201115 22:11:20.134"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.083" endtime="20201115 22:11:20.136"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.077" endtime="20201115 22:11:20.137"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:20.154" endtime="20201115 22:11:20.491"></status>
</kw>
<msg timestamp="20201115 22:11:20.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047491833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047499556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:20.150" endtime="20201115 22:11:20.499"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:20.516" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047491833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047499556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:20.501" endtime="20201115 22:11:20.517"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:20.519" endtime="20201115 22:11:20.523"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.143" endtime="20201115 22:11:20.524"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.139" endtime="20201115 22:11:20.526"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:20.536" level="INFO">${RESULT} = [{'time': 0.047499556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.723000000001146e-06, 'source_diff': 7.723000000001146e-06}, {'time': 0.047779042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:20.527" endtime="20201115 22:11:20.537"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:20.566" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:20.538" endtime="20201115 22:11:20.567"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:20.577" level="INFO">NAME: 00-overhead-23-set</msg>
<status status="PASS" starttime="20201115 22:11:20.575" endtime="20201115 22:11:20.578"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:20.584" level="INFO">VALUE: [7.723000000001146e-06, 7.723000000001146e-06, 7.708000000002102e-06, 7.722000000001672e-06, 7.708000000002102e-06, 7.709000000001576e-06, 7.708000000002102e-06, 7.764000000000382e-06, 7.721999999994733e-06, 7.708000000002102e-06, 7.708000000002102e-06, 7.709000000001576e-06, 7.722000000001672e-06, 7.735999999994303e-06, 7.695000000002006e-06, 7.708000000002102e-06, 7.651999999996884e-06, 7.653000000003296e-06, 7.681000000002436e-06, 7.721999999994733e-06, 7.708000000002102e-06, 7.709000000001576e-06, 7.723000000001146e-06, 7.722000000001672e-06, 7.694000000002532e-06, 7.708000000002102e-06, 7.750000000000812e-06, 7.722000000001672e-06, 7.721999999994733e-06, 7.764000000000382e-06, 7.708000000002102e-06, 7.723000000001146e-06, 7.764000000000382e-06, 7.722000000001672e-06, 7.638999999996787e-06, 7.707999999995163e-06, 7.722000000001672e-06, 7.708000000002102e-06, 7.722999999994207e-06, 7.735999999994303e-06, 7.722000000001672e-06, 7.695000000002006e-06, 7.708000000002102e-06, 7.708000000002102e-06, 7.708000000002102e-06, 7.709000000001576e-06, 7.638999999996787e-06, 7.723000000001146e-06, 7.723000000001146e-06, 7.722999999994207e-06]</msg>
<status status="PASS" starttime="20201115 22:11:20.580" endtime="20201115 22:11:20.586"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.568" endtime="20201115 22:11:20.587"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:20.594" endtime="20201115 22:11:20.596"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:20.602" endtime="20201115 22:11:20.624"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.598" endtime="20201115 22:11:20.626"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.589" endtime="20201115 22:11:20.627"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.072" endtime="20201115 22:11:20.628"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.069" endtime="20201115 22:11:20.628"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.067" endtime="20201115 22:11:20.629"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:20.634" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:20.658" endtime="20201115 22:11:20.685"></status>
</kw>
<msg timestamp="20201115 22:11:20.687" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:20.655" endtime="20201115 22:11:20.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:20.693" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:20.689" endtime="20201115 22:11:20.694"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:20.695" endtime="20201115 22:11:20.699"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.647" endtime="20201115 22:11:20.701"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.641" endtime="20201115 22:11:20.702"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:20.718" endtime="20201115 22:11:21.056"></status>
</kw>
<msg timestamp="20201115 22:11:21.063" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049780111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049788042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:20.715" endtime="20201115 22:11:21.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:21.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049780111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049788042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:21.066" endtime="20201115 22:11:21.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:21.084" endtime="20201115 22:11:21.088"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.708" endtime="20201115 22:11:21.089"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.703" endtime="20201115 22:11:21.091"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:21.102" level="INFO">${RESULT} = [{'time': 0.049788042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.930999999995747e-06, 'source_diff': 7.930999999995747e-06}, {'time': 0.050086319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:21.093" endtime="20201115 22:11:21.102"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:21.132" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:21.104" endtime="20201115 22:11:21.133"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:21.143" level="INFO">NAME: 00-overhead-24-set</msg>
<status status="PASS" starttime="20201115 22:11:21.141" endtime="20201115 22:11:21.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:21.150" level="INFO">VALUE: [7.930999999995747e-06, 7.860999999997897e-06, 7.916000000003642e-06, 7.901999999997134e-06, 7.888999999997037e-06, 7.888999999997037e-06, 7.903000000003546e-06, 7.945000000002256e-06, 7.902999999996607e-06, 7.832999999998758e-06, 7.916999999996177e-06, 7.903000000003546e-06, 7.902999999996607e-06, 7.889000000003976e-06, 7.889000000003976e-06, 7.916999999996177e-06, 7.833999999998231e-06, 7.902999999996607e-06, 7.916999999996177e-06, 7.903000000003546e-06, 7.861000000004836e-06, 7.888999999997037e-06, 7.889000000003976e-06, 7.902999999996607e-06, 7.888999999997037e-06, 7.931000000002686e-06, 7.903000000003546e-06, 7.930000000003212e-06, 7.930999999995747e-06, 7.930999999995747e-06, 7.916999999996177e-06, 7.902999999996607e-06, 7.930000000003212e-06, 7.888999999997037e-06, 7.930000000003212e-06, 7.903000000003546e-06, 7.888999999997037e-06, 7.903000000003546e-06, 7.986000000001492e-06, 7.901999999997134e-06, 7.916000000003642e-06, 7.917000000003116e-06, 7.944999999995317e-06, 7.888999999997037e-06, 7.916999999996177e-06, 7.902000000004072e-06, 7.903000000003546e-06, 7.915999999996703e-06, 7.860999999997897e-06, 7.915999999996703e-06]</msg>
<status status="PASS" starttime="20201115 22:11:21.145" endtime="20201115 22:11:21.151"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.134" endtime="20201115 22:11:21.153"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:21.159" endtime="20201115 22:11:21.162"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:21.168" endtime="20201115 22:11:21.189"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.163" endtime="20201115 22:11:21.191"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.155" endtime="20201115 22:11:21.192"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.635" endtime="20201115 22:11:21.193"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.632" endtime="20201115 22:11:21.194"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.630" endtime="20201115 22:11:21.194"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:21.199" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:21.222" endtime="20201115 22:11:21.250"></status>
</kw>
<msg timestamp="20201115 22:11:21.251" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:21.218" endtime="20201115 22:11:21.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:21.257" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:21.253" endtime="20201115 22:11:21.258"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:21.260" endtime="20201115 22:11:21.263"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.211" endtime="20201115 22:11:21.265"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.205" endtime="20201115 22:11:21.266"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:21.283" endtime="20201115 22:11:21.586"></status>
</kw>
<msg timestamp="20201115 22:11:21.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047624778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047632861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:21.280" endtime="20201115 22:11:21.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:21.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047624778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047632861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:21.595" endtime="20201115 22:11:21.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:21.614" endtime="20201115 22:11:21.617"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.272" endtime="20201115 22:11:21.619"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.268" endtime="20201115 22:11:21.621"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:21.631" level="INFO">${RESULT} = [{'time': 0.047632861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.082999999999008e-06, 'source_diff': 8.082999999999008e-06}, {'time': 0.047933875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:21.622" endtime="20201115 22:11:21.632"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:21.663" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:21.634" endtime="20201115 22:11:21.663"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:21.674" level="INFO">NAME: 00-overhead-25-set</msg>
<status status="PASS" starttime="20201115 22:11:21.672" endtime="20201115 22:11:21.675"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:21.681" level="INFO">VALUE: [8.082999999999008e-06, 8.110999999998147e-06, 8.110999999998147e-06, 8.082999999999008e-06, 8.110999999998147e-06, 8.110999999998147e-06, 8.068999999999438e-06, 8.069999999998911e-06, 8.096999999998578e-06, 8.138000000004753e-06, 8.082999999999008e-06, 8.194999999995567e-06, 8.054999999999868e-06, 8.097999999998051e-06, 8.096999999998578e-06, 8.125000000004656e-06, 8.110999999998147e-06, 8.096999999998578e-06, 8.166999999996427e-06, 8.097000000005516e-06, 8.097000000005516e-06, 8.096999999998578e-06, 8.054999999999868e-06, 8.082999999999008e-06, 8.167000000003366e-06, 8.096999999998578e-06, 8.152000000004322e-06, 8.083999999998481e-06, 8.110999999998147e-06, 8.096999999998578e-06, 8.09800000000499e-06, 8.096999999998578e-06, 8.097999999998051e-06, 8.111000000005086e-06, 8.111000000005086e-06, 8.11200000000456e-06, 8.097999999998051e-06, 8.110999999998147e-06, 8.110999999998147e-06, 8.096999999998578e-06, 8.083000000005947e-06, 8.083999999998481e-06, 8.111999999997621e-06, 8.11200000000456e-06, 8.096999999998578e-06, 8.166999999996427e-06, 8.068999999999438e-06, 8.054999999999868e-06, 8.096999999998578e-06, 8.096999999998578e-06]</msg>
<status status="PASS" starttime="20201115 22:11:21.677" endtime="20201115 22:11:21.682"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.665" endtime="20201115 22:11:21.684"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:21.691" endtime="20201115 22:11:21.694"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:21.699" endtime="20201115 22:11:21.721"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.695" endtime="20201115 22:11:21.722"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.686" endtime="20201115 22:11:21.724"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.200" endtime="20201115 22:11:21.725"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.196" endtime="20201115 22:11:21.725"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.195" endtime="20201115 22:11:21.726"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.969" endtime="20201115 22:11:21.726"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="teardown">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:21.736" endtime="20201115 22:11:21.758"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.732" endtime="20201115 22:11:21.760"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.729" endtime="20201115 22:11:21.760"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:11:07.841" endtime="20201115 22:11:21.761" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Remove List">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:21.779" endtime="20201115 22:11:21.801"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.776" endtime="20201115 22:11:21.803"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:21.836" endtime="20201115 22:11:21.854"></status>
</kw>
<msg timestamp="20201115 22:11:21.855" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:21.832" endtime="20201115 22:11:21.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:21.862" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:21.857" endtime="20201115 22:11:21.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:11:21.868" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:11:21.864" endtime="20201115 22:11:21.869"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:21.825" endtime="20201115 22:11:21.871"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:21.819" endtime="20201115 22:11:21.873"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.816" endtime="20201115 22:11:21.874"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:11:21.882" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:11:21.880" endtime="20201115 22:11:21.882"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.876" endtime="20201115 22:11:21.883"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.814" endtime="20201115 22:11:21.883"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.813" endtime="20201115 22:11:21.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:21.885" endtime="20201115 22:11:21.889"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.808" endtime="20201115 22:11:21.890"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.804" endtime="20201115 22:11:21.892"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.773" endtime="20201115 22:11:21.892"></status>
</kw>
<kw name="${n} IN RANGE [ 25 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:21.899" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:21.925" endtime="20201115 22:11:21.940"></status>
</kw>
<msg timestamp="20201115 22:11:21.941" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:21.921" endtime="20201115 22:11:21.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:21.947" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:21.943" endtime="20201115 22:11:21.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:21.950" endtime="20201115 22:11:21.953"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.914" endtime="20201115 22:11:21.955"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.908" endtime="20201115 22:11:21.956"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:21.973" endtime="20201115 22:11:22.321"></status>
</kw>
<msg timestamp="20201115 22:11:22.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.138622833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.138628569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:21.969" endtime="20201115 22:11:22.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:22.347" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.138622833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.138628569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:22.331" endtime="20201115 22:11:22.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:22.349" endtime="20201115 22:11:22.353"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.962" endtime="20201115 22:11:22.355"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.958" endtime="20201115 22:11:22.356"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:22.367" level="INFO">${RESULT} = [{'time': 0.138628569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.736000000006181e-06, 'source_diff': 5.736000000006181e-06}, {'time': 0.138673639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:22.358" endtime="20201115 22:11:22.367"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:22.399" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:22.369" endtime="20201115 22:11:22.400"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:22.417" level="INFO">NAME: 00-overhead-1-remove</msg>
<status status="PASS" starttime="20201115 22:11:22.415" endtime="20201115 22:11:22.418"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:22.422" level="INFO">VALUE: [5.736000000006181e-06, 5.749999999998812e-06, 5.736000000006181e-06, 5.707999999993163e-06, 5.722999999985268e-06, 5.680999999979619e-06, 5.707999999993163e-06, 5.680000000007901e-06, 5.707999999993163e-06, 5.763999999991443e-06, 5.749999999998812e-06, 5.709000000020392e-06, 5.72200000001355e-06, 5.72200000001355e-06, 5.721999999985794e-06, 5.749999999998812e-06, 5.666999999986988e-06, 5.72200000001355e-06, 5.707999999993163e-06, 5.72200000001355e-06, 5.736000000006181e-06, 5.72200000001355e-06, 5.72200000001355e-06, 5.736000000006181e-06, 5.736000000006181e-06, 5.7080000000209186e-06, 5.721999999985794e-06, 5.721999999985794e-06, 5.694000000000532e-06, 5.749999999998812e-06, 5.680000000007901e-06, 5.736000000006181e-06, 5.72200000001355e-06, 5.736000000006181e-06, 5.805999999997091e-06, 5.708999999992637e-06, 5.763999999991443e-06, 5.72200000001355e-06, 5.667000000014744e-06, 5.680000000007901e-06, 5.736000000006181e-06, 5.666999999986988e-06, 5.721999999985794e-06, 5.681000000007375e-06, 5.820000000017478e-06, 5.721999999985794e-06, 5.72200000001355e-06, 5.764000000019198e-06, 5.708999999992637e-06, 5.749999999998812e-06]</msg>
<status status="PASS" starttime="20201115 22:11:22.419" endtime="20201115 22:11:22.423"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.401" endtime="20201115 22:11:22.425"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:22.431" endtime="20201115 22:11:22.434"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:22.440" endtime="20201115 22:11:22.461"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.435" endtime="20201115 22:11:22.463"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.427" endtime="20201115 22:11:22.464"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.901" endtime="20201115 22:11:22.465"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.897" endtime="20201115 22:11:22.466"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.895" endtime="20201115 22:11:22.466"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:22.471" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:22.495" endtime="20201115 22:11:22.512"></status>
</kw>
<msg timestamp="20201115 22:11:22.513" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:22.492" endtime="20201115 22:11:22.514"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:22.519" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:22.515" endtime="20201115 22:11:22.520"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:22.522" endtime="20201115 22:11:22.525"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.483" endtime="20201115 22:11:22.527"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.477" endtime="20201115 22:11:22.529"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:22.545" endtime="20201115 22:11:22.882"></status>
</kw>
<msg timestamp="20201115 22:11:22.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049489792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049495681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:22.542" endtime="20201115 22:11:22.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:22.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049489792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049495681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:22.892" endtime="20201115 22:11:22.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:22.911" endtime="20201115 22:11:22.914"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.535" endtime="20201115 22:11:22.916"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.530" endtime="20201115 22:11:22.917"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:22.929" level="INFO">${RESULT} = [{'time': 0.049495681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.889000000001976e-06, 'source_diff': 5.889000000001976e-06}, {'time': 0.049552153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:22.919" endtime="20201115 22:11:22.929"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:22.959" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:22.931" endtime="20201115 22:11:22.960"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:22.970" level="INFO">NAME: 00-overhead-2-remove</msg>
<status status="PASS" starttime="20201115 22:11:22.968" endtime="20201115 22:11:22.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:22.976" level="INFO">VALUE: [5.889000000001976e-06, 5.889000000001976e-06, 5.846999999996327e-06, 5.889000000001976e-06, 5.889000000001976e-06, 5.847000000003266e-06, 5.888999999995037e-06, 5.833999999996231e-06, 5.874999999995467e-06, 5.888999999995037e-06, 5.903000000001546e-06, 5.889000000001976e-06, 5.958000000000352e-06, 5.888999999995037e-06, 5.889000000001976e-06, 5.902999999994607e-06, 5.944000000000782e-06, 5.917000000001116e-06, 5.875000000002406e-06, 5.903000000001546e-06, 5.875000000002406e-06, 5.875000000002406e-06, 5.888999999995037e-06, 5.889000000001976e-06, 5.889000000001976e-06, 5.917000000001116e-06, 5.903000000001546e-06, 5.945000000000256e-06, 5.875000000002406e-06, 5.903000000001546e-06, 5.847000000003266e-06, 5.83400000000317e-06, 5.958000000000352e-06, 5.916000000001642e-06, 5.902999999994607e-06, 5.903000000001546e-06, 5.916000000001642e-06, 5.875000000002406e-06, 5.903000000001546e-06, 5.930000000001212e-06, 5.930000000001212e-06, 5.903000000001546e-06, 5.889000000001976e-06, 5.903000000001546e-06, 5.903000000001546e-06, 5.889000000001976e-06, 5.931000000000686e-06, 5.902999999994607e-06, 5.917000000001116e-06, 5.917000000001116e-06]</msg>
<status status="PASS" starttime="20201115 22:11:22.972" endtime="20201115 22:11:22.976"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.961" endtime="20201115 22:11:22.978"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:22.985" endtime="20201115 22:11:22.987"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:22.993" endtime="20201115 22:11:23.015"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.988" endtime="20201115 22:11:23.016"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.980" endtime="20201115 22:11:23.018"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.472" endtime="20201115 22:11:23.018"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.468" endtime="20201115 22:11:23.019"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.467" endtime="20201115 22:11:23.019"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:23.024" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:23.047" endtime="20201115 22:11:23.063"></status>
</kw>
<msg timestamp="20201115 22:11:23.064" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:23.044" endtime="20201115 22:11:23.065"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:23.071" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:23.067" endtime="20201115 22:11:23.071"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:23.073" endtime="20201115 22:11:23.077"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:23.037" endtime="20201115 22:11:23.078"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:23.031" endtime="20201115 22:11:23.080"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:23.098" endtime="20201115 22:11:23.436"></status>
</kw>
<msg timestamp="20201115 22:11:23.443" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047884264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047890333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:23.095" endtime="20201115 22:11:23.444"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:23.463" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047884264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047890333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:23.446" endtime="20201115 22:11:23.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:23.465" endtime="20201115 22:11:23.469"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:23.086" endtime="20201115 22:11:23.471"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:23.081" endtime="20201115 22:11:23.472"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:23.483" level="INFO">${RESULT} = [{'time': 0.047890333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0689999999974376e-06, 'source_diff': 6.0689999999974376e-06}, {'time': 0.047953583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:23.474" endtime="20201115 22:11:23.483"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:23.513" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:23.485" endtime="20201115 22:11:23.513"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:23.524" level="INFO">NAME: 00-overhead-3-remove</msg>
<status status="PASS" starttime="20201115 22:11:23.522" endtime="20201115 22:11:23.525"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:23.529" level="INFO">VALUE: [6.0689999999974376e-06, 6.054999999997868e-06, 6.09800000000299e-06, 6.111999999995621e-06, 6.097000000003516e-06, 6.08400000000342e-06, 6.0690000000043764e-06, 6.111000000003086e-06, 6.083999999996481e-06, 6.096999999996577e-06, 6.124999999995717e-06, 6.083000000003946e-06, 6.054999999997868e-06, 6.069999999996911e-06, 6.09800000000299e-06, 6.097000000003516e-06, 6.110999999996147e-06, 6.09800000000299e-06, 5.999999999999062e-06, 6.055999999997341e-06, 6.083000000003946e-06, 6.0689999999974376e-06, 6.111000000003086e-06, 6.0689999999974376e-06, 6.097000000003516e-06, 6.111000000003086e-06, 6.083999999996481e-06, 6.110999999996147e-06, 6.097000000003516e-06, 6.111000000003086e-06, 6.0829999999970075e-06, 6.083000000003946e-06, 6.083000000003946e-06, 6.0829999999970075e-06, 6.111000000003086e-06, 6.111000000003086e-06, 6.096999999996577e-06, 6.096999999996577e-06, 6.0829999999970075e-06, 6.0689999999974376e-06, 6.138999999995287e-06, 6.096999999996577e-06, 6.097999999996051e-06, 6.181000000000936e-06, 6.097000000003516e-06, 6.0829999999970075e-06, 6.09800000000299e-06, 6.083000000003946e-06, 6.125000000002656e-06, 6.0829999999970075e-06]</msg>
<status status="PASS" starttime="20201115 22:11:23.526" endtime="20201115 22:11:23.530"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:23.515" endtime="20201115 22:11:23.532"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:23.538" endtime="20201115 22:11:23.541"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:23.546" endtime="20201115 22:11:23.568"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:23.542" endtime="20201115 22:11:23.569"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:23.534" endtime="20201115 22:11:23.571"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:23.025" endtime="20201115 22:11:23.572"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:23.022" endtime="20201115 22:11:23.572"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:23.020" endtime="20201115 22:11:23.573"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:23.577" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:23.600" endtime="20201115 22:11:23.618"></status>
</kw>
<msg timestamp="20201115 22:11:23.619" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:23.597" endtime="20201115 22:11:23.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:23.625" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:23.621" endtime="20201115 22:11:23.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:23.627" endtime="20201115 22:11:23.631"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:23.590" endtime="20201115 22:11:23.633"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:23.584" endtime="20201115 22:11:23.634"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:23.651" endtime="20201115 22:11:23.991"></status>
</kw>
<msg timestamp="20201115 22:11:23.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047699542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047705861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:23.648" endtime="20201115 22:11:23.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:24.017" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047699542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047705861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:24.001" endtime="20201115 22:11:24.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:24.020" endtime="20201115 22:11:24.024"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:23.641" endtime="20201115 22:11:24.025"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:23.636" endtime="20201115 22:11:24.027"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:24.038" level="INFO">${RESULT} = [{'time': 0.047705861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.3190000000046265e-06, 'source_diff': 6.3190000000046265e-06}, {'time': 0.047781153, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:24.028" endtime="20201115 22:11:24.038"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:24.068" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:24.040" endtime="20201115 22:11:24.068"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:24.079" level="INFO">NAME: 00-overhead-4-remove</msg>
<status status="PASS" starttime="20201115 22:11:24.076" endtime="20201115 22:11:24.079"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:24.084" level="INFO">VALUE: [6.3190000000046265e-06, 6.319999999997161e-06, 6.318999999997688e-06, 6.318999999997688e-06, 6.3200000000041e-06, 6.318999999997688e-06, 6.305999999997591e-06, 6.3050000000050566e-06, 6.30600000000453e-06, 6.333999999996731e-06, 6.29200000000496e-06, 6.374999999995967e-06, 6.29200000000496e-06, 6.304999999998118e-06, 6.318999999997688e-06, 6.305999999997591e-06, 6.2500000000062506e-06, 6.304999999998118e-06, 6.318999999997688e-06, 6.333000000004196e-06, 6.304999999998118e-06, 6.3200000000041e-06, 6.318999999997688e-06, 6.375000000002906e-06, 6.3200000000041e-06, 6.305999999997591e-06, 6.304999999998118e-06, 6.3190000000046265e-06, 6.3050000000050566e-06, 6.305999999997591e-06, 6.291000000005487e-06, 6.305999999997591e-06, 6.305999999997591e-06, 6.290999999998548e-06, 6.3329999999972575e-06, 6.29200000000496e-06, 6.3050000000050566e-06, 6.29200000000496e-06, 6.318999999997688e-06, 6.291000000005487e-06, 6.3200000000041e-06, 6.333999999996731e-06, 6.305999999997591e-06, 6.3200000000041e-06, 6.3329999999972575e-06, 6.305999999997591e-06, 6.305999999997591e-06, 6.291999999998021e-06, 6.319999999997161e-06, 6.291999999998021e-06]</msg>
<status status="PASS" starttime="20201115 22:11:24.081" endtime="20201115 22:11:24.085"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:24.070" endtime="20201115 22:11:24.087"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:24.093" endtime="20201115 22:11:24.096"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:24.101" endtime="20201115 22:11:24.123"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:24.097" endtime="20201115 22:11:24.125"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:24.088" endtime="20201115 22:11:24.126"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:23.579" endtime="20201115 22:11:24.127"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:23.575" endtime="20201115 22:11:24.127"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:23.573" endtime="20201115 22:11:24.128"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:24.133" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:24.156" endtime="20201115 22:11:24.173"></status>
</kw>
<msg timestamp="20201115 22:11:24.175" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:24.152" endtime="20201115 22:11:24.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:24.181" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:24.177" endtime="20201115 22:11:24.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:24.183" endtime="20201115 22:11:24.187"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:24.145" endtime="20201115 22:11:24.189"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:24.139" endtime="20201115 22:11:24.190"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:24.207" endtime="20201115 22:11:24.546"></status>
</kw>
<msg timestamp="20201115 22:11:24.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047665917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047672431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:24.203" endtime="20201115 22:11:24.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:24.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047665917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047672431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:24.556" endtime="20201115 22:11:24.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:24.575" endtime="20201115 22:11:24.578"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:24.196" endtime="20201115 22:11:24.580"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:24.192" endtime="20201115 22:11:24.582"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:24.592" level="INFO">${RESULT} = [{'time': 0.047672431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.513999999999132e-06, 'source_diff': 6.513999999999132e-06}, {'time': 0.047761986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:24.583" endtime="20201115 22:11:24.593"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:24.625" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:24.594" endtime="20201115 22:11:24.625"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:24.636" level="INFO">NAME: 00-overhead-5-remove</msg>
<status status="PASS" starttime="20201115 22:11:24.634" endtime="20201115 22:11:24.637"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:24.641" level="INFO">VALUE: [6.513999999999132e-06, 6.430000000001712e-06, 6.499999999999562e-06, 6.500000000006501e-06, 6.499999999999562e-06, 6.569999999997411e-06, 6.513999999999132e-06, 6.499999999999562e-06, 6.541999999998271e-06, 6.513999999999132e-06, 6.513999999999132e-06, 6.485999999999992e-06, 6.458000000000852e-06, 6.499999999999562e-06, 6.526999999999228e-06, 6.499999999999562e-06, 6.5279999999987015e-06, 6.499999999999562e-06, 6.513999999999132e-06, 6.526999999999228e-06, 6.499999999999562e-06, 6.5279999999987015e-06, 6.513999999999132e-06, 6.4729999999998955e-06, 6.499999999999562e-06, 6.5690000000048765e-06, 6.513999999999132e-06, 6.526999999999228e-06, 6.499999999999562e-06, 6.457999999993913e-06, 6.499999999999562e-06, 6.512999999999658e-06, 6.554999999998368e-06, 6.513999999999132e-06, 6.499999999999562e-06, 6.499999999999562e-06, 6.499999999999562e-06, 6.499999999999562e-06, 6.513999999999132e-06, 6.499999999999562e-06, 6.499999999999562e-06, 6.499999999999562e-06, 6.485999999999992e-06, 6.499999999999562e-06, 6.499999999999562e-06, 6.513999999999132e-06, 6.472000000000422e-06, 6.499999999999562e-06, 6.459000000000326e-06, 6.499999999999562e-06]</msg>
<status status="PASS" starttime="20201115 22:11:24.638" endtime="20201115 22:11:24.642"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:24.627" endtime="20201115 22:11:24.644"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:24.650" endtime="20201115 22:11:24.653"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:24.658" endtime="20201115 22:11:24.680"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:24.654" endtime="20201115 22:11:24.682"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:24.645" endtime="20201115 22:11:24.683"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:24.134" endtime="20201115 22:11:24.684"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:24.130" endtime="20201115 22:11:24.684"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:24.129" endtime="20201115 22:11:24.685"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:24.690" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:24.713" endtime="20201115 22:11:24.730"></status>
</kw>
<msg timestamp="20201115 22:11:24.732" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:24.710" endtime="20201115 22:11:24.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:24.738" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:24.734" endtime="20201115 22:11:24.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:24.740" endtime="20201115 22:11:24.744"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:24.703" endtime="20201115 22:11:24.745"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:24.697" endtime="20201115 22:11:24.747"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:24.764" endtime="20201115 22:11:25.094"></status>
</kw>
<msg timestamp="20201115 22:11:25.097" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048224361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048231153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:24.760" endtime="20201115 22:11:25.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:25.105" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048224361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048231153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:25.098" endtime="20201115 22:11:25.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:25.106" endtime="20201115 22:11:25.109"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:24.753" endtime="20201115 22:11:25.110"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:24.748" endtime="20201115 22:11:25.111"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:25.116" level="INFO">${RESULT} = [{'time': 0.048231153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.7919999999985214e-06, 'source_diff': 6.7919999999985214e-06}, {'time': 0.048322653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:25.111" endtime="20201115 22:11:25.116"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:25.129" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:25.116" endtime="20201115 22:11:25.129"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:25.134" level="INFO">NAME: 00-overhead-6-remove</msg>
<status status="PASS" starttime="20201115 22:11:25.133" endtime="20201115 22:11:25.134"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:25.137" level="INFO">VALUE: [6.7919999999985214e-06, 6.695000000001006e-06, 6.736000000000242e-06, 6.7230000000001455e-06, 6.722000000000672e-06, 6.7230000000001455e-06, 6.763999999999382e-06, 6.7919999999985214e-06, 6.722000000000672e-06, 6.763999999999382e-06, 6.776999999999478e-06, 6.708000000001102e-06, 6.736000000000242e-06, 6.708000000001102e-06, 6.736000000000242e-06, 6.736000000000242e-06, 6.763999999999382e-06, 6.653000000002296e-06, 6.722000000000672e-06, 6.7369999999997154e-06, 6.736000000000242e-06, 6.709000000000576e-06, 6.693999999994593e-06, 6.736000000000242e-06, 6.7369999999997154e-06, 6.736000000000242e-06, 6.736000000000242e-06, 6.80600000000503e-06, 6.681000000001436e-06, 6.722000000000672e-06, 6.693999999994593e-06, 6.763999999999382e-06, 6.722000000000672e-06, 6.708000000001102e-06, 6.666000000002392e-06, 6.722000000000672e-06, 6.666999999994927e-06, 6.708000000001102e-06, 6.763999999999382e-06, 6.7919999999985214e-06, 6.722000000000672e-06, 6.736000000000242e-06, 6.722000000000672e-06, 6.722000000000672e-06, 6.749999999999812e-06, 6.7369999999997154e-06, 6.722000000000672e-06, 6.709000000000576e-06, 6.722000000000672e-06, 6.749999999999812e-06]</msg>
<status status="PASS" starttime="20201115 22:11:25.135" endtime="20201115 22:11:25.137"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:25.130" endtime="20201115 22:11:25.138"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:25.141" endtime="20201115 22:11:25.143"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:25.145" endtime="20201115 22:11:25.165"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:25.143" endtime="20201115 22:11:25.165"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:25.139" endtime="20201115 22:11:25.166"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:24.691" endtime="20201115 22:11:25.166"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:24.687" endtime="20201115 22:11:25.167"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:24.686" endtime="20201115 22:11:25.167"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:25.169" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:25.180" endtime="20201115 22:11:25.196"></status>
</kw>
<msg timestamp="20201115 22:11:25.197" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:25.178" endtime="20201115 22:11:25.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:25.200" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:25.198" endtime="20201115 22:11:25.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:25.201" endtime="20201115 22:11:25.203"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:25.175" endtime="20201115 22:11:25.203"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:25.172" endtime="20201115 22:11:25.204"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:25.212" endtime="20201115 22:11:25.543"></status>
</kw>
<msg timestamp="20201115 22:11:25.550" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027525333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027532264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:25.210" endtime="20201115 22:11:25.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:25.569" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027525333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027532264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:25.552" endtime="20201115 22:11:25.569"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:25.571" endtime="20201115 22:11:25.575"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:25.207" endtime="20201115 22:11:25.576"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:25.204" endtime="20201115 22:11:25.578"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:25.589" level="INFO">${RESULT} = [{'time': 0.027532264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.931000000001686e-06, 'source_diff': 6.931000000001686e-06}, {'time': 0.027631639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:25.579" endtime="20201115 22:11:25.589"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:25.619" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:25.591" endtime="20201115 22:11:25.619"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:25.630" level="INFO">NAME: 00-overhead-7-remove</msg>
<status status="PASS" starttime="20201115 22:11:25.627" endtime="20201115 22:11:25.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:25.635" level="INFO">VALUE: [6.931000000001686e-06, 6.9169999999986465e-06, 6.930999999998216e-06, 6.915999999999173e-06, 6.930999999998216e-06, 6.9029999999990765e-06, 6.930999999998216e-06, 6.931000000001686e-06, 6.917000000002116e-06, 6.944999999997786e-06, 6.916000000002642e-06, 6.929999999998743e-06, 6.958000000001352e-06, 6.9169999999986465e-06, 6.9169999999986465e-06, 6.903000000002546e-06, 6.931000000001686e-06, 6.9169999999986465e-06, 6.9169999999986465e-06, 6.889000000002976e-06, 6.9169999999986465e-06, 6.943999999998313e-06, 6.929999999998743e-06, 6.930000000002212e-06, 6.915999999999173e-06, 6.944000000001782e-06, 6.929999999998743e-06, 6.930000000002212e-06, 6.930999999998216e-06, 6.930000000002212e-06, 6.930999999998216e-06, 6.929999999998743e-06, 6.929999999998743e-06, 6.930999999998216e-06, 6.943999999998313e-06, 6.931000000001686e-06, 6.916999999995177e-06, 6.930000000002212e-06, 6.916999999995177e-06, 6.931000000001686e-06, 6.888999999996037e-06, 6.930000000002212e-06, 6.931000000001686e-06, 6.930000000002212e-06, 6.903000000002546e-06, 6.930000000002212e-06, 6.931000000001686e-06, 6.916000000002642e-06, 6.917000000002116e-06, 6.903000000002546e-06]</msg>
<status status="PASS" starttime="20201115 22:11:25.632" endtime="20201115 22:11:25.637"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:25.621" endtime="20201115 22:11:25.638"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:25.645" endtime="20201115 22:11:25.647"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:25.653" endtime="20201115 22:11:25.675"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:25.649" endtime="20201115 22:11:25.676"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:25.640" endtime="20201115 22:11:25.678"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:25.170" endtime="20201115 22:11:25.679"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:25.168" endtime="20201115 22:11:25.679"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:25.167" endtime="20201115 22:11:25.679"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:25.684" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:25.707" endtime="20201115 22:11:25.726"></status>
</kw>
<msg timestamp="20201115 22:11:25.728" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:25.704" endtime="20201115 22:11:25.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:25.734" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:25.730" endtime="20201115 22:11:25.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:25.736" endtime="20201115 22:11:25.740"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:25.697" endtime="20201115 22:11:25.741"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:25.691" endtime="20201115 22:11:25.743"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:25.759" endtime="20201115 22:11:26.096"></status>
</kw>
<msg timestamp="20201115 22:11:26.103" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047749708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047756875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:25.756" endtime="20201115 22:11:26.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:26.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047749708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047756875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:26.105" endtime="20201115 22:11:26.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:26.124" endtime="20201115 22:11:26.129"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:25.749" endtime="20201115 22:11:26.131"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:25.744" endtime="20201115 22:11:26.132"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:26.143" level="INFO">${RESULT} = [{'time': 0.047756875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.166999999995427e-06, 'source_diff': 7.166999999995427e-06}, {'time': 0.047875736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:26.134" endtime="20201115 22:11:26.143"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:26.173" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:26.145" endtime="20201115 22:11:26.173"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:26.184" level="INFO">NAME: 00-overhead-8-remove</msg>
<status status="PASS" starttime="20201115 22:11:26.181" endtime="20201115 22:11:26.184"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:26.190" level="INFO">VALUE: [7.166999999995427e-06, 7.180000000002462e-06, 7.152999999995857e-06, 7.165999999995953e-06, 7.097999999997051e-06, 7.124999999996717e-06, 7.153000000002796e-06, 7.181000000001936e-06, 7.124999999996717e-06, 7.152999999995857e-06, 7.139000000003226e-06, 7.138999999996287e-06, 7.110999999997147e-06, 7.152999999995857e-06, 7.139000000003226e-06, 7.1519999999963835e-06, 7.194999999994567e-06, 7.152999999995857e-06, 7.165999999995953e-06, 7.153000000002796e-06, 7.153000000002796e-06, 7.153000000002796e-06, 7.166000000002892e-06, 7.125000000003656e-06, 7.139000000003226e-06, 7.153000000002796e-06, 7.153000000002796e-06, 7.153000000002796e-06, 7.097999999997051e-06, 7.139000000003226e-06, 7.139000000003226e-06, 7.0969999999975775e-06, 7.166999999995427e-06, 7.166999999995427e-06, 7.138999999996287e-06, 7.138999999996287e-06, 7.152000000003322e-06, 7.166000000002892e-06, 7.152999999995857e-06, 7.153000000002796e-06, 7.152000000003322e-06, 7.153000000002796e-06, 7.139000000003226e-06, 7.139000000003226e-06, 7.138999999996287e-06, 7.139000000003226e-06, 7.139000000003226e-06, 7.139000000003226e-06, 7.139000000003226e-06, 7.125000000003656e-06]</msg>
<status status="PASS" starttime="20201115 22:11:26.186" endtime="20201115 22:11:26.191"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:26.174" endtime="20201115 22:11:26.192"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:26.199" endtime="20201115 22:11:26.201"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:26.207" endtime="20201115 22:11:26.228"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:26.203" endtime="20201115 22:11:26.230"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:26.194" endtime="20201115 22:11:26.232"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:25.686" endtime="20201115 22:11:26.232"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:25.682" endtime="20201115 22:11:26.233"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:25.680" endtime="20201115 22:11:26.233"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:26.238" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:26.261" endtime="20201115 22:11:26.280"></status>
</kw>
<msg timestamp="20201115 22:11:26.281" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:26.258" endtime="20201115 22:11:26.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:26.287" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:26.283" endtime="20201115 22:11:26.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:26.290" endtime="20201115 22:11:26.293"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:26.251" endtime="20201115 22:11:26.295"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:26.245" endtime="20201115 22:11:26.296"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:26.313" endtime="20201115 22:11:26.648"></status>
</kw>
<msg timestamp="20201115 22:11:26.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047673389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047680722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:26.310" endtime="20201115 22:11:26.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:26.673" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047673389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047680722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:26.657" endtime="20201115 22:11:26.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:26.676" endtime="20201115 22:11:26.679"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:26.302" endtime="20201115 22:11:26.681"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:26.298" endtime="20201115 22:11:26.682"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:26.693" level="INFO">${RESULT} = [{'time': 0.047680722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.3330000000051965e-06, 'source_diff': 7.3330000000051965e-06}, {'time': 0.047805278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:26.684" endtime="20201115 22:11:26.693"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:26.726" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:26.696" endtime="20201115 22:11:26.727"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:26.739" level="INFO">NAME: 00-overhead-9-remove</msg>
<status status="PASS" starttime="20201115 22:11:26.737" endtime="20201115 22:11:26.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:26.745" level="INFO">VALUE: [7.3330000000051965e-06, 7.360999999997397e-06, 7.3469999999978275e-06, 7.332999999998258e-06, 7.304999999999118e-06, 7.318999999998688e-06, 7.388999999996537e-06, 7.3469999999978275e-06, 7.347000000004766e-06, 7.3330000000051965e-06, 7.361000000004336e-06, 7.332999999998258e-06, 7.263999999999882e-06, 7.332999999998258e-06, 7.417000000002616e-06, 7.332999999998258e-06, 7.347000000004766e-06, 7.332999999998258e-06, 7.290999999999548e-06, 7.374999999996967e-06, 7.333999999997731e-06, 7.332999999998258e-06, 7.361000000004336e-06, 7.360999999997397e-06, 7.318999999998688e-06, 7.333999999997731e-06, 7.360999999997397e-06, 7.360999999997397e-06, 7.333999999997731e-06, 7.291000000006487e-06, 7.3469999999978275e-06, 7.33400000000467e-06, 7.3330000000051965e-06, 7.347000000004766e-06, 7.33400000000467e-06, 7.318999999998688e-06, 7.3469999999978275e-06, 7.3469999999978275e-06, 7.304999999999118e-06, 7.417000000002616e-06, 7.3330000000051965e-06, 7.318999999998688e-06, 7.34800000000424e-06, 7.3469999999978275e-06, 7.347999999997301e-06, 7.332999999998258e-06, 7.3190000000056266e-06, 7.3200000000051e-06, 7.360999999997397e-06, 7.3330000000051965e-06]</msg>
<status status="PASS" starttime="20201115 22:11:26.741" endtime="20201115 22:11:26.745"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:26.729" endtime="20201115 22:11:26.747"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:26.753" endtime="20201115 22:11:26.756"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:26.762" endtime="20201115 22:11:26.783"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:26.757" endtime="20201115 22:11:26.785"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:26.749" endtime="20201115 22:11:26.787"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:26.239" endtime="20201115 22:11:26.787"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:26.236" endtime="20201115 22:11:26.788"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:26.234" endtime="20201115 22:11:26.788"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:26.793" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:26.816" endtime="20201115 22:11:26.836"></status>
</kw>
<msg timestamp="20201115 22:11:26.837" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:26.813" endtime="20201115 22:11:26.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:26.844" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:26.839" endtime="20201115 22:11:26.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:26.846" endtime="20201115 22:11:26.850"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:26.806" endtime="20201115 22:11:26.852"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:26.800" endtime="20201115 22:11:26.853"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:26.871" endtime="20201115 22:11:27.209"></status>
</kw>
<msg timestamp="20201115 22:11:27.216" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047795542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047803167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:26.867" endtime="20201115 22:11:27.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:27.234" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047795542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047803167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:27.219" endtime="20201115 22:11:27.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:27.238" endtime="20201115 22:11:27.243"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:26.860" endtime="20201115 22:11:27.245"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:26.855" endtime="20201115 22:11:27.246"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:27.257" level="INFO">${RESULT} = [{'time': 0.047803167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.624999999997217e-06, 'source_diff': 7.624999999997217e-06}, {'time': 0.047934556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:27.248" endtime="20201115 22:11:27.257"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:27.287" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:27.259" endtime="20201115 22:11:27.287"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:27.298" level="INFO">NAME: 00-overhead-10-remove</msg>
<status status="PASS" starttime="20201115 22:11:27.295" endtime="20201115 22:11:27.298"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:27.303" level="INFO">VALUE: [7.624999999997217e-06, 7.55600000000578e-06, 7.568999999998938e-06, 7.568999999998938e-06, 7.514000000000132e-06, 7.5419999999992715e-06, 7.555999999998841e-06, 7.568999999998938e-06, 7.597999999997551e-06, 7.569999999998411e-06, 7.569999999998411e-06, 7.569000000005877e-06, 7.569999999998411e-06, 7.5419999999992715e-06, 7.555999999998841e-06, 7.569999999998411e-06, 7.500000000000562e-06, 7.583999999997981e-06, 7.568999999998938e-06, 7.55600000000578e-06, 7.569999999998411e-06, 7.569999999998411e-06, 7.568999999998938e-06, 7.58400000000492e-06, 7.5830000000054465e-06, 7.583999999997981e-06, 7.554999999999368e-06, 7.569999999998411e-06, 7.569999999998411e-06, 7.554999999999368e-06, 7.624999999997217e-06, 7.554999999999368e-06, 7.5419999999992715e-06, 7.527999999999702e-06, 7.540999999999798e-06, 7.568999999998938e-06, 7.569000000005877e-06, 7.568999999998938e-06, 7.514000000000132e-06, 7.569999999998411e-06, 7.569999999998411e-06, 7.554999999999368e-06, 7.554999999999368e-06, 7.554999999999368e-06, 7.555999999998841e-06, 7.514000000000132e-06, 7.554999999999368e-06, 7.554999999999368e-06, 7.569999999998411e-06, 7.569999999998411e-06]</msg>
<status status="PASS" starttime="20201115 22:11:27.300" endtime="20201115 22:11:27.304"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:27.289" endtime="20201115 22:11:27.306"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:27.312" endtime="20201115 22:11:27.315"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:27.320" endtime="20201115 22:11:27.342"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:27.316" endtime="20201115 22:11:27.344"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:27.307" endtime="20201115 22:11:27.345"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:26.794" endtime="20201115 22:11:27.346"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:26.791" endtime="20201115 22:11:27.346"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:26.789" endtime="20201115 22:11:27.347"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:27.352" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:27.374" endtime="20201115 22:11:27.395"></status>
</kw>
<msg timestamp="20201115 22:11:27.396" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:27.371" endtime="20201115 22:11:27.397"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:27.403" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:27.399" endtime="20201115 22:11:27.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:27.405" endtime="20201115 22:11:27.409"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:27.364" endtime="20201115 22:11:27.410"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:27.358" endtime="20201115 22:11:27.412"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:27.433" endtime="20201115 22:11:27.773"></status>
</kw>
<msg timestamp="20201115 22:11:27.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047766167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047773931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:27.425" endtime="20201115 22:11:27.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:27.798" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047766167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047773931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:27.782" endtime="20201115 22:11:27.799"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:27.801" endtime="20201115 22:11:27.805"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:27.418" endtime="20201115 22:11:27.806"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:27.413" endtime="20201115 22:11:27.808"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:27.818" level="INFO">${RESULT} = [{'time': 0.047773931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.764000000000382e-06, 'source_diff': 7.764000000000382e-06}, {'time': 0.047918931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:27.809" endtime="20201115 22:11:27.819"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:27.848" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:27.820" endtime="20201115 22:11:27.849"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:27.859" level="INFO">NAME: 00-overhead-11-remove</msg>
<status status="PASS" starttime="20201115 22:11:27.857" endtime="20201115 22:11:27.860"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:27.865" level="INFO">VALUE: [7.764000000000382e-06, 7.737000000000716e-06, 7.750000000000812e-06, 7.750000000000812e-06, 7.750000000000812e-06, 7.764000000000382e-06, 7.736000000001242e-06, 7.735999999994303e-06, 7.777999999999952e-06, 7.791999999999522e-06, 7.750000000000812e-06, 7.750000000000812e-06, 7.750000000000812e-06, 7.736000000001242e-06, 7.722000000001672e-06, 7.750000000000812e-06, 7.777000000000478e-06, 7.749999999993873e-06, 7.735999999994303e-06, 7.680999999995497e-06, 7.750000000000812e-06, 7.777999999999952e-06, 7.764000000000382e-06, 7.763999999993443e-06, 7.750000000000812e-06, 7.777999999999952e-06, 7.750000000000812e-06, 7.750000000000812e-06, 7.764000000000382e-06, 7.750000000000812e-06, 7.777000000000478e-06, 7.764000000000382e-06, 7.763000000000908e-06, 7.750000000000812e-06, 7.750000000000812e-06, 7.735999999994303e-06, 7.764000000000382e-06, 7.777000000000478e-06, 7.750000000000812e-06, 7.736000000001242e-06, 7.777999999999952e-06, 7.763000000000908e-06, 7.708000000002102e-06, 7.750000000000812e-06, 7.764000000000382e-06, 7.764000000000382e-06, 7.750000000000812e-06, 7.750000000000812e-06, 7.764000000000382e-06, 7.777000000000478e-06]</msg>
<status status="PASS" starttime="20201115 22:11:27.862" endtime="20201115 22:11:27.866"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:27.850" endtime="20201115 22:11:27.868"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:27.875" endtime="20201115 22:11:27.878"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:27.884" endtime="20201115 22:11:27.906"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:27.879" endtime="20201115 22:11:27.907"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:27.870" endtime="20201115 22:11:27.909"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:27.353" endtime="20201115 22:11:27.909"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:27.349" endtime="20201115 22:11:27.910"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:27.347" endtime="20201115 22:11:27.910"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:27.915" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:27.938" endtime="20201115 22:11:27.960"></status>
</kw>
<msg timestamp="20201115 22:11:27.961" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:27.935" endtime="20201115 22:11:27.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:27.968" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:27.963" endtime="20201115 22:11:27.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:27.970" endtime="20201115 22:11:27.974"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:27.928" endtime="20201115 22:11:27.976"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:27.922" endtime="20201115 22:11:27.977"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:27.994" endtime="20201115 22:11:28.331"></status>
</kw>
<msg timestamp="20201115 22:11:28.338" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048193806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048201778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:27.990" endtime="20201115 22:11:28.338"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:28.356" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048193806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048201778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:28.340" endtime="20201115 22:11:28.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:28.358" endtime="20201115 22:11:28.364"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:27.983" endtime="20201115 22:11:28.365"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:27.978" endtime="20201115 22:11:28.367"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:28.377" level="INFO">${RESULT} = [{'time': 0.048201778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.972000000001922e-06, 'source_diff': 7.972000000001922e-06}, {'time': 0.048358306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:28.368" endtime="20201115 22:11:28.378"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:28.407" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:28.379" endtime="20201115 22:11:28.408"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:28.418" level="INFO">NAME: 00-overhead-12-remove</msg>
<status status="PASS" starttime="20201115 22:11:28.416" endtime="20201115 22:11:28.419"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:28.424" level="INFO">VALUE: [7.972000000001922e-06, 7.958999999994887e-06, 7.986000000001492e-06, 8.000000000001062e-06, 8.000000000001062e-06, 7.957999999995413e-06, 7.986000000001492e-06, 7.958000000002352e-06, 7.972000000001922e-06, 7.985999999994553e-06, 7.971999999994983e-06, 7.958999999994887e-06, 8.000000000001062e-06, 7.971999999994983e-06, 8.000000000001062e-06, 7.973000000001396e-06, 7.971999999994983e-06, 8.000000000001062e-06, 7.973000000001396e-06, 8.000000000001062e-06, 7.986000000001492e-06, 7.931000000002686e-06, 8.055999999999341e-06, 7.972000000001922e-06, 7.986000000001492e-06, 7.916999999996177e-06, 8.014000000000632e-06, 7.986000000001492e-06, 7.986000000001492e-06, 7.973000000001396e-06, 8.013000000001158e-06, 7.972000000001922e-06, 7.944000000002782e-06, 7.944999999995317e-06, 7.986000000001492e-06, 7.985999999994553e-06, 7.999999999994123e-06, 7.957999999995413e-06, 7.916000000003642e-06, 7.889000000003976e-06, 7.972000000001922e-06, 7.971999999994983e-06, 8.041000000000298e-06, 7.972000000001922e-06, 7.986000000001492e-06, 7.985999999994553e-06, 7.971999999994983e-06, 7.973000000001396e-06, 8.000000000001062e-06, 7.972000000001922e-06]</msg>
<status status="PASS" starttime="20201115 22:11:28.421" endtime="20201115 22:11:28.425"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:28.409" endtime="20201115 22:11:28.426"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:28.433" endtime="20201115 22:11:28.435"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:28.441" endtime="20201115 22:11:28.463"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:28.437" endtime="20201115 22:11:28.464"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:28.428" endtime="20201115 22:11:28.466"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:27.916" endtime="20201115 22:11:28.467"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:27.913" endtime="20201115 22:11:28.467"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:27.911" endtime="20201115 22:11:28.467"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:28.472" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:28.491" endtime="20201115 22:11:28.511"></status>
</kw>
<msg timestamp="20201115 22:11:28.511" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:28.490" endtime="20201115 22:11:28.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:28.514" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:28.512" endtime="20201115 22:11:28.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:28.515" endtime="20201115 22:11:28.517"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:28.485" endtime="20201115 22:11:28.518"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:28.479" endtime="20201115 22:11:28.519"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:28.526" endtime="20201115 22:11:28.837"></status>
</kw>
<msg timestamp="20201115 22:11:28.844" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042345042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042353208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:28.525" endtime="20201115 22:11:28.845"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:28.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042345042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042353208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:28.847" endtime="20201115 22:11:28.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:28.865" endtime="20201115 22:11:28.869"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:28.521" endtime="20201115 22:11:28.871"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:28.519" endtime="20201115 22:11:28.872"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:28.883" level="INFO">${RESULT} = [{'time': 0.042353208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.166000000003892e-06, 'source_diff': 8.166000000003892e-06}, {'time': 0.042522236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:28.874" endtime="20201115 22:11:28.883"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:28.916" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:28.885" endtime="20201115 22:11:28.917"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:28.927" level="INFO">NAME: 00-overhead-13-remove</msg>
<status status="PASS" starttime="20201115 22:11:28.925" endtime="20201115 22:11:28.928"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:28.933" level="INFO">VALUE: [8.166000000003892e-06, 8.179999999996523e-06, 8.179999999996523e-06, 8.221999999995233e-06, 8.181000000002936e-06, 8.181000000002936e-06, 8.181000000002936e-06, 8.222000000002172e-06, 8.208000000002602e-06, 8.166999999996427e-06, 8.179999999996523e-06, 8.138999999997287e-06, 8.167000000003366e-06, 8.179999999996523e-06, 8.179999999996523e-06, 8.167000000003366e-06, 8.180999999995997e-06, 8.222000000002172e-06, 8.167000000003366e-06, 8.179999999996523e-06, 8.194000000003032e-06, 8.181000000002936e-06, 8.166999999996427e-06, 8.180000000003462e-06, 8.166999999996427e-06, 8.181000000002936e-06, 8.166999999996427e-06, 8.167000000003366e-06, 8.263000000001408e-06, 8.179999999996523e-06, 8.181000000002936e-06, 8.153000000003796e-06, 8.167000000003366e-06, 8.194000000003032e-06, 8.194000000003032e-06, 8.166999999996427e-06, 8.166999999996427e-06, 8.195000000002506e-06, 8.139000000004226e-06, 8.167000000003366e-06, 8.165999999996953e-06, 8.165999999996953e-06, 8.179999999996523e-06, 8.193999999996093e-06, 8.236000000001742e-06, 8.167000000003366e-06, 8.195000000002506e-06, 8.209000000002076e-06, 8.124999999997717e-06, 8.151999999997384e-06]</msg>
<status status="PASS" starttime="20201115 22:11:28.930" endtime="20201115 22:11:28.934"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:28.918" endtime="20201115 22:11:28.936"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:28.943" endtime="20201115 22:11:28.945"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:28.952" endtime="20201115 22:11:28.973"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:28.947" endtime="20201115 22:11:28.975"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:28.938" endtime="20201115 22:11:28.977"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:28.473" endtime="20201115 22:11:28.977"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:28.470" endtime="20201115 22:11:28.978"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:28.468" endtime="20201115 22:11:28.978"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:28.983" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:29.006" endtime="20201115 22:11:29.028"></status>
</kw>
<msg timestamp="20201115 22:11:29.029" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:29.003" endtime="20201115 22:11:29.029"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:29.035" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:29.031" endtime="20201115 22:11:29.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:29.038" endtime="20201115 22:11:29.041"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:28.996" endtime="20201115 22:11:29.043"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:28.990" endtime="20201115 22:11:29.044"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:29.061" endtime="20201115 22:11:29.397"></status>
</kw>
<msg timestamp="20201115 22:11:29.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048121472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048129889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:29.058" endtime="20201115 22:11:29.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:29.422" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048121472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048129889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:29.406" endtime="20201115 22:11:29.423"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:29.425" endtime="20201115 22:11:29.430"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:29.050" endtime="20201115 22:11:29.432"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:29.046" endtime="20201115 22:11:29.433"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:29.444" level="INFO">${RESULT} = [{'time': 0.048129889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.417000000003616e-06, 'source_diff': 8.417000000003616e-06}, {'time': 0.048313528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:29.435" endtime="20201115 22:11:29.444"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:29.474" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:29.446" endtime="20201115 22:11:29.474"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:29.485" level="INFO">NAME: 00-overhead-14-remove</msg>
<status status="PASS" starttime="20201115 22:11:29.483" endtime="20201115 22:11:29.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:29.490" level="INFO">VALUE: [8.417000000003616e-06, 8.431000000003186e-06, 8.388999999997537e-06, 8.346999999998828e-06, 8.389000000004476e-06, 8.388999999997537e-06, 8.402999999997107e-06, 8.374999999997967e-06, 8.387999999998064e-06, 8.403000000004046e-06, 8.388999999997537e-06, 8.402999999997107e-06, 8.430000000003712e-06, 8.388999999997537e-06, 8.374999999997967e-06, 8.443999999996343e-06, 8.402000000004572e-06, 8.388999999997537e-06, 8.389000000004476e-06, 8.389000000004476e-06, 8.388000000005003e-06, 8.416999999996677e-06, 8.388999999997537e-06, 8.388000000005003e-06, 8.388999999997537e-06, 8.374999999997967e-06, 8.389000000004476e-06, 8.388999999997537e-06, 8.402000000004572e-06, 8.430999999996247e-06, 8.403000000004046e-06, 8.403000000004046e-06, 8.388999999997537e-06, 8.389000000004476e-06, 8.389000000004476e-06, 8.388999999997537e-06, 8.402999999997107e-06, 8.401999999997634e-06, 8.388999999997537e-06, 8.374999999997967e-06, 8.403000000004046e-06, 8.374999999997967e-06, 8.388000000005003e-06, 8.388999999997537e-06, 8.388999999997537e-06, 8.388999999997537e-06, 8.402999999997107e-06, 8.388999999997537e-06, 8.401999999997634e-06, 8.444000000003282e-06]</msg>
<status status="PASS" starttime="20201115 22:11:29.487" endtime="20201115 22:11:29.492"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:29.476" endtime="20201115 22:11:29.493"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:29.500" endtime="20201115 22:11:29.502"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:29.508" endtime="20201115 22:11:29.529"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:29.504" endtime="20201115 22:11:29.531"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:29.495" endtime="20201115 22:11:29.533"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:28.984" endtime="20201115 22:11:29.533"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:28.981" endtime="20201115 22:11:29.534"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:28.979" endtime="20201115 22:11:29.534"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:29.539" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:29.562" endtime="20201115 22:11:29.585"></status>
</kw>
<msg timestamp="20201115 22:11:29.586" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:29.559" endtime="20201115 22:11:29.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:29.592" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:29.588" endtime="20201115 22:11:29.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:29.594" endtime="20201115 22:11:29.598"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:29.552" endtime="20201115 22:11:29.600"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:29.546" endtime="20201115 22:11:29.601"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:29.617" endtime="20201115 22:11:29.956"></status>
</kw>
<msg timestamp="20201115 22:11:29.963" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047885875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047894458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:29.614" endtime="20201115 22:11:29.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:29.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047885875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047894458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:29.965" endtime="20201115 22:11:29.983"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:29.984" endtime="20201115 22:11:29.988"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:29.607" endtime="20201115 22:11:29.990"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:29.602" endtime="20201115 22:11:29.991"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:30.002" level="INFO">${RESULT} = [{'time': 0.047894458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.582999999999508e-06, 'source_diff': 8.582999999999508e-06}, {'time': 0.048089111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:29.993" endtime="20201115 22:11:30.002"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:30.032" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:30.004" endtime="20201115 22:11:30.033"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:30.043" level="INFO">NAME: 00-overhead-15-remove</msg>
<status status="PASS" starttime="20201115 22:11:30.041" endtime="20201115 22:11:30.044"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:30.049" level="INFO">VALUE: [8.582999999999508e-06, 8.596999999999078e-06, 8.596999999999078e-06, 8.597000000006016e-06, 8.555999999999842e-06, 8.583999999998981e-06, 8.583999999998981e-06, 8.583999999998981e-06, 8.568999999999938e-06, 8.596999999999078e-06, 8.555000000000368e-06, 8.610999999998648e-06, 8.582999999999508e-06, 8.568999999999938e-06, 8.583000000006447e-06, 8.582999999999508e-06, 8.582999999999508e-06, 8.596999999999078e-06, 8.58400000000592e-06, 8.653000000004296e-06, 8.582999999999508e-06, 8.596999999999078e-06, 8.596999999999078e-06, 8.528000000000702e-06, 8.610999999998648e-06, 8.57000000000635e-06, 8.569999999999411e-06, 8.596999999999078e-06, 8.596999999999078e-06, 8.582999999999508e-06, 8.568999999999938e-06, 8.611000000005586e-06, 8.597999999998551e-06, 8.596999999999078e-06, 8.542000000000272e-06, 8.611000000005586e-06, 8.611999999998121e-06, 8.514000000001132e-06, 8.568999999999938e-06, 8.596999999999078e-06, 8.666999999996927e-06, 8.568999999999938e-06, 8.596999999999078e-06, 8.597999999998551e-06, 8.582999999999508e-06, 8.624999999998217e-06, 8.514000000001132e-06, 8.568999999999938e-06, 8.583999999998981e-06, 8.568999999999938e-06]</msg>
<status status="PASS" starttime="20201115 22:11:30.045" endtime="20201115 22:11:30.050"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:30.034" endtime="20201115 22:11:30.052"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:30.058" endtime="20201115 22:11:30.061"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:30.067" endtime="20201115 22:11:30.088"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:30.062" endtime="20201115 22:11:30.090"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:30.054" endtime="20201115 22:11:30.091"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:29.540" endtime="20201115 22:11:30.092"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:29.537" endtime="20201115 22:11:30.093"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:29.535" endtime="20201115 22:11:30.093"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:30.098" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:30.121" endtime="20201115 22:11:30.144"></status>
</kw>
<msg timestamp="20201115 22:11:30.145" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:30.118" endtime="20201115 22:11:30.146"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:30.152" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:30.148" endtime="20201115 22:11:30.152"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:30.154" endtime="20201115 22:11:30.158"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:30.110" endtime="20201115 22:11:30.159"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:30.104" endtime="20201115 22:11:30.161"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:30.177" endtime="20201115 22:11:30.515"></status>
</kw>
<msg timestamp="20201115 22:11:30.522" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048024792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048033625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:30.174" endtime="20201115 22:11:30.523"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:30.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048024792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048033625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:30.525" endtime="20201115 22:11:30.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:30.543" endtime="20201115 22:11:30.548"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:30.167" endtime="20201115 22:11:30.550"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:30.162" endtime="20201115 22:11:30.552"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:30.562" level="INFO">${RESULT} = [{'time': 0.048033625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.833000000006697e-06, 'source_diff': 8.833000000006697e-06}, {'time': 0.048229917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:30.553" endtime="20201115 22:11:30.563"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:30.593" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:30.565" endtime="20201115 22:11:30.593"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:30.604" level="INFO">NAME: 00-overhead-16-remove</msg>
<status status="PASS" starttime="20201115 22:11:30.602" endtime="20201115 22:11:30.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:30.609" level="INFO">VALUE: [8.833000000006697e-06, 8.819999999999661e-06, 8.861000000005836e-06, 8.819999999999661e-06, 8.819999999999661e-06, 8.763999999994443e-06, 8.832999999999758e-06, 8.847999999998801e-06, 8.833999999999231e-06, 8.805000000000618e-06, 8.819000000000188e-06, 8.819999999999661e-06, 8.819999999999661e-06, 8.735999999995303e-06, 8.806000000000092e-06, 8.791000000001048e-06, 8.791999999993583e-06, 8.819999999999661e-06, 8.792000000000522e-06, 8.764000000001382e-06, 8.832999999999758e-06, 8.819999999999661e-06, 8.806000000000092e-06, 8.860999999998898e-06, 8.806000000000092e-06, 8.832999999999758e-06, 8.805000000000618e-06, 8.818999999993249e-06, 8.805000000000618e-06, 8.819000000000188e-06, 8.764000000001382e-06, 8.792000000000522e-06, 8.806000000000092e-06, 8.832999999999758e-06, 8.860999999998898e-06, 8.791000000001048e-06, 8.778000000000952e-06, 8.805000000000618e-06, 8.791000000001048e-06, 8.806000000000092e-06, 8.791000000001048e-06, 8.819999999999661e-06, 8.819999999999661e-06, 8.819000000000188e-06, 8.860999999998898e-06, 8.806000000000092e-06, 8.778000000000952e-06, 8.806000000000092e-06, 8.819999999999661e-06, 8.805000000000618e-06]</msg>
<status status="PASS" starttime="20201115 22:11:30.606" endtime="20201115 22:11:30.610"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:30.595" endtime="20201115 22:11:30.612"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:30.618" endtime="20201115 22:11:30.621"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:30.626" endtime="20201115 22:11:30.648"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:30.622" endtime="20201115 22:11:30.650"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:30.614" endtime="20201115 22:11:30.651"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:30.099" endtime="20201115 22:11:30.652"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:30.096" endtime="20201115 22:11:30.652"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:30.094" endtime="20201115 22:11:30.653"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:30.658" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:30.681" endtime="20201115 22:11:30.705"></status>
</kw>
<msg timestamp="20201115 22:11:30.707" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:30.677" endtime="20201115 22:11:30.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:30.713" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:30.709" endtime="20201115 22:11:30.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:30.715" endtime="20201115 22:11:30.719"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:30.670" endtime="20201115 22:11:30.720"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:30.664" endtime="20201115 22:11:30.722"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:30.738" endtime="20201115 22:11:31.078"></status>
</kw>
<msg timestamp="20201115 22:11:31.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048351056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048360056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:30.735" endtime="20201115 22:11:31.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:31.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048351056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048360056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:31.088" endtime="20201115 22:11:31.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:31.107" endtime="20201115 22:11:31.111"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:30.728" endtime="20201115 22:11:31.112"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:30.723" endtime="20201115 22:11:31.114"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:31.124" level="INFO">${RESULT} = [{'time': 0.048360056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.999999999995123e-06, 'source_diff': 8.999999999995123e-06}, {'time': 0.048570042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:31.115" endtime="20201115 22:11:31.125"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:31.157" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:31.126" endtime="20201115 22:11:31.157"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:31.168" level="INFO">NAME: 00-overhead-17-remove</msg>
<status status="PASS" starttime="20201115 22:11:31.166" endtime="20201115 22:11:31.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:31.174" level="INFO">VALUE: [8.999999999995123e-06, 8.986000000002492e-06, 9.000000000002062e-06, 9.000000000002062e-06, 9.000000000002062e-06, 9.028000000001202e-06, 8.972999999995457e-06, 9.000000000002062e-06, 9.000000000002062e-06, 8.987000000001966e-06, 8.999999999995123e-06, 9.013999999994693e-06, 9.014000000001632e-06, 8.986000000002492e-06, 9.028000000001202e-06, 9.014000000001632e-06, 8.999999999995123e-06, 9.014000000001632e-06, 9.013999999994693e-06, 9.014000000001632e-06, 9.041999999993833e-06, 9.000000000002062e-06, 9.014000000001632e-06, 9.013999999994693e-06, 8.972000000002922e-06, 9.000000000002062e-06, 9.000000000002062e-06, 9.028000000001202e-06, 8.986000000002492e-06, 9.041000000001298e-06, 9.014000000001632e-06, 9.028000000001202e-06, 8.958000000003352e-06, 8.999999999995123e-06, 8.999999999995123e-06, 9.054999999993929e-06, 9.013000000002158e-06, 9.014000000001632e-06, 9.000000000002062e-06, 9.027000000001728e-06, 8.986000000002492e-06, 9.042000000000772e-06, 9.014000000001632e-06, 9.000000000002062e-06, 9.042000000000772e-06, 9.040999999994359e-06, 9.013999999994693e-06, 9.013999999994693e-06, 9.013000000002158e-06, 8.999999999995123e-06]</msg>
<status status="PASS" starttime="20201115 22:11:31.170" endtime="20201115 22:11:31.174"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:31.159" endtime="20201115 22:11:31.176"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:31.182" endtime="20201115 22:11:31.185"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:31.191" endtime="20201115 22:11:31.212"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:31.186" endtime="20201115 22:11:31.214"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:31.178" endtime="20201115 22:11:31.216"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:30.659" endtime="20201115 22:11:31.216"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:30.655" endtime="20201115 22:11:31.217"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:30.654" endtime="20201115 22:11:31.217"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:31.222" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:31.245" endtime="20201115 22:11:31.269"></status>
</kw>
<msg timestamp="20201115 22:11:31.270" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:31.241" endtime="20201115 22:11:31.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:31.276" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:31.272" endtime="20201115 22:11:31.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:31.278" endtime="20201115 22:11:31.282"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:31.234" endtime="20201115 22:11:31.284"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:31.228" endtime="20201115 22:11:31.285"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:31.303" endtime="20201115 22:11:31.643"></status>
</kw>
<msg timestamp="20201115 22:11:31.650" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047778389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047787625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:31.299" endtime="20201115 22:11:31.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:31.668" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047778389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047787625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:31.652" endtime="20201115 22:11:31.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:31.671" endtime="20201115 22:11:31.676"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:31.291" endtime="20201115 22:11:31.678"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:31.286" endtime="20201115 22:11:31.679"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:31.690" level="INFO">${RESULT} = [{'time': 0.047787625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.236000000002742e-06, 'source_diff': 9.236000000002742e-06}, {'time': 0.048008208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:31.681" endtime="20201115 22:11:31.690"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:31.720" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:31.692" endtime="20201115 22:11:31.720"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:31.731" level="INFO">NAME: 00-overhead-18-remove</msg>
<status status="PASS" starttime="20201115 22:11:31.728" endtime="20201115 22:11:31.732"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:31.736" level="INFO">VALUE: [9.236000000002742e-06, 9.207999999996663e-06, 9.222000000003172e-06, 9.236000000002742e-06, 9.235999999995803e-06, 9.250000000002312e-06, 9.250000000002312e-06, 9.236000000002742e-06, 9.222000000003172e-06, 9.209000000003076e-06, 9.236000000002742e-06, 9.195000000003506e-06, 9.249999999995373e-06, 9.222999999995707e-06, 9.236000000002742e-06, 9.250000000002312e-06, 9.208000000003602e-06, 9.236000000002742e-06, 9.221999999996233e-06, 9.209000000003076e-06, 9.221999999996233e-06, 9.236000000002742e-06, 9.235999999995803e-06, 9.222000000003172e-06, 9.235999999995803e-06, 9.236000000002742e-06, 9.250000000002312e-06, 9.221999999996233e-06, 9.222000000003172e-06, 9.208000000003602e-06, 9.236000000002742e-06, 9.235999999995803e-06, 9.250000000002312e-06, 9.222000000003172e-06, 9.319000000000688e-06, 9.222000000003172e-06, 9.292000000001022e-06, 9.250000000002312e-06, 9.221999999996233e-06, 9.236999999995277e-06, 9.235999999995803e-06, 9.236000000002742e-06, 9.222000000003172e-06, 9.222000000003172e-06, 9.250000000002312e-06, 9.221999999996233e-06, 9.222000000003172e-06, 9.236000000002742e-06, 9.221999999996233e-06, 9.222000000003172e-06]</msg>
<status status="PASS" starttime="20201115 22:11:31.733" endtime="20201115 22:11:31.737"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:31.722" endtime="20201115 22:11:31.739"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:31.745" endtime="20201115 22:11:31.748"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:31.753" endtime="20201115 22:11:31.775"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:31.749" endtime="20201115 22:11:31.777"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:31.741" endtime="20201115 22:11:31.778"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:31.223" endtime="20201115 22:11:31.779"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:31.220" endtime="20201115 22:11:31.779"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:31.218" endtime="20201115 22:11:31.780"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:31.785" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:31.808" endtime="20201115 22:11:31.833"></status>
</kw>
<msg timestamp="20201115 22:11:31.834" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:31.805" endtime="20201115 22:11:31.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:31.841" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:31.837" endtime="20201115 22:11:31.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:31.844" endtime="20201115 22:11:31.847"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:31.798" endtime="20201115 22:11:31.849"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:31.792" endtime="20201115 22:11:31.850"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:31.867" endtime="20201115 22:11:32.185"></status>
</kw>
<msg timestamp="20201115 22:11:32.192" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048925194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048934597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:31.864" endtime="20201115 22:11:32.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:32.210" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048925194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048934597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:32.194" endtime="20201115 22:11:32.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:32.213" endtime="20201115 22:11:32.217"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:31.856" endtime="20201115 22:11:32.218"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:31.852" endtime="20201115 22:11:32.220"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:32.230" level="INFO">${RESULT} = [{'time': 0.048934597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.403000000005046e-06, 'source_diff': 9.403000000005046e-06}, {'time': 0.049169069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:32.221" endtime="20201115 22:11:32.231"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:32.260" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:32.232" endtime="20201115 22:11:32.261"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:32.271" level="INFO">NAME: 00-overhead-19-remove</msg>
<status status="PASS" starttime="20201115 22:11:32.269" endtime="20201115 22:11:32.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:32.277" level="INFO">VALUE: [9.403000000005046e-06, 9.416000000005142e-06, 9.430999999997247e-06, 9.417000000004616e-06, 9.445000000003756e-06, 9.346999999999828e-06, 9.416999999997677e-06, 9.499999999995623e-06, 9.415999999998204e-06, 9.417000000004616e-06, 9.416999999997677e-06, 9.444999999996817e-06, 9.416999999997677e-06, 9.457999999996913e-06, 9.429999999997773e-06, 9.416999999997677e-06, 9.429999999997773e-06, 9.429999999997773e-06, 9.402999999998107e-06, 9.402999999998107e-06, 9.430000000004712e-06, 9.430999999997247e-06, 9.444999999996817e-06, 9.415999999998204e-06, 9.431000000004186e-06, 9.416999999997677e-06, 9.402999999998107e-06, 9.416999999997677e-06, 9.430000000004712e-06, 9.457999999996913e-06, 9.429999999997773e-06, 9.402000000005573e-06, 9.415999999998204e-06, 9.430000000004712e-06, 9.403000000005046e-06, 9.403000000005046e-06, 9.430999999997247e-06, 9.416999999997677e-06, 9.416000000005142e-06, 9.415999999998204e-06, 9.458000000003852e-06, 9.402999999998107e-06, 9.443999999997343e-06, 9.415999999998204e-06, 9.429999999997773e-06, 9.416000000005142e-06, 9.443999999997343e-06, 9.402999999998107e-06, 9.472000000003422e-06, 9.444000000004282e-06]</msg>
<status status="PASS" starttime="20201115 22:11:32.274" endtime="20201115 22:11:32.278"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.262" endtime="20201115 22:11:32.279"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:32.286" endtime="20201115 22:11:32.288"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:32.294" endtime="20201115 22:11:32.316"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.289" endtime="20201115 22:11:32.317"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.281" endtime="20201115 22:11:32.319"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:31.786" endtime="20201115 22:11:32.319"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:31.783" endtime="20201115 22:11:32.320"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:31.781" endtime="20201115 22:11:32.320"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:32.325" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:32.349" endtime="20201115 22:11:32.374"></status>
</kw>
<msg timestamp="20201115 22:11:32.375" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:32.345" endtime="20201115 22:11:32.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:32.382" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:32.377" endtime="20201115 22:11:32.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:32.384" endtime="20201115 22:11:32.388"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.338" endtime="20201115 22:11:32.389"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.332" endtime="20201115 22:11:32.391"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:32.407" endtime="20201115 22:11:32.745"></status>
</kw>
<msg timestamp="20201115 22:11:32.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048601431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048611083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:32.404" endtime="20201115 22:11:32.752"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:32.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048601431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048611083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:32.754" endtime="20201115 22:11:32.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:32.772" endtime="20201115 22:11:32.778"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.397" endtime="20201115 22:11:32.779"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.392" endtime="20201115 22:11:32.781"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:32.791" level="INFO">${RESULT} = [{'time': 0.048611083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.651999999998884e-06, 'source_diff': 9.651999999998884e-06}, {'time': 0.048860458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:32.782" endtime="20201115 22:11:32.792"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:32.821" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:32.793" endtime="20201115 22:11:32.822"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:32.832" level="INFO">NAME: 00-overhead-20-remove</msg>
<status status="PASS" starttime="20201115 22:11:32.830" endtime="20201115 22:11:32.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:32.838" level="INFO">VALUE: [9.651999999998884e-06, 9.639000000005726e-06, 9.694000000004532e-06, 9.679999999998024e-06, 9.637999999999314e-06, 9.652999999998357e-06, 9.652999999998357e-06, 9.638999999998787e-06, 9.638999999998787e-06, 9.638999999998787e-06, 9.709000000003576e-06, 9.638999999998787e-06, 9.624999999999218e-06, 9.651999999998884e-06, 9.652999999998357e-06, 9.624999999999218e-06, 9.624999999999218e-06, 9.652999999998357e-06, 9.653000000005296e-06, 9.652999999998357e-06, 9.638999999998787e-06, 9.666999999997927e-06, 9.624999999999218e-06, 9.666999999997927e-06, 9.666999999997927e-06, 9.651999999998884e-06, 9.624999999999218e-06, 9.611999999999121e-06, 9.680000000004962e-06, 9.666999999997927e-06, 9.624999999999218e-06, 9.597000000000078e-06, 9.638999999998787e-06, 9.652999999998357e-06, 9.653000000005296e-06, 9.638999999998787e-06, 9.653000000005296e-06, 9.638999999998787e-06, 9.638999999998787e-06, 9.638999999998787e-06, 9.695000000004006e-06, 9.639000000005726e-06, 9.652999999998357e-06, 9.651999999998884e-06, 9.624999999999218e-06, 9.652999999998357e-06, 9.625000000006156e-06, 9.652999999998357e-06, 9.666999999997927e-06, 9.638999999998787e-06]</msg>
<status status="PASS" starttime="20201115 22:11:32.835" endtime="20201115 22:11:32.839"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.823" endtime="20201115 22:11:32.840"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:32.847" endtime="20201115 22:11:32.849"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:32.861" endtime="20201115 22:11:32.882"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.851" endtime="20201115 22:11:32.884"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.842" endtime="20201115 22:11:32.886"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.326" endtime="20201115 22:11:32.886"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.323" endtime="20201115 22:11:32.887"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.321" endtime="20201115 22:11:32.887"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:32.892" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:32.915" endtime="20201115 22:11:32.941"></status>
</kw>
<msg timestamp="20201115 22:11:32.942" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:32.912" endtime="20201115 22:11:32.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:32.948" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:32.944" endtime="20201115 22:11:32.949"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:32.950" endtime="20201115 22:11:32.954"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.904" endtime="20201115 22:11:32.956"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.898" endtime="20201115 22:11:32.957"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:32.974" endtime="20201115 22:11:33.313"></status>
</kw>
<msg timestamp="20201115 22:11:33.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047785361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047795222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:32.970" endtime="20201115 22:11:33.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:33.338" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047785361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047795222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:33.322" endtime="20201115 22:11:33.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:33.341" endtime="20201115 22:11:33.345"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.963" endtime="20201115 22:11:33.346"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.958" endtime="20201115 22:11:33.348"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:33.358" level="INFO">${RESULT} = [{'time': 0.047795222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.860999999999898e-06, 'source_diff': 9.860999999999898e-06}, {'time': 0.048060958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:33.349" endtime="20201115 22:11:33.359"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:33.391" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:33.360" endtime="20201115 22:11:33.392"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:33.402" level="INFO">NAME: 00-overhead-21-remove</msg>
<status status="PASS" starttime="20201115 22:11:33.400" endtime="20201115 22:11:33.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:33.408" level="INFO">VALUE: [9.860999999999898e-06, 9.833000000000758e-06, 9.847000000000328e-06, 9.860999999999898e-06, 9.888999999999037e-06, 9.833000000000758e-06, 9.860999999999898e-06, 9.860999999999898e-06, 9.874999999999468e-06, 9.888999999999037e-06, 9.833000000000758e-06, 9.860999999999898e-06, 9.834000000000231e-06, 9.860999999999898e-06, 9.792000000001522e-06, 9.860999999999898e-06, 9.874999999999468e-06, 9.834000000000231e-06, 9.778000000001952e-06, 9.847999999999801e-06, 9.833000000000758e-06, 9.820000000000662e-06, 9.847000000000328e-06, 9.832999999993819e-06, 9.792000000001522e-06, 9.834000000000231e-06, 9.834000000000231e-06, 9.833000000000758e-06, 9.860999999999898e-06, 9.833000000000758e-06, 9.819000000001188e-06, 9.764000000002382e-06, 9.847000000000328e-06, 9.847000000000328e-06, 9.861999999999371e-06, 9.834000000000231e-06, 9.874999999999468e-06, 9.834000000000231e-06, 9.833000000000758e-06, 9.847000000000328e-06, 9.847999999999801e-06, 9.847000000000328e-06, 9.834000000000231e-06, 9.834000000000231e-06, 9.847000000000328e-06, 9.820000000000662e-06, 9.847000000000328e-06, 9.847000000000328e-06, 9.820000000000662e-06, 9.833000000000758e-06]</msg>
<status status="PASS" starttime="20201115 22:11:33.405" endtime="20201115 22:11:33.409"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.393" endtime="20201115 22:11:33.411"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:33.417" endtime="20201115 22:11:33.420"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:33.425" endtime="20201115 22:11:33.447"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.421" endtime="20201115 22:11:33.449"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.413" endtime="20201115 22:11:33.450"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.893" endtime="20201115 22:11:33.451"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.890" endtime="20201115 22:11:33.451"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.888" endtime="20201115 22:11:33.452"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:33.457" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:33.480" endtime="20201115 22:11:33.506"></status>
</kw>
<msg timestamp="20201115 22:11:33.507" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:33.476" endtime="20201115 22:11:33.508"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:33.514" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:33.510" endtime="20201115 22:11:33.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:33.516" endtime="20201115 22:11:33.520"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.469" endtime="20201115 22:11:33.521"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.463" endtime="20201115 22:11:33.523"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:33.539" endtime="20201115 22:11:33.876"></status>
</kw>
<msg timestamp="20201115 22:11:33.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047911319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047921375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:33.536" endtime="20201115 22:11:33.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:33.902" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047911319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047921375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:33.886" endtime="20201115 22:11:33.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:33.904" endtime="20201115 22:11:33.910"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.529" endtime="20201115 22:11:33.911"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.524" endtime="20201115 22:11:33.913"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:33.923" level="INFO">${RESULT} = [{'time': 0.047921375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0056000000001342e-05, 'source_diff': 1.0056000000001342e-05}, {'time': 0.048197444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:33.914" endtime="20201115 22:11:33.924"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:33.953" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:33.925" endtime="20201115 22:11:33.954"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:33.964" level="INFO">NAME: 00-overhead-22-remove</msg>
<status status="PASS" starttime="20201115 22:11:33.962" endtime="20201115 22:11:33.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:33.970" level="INFO">VALUE: [1.0056000000001342e-05, 1.0055000000001868e-05, 1.0000000000003062e-05, 1.0056000000001342e-05, 1.0068999999994499e-05, 1.0041999999994833e-05, 1.0068999999994499e-05, 1.0042000000001772e-05, 1.0070000000000912e-05, 1.0055000000001868e-05, 1.0070000000000912e-05, 1.0069000000001438e-05, 1.0097000000000578e-05, 1.0084000000000481e-05, 1.0084000000000481e-05, 1.0068999999994499e-05, 1.0070000000000912e-05, 1.0070000000000912e-05, 1.0069000000001438e-05, 1.0042000000001772e-05, 1.0056000000001342e-05, 1.0097000000000578e-05, 1.0055000000001868e-05, 1.0054999999994929e-05, 1.0055999999994403e-05, 1.0000000000003062e-05, 1.0000000000003062e-05, 1.0070000000000912e-05, 1.0070000000000912e-05, 1.0111000000000148e-05, 1.0070000000000912e-05, 1.004099999999536e-05, 1.0014000000002632e-05, 1.0042000000001772e-05, 1.0069000000001438e-05, 1.0069000000001438e-05, 1.0083000000001008e-05, 1.0056000000001342e-05, 1.0042000000001772e-05, 1.0069000000001438e-05, 1.0041999999994833e-05, 1.0069000000001438e-05, 1.0069000000001438e-05, 1.0056000000001342e-05, 1.0042000000001772e-05, 1.0069000000001438e-05, 1.0055000000001868e-05, 1.0068999999994499e-05, 1.0083000000001008e-05, 1.0083000000001008e-05]</msg>
<status status="PASS" starttime="20201115 22:11:33.966" endtime="20201115 22:11:33.971"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.955" endtime="20201115 22:11:33.973"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:33.979" endtime="20201115 22:11:33.982"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:33.987" endtime="20201115 22:11:34.009"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.983" endtime="20201115 22:11:34.011"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.975" endtime="20201115 22:11:34.012"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.458" endtime="20201115 22:11:34.013"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.454" endtime="20201115 22:11:34.014"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.453" endtime="20201115 22:11:34.014"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:34.019" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:34.042" endtime="20201115 22:11:34.069"></status>
</kw>
<msg timestamp="20201115 22:11:34.070" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:34.038" endtime="20201115 22:11:34.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:34.077" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:34.073" endtime="20201115 22:11:34.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:34.079" endtime="20201115 22:11:34.083"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.031" endtime="20201115 22:11:34.085"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.025" endtime="20201115 22:11:34.086"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:34.104" endtime="20201115 22:11:34.442"></status>
</kw>
<msg timestamp="20201115 22:11:34.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047970181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047980417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:34.100" endtime="20201115 22:11:34.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:34.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047970181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047980417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:34.452" endtime="20201115 22:11:34.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:34.470" endtime="20201115 22:11:34.474"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.093" endtime="20201115 22:11:34.476"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.088" endtime="20201115 22:11:34.477"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:34.488" level="INFO">${RESULT} = [{'time': 0.047980417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0235999999996803e-05, 'source_diff': 1.0235999999996803e-05}, {'time': 0.048272806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:34.479" endtime="20201115 22:11:34.489"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:34.519" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:34.491" endtime="20201115 22:11:34.519"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:34.530" level="INFO">NAME: 00-overhead-23-remove</msg>
<status status="PASS" starttime="20201115 22:11:34.527" endtime="20201115 22:11:34.530"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:34.535" level="INFO">VALUE: [1.0235999999996803e-05, 1.0264000000002882e-05, 1.0263999999995943e-05, 1.0250000000003312e-05, 1.0207999999997663e-05, 1.0250000000003312e-05, 1.0250000000003312e-05, 1.0264000000002882e-05, 1.0221999999997233e-05, 1.0235999999996803e-05, 1.0277000000002978e-05, 1.0264000000002882e-05, 1.0222000000004172e-05, 1.0250000000003312e-05, 1.0264000000002882e-05, 1.0348000000000301e-05, 1.0236000000003742e-05, 1.0263999999995943e-05, 1.0250000000003312e-05, 1.0263999999995943e-05, 1.0291999999995083e-05, 1.0249999999996373e-05, 1.0278000000002452e-05, 1.0278000000002452e-05, 1.0264000000002882e-05, 1.0250000000003312e-05, 1.0334000000000731e-05, 1.0277000000002978e-05, 1.0263999999995943e-05, 1.0249999999996373e-05, 1.0235999999996803e-05, 1.0250000000003312e-05, 1.0277999999995513e-05, 1.0318999999994749e-05, 1.0250000000003312e-05, 1.0250000000003312e-05, 1.0263999999995943e-05, 1.0250000000003312e-05, 1.0221999999997233e-05, 1.0250000000003312e-05, 1.0235999999996803e-05, 1.0250000000003312e-05, 1.0249999999996373e-05, 1.0249999999996373e-05, 1.0237000000003216e-05, 1.0250000000003312e-05, 1.0264000000002882e-05, 1.0250000000003312e-05, 1.0277000000002978e-05, 1.0263999999995943e-05]</msg>
<status status="PASS" starttime="20201115 22:11:34.532" endtime="20201115 22:11:34.536"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.521" endtime="20201115 22:11:34.538"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:34.544" endtime="20201115 22:11:34.547"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:34.552" endtime="20201115 22:11:34.574"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.548" endtime="20201115 22:11:34.576"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.539" endtime="20201115 22:11:34.577"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.020" endtime="20201115 22:11:34.578"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.017" endtime="20201115 22:11:34.578"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.015" endtime="20201115 22:11:34.579"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:34.584" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:34.607" endtime="20201115 22:11:34.635"></status>
</kw>
<msg timestamp="20201115 22:11:34.636" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:34.603" endtime="20201115 22:11:34.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:34.642" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:34.638" endtime="20201115 22:11:34.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:34.645" endtime="20201115 22:11:34.648"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.596" endtime="20201115 22:11:34.650"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.590" endtime="20201115 22:11:34.651"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:34.668" endtime="20201115 22:11:35.004"></status>
</kw>
<msg timestamp="20201115 22:11:35.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047985431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047995903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:34.665" endtime="20201115 22:11:35.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:35.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047985431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047995903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:35.014" endtime="20201115 22:11:35.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:35.033" endtime="20201115 22:11:35.038"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.657" endtime="20201115 22:11:35.039"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.653" endtime="20201115 22:11:35.041"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:35.052" level="INFO">${RESULT} = [{'time': 0.047995903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0471999999997483e-05, 'source_diff': 1.0471999999997483e-05}, {'time': 0.048301708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:35.043" endtime="20201115 22:11:35.052"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:35.082" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:35.054" endtime="20201115 22:11:35.082"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:35.093" level="INFO">NAME: 00-overhead-24-remove</msg>
<status status="PASS" starttime="20201115 22:11:35.090" endtime="20201115 22:11:35.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:35.099" level="INFO">VALUE: [1.0471999999997483e-05, 1.0485999999997053e-05, 1.0486000000003992e-05, 1.0472000000004422e-05, 1.0473000000003896e-05, 1.0457999999997913e-05, 1.0457999999997913e-05, 1.0485999999997053e-05, 1.0485999999997053e-05, 1.0472999999996957e-05, 1.0416999999998677e-05, 1.0458999999997387e-05, 1.0486000000003992e-05, 1.0500000000003562e-05, 1.0472000000004422e-05, 1.0416999999998677e-05, 1.0471999999997483e-05, 1.0487000000003466e-05, 1.0542000000002272e-05, 1.0457999999997913e-05, 1.0500000000003562e-05, 1.0527999999995763e-05, 1.0499999999996623e-05, 1.0459000000004326e-05, 1.0457999999997913e-05, 1.0471999999997483e-05, 1.0541999999995333e-05, 1.0485999999997053e-05, 1.0528000000002702e-05, 1.0486000000003992e-05, 1.0487000000003466e-05, 1.0486000000003992e-05, 1.0471999999997483e-05, 1.0473000000003896e-05, 1.0500000000003562e-05, 1.0473000000003896e-05, 1.0471999999997483e-05, 1.0486000000003992e-05, 1.0429999999998774e-05, 1.0486000000003992e-05, 1.0471999999997483e-05, 1.0471999999997483e-05, 1.0485999999997053e-05, 1.0471999999997483e-05, 1.0443999999998343e-05, 1.0471999999997483e-05, 1.0486000000003992e-05, 1.0485999999997053e-05, 1.0472000000004422e-05, 1.0458000000004852e-05]</msg>
<status status="PASS" starttime="20201115 22:11:35.095" endtime="20201115 22:11:35.100"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.084" endtime="20201115 22:11:35.101"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:35.108" endtime="20201115 22:11:35.111"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:35.117" endtime="20201115 22:11:35.139"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.112" endtime="20201115 22:11:35.141"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.103" endtime="20201115 22:11:35.142"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.585" endtime="20201115 22:11:35.143"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.581" endtime="20201115 22:11:35.143"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.580" endtime="20201115 22:11:35.144"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:35.149" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:35.172" endtime="20201115 22:11:35.201"></status>
</kw>
<msg timestamp="20201115 22:11:35.202" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:35.168" endtime="20201115 22:11:35.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:35.208" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:35.204" endtime="20201115 22:11:35.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:35.210" endtime="20201115 22:11:35.214"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.161" endtime="20201115 22:11:35.216"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.155" endtime="20201115 22:11:35.217"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:35.235" endtime="20201115 22:11:35.539"></status>
</kw>
<msg timestamp="20201115 22:11:35.546" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048431986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048442653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:35.231" endtime="20201115 22:11:35.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:35.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048431986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048442653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:35.548" endtime="20201115 22:11:35.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:35.566" endtime="20201115 22:11:35.570"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.223" endtime="20201115 22:11:35.572"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.219" endtime="20201115 22:11:35.573"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:35.584" level="INFO">${RESULT} = [{'time': 0.048442653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0666999999998927e-05, 'source_diff': 1.0666999999998927e-05}, {'time': 0.048762056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:35.575" endtime="20201115 22:11:35.584"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:35.617" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:35.586" endtime="20201115 22:11:35.617"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:35.628" level="INFO">NAME: 00-overhead-25-remove</msg>
<status status="PASS" starttime="20201115 22:11:35.626" endtime="20201115 22:11:35.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:35.633" level="INFO">VALUE: [1.0666999999998927e-05, 1.0680999999998497e-05, 1.0625000000000218e-05, 1.0679999999999024e-05, 1.0638999999999788e-05, 1.0679999999999024e-05, 1.0625000000000218e-05, 1.0667000000005866e-05, 1.0679999999999024e-05, 1.0680999999998497e-05, 1.0666999999998927e-05, 1.0666999999998927e-05, 1.0681000000005436e-05, 1.0666999999998927e-05, 1.0680999999998497e-05, 1.0665999999999454e-05, 1.0666999999998927e-05, 1.0638999999999788e-05, 1.0680000000005963e-05, 1.0666999999998927e-05, 1.0653000000006296e-05, 1.0679999999999024e-05, 1.0680000000005963e-05, 1.0652999999999357e-05, 1.0680000000005963e-05, 1.0612000000000121e-05, 1.0679999999999024e-05, 1.0651999999999884e-05, 1.0693999999998594e-05, 1.0694999999998067e-05, 1.0666999999998927e-05, 1.0666999999998927e-05, 1.0665999999999454e-05, 1.0679999999999024e-05, 1.0652999999999357e-05, 1.0666999999998927e-05, 1.0721999999997733e-05, 1.0680999999998497e-05, 1.0665999999999454e-05, 1.0625000000000218e-05, 1.0681000000005436e-05, 1.0735999999997303e-05, 1.0625000000000218e-05, 1.0694999999998067e-05, 1.0665999999999454e-05, 1.0679999999999024e-05, 1.0652999999999357e-05, 1.0680999999998497e-05, 1.0667000000005866e-05, 1.0680000000012901e-05]</msg>
<status status="PASS" starttime="20201115 22:11:35.630" endtime="20201115 22:11:35.634"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.619" endtime="20201115 22:11:35.636"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:35.642" endtime="20201115 22:11:35.645"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:35.650" endtime="20201115 22:11:35.672"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.646" endtime="20201115 22:11:35.674"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.637" endtime="20201115 22:11:35.675"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.150" endtime="20201115 22:11:35.676"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.146" endtime="20201115 22:11:35.676"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.145" endtime="20201115 22:11:35.677"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.893" endtime="20201115 22:11:35.677"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="teardown">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:35.687" endtime="20201115 22:11:35.709"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.683" endtime="20201115 22:11:35.711"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.680" endtime="20201115 22:11:35.711"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:11:21.766" endtime="20201115 22:11:35.712" critical="yes"></status>
</test>
<status status="PASS" starttime="20201115 22:11:03.894" endtime="20201115 22:11:35.725"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_ztimer_benchmarks</item>
<item name="RIOT-Board">nucleo-f103rb</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="PASS" starttime="20201115 22:11:00.198" endtime="20201115 22:11:35.768"></status>
</suite>
<statistics>
<total>
<stat pass="5" fail="0">Critical Tests</stat>
<stat pass="5" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="5" fail="0">APP_tests_ztimer_benchmarks</stat>
<stat pass="5" fail="0">BOARD_nucleo-f103rb</stat>
<stat pass="5" fail="0">dev</stat>
</tag>
<suite>
<stat pass="5" fail="0" id="s1" name="tests_ztimer_benchmarks">tests_ztimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_ztimer_benchmarks.Timer Version</stat>
<stat pass="4" fail="0" id="s1-s2" name="Timer Overhead">tests_ztimer_benchmarks.Timer Overhead</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
