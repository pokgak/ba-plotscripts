<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2 (Python 3.7.3 on linux)" generated="20201115 22:11:44.207" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201115 22:11:45.355" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201115 22:11:45.371" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201115 22:11:47.303" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201115 22:11:45.352" endtime="20201115 22:11:47.305"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201115 22:11:47.310" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201115 22:11:47.307" endtime="20201115 22:11:47.311"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.349" endtime="20201115 22:11:47.313"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:47.317" endtime="20201115 22:11:47.645"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.314" endtime="20201115 22:11:47.647"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:47.677" endtime="20201115 22:11:47.698"></status>
</kw>
<msg timestamp="20201115 22:11:47.700" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['in(): This is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Suc...</msg>
<status status="PASS" starttime="20201115 22:11:47.673" endtime="20201115 22:11:47.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:47.706" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['in(): This is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Suc...</msg>
<status status="PASS" starttime="20201115 22:11:47.702" endtime="20201115 22:11:47.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:11:47.713" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:11:47.708" endtime="20201115 22:11:47.714"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:47.667" endtime="20201115 22:11:47.716"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:47.661" endtime="20201115 22:11:47.717"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.659" endtime="20201115 22:11:47.718"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:11:47.726" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:11:47.724" endtime="20201115 22:11:47.727"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.720" endtime="20201115 22:11:47.727"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.657" endtime="20201115 22:11:47.727"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.655" endtime="20201115 22:11:47.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:47.729" endtime="20201115 22:11:47.733"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.652" endtime="20201115 22:11:47.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:47.736" endtime="20201115 22:11:47.740"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.648" endtime="20201115 22:11:47.741"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.345" endtime="20201115 22:11:47.742"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:47.758" endtime="20201115 22:11:47.780"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.755" endtime="20201115 22:11:47.781"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:47.815" endtime="20201115 22:11:47.833"></status>
</kw>
<msg timestamp="20201115 22:11:47.834" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:47.812" endtime="20201115 22:11:47.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:47.840" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:47.836" endtime="20201115 22:11:47.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:11:47.847" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:11:47.843" endtime="20201115 22:11:47.848"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:47.805" endtime="20201115 22:11:47.849"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:47.798" endtime="20201115 22:11:47.851"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.795" endtime="20201115 22:11:47.852"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:11:47.859" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:11:47.858" endtime="20201115 22:11:47.860"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.854" endtime="20201115 22:11:47.861"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.793" endtime="20201115 22:11:47.861"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.791" endtime="20201115 22:11:47.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:47.863" endtime="20201115 22:11:47.866"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.787" endtime="20201115 22:11:47.868"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.783" endtime="20201115 22:11:47.870"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.752" endtime="20201115 22:11:47.870"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:47.888" endtime="20201115 22:11:47.902"></status>
</kw>
<msg timestamp="20201115 22:11:47.903" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:47.885" endtime="20201115 22:11:47.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:47.909" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:47.905" endtime="20201115 22:11:47.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:47.911" endtime="20201115 22:11:47.917"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.877" endtime="20201115 22:11:47.918"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.872" endtime="20201115 22:11:47.920"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:47.930" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201115 22:11:47.928" endtime="20201115 22:11:47.931"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:47.935" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201115 22:11:47.932" endtime="20201115 22:11:47.935"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.922" endtime="20201115 22:11:47.937"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:11:47.743" endtime="20201115 22:11:47.939" critical="yes"></status>
</test>
<status status="PASS" starttime="20201115 22:11:44.391" endtime="20201115 22:11:47.946"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201115 22:11:48.080" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201115 22:11:48.096" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201115 22:11:50.047" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201115 22:11:48.076" endtime="20201115 22:11:50.048"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201115 22:11:50.054" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201115 22:11:50.051" endtime="20201115 22:11:50.055"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.073" endtime="20201115 22:11:50.056"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:50.061" endtime="20201115 22:11:50.386"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.058" endtime="20201115 22:11:50.388"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:50.418" endtime="20201115 22:11:50.439"></status>
</kw>
<msg timestamp="20201115 22:11:50.441" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['): This is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Succes...</msg>
<status status="PASS" starttime="20201115 22:11:50.414" endtime="20201115 22:11:50.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:50.447" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['): This is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Succes...</msg>
<status status="PASS" starttime="20201115 22:11:50.443" endtime="20201115 22:11:50.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:11:50.454" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:11:50.449" endtime="20201115 22:11:50.456"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:50.408" endtime="20201115 22:11:50.458"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:50.402" endtime="20201115 22:11:50.460"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.400" endtime="20201115 22:11:50.460"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:11:50.468" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:11:50.467" endtime="20201115 22:11:50.469"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.462" endtime="20201115 22:11:50.469"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.398" endtime="20201115 22:11:50.470"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.396" endtime="20201115 22:11:50.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:50.472" endtime="20201115 22:11:50.475"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.393" endtime="20201115 22:11:50.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:50.478" endtime="20201115 22:11:50.482"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.389" endtime="20201115 22:11:50.484"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.070" endtime="20201115 22:11:50.484"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO/">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:50.498" endtime="20201115 22:11:50.519"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.494" endtime="20201115 22:11:50.521"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:50.555" endtime="20201115 22:11:50.574"></status>
</kw>
<msg timestamp="20201115 22:11:50.575" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:50.551" endtime="20201115 22:11:50.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:50.581" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:50.577" endtime="20201115 22:11:50.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:11:50.588" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:11:50.584" endtime="20201115 22:11:50.589"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:50.544" endtime="20201115 22:11:50.590"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:50.538" endtime="20201115 22:11:50.592"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.535" endtime="20201115 22:11:50.593"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:11:50.600" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:11:50.599" endtime="20201115 22:11:50.601"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.595" endtime="20201115 22:11:50.602"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.533" endtime="20201115 22:11:50.664"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.531" endtime="20201115 22:11:50.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:50.666" endtime="20201115 22:11:50.670"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.527" endtime="20201115 22:11:50.672"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.523" endtime="20201115 22:11:50.673"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.492" endtime="20201115 22:11:50.674"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure GPIO Overhead</arg>
</arguments>
<msg timestamp="20201115 22:11:50.679" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:50.699" endtime="20201115 22:11:50.712"></status>
</kw>
<msg timestamp="20201115 22:11:50.713" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:50.695" endtime="20201115 22:11:50.714"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:50.719" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:50.715" endtime="20201115 22:11:50.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:50.722" endtime="20201115 22:11:50.726"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.688" endtime="20201115 22:11:50.727"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.683" endtime="20201115 22:11:50.729"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:50.745" endtime="20201115 22:11:51.065"></status>
</kw>
<msg timestamp="20201115 22:11:51.067" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.191417653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.191430167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:50.742" endtime="20201115 22:11:51.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:51.073" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.191417653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.191430167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:51.068" endtime="20201115 22:11:51.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:51.074" endtime="20201115 22:11:51.076"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.735" endtime="20201115 22:11:51.076"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.730" endtime="20201115 22:11:51.077"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:51.081" level="INFO">${RESULT} = [{'time': 0.191430167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.251400000001901e-05, 'source_diff': 1.251400000001901e-05}, {'time': 0.191445819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:51.078" endtime="20201115 22:11:51.082"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:51.090" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:51.083" endtime="20201115 22:11:51.091"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:51.095" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201115 22:11:51.094" endtime="20201115 22:11:51.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:51.098" level="INFO">VALUE: [1.251400000001901e-05, 7.915999999996703e-06, 5.028000000018018e-06, 1.1889000000014915e-05, 1.5236000000001804e-05, 1.1235999999997803e-05, 5.026999999990789e-06, 1.4597000000005078e-05, 3.1390000000131035e-06, 1.4402999999996169e-05, 1.0430000000005712e-05, 1.1305999999988714e-05, 3.8189999999882485e-06, 7.88899999998316e-06, 1.5445000000002818e-05, 4.000000000004e-06, 2.709000000017392e-06, 1.2318999999982871e-05, 6.2500000000131894e-06, 4.610999999987708e-06, 7.5140000000140095e-06, 1.084800000000774e-05, 1.357000000001829e-05, 7.2230000000006456e-06, 8.764000000022198e-06]</msg>
<status status="PASS" starttime="20201115 22:11:51.096" endtime="20201115 22:11:51.098"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.091" endtime="20201115 22:11:51.099"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:51.102" endtime="20201115 22:11:51.103"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:51.106" endtime="20201115 22:11:51.125"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.104" endtime="20201115 22:11:51.126"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.100" endtime="20201115 22:11:51.127"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.680" endtime="20201115 22:11:51.127"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.676" endtime="20201115 22:11:51.127"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:51.132" endtime="20201115 22:11:51.152"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.130" endtime="20201115 22:11:51.153"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.129" endtime="20201115 22:11:51.153"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:11:50.485" endtime="20201115 22:11:51.153" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:51.169" endtime="20201115 22:11:51.190"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.165" endtime="20201115 22:11:51.192"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:51.225" endtime="20201115 22:11:51.244"></status>
</kw>
<msg timestamp="20201115 22:11:51.245" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:51.222" endtime="20201115 22:11:51.245"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:51.251" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:51.247" endtime="20201115 22:11:51.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:11:51.258" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:11:51.254" endtime="20201115 22:11:51.259"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:51.215" endtime="20201115 22:11:51.261"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:51.208" endtime="20201115 22:11:51.262"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.206" endtime="20201115 22:11:51.263"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:11:51.271" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:11:51.270" endtime="20201115 22:11:51.272"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.265" endtime="20201115 22:11:51.273"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.204" endtime="20201115 22:11:51.273"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.202" endtime="20201115 22:11:51.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:51.275" endtime="20201115 22:11:51.278"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.198" endtime="20201115 22:11:51.280"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.194" endtime="20201115 22:11:51.281"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.162" endtime="20201115 22:11:51.282"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer Now Overhead</arg>
</arguments>
<msg timestamp="20201115 22:11:51.287" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:51.307" endtime="20201115 22:11:51.322"></status>
</kw>
<msg timestamp="20201115 22:11:51.323" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:51.303" endtime="20201115 22:11:51.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:51.329" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:51.325" endtime="20201115 22:11:51.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:51.331" endtime="20201115 22:11:51.335"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.296" endtime="20201115 22:11:51.337"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.291" endtime="20201115 22:11:51.338"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:51.355" endtime="20201115 22:11:51.701"></status>
</kw>
<msg timestamp="20201115 22:11:51.709" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.129626028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.129627694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:51.351" endtime="20201115 22:11:51.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:51.728" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.129626028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.129627694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:51.711" endtime="20201115 22:11:51.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:51.730" endtime="20201115 22:11:51.734"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.344" endtime="20201115 22:11:51.736"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.339" endtime="20201115 22:11:51.737"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:51.748" level="INFO">${RESULT} = [{'time': 0.129627694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.665999999983514e-06, 'source_diff': 1.665999999983514e-06}, {'time': 0.129640917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:51.739" endtime="20201115 22:11:51.748"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:51.779" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:51.750" endtime="20201115 22:11:51.780"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:51.790" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201115 22:11:51.787" endtime="20201115 22:11:51.790"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:51.795" level="INFO">VALUE: [1.665999999983514e-06, 1.6250000000050946e-06, 1.6529999999903566e-06, 1.6389999999977256e-06, 1.6250000000050946e-06, 1.6529999999903566e-06, 1.6670000000107432e-06, 1.6389999999977256e-06, 1.6250000000050946e-06, 1.6530000000181122e-06, 1.6530000000181122e-06, 1.6389999999977256e-06, 1.6250000000050946e-06, 1.6529999999903566e-06, 1.6389999999977256e-06, 1.6529999999903566e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.637999999998252e-06, 1.6389999999977256e-06, 1.624999999977339e-06, 1.679999999976145e-06, 1.6389999999977256e-06, 1.6670000000107432e-06, 1.5839999999989196e-06, 1.624999999977339e-06, 1.665999999983514e-06, 1.6389999999977256e-06, 1.6390000000254812e-06, 1.6389999999977256e-06, 1.6530000000181122e-06, 1.6660000000112696e-06, 1.6389999999977256e-06, 1.6530000000181122e-06, 1.624999999977339e-06, 1.6389999999977256e-06, 1.610999999984708e-06, 1.5979999999915506e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.665999999983514e-06, 1.6670000000107432e-06, 1.651999999990883e-06, 1.651999999990883e-06, 1.6389999999977256e-06, 1.610999999984708e-06, 1.6389999999977256e-06, 1.651999999990883e-06, 1.6670000000107432e-06, 1.6389999999977256e-06]</msg>
<status status="PASS" starttime="20201115 22:11:51.792" endtime="20201115 22:11:51.797"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.781" endtime="20201115 22:11:51.798"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:51.805" endtime="20201115 22:11:51.807"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:51.813" endtime="20201115 22:11:51.835"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.809" endtime="20201115 22:11:51.836"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.800" endtime="20201115 22:11:51.838"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.288" endtime="20201115 22:11:51.839"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.284" endtime="20201115 22:11:51.839"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:51.849" endtime="20201115 22:11:51.871"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.845" endtime="20201115 22:11:51.873"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.843" endtime="20201115 22:11:51.874"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:11:51.156" endtime="20201115 22:11:51.874" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set List">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:51.893" endtime="20201115 22:11:51.914"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.889" endtime="20201115 22:11:51.916"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:51.949" endtime="20201115 22:11:51.967"></status>
</kw>
<msg timestamp="20201115 22:11:51.969" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:51.945" endtime="20201115 22:11:51.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:51.975" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:51.971" endtime="20201115 22:11:51.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:11:51.983" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:11:51.977" endtime="20201115 22:11:51.984"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:51.938" endtime="20201115 22:11:51.986"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:51.932" endtime="20201115 22:11:51.987"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.929" endtime="20201115 22:11:51.988"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:11:51.996" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:11:51.994" endtime="20201115 22:11:51.997"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.990" endtime="20201115 22:11:51.997"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.927" endtime="20201115 22:11:51.997"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.926" endtime="20201115 22:11:51.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:51.999" endtime="20201115 22:11:52.003"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.922" endtime="20201115 22:11:52.005"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.917" endtime="20201115 22:11:52.006"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.886" endtime="20201115 22:11:52.007"></status>
</kw>
<kw name="${n} IN RANGE [ 25 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:52.014" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:52.038" endtime="20201115 22:11:52.054"></status>
</kw>
<msg timestamp="20201115 22:11:52.055" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:52.035" endtime="20201115 22:11:52.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:52.061" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:52.057" endtime="20201115 22:11:52.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:52.063" endtime="20201115 22:11:52.067"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.026" endtime="20201115 22:11:52.069"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.021" endtime="20201115 22:11:52.070"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:52.087" endtime="20201115 22:11:52.430"></status>
</kw>
<msg timestamp="20201115 22:11:52.437" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.138566833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.138571389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:52.083" endtime="20201115 22:11:52.437"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:52.456" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.138566833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.138571389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:52.439" endtime="20201115 22:11:52.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:52.458" endtime="20201115 22:11:52.462"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.076" endtime="20201115 22:11:52.463"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.071" endtime="20201115 22:11:52.465"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:52.475" level="INFO">${RESULT} = [{'time': 0.138571389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.555999999988902e-06, 'source_diff': 4.555999999988902e-06}, {'time': 0.138643069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:52.466" endtime="20201115 22:11:52.476"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:52.507" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:52.477" endtime="20201115 22:11:52.507"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:52.518" level="INFO">NAME: 00-overhead-1-set</msg>
<status status="PASS" starttime="20201115 22:11:52.516" endtime="20201115 22:11:52.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:52.523" level="INFO">VALUE: [4.555999999988902e-06, 4.500000000018378e-06, 4.485999999997992e-06, 4.514000000011009e-06, 4.554999999989429e-06, 4.541999999996271e-06, 4.514000000011009e-06, 4.526999999976411e-06, 4.540999999996798e-06, 4.500000000018378e-06, 4.514000000011009e-06, 4.52800000000364e-06, 4.52800000000364e-06, 4.52800000000364e-06, 4.542000000024027e-06, 4.541999999996271e-06, 4.527000000004167e-06, 4.541999999996271e-06, 4.541999999996271e-06, 4.556000000016658e-06, 4.542000000024027e-06, 4.52800000000364e-06, 4.52800000000364e-06, 4.52800000000364e-06, 4.527000000004167e-06, 4.541999999996271e-06, 4.540999999996798e-06, 4.596999999995077e-06, 4.526999999976411e-06, 4.541999999996271e-06, 4.52800000000364e-06, 4.514000000011009e-06, 4.569000000009815e-06, 4.514000000011009e-06, 4.541999999996271e-06, 4.540999999996798e-06, 4.514000000011009e-06, 4.541999999996271e-06, 4.527000000004167e-06, 4.52800000000364e-06, 4.541999999996271e-06, 4.52800000000364e-06, 4.52800000000364e-06, 4.541999999996271e-06, 4.514000000011009e-06, 4.514000000011009e-06, 4.540999999996798e-06, 4.52800000000364e-06, 4.527000000004167e-06, 4.527000000004167e-06]</msg>
<status status="PASS" starttime="20201115 22:11:52.520" endtime="20201115 22:11:52.524"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.509" endtime="20201115 22:11:52.526"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:52.532" endtime="20201115 22:11:52.535"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:52.540" endtime="20201115 22:11:52.562"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.536" endtime="20201115 22:11:52.564"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.527" endtime="20201115 22:11:52.565"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.015" endtime="20201115 22:11:52.566"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.012" endtime="20201115 22:11:52.567"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.010" endtime="20201115 22:11:52.567"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:52.572" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:52.595" endtime="20201115 22:11:52.611"></status>
</kw>
<msg timestamp="20201115 22:11:52.612" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:52.592" endtime="20201115 22:11:52.613"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:52.619" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:52.615" endtime="20201115 22:11:52.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:52.621" endtime="20201115 22:11:52.625"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.585" endtime="20201115 22:11:52.626"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.579" endtime="20201115 22:11:52.628"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:52.644" endtime="20201115 22:11:52.976"></status>
</kw>
<msg timestamp="20201115 22:11:52.983" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047967667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047972319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:52.641" endtime="20201115 22:11:52.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:53.002" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047967667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047972319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:52.986" endtime="20201115 22:11:53.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:53.005" endtime="20201115 22:11:53.009"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.634" endtime="20201115 22:11:53.010"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.629" endtime="20201115 22:11:53.012"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:53.022" level="INFO">${RESULT} = [{'time': 0.047972319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.652000000000822e-06, 'source_diff': 4.652000000000822e-06}, {'time': 0.048046556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:53.013" endtime="20201115 22:11:53.023"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:53.057" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:53.024" endtime="20201115 22:11:53.058"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:53.068" level="INFO">NAME: 00-overhead-2-set</msg>
<status status="PASS" starttime="20201115 22:11:53.066" endtime="20201115 22:11:53.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:53.074" level="INFO">VALUE: [4.652000000000822e-06, 4.624999999994217e-06, 4.652000000000822e-06, 4.653000000000296e-06, 4.666000000000392e-06, 4.652999999993357e-06, 4.666000000000392e-06, 4.653000000000296e-06, 4.666999999999866e-06, 4.666999999999866e-06, 4.652000000000822e-06, 4.653000000000296e-06, 4.652000000000822e-06, 4.666000000000392e-06, 4.666000000000392e-06, 4.653000000000296e-06, 4.638000000001252e-06, 4.639000000000726e-06, 4.653000000000296e-06, 4.679999999999962e-06, 4.680999999999436e-06, 4.653000000000296e-06, 4.680999999999436e-06, 4.639000000000726e-06, 4.653000000000296e-06, 4.653000000000296e-06, 4.653000000000296e-06, 4.666999999999866e-06, 4.666999999999866e-06, 4.666000000000392e-06, 4.596999999995077e-06, 4.679999999999962e-06, 4.666000000000392e-06, 4.653000000000296e-06, 4.653000000000296e-06, 4.679999999999962e-06, 4.666000000000392e-06, 4.653000000000296e-06, 4.639000000000726e-06, 4.666000000000392e-06, 4.652000000000822e-06, 4.666999999999866e-06, 4.653000000000296e-06, 4.666999999999866e-06, 4.666999999999866e-06, 4.666000000000392e-06, 4.653000000000296e-06, 4.693999999999532e-06, 4.666999999999866e-06, 4.652000000000822e-06]</msg>
<status status="PASS" starttime="20201115 22:11:53.071" endtime="20201115 22:11:53.075"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.059" endtime="20201115 22:11:53.077"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:53.083" endtime="20201115 22:11:53.086"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:53.092" endtime="20201115 22:11:53.113"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.087" endtime="20201115 22:11:53.115"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.079" endtime="20201115 22:11:53.116"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.573" endtime="20201115 22:11:53.117"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.570" endtime="20201115 22:11:53.117"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.568" endtime="20201115 22:11:53.118"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:53.123" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:53.146" endtime="20201115 22:11:53.162"></status>
</kw>
<msg timestamp="20201115 22:11:53.164" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:53.142" endtime="20201115 22:11:53.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:53.170" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:53.166" endtime="20201115 22:11:53.170"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:53.172" endtime="20201115 22:11:53.176"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.135" endtime="20201115 22:11:53.177"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.129" endtime="20201115 22:11:53.179"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:53.195" endtime="20201115 22:11:53.528"></status>
</kw>
<msg timestamp="20201115 22:11:53.535" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047586708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047592236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:53.192" endtime="20201115 22:11:53.535"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:53.554" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047586708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047592236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:53.537" endtime="20201115 22:11:53.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:53.556" endtime="20201115 22:11:53.560"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.185" endtime="20201115 22:11:53.561"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.180" endtime="20201115 22:11:53.563"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:53.573" level="INFO">${RESULT} = [{'time': 0.047592236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.52800000000464e-06, 'source_diff': 5.52800000000464e-06}, {'time': 0.047668681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:11:53.564" endtime="20201115 22:11:53.574"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:53.604" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:53.576" endtime="20201115 22:11:53.605"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:53.617" level="INFO">NAME: 00-overhead-3-set</msg>
<status status="PASS" starttime="20201115 22:11:53.614" endtime="20201115 22:11:53.617"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:53.631" level="INFO">VALUE: [5.52800000000464e-06, 5.444999999999756e-06, 5.457999999999852e-06, 5.4589999999993255e-06, 5.444999999999756e-06, 5.4450000000066945e-06, 5.444000000000282e-06, 5.472999999998895e-06, 5.485999999998992e-06, 5.4589999999993255e-06, 5.457999999999852e-06, 5.485999999998992e-06, 5.486000000005931e-06, 5.457999999999852e-06, 5.5139999999981315e-06, 5.471999999999422e-06, 5.471999999999422e-06, 5.4589999999993255e-06, 5.444999999999756e-06, 5.471999999999422e-06, 5.485999999998992e-06, 5.444000000000282e-06, 5.471999999999422e-06, 5.457999999999852e-06, 5.4589999999993255e-06, 5.472999999998895e-06, 5.471999999999422e-06, 5.431000000000186e-06, 5.471999999999422e-06, 5.457999999999852e-06, 5.457999999999852e-06, 5.430000000000712e-06, 5.485999999998992e-06, 5.457999999999852e-06, 5.457999999999852e-06, 5.471999999999422e-06, 5.444999999999756e-06, 5.472999999998895e-06, 5.471999999999422e-06, 5.485999999998992e-06, 5.457999999999852e-06, 5.417000000000616e-06, 5.471999999999422e-06, 5.457999999999852e-06, 5.471999999999422e-06, 5.457999999999852e-06, 5.471999999999422e-06, 5.4589999999993255e-06, 5.527999999997701e-06, 5.485999999998992e-06]</msg>
<status status="PASS" starttime="20201115 22:11:53.619" endtime="20201115 22:11:53.632"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.606" endtime="20201115 22:11:53.633"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:53.640" endtime="20201115 22:11:53.642"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:53.648" endtime="20201115 22:11:53.669"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.644" endtime="20201115 22:11:53.671"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.635" endtime="20201115 22:11:53.672"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.124" endtime="20201115 22:11:53.673"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.120" endtime="20201115 22:11:53.674"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.119" endtime="20201115 22:11:53.674"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:53.679" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:53.702" endtime="20201115 22:11:53.720"></status>
</kw>
<msg timestamp="20201115 22:11:53.721" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:53.698" endtime="20201115 22:11:53.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:53.727" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:53.723" endtime="20201115 22:11:53.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:53.729" endtime="20201115 22:11:53.733"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.691" endtime="20201115 22:11:53.735"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.686" endtime="20201115 22:11:53.736"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:53.754" endtime="20201115 22:11:54.085"></status>
</kw>
<msg timestamp="20201115 22:11:54.093" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047592819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047599083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:53.750" endtime="20201115 22:11:54.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:54.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047592819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047599083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:54.095" endtime="20201115 22:11:54.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:54.114" endtime="20201115 22:11:54.118"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.742" endtime="20201115 22:11:54.119"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.737" endtime="20201115 22:11:54.121"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:54.131" level="INFO">${RESULT} = [{'time': 0.047599083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.2639999999988816e-06, 'source_diff': 6.2639999999988816e-06}, {'time': 0.047680389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:54.122" endtime="20201115 22:11:54.132"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:54.163" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:54.134" endtime="20201115 22:11:54.163"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:54.175" level="INFO">NAME: 00-overhead-4-set</msg>
<status status="PASS" starttime="20201115 22:11:54.172" endtime="20201115 22:11:54.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:54.181" level="INFO">VALUE: [6.2639999999988816e-06, 6.291999999998021e-06, 6.2639999999988816e-06, 6.2779999999984515e-06, 6.276999999998978e-06, 6.2779999999984515e-06, 6.2639999999988816e-06, 6.2639999999988816e-06, 6.249999999999312e-06, 6.27800000000539e-06, 6.263000000006347e-06, 6.262999999999408e-06, 6.2639999999988816e-06, 6.2779999999984515e-06, 6.2779999999984515e-06, 6.290999999998548e-06, 6.2639999999988816e-06, 6.2639999999988816e-06, 6.249999999999312e-06, 6.2639999999988816e-06, 6.30600000000453e-06, 6.304999999998118e-06, 6.2779999999984515e-06, 6.2639999999988816e-06, 6.235999999999742e-06, 6.2639999999988816e-06, 6.2640000000058205e-06, 6.2640000000058205e-06, 6.222000000000172e-06, 6.27800000000539e-06, 6.2639999999988816e-06, 6.2639999999988816e-06, 6.290999999998548e-06, 6.236000000006681e-06, 6.2639999999988816e-06, 6.2639999999988816e-06, 6.2779999999984515e-06, 6.291999999998021e-06, 6.2779999999984515e-06, 6.262999999999408e-06, 6.2639999999988816e-06, 6.2779999999984515e-06, 6.2640000000058205e-06, 6.27800000000539e-06, 6.2779999999984515e-06, 6.290999999998548e-06, 6.2640000000058205e-06, 6.304999999998118e-06, 6.291999999998021e-06, 6.222000000000172e-06]</msg>
<status status="PASS" starttime="20201115 22:11:54.177" endtime="20201115 22:11:54.181"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:54.165" endtime="20201115 22:11:54.183"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:54.189" endtime="20201115 22:11:54.192"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:54.197" endtime="20201115 22:11:54.219"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:54.193" endtime="20201115 22:11:54.221"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:54.185" endtime="20201115 22:11:54.222"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.680" endtime="20201115 22:11:54.223"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.677" endtime="20201115 22:11:54.223"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.675" endtime="20201115 22:11:54.224"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:54.228" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:54.251" endtime="20201115 22:11:54.269"></status>
</kw>
<msg timestamp="20201115 22:11:54.270" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:54.248" endtime="20201115 22:11:54.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:54.276" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:54.272" endtime="20201115 22:11:54.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:54.278" endtime="20201115 22:11:54.282"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:54.241" endtime="20201115 22:11:54.284"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:54.235" endtime="20201115 22:11:54.285"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:54.302" endtime="20201115 22:11:54.634"></status>
</kw>
<msg timestamp="20201115 22:11:54.641" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047147542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047154611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:54.299" endtime="20201115 22:11:54.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:54.660" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047147542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047154611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:54.643" endtime="20201115 22:11:54.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:54.663" endtime="20201115 22:11:54.667"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:54.291" endtime="20201115 22:11:54.668"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:54.286" endtime="20201115 22:11:54.670"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:54.681" level="INFO">${RESULT} = [{'time': 0.047154611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.068999999998438e-06, 'source_diff': 7.068999999998438e-06}, {'time': 0.047254556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:54.672" endtime="20201115 22:11:54.681"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:54.711" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:54.683" endtime="20201115 22:11:54.712"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:54.722" level="INFO">NAME: 00-overhead-5-set</msg>
<status status="PASS" starttime="20201115 22:11:54.720" endtime="20201115 22:11:54.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:54.729" level="INFO">VALUE: [7.068999999998438e-06, 7.09800000000399e-06, 7.0829999999980076e-06, 7.139000000003226e-06, 7.07000000000485e-06, 7.0279999999992016e-06, 7.0690000000053765e-06, 7.0829999999980076e-06, 7.083999999997481e-06, 7.054999999998868e-06, 7.068999999998438e-06, 7.0419999999987715e-06, 7.069999999997911e-06, 7.083999999997481e-06, 7.0829999999980076e-06, 7.07000000000485e-06, 7.068999999998438e-06, 7.083999999997481e-06, 7.0690000000053765e-06, 7.013999999999632e-06, 7.068999999998438e-06, 7.111999999996621e-06, 7.054999999998868e-06, 7.0830000000049465e-06, 7.068999999998438e-06, 7.068999999998438e-06, 7.054999999998868e-06, 7.069999999997911e-06, 7.097000000004516e-06, 7.07000000000485e-06, 7.0830000000049465e-06, 7.0690000000053765e-06, 7.055999999998341e-06, 7.069999999997911e-06, 7.07000000000485e-06, 7.097000000004516e-06, 7.124999999996717e-06, 7.0419999999987715e-06, 7.054999999998868e-06, 7.069999999997911e-06, 7.09800000000399e-06, 7.055000000005807e-06, 7.068999999998438e-06, 7.0690000000053765e-06, 7.068999999998438e-06, 7.068999999998438e-06, 7.05600000000528e-06, 7.0690000000053765e-06, 7.05600000000528e-06, 7.0690000000053765e-06]</msg>
<status status="PASS" starttime="20201115 22:11:54.724" endtime="20201115 22:11:54.730"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:54.713" endtime="20201115 22:11:54.731"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:54.738" endtime="20201115 22:11:54.740"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:54.746" endtime="20201115 22:11:54.767"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:54.742" endtime="20201115 22:11:54.769"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:54.733" endtime="20201115 22:11:54.771"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:54.230" endtime="20201115 22:11:54.771"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:54.226" endtime="20201115 22:11:54.772"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:54.224" endtime="20201115 22:11:54.772"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:54.777" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:54.802" endtime="20201115 22:11:54.819"></status>
</kw>
<msg timestamp="20201115 22:11:54.821" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:54.798" endtime="20201115 22:11:54.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:54.827" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:54.823" endtime="20201115 22:11:54.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:54.829" endtime="20201115 22:11:54.833"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:54.791" endtime="20201115 22:11:54.835"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:54.784" endtime="20201115 22:11:54.836"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:54.853" endtime="20201115 22:11:55.187"></status>
</kw>
<msg timestamp="20201115 22:11:55.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049112319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049120222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:54.849" endtime="20201115 22:11:55.195"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:55.208" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049112319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049120222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:55.197" endtime="20201115 22:11:55.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:55.210" endtime="20201115 22:11:55.212"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:54.842" endtime="20201115 22:11:55.212"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:54.837" endtime="20201115 22:11:55.213"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:55.218" level="INFO">${RESULT} = [{'time': 0.049120222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.902999999996607e-06, 'source_diff': 7.902999999996607e-06}, {'time': 0.049220014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:55.214" endtime="20201115 22:11:55.218"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:55.233" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:55.219" endtime="20201115 22:11:55.233"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:55.238" level="INFO">NAME: 00-overhead-6-set</msg>
<status status="PASS" starttime="20201115 22:11:55.237" endtime="20201115 22:11:55.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:55.241" level="INFO">VALUE: [7.902999999996607e-06, 7.874999999997467e-06, 7.875000000004406e-06, 7.888999999997037e-06, 7.901999999997134e-06, 7.846999999998328e-06, 7.888999999997037e-06, 7.860999999997897e-06, 7.888000000004503e-06, 7.875000000004406e-06, 7.860999999997897e-06, 7.860999999997897e-06, 7.875000000004406e-06, 7.874999999997467e-06, 7.847999999997801e-06, 7.889000000003976e-06, 7.875000000004406e-06, 7.888999999997037e-06, 7.888999999997037e-06, 7.903000000003546e-06, 7.888999999997037e-06, 7.861999999997371e-06, 7.888999999997037e-06, 7.860999999997897e-06, 7.889000000003976e-06, 7.860999999997897e-06, 7.889000000003976e-06, 7.888999999997037e-06, 7.874999999997467e-06, 7.874999999997467e-06, 7.874999999997467e-06, 7.959000000001826e-06, 7.888999999997037e-06, 7.861000000004836e-06, 7.875000000004406e-06, 7.874999999997467e-06, 7.874999999997467e-06, 7.875000000004406e-06, 7.903000000003546e-06, 7.889000000003976e-06, 7.901999999997134e-06, 7.917000000003116e-06, 7.874999999997467e-06, 7.874999999997467e-06, 7.860999999997897e-06, 7.874999999997467e-06, 7.832999999998758e-06, 7.889000000003976e-06, 7.860999999997897e-06, 7.888999999997037e-06]</msg>
<status status="PASS" starttime="20201115 22:11:55.239" endtime="20201115 22:11:55.241"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:55.234" endtime="20201115 22:11:55.242"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:55.245" endtime="20201115 22:11:55.247"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:55.249" endtime="20201115 22:11:55.269"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:55.247" endtime="20201115 22:11:55.269"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:55.243" endtime="20201115 22:11:55.270"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:54.779" endtime="20201115 22:11:55.270"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:54.775" endtime="20201115 22:11:55.271"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:54.773" endtime="20201115 22:11:55.271"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:55.273" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:55.284" endtime="20201115 22:11:55.299"></status>
</kw>
<msg timestamp="20201115 22:11:55.300" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:55.282" endtime="20201115 22:11:55.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:55.303" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:55.301" endtime="20201115 22:11:55.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:55.304" endtime="20201115 22:11:55.306"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:55.279" endtime="20201115 22:11:55.307"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:55.276" endtime="20201115 22:11:55.309"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:55.325" endtime="20201115 22:11:55.659"></status>
</kw>
<msg timestamp="20201115 22:11:55.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027425667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027434431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:55.322" endtime="20201115 22:11:55.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:55.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027425667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027434431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:55.668" endtime="20201115 22:11:55.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:55.687" endtime="20201115 22:11:55.691"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:55.315" endtime="20201115 22:11:55.692"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:55.310" endtime="20201115 22:11:55.694"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:55.704" level="INFO">${RESULT} = [{'time': 0.027434431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.763999999997912e-06, 'source_diff': 8.763999999997912e-06}, {'time': 0.027537986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:55.695" endtime="20201115 22:11:55.705"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:55.735" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:55.706" endtime="20201115 22:11:55.735"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:55.746" level="INFO">NAME: 00-overhead-7-set</msg>
<status status="PASS" starttime="20201115 22:11:55.743" endtime="20201115 22:11:55.746"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:55.751" level="INFO">VALUE: [8.763999999997912e-06, 8.680000000000493e-06, 8.694000000000063e-06, 8.680000000000493e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.736000000002242e-06, 8.680000000000493e-06, 8.652999999997357e-06, 8.667000000000397e-06, 8.680000000000493e-06, 8.722000000002672e-06, 8.680999999999967e-06, 8.597999999998551e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.666000000000923e-06, 8.666000000000923e-06, 8.721999999999203e-06, 8.735999999998773e-06, 8.735999999998773e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.639000000001257e-06, 8.694999999999536e-06, 8.707999999999633e-06, 8.652999999997357e-06, 8.667000000000397e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.611000000002117e-06, 8.694999999999536e-06, 8.694999999999536e-06, 8.694999999999536e-06, 8.679999999997023e-06, 8.666000000004392e-06, 8.680999999996497e-06, 8.680999999996497e-06, 8.679999999997023e-06, 8.679999999997023e-06, 8.695000000003006e-06, 8.694999999996067e-06, 8.680999999996497e-06, 8.680999999996497e-06, 8.694000000003532e-06, 8.695000000003006e-06, 8.693999999996593e-06, 8.693999999996593e-06, 8.694999999996067e-06]</msg>
<status status="PASS" starttime="20201115 22:11:55.748" endtime="20201115 22:11:55.753"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:55.737" endtime="20201115 22:11:55.755"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:55.761" endtime="20201115 22:11:55.764"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:55.770" endtime="20201115 22:11:55.791"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:55.765" endtime="20201115 22:11:55.793"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:55.757" endtime="20201115 22:11:55.794"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:55.274" endtime="20201115 22:11:55.795"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:55.272" endtime="20201115 22:11:55.796"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:55.271" endtime="20201115 22:11:55.796"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:55.801" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:55.825" endtime="20201115 22:11:55.844"></status>
</kw>
<msg timestamp="20201115 22:11:55.845" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:55.822" endtime="20201115 22:11:55.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:55.852" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:55.847" endtime="20201115 22:11:55.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:55.854" endtime="20201115 22:11:55.858"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:55.813" endtime="20201115 22:11:55.859"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:55.807" endtime="20201115 22:11:55.861"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:55.878" endtime="20201115 22:11:56.210"></status>
</kw>
<msg timestamp="20201115 22:11:56.217" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049078389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049087889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:55.874" endtime="20201115 22:11:56.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:56.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049078389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049087889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:56.219" endtime="20201115 22:11:56.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:56.237" endtime="20201115 22:11:56.241"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:55.867" endtime="20201115 22:11:56.243"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:55.862" endtime="20201115 22:11:56.244"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:56.255" level="INFO">${RESULT} = [{'time': 0.049087889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.500000000002562e-06, 'source_diff': 9.500000000002562e-06}, {'time': 0.049203042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:56.246" endtime="20201115 22:11:56.255"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:56.285" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:56.257" endtime="20201115 22:11:56.286"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:56.296" level="INFO">NAME: 00-overhead-8-set</msg>
<status status="PASS" starttime="20201115 22:11:56.294" endtime="20201115 22:11:56.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:56.302" level="INFO">VALUE: [9.500000000002562e-06, 9.500000000002562e-06, 9.485999999996053e-06, 9.500000000002562e-06, 9.486000000002992e-06, 9.499999999995623e-06, 9.485999999996053e-06, 9.472999999995957e-06, 9.458000000003852e-06, 9.500000000002562e-06, 9.528000000001702e-06, 9.528000000001702e-06, 9.499999999995623e-06, 9.514000000002132e-06, 9.500000000002562e-06, 9.472000000003422e-06, 9.514000000002132e-06, 9.486000000002992e-06, 9.514000000002132e-06, 9.486000000002992e-06, 9.485999999996053e-06, 9.486000000002992e-06, 9.500000000002562e-06, 9.429999999997773e-06, 9.486000000002992e-06, 9.485999999996053e-06, 9.485999999996053e-06, 9.541999999994333e-06, 9.486000000002992e-06, 9.486000000002992e-06, 9.471999999996483e-06, 9.486000000002992e-06, 9.500000000002562e-06, 9.51299999999572e-06, 9.485999999996053e-06, 9.500000000002562e-06, 9.472000000003422e-06, 9.457999999996913e-06, 9.514000000002132e-06, 9.500000000002562e-06, 9.514000000002132e-06, 9.486000000002992e-06, 9.473000000002896e-06, 9.457999999996913e-06, 9.500000000002562e-06, 9.500000000002562e-06, 9.514000000002132e-06, 9.500000000002562e-06, 9.486000000002992e-06, 9.528000000001702e-06]</msg>
<status status="PASS" starttime="20201115 22:11:56.298" endtime="20201115 22:11:56.304"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:56.287" endtime="20201115 22:11:56.305"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:56.312" endtime="20201115 22:11:56.314"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:56.320" endtime="20201115 22:11:56.342"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:56.316" endtime="20201115 22:11:56.344"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:56.307" endtime="20201115 22:11:56.345"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:55.802" endtime="20201115 22:11:56.346"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:55.798" endtime="20201115 22:11:56.347"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:55.797" endtime="20201115 22:11:56.347"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:56.352" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:56.375" endtime="20201115 22:11:56.394"></status>
</kw>
<msg timestamp="20201115 22:11:56.395" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:56.371" endtime="20201115 22:11:56.396"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:56.402" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:56.397" endtime="20201115 22:11:56.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:56.404" endtime="20201115 22:11:56.408"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:56.364" endtime="20201115 22:11:56.409"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:56.358" endtime="20201115 22:11:56.411"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:56.427" endtime="20201115 22:11:56.760"></status>
</kw>
<msg timestamp="20201115 22:11:56.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048334111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048344389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:56.424" endtime="20201115 22:11:56.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:56.785" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048334111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048344389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:56.769" endtime="20201115 22:11:56.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:56.788" endtime="20201115 22:11:56.792"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:56.417" endtime="20201115 22:11:56.793"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:56.412" endtime="20201115 22:11:56.795"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:56.805" level="INFO">${RESULT} = [{'time': 0.048344389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0278000000002452e-05, 'source_diff': 1.0278000000002452e-05}, {'time': 0.048479375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:56.796" endtime="20201115 22:11:56.806"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:56.836" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:56.807" endtime="20201115 22:11:56.836"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:56.847" level="INFO">NAME: 00-overhead-9-set</msg>
<status status="PASS" starttime="20201115 22:11:56.844" endtime="20201115 22:11:56.847"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:56.853" level="INFO">VALUE: [1.0278000000002452e-05, 1.0347000000000828e-05, 1.0305000000002118e-05, 1.0292000000002022e-05, 1.0250000000003312e-05, 1.0320000000001162e-05, 1.0319000000001688e-05, 1.0305000000002118e-05, 1.0291000000002548e-05, 1.0263999999995943e-05, 1.0332999999994319e-05, 1.0348000000000301e-05, 1.0320000000001162e-05, 1.0292000000002022e-05, 1.0319000000001688e-05, 1.0263999999995943e-05, 1.0304999999995179e-05, 1.0292000000002022e-05, 1.0292000000002022e-05, 1.0263000000003408e-05, 1.0263999999995943e-05, 1.0278000000002452e-05, 1.0306000000001592e-05, 1.0291999999995083e-05, 1.0292000000002022e-05, 1.0292000000002022e-05, 1.0306000000001592e-05, 1.0292000000002022e-05, 1.0305000000002118e-05, 1.0305999999994653e-05, 1.0306000000001592e-05, 1.0264000000002882e-05, 1.0347000000000828e-05, 1.0319000000001688e-05, 1.0292000000002022e-05, 1.0291000000002548e-05, 1.0292000000002022e-05, 1.0306000000001592e-05, 1.0291000000002548e-05, 1.0277999999995513e-05, 1.0292000000002022e-05, 1.0291999999995083e-05, 1.0292000000002022e-05, 1.0333000000001258e-05, 1.0305000000002118e-05, 1.0236000000003742e-05, 1.0305000000002118e-05, 1.0306000000001592e-05, 1.0304999999995179e-05, 1.0291000000002548e-05]</msg>
<status status="PASS" starttime="20201115 22:11:56.849" endtime="20201115 22:11:56.855"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:56.838" endtime="20201115 22:11:56.857"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:56.864" endtime="20201115 22:11:56.867"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:56.873" endtime="20201115 22:11:56.895"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:56.868" endtime="20201115 22:11:56.896"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:56.859" endtime="20201115 22:11:56.898"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:56.353" endtime="20201115 22:11:56.899"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:56.349" endtime="20201115 22:11:56.899"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:56.348" endtime="20201115 22:11:56.899"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:56.905" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:56.928" endtime="20201115 22:11:56.947"></status>
</kw>
<msg timestamp="20201115 22:11:56.948" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:56.924" endtime="20201115 22:11:56.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:56.954" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:56.950" endtime="20201115 22:11:56.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:56.956" endtime="20201115 22:11:56.960"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:56.917" endtime="20201115 22:11:56.962"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:56.911" endtime="20201115 22:11:56.963"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:56.980" endtime="20201115 22:11:57.313"></status>
</kw>
<msg timestamp="20201115 22:11:57.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048008736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048019847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:56.976" endtime="20201115 22:11:57.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:57.338" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048008736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048019847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:57.322" endtime="20201115 22:11:57.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:57.340" endtime="20201115 22:11:57.344"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:56.969" endtime="20201115 22:11:57.346"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:56.964" endtime="20201115 22:11:57.347"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:57.358" level="INFO">${RESULT} = [{'time': 0.048019847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110999999994209e-05, 'source_diff': 1.1110999999994209e-05}, {'time': 0.048163569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:57.349" endtime="20201115 22:11:57.358"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:57.391" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:57.360" endtime="20201115 22:11:57.391"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:57.402" level="INFO">NAME: 00-overhead-10-set</msg>
<status status="PASS" starttime="20201115 22:11:57.399" endtime="20201115 22:11:57.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:57.408" level="INFO">VALUE: [1.1110999999994209e-05, 1.1152000000000384e-05, 1.1111000000001148e-05, 1.1139000000000288e-05, 1.1111000000001148e-05, 1.1110999999994209e-05, 1.1111000000001148e-05, 1.1028000000003202e-05, 1.1082999999995069e-05, 1.1110999999994209e-05, 1.1139000000000288e-05, 1.1125000000000718e-05, 1.1125000000000718e-05, 1.1041999999995833e-05, 1.1139000000000288e-05, 1.1098000000001051e-05, 1.1111000000001148e-05, 1.1096999999994639e-05, 1.1097000000001578e-05, 1.1098000000001051e-05, 1.1111000000001148e-05, 1.1112000000000621e-05, 1.1069000000002438e-05, 1.1111000000001148e-05, 1.1097000000001578e-05, 1.1097000000001578e-05, 1.1055000000002868e-05, 1.1097000000001578e-05, 1.1111000000001148e-05, 1.1110999999994209e-05, 1.1097000000001578e-05, 1.1112000000000621e-05, 1.1041999999995833e-05, 1.1111000000001148e-05, 1.1139000000000288e-05, 1.1111999999993682e-05, 1.1111000000001148e-05, 1.1097000000001578e-05, 1.1097000000001578e-05, 1.1111000000001148e-05, 1.1097000000001578e-05, 1.1028000000003202e-05, 1.1139000000000288e-05, 1.1125000000000718e-05, 1.1084000000001482e-05, 1.1098000000001051e-05, 1.1139000000000288e-05, 1.1111000000001148e-05, 1.1042000000002772e-05, 1.1097000000001578e-05]</msg>
<status status="PASS" starttime="20201115 22:11:57.404" endtime="20201115 22:11:57.410"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:57.392" endtime="20201115 22:11:57.412"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:57.418" endtime="20201115 22:11:57.421"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:57.426" endtime="20201115 22:11:57.448"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:57.422" endtime="20201115 22:11:57.449"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:57.413" endtime="20201115 22:11:57.451"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:56.906" endtime="20201115 22:11:57.452"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:56.902" endtime="20201115 22:11:57.452"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:56.900" endtime="20201115 22:11:57.453"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:57.457" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:57.480" endtime="20201115 22:11:57.500"></status>
</kw>
<msg timestamp="20201115 22:11:57.502" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:57.477" endtime="20201115 22:11:57.502"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:57.508" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:57.504" endtime="20201115 22:11:57.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:57.510" endtime="20201115 22:11:57.514"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:57.470" endtime="20201115 22:11:57.515"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:57.464" endtime="20201115 22:11:57.517"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:57.533" endtime="20201115 22:11:57.867"></status>
</kw>
<msg timestamp="20201115 22:11:57.874" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047496972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047508889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:57.530" endtime="20201115 22:11:57.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:57.893" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047496972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047508889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:57.876" endtime="20201115 22:11:57.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:57.896" endtime="20201115 22:11:57.900"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:57.523" endtime="20201115 22:11:57.901"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:57.518" endtime="20201115 22:11:57.903"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:57.914" level="INFO">${RESULT} = [{'time': 0.047508889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1917000000000177e-05, 'source_diff': 1.1917000000000177e-05}, {'time': 0.047657319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:57.905" endtime="20201115 22:11:57.915"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:57.947" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:57.917" endtime="20201115 22:11:57.948"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:57.958" level="INFO">NAME: 00-overhead-11-set</msg>
<status status="PASS" starttime="20201115 22:11:57.956" endtime="20201115 22:11:57.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:57.964" level="INFO">VALUE: [1.1917000000000177e-05, 1.1901999999994195e-05, 1.1930000000000274e-05, 1.1944999999999317e-05, 1.1930999999999747e-05, 1.1917000000000177e-05, 1.1888999999994099e-05, 1.1903000000000608e-05, 1.1917000000000177e-05, 1.1930000000000274e-05, 1.1944999999999317e-05, 1.1888000000001564e-05, 1.1888000000001564e-05, 1.1889000000001038e-05, 1.1889000000001038e-05, 1.1902000000001134e-05, 1.1917000000000177e-05, 1.1861000000001898e-05, 1.1902000000001134e-05, 1.1916000000000704e-05, 1.1930000000000274e-05, 1.1971999999998983e-05, 1.1943999999999844e-05, 1.1889000000001038e-05, 1.1917000000000177e-05, 1.1916000000000704e-05, 1.1903000000000608e-05, 1.1887999999994625e-05, 1.1916000000000704e-05, 1.1903000000000608e-05, 1.1917000000000177e-05, 1.1862000000001371e-05, 1.1903000000000608e-05, 1.1833999999995293e-05, 1.1917000000000177e-05, 1.1834000000002232e-05, 1.1930000000000274e-05, 1.1903000000000608e-05, 1.1943999999999844e-05, 1.1930000000000274e-05, 1.1944999999999317e-05, 1.1930999999999747e-05, 1.1889000000001038e-05, 1.1916000000000704e-05, 1.1847000000002328e-05, 1.1917000000000177e-05, 1.1917000000000177e-05, 1.1875000000001468e-05, 1.1874999999994529e-05, 1.1930000000000274e-05]</msg>
<status status="PASS" starttime="20201115 22:11:57.961" endtime="20201115 22:11:57.966"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:57.949" endtime="20201115 22:11:57.967"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:57.974" endtime="20201115 22:11:57.977"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:57.982" endtime="20201115 22:11:58.004"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:57.978" endtime="20201115 22:11:58.006"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:57.969" endtime="20201115 22:11:58.007"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:57.458" endtime="20201115 22:11:58.008"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:57.455" endtime="20201115 22:11:58.009"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:57.453" endtime="20201115 22:11:58.009"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:58.014" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:58.037" endtime="20201115 22:11:58.059"></status>
</kw>
<msg timestamp="20201115 22:11:58.060" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:58.034" endtime="20201115 22:11:58.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:58.066" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:58.062" endtime="20201115 22:11:58.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:58.068" endtime="20201115 22:11:58.072"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:58.026" endtime="20201115 22:11:58.074"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:58.020" endtime="20201115 22:11:58.075"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:58.092" endtime="20201115 22:11:58.424"></status>
</kw>
<msg timestamp="20201115 22:11:58.431" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048300667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048313389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:58.088" endtime="20201115 22:11:58.431"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:58.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048300667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048313389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:58.433" endtime="20201115 22:11:58.451"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:58.452" endtime="20201115 22:11:58.456"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:58.081" endtime="20201115 22:11:58.458"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:58.077" endtime="20201115 22:11:58.459"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:58.470" level="INFO">${RESULT} = [{'time': 0.048313389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2721999999999734e-05, 'source_diff': 1.2721999999999734e-05}, {'time': 0.048483208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:58.461" endtime="20201115 22:11:58.470"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:58.501" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:58.472" endtime="20201115 22:11:58.501"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:58.512" level="INFO">NAME: 00-overhead-12-set</msg>
<status status="PASS" starttime="20201115 22:11:58.509" endtime="20201115 22:11:58.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:58.517" level="INFO">VALUE: [1.2721999999999734e-05, 1.2708000000000164e-05, 1.2721999999999734e-05, 1.2708999999999637e-05, 1.2694000000000594e-05, 1.2667000000000928e-05, 1.2694000000000594e-05, 1.2653000000001358e-05, 1.2681000000000497e-05, 1.2735999999999303e-05, 1.2749999999998873e-05, 1.2722999999999207e-05, 1.2722999999999207e-05, 1.2723000000006146e-05, 1.2749999999998873e-05, 1.2721999999999734e-05, 1.2735999999999303e-05, 1.2721999999999734e-05, 1.2708000000000164e-05, 1.2694000000000594e-05, 1.2722999999999207e-05, 1.2749999999998873e-05, 1.2721999999999734e-05, 1.2666000000001454e-05, 1.2708000000000164e-05, 1.2708000000000164e-05, 1.2735999999999303e-05, 1.2722999999999207e-05, 1.2735999999999303e-05, 1.2681000000000497e-05, 1.2708000000000164e-05, 1.2708000000000164e-05, 1.2721999999999734e-05, 1.2722999999999207e-05, 1.2708999999999637e-05, 1.2708999999999637e-05, 1.2708000000000164e-05, 1.2721999999999734e-05, 1.2721999999999734e-05, 1.2722999999999207e-05, 1.2708000000000164e-05, 1.2708000000000164e-05, 1.2721999999999734e-05, 1.2721999999999734e-05, 1.2721999999999734e-05, 1.2708000000000164e-05, 1.2708999999999637e-05, 1.2708000000000164e-05, 1.2721999999999734e-05, 1.2666999999993989e-05]</msg>
<status status="PASS" starttime="20201115 22:11:58.514" endtime="20201115 22:11:58.519"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:58.502" endtime="20201115 22:11:58.521"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:58.527" endtime="20201115 22:11:58.530"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:58.536" endtime="20201115 22:11:58.557"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:58.531" endtime="20201115 22:11:58.559"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:58.523" endtime="20201115 22:11:58.561"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:58.015" endtime="20201115 22:11:58.561"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:58.012" endtime="20201115 22:11:58.562"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:58.010" endtime="20201115 22:11:58.562"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:58.567" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:58.590" endtime="20201115 22:11:58.612"></status>
</kw>
<msg timestamp="20201115 22:11:58.613" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:58.587" endtime="20201115 22:11:58.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:58.620" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:58.616" endtime="20201115 22:11:58.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:58.622" endtime="20201115 22:11:58.626"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:58.580" endtime="20201115 22:11:58.627"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:58.574" endtime="20201115 22:11:58.629"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:58.653" endtime="20201115 22:11:58.987"></status>
</kw>
<msg timestamp="20201115 22:11:58.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048095958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048109486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:58.649" endtime="20201115 22:11:58.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:59.012" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048095958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048109486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:58.996" endtime="20201115 22:11:59.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:59.015" endtime="20201115 22:11:59.019"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:58.635" endtime="20201115 22:11:59.021"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:58.630" endtime="20201115 22:11:59.022"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:59.033" level="INFO">${RESULT} = [{'time': 0.048109486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3527999999998763e-05, 'source_diff': 1.3527999999998763e-05}, {'time': 0.048286486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:59.024" endtime="20201115 22:11:59.033"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:59.063" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:59.035" endtime="20201115 22:11:59.064"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:59.074" level="INFO">NAME: 00-overhead-13-set</msg>
<status status="PASS" starttime="20201115 22:11:59.072" endtime="20201115 22:11:59.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:59.080" level="INFO">VALUE: [1.3527999999998763e-05, 1.3528000000005702e-05, 1.3527999999998763e-05, 1.3486000000000054e-05, 1.3486000000000054e-05, 1.3499999999999623e-05, 1.3568999999998e-05, 1.3541999999998333e-05, 1.3499999999999623e-05, 1.3513999999999193e-05, 1.3486000000000054e-05, 1.3514000000006132e-05, 1.3527999999998763e-05, 1.3472000000000484e-05, 1.3513999999999193e-05, 1.3527999999998763e-05, 1.3527999999998763e-05, 1.352699999999929e-05, 1.358299999999757e-05, 1.351299999999972e-05, 1.3444000000001344e-05, 1.3528000000005702e-05, 1.3486000000000054e-05, 1.355499999999843e-05, 1.3527999999998763e-05, 1.354099999999886e-05, 1.3555999999997903e-05, 1.3583999999997043e-05, 1.3527999999998763e-05, 1.3499999999999623e-05, 1.3568999999998e-05, 1.3541999999998333e-05, 1.3499999999999623e-05, 1.3513999999999193e-05, 1.3513999999999193e-05, 1.3499999999999623e-05, 1.3499999999999623e-05, 1.3486000000000054e-05, 1.3499999999999623e-05, 1.3541999999998333e-05, 1.3513999999999193e-05, 1.3514000000006132e-05, 1.3528000000005702e-05, 1.3542000000005272e-05, 1.3527999999998763e-05, 1.3513999999999193e-05, 1.3499999999999623e-05, 1.3513999999999193e-05, 1.3513999999999193e-05, 1.3487000000006466e-05]</msg>
<status status="PASS" starttime="20201115 22:11:59.077" endtime="20201115 22:11:59.082"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:59.065" endtime="20201115 22:11:59.084"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:59.090" endtime="20201115 22:11:59.093"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:59.098" endtime="20201115 22:11:59.120"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:59.094" endtime="20201115 22:11:59.121"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:59.085" endtime="20201115 22:11:59.123"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:58.568" endtime="20201115 22:11:59.124"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:58.565" endtime="20201115 22:11:59.124"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:58.563" endtime="20201115 22:11:59.125"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:59.129" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:59.153" endtime="20201115 22:11:59.175"></status>
</kw>
<msg timestamp="20201115 22:11:59.176" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:59.149" endtime="20201115 22:11:59.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:59.183" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:59.179" endtime="20201115 22:11:59.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:59.186" endtime="20201115 22:11:59.189"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:59.142" endtime="20201115 22:11:59.191"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:59.136" endtime="20201115 22:11:59.193"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:59.209" endtime="20201115 22:11:59.542"></status>
</kw>
<msg timestamp="20201115 22:11:59.549" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048402556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048416903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:59.206" endtime="20201115 22:11:59.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:59.568" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048402556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048416903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:59.551" endtime="20201115 22:11:59.569"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:59.570" endtime="20201115 22:11:59.574"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:59.199" endtime="20201115 22:11:59.576"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:59.194" endtime="20201115 22:11:59.577"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:59.588" level="INFO">${RESULT} = [{'time': 0.048416903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.434699999999789e-05, 'source_diff': 1.434699999999789e-05}, {'time': 0.048605653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:59.579" endtime="20201115 22:11:59.588"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:59.621" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:59.590" endtime="20201115 22:11:59.621"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:59.632" level="INFO">NAME: 00-overhead-14-set</msg>
<status status="PASS" starttime="20201115 22:11:59.630" endtime="20201115 22:11:59.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:59.637" level="INFO">VALUE: [1.434699999999789e-05, 1.4319999999998223e-05, 1.434699999999789e-05, 1.431899999999875e-05, 1.4291999999999083e-05, 1.431899999999875e-05, 1.4319999999998223e-05, 1.434699999999789e-05, 1.4360999999997459e-05, 1.4333000000005258e-05, 1.434699999999789e-05, 1.4263999999999943e-05, 1.431899999999875e-05, 1.433299999999832e-05, 1.4291000000006548e-05, 1.434699999999789e-05, 1.431899999999875e-05, 1.4305999999998653e-05, 1.4319999999998223e-05, 1.4319000000005688e-05, 1.4319999999998223e-05, 1.4320000000005162e-05, 1.4333999999997793e-05, 1.4403000000003108e-05, 1.431899999999875e-05, 1.433299999999832e-05, 1.431899999999875e-05, 1.433299999999832e-05, 1.4277999999999513e-05, 1.4333000000005258e-05, 1.4347000000004828e-05, 1.433299999999832e-05, 1.431899999999875e-05, 1.4333999999997793e-05, 1.4291999999999083e-05, 1.4333999999997793e-05, 1.4361000000004398e-05, 1.4319999999998223e-05, 1.433299999999832e-05, 1.4347999999997363e-05, 1.4334000000004732e-05, 1.431899999999875e-05, 1.433299999999832e-05, 1.430499999999918e-05, 1.4333000000005258e-05, 1.4333999999997793e-05, 1.4333999999997793e-05, 1.4305999999998653e-05, 1.4263999999999943e-05, 1.4360999999997459e-05]</msg>
<status status="PASS" starttime="20201115 22:11:59.634" endtime="20201115 22:11:59.639"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:59.623" endtime="20201115 22:11:59.641"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:59.647" endtime="20201115 22:11:59.650"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:59.656" endtime="20201115 22:11:59.677"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:59.651" endtime="20201115 22:11:59.679"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:59.643" endtime="20201115 22:11:59.681"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:59.131" endtime="20201115 22:11:59.681"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:59.127" endtime="20201115 22:11:59.682"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:59.125" endtime="20201115 22:11:59.682"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:59.687" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:59.711" endtime="20201115 22:11:59.735"></status>
</kw>
<msg timestamp="20201115 22:11:59.736" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:59.708" endtime="20201115 22:11:59.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:59.742" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:59.738" endtime="20201115 22:11:59.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:59.744" endtime="20201115 22:11:59.748"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:59.700" endtime="20201115 22:11:59.750"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:59.694" endtime="20201115 22:11:59.751"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:59.768" endtime="20201115 22:12:00.102"></status>
</kw>
<msg timestamp="20201115 22:12:00.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048516833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048531972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:59.765" endtime="20201115 22:12:00.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:00.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048516833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048531972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:00.112" endtime="20201115 22:12:00.128"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:00.130" endtime="20201115 22:12:00.134"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:59.757" endtime="20201115 22:12:00.135"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:59.752" endtime="20201115 22:12:00.137"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:00.148" level="INFO">${RESULT} = [{'time': 0.048531972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5138999999997349e-05, 'source_diff': 1.5138999999997349e-05}, {'time': 0.048741, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:12:00.138" endtime="20201115 22:12:00.148"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:00.178" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:12:00.150" endtime="20201115 22:12:00.179"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:00.189" level="INFO">NAME: 00-overhead-15-set</msg>
<status status="PASS" starttime="20201115 22:12:00.187" endtime="20201115 22:12:00.190"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:00.195" level="INFO">VALUE: [1.5138999999997349e-05, 1.5138999999997349e-05, 1.5139000000004288e-05, 1.5124999999997779e-05, 1.5112000000004622e-05, 1.511099999999821e-05, 1.50689999999995e-05, 1.5138999999997349e-05, 1.511099999999821e-05, 1.5125000000004718e-05, 1.511099999999821e-05, 1.5152999999996919e-05, 1.5125000000004718e-05, 1.5138999999997349e-05, 1.5124999999997779e-05, 1.5167000000003428e-05, 1.5139000000004288e-05, 1.5111000000005148e-05, 1.5124999999997779e-05, 1.5153000000003858e-05, 1.509699999999864e-05, 1.5125000000004718e-05, 1.5138999999997349e-05, 1.5139000000004288e-05, 1.5166999999996489e-05, 1.5124999999997779e-05, 1.5138999999997349e-05, 1.5153000000003858e-05, 1.5151999999997445e-05, 1.5139000000004288e-05, 1.5139000000004288e-05, 1.5180999999996059e-05, 1.5125000000004718e-05, 1.5152999999996919e-05, 1.5138999999997349e-05, 1.5139000000004288e-05, 1.5124999999997779e-05, 1.5124999999997779e-05, 1.5112000000004622e-05, 1.5138999999997349e-05, 1.5139000000004288e-05, 1.5153000000003858e-05, 1.5151999999997445e-05, 1.5125000000004718e-05, 1.5138999999997349e-05, 1.5181000000002998e-05, 1.5166999999996489e-05, 1.5124999999997779e-05, 1.5139000000004288e-05, 1.5124999999997779e-05]</msg>
<status status="PASS" starttime="20201115 22:12:00.192" endtime="20201115 22:12:00.197"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:00.180" endtime="20201115 22:12:00.199"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:00.205" endtime="20201115 22:12:00.208"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:00.214" endtime="20201115 22:12:00.235"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:00.209" endtime="20201115 22:12:00.237"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:00.200" endtime="20201115 22:12:00.239"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:59.688" endtime="20201115 22:12:00.239"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:59.685" endtime="20201115 22:12:00.240"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:59.683" endtime="20201115 22:12:00.240"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:00.245" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:00.268" endtime="20201115 22:12:00.292"></status>
</kw>
<msg timestamp="20201115 22:12:00.293" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:00.265" endtime="20201115 22:12:00.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:00.299" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:00.295" endtime="20201115 22:12:00.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:00.301" endtime="20201115 22:12:00.305"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:00.257" endtime="20201115 22:12:00.306"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:00.252" endtime="20201115 22:12:00.308"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:00.325" endtime="20201115 22:12:00.659"></status>
</kw>
<msg timestamp="20201115 22:12:00.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047526903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047542861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:00.321" endtime="20201115 22:12:00.667"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:00.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047526903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047542861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:00.668" endtime="20201115 22:12:00.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:00.687" endtime="20201115 22:12:00.691"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:00.314" endtime="20201115 22:12:00.692"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:00.309" endtime="20201115 22:12:00.694"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:00.704" level="INFO">${RESULT} = [{'time': 0.047542861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5957999999996475e-05, 'source_diff': 1.5957999999996475e-05}, {'time': 0.047766917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:12:00.695" endtime="20201115 22:12:00.705"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:00.735" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:12:00.706" endtime="20201115 22:12:00.736"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:00.746" level="INFO">NAME: 00-overhead-16-set</msg>
<status status="PASS" starttime="20201115 22:12:00.744" endtime="20201115 22:12:00.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:00.752" level="INFO">VALUE: [1.5957999999996475e-05, 1.593099999999681e-05, 1.5945000000003318e-05, 1.5943999999996905e-05, 1.5929999999997335e-05, 1.5929999999997335e-05, 1.5944000000003844e-05, 1.5931000000003748e-05, 1.5943999999996905e-05, 1.5929999999997335e-05, 1.5931000000003748e-05, 1.5917000000004178e-05, 1.5957999999996475e-05, 1.594499999999638e-05, 1.5972000000002984e-05, 1.5889000000005038e-05, 1.593099999999681e-05, 1.593099999999681e-05, 1.593099999999681e-05, 1.5957999999996475e-05, 1.5943999999996905e-05, 1.5957999999996475e-05, 1.5929999999997335e-05, 1.590299999999767e-05, 1.5929999999997335e-05, 1.5929999999997335e-05, 1.593099999999681e-05, 1.5917000000004178e-05, 1.5916000000004704e-05, 1.58889999999981e-05, 1.595899999999595e-05, 1.5945000000003318e-05, 1.5901999999998195e-05, 1.5929999999997335e-05, 1.5931000000003748e-05, 1.591699999999724e-05, 1.5957999999996475e-05, 1.5917000000004178e-05, 1.5930000000004274e-05, 1.5957999999996475e-05, 1.5929999999997335e-05, 1.5929999999997335e-05, 1.5944000000003844e-05, 1.5958000000003414e-05, 1.594499999999638e-05, 1.5889000000005038e-05, 1.5931000000003748e-05, 1.5930000000004274e-05, 1.5944000000003844e-05, 1.5958000000003414e-05]</msg>
<status status="PASS" starttime="20201115 22:12:00.748" endtime="20201115 22:12:00.754"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:00.737" endtime="20201115 22:12:00.756"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:00.762" endtime="20201115 22:12:00.765"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:00.771" endtime="20201115 22:12:00.792"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:00.766" endtime="20201115 22:12:00.794"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:00.758" endtime="20201115 22:12:00.795"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:00.246" endtime="20201115 22:12:00.796"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:00.243" endtime="20201115 22:12:00.797"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:00.241" endtime="20201115 22:12:00.797"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:00.802" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:00.825" endtime="20201115 22:12:00.850"></status>
</kw>
<msg timestamp="20201115 22:12:00.851" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:00.821" endtime="20201115 22:12:00.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:00.858" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:00.854" endtime="20201115 22:12:00.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:00.860" endtime="20201115 22:12:00.864"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:00.814" endtime="20201115 22:12:00.865"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:00.808" endtime="20201115 22:12:00.867"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:00.884" endtime="20201115 22:12:01.210"></status>
</kw>
<msg timestamp="20201115 22:12:01.213" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047882194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047898944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:00.880" endtime="20201115 22:12:01.213"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:01.221" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047882194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047898944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:01.214" endtime="20201115 22:12:01.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:01.222" endtime="20201115 22:12:01.224"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:00.873" endtime="20201115 22:12:01.225"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:00.868" endtime="20201115 22:12:01.225"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:01.230" level="INFO">${RESULT} = [{'time': 0.047898944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6749999999995935e-05, 'source_diff': 1.6749999999995935e-05}, {'time': 0.048147819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:12:01.226" endtime="20201115 22:12:01.231"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:01.244" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:12:01.231" endtime="20201115 22:12:01.244"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:01.249" level="INFO">NAME: 00-overhead-17-set</msg>
<status status="PASS" starttime="20201115 22:12:01.248" endtime="20201115 22:12:01.250"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:01.253" level="INFO">VALUE: [1.6749999999995935e-05, 1.677700000000254e-05, 1.6736000000003304e-05, 1.6750000000002874e-05, 1.6750000000002874e-05, 1.6721999999996795e-05, 1.6750000000002874e-05, 1.6749999999995935e-05, 1.6750000000002874e-05, 1.6723000000003208e-05, 1.6680000000005024e-05, 1.6764000000002444e-05, 1.6763999999995505e-05, 1.6736000000003304e-05, 1.6750000000002874e-05, 1.6749999999995935e-05, 1.676300000000297e-05, 1.672299999999627e-05, 1.6736000000003304e-05, 1.6735999999996365e-05, 1.6750000000002874e-05, 1.6736000000003304e-05, 1.6735999999996365e-05, 1.673699999999584e-05, 1.6749999999995935e-05, 1.6735999999996365e-05, 1.6749999999995935e-05, 1.6722000000003734e-05, 1.6722000000003734e-05, 1.6764000000002444e-05, 1.6750000000002874e-05, 1.6750000000002874e-05, 1.6737000000002777e-05, 1.6749999999995935e-05, 1.6749999999995935e-05, 1.6707999999997225e-05, 1.6735999999996365e-05, 1.6736000000003304e-05, 1.67769999999956e-05, 1.6721999999996795e-05, 1.6736000000003304e-05, 1.6750000000002874e-05, 1.6750000000002874e-05, 1.6735999999996365e-05, 1.6736000000003304e-05, 1.6735999999996365e-05, 1.6750000000002874e-05, 1.6792000000001583e-05, 1.6750000000002874e-05, 1.6708000000004164e-05]</msg>
<status status="PASS" starttime="20201115 22:12:01.251" endtime="20201115 22:12:01.254"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:01.245" endtime="20201115 22:12:01.254"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:01.257" endtime="20201115 22:12:01.259"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:01.261" endtime="20201115 22:12:01.282"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:01.259" endtime="20201115 22:12:01.284"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:01.255" endtime="20201115 22:12:01.285"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:00.803" endtime="20201115 22:12:01.286"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:00.799" endtime="20201115 22:12:01.286"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:00.798" endtime="20201115 22:12:01.287"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:01.292" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:01.314" endtime="20201115 22:12:01.340"></status>
</kw>
<msg timestamp="20201115 22:12:01.341" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:01.311" endtime="20201115 22:12:01.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:01.347" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:01.343" endtime="20201115 22:12:01.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:01.349" endtime="20201115 22:12:01.353"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:01.304" endtime="20201115 22:12:01.355"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:01.298" endtime="20201115 22:12:01.356"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:01.373" endtime="20201115 22:12:01.704"></status>
</kw>
<msg timestamp="20201115 22:12:01.711" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047201819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047219389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:01.369" endtime="20201115 22:12:01.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:01.729" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047201819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047219389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:01.713" endtime="20201115 22:12:01.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:01.732" endtime="20201115 22:12:01.735"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:01.362" endtime="20201115 22:12:01.737"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:01.358" endtime="20201115 22:12:01.738"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:01.749" level="INFO">${RESULT} = [{'time': 0.047219389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7570000000001473e-05, 'source_diff': 1.7570000000001473e-05}, {'time': 0.047481556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:12:01.740" endtime="20201115 22:12:01.750"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:01.783" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:12:01.752" endtime="20201115 22:12:01.784"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:01.796" level="INFO">NAME: 00-overhead-18-set</msg>
<status status="PASS" starttime="20201115 22:12:01.794" endtime="20201115 22:12:01.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:01.803" level="INFO">VALUE: [1.7570000000001473e-05, 1.7528000000002764e-05, 1.754100000000286e-05, 1.754100000000286e-05, 1.7555999999994965e-05, 1.7542000000002334e-05, 1.752699999999635e-05, 1.7499999999996685e-05, 1.75969999999942e-05, 1.755500000000243e-05, 1.756899999999506e-05, 1.7542000000002334e-05, 1.755500000000243e-05, 1.7570000000001473e-05, 1.7513999999996255e-05, 1.7542000000002334e-05, 1.7556000000001903e-05, 1.7555999999994965e-05, 1.7527999999995825e-05, 1.7499999999996685e-05, 1.754100000000286e-05, 1.754099999999592e-05, 1.7556000000001903e-05, 1.755500000000243e-05, 1.7556000000001903e-05, 1.7513999999996255e-05, 1.7570000000001473e-05, 1.755500000000243e-05, 1.755500000000243e-05, 1.762500000000028e-05, 1.754099999999592e-05, 1.7513999999996255e-05, 1.7542000000002334e-05, 1.755500000000243e-05, 1.7569000000002e-05, 1.7569000000002e-05, 1.7556000000001903e-05, 1.7528000000002764e-05, 1.758299999999463e-05, 1.7556000000001903e-05, 1.7569999999994534e-05, 1.754099999999592e-05, 1.756899999999506e-05, 1.755500000000243e-05, 1.7514000000003194e-05, 1.7584000000001043e-05, 1.754100000000286e-05, 1.7542000000002334e-05, 1.755500000000243e-05, 1.755499999999549e-05]</msg>
<status status="PASS" starttime="20201115 22:12:01.799" endtime="20201115 22:12:01.805"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:01.786" endtime="20201115 22:12:01.807"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:01.815" endtime="20201115 22:12:01.818"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:01.825" endtime="20201115 22:12:01.848"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:01.820" endtime="20201115 22:12:01.850"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:01.810" endtime="20201115 22:12:01.852"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:01.293" endtime="20201115 22:12:01.853"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:01.289" endtime="20201115 22:12:01.854"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:01.288" endtime="20201115 22:12:01.855"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:01.863" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:01.891" endtime="20201115 22:12:01.920"></status>
</kw>
<msg timestamp="20201115 22:12:01.921" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:01.887" endtime="20201115 22:12:01.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:01.927" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:01.923" endtime="20201115 22:12:01.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:01.929" endtime="20201115 22:12:01.933"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:01.878" endtime="20201115 22:12:01.935"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:01.871" endtime="20201115 22:12:01.936"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:01.953" endtime="20201115 22:12:02.298"></status>
</kw>
<msg timestamp="20201115 22:12:02.306" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.060324319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.060342694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:01.949" endtime="20201115 22:12:02.306"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:02.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.060324319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.060342694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:02.308" endtime="20201115 22:12:02.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:02.327" endtime="20201115 22:12:02.331"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:01.942" endtime="20201115 22:12:02.332"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:01.937" endtime="20201115 22:12:02.334"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:02.344" level="INFO">${RESULT} = [{'time': 0.060342694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.837500000000103e-05, 'source_diff': 1.837500000000103e-05}, {'time': 0.060615819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:12:02.335" endtime="20201115 22:12:02.345"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:02.375" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:12:02.346" endtime="20201115 22:12:02.375"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:02.386" level="INFO">NAME: 00-overhead-19-set</msg>
<status status="PASS" starttime="20201115 22:12:02.383" endtime="20201115 22:12:02.386"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:02.391" level="INFO">VALUE: [1.837500000000103e-05, 1.834700000000189e-05, 1.834700000000189e-05, 1.836100000000146e-05, 1.836100000000146e-05, 1.83890000000006e-05, 1.8334000000001793e-05, 1.836100000000146e-05, 1.830499999999624e-05, 1.837500000000103e-05, 1.834700000000189e-05, 1.837500000000103e-05, 1.836099999999452e-05, 1.837500000000103e-05, 1.833299999999538e-05, 1.836099999999452e-05, 1.8348000000001363e-05, 1.83610000000084e-05, 1.8361999999993994e-05, 1.8305999999995715e-05, 1.843099999999931e-05, 1.831900000000275e-05, 1.834700000000189e-05, 1.834700000000189e-05, 1.83610000000084e-05, 1.8348000000001363e-05, 1.837500000000103e-05, 1.8417000000006678e-05, 1.834700000000189e-05, 1.834700000000189e-05, 1.838899999999366e-05, 1.837500000000103e-05, 1.8415999999993327e-05, 1.8346999999988012e-05, 1.834700000000189e-05, 1.836099999999452e-05, 1.836099999999452e-05, 1.837499999998715e-05, 1.831900000000275e-05, 1.8346999999988012e-05, 1.836099999999452e-05, 1.8306000000009592e-05, 1.836099999999452e-05, 1.834700000000189e-05, 1.83610000000084e-05, 1.8389000000007538e-05, 1.8305999999995715e-05, 1.836099999999452e-05, 1.834700000000189e-05, 1.83610000000084e-05]</msg>
<status status="PASS" starttime="20201115 22:12:02.388" endtime="20201115 22:12:02.393"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:02.376" endtime="20201115 22:12:02.395"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:02.401" endtime="20201115 22:12:02.404"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:02.409" endtime="20201115 22:12:02.431"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:02.405" endtime="20201115 22:12:02.433"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:02.396" endtime="20201115 22:12:02.434"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:01.864" endtime="20201115 22:12:02.435"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:01.859" endtime="20201115 22:12:02.436"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:01.857" endtime="20201115 22:12:02.436"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:02.441" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:02.464" endtime="20201115 22:12:02.492"></status>
</kw>
<msg timestamp="20201115 22:12:02.493" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:02.460" endtime="20201115 22:12:02.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:02.500" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:02.496" endtime="20201115 22:12:02.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:02.502" endtime="20201115 22:12:02.506"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:02.453" endtime="20201115 22:12:02.507"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:02.447" endtime="20201115 22:12:02.509"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:02.526" endtime="20201115 22:12:02.858"></status>
</kw>
<msg timestamp="20201115 22:12:02.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047754847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047774, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:12:02.522" endtime="20201115 22:12:02.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:02.884" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047754847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047774, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:12:02.868" endtime="20201115 22:12:02.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:02.886" endtime="20201115 22:12:02.890"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:02.515" endtime="20201115 22:12:02.892"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:02.510" endtime="20201115 22:12:02.893"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:02.904" level="INFO">${RESULT} = [{'time': 0.047774, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.915299999999398e-05, 'source_diff': 1.915299999999398e-05}, {'time': 0.048075611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 22:12:02.895" endtime="20201115 22:12:02.904"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:02.934" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:12:02.906" endtime="20201115 22:12:02.935"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:02.945" level="INFO">NAME: 00-overhead-20-set</msg>
<status status="PASS" starttime="20201115 22:12:02.943" endtime="20201115 22:12:02.946"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:02.952" level="INFO">VALUE: [1.915299999999398e-05, 1.915299999999398e-05, 1.912500000000178e-05, 1.912500000000178e-05, 1.916700000000049e-05, 1.912500000000178e-05, 1.913900000000135e-05, 1.913900000000135e-05, 1.9152000000001446e-05, 1.918100000000006e-05, 1.915300000000092e-05, 1.913900000000135e-05, 1.916700000000049e-05, 1.915300000000092e-05, 1.9138000000001876e-05, 1.923699999999834e-05, 1.918100000000006e-05, 1.9180000000000585e-05, 1.9152000000001446e-05, 1.916700000000049e-05, 1.916700000000049e-05, 1.9180000000000585e-05, 1.919499999999963e-05, 1.916700000000049e-05, 1.916700000000049e-05, 1.9166000000001016e-05, 1.9221999999999295e-05, 1.9235999999998865e-05, 1.916700000000049e-05, 1.912500000000178e-05, 1.915300000000092e-05, 1.9166000000001016e-05, 1.913900000000135e-05, 1.913900000000135e-05, 1.9166000000001016e-05, 1.913899999999441e-05, 1.918100000000006e-05, 1.9165999999994077e-05, 1.915300000000092e-05, 1.9138000000001876e-05, 1.9166000000001016e-05, 1.913900000000135e-05, 1.915300000000092e-05, 1.915300000000092e-05, 1.9166000000001016e-05, 1.915300000000092e-05, 1.916700000000049e-05, 1.918100000000006e-05, 1.913899999999441e-05, 1.916700000000049e-05]</msg>
<status status="PASS" starttime="20201115 22:12:02.947" endtime="20201115 22:12:02.953"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:02.936" endtime="20201115 22:12:02.954"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:02.961" endtime="20201115 22:12:02.963"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:02.969" endtime="20201115 22:12:02.990"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:02.965" endtime="20201115 22:12:02.992"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:02.956" endtime="20201115 22:12:02.994"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:02.442" endtime="20201115 22:12:02.994"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:02.439" endtime="20201115 22:12:02.995"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:02.437" endtime="20201115 22:12:02.995"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:03.000" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:03.023" endtime="20201115 22:12:03.052"></status>
</kw>
<msg timestamp="20201115 22:12:03.053" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:03.020" endtime="20201115 22:12:03.053"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:03.060" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:03.055" endtime="20201115 22:12:03.061"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:03.062" endtime="20201115 22:12:03.066"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:03.013" endtime="20201115 22:12:03.068"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:03.007" endtime="20201115 22:12:03.069"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:03.087" endtime="20201115 22:12:03.419"></status>
</kw>
<msg timestamp="20201115 22:12:03.426" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047829708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047849667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:03.083" endtime="20201115 22:12:03.427"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:03.445" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047829708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047849667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:03.429" endtime="20201115 22:12:03.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:03.447" endtime="20201115 22:12:03.451"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:03.076" endtime="20201115 22:12:03.453"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:03.071" endtime="20201115 22:12:03.454"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:03.465" level="INFO">${RESULT} = [{'time': 0.047849667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.995899999999995e-05, 'source_diff': 1.995899999999995e-05}, {'time': 0.048174097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:12:03.456" endtime="20201115 22:12:03.465"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:03.495" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:12:03.467" endtime="20201115 22:12:03.496"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:03.506" level="INFO">NAME: 00-overhead-21-set</msg>
<status status="PASS" starttime="20201115 22:12:03.504" endtime="20201115 22:12:03.507"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:03.513" level="INFO">VALUE: [1.995899999999995e-05, 1.9958000000000475e-05, 1.997299999999952e-05, 1.991700000000124e-05, 1.9985999999999615e-05, 1.9972000000000045e-05, 1.9999999999999185e-05, 1.9972000000000045e-05, 1.994499999999344e-05, 1.9972000000000045e-05, 1.9972000000000045e-05, 1.9972000000000045e-05, 1.994500000000038e-05, 1.9985999999999615e-05, 1.9986000000006554e-05, 2.0013999999998755e-05, 1.997299999999952e-05, 1.995899999999995e-05, 1.9943999999993967e-05, 1.9985999999999615e-05, 2.0027999999998325e-05, 1.9972000000000045e-05, 2.0028000000005264e-05, 1.9972000000000045e-05, 1.997299999999952e-05, 1.9972000000000045e-05, 1.9987000000006028e-05, 1.9985999999999615e-05, 1.995899999999995e-05, 1.994500000000038e-05, 1.9957999999993536e-05, 1.995899999999995e-05, 1.993100000000081e-05, 1.9958000000000475e-05, 2.0000000000006124e-05, 1.9972000000000045e-05, 1.9972000000000045e-05, 1.9958000000000475e-05, 1.9985999999999615e-05, 1.9999999999999185e-05, 1.9972000000000045e-05, 1.9985999999999615e-05, 1.9999999999999185e-05, 1.9958000000000475e-05, 1.995899999999995e-05, 1.9999999999999185e-05, 1.994500000000038e-05, 1.9915999999994827e-05, 1.997299999999258e-05, 1.9943999999993967e-05]</msg>
<status status="PASS" starttime="20201115 22:12:03.508" endtime="20201115 22:12:03.514"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:03.497" endtime="20201115 22:12:03.515"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:03.522" endtime="20201115 22:12:03.525"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:03.530" endtime="20201115 22:12:03.552"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:03.526" endtime="20201115 22:12:03.553"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:03.517" endtime="20201115 22:12:03.555"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:03.001" endtime="20201115 22:12:03.556"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:02.998" endtime="20201115 22:12:03.556"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:02.996" endtime="20201115 22:12:03.556"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:03.561" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:03.585" endtime="20201115 22:12:03.615"></status>
</kw>
<msg timestamp="20201115 22:12:03.616" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:03.582" endtime="20201115 22:12:03.616"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:03.622" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:03.618" endtime="20201115 22:12:03.623"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:03.624" endtime="20201115 22:12:03.628"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:03.574" endtime="20201115 22:12:03.630"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:03.568" endtime="20201115 22:12:03.631"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:03.648" endtime="20201115 22:12:03.980"></status>
</kw>
<msg timestamp="20201115 22:12:03.987" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048331931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048352778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:03.644" endtime="20201115 22:12:03.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:04.006" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048331931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048352778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:03.990" endtime="20201115 22:12:04.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:04.008" endtime="20201115 22:12:04.012"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:03.637" endtime="20201115 22:12:04.014"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:03.632" endtime="20201115 22:12:04.015"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:04.026" level="INFO">${RESULT} = [{'time': 0.048352778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.084699999999745e-05, 'source_diff': 2.084699999999745e-05}, {'time': 0.048685556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:12:04.017" endtime="20201115 22:12:04.026"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:04.059" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:12:04.028" endtime="20201115 22:12:04.059"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:04.070" level="INFO">NAME: 00-overhead-22-set</msg>
<status status="PASS" starttime="20201115 22:12:04.068" endtime="20201115 22:12:04.071"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:04.076" level="INFO">VALUE: [2.084699999999745e-05, 2.0763999999999505e-05, 2.0777999999999075e-05, 2.076300000000003e-05, 2.0763999999999505e-05, 2.0749999999999935e-05, 2.0763999999999505e-05, 2.0763999999999505e-05, 2.0749999999999935e-05, 2.0763999999999505e-05, 2.0749999999999935e-05, 2.0777999999999075e-05, 2.0777999999999075e-05, 2.07090000000007e-05, 2.081899999999831e-05, 2.0777999999999075e-05, 2.0763999999999505e-05, 2.0791999999998645e-05, 2.0763999999999505e-05, 2.080500000000568e-05, 2.079099999999917e-05, 2.0777999999999075e-05, 2.0777999999999075e-05, 2.0736000000000365e-05, 2.0777999999999075e-05, 2.0777999999999075e-05, 2.0777999999999075e-05, 2.0791999999998645e-05, 2.0763999999999505e-05, 2.0791999999998645e-05, 2.079099999999917e-05, 2.0805999999998215e-05, 2.0764000000006444e-05, 2.0763999999999505e-05, 2.0763999999999505e-05, 2.076300000000003e-05, 2.0763999999999505e-05, 2.0763999999999505e-05, 2.0791999999998645e-05, 2.0777999999999075e-05, 2.084699999999745e-05, 2.0763999999999505e-05, 2.0778000000012953e-05, 2.0791999999991706e-05, 2.0763999999992566e-05, 2.07769999999996e-05, 2.0763999999992566e-05, 2.0777999999999075e-05, 2.07769999999996e-05, 2.0763999999992566e-05]</msg>
<status status="PASS" starttime="20201115 22:12:04.072" endtime="20201115 22:12:04.077"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:04.061" endtime="20201115 22:12:04.079"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:04.085" endtime="20201115 22:12:04.088"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:04.103" endtime="20201115 22:12:04.125"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:04.089" endtime="20201115 22:12:04.126"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:04.081" endtime="20201115 22:12:04.128"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:03.562" endtime="20201115 22:12:04.129"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:03.559" endtime="20201115 22:12:04.129"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:03.557" endtime="20201115 22:12:04.130"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:04.135" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:04.158" endtime="20201115 22:12:04.188"></status>
</kw>
<msg timestamp="20201115 22:12:04.189" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:04.154" endtime="20201115 22:12:04.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:04.196" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:04.192" endtime="20201115 22:12:04.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:04.198" endtime="20201115 22:12:04.202"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:04.147" endtime="20201115 22:12:04.203"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:04.141" endtime="20201115 22:12:04.205"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:04.221" endtime="20201115 22:12:04.545"></status>
</kw>
<msg timestamp="20201115 22:12:04.548" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048415639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048437222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:04.218" endtime="20201115 22:12:04.549"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:04.556" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048415639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048437222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:04.549" endtime="20201115 22:12:04.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:04.558" endtime="20201115 22:12:04.559"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:04.211" endtime="20201115 22:12:04.560"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:04.206" endtime="20201115 22:12:04.561"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:04.566" level="INFO">${RESULT} = [{'time': 0.048437222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.158299999999863e-05, 'source_diff': 2.158299999999863e-05}, {'time': 0.048796111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:12:04.562" endtime="20201115 22:12:04.566"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:04.579" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:12:04.567" endtime="20201115 22:12:04.580"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:04.585" level="INFO">NAME: 00-overhead-23-set</msg>
<status status="PASS" starttime="20201115 22:12:04.584" endtime="20201115 22:12:04.585"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:04.588" level="INFO">VALUE: [2.158299999999863e-05, 2.1569000000006e-05, 2.15969999999982e-05, 2.156899999999906e-05, 2.1555999999998965e-05, 2.158299999999863e-05, 2.1584000000005044e-05, 2.158300000000557e-05, 2.1514000000000255e-05, 2.158299999999863e-05, 2.1555999999998965e-05, 2.161099999999777e-05, 2.155499999999949e-05, 2.1556000000005904e-05, 2.161099999999777e-05, 2.158299999999863e-05, 2.1514000000000255e-05, 2.155500000000643e-05, 2.158299999999863e-05, 2.1569000000006e-05, 2.15969999999982e-05, 2.158299999999863e-05, 2.161100000000471e-05, 2.158300000000557e-05, 2.1597999999997675e-05, 2.158299999999863e-05, 2.162499999999734e-05, 2.1527999999999825e-05, 2.154099999999992e-05, 2.1569999999998535e-05, 2.15969999999982e-05, 2.158299999999863e-05, 2.1569999999998535e-05, 2.1569999999998535e-05, 2.155499999999949e-05, 2.156899999999906e-05, 2.156899999999906e-05, 2.1583999999998105e-05, 2.1527999999999825e-05, 2.1569999999998535e-05, 2.1569999999998535e-05, 2.15969999999982e-05, 2.1584000000005044e-05, 2.1583999999991166e-05, 2.156899999999906e-05, 2.15969999999982e-05, 2.158300000000557e-05, 2.158300000000557e-05, 2.1610999999990832e-05, 2.1541999999999395e-05]</msg>
<status status="PASS" starttime="20201115 22:12:04.586" endtime="20201115 22:12:04.589"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:04.580" endtime="20201115 22:12:04.590"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:04.593" endtime="20201115 22:12:04.594"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:04.597" endtime="20201115 22:12:04.616"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:04.595" endtime="20201115 22:12:04.617"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:04.591" endtime="20201115 22:12:04.618"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:04.136" endtime="20201115 22:12:04.618"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:04.132" endtime="20201115 22:12:04.618"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:04.131" endtime="20201115 22:12:04.618"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:04.621" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:04.632" endtime="20201115 22:12:04.662"></status>
</kw>
<msg timestamp="20201115 22:12:04.662" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:04.630" endtime="20201115 22:12:04.662"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:04.665" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:04.663" endtime="20201115 22:12:04.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:04.666" endtime="20201115 22:12:04.668"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:04.627" endtime="20201115 22:12:04.669"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:04.624" endtime="20201115 22:12:04.669"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:04.677" endtime="20201115 22:12:04.987"></status>
</kw>
<msg timestamp="20201115 22:12:04.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027761042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027783417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:04.676" endtime="20201115 22:12:04.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:05.012" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027761042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027783417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:04.996" endtime="20201115 22:12:05.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:05.015" endtime="20201115 22:12:05.018"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:04.672" endtime="20201115 22:12:05.020"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:04.670" endtime="20201115 22:12:05.021"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:05.032" level="INFO">${RESULT} = [{'time': 0.027783417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.237500000000156e-05, 'source_diff': 2.237500000000156e-05}, {'time': 0.028170903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:12:05.023" endtime="20201115 22:12:05.032"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:05.063" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:12:05.034" endtime="20201115 22:12:05.063"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:05.074" level="INFO">NAME: 00-overhead-24-set</msg>
<status status="PASS" starttime="20201115 22:12:05.071" endtime="20201115 22:12:05.074"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:05.081" level="INFO">VALUE: [2.237500000000156e-05, 2.238900000000113e-05, 2.241700000000027e-05, 2.238900000000113e-05, 2.2361999999997995e-05, 2.2457999999999506e-05, 2.237500000000156e-05, 2.2305999999999715e-05, 2.237500000000156e-05, 2.2401999999997757e-05, 2.237499999999809e-05, 2.238899999999766e-05, 2.238899999999766e-05, 2.238899999999766e-05, 2.237499999999809e-05, 2.237499999999809e-05, 2.238899999999766e-05, 2.237499999999809e-05, 2.23890000000046e-05, 2.240299999999723e-05, 2.240299999999723e-05, 2.238899999999766e-05, 2.238899999999766e-05, 2.240299999999723e-05, 2.238899999999766e-05, 2.240299999999723e-05, 2.236100000000546e-05, 2.237500000000503e-05, 2.237499999999809e-05, 2.238899999999766e-05, 2.236100000000546e-05, 2.237499999999809e-05, 2.237499999999809e-05, 2.238899999999766e-05, 2.240300000000417e-05, 2.237500000000503e-05, 2.23890000000046e-05, 2.2458000000002976e-05, 2.236099999999852e-05, 2.23890000000046e-05, 2.233299999999938e-05, 2.234699999999895e-05, 2.240299999999723e-05, 2.240300000000417e-05, 2.237499999999809e-05, 2.238899999999766e-05, 2.240299999999723e-05, 2.237499999999809e-05, 2.2430000000003836e-05, 2.233299999999938e-05]</msg>
<status status="PASS" starttime="20201115 22:12:05.076" endtime="20201115 22:12:05.082"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:05.065" endtime="20201115 22:12:05.084"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:05.090" endtime="20201115 22:12:05.093"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:05.098" endtime="20201115 22:12:05.120"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:05.094" endtime="20201115 22:12:05.122"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:05.085" endtime="20201115 22:12:05.123"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:04.621" endtime="20201115 22:12:05.124"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:04.620" endtime="20201115 22:12:05.124"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:04.619" endtime="20201115 22:12:05.125"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:05.129" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:05.154" endtime="20201115 22:12:05.187"></status>
</kw>
<msg timestamp="20201115 22:12:05.188" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:05.150" endtime="20201115 22:12:05.188"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:05.194" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:05.190" endtime="20201115 22:12:05.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:05.196" endtime="20201115 22:12:05.200"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:05.143" endtime="20201115 22:12:05.202"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:05.136" endtime="20201115 22:12:05.203"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:05.220" endtime="20201115 22:12:05.553"></status>
</kw>
<msg timestamp="20201115 22:12:05.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049276958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049300097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:05.217" endtime="20201115 22:12:05.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:05.578" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049276958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049300097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:05.562" endtime="20201115 22:12:05.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:05.581" endtime="20201115 22:12:05.585"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:05.209" endtime="20201115 22:12:05.586"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:05.205" endtime="20201115 22:12:05.588"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:05.599" level="INFO">${RESULT} = [{'time': 0.049300097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.313899999999841e-05, 'source_diff': 2.313899999999841e-05}, {'time': 0.049700736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:12:05.590" endtime="20201115 22:12:05.599"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:05.631" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:12:05.602" endtime="20201115 22:12:05.631"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:05.642" level="INFO">NAME: 00-overhead-25-set</msg>
<status status="PASS" starttime="20201115 22:12:05.640" endtime="20201115 22:12:05.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:05.649" level="INFO">VALUE: [2.313899999999841e-05, 2.3264000000002005e-05, 2.3207999999996787e-05, 2.32090000000032e-05, 2.3179999999997647e-05, 2.3193999999997217e-05, 2.318099999999712e-05, 2.319500000000363e-05, 2.318100000000406e-05, 2.313899999999841e-05, 2.3207999999996787e-05, 2.318099999999712e-05, 2.316700000000449e-05, 2.318099999999712e-05, 2.32090000000032e-05, 2.3193999999997217e-05, 2.318100000000406e-05, 2.3207999999996787e-05, 2.3179999999997647e-05, 2.3222000000003296e-05, 2.316699999999755e-05, 2.319500000000363e-05, 2.3193999999997217e-05, 2.319499999999669e-05, 2.3194000000004156e-05, 2.318099999999712e-05, 2.319500000000363e-05, 2.3221999999996357e-05, 2.316699999999755e-05, 2.3249999999995496e-05, 2.3207999999996787e-05, 2.3193999999997217e-05, 2.3207999999996787e-05, 2.318099999999712e-05, 2.3222000000003296e-05, 2.318099999999712e-05, 2.319500000000363e-05, 2.3193999999990278e-05, 2.318099999999712e-05, 2.319500000000363e-05, 2.312499999999884e-05, 2.319500000000363e-05, 2.3194000000004156e-05, 2.3179999999997647e-05, 2.319499999998975e-05, 2.3179999999997647e-05, 2.316700000000449e-05, 2.318099999999712e-05, 2.319500000000363e-05, 2.3166000000005016e-05]</msg>
<status status="PASS" starttime="20201115 22:12:05.645" endtime="20201115 22:12:05.650"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:05.633" endtime="20201115 22:12:05.652"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:05.658" endtime="20201115 22:12:05.661"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:05.667" endtime="20201115 22:12:05.688"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:05.663" endtime="20201115 22:12:05.690"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:05.654" endtime="20201115 22:12:05.692"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:05.131" endtime="20201115 22:12:05.692"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:05.127" endtime="20201115 22:12:05.693"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:05.125" endtime="20201115 22:12:05.693"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.008" endtime="20201115 22:12:05.693"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="teardown">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:05.704" endtime="20201115 22:12:05.725"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:05.699" endtime="20201115 22:12:05.727"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:05.697" endtime="20201115 22:12:05.728"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:11:51.880" endtime="20201115 22:12:05.729" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Remove List">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:05.747" endtime="20201115 22:12:05.768"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:05.743" endtime="20201115 22:12:05.770"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:05.803" endtime="20201115 22:12:05.822"></status>
</kw>
<msg timestamp="20201115 22:12:05.823" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:05.800" endtime="20201115 22:12:05.823"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:05.829" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:05.825" endtime="20201115 22:12:05.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:12:05.836" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:12:05.831" endtime="20201115 22:12:05.836"></status>
</kw>
<status status="FAIL" starttime="20201115 22:12:05.793" endtime="20201115 22:12:05.839"></status>
</kw>
<status status="FAIL" starttime="20201115 22:12:05.786" endtime="20201115 22:12:05.841"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:05.783" endtime="20201115 22:12:05.841"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:12:05.849" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:12:05.848" endtime="20201115 22:12:05.850"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:05.843" endtime="20201115 22:12:05.850"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:05.782" endtime="20201115 22:12:05.851"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:05.780" endtime="20201115 22:12:05.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:05.853" endtime="20201115 22:12:05.856"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:05.776" endtime="20201115 22:12:05.858"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:05.772" endtime="20201115 22:12:05.859"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:05.740" endtime="20201115 22:12:05.860"></status>
</kw>
<kw name="${n} IN RANGE [ 25 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:05.867" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:05.892" endtime="20201115 22:12:05.909"></status>
</kw>
<msg timestamp="20201115 22:12:05.910" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:05.889" endtime="20201115 22:12:05.911"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:05.916" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:05.912" endtime="20201115 22:12:05.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:05.919" endtime="20201115 22:12:05.922"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:05.882" endtime="20201115 22:12:05.924"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:05.876" endtime="20201115 22:12:05.925"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:05.942" endtime="20201115 22:12:06.285"></status>
</kw>
<msg timestamp="20201115 22:12:06.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.139307278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.139308722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:05.939" endtime="20201115 22:12:06.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:06.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.139307278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.139308722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:06.295" endtime="20201115 22:12:06.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:06.314" endtime="20201115 22:12:06.318"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:05.931" endtime="20201115 22:12:06.319"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:05.927" endtime="20201115 22:12:06.321"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:06.332" level="INFO">${RESULT} = [{'time': 0.139308722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4439999999893427e-06, 'source_diff': 1.4439999999893427e-06}, {'time': 0.139373583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:12:06.323" endtime="20201115 22:12:06.332"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:06.364" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:12:06.334" endtime="20201115 22:12:06.365"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:06.376" level="INFO">NAME: 00-overhead-1-remove</msg>
<status status="PASS" starttime="20201115 22:12:06.374" endtime="20201115 22:12:06.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:06.381" level="INFO">VALUE: [1.4439999999893427e-06, 1.4299999999967117e-06, 1.4309999999961853e-06, 1.4439999999893427e-06, 1.4449999999888163e-06, 1.486000000022747e-06, 1.4439999999893427e-06, 1.4309999999961853e-06, 1.4299999999967117e-06, 1.4309999999961853e-06, 1.4440000000170983e-06, 1.4299999999967117e-06, 1.4309999999961853e-06, 1.3610000000052747e-06, 1.4440000000170983e-06, 1.4449999999888163e-06, 1.4439999999893427e-06, 1.4300000000244673e-06, 1.4449999999888163e-06, 1.4439999999893427e-06, 1.4299999999967117e-06, 1.4299999999967117e-06, 1.4439999999893427e-06, 1.4439999999893427e-06, 1.445000000016572e-06, 1.4440000000170983e-06, 1.4439999999893427e-06, 1.4580000000097293e-06, 1.4439999999893427e-06, 1.500000000015378e-06, 1.4439999999893427e-06, 1.4309999999961853e-06, 1.445000000016572e-06, 1.4309999999961853e-06, 1.4580000000097293e-06, 1.4439999999893427e-06, 1.4439999999893427e-06, 1.4440000000170983e-06, 1.4439999999893427e-06, 1.3610000000052747e-06, 1.4579999999819737e-06, 1.4449999999888163e-06, 1.500000000015378e-06, 1.4580000000097293e-06, 1.500000000015378e-06, 1.4439999999893427e-06, 1.4449999999888163e-06, 1.4309999999961853e-06, 1.4299999999967117e-06, 1.473000000001834e-06]</msg>
<status status="PASS" starttime="20201115 22:12:06.378" endtime="20201115 22:12:06.382"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:06.366" endtime="20201115 22:12:06.384"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:06.390" endtime="20201115 22:12:06.393"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:06.398" endtime="20201115 22:12:06.420"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:06.394" endtime="20201115 22:12:06.422"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:06.385" endtime="20201115 22:12:06.423"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:05.868" endtime="20201115 22:12:06.424"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:05.865" endtime="20201115 22:12:06.424"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:05.863" endtime="20201115 22:12:06.425"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:06.429" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:06.454" endtime="20201115 22:12:06.471"></status>
</kw>
<msg timestamp="20201115 22:12:06.472" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:06.451" endtime="20201115 22:12:06.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:06.478" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:06.474" endtime="20201115 22:12:06.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:06.480" endtime="20201115 22:12:06.484"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:06.442" endtime="20201115 22:12:06.486"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:06.436" endtime="20201115 22:12:06.487"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:06.504" endtime="20201115 22:12:06.836"></status>
</kw>
<msg timestamp="20201115 22:12:06.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049192139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049193889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:06.500" endtime="20201115 22:12:06.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:06.862" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049192139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049193889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:06.845" endtime="20201115 22:12:06.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:06.864" endtime="20201115 22:12:06.868"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:06.493" endtime="20201115 22:12:06.870"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:06.488" endtime="20201115 22:12:06.871"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:06.883" level="INFO">${RESULT} = [{'time': 0.049193889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7499999999948113e-06, 'source_diff': 1.7499999999948113e-06}, {'time': 0.049266528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:12:06.874" endtime="20201115 22:12:06.883"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:06.913" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:12:06.885" endtime="20201115 22:12:06.914"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:06.924" level="INFO">NAME: 00-overhead-2-remove</msg>
<status status="PASS" starttime="20201115 22:12:06.922" endtime="20201115 22:12:06.925"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:06.930" level="INFO">VALUE: [1.7499999999948113e-06, 1.7359999999952413e-06, 1.7499999999948113e-06, 1.7219999999956714e-06, 1.7360000000021802e-06, 1.7359999999952413e-06, 1.7500000000017502e-06, 1.7360000000021802e-06, 1.777999999993951e-06, 1.7500000000017502e-06, 1.7359999999952413e-06, 1.7220000000026103e-06, 1.7500000000017502e-06, 1.7220000000026103e-06, 1.7499999999948113e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7910000000009862e-06, 1.736999999994715e-06, 1.7219999999956714e-06, 1.7499999999948113e-06, 1.723000000002084e-06, 1.722999999995145e-06, 1.7499999999948113e-06, 1.7500000000017502e-06, 1.7220000000026103e-06, 1.7500000000017502e-06, 1.7500000000017502e-06, 1.723000000002084e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7500000000017502e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7219999999956714e-06, 1.7360000000021802e-06, 1.6669999999968654e-06, 1.7219999999956714e-06, 1.7360000000021802e-06, 1.7910000000009862e-06, 1.7079999999961015e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7079999999961015e-06, 1.7219999999956714e-06, 1.7220000000026103e-06, 1.7500000000017502e-06, 1.7359999999952413e-06, 1.7359999999952413e-06]</msg>
<status status="PASS" starttime="20201115 22:12:06.927" endtime="20201115 22:12:06.931"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:06.915" endtime="20201115 22:12:06.932"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:06.939" endtime="20201115 22:12:06.941"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:06.947" endtime="20201115 22:12:06.968"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:06.943" endtime="20201115 22:12:06.970"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:06.934" endtime="20201115 22:12:06.972"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:06.431" endtime="20201115 22:12:06.972"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:06.427" endtime="20201115 22:12:06.973"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:06.425" endtime="20201115 22:12:06.973"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:06.978" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:07.001" endtime="20201115 22:12:07.020"></status>
</kw>
<msg timestamp="20201115 22:12:07.021" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:06.998" endtime="20201115 22:12:07.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:07.027" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:07.023" endtime="20201115 22:12:07.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:07.029" endtime="20201115 22:12:07.033"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:06.991" endtime="20201115 22:12:07.035"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:06.985" endtime="20201115 22:12:07.036"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:07.055" endtime="20201115 22:12:07.388"></status>
</kw>
<msg timestamp="20201115 22:12:07.395" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047979208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047981236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:07.051" endtime="20201115 22:12:07.396"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:07.414" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047979208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047981236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:07.398" endtime="20201115 22:12:07.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:07.417" endtime="20201115 22:12:07.421"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:07.042" endtime="20201115 22:12:07.422"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:07.037" endtime="20201115 22:12:07.424"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:07.434" level="INFO">${RESULT} = [{'time': 0.047981236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.027999999994201e-06, 'source_diff': 2.027999999994201e-06}, {'time': 0.04805775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:12:07.425" endtime="20201115 22:12:07.435"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:07.464" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:12:07.436" endtime="20201115 22:12:07.465"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:07.475" level="INFO">NAME: 00-overhead-3-remove</msg>
<status status="PASS" starttime="20201115 22:12:07.473" endtime="20201115 22:12:07.476"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:07.481" level="INFO">VALUE: [2.027999999994201e-06, 2.1110000000060247e-06, 2.069000000000376e-06, 2.02800000000114e-06, 2.027999999994201e-06, 2.02800000000114e-06, 1.9860000000024303e-06, 2.000000000002e-06, 2.02800000000114e-06, 2.01400000000157e-06, 2.01400000000157e-06, 1.9719999999959215e-06, 2.027999999994201e-06, 1.9860000000024303e-06, 2.01400000000157e-06, 2.02800000000114e-06, 2.02800000000114e-06, 2.02800000000114e-06, 2.04200000000071e-06, 2.0699999999998497e-06, 1.9579999999963515e-06, 2.04200000000071e-06, 2.0409999999942974e-06, 2.082999999999946e-06, 2.01400000000157e-06, 2.055000000000806e-06, 2.0130000000020964e-06, 1.9860000000024303e-06, 2.02800000000114e-06, 2.0270000000016664e-06, 2.069000000000376e-06, 2.0270000000016664e-06, 2.02800000000114e-06, 2.04200000000071e-06, 2.0410000000012363e-06, 1.9999999999950613e-06, 2.0410000000012363e-06, 2.0410000000012363e-06, 2.02800000000114e-06, 2.01400000000157e-06, 2.01400000000157e-06, 2.110999999999086e-06, 2.0130000000020964e-06, 2.01400000000157e-06, 2.0270000000016664e-06, 2.0130000000020964e-06, 2.055000000000806e-06, 2.04200000000071e-06, 2.02800000000114e-06, 2.0270000000016664e-06]</msg>
<status status="PASS" starttime="20201115 22:12:07.478" endtime="20201115 22:12:07.482"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:07.466" endtime="20201115 22:12:07.483"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:07.489" endtime="20201115 22:12:07.492"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:07.498" endtime="20201115 22:12:07.519"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:07.493" endtime="20201115 22:12:07.521"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:07.485" endtime="20201115 22:12:07.522"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:06.979" endtime="20201115 22:12:07.523"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:06.976" endtime="20201115 22:12:07.524"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:06.974" endtime="20201115 22:12:07.524"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:07.529" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:07.552" endtime="20201115 22:12:07.569"></status>
</kw>
<msg timestamp="20201115 22:12:07.570" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:07.548" endtime="20201115 22:12:07.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:07.577" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:07.573" endtime="20201115 22:12:07.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:07.579" endtime="20201115 22:12:07.583"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:07.541" endtime="20201115 22:12:07.584"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:07.536" endtime="20201115 22:12:07.586"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:07.603" endtime="20201115 22:12:07.937"></status>
</kw>
<msg timestamp="20201115 22:12:07.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047985736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047988056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:07.600" endtime="20201115 22:12:07.945"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:07.963" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047985736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047988056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:07.947" endtime="20201115 22:12:07.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:07.965" endtime="20201115 22:12:07.969"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:07.593" endtime="20201115 22:12:07.971"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:07.588" endtime="20201115 22:12:07.972"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:07.983" level="INFO">${RESULT} = [{'time': 0.047988056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3200000000000998e-06, 'source_diff': 2.3200000000000998e-06}, {'time': 0.048074069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:12:07.974" endtime="20201115 22:12:07.983"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:08.013" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:12:07.985" endtime="20201115 22:12:08.014"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:08.024" level="INFO">NAME: 00-overhead-4-remove</msg>
<status status="PASS" starttime="20201115 22:12:08.022" endtime="20201115 22:12:08.025"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:08.029" level="INFO">VALUE: [2.3200000000000998e-06, 2.333000000000196e-06, 2.333000000000196e-06, 2.3339999999996697e-06, 2.319000000000626e-06, 2.333000000000196e-06, 2.319000000000626e-06, 2.346999999999766e-06, 2.305000000001056e-06, 2.360999999999336e-06, 2.319000000000626e-06, 2.319000000000626e-06, 2.319000000000626e-06, 2.3200000000000998e-06, 2.3339999999996697e-06, 2.3339999999996697e-06, 2.332999999993257e-06, 2.3189999999936872e-06, 2.27800000000139e-06, 2.3189999999936872e-06, 2.333000000000196e-06, 2.305000000001056e-06, 2.319000000000626e-06, 2.319000000000626e-06, 2.319000000000626e-06, 2.29200000000096e-06, 2.333000000000196e-06, 2.3200000000000998e-06, 2.3200000000000998e-06, 2.3189999999936872e-06, 2.3200000000000998e-06, 2.333000000000196e-06, 2.333000000000196e-06, 2.333000000000196e-06, 2.319000000000626e-06, 2.3200000000000998e-06, 2.291999999994021e-06, 2.333000000000196e-06, 2.30600000000053e-06, 2.319000000000626e-06, 2.3339999999996697e-06, 2.3339999999996697e-06, 2.29200000000096e-06, 2.333000000000196e-06, 2.3189999999936872e-06, 2.27800000000139e-06, 2.319000000000626e-06, 2.305000000001056e-06, 2.319000000000626e-06, 2.319000000000626e-06]</msg>
<status status="PASS" starttime="20201115 22:12:08.026" endtime="20201115 22:12:08.030"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:08.015" endtime="20201115 22:12:08.032"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:08.038" endtime="20201115 22:12:08.041"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:08.046" endtime="20201115 22:12:08.068"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:08.042" endtime="20201115 22:12:08.069"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:08.034" endtime="20201115 22:12:08.071"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:07.530" endtime="20201115 22:12:08.072"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:07.527" endtime="20201115 22:12:08.072"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:07.525" endtime="20201115 22:12:08.073"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:08.077" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:08.100" endtime="20201115 22:12:08.117"></status>
</kw>
<msg timestamp="20201115 22:12:08.119" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:08.097" endtime="20201115 22:12:08.120"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:08.126" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:08.122" endtime="20201115 22:12:08.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:08.128" endtime="20201115 22:12:08.132"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:08.090" endtime="20201115 22:12:08.133"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:08.084" endtime="20201115 22:12:08.135"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:08.151" endtime="20201115 22:12:08.486"></status>
</kw>
<msg timestamp="20201115 22:12:08.494" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047603958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047606569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:08.148" endtime="20201115 22:12:08.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:08.512" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047603958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047606569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:08.496" endtime="20201115 22:12:08.513"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:08.515" endtime="20201115 22:12:08.519"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:08.141" endtime="20201115 22:12:08.520"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:08.136" endtime="20201115 22:12:08.522"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:08.532" level="INFO">${RESULT} = [{'time': 0.047606569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.610999999999586e-06, 'source_diff': 2.610999999999586e-06}, {'time': 0.047705028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:12:08.523" endtime="20201115 22:12:08.533"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:08.565" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:12:08.534" endtime="20201115 22:12:08.565"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:08.576" level="INFO">NAME: 00-overhead-5-remove</msg>
<status status="PASS" starttime="20201115 22:12:08.574" endtime="20201115 22:12:08.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:08.581" level="INFO">VALUE: [2.610999999999586e-06, 2.596999999993077e-06, 2.597000000000016e-06, 2.6249999999991558e-06, 2.610999999999586e-06, 2.597000000000016e-06, 2.52800000000164e-06, 2.610999999999586e-06, 2.6249999999991558e-06, 2.610999999999586e-06, 2.597000000000016e-06, 2.610999999999586e-06, 2.6110000000065248e-06, 2.6249999999991558e-06, 2.610999999999586e-06, 2.610999999999586e-06, 2.610999999999586e-06, 2.597000000000016e-06, 2.55600000000078e-06, 2.5979999999994896e-06, 2.6249999999991558e-06, 2.6810000000043743e-06, 2.6119999999990595e-06, 2.610999999999586e-06, 2.6120000000059984e-06, 2.6249999999991558e-06, 2.610999999999586e-06, 2.6249999999991558e-06, 2.597000000000016e-06, 2.597000000000016e-06, 2.610999999999586e-06, 2.610999999999586e-06, 2.665999999998392e-06, 2.6530000000052345e-06, 2.6249999999991558e-06, 2.5839999999999197e-06, 2.583000000000446e-06, 2.6249999999991558e-06, 2.610999999999586e-06, 2.6249999999991558e-06, 2.6249999999991558e-06, 2.6389999999987257e-06, 2.5839999999999197e-06, 2.610999999999586e-06, 2.665999999998392e-06, 2.610999999999586e-06, 2.610999999999586e-06, 2.6119999999990595e-06, 2.610999999999586e-06, 2.610999999999586e-06]</msg>
<status status="PASS" starttime="20201115 22:12:08.578" endtime="20201115 22:12:08.582"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:08.567" endtime="20201115 22:12:08.584"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:08.590" endtime="20201115 22:12:08.593"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:08.598" endtime="20201115 22:12:08.620"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:08.594" endtime="20201115 22:12:08.622"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:08.586" endtime="20201115 22:12:08.623"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:08.079" endtime="20201115 22:12:08.624"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:08.075" endtime="20201115 22:12:08.624"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:08.074" endtime="20201115 22:12:08.625"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:08.630" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:08.653" endtime="20201115 22:12:08.671"></status>
</kw>
<msg timestamp="20201115 22:12:08.672" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:08.650" endtime="20201115 22:12:08.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:08.678" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:08.675" endtime="20201115 22:12:08.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:08.681" endtime="20201115 22:12:08.685"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:08.643" endtime="20201115 22:12:08.686"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:08.637" endtime="20201115 22:12:08.688"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:08.704" endtime="20201115 22:12:09.037"></status>
</kw>
<msg timestamp="20201115 22:12:09.045" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048512833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048515736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:08.701" endtime="20201115 22:12:09.045"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:09.063" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048512833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048515736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:09.047" endtime="20201115 22:12:09.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:09.066" endtime="20201115 22:12:09.070"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:08.694" endtime="20201115 22:12:09.071"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:08.689" endtime="20201115 22:12:09.072"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:09.077" level="INFO">${RESULT} = [{'time': 0.048515736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9029999999985456e-06, 'source_diff': 2.9029999999985456e-06}, {'time': 0.048615014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:12:09.073" endtime="20201115 22:12:09.077"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:09.090" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:12:09.078" endtime="20201115 22:12:09.090"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:09.096" level="INFO">NAME: 00-overhead-6-remove</msg>
<status status="PASS" starttime="20201115 22:12:09.094" endtime="20201115 22:12:09.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:09.098" level="INFO">VALUE: [2.9029999999985456e-06, 2.9309999999976855e-06, 2.874999999999406e-06, 2.9439999999977817e-06, 2.8890000000059146e-06, 2.9169999999981155e-06, 2.901999999999072e-06, 2.9169999999981155e-06, 2.9029999999985456e-06, 2.847000000000266e-06, 2.902000000006011e-06, 2.929999999998212e-06, 2.887999999999502e-06, 2.9029999999985456e-06, 2.9029999999985456e-06, 2.901999999999072e-06, 2.8479999999997396e-06, 2.901999999999072e-06, 2.9029999999985456e-06, 2.9029999999985456e-06, 2.9029999999985456e-06, 2.929999999998212e-06, 2.887999999999502e-06, 2.860999999999836e-06, 2.8889999999989757e-06, 2.9030000000054845e-06, 2.9029999999985456e-06, 2.874999999999406e-06, 2.8890000000059146e-06, 2.929999999998212e-06, 2.8889999999989757e-06, 2.9030000000054845e-06, 2.9030000000054845e-06, 2.9169999999981155e-06, 2.901999999999072e-06, 2.846999999993327e-06, 2.9450000000041943e-06, 2.8889999999989757e-06, 2.915999999998642e-06, 2.8889999999989757e-06, 2.902000000006011e-06, 2.8200000000006e-06, 2.9169999999981155e-06, 2.9169999999981155e-06, 2.9030000000054845e-06, 2.9029999999985456e-06, 2.9029999999985456e-06, 2.9030000000054845e-06, 2.9029999999985456e-06, 2.9579999999973516e-06]</msg>
<status status="PASS" starttime="20201115 22:12:09.097" endtime="20201115 22:12:09.098"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:09.091" endtime="20201115 22:12:09.099"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:09.109" endtime="20201115 22:12:09.110"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:09.113" endtime="20201115 22:12:09.132"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:09.111" endtime="20201115 22:12:09.133"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:09.106" endtime="20201115 22:12:09.134"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:08.631" endtime="20201115 22:12:09.134"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:08.627" endtime="20201115 22:12:09.134"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:08.625" endtime="20201115 22:12:09.134"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:09.137" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:09.148" endtime="20201115 22:12:09.164"></status>
</kw>
<msg timestamp="20201115 22:12:09.164" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:09.146" endtime="20201115 22:12:09.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:09.167" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:09.165" endtime="20201115 22:12:09.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:09.168" endtime="20201115 22:12:09.170"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:09.143" endtime="20201115 22:12:09.171"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:09.140" endtime="20201115 22:12:09.172"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:09.179" endtime="20201115 22:12:09.499"></status>
</kw>
<msg timestamp="20201115 22:12:09.506" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027579139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027582333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:09.178" endtime="20201115 22:12:09.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:09.525" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027579139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027582333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:09.509" endtime="20201115 22:12:09.526"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:09.527" endtime="20201115 22:12:09.531"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:09.174" endtime="20201115 22:12:09.533"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:09.172" endtime="20201115 22:12:09.534"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:09.545" level="INFO">${RESULT} = [{'time': 0.027582333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.194000000001501e-06, 'source_diff': 3.194000000001501e-06}, {'time': 0.027688806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:12:09.536" endtime="20201115 22:12:09.545"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:09.575" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:12:09.547" endtime="20201115 22:12:09.576"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:09.586" level="INFO">NAME: 00-overhead-7-remove</msg>
<status status="PASS" starttime="20201115 22:12:09.584" endtime="20201115 22:12:09.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:09.592" level="INFO">VALUE: [3.194000000001501e-06, 3.181000000001405e-06, 3.1949999999975054e-06, 3.195000000000975e-06, 3.194000000001501e-06, 3.249999999999781e-06, 3.222000000000641e-06, 3.181000000001405e-06, 3.1939999999980317e-06, 3.1809999999979355e-06, 3.194000000001501e-06, 3.1939999999980317e-06, 3.194000000001501e-06, 3.195000000000975e-06, 3.179999999998462e-06, 3.195000000000975e-06, 3.1949999999975054e-06, 3.1939999999980317e-06, 3.2230000000001147e-06, 3.208000000001071e-06, 3.179999999998462e-06, 3.1939999999980317e-06, 3.1939999999980317e-06, 3.2090000000005448e-06, 3.1939999999980317e-06, 3.179999999998462e-06, 3.179999999998462e-06, 3.124999999999656e-06, 3.208000000001071e-06, 3.194000000001501e-06, 3.1949999999975054e-06, 3.195000000000975e-06, 3.222000000000641e-06, 3.1949999999975054e-06, 3.179999999998462e-06, 3.2079999999976017e-06, 3.1940000000049706e-06, 3.2080000000045406e-06, 3.1809999999979355e-06, 3.1810000000048744e-06, 3.179999999998462e-06, 3.1939999999980317e-06, 3.1529999999987957e-06, 3.1939999999980317e-06, 3.2080000000045406e-06, 3.2630000000033466e-06, 3.1949999999975054e-06, 3.1809999999979355e-06, 3.1670000000053045e-06, 3.1949999999975054e-06]</msg>
<status status="PASS" starttime="20201115 22:12:09.588" endtime="20201115 22:12:09.593"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:09.577" endtime="20201115 22:12:09.595"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:09.601" endtime="20201115 22:12:09.604"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:09.609" endtime="20201115 22:12:09.631"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:09.605" endtime="20201115 22:12:09.633"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:09.597" endtime="20201115 22:12:09.634"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:09.137" endtime="20201115 22:12:09.635"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:09.135" endtime="20201115 22:12:09.636"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:09.135" endtime="20201115 22:12:09.636"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:09.641" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:09.664" endtime="20201115 22:12:09.683"></status>
</kw>
<msg timestamp="20201115 22:12:09.684" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:09.661" endtime="20201115 22:12:09.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:09.690" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:09.686" endtime="20201115 22:12:09.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:09.693" endtime="20201115 22:12:09.696"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:09.653" endtime="20201115 22:12:09.698"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:09.647" endtime="20201115 22:12:09.699"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:09.716" endtime="20201115 22:12:10.048"></status>
</kw>
<msg timestamp="20201115 22:12:10.055" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048138417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048141931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:09.713" endtime="20201115 22:12:10.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:10.074" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048138417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048141931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:10.057" endtime="20201115 22:12:10.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:10.076" endtime="20201115 22:12:10.081"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:09.706" endtime="20201115 22:12:10.083"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:09.701" endtime="20201115 22:12:10.084"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:10.095" level="INFO">${RESULT} = [{'time': 0.048141931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5139999999961313e-06, 'source_diff': 3.5139999999961313e-06}, {'time': 0.048267819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:12:10.086" endtime="20201115 22:12:10.096"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:10.125" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:12:10.097" endtime="20201115 22:12:10.126"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:10.136" level="INFO">NAME: 00-overhead-8-remove</msg>
<status status="PASS" starttime="20201115 22:12:10.134" endtime="20201115 22:12:10.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:10.142" level="INFO">VALUE: [3.5139999999961313e-06, 3.4579999999978517e-06, 3.54200000000221e-06, 3.5000000000035003e-06, 3.4719999999974216e-06, 3.5129999999966577e-06, 3.4859999999969915e-06, 3.4860000000039304e-06, 3.4860000000039304e-06, 3.4859999999969915e-06, 3.54200000000221e-06, 3.4439999999982818e-06, 3.5269999999962276e-06, 3.4860000000039304e-06, 3.4860000000039304e-06, 3.4579999999978517e-06, 3.4720000000043605e-06, 3.4729999999968952e-06, 3.4309999999981855e-06, 3.4859999999969915e-06, 3.4309999999981855e-06, 3.5139999999961313e-06, 3.486999999996465e-06, 3.4860000000039304e-06, 3.487000000003404e-06, 3.4999999999965614e-06, 3.4859999999969915e-06, 3.487000000003404e-06, 3.5140000000030702e-06, 3.487000000003404e-06, 3.4859999999969915e-06, 3.52800000000264e-06, 3.4999999999965614e-06, 3.4860000000039304e-06, 3.4859999999969915e-06, 3.4859999999969915e-06, 3.4999999999965614e-06, 3.5000000000035003e-06, 3.4860000000039304e-06, 3.5000000000035003e-06, 3.4859999999969915e-06, 3.4859999999969915e-06, 3.54200000000221e-06, 3.5550000000023063e-06, 3.4309999999981855e-06, 3.5410000000027364e-06, 3.4999999999965614e-06, 3.4859999999969915e-06, 3.4859999999969915e-06, 3.4859999999969915e-06]</msg>
<status status="PASS" starttime="20201115 22:12:10.138" endtime="20201115 22:12:10.143"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:10.127" endtime="20201115 22:12:10.145"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:10.151" endtime="20201115 22:12:10.154"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:10.160" endtime="20201115 22:12:10.181"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:10.155" endtime="20201115 22:12:10.183"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:10.147" endtime="20201115 22:12:10.184"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:09.642" endtime="20201115 22:12:10.185"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:09.638" endtime="20201115 22:12:10.186"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:09.637" endtime="20201115 22:12:10.186"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:10.191" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:10.214" endtime="20201115 22:12:10.233"></status>
</kw>
<msg timestamp="20201115 22:12:10.235" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:10.211" endtime="20201115 22:12:10.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:10.241" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:10.237" endtime="20201115 22:12:10.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:10.243" endtime="20201115 22:12:10.247"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:10.203" endtime="20201115 22:12:10.248"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:10.197" endtime="20201115 22:12:10.250"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:10.267" endtime="20201115 22:12:10.599"></status>
</kw>
<msg timestamp="20201115 22:12:10.607" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048167847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048171625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:10.263" endtime="20201115 22:12:10.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:10.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048167847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048171625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:10.609" endtime="20201115 22:12:10.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:10.628" endtime="20201115 22:12:10.632"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:10.256" endtime="20201115 22:12:10.633"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:10.251" endtime="20201115 22:12:10.635"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:10.645" level="INFO">${RESULT} = [{'time': 0.048171625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.77800000000289e-06, 'source_diff': 3.77800000000289e-06}, {'time': 0.048303889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:12:10.636" endtime="20201115 22:12:10.646"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:10.679" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:12:10.648" endtime="20201115 22:12:10.679"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:10.690" level="INFO">NAME: 00-overhead-9-remove</msg>
<status status="PASS" starttime="20201115 22:12:10.688" endtime="20201115 22:12:10.691"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:10.695" level="INFO">VALUE: [3.77800000000289e-06, 3.77800000000289e-06, 3.77800000000289e-06, 3.847000000001266e-06, 3.7500000000037503e-06, 3.77800000000289e-06, 3.77800000000289e-06, 3.77800000000289e-06, 3.8200000000016e-06, 3.80600000000203e-06, 3.80600000000203e-06, 3.7779999999959513e-06, 3.833000000001696e-06, 3.7639999999963814e-06, 3.7629999999969077e-06, 3.7079999999981017e-06, 3.7640000000033202e-06, 3.7769999999964776e-06, 3.7770000000034165e-06, 3.7360000000041804e-06, 3.79200000000246e-06, 3.8050000000025563e-06, 3.7640000000033202e-06, 3.6940000000054707e-06, 3.77800000000289e-06, 3.7769999999964776e-06, 3.7779999999959513e-06, 3.77800000000289e-06, 3.77800000000289e-06, 3.7910000000029864e-06, 3.7779999999959513e-06, 3.79200000000246e-06, 3.7769999999964776e-06, 3.7779999999959513e-06, 3.819999999994661e-06, 3.7219999999976716e-06, 3.7779999999959513e-06, 3.7779999999959513e-06, 3.7909999999960475e-06, 3.7629999999969077e-06, 3.832999999994757e-06, 3.861000000000836e-06, 3.79200000000246e-06, 3.7639999999963814e-06, 3.7499999999968114e-06, 3.7639999999963814e-06, 3.7779999999959513e-06, 3.847000000001266e-06, 3.7779999999959513e-06, 3.79200000000246e-06]</msg>
<status status="PASS" starttime="20201115 22:12:10.692" endtime="20201115 22:12:10.696"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:10.681" endtime="20201115 22:12:10.698"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:10.704" endtime="20201115 22:12:10.707"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:10.713" endtime="20201115 22:12:10.734"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:10.708" endtime="20201115 22:12:10.736"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:10.700" endtime="20201115 22:12:10.737"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:10.192" endtime="20201115 22:12:10.738"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:10.188" endtime="20201115 22:12:10.739"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:10.187" endtime="20201115 22:12:10.739"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:10.744" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:10.767" endtime="20201115 22:12:10.787"></status>
</kw>
<msg timestamp="20201115 22:12:10.788" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:10.763" endtime="20201115 22:12:10.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:10.794" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:10.790" endtime="20201115 22:12:10.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:10.796" endtime="20201115 22:12:10.800"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:10.756" endtime="20201115 22:12:10.802"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:10.750" endtime="20201115 22:12:10.803"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:10.820" endtime="20201115 22:12:11.153"></status>
</kw>
<msg timestamp="20201115 22:12:11.160" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047866889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047870944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:10.816" endtime="20201115 22:12:11.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:11.178" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047866889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047870944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:11.163" endtime="20201115 22:12:11.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:11.182" endtime="20201115 22:12:11.187"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:10.809" endtime="20201115 22:12:11.189"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:10.804" endtime="20201115 22:12:11.190"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:11.201" level="INFO">${RESULT} = [{'time': 0.047870944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.0549999999958675e-06, 'source_diff': 4.0549999999958675e-06}, {'time': 0.048011389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:12:11.192" endtime="20201115 22:12:11.201"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:11.231" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:12:11.203" endtime="20201115 22:12:11.231"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:11.242" level="INFO">NAME: 00-overhead-10-remove</msg>
<status status="PASS" starttime="20201115 22:12:11.240" endtime="20201115 22:12:11.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:11.248" level="INFO">VALUE: [4.0549999999958675e-06, 4.083000000001946e-06, 3.9860000000044304e-06, 4.055000000002806e-06, 4.069000000002376e-06, 4.097000000001516e-06, 4.013999999996631e-06, 4.02800000000314e-06, 4.069000000002376e-06, 4.069000000002376e-06, 4.05600000000228e-06, 4.0549999999958675e-06, 4.068999999995437e-06, 4.055000000002806e-06, 4.083000000001946e-06, 4.08400000000142e-06, 4.069000000002376e-06, 4.05600000000228e-06, 4.068999999995437e-06, 4.125000000000656e-06, 4.069000000002376e-06, 4.055999999995341e-06, 4.055999999995341e-06, 4.04200000000271e-06, 4.07000000000185e-06, 4.083000000001946e-06, 4.069000000002376e-06, 4.152000000000322e-06, 4.07000000000185e-06, 4.069000000002376e-06, 4.055000000002806e-06, 4.068999999995437e-06, 4.125000000000656e-06, 4.069999999994911e-06, 4.083999999994481e-06, 4.083000000001946e-06, 4.083000000001946e-06, 4.125000000000656e-06, 4.069000000002376e-06, 4.055999999995341e-06, 4.083000000001946e-06, 4.055000000002806e-06, 4.083000000001946e-06, 4.069000000002376e-06, 4.069000000002376e-06, 4.068999999995437e-06, 4.082999999995007e-06, 4.0549999999958675e-06, 4.069000000002376e-06, 4.152999999999796e-06]</msg>
<status status="PASS" starttime="20201115 22:12:11.245" endtime="20201115 22:12:11.249"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:11.233" endtime="20201115 22:12:11.250"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:11.257" endtime="20201115 22:12:11.259"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:11.265" endtime="20201115 22:12:11.286"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:11.261" endtime="20201115 22:12:11.288"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:11.252" endtime="20201115 22:12:11.290"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:10.745" endtime="20201115 22:12:11.290"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:10.742" endtime="20201115 22:12:11.291"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:10.740" endtime="20201115 22:12:11.291"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:11.296" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:11.319" endtime="20201115 22:12:11.340"></status>
</kw>
<msg timestamp="20201115 22:12:11.342" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:11.316" endtime="20201115 22:12:11.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:11.348" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:11.344" endtime="20201115 22:12:11.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:11.351" endtime="20201115 22:12:11.355"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:11.309" endtime="20201115 22:12:11.356"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:11.303" endtime="20201115 22:12:11.358"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:11.376" endtime="20201115 22:12:11.712"></status>
</kw>
<msg timestamp="20201115 22:12:11.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047949083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047953431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:11.372" endtime="20201115 22:12:11.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:11.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047949083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047953431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:11.721" endtime="20201115 22:12:11.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:11.740" endtime="20201115 22:12:11.743"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:11.364" endtime="20201115 22:12:11.745"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:11.359" endtime="20201115 22:12:11.746"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:11.757" level="INFO">${RESULT} = [{'time': 0.047953431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.347999999994301e-06, 'source_diff': 4.347999999994301e-06}, {'time': 0.048109292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:12:11.748" endtime="20201115 22:12:11.758"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:11.787" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:12:11.759" endtime="20201115 22:12:11.788"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:11.798" level="INFO">NAME: 00-overhead-11-remove</msg>
<status status="PASS" starttime="20201115 22:12:11.796" endtime="20201115 22:12:11.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:11.804" level="INFO">VALUE: [4.347999999994301e-06, 4.333999999994731e-06, 4.361999999993871e-06, 4.375000000000906e-06, 4.34800000000124e-06, 4.361000000001336e-06, 4.319000000002626e-06, 4.333000000002196e-06, 4.347000000001766e-06, 4.360999999994397e-06, 4.416000000000142e-06, 4.34800000000124e-06, 4.347000000001766e-06, 4.36200000000081e-06, 4.375000000000906e-06, 4.347000000001766e-06, 4.333999999994731e-06, 4.33400000000167e-06, 4.375000000000906e-06, 4.375000000000906e-06, 4.361000000001336e-06, 4.361000000001336e-06, 4.361000000001336e-06, 4.277999999996451e-06, 4.361000000001336e-06, 4.347000000001766e-06, 4.375000000000906e-06, 4.319000000002626e-06, 4.347000000001766e-06, 4.347000000001766e-06, 4.36200000000081e-06, 4.305999999995591e-06, 4.305999999995591e-06, 4.36200000000081e-06, 4.34800000000124e-06, 4.34800000000124e-06, 4.361000000001336e-06, 4.361999999993871e-06, 4.360999999994397e-06, 4.361000000001336e-06, 4.36200000000081e-06, 4.347000000001766e-06, 4.360999999994397e-06, 4.361000000001336e-06, 4.361000000001336e-06, 4.361000000001336e-06, 4.375000000000906e-06, 4.361000000001336e-06, 4.361000000001336e-06, 4.360999999994397e-06]</msg>
<status status="PASS" starttime="20201115 22:12:11.801" endtime="20201115 22:12:11.805"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:11.789" endtime="20201115 22:12:11.806"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:11.813" endtime="20201115 22:12:11.815"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:11.821" endtime="20201115 22:12:11.843"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:11.817" endtime="20201115 22:12:11.844"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:11.808" endtime="20201115 22:12:11.846"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:11.297" endtime="20201115 22:12:11.847"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:11.294" endtime="20201115 22:12:11.847"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:11.292" endtime="20201115 22:12:11.847"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:11.852" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:11.875" endtime="20201115 22:12:11.897"></status>
</kw>
<msg timestamp="20201115 22:12:11.898" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:11.872" endtime="20201115 22:12:11.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:11.905" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:11.901" endtime="20201115 22:12:11.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:11.908" endtime="20201115 22:12:11.912"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:11.865" endtime="20201115 22:12:11.913"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:11.859" endtime="20201115 22:12:11.915"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:11.931" endtime="20201115 22:12:12.264"></status>
</kw>
<msg timestamp="20201115 22:12:12.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047950944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047955583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:11.928" endtime="20201115 22:12:12.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:12.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047950944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047955583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:12.273" endtime="20201115 22:12:12.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:12.291" endtime="20201115 22:12:12.297"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:11.921" endtime="20201115 22:12:12.298"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:11.916" endtime="20201115 22:12:12.300"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:12.310" level="INFO">${RESULT} = [{'time': 0.047955583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.048125389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:12:12.301" endtime="20201115 22:12:12.311"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:12.340" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:12:12.312" endtime="20201115 22:12:12.341"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:12.351" level="INFO">NAME: 00-overhead-12-remove</msg>
<status status="PASS" starttime="20201115 22:12:12.349" endtime="20201115 22:12:12.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:12.357" level="INFO">VALUE: [4.639000000000726e-06, 4.639000000000726e-06, 4.666999999999866e-06, 4.652000000000822e-06, 4.639000000000726e-06, 4.653000000000296e-06, 4.693999999999532e-06, 4.653000000000296e-06, 4.597000000002016e-06, 4.666999999999866e-06, 4.666000000000392e-06, 4.653000000000296e-06, 4.653000000000296e-06, 4.721999999998672e-06, 4.653000000000296e-06, 4.583000000002446e-06, 4.666000000000392e-06, 4.652000000000822e-06, 4.639000000000726e-06, 4.653000000000296e-06, 4.639000000000726e-06, 4.666999999999866e-06, 4.638000000001252e-06, 4.653000000000296e-06, 4.653000000000296e-06, 4.653000000000296e-06, 4.652000000000822e-06, 4.695000000005944e-06, 4.639000000000726e-06, 4.653000000000296e-06, 4.59800000000149e-06, 4.596999999995077e-06, 4.666999999999866e-06, 4.653000000000296e-06, 4.653000000000296e-06, 4.666999999999866e-06, 4.639000000000726e-06, 4.653000000000296e-06, 4.653000000000296e-06, 4.625000000001156e-06, 4.653000000000296e-06, 4.653000000000296e-06, 4.653000000000296e-06, 4.653000000000296e-06, 4.639000000000726e-06, 4.653000000000296e-06, 4.639000000000726e-06, 4.666000000000392e-06, 4.639000000000726e-06, 4.653000000000296e-06]</msg>
<status status="PASS" starttime="20201115 22:12:12.354" endtime="20201115 22:12:12.357"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:12.342" endtime="20201115 22:12:12.359"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:12.366" endtime="20201115 22:12:12.368"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:12.374" endtime="20201115 22:12:12.395"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:12.369" endtime="20201115 22:12:12.397"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:12.361" endtime="20201115 22:12:12.399"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:11.853" endtime="20201115 22:12:12.400"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:11.850" endtime="20201115 22:12:12.400"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:11.848" endtime="20201115 22:12:12.401"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:12.406" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:12.430" endtime="20201115 22:12:12.453"></status>
</kw>
<msg timestamp="20201115 22:12:12.454" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:12.427" endtime="20201115 22:12:12.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:12.460" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:12.456" endtime="20201115 22:12:12.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:12.463" endtime="20201115 22:12:12.466"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:12.419" endtime="20201115 22:12:12.468"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:12.413" endtime="20201115 22:12:12.469"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:12.486" endtime="20201115 22:12:12.790"></status>
</kw>
<msg timestamp="20201115 22:12:12.793" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050229597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050234528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:12.483" endtime="20201115 22:12:12.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:12.801" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050229597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050234528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:12.794" endtime="20201115 22:12:12.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:12.803" endtime="20201115 22:12:12.804"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:12.475" endtime="20201115 22:12:12.805"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:12.471" endtime="20201115 22:12:12.806"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:12.811" level="INFO">${RESULT} = [{'time': 0.050234528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.930999999999686e-06, 'source_diff': 4.930999999999686e-06}, {'time': 0.050419958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:12:12.806" endtime="20201115 22:12:12.811"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:12.840" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:12:12.812" endtime="20201115 22:12:12.840"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:12.851" level="INFO">NAME: 00-overhead-13-remove</msg>
<status status="PASS" starttime="20201115 22:12:12.848" endtime="20201115 22:12:12.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:12.856" level="INFO">VALUE: [4.930999999999686e-06, 4.985999999998492e-06, 4.9310000000066245e-06, 4.875000000001406e-06, 4.957999999999352e-06, 4.943999999999782e-06, 4.957999999999352e-06, 4.943999999999782e-06, 4.930999999999686e-06, 4.9449999999992555e-06, 4.9449999999992555e-06, 4.971999999998922e-06, 4.930999999999686e-06, 4.957999999999352e-06, 4.943999999999782e-06, 4.9450000000061944e-06, 4.930000000000212e-06, 4.943999999999782e-06, 4.943999999999782e-06, 4.959000000005764e-06, 4.957999999999352e-06, 4.930000000000212e-06, 4.957999999999352e-06, 4.9449999999992555e-06, 4.943999999999782e-06, 4.972999999998395e-06, 4.958000000006291e-06, 4.930000000000212e-06, 4.930999999999686e-06, 4.916999999993177e-06, 4.9589999999988255e-06, 4.930000000000212e-06, 4.9449999999992555e-06, 4.9449999999992555e-06, 4.902999999993607e-06, 4.943999999999782e-06, 4.930000000000212e-06, 4.930000000000212e-06, 4.943999999999782e-06, 4.973000000005334e-06, 4.943999999999782e-06, 4.9449999999992555e-06, 4.9589999999988255e-06, 4.875000000001406e-06, 4.9449999999992555e-06, 4.930999999999686e-06, 4.943999999999782e-06, 4.917000000000116e-06, 4.9449999999992555e-06, 4.9449999999992555e-06]</msg>
<status status="PASS" starttime="20201115 22:12:12.853" endtime="20201115 22:12:12.857"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:12.842" endtime="20201115 22:12:12.859"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:12.865" endtime="20201115 22:12:12.868"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:12.874" endtime="20201115 22:12:12.896"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:12.869" endtime="20201115 22:12:12.897"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:12.860" endtime="20201115 22:12:12.899"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:12.407" endtime="20201115 22:12:12.899"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:12.403" endtime="20201115 22:12:12.900"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:12.402" endtime="20201115 22:12:12.901"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:12.905" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:12.928" endtime="20201115 22:12:12.951"></status>
</kw>
<msg timestamp="20201115 22:12:12.952" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:12.925" endtime="20201115 22:12:12.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:12.958" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:12.954" endtime="20201115 22:12:12.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:12.961" endtime="20201115 22:12:12.964"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:12.918" endtime="20201115 22:12:12.966"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:12.912" endtime="20201115 22:12:12.967"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:12.984" endtime="20201115 22:12:13.317"></status>
</kw>
<msg timestamp="20201115 22:12:13.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047854389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047859653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:12.981" endtime="20201115 22:12:13.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:13.342" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047854389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047859653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:13.326" endtime="20201115 22:12:13.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:13.344" endtime="20201115 22:12:13.350"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:12.973" endtime="20201115 22:12:13.351"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:12.969" endtime="20201115 22:12:13.353"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:13.363" level="INFO">${RESULT} = [{'time': 0.047859653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.26400000000482e-06, 'source_diff': 5.26400000000482e-06}, {'time': 0.048063306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:12:13.354" endtime="20201115 22:12:13.364"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:13.394" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:12:13.366" endtime="20201115 22:12:13.394"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:13.405" level="INFO">NAME: 00-overhead-14-remove</msg>
<status status="PASS" starttime="20201115 22:12:13.402" endtime="20201115 22:12:13.405"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:13.410" level="INFO">VALUE: [5.26400000000482e-06, 5.222999999998645e-06, 5.235999999998742e-06, 5.235999999998742e-06, 5.221999999999172e-06, 5.2499999999983116e-06, 5.221999999999172e-06, 5.221999999999172e-06, 5.2639999999978815e-06, 5.2360000000056806e-06, 5.235999999998742e-06, 5.236999999998215e-06, 5.235999999998742e-06, 5.235999999998742e-06, 5.2500000000052505e-06, 5.2499999999983116e-06, 5.235999999998742e-06, 5.2500000000052505e-06, 5.235999999998742e-06, 5.2089999999990755e-06, 5.2360000000056806e-06, 5.235999999998742e-06, 5.222999999998645e-06, 5.222999999998645e-06, 5.277999999997451e-06, 5.221999999999172e-06, 5.221999999999172e-06, 5.235999999998742e-06, 5.2499999999983116e-06, 5.2089999999990755e-06, 5.2360000000056806e-06, 5.2089999999990755e-06, 5.2499999999983116e-06, 5.221999999999172e-06, 5.235999999998742e-06, 5.153000000000796e-06, 5.235999999998742e-06, 5.2360000000056806e-06, 5.221999999999172e-06, 5.235999999998742e-06, 5.2500000000052505e-06, 5.1949999999995056e-06, 5.2499999999983116e-06, 5.277999999997451e-06, 5.2499999999983116e-06, 5.2499999999983116e-06, 5.235999999998742e-06, 5.2500000000052505e-06, 5.2500000000052505e-06, 5.2499999999983116e-06]</msg>
<status status="PASS" starttime="20201115 22:12:13.407" endtime="20201115 22:12:13.412"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:13.396" endtime="20201115 22:12:13.414"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:13.420" endtime="20201115 22:12:13.423"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:13.429" endtime="20201115 22:12:13.451"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:13.425" endtime="20201115 22:12:13.453"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:13.416" endtime="20201115 22:12:13.454"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:12.906" endtime="20201115 22:12:13.455"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:12.903" endtime="20201115 22:12:13.455"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:12.901" endtime="20201115 22:12:13.456"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:13.461" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:13.484" endtime="20201115 22:12:13.507"></status>
</kw>
<msg timestamp="20201115 22:12:13.508" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:13.480" endtime="20201115 22:12:13.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:13.515" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:13.511" endtime="20201115 22:12:13.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:13.517" endtime="20201115 22:12:13.521"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:13.473" endtime="20201115 22:12:13.522"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:13.467" endtime="20201115 22:12:13.524"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:13.540" endtime="20201115 22:12:13.874"></status>
</kw>
<msg timestamp="20201115 22:12:13.881" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048171361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048176889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:13.537" endtime="20201115 22:12:13.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:13.899" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048171361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048176889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:13.883" endtime="20201115 22:12:13.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:13.902" endtime="20201115 22:12:13.906"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:13.530" endtime="20201115 22:12:13.907"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:13.525" endtime="20201115 22:12:13.909"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:13.919" level="INFO">${RESULT} = [{'time': 0.048176889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.527999999997701e-06, 'source_diff': 5.527999999997701e-06}, {'time': 0.048395875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:12:13.910" endtime="20201115 22:12:13.920"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:13.949" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:12:13.921" endtime="20201115 22:12:13.950"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:13.961" level="INFO">NAME: 00-overhead-15-remove</msg>
<status status="PASS" starttime="20201115 22:12:13.958" endtime="20201115 22:12:13.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:13.967" level="INFO">VALUE: [5.527999999997701e-06, 5.471999999999422e-06, 5.5000000000055005e-06, 5.5139999999981315e-06, 5.57000000000335e-06, 5.59800000000249e-06, 5.51400000000507e-06, 5.51400000000507e-06, 5.499999999998562e-06, 5.541999999997271e-06, 5.5000000000055005e-06, 5.5139999999981315e-06, 5.527999999997701e-06, 5.5139999999981315e-06, 5.5139999999981315e-06, 5.5139999999981315e-06, 5.540999999997798e-06, 5.5139999999981315e-06, 5.526999999998228e-06, 5.526999999998228e-06, 5.5139999999981315e-06, 5.471999999999422e-06, 5.52800000000464e-06, 5.52800000000464e-06, 5.499999999998562e-06, 5.527999999997701e-06, 5.499999999998562e-06, 5.540999999997798e-06, 5.513000000005597e-06, 5.52800000000464e-06, 5.527999999997701e-06, 5.54200000000421e-06, 5.52800000000464e-06, 5.527999999997701e-06, 5.541999999997271e-06, 5.527999999997701e-06, 5.5139999999981315e-06, 5.472999999998895e-06, 5.527999999997701e-06, 5.527999999997701e-06, 5.541999999997271e-06, 5.5689999999969375e-06, 5.512999999998658e-06, 5.54200000000421e-06, 5.499999999998562e-06, 5.526999999998228e-06, 5.5139999999981315e-06, 5.527999999997701e-06, 5.499999999998562e-06, 5.527999999997701e-06]</msg>
<status status="PASS" starttime="20201115 22:12:13.963" endtime="20201115 22:12:13.968"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:13.951" endtime="20201115 22:12:13.969"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:13.976" endtime="20201115 22:12:13.978"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:13.984" endtime="20201115 22:12:14.005"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:13.979" endtime="20201115 22:12:14.007"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:13.971" endtime="20201115 22:12:14.009"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:13.462" endtime="20201115 22:12:14.009"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:13.458" endtime="20201115 22:12:14.010"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:13.457" endtime="20201115 22:12:14.010"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:14.015" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:14.038" endtime="20201115 22:12:14.063"></status>
</kw>
<msg timestamp="20201115 22:12:14.065" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:14.035" endtime="20201115 22:12:14.065"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:14.071" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:14.067" endtime="20201115 22:12:14.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:14.073" endtime="20201115 22:12:14.077"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:14.028" endtime="20201115 22:12:14.078"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:14.022" endtime="20201115 22:12:14.080"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:14.097" endtime="20201115 22:12:14.430"></status>
</kw>
<msg timestamp="20201115 22:12:14.437" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048344736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048350486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:14.093" endtime="20201115 22:12:14.437"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:14.455" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048344736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048350486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:14.439" endtime="20201115 22:12:14.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:14.458" endtime="20201115 22:12:14.463"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:14.086" endtime="20201115 22:12:14.465"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:14.081" endtime="20201115 22:12:14.467"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:14.478" level="INFO">${RESULT} = [{'time': 0.048350486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.749999999998812e-06, 'source_diff': 5.749999999998812e-06}, {'time': 0.048576, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 22:12:14.468" endtime="20201115 22:12:14.485"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:14.515" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:12:14.487" endtime="20201115 22:12:14.516"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:14.526" level="INFO">NAME: 00-overhead-16-remove</msg>
<status status="PASS" starttime="20201115 22:12:14.524" endtime="20201115 22:12:14.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:14.532" level="INFO">VALUE: [5.749999999998812e-06, 5.8190000000041264e-06, 5.8189999999971875e-06, 5.8200000000036e-06, 5.819999999996661e-06, 5.819999999996661e-06, 5.7779999999979514e-06, 5.8050000000045565e-06, 5.8189999999971875e-06, 5.860999999995897e-06, 5.8189999999971875e-06, 5.833000000003696e-06, 5.80600000000403e-06, 5.8189999999971875e-06, 5.804999999997618e-06, 5.8189999999971875e-06, 5.804999999997618e-06, 5.83400000000317e-06, 5.8189999999971875e-06, 5.846999999996327e-06, 5.7639999999983815e-06, 5.8189999999971875e-06, 5.804999999997618e-06, 5.79200000000446e-06, 5.8200000000036e-06, 5.8190000000041264e-06, 5.805999999997091e-06, 5.8200000000036e-06, 5.8329999999967574e-06, 5.8200000000036e-06, 5.819999999996661e-06, 5.8189999999971875e-06, 5.8190000000041264e-06, 5.8200000000036e-06, 5.79200000000446e-06, 5.749999999998812e-06, 5.874999999995467e-06, 5.8190000000041264e-06, 5.861000000002836e-06, 5.77800000000489e-06, 5.8200000000036e-06, 5.8189999999971875e-06, 5.80600000000403e-06, 5.847000000003266e-06, 5.819999999996661e-06, 5.80600000000403e-06, 5.889000000001976e-06, 5.8189999999971875e-06, 5.819999999996661e-06, 5.861000000002836e-06]</msg>
<status status="PASS" starttime="20201115 22:12:14.529" endtime="20201115 22:12:14.533"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:14.517" endtime="20201115 22:12:14.534"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:14.541" endtime="20201115 22:12:14.543"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:14.549" endtime="20201115 22:12:14.571"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:14.545" endtime="20201115 22:12:14.572"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:14.536" endtime="20201115 22:12:14.574"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:14.016" endtime="20201115 22:12:14.575"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:14.013" endtime="20201115 22:12:14.575"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:14.011" endtime="20201115 22:12:14.575"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:14.580" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:14.604" endtime="20201115 22:12:14.629"></status>
</kw>
<msg timestamp="20201115 22:12:14.630" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:14.600" endtime="20201115 22:12:14.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:14.637" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:14.633" endtime="20201115 22:12:14.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:14.639" endtime="20201115 22:12:14.643"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:14.593" endtime="20201115 22:12:14.644"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:14.587" endtime="20201115 22:12:14.646"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:14.662" endtime="20201115 22:12:14.997"></status>
</kw>
<msg timestamp="20201115 22:12:15.004" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048409653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048415764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:14.659" endtime="20201115 22:12:15.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:15.023" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048409653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048415764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:15.006" endtime="20201115 22:12:15.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:15.026" endtime="20201115 22:12:15.029"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:14.652" endtime="20201115 22:12:15.031"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:14.647" endtime="20201115 22:12:15.033"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:15.043" level="INFO">${RESULT} = [{'time': 0.048415764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.111000000003086e-06, 'source_diff': 6.111000000003086e-06}, {'time': 0.0486605, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:12:15.034" endtime="20201115 22:12:15.044"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:15.076" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:12:15.045" endtime="20201115 22:12:15.076"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:15.087" level="INFO">NAME: 00-overhead-17-remove</msg>
<status status="PASS" starttime="20201115 22:12:15.085" endtime="20201115 22:12:15.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:15.092" level="INFO">VALUE: [6.111000000003086e-06, 6.111000000003086e-06, 6.125000000002656e-06, 6.097000000003516e-06, 6.139000000002226e-06, 6.111000000003086e-06, 6.097000000003516e-06, 6.110999999996147e-06, 6.0279999999982015e-06, 6.125000000002656e-06, 6.0689999999974376e-06, 6.138000000002752e-06, 6.0829999999970075e-06, 6.180000000001462e-06, 6.125000000002656e-06, 6.110999999996147e-06, 6.111000000003086e-06, 6.02800000000514e-06, 6.125000000002656e-06, 6.167000000001366e-06, 6.111000000003086e-06, 6.097000000003516e-06, 6.110999999996147e-06, 6.111000000003086e-06, 6.139000000002226e-06, 6.111000000003086e-06, 6.124999999995717e-06, 6.0689999999974376e-06, 6.111000000003086e-06, 6.097000000003516e-06, 6.111000000003086e-06, 6.167000000001366e-06, 6.096999999996577e-06, 6.125000000002656e-06, 6.125000000002656e-06, 6.181000000000936e-06, 6.125000000002656e-06, 6.139000000002226e-06, 6.125000000002656e-06, 6.111000000003086e-06, 6.110999999996147e-06, 6.111000000003086e-06, 6.124999999995717e-06, 6.124999999995717e-06, 6.166000000001892e-06, 6.139000000002226e-06, 6.124999999995717e-06, 6.124999999995717e-06, 6.111000000003086e-06, 6.110999999996147e-06]</msg>
<status status="PASS" starttime="20201115 22:12:15.089" endtime="20201115 22:12:15.093"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:15.078" endtime="20201115 22:12:15.095"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:15.101" endtime="20201115 22:12:15.104"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:15.109" endtime="20201115 22:12:15.131"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:15.105" endtime="20201115 22:12:15.133"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:15.097" endtime="20201115 22:12:15.134"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:14.582" endtime="20201115 22:12:15.135"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:14.578" endtime="20201115 22:12:15.135"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:14.576" endtime="20201115 22:12:15.136"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:15.141" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:15.164" endtime="20201115 22:12:15.190"></status>
</kw>
<msg timestamp="20201115 22:12:15.191" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:15.160" endtime="20201115 22:12:15.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:15.197" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:15.193" endtime="20201115 22:12:15.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:15.199" endtime="20201115 22:12:15.203"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:15.153" endtime="20201115 22:12:15.205"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:15.147" endtime="20201115 22:12:15.206"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:15.224" endtime="20201115 22:12:15.558"></status>
</kw>
<msg timestamp="20201115 22:12:15.565" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047803014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047809417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:15.219" endtime="20201115 22:12:15.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:15.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047803014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047809417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:15.567" endtime="20201115 22:12:15.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:15.585" endtime="20201115 22:12:15.591"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:15.212" endtime="20201115 22:12:15.593"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:15.207" endtime="20201115 22:12:15.594"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:15.605" level="INFO">${RESULT} = [{'time': 0.047809417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.403000000002046e-06, 'source_diff': 6.403000000002046e-06}, {'time': 0.048070847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:12:15.596" endtime="20201115 22:12:15.605"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:15.635" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:12:15.607" endtime="20201115 22:12:15.635"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:15.646" level="INFO">NAME: 00-overhead-18-remove</msg>
<status status="PASS" starttime="20201115 22:12:15.644" endtime="20201115 22:12:15.647"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:15.651" level="INFO">VALUE: [6.403000000002046e-06, 6.416000000002142e-06, 6.417000000001616e-06, 6.375000000002906e-06, 6.401999999995633e-06, 6.402999999995107e-06, 6.346999999996827e-06, 6.417000000001616e-06, 6.445000000000756e-06, 6.417000000001616e-06, 6.389000000002476e-06, 6.401999999995633e-06, 6.389000000002476e-06, 6.402999999995107e-06, 6.417000000001616e-06, 6.403000000002046e-06, 6.445000000000756e-06, 6.401999999995633e-06, 6.417000000001616e-06, 6.417000000001616e-06, 6.33400000000367e-06, 6.389000000002476e-06, 6.431000000001186e-06, 6.402000000002572e-06, 6.403000000002046e-06, 6.375000000002906e-06, 6.416999999994677e-06, 6.389000000002476e-06, 6.388999999995537e-06, 6.403000000002046e-06, 6.417000000001616e-06, 6.402999999995107e-06, 6.403000000002046e-06, 6.402000000002572e-06, 6.417000000001616e-06, 6.402000000002572e-06, 6.403000000002046e-06, 6.430000000001712e-06, 6.375000000002906e-06, 6.360999999996397e-06, 6.333000000004196e-06, 6.403000000002046e-06, 6.402999999995107e-06, 6.403000000002046e-06, 6.458000000000852e-06, 6.347000000003766e-06, 6.402999999995107e-06, 6.403000000002046e-06, 6.416000000002142e-06, 6.403000000002046e-06]</msg>
<status status="PASS" starttime="20201115 22:12:15.648" endtime="20201115 22:12:15.652"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:15.637" endtime="20201115 22:12:15.654"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:15.660" endtime="20201115 22:12:15.663"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:15.668" endtime="20201115 22:12:15.690"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:15.664" endtime="20201115 22:12:15.692"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:15.656" endtime="20201115 22:12:15.693"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:15.142" endtime="20201115 22:12:15.694"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:15.138" endtime="20201115 22:12:15.694"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:15.136" endtime="20201115 22:12:15.695"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:15.700" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:15.723" endtime="20201115 22:12:15.750"></status>
</kw>
<msg timestamp="20201115 22:12:15.751" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:15.719" endtime="20201115 22:12:15.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:15.758" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:15.753" endtime="20201115 22:12:15.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:15.760" endtime="20201115 22:12:15.764"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:15.712" endtime="20201115 22:12:15.766"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:15.706" endtime="20201115 22:12:15.767"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:15.784" endtime="20201115 22:12:16.107"></status>
</kw>
<msg timestamp="20201115 22:12:16.110" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048262931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048269639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:15.780" endtime="20201115 22:12:16.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:16.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048262931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048269639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:16.111" endtime="20201115 22:12:16.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:16.119" endtime="20201115 22:12:16.121"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:15.773" endtime="20201115 22:12:16.122"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:15.768" endtime="20201115 22:12:16.122"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:16.127" level="INFO">${RESULT} = [{'time': 0.048269639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.708000000001102e-06, 'source_diff': 6.708000000001102e-06}, {'time': 0.048551694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:12:16.123" endtime="20201115 22:12:16.127"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:16.141" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:12:16.128" endtime="20201115 22:12:16.141"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:16.146" level="INFO">NAME: 00-overhead-19-remove</msg>
<status status="PASS" starttime="20201115 22:12:16.145" endtime="20201115 22:12:16.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:16.149" level="INFO">VALUE: [6.708000000001102e-06, 6.694000000001532e-06, 6.694000000001532e-06, 6.681000000001436e-06, 6.708000000001102e-06, 6.694000000001532e-06, 6.722000000000672e-06, 6.709000000000576e-06, 6.708000000001102e-06, 6.666000000002392e-06, 6.611999999996121e-06, 6.680000000001962e-06, 6.679999999995023e-06, 6.681000000001436e-06, 6.694999999994067e-06, 6.694999999994067e-06, 6.694000000001532e-06, 6.681000000001436e-06, 6.708000000001102e-06, 6.694000000001532e-06, 6.749999999999812e-06, 6.680000000001962e-06, 6.681000000001436e-06, 6.625000000003156e-06, 6.709000000000576e-06, 6.667000000001866e-06, 6.709000000000576e-06, 6.694000000001532e-06, 6.709000000000576e-06, 6.709000000000576e-06, 6.749999999999812e-06, 6.695000000001006e-06, 6.639000000002726e-06, 6.695000000001006e-06, 6.680999999994497e-06, 6.709000000000576e-06, 6.709000000000576e-06, 6.7230000000001455e-06, 6.680000000001962e-06, 6.695000000001006e-06, 6.708000000001102e-06, 6.736000000000242e-06, 6.680000000001962e-06, 6.694000000001532e-06, 6.707999999994163e-06, 6.695000000001006e-06, 6.694999999994067e-06, 6.708000000001102e-06, 6.694000000001532e-06, 6.695000000001006e-06]</msg>
<status status="PASS" starttime="20201115 22:12:16.147" endtime="20201115 22:12:16.149"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:16.142" endtime="20201115 22:12:16.150"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:16.153" endtime="20201115 22:12:16.154"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:16.157" endtime="20201115 22:12:16.176"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:16.155" endtime="20201115 22:12:16.177"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:16.151" endtime="20201115 22:12:16.178"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:15.701" endtime="20201115 22:12:16.178"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:15.697" endtime="20201115 22:12:16.178"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:15.696" endtime="20201115 22:12:16.178"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:16.181" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:16.192" endtime="20201115 22:12:16.219"></status>
</kw>
<msg timestamp="20201115 22:12:16.219" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:16.190" endtime="20201115 22:12:16.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:16.222" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:16.220" endtime="20201115 22:12:16.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:16.223" endtime="20201115 22:12:16.225"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:16.187" endtime="20201115 22:12:16.226"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:16.184" endtime="20201115 22:12:16.226"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:16.234" endtime="20201115 22:12:16.529"></status>
</kw>
<msg timestamp="20201115 22:12:16.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028815597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028822583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:16.233" endtime="20201115 22:12:16.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:16.555" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028815597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028822583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:16.539" endtime="20201115 22:12:16.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:16.557" endtime="20201115 22:12:16.563"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:16.229" endtime="20201115 22:12:16.564"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:16.227" endtime="20201115 22:12:16.566"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:16.577" level="INFO">${RESULT} = [{'time': 0.028822583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.986000000000492e-06, 'source_diff': 6.986000000000492e-06}, {'time': 0.029126903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:12:16.567" endtime="20201115 22:12:16.577"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:16.607" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:12:16.579" endtime="20201115 22:12:16.607"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:16.618" level="INFO">NAME: 00-overhead-20-remove</msg>
<status status="PASS" starttime="20201115 22:12:16.615" endtime="20201115 22:12:16.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:16.623" level="INFO">VALUE: [6.986000000000492e-06, 6.944999999997786e-06, 6.986000000000492e-06, 6.986000000000492e-06, 7.000000000000062e-06, 6.9579999999978825e-06, 6.986000000000492e-06, 6.9719999999974525e-06, 6.986000000000492e-06, 7.000000000000062e-06, 6.986000000000492e-06, 6.986000000000492e-06, 6.9730000000003955e-06, 6.959000000000826e-06, 6.972000000000922e-06, 6.9869999999999655e-06, 7.000000000000062e-06, 7.000000000000062e-06, 6.986000000000492e-06, 6.986000000000492e-06, 6.986000000000492e-06, 6.986000000000492e-06, 6.958000000001352e-06, 6.972000000000922e-06, 7.000000000000062e-06, 6.917000000002116e-06, 6.986000000000492e-06, 7.000000000000062e-06, 6.972000000000922e-06, 6.986000000000492e-06, 7.000000000000062e-06, 6.9869999999999655e-06, 6.986000000000492e-06, 6.986000000000492e-06, 7.040999999999298e-06, 7.000000000000062e-06, 6.986000000000492e-06, 6.986000000000492e-06, 6.986000000000492e-06, 6.986000000000492e-06, 6.959000000000826e-06, 6.986000000000492e-06, 7.0279999999992016e-06, 7.000000000000062e-06, 6.986000000000492e-06, 7.000000000000062e-06, 7.0419999999987715e-06, 6.972000000000922e-06, 6.986000000000492e-06, 6.9869999999999655e-06]</msg>
<status status="PASS" starttime="20201115 22:12:16.620" endtime="20201115 22:12:16.624"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:16.609" endtime="20201115 22:12:16.626"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:16.632" endtime="20201115 22:12:16.635"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:16.641" endtime="20201115 22:12:16.663"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:16.636" endtime="20201115 22:12:16.664"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:16.627" endtime="20201115 22:12:16.666"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:16.181" endtime="20201115 22:12:16.667"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:16.179" endtime="20201115 22:12:16.667"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:16.179" endtime="20201115 22:12:16.668"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:16.672" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:16.695" endtime="20201115 22:12:16.724"></status>
</kw>
<msg timestamp="20201115 22:12:16.725" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:16.692" endtime="20201115 22:12:16.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:16.732" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:16.727" endtime="20201115 22:12:16.732"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:16.734" endtime="20201115 22:12:16.738"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:16.685" endtime="20201115 22:12:16.739"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:16.679" endtime="20201115 22:12:16.741"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:16.757" endtime="20201115 22:12:17.093"></status>
</kw>
<msg timestamp="20201115 22:12:17.100" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048086528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048093847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:16.754" endtime="20201115 22:12:17.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:17.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048086528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048093847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:17.102" endtime="20201115 22:12:17.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:17.121" endtime="20201115 22:12:17.125"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:16.747" endtime="20201115 22:12:17.126"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:16.742" endtime="20201115 22:12:17.128"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:17.139" level="INFO">${RESULT} = [{'time': 0.048093847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.318999999998688e-06, 'source_diff': 7.318999999998688e-06}, {'time': 0.048422458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:12:17.129" endtime="20201115 22:12:17.139"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:17.172" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:12:17.141" endtime="20201115 22:12:17.172"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:17.183" level="INFO">NAME: 00-overhead-21-remove</msg>
<status status="PASS" starttime="20201115 22:12:17.180" endtime="20201115 22:12:17.183"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:17.188" level="INFO">VALUE: [7.318999999998688e-06, 7.263999999999882e-06, 7.2779999999994516e-06, 7.2919999999990215e-06, 7.207999999994663e-06, 7.290999999999548e-06, 7.2919999999990215e-06, 7.250000000000312e-06, 7.2779999999994516e-06, 7.2230000000006456e-06, 7.263999999999882e-06, 7.263999999999882e-06, 7.290999999999548e-06, 7.263999999999882e-06, 7.290999999999548e-06, 7.236000000000742e-06, 7.2779999999994516e-06, 7.250000000000312e-06, 7.250000000000312e-06, 7.304999999999118e-06, 7.2370000000002155e-06, 7.2919999999990215e-06, 2.4056000000001465e-05, 7.263999999999882e-06, 7.222000000001172e-06, 7.236000000000742e-06, 7.2779999999994516e-06, 7.2779999999994516e-06, 7.2779999999994516e-06, 7.276999999999978e-06, 7.263999999999882e-06, 7.319999999998161e-06, 7.290999999999548e-06, 7.276999999999978e-06, 7.2779999999994516e-06, 7.263999999999882e-06, 7.2779999999994516e-06, 7.290999999999548e-06, 7.2919999999990215e-06, 7.276999999999978e-06, 7.2779999999994516e-06, 7.276999999999978e-06, 7.236000000000742e-06, 7.250000000000312e-06, 7.263999999999882e-06, 7.290999999992609e-06, 7.276999999999978e-06, 7.222000000001172e-06, 7.347000000004766e-06, 7.291000000006487e-06]</msg>
<status status="PASS" starttime="20201115 22:12:17.185" endtime="20201115 22:12:17.189"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:17.173" endtime="20201115 22:12:17.191"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:17.198" endtime="20201115 22:12:17.200"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:17.206" endtime="20201115 22:12:17.227"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:17.202" endtime="20201115 22:12:17.229"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:17.193" endtime="20201115 22:12:17.231"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:16.674" endtime="20201115 22:12:17.231"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:16.670" endtime="20201115 22:12:17.232"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:16.668" endtime="20201115 22:12:17.232"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:17.237" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:17.260" endtime="20201115 22:12:17.292"></status>
</kw>
<msg timestamp="20201115 22:12:17.293" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:17.257" endtime="20201115 22:12:17.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:17.299" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:17.295" endtime="20201115 22:12:17.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:17.301" endtime="20201115 22:12:17.305"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:17.249" endtime="20201115 22:12:17.307"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:17.244" endtime="20201115 22:12:17.308"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:17.325" endtime="20201115 22:12:17.658"></status>
</kw>
<msg timestamp="20201115 22:12:17.665" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047981292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047988819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:17.321" endtime="20201115 22:12:17.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:17.683" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047981292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047988819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:17.667" endtime="20201115 22:12:17.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:17.686" endtime="20201115 22:12:17.691"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:17.314" endtime="20201115 22:12:17.693"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:17.309" endtime="20201115 22:12:17.694"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:17.705" level="INFO">${RESULT} = [{'time': 0.047988819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.527000000000228e-06, 'source_diff': 7.527000000000228e-06}, {'time': 0.048336375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:12:17.696" endtime="20201115 22:12:17.706"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:17.735" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:12:17.707" endtime="20201115 22:12:17.736"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:17.746" level="INFO">NAME: 00-overhead-22-remove</msg>
<status status="PASS" starttime="20201115 22:12:17.744" endtime="20201115 22:12:17.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:17.753" level="INFO">VALUE: [7.527000000000228e-06, 7.582999999998508e-06, 7.554999999999368e-06, 7.569999999998411e-06, 7.5969999999980775e-06, 7.568999999998938e-06, 7.5419999999992715e-06, 7.582999999998508e-06, 7.568999999998938e-06, 7.5419999999992715e-06, 7.569999999998411e-06, 7.514000000000132e-06, 7.582999999998508e-06, 7.555999999998841e-06, 7.583999999997981e-06, 7.554999999999368e-06, 7.555999999998841e-06, 7.568999999998938e-06, 7.555999999998841e-06, 7.555999999998841e-06, 7.527000000000228e-06, 7.5830000000054465e-06, 7.568999999998938e-06, 7.568999999998938e-06, 7.582999999998508e-06, 7.555999999998841e-06, 7.583999999997981e-06, 7.5419999999992715e-06, 7.582999999998508e-06, 7.569999999998411e-06, 7.555999999998841e-06, 7.57000000000535e-06, 7.5969999999980775e-06, 7.569999999998411e-06, 7.569999999998411e-06, 7.514000000000132e-06, 7.597999999997551e-06, 7.582999999998508e-06, 7.611000000004586e-06, 7.555999999998841e-06, 7.57000000000535e-06, 7.582999999998508e-06, 7.5969999999980775e-06, 7.611000000004586e-06, 7.582999999991569e-06, 7.568999999998938e-06, 7.568999999998938e-06, 7.5830000000054465e-06, 7.583999999991042e-06, 7.555000000006307e-06]</msg>
<status status="PASS" starttime="20201115 22:12:17.749" endtime="20201115 22:12:17.753"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:17.737" endtime="20201115 22:12:17.755"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:17.761" endtime="20201115 22:12:17.764"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:17.770" endtime="20201115 22:12:17.791"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:17.765" endtime="20201115 22:12:17.793"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:17.757" endtime="20201115 22:12:17.795"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:17.238" endtime="20201115 22:12:17.795"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:17.235" endtime="20201115 22:12:17.796"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:17.233" endtime="20201115 22:12:17.796"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:17.801" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:17.824" endtime="20201115 22:12:17.856"></status>
</kw>
<msg timestamp="20201115 22:12:17.857" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:17.821" endtime="20201115 22:12:17.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:17.864" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:17.859" endtime="20201115 22:12:17.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:17.866" endtime="20201115 22:12:17.869"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:17.814" endtime="20201115 22:12:17.871"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:17.808" endtime="20201115 22:12:17.873"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:17.890" endtime="20201115 22:12:18.225"></status>
</kw>
<msg timestamp="20201115 22:12:18.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048508514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048516347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:17.886" endtime="20201115 22:12:18.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:18.251" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048508514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048516347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:18.235" endtime="20201115 22:12:18.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:18.253" endtime="20201115 22:12:18.257"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:17.879" endtime="20201115 22:12:18.259"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:17.874" endtime="20201115 22:12:18.260"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:18.271" level="INFO">${RESULT} = [{'time': 0.048516347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.832999999998758e-06, 'source_diff': 7.832999999998758e-06}, {'time': 0.048889403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:12:18.262" endtime="20201115 22:12:18.272"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:18.302" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:12:18.273" endtime="20201115 22:12:18.302"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:18.313" level="INFO">NAME: 00-overhead-23-remove</msg>
<status status="PASS" starttime="20201115 22:12:18.311" endtime="20201115 22:12:18.314"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:18.319" level="INFO">VALUE: [7.832999999998758e-06, 7.846999999998328e-06, 7.902999999996607e-06, 7.860999999997897e-06, 7.847999999997801e-06, 7.860999999997897e-06, 7.804999999999618e-06, 7.860999999997897e-06, 7.875000000004406e-06, 7.846999999998328e-06, 7.860999999997897e-06, 7.860999999997897e-06, 7.833000000005697e-06, 7.875000000004406e-06, 7.875000000004406e-06, 7.861999999997371e-06, 7.861000000004836e-06, 7.860999999997897e-06, 7.874999999997467e-06, 7.860999999997897e-06, 7.847999999997801e-06, 7.874999999997467e-06, 7.861999999997371e-06, 7.847000000005266e-06, 7.846999999998328e-06, 7.874999999997467e-06, 7.860999999997897e-06, 7.860999999997897e-06, 7.860999999997897e-06, 7.874999999997467e-06, 7.846999999998328e-06, 7.791999999999522e-06, 7.860999999997897e-06, 7.874999999997467e-06, 7.903000000003546e-06, 7.861000000004836e-06, 7.860999999997897e-06, 7.861999999997371e-06, 7.860999999990959e-06, 7.860999999997897e-06, 7.875000000004406e-06, 7.847000000005266e-06, 7.860999999997897e-06, 7.777999999999952e-06, 7.860999999997897e-06, 7.860999999997897e-06, 7.860999999997897e-06, 7.847000000005266e-06, 7.847000000005266e-06, 7.887999999997564e-06]</msg>
<status status="PASS" starttime="20201115 22:12:18.315" endtime="20201115 22:12:18.319"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:18.304" endtime="20201115 22:12:18.321"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:18.327" endtime="20201115 22:12:18.330"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:18.336" endtime="20201115 22:12:18.357"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:18.332" endtime="20201115 22:12:18.359"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:18.323" endtime="20201115 22:12:18.361"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:17.802" endtime="20201115 22:12:18.361"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:17.799" endtime="20201115 22:12:18.362"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:17.797" endtime="20201115 22:12:18.362"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:18.367" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:18.390" endtime="20201115 22:12:18.423"></status>
</kw>
<msg timestamp="20201115 22:12:18.425" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:18.387" endtime="20201115 22:12:18.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:18.431" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:18.427" endtime="20201115 22:12:18.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:18.433" endtime="20201115 22:12:18.437"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:18.379" endtime="20201115 22:12:18.438"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:18.374" endtime="20201115 22:12:18.440"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:18.456" endtime="20201115 22:12:18.791"></status>
</kw>
<msg timestamp="20201115 22:12:18.798" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048587306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048595458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:18.453" endtime="20201115 22:12:18.798"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:18.816" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048587306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048595458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:18.800" endtime="20201115 22:12:18.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:18.820" endtime="20201115 22:12:18.825"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:18.446" endtime="20201115 22:12:18.827"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:18.441" endtime="20201115 22:12:18.828"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:18.839" level="INFO">${RESULT} = [{'time': 0.048595458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.152000000004322e-06, 'source_diff': 8.152000000004322e-06}, {'time': 0.048991708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:12:18.830" endtime="20201115 22:12:18.839"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:18.869" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:12:18.841" endtime="20201115 22:12:18.870"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:18.881" level="INFO">NAME: 00-overhead-24-remove</msg>
<status status="PASS" starttime="20201115 22:12:18.878" endtime="20201115 22:12:18.881"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:18.886" level="INFO">VALUE: [8.152000000004322e-06, 8.166000000003892e-06, 8.209000000002076e-06, 8.153000000003796e-06, 8.165999999996953e-06, 8.138999999997287e-06, 8.236000000001742e-06, 8.180999999995997e-06, 8.153000000003796e-06, 8.139000000004226e-06, 8.152999999996857e-06, 8.180999999995997e-06, 8.166999999996427e-06, 8.137999999997814e-06, 8.139000000004226e-06, 8.152999999996857e-06, 8.082999999999008e-06, 8.152999999996857e-06, 8.165999999996953e-06, 8.166999999996427e-06, 8.166999999996427e-06, 8.208999999995137e-06, 8.166999999996427e-06, 8.083999999998481e-06, 8.153000000003796e-06, 8.152999999996857e-06, 8.195000000002506e-06, 8.110999999998147e-06, 8.138999999997287e-06, 8.166000000003892e-06, 8.153000000003796e-06, 8.138999999997287e-06, 8.152000000004322e-06, 8.153000000003796e-06, 8.152999999996857e-06, 8.166999999996427e-06, 8.153000000010735e-06, 8.151999999997384e-06, 8.124999999997717e-06, 8.139000000004226e-06, 8.222000000002172e-06, 8.151999999997384e-06, 8.139000000004226e-06, 8.124999999997717e-06, 8.151999999997384e-06, 8.194000000003032e-06, 8.152999999996857e-06, 8.180999999995997e-06, 8.152999999996857e-06, 8.152000000011261e-06]</msg>
<status status="PASS" starttime="20201115 22:12:18.883" endtime="20201115 22:12:18.887"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:18.871" endtime="20201115 22:12:18.889"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:18.895" endtime="20201115 22:12:18.898"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:18.903" endtime="20201115 22:12:18.925"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:18.899" endtime="20201115 22:12:18.927"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:18.890" endtime="20201115 22:12:18.928"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:18.368" endtime="20201115 22:12:18.929"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:18.365" endtime="20201115 22:12:18.929"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:18.363" endtime="20201115 22:12:18.930"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:18.935" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:18.957" endtime="20201115 22:12:18.992"></status>
</kw>
<msg timestamp="20201115 22:12:18.993" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:18.954" endtime="20201115 22:12:18.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:18.999" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:18.995" endtime="20201115 22:12:19.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:19.002" endtime="20201115 22:12:19.005"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:18.947" endtime="20201115 22:12:19.007"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:18.941" endtime="20201115 22:12:19.008"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:19.026" endtime="20201115 22:12:19.361"></status>
</kw>
<msg timestamp="20201115 22:12:19.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048092083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048100514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:19.022" endtime="20201115 22:12:19.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:19.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048092083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048100514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:19.370" endtime="20201115 22:12:19.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:19.389" endtime="20201115 22:12:19.393"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:19.014" endtime="20201115 22:12:19.394"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:19.010" endtime="20201115 22:12:19.396"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:19.406" level="INFO">${RESULT} = [{'time': 0.048100514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.430999999996247e-06, 'source_diff': 8.430999999996247e-06}, {'time': 0.048520764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:12:19.397" endtime="20201115 22:12:19.407"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:19.440" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:12:19.408" endtime="20201115 22:12:19.440"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:19.451" level="INFO">NAME: 00-overhead-25-remove</msg>
<status status="PASS" starttime="20201115 22:12:19.449" endtime="20201115 22:12:19.452"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:19.456" level="INFO">VALUE: [8.430999999996247e-06, 8.445000000002756e-06, 8.472000000002422e-06, 8.444000000003282e-06, 8.445000000002756e-06, 8.443999999996343e-06, 8.444000000003282e-06, 8.443999999996343e-06, 8.445000000002756e-06, 8.445000000002756e-06, 8.443999999996343e-06, 8.402999999997107e-06, 8.443999999996343e-06, 8.445000000002756e-06, 8.374999999997967e-06, 8.417000000003616e-06, 8.443999999996343e-06, 8.444999999995817e-06, 8.444999999995817e-06, 8.430000000003712e-06, 8.445000000002756e-06, 8.443999999996343e-06, 8.458000000002852e-06, 8.528000000000702e-06, 8.389000000004476e-06, 8.444000000003282e-06, 8.443999999996343e-06, 8.445000000002756e-06, 8.471999999995483e-06, 8.429999999996773e-06, 8.444999999995817e-06, 8.402999999997107e-06, 8.430999999996247e-06, 8.430999999996247e-06, 8.429999999996773e-06, 8.444999999995817e-06, 8.443999999996343e-06, 8.443999999996343e-06, 8.459000000002326e-06, 8.444999999995817e-06, 8.444999999995817e-06, 8.430000000003712e-06, 8.458000000002852e-06, 8.458000000002852e-06, 8.499999999994623e-06, 8.443999999996343e-06, 8.430000000003712e-06, 8.388999999997537e-06, 8.444999999995817e-06, 8.444000000010221e-06]</msg>
<status status="PASS" starttime="20201115 22:12:19.453" endtime="20201115 22:12:19.457"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:19.442" endtime="20201115 22:12:19.459"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:19.465" endtime="20201115 22:12:19.468"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:19.473" endtime="20201115 22:12:19.495"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:19.469" endtime="20201115 22:12:19.497"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:19.461" endtime="20201115 22:12:19.498"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:18.936" endtime="20201115 22:12:19.499"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:18.932" endtime="20201115 22:12:19.499"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:18.931" endtime="20201115 22:12:19.500"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:05.861" endtime="20201115 22:12:19.500"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="teardown">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:19.510" endtime="20201115 22:12:19.532"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:19.506" endtime="20201115 22:12:19.534"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:19.504" endtime="20201115 22:12:19.534"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:12:05.734" endtime="20201115 22:12:19.535" critical="yes"></status>
</test>
<status status="PASS" starttime="20201115 22:11:47.960" endtime="20201115 22:12:19.549"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">nucleo-f103rb</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="PASS" starttime="20201115 22:11:44.212" endtime="20201115 22:12:19.591"></status>
</suite>
<statistics>
<total>
<stat pass="5" fail="0">Critical Tests</stat>
<stat pass="5" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="5" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="5" fail="0">BOARD_nucleo-f103rb</stat>
<stat pass="5" fail="0">dev</stat>
</tag>
<suite>
<stat pass="5" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="4" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
