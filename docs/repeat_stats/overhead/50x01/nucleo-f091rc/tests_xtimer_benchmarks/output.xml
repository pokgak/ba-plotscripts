<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201115 22:11:27.785" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201115 22:11:28.343" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201115 22:11:28.352" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201115 22:11:29.452" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201115 22:11:28.342" endtime="20201115 22:11:29.453"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201115 22:11:29.455" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201115 22:11:29.454" endtime="20201115 22:11:29.456"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:28.341" endtime="20201115 22:11:29.456"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:29.459" endtime="20201115 22:11:29.644"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:29.457" endtime="20201115 22:11:29.645"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:29.658" endtime="20201115 22:11:29.673"></status>
</kw>
<msg timestamp="20201115 22:11:29.673" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': [': This is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success...</msg>
<status status="PASS" starttime="20201115 22:11:29.656" endtime="20201115 22:11:29.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:29.676" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': [': This is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success...</msg>
<status status="PASS" starttime="20201115 22:11:29.674" endtime="20201115 22:11:29.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:11:29.679" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:11:29.677" endtime="20201115 22:11:29.679"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:29.654" endtime="20201115 22:11:29.680"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:29.652" endtime="20201115 22:11:29.680"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:29.650" endtime="20201115 22:11:29.681"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:11:29.685" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:11:29.684" endtime="20201115 22:11:29.685"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:29.682" endtime="20201115 22:11:29.685"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:29.649" endtime="20201115 22:11:29.685"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:29.649" endtime="20201115 22:11:29.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:29.686" endtime="20201115 22:11:29.688"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:29.647" endtime="20201115 22:11:29.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:29.689" endtime="20201115 22:11:29.691"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:29.646" endtime="20201115 22:11:29.691"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:28.339" endtime="20201115 22:11:29.691"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:29.698" endtime="20201115 22:11:29.717"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:29.696" endtime="20201115 22:11:29.718"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:29.732" endtime="20201115 22:11:29.746"></status>
</kw>
<msg timestamp="20201115 22:11:29.747" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:29.730" endtime="20201115 22:11:29.747"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:29.749" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:29.748" endtime="20201115 22:11:29.750"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:11:29.752" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:11:29.750" endtime="20201115 22:11:29.753"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:29.727" endtime="20201115 22:11:29.753"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:29.725" endtime="20201115 22:11:29.754"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:29.723" endtime="20201115 22:11:29.754"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:11:29.758" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:11:29.757" endtime="20201115 22:11:29.758"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:29.755" endtime="20201115 22:11:29.758"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:29.722" endtime="20201115 22:11:29.758"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:29.721" endtime="20201115 22:11:29.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:29.759" endtime="20201115 22:11:29.761"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:29.720" endtime="20201115 22:11:29.761"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:29.718" endtime="20201115 22:11:29.762"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:29.695" endtime="20201115 22:11:29.762"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:29.769" endtime="20201115 22:11:29.779"></status>
</kw>
<msg timestamp="20201115 22:11:29.780" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:29.767" endtime="20201115 22:11:29.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:29.782" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:29.781" endtime="20201115 22:11:29.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:29.783" endtime="20201115 22:11:29.785"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:29.765" endtime="20201115 22:11:29.785"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:29.763" endtime="20201115 22:11:29.785"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:29.790" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201115 22:11:29.789" endtime="20201115 22:11:29.790"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:29.792" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201115 22:11:29.791" endtime="20201115 22:11:29.792"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:29.786" endtime="20201115 22:11:29.793"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:11:29.692" endtime="20201115 22:11:29.794" critical="yes"></status>
</test>
<status status="PASS" starttime="20201115 22:11:27.896" endtime="20201115 22:11:29.796"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201115 22:11:29.849" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201115 22:11:29.857" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201115 22:11:31.017" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201115 22:11:29.847" endtime="20201115 22:11:31.017"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201115 22:11:31.020" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201115 22:11:31.018" endtime="20201115 22:11:31.020"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:29.846" endtime="20201115 22:11:31.021"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:31.023" endtime="20201115 22:11:31.244"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:31.022" endtime="20201115 22:11:31.245"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:31.257" endtime="20201115 22:11:31.271"></status>
</kw>
<msg timestamp="20201115 22:11:31.271" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['n(): This is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Succ...</msg>
<status status="PASS" starttime="20201115 22:11:31.256" endtime="20201115 22:11:31.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:31.274" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['n(): This is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Succ...</msg>
<status status="PASS" starttime="20201115 22:11:31.273" endtime="20201115 22:11:31.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:11:31.277" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:11:31.275" endtime="20201115 22:11:31.277"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:31.253" endtime="20201115 22:11:31.278"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:31.251" endtime="20201115 22:11:31.278"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:31.250" endtime="20201115 22:11:31.279"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:11:31.283" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:11:31.282" endtime="20201115 22:11:31.283"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:31.280" endtime="20201115 22:11:31.283"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:31.249" endtime="20201115 22:11:31.283"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:31.248" endtime="20201115 22:11:31.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:31.284" endtime="20201115 22:11:31.286"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:31.247" endtime="20201115 22:11:31.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:31.287" endtime="20201115 22:11:31.288"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:31.246" endtime="20201115 22:11:31.289"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:29.845" endtime="20201115 22:11:31.289"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO/">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:31.296" endtime="20201115 22:11:31.316"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:31.293" endtime="20201115 22:11:31.316"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:31.329" endtime="20201115 22:11:31.344"></status>
</kw>
<msg timestamp="20201115 22:11:31.344" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:31.327" endtime="20201115 22:11:31.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:31.347" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:31.345" endtime="20201115 22:11:31.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:11:31.350" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:11:31.348" endtime="20201115 22:11:31.350"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:31.325" endtime="20201115 22:11:31.351"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:31.323" endtime="20201115 22:11:31.351"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:31.321" endtime="20201115 22:11:31.351"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:11:31.355" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:11:31.354" endtime="20201115 22:11:31.356"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:31.352" endtime="20201115 22:11:31.356"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:31.321" endtime="20201115 22:11:31.356"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:31.320" endtime="20201115 22:11:31.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:31.357" endtime="20201115 22:11:31.358"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:31.318" endtime="20201115 22:11:31.359"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:31.317" endtime="20201115 22:11:31.359"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:31.292" endtime="20201115 22:11:31.359"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure GPIO Overhead</arg>
</arguments>
<msg timestamp="20201115 22:11:31.362" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:31.369" endtime="20201115 22:11:31.381"></status>
</kw>
<msg timestamp="20201115 22:11:31.381" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:31.368" endtime="20201115 22:11:31.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:31.384" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:31.382" endtime="20201115 22:11:31.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:31.385" endtime="20201115 22:11:31.386"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:31.365" endtime="20201115 22:11:31.387"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:31.364" endtime="20201115 22:11:31.387"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:31.394" endtime="20201115 22:11:31.696"></status>
</kw>
<msg timestamp="20201115 22:11:31.699" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064249264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064249736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:31.392" endtime="20201115 22:11:31.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:31.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064249264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064249736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:31.700" endtime="20201115 22:11:31.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:31.708" endtime="20201115 22:11:31.710"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:31.390" endtime="20201115 22:11:31.710"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:31.388" endtime="20201115 22:11:31.711"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:31.715" level="INFO">${RESULT} = [{'time': 0.064249736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.064262556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:31.711" endtime="20201115 22:11:31.715"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:31.729" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [4.720000000013602e-07, 4.7300000000083386e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.86000000007869e-07, 4.729999999869561e-07, 4.86000000007869e-07, 4.720000000013602e-07, ...</msg>
<status status="PASS" starttime="20201115 22:11:31.716" endtime="20201115 22:11:31.729"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:31.733" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201115 22:11:31.732" endtime="20201115 22:11:31.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:31.736" level="INFO">VALUE: [4.720000000013602e-07, 4.7300000000083386e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.86000000007869e-07, 4.729999999869561e-07, 4.86000000007869e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.859999999939912e-07, 4.859999999939912e-07, 4.86000000007869e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.869999999934649e-07, 4.86000000007869e-07, 4.86000000007869e-07, 4.86000000007869e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999869561e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.859999999939912e-07, 4.859999999939912e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201115 22:11:31.734" endtime="20201115 22:11:31.736"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:31.730" endtime="20201115 22:11:31.737"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:31.739" endtime="20201115 22:11:31.740"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:31.742" endtime="20201115 22:11:31.762"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:31.741" endtime="20201115 22:11:31.762"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:31.737" endtime="20201115 22:11:31.763"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:31.362" endtime="20201115 22:11:31.763"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:31.361" endtime="20201115 22:11:31.763"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:31.767" endtime="20201115 22:11:31.787"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:31.766" endtime="20201115 22:11:31.787"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:31.764" endtime="20201115 22:11:31.788"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:11:31.290" endtime="20201115 22:11:31.788" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:31.795" endtime="20201115 22:11:31.815"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:31.794" endtime="20201115 22:11:31.815"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:31.829" endtime="20201115 22:11:31.843"></status>
</kw>
<msg timestamp="20201115 22:11:31.844" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:31.827" endtime="20201115 22:11:31.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:31.846" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:31.845" endtime="20201115 22:11:31.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:11:31.849" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:11:31.847" endtime="20201115 22:11:31.850"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:31.825" endtime="20201115 22:11:31.851"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:31.823" endtime="20201115 22:11:31.851"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:31.821" endtime="20201115 22:11:31.851"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:11:31.855" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:11:31.854" endtime="20201115 22:11:31.855"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:31.852" endtime="20201115 22:11:31.856"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:31.820" endtime="20201115 22:11:31.856"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:31.819" endtime="20201115 22:11:31.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:31.857" endtime="20201115 22:11:31.858"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:31.817" endtime="20201115 22:11:31.859"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:31.816" endtime="20201115 22:11:31.859"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:31.792" endtime="20201115 22:11:31.859"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer Now Overhead</arg>
</arguments>
<msg timestamp="20201115 22:11:31.862" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:31.869" endtime="20201115 22:11:31.880"></status>
</kw>
<msg timestamp="20201115 22:11:31.881" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:31.868" endtime="20201115 22:11:31.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:31.883" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:31.882" endtime="20201115 22:11:31.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:31.884" endtime="20201115 22:11:31.886"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:31.865" endtime="20201115 22:11:31.886"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:31.864" endtime="20201115 22:11:31.887"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:31.894" endtime="20201115 22:11:32.183"></status>
</kw>
<msg timestamp="20201115 22:11:32.186" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065015653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065018389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:31.892" endtime="20201115 22:11:32.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:32.194" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065015653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065018389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:32.187" endtime="20201115 22:11:32.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:32.195" endtime="20201115 22:11:32.197"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:31.889" endtime="20201115 22:11:32.197"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:31.887" endtime="20201115 22:11:32.198"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:32.202" level="INFO">${RESULT} = [{'time': 0.065018389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7359999999893025e-06, 'source_diff': 2.7359999999893025e-06}, {'time': 0.065032847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:32.198" endtime="20201115 22:11:32.202"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:32.216" level="INFO">${OVERHEAD} = {'source_diff': [2.7359999999893025e-06, 2.665999999998392e-06, 2.6670000000117433e-06, 2.6530000000052345e-06, 2.6530000000052345e-06, 2.6669999999978655e-06, 2.6669999999978655e-06, 2.62500000000609...</msg>
<status status="PASS" starttime="20201115 22:11:32.203" endtime="20201115 22:11:32.216"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:32.220" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201115 22:11:32.219" endtime="20201115 22:11:32.221"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:32.223" level="INFO">VALUE: [2.7359999999893025e-06, 2.665999999998392e-06, 2.6670000000117433e-06, 2.6530000000052345e-06, 2.6530000000052345e-06, 2.6669999999978655e-06, 2.6669999999978655e-06, 2.6250000000060947e-06, 2.665999999998392e-06, 2.665999999998392e-06, 2.665999999998392e-06, 2.6530000000052345e-06, 2.6669999999978655e-06, 2.665999999998392e-06, 2.6529999999913567e-06, 2.6939999999975317e-06, 2.6800000000049007e-06, 2.610999999999586e-06, 2.665999999998392e-06, 2.6669999999978655e-06, 2.7499999999958114e-06, 2.7219999999966715e-06, 2.6660000000122697e-06, 2.665999999998392e-06, 2.6670000000117433e-06, 2.6810000000043743e-06, 2.665999999998392e-06, 2.6530000000052345e-06, 2.6669999999978655e-06, 2.6669999999978655e-06, 2.652000000005761e-06, 2.665999999998392e-06, 2.6530000000052345e-06, 2.665999999998392e-06, 2.679999999991023e-06, 2.6669999999978655e-06, 2.6669999999978655e-06, 2.6670000000117433e-06, 2.6669999999978655e-06, 2.6669999999978655e-06, 2.6250000000060947e-06, 2.6660000000122697e-06, 2.6669999999978655e-06, 2.6669999999978655e-06, 2.7219999999966715e-06, 2.6949999999970053e-06, 2.6810000000043743e-06, 2.665999999998392e-06, 2.665999999998392e-06, 2.6529999999913567e-06]</msg>
<status status="PASS" starttime="20201115 22:11:32.221" endtime="20201115 22:11:32.223"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.217" endtime="20201115 22:11:32.224"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:32.226" endtime="20201115 22:11:32.227"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:32.229" endtime="20201115 22:11:32.249"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.228" endtime="20201115 22:11:32.249"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.224" endtime="20201115 22:11:32.250"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:31.862" endtime="20201115 22:11:32.250"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:31.860" endtime="20201115 22:11:32.250"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:32.254" endtime="20201115 22:11:32.274"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.253" endtime="20201115 22:11:32.274"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.252" endtime="20201115 22:11:32.275"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:11:31.790" endtime="20201115 22:11:32.275" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set List">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:32.282" endtime="20201115 22:11:32.302"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.281" endtime="20201115 22:11:32.302"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:32.316" endtime="20201115 22:11:32.330"></status>
</kw>
<msg timestamp="20201115 22:11:32.331" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:32.314" endtime="20201115 22:11:32.331"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:32.333" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:32.332" endtime="20201115 22:11:32.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:11:32.336" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:11:32.334" endtime="20201115 22:11:32.337"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:32.311" endtime="20201115 22:11:32.337"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:32.309" endtime="20201115 22:11:32.338"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.307" endtime="20201115 22:11:32.338"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:11:32.342" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:11:32.341" endtime="20201115 22:11:32.342"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.339" endtime="20201115 22:11:32.343"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.307" endtime="20201115 22:11:32.343"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.306" endtime="20201115 22:11:32.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:32.344" endtime="20201115 22:11:32.346"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.305" endtime="20201115 22:11:32.346"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.303" endtime="20201115 22:11:32.347"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.279" endtime="20201115 22:11:32.347"></status>
</kw>
<kw name="${n} IN RANGE [ 25 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:32.350" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:32.359" endtime="20201115 22:11:32.375"></status>
</kw>
<msg timestamp="20201115 22:11:32.376" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:32.357" endtime="20201115 22:11:32.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:32.378" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:32.377" endtime="20201115 22:11:32.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:32.379" endtime="20201115 22:11:32.381"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.355" endtime="20201115 22:11:32.381"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.353" endtime="20201115 22:11:32.382"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:32.388" endtime="20201115 22:11:32.676"></status>
</kw>
<msg timestamp="20201115 22:11:32.679" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068812014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068819514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:32.387" endtime="20201115 22:11:32.679"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:32.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068812014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068819514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:32.680" endtime="20201115 22:11:32.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:32.688" endtime="20201115 22:11:32.690"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.384" endtime="20201115 22:11:32.690"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.382" endtime="20201115 22:11:32.691"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:32.695" level="INFO">${RESULT} = [{'time': 0.068819514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.499999999993623e-06, 'source_diff': 7.499999999993623e-06}, {'time': 0.068938069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:32.692" endtime="20201115 22:11:32.695"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:32.709" level="INFO">${OVERHEAD} = {'source_diff': [7.499999999993623e-06, 7.555000000006307e-06, 7.5280000000066405e-06, 7.514000000000132e-06, 7.540999999999798e-06, 7.5280000000066405e-06, 7.5419999999992715e-06, 7.514000000000132e-...</msg>
<status status="PASS" starttime="20201115 22:11:32.696" endtime="20201115 22:11:32.709"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:32.713" level="INFO">NAME: 00-overhead-1-set</msg>
<status status="PASS" starttime="20201115 22:11:32.712" endtime="20201115 22:11:32.713"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:32.716" level="INFO">VALUE: [7.499999999993623e-06, 7.555000000006307e-06, 7.5280000000066405e-06, 7.514000000000132e-06, 7.540999999999798e-06, 7.5280000000066405e-06, 7.5419999999992715e-06, 7.514000000000132e-06, 7.514000000000132e-06, 7.514000000000132e-06, 7.527999999992763e-06, 7.4870000000004655e-06, 7.499999999993623e-06, 7.458000000001852e-06, 7.5280000000066405e-06, 7.540999999999798e-06, 7.527000000007167e-06, 7.5280000000066405e-06, 7.583999999991042e-06, 7.514000000000132e-06, 7.568999999998938e-06, 7.5280000000066405e-06, 7.5419999999992715e-06, 7.5830000000054465e-06, 7.5280000000066405e-06, 7.5280000000066405e-06, 7.5280000000066405e-06, 7.513000000000658e-06, 7.5559999999919025e-06, 7.5280000000066405e-06, 7.5830000000054465e-06, 7.568999999998938e-06, 7.5280000000066405e-06, 7.514000000000132e-06, 7.514000000000132e-06, 7.514000000000132e-06, 7.471999999994483e-06, 7.499999999993623e-06, 7.514000000000132e-06, 7.514000000000132e-06, 7.499999999993623e-06, 7.514000000000132e-06, 7.527000000007167e-06, 7.499999999993623e-06, 7.514000000000132e-06, 7.514000000000132e-06, 7.486000000000992e-06, 7.514000000000132e-06, 7.5969999999980775e-06, 7.514000000000132e-06]</msg>
<status status="PASS" starttime="20201115 22:11:32.714" endtime="20201115 22:11:32.716"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.710" endtime="20201115 22:11:32.717"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:32.719" endtime="20201115 22:11:32.720"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:32.723" endtime="20201115 22:11:32.742"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.721" endtime="20201115 22:11:32.742"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.717" endtime="20201115 22:11:32.743"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.351" endtime="20201115 22:11:32.743"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.349" endtime="20201115 22:11:32.743"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.348" endtime="20201115 22:11:32.743"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:32.746" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:32.754" endtime="20201115 22:11:32.771"></status>
</kw>
<msg timestamp="20201115 22:11:32.772" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:32.753" endtime="20201115 22:11:32.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:32.774" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:32.773" endtime="20201115 22:11:32.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:32.775" endtime="20201115 22:11:32.777"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.750" endtime="20201115 22:11:32.777"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.748" endtime="20201115 22:11:32.778"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:32.784" endtime="20201115 22:11:33.070"></status>
</kw>
<msg timestamp="20201115 22:11:33.073" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024452875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024460306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:32.783" endtime="20201115 22:11:33.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:33.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024452875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024460306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:33.074" endtime="20201115 22:11:33.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:33.082" endtime="20201115 22:11:33.084"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.780" endtime="20201115 22:11:33.084"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.778" endtime="20201115 22:11:33.085"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:33.089" level="INFO">${RESULT} = [{'time': 0.024460306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.431000000002186e-06, 'source_diff': 7.431000000002186e-06}, {'time': 0.0245845, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:11:33.085" endtime="20201115 22:11:33.089"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:33.102" level="INFO">${OVERHEAD} = {'source_diff': [7.431000000002186e-06, 7.485999999997522e-06, 7.459000000001326e-06, 7.473000000000896e-06, 7.458999999997856e-06, 7.457999999998383e-06, 7.472000000001422e-06, 7.472000000001422e-06,...</msg>
<status status="PASS" starttime="20201115 22:11:33.090" endtime="20201115 22:11:33.103"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:33.107" level="INFO">NAME: 00-overhead-2-set</msg>
<status status="PASS" starttime="20201115 22:11:33.106" endtime="20201115 22:11:33.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:33.110" level="INFO">VALUE: [7.431000000002186e-06, 7.485999999997522e-06, 7.459000000001326e-06, 7.473000000000896e-06, 7.458999999997856e-06, 7.457999999998383e-06, 7.472000000001422e-06, 7.472000000001422e-06, 7.472000000001422e-06, 7.472000000001422e-06, 7.527999999999702e-06, 7.430999999998716e-06, 7.500000000000562e-06, 7.500000000000562e-06, 7.486000000000992e-06, 7.527999999999702e-06, 7.486000000000992e-06, 7.527999999999702e-06, 7.500000000000562e-06, 7.514000000000132e-06, 7.4870000000004655e-06, 7.486000000000992e-06, 7.485999999997522e-06, 7.500000000000562e-06, 7.527999999999702e-06, 7.473000000000896e-06, 7.485999999997522e-06, 7.4719999999979525e-06, 7.4719999999979525e-06, 7.486000000000992e-06, 7.500000000000562e-06, 7.485999999997522e-06, 7.486000000000992e-06, 7.444999999998286e-06, 7.486000000000992e-06, 7.459000000001326e-06, 7.472000000001422e-06, 7.443999999998813e-06, 7.472000000001422e-06, 7.472000000001422e-06, 7.472000000001422e-06, 7.415999999999673e-06, 7.472000000001422e-06, 7.457999999998383e-06, 7.458000000001852e-06, 7.4719999999979525e-06, 7.443999999998813e-06, 7.514000000000132e-06, 7.472000000001422e-06, 7.485999999997522e-06]</msg>
<status status="PASS" starttime="20201115 22:11:33.108" endtime="20201115 22:11:33.110"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.103" endtime="20201115 22:11:33.111"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:33.113" endtime="20201115 22:11:33.114"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:33.116" endtime="20201115 22:11:33.136"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.115" endtime="20201115 22:11:33.136"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.111" endtime="20201115 22:11:33.137"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.746" endtime="20201115 22:11:33.137"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.745" endtime="20201115 22:11:33.137"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.744" endtime="20201115 22:11:33.137"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:33.140" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:33.148" endtime="20201115 22:11:33.165"></status>
</kw>
<msg timestamp="20201115 22:11:33.165" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:33.147" endtime="20201115 22:11:33.165"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:33.167" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:33.166" endtime="20201115 22:11:33.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:33.168" endtime="20201115 22:11:33.170"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.144" endtime="20201115 22:11:33.171"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.142" endtime="20201115 22:11:33.171"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:33.177" endtime="20201115 22:11:33.464"></status>
</kw>
<msg timestamp="20201115 22:11:33.467" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024750292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024758778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:33.176" endtime="20201115 22:11:33.467"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:33.474" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024750292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024758778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:33.468" endtime="20201115 22:11:33.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:33.476" endtime="20201115 22:11:33.477"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.173" endtime="20201115 22:11:33.478"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.172" endtime="20201115 22:11:33.478"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:33.482" level="INFO">${RESULT} = [{'time': 0.024758778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.485999999998523e-06, 'source_diff': 8.485999999998523e-06}, {'time': 0.024888806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:33.479" endtime="20201115 22:11:33.482"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:33.496" level="INFO">${OVERHEAD} = {'source_diff': [8.485999999998523e-06, 8.499999999998092e-06, 8.499999999998092e-06, 8.499999999998092e-06, 8.499999999998092e-06, 8.513999999997662e-06, 8.500000000001562e-06, 8.555999999999842e-06,...</msg>
<status status="PASS" starttime="20201115 22:11:33.484" endtime="20201115 22:11:33.497"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:33.501" level="INFO">NAME: 00-overhead-3-set</msg>
<status status="PASS" starttime="20201115 22:11:33.500" endtime="20201115 22:11:33.501"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:33.503" level="INFO">VALUE: [8.485999999998523e-06, 8.499999999998092e-06, 8.499999999998092e-06, 8.499999999998092e-06, 8.499999999998092e-06, 8.513999999997662e-06, 8.500000000001562e-06, 8.555999999999842e-06, 8.500000000001562e-06, 8.471999999998953e-06, 8.499999999998092e-06, 8.500000000001562e-06, 8.485999999998523e-06, 8.499999999998092e-06, 8.500000000001562e-06, 8.513999999997662e-06, 8.500000000001562e-06, 8.513999999997662e-06, 8.486999999997996e-06, 8.499999999998092e-06, 8.500000000001562e-06, 8.500000000001562e-06, 8.514000000001132e-06, 8.485999999998523e-06, 8.457999999999383e-06, 8.499999999998092e-06, 8.514000000001132e-06, 8.445000000002756e-06, 8.499999999998092e-06, 8.528000000000702e-06, 8.444999999999286e-06, 8.500000000001562e-06, 8.499999999998092e-06, 8.500000000001562e-06, 8.514000000001132e-06, 8.499999999998092e-06, 8.443999999999813e-06, 8.500000000001562e-06, 8.485999999998523e-06, 8.514000000001132e-06, 8.500000000001562e-06, 8.485999999998523e-06, 8.514000000001132e-06, 8.471999999998953e-06, 8.485999999998523e-06, 8.499999999998092e-06, 8.500000000001562e-06, 8.527000000001228e-06, 8.499999999998092e-06, 8.514000000001132e-06]</msg>
<status status="PASS" starttime="20201115 22:11:33.502" endtime="20201115 22:11:33.504"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.497" endtime="20201115 22:11:33.504"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:33.506" endtime="20201115 22:11:33.508"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:33.510" endtime="20201115 22:11:33.529"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.508" endtime="20201115 22:11:33.530"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.505" endtime="20201115 22:11:33.530"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.140" endtime="20201115 22:11:33.531"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.138" endtime="20201115 22:11:33.531"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.138" endtime="20201115 22:11:33.531"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:33.533" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:33.542" endtime="20201115 22:11:33.561"></status>
</kw>
<msg timestamp="20201115 22:11:33.561" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:33.541" endtime="20201115 22:11:33.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:33.564" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:33.562" endtime="20201115 22:11:33.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:33.565" endtime="20201115 22:11:33.566"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.538" endtime="20201115 22:11:33.567"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.536" endtime="20201115 22:11:33.567"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:33.573" endtime="20201115 22:11:33.860"></status>
</kw>
<msg timestamp="20201115 22:11:33.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025100972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025110528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:33.572" endtime="20201115 22:11:33.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:33.871" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025100972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025110528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:33.864" endtime="20201115 22:11:33.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:33.872" endtime="20201115 22:11:33.874"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.569" endtime="20201115 22:11:33.875"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.568" endtime="20201115 22:11:33.875"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:33.879" level="INFO">${RESULT} = [{'time': 0.025110528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.556000000000842e-06, 'source_diff': 9.556000000000842e-06}, {'time': 0.025248806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:33.876" endtime="20201115 22:11:33.879"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:33.893" level="INFO">${OVERHEAD} = {'source_diff': [9.556000000000842e-06, 9.583999999999981e-06, 9.514000000002132e-06, 9.513999999998662e-06, 9.527999999998232e-06, 9.513999999998662e-06, 9.500000000002562e-06, 9.526999999998759e-06,...</msg>
<status status="PASS" starttime="20201115 22:11:33.880" endtime="20201115 22:11:33.893"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:33.897" level="INFO">NAME: 00-overhead-4-set</msg>
<status status="PASS" starttime="20201115 22:11:33.896" endtime="20201115 22:11:33.898"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:33.900" level="INFO">VALUE: [9.556000000000842e-06, 9.583999999999981e-06, 9.514000000002132e-06, 9.513999999998662e-06, 9.527999999998232e-06, 9.513999999998662e-06, 9.500000000002562e-06, 9.526999999998759e-06, 9.528000000001702e-06, 9.513999999998662e-06, 9.541000000001798e-06, 9.499999999999093e-06, 9.513999999998662e-06, 9.541999999997802e-06, 9.528000000001702e-06, 9.541999999997802e-06, 9.513999999998662e-06, 9.513999999998662e-06, 9.499999999999093e-06, 9.526999999998759e-06, 9.528000000001702e-06, 9.513999999998662e-06, 9.528000000001702e-06, 9.582999999997038e-06, 9.528000000001702e-06, 9.555999999997372e-06, 9.527999999998232e-06, 9.528000000001702e-06, 9.541999999997802e-06, 9.542000000001272e-06, 9.556000000000842e-06, 9.513999999998662e-06, 9.528000000001702e-06, 9.486000000002992e-06, 9.513999999998662e-06, 9.527000000002228e-06, 9.542000000001272e-06, 9.513999999998662e-06, 9.527999999998232e-06, 9.513999999998662e-06, 9.528000000001702e-06, 9.527999999998232e-06, 9.528000000001702e-06, 9.513999999998662e-06, 9.528000000001702e-06, 9.485999999996053e-06, 9.485999999996053e-06, 9.459000000003326e-06, 9.513999999995193e-06, 9.514000000002132e-06]</msg>
<status status="PASS" starttime="20201115 22:11:33.898" endtime="20201115 22:11:33.900"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.894" endtime="20201115 22:11:33.901"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:33.903" endtime="20201115 22:11:33.904"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:33.906" endtime="20201115 22:11:33.925"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.905" endtime="20201115 22:11:33.926"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.901" endtime="20201115 22:11:33.926"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.534" endtime="20201115 22:11:33.927"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.532" endtime="20201115 22:11:33.927"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.531" endtime="20201115 22:11:33.927"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:33.929" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:33.938" endtime="20201115 22:11:33.956"></status>
</kw>
<msg timestamp="20201115 22:11:33.957" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:33.936" endtime="20201115 22:11:33.957"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:33.959" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:33.958" endtime="20201115 22:11:33.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:33.960" endtime="20201115 22:11:33.962"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.934" endtime="20201115 22:11:33.963"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.932" endtime="20201115 22:11:33.963"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:33.970" endtime="20201115 22:11:34.258"></status>
</kw>
<msg timestamp="20201115 22:11:34.261" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024350583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024361125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:33.968" endtime="20201115 22:11:34.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:34.269" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024350583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024361125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:34.262" endtime="20201115 22:11:34.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:34.270" endtime="20201115 22:11:34.272"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.965" endtime="20201115 22:11:34.272"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.964" endtime="20201115 22:11:34.273"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:34.277" level="INFO">${RESULT} = [{'time': 0.024361125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0542000000002272e-05, 'source_diff': 1.0542000000002272e-05}, {'time': 0.024519097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:34.273" endtime="20201115 22:11:34.277"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:34.290" level="INFO">${OVERHEAD} = {'source_diff': [1.0542000000002272e-05, 1.0540999999999329e-05, 1.0540999999999329e-05, 1.0555000000002368e-05, 1.0526999999999759e-05, 1.0556000000001842e-05, 1.0541999999998802e-05, 1.0554999999998...</msg>
<status status="PASS" starttime="20201115 22:11:34.278" endtime="20201115 22:11:34.291"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:34.295" level="INFO">NAME: 00-overhead-5-set</msg>
<status status="PASS" starttime="20201115 22:11:34.294" endtime="20201115 22:11:34.295"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:34.297" level="INFO">VALUE: [1.0542000000002272e-05, 1.0540999999999329e-05, 1.0540999999999329e-05, 1.0555000000002368e-05, 1.0526999999999759e-05, 1.0556000000001842e-05, 1.0541999999998802e-05, 1.0554999999998899e-05, 1.0527999999999232e-05, 1.0542000000002272e-05, 1.0542000000002272e-05, 1.0485999999997053e-05, 1.0541000000002798e-05, 1.0541999999998802e-05, 1.0570000000001412e-05, 1.0541999999998802e-05, 1.0555999999998372e-05, 1.0527999999999232e-05, 1.0528000000002702e-05, 1.0527999999999232e-05, 1.0540999999999329e-05, 1.0542000000002272e-05, 1.0540999999999329e-05, 1.0583000000001508e-05, 1.0541999999998802e-05, 1.0554999999998899e-05, 1.0596999999997608e-05, 1.0528000000002702e-05, 1.0541999999998802e-05, 1.0541000000002798e-05, 1.0486000000000523e-05, 1.0556000000001842e-05, 1.0541999999998802e-05, 1.0554999999998899e-05, 1.0541999999998802e-05, 1.0472000000000953e-05, 1.0542000000002272e-05, 1.0513000000000189e-05, 1.0541000000002798e-05, 1.0526999999999759e-05, 1.0527999999999232e-05, 1.0556000000001842e-05, 1.0541999999998802e-05, 1.0540999999999329e-05, 1.0540999999999329e-05, 1.0513999999999663e-05, 1.0569000000001938e-05, 1.0569000000001938e-05, 1.052699999999629e-05, 1.054099999999586e-05]</msg>
<status status="PASS" starttime="20201115 22:11:34.296" endtime="20201115 22:11:34.298"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.291" endtime="20201115 22:11:34.298"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:34.301" endtime="20201115 22:11:34.302"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:34.304" endtime="20201115 22:11:34.323"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.302" endtime="20201115 22:11:34.324"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.299" endtime="20201115 22:11:34.324"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.930" endtime="20201115 22:11:34.324"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.928" endtime="20201115 22:11:34.325"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.927" endtime="20201115 22:11:34.325"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:34.327" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:34.336" endtime="20201115 22:11:34.354"></status>
</kw>
<msg timestamp="20201115 22:11:34.355" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:34.334" endtime="20201115 22:11:34.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:34.357" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:34.356" endtime="20201115 22:11:34.358"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:34.359" endtime="20201115 22:11:34.360"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.332" endtime="20201115 22:11:34.361"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.329" endtime="20201115 22:11:34.361"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:34.367" endtime="20201115 22:11:34.655"></status>
</kw>
<msg timestamp="20201115 22:11:34.658" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024179306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024190875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:34.366" endtime="20201115 22:11:34.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:34.665" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024179306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024190875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:34.659" endtime="20201115 22:11:34.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:34.667" endtime="20201115 22:11:34.668"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.363" endtime="20201115 22:11:34.669"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.362" endtime="20201115 22:11:34.669"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:34.673" level="INFO">${RESULT} = [{'time': 0.024190875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1568999999999469e-05, 'source_diff': 1.1568999999999469e-05}, {'time': 0.024353944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:34.670" endtime="20201115 22:11:34.673"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:34.687" level="INFO">${OVERHEAD} = {'source_diff': [1.1568999999999469e-05, 1.1568999999999469e-05, 1.1570000000002412e-05, 1.1639000000000788e-05, 1.1554999999999899e-05, 1.1583999999998512e-05, 1.1568999999999469e-05, 1.1555999999999...</msg>
<status status="PASS" starttime="20201115 22:11:34.674" endtime="20201115 22:11:34.687"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:34.692" level="INFO">NAME: 00-overhead-6-set</msg>
<status status="PASS" starttime="20201115 22:11:34.691" endtime="20201115 22:11:34.692"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:34.694" level="INFO">VALUE: [1.1568999999999469e-05, 1.1568999999999469e-05, 1.1570000000002412e-05, 1.1639000000000788e-05, 1.1554999999999899e-05, 1.1583999999998512e-05, 1.1568999999999469e-05, 1.1555999999999372e-05, 1.1568999999999469e-05, 1.1625000000001218e-05, 1.1541999999999802e-05, 1.1569999999998942e-05, 1.1583000000002508e-05, 1.1568999999999469e-05, 1.1569999999998942e-05, 1.1485999999998053e-05, 1.1568999999999469e-05, 1.1582999999999039e-05, 1.1582999999999039e-05, 1.1569999999998942e-05, 1.1568999999999469e-05, 1.1625000000001218e-05, 1.1568999999999469e-05, 1.1569999999998942e-05, 1.1568999999999469e-05, 1.1610999999998178e-05, 1.1541999999999802e-05, 1.1625000000001218e-05, 1.1610999999998178e-05, 1.1556000000002842e-05, 1.1610999999998178e-05, 1.1568999999999469e-05, 1.1569000000002938e-05, 1.1568999999999469e-05, 1.1569999999998942e-05, 1.1541999999999802e-05, 1.1583999999998512e-05, 1.1555999999999372e-05, 1.1556000000002842e-05, 1.1582999999999039e-05, 1.1554999999999899e-05, 1.1583000000002508e-05, 1.1514000000000663e-05, 1.1541999999999802e-05, 1.1583999999995043e-05, 1.1555000000003368e-05, 1.154099999999686e-05, 1.1569000000002938e-05, 2.6471999999999607e-05, 1.1583000000002508e-05]</msg>
<status status="PASS" starttime="20201115 22:11:34.693" endtime="20201115 22:11:34.694"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.688" endtime="20201115 22:11:34.695"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:34.697" endtime="20201115 22:11:34.698"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:34.701" endtime="20201115 22:11:34.720"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.699" endtime="20201115 22:11:34.720"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.695" endtime="20201115 22:11:34.721"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.327" endtime="20201115 22:11:34.721"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.326" endtime="20201115 22:11:34.721"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.325" endtime="20201115 22:11:34.721"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:34.724" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:34.739" endtime="20201115 22:11:34.759"></status>
</kw>
<msg timestamp="20201115 22:11:34.759" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:34.738" endtime="20201115 22:11:34.759"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:34.762" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:34.760" endtime="20201115 22:11:34.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:34.763" endtime="20201115 22:11:34.764"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.735" endtime="20201115 22:11:34.765"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.726" endtime="20201115 22:11:34.765"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:34.771" endtime="20201115 22:11:35.058"></status>
</kw>
<msg timestamp="20201115 22:11:35.061" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031491194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031503778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:34.770" endtime="20201115 22:11:35.061"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:35.069" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031491194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031503778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:35.062" endtime="20201115 22:11:35.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:35.070" endtime="20201115 22:11:35.071"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.767" endtime="20201115 22:11:35.072"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.766" endtime="20201115 22:11:35.072"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:35.076" level="INFO">${RESULT} = [{'time': 0.031503778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2584000000002982e-05, 'source_diff': 1.2584000000002982e-05}, {'time': 0.031675444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:35.073" endtime="20201115 22:11:35.077"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:35.090" level="INFO">${OVERHEAD} = {'source_diff': [1.2584000000002982e-05, 1.255499999999743e-05, 1.2569000000003938e-05, 1.2584000000002982e-05, 1.2597000000003078e-05, 1.2570000000003412e-05, 1.2596999999996139e-05, 1.25690000000039...</msg>
<status status="PASS" starttime="20201115 22:11:35.077" endtime="20201115 22:11:35.091"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:35.095" level="INFO">NAME: 00-overhead-7-set</msg>
<status status="PASS" starttime="20201115 22:11:35.094" endtime="20201115 22:11:35.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:35.097" level="INFO">VALUE: [1.2584000000002982e-05, 1.255499999999743e-05, 1.2569000000003938e-05, 1.2584000000002982e-05, 1.2597000000003078e-05, 1.2570000000003412e-05, 1.2596999999996139e-05, 1.2569000000003938e-05, 1.2583000000003508e-05, 1.2582999999996569e-05, 1.2582999999996569e-05, 1.2611000000002648e-05, 1.2583999999996043e-05, 1.2569000000003938e-05, 1.2569000000003938e-05, 1.2582999999996569e-05, 1.2583000000003508e-05, 1.2611000000002648e-05, 1.2568999999997e-05, 1.2582999999996569e-05, 1.2569000000003938e-05, 1.2583999999996043e-05, 1.2569999999996473e-05, 1.2596999999996139e-05, 1.2597000000003078e-05, 1.2570000000003412e-05, 1.2596999999996139e-05, 1.2583000000003508e-05, 1.2597000000003078e-05, 1.2568999999997e-05, 1.2611000000002648e-05, 1.2583000000003508e-05, 1.2596999999996139e-05, 1.2569999999996473e-05, 1.2611000000002648e-05, 1.2583000000003508e-05, 1.2570000000003412e-05, 1.2582999999996569e-05, 1.2555999999996903e-05, 1.2569999999996473e-05, 1.2611000000002648e-05, 1.2624999999995279e-05, 1.2597000000003078e-05, 1.2584000000002982e-05, 1.2584000000002982e-05, 1.2596999999996139e-05, 1.2597999999995613e-05, 1.2570000000003412e-05, 1.2583000000003508e-05, 1.2570000000003412e-05]</msg>
<status status="PASS" starttime="20201115 22:11:35.096" endtime="20201115 22:11:35.097"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.091" endtime="20201115 22:11:35.098"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:35.100" endtime="20201115 22:11:35.102"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:35.104" endtime="20201115 22:11:35.123"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.102" endtime="20201115 22:11:35.124"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.099" endtime="20201115 22:11:35.124"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.724" endtime="20201115 22:11:35.125"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.723" endtime="20201115 22:11:35.125"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.722" endtime="20201115 22:11:35.125"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:35.127" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:35.136" endtime="20201115 22:11:35.156"></status>
</kw>
<msg timestamp="20201115 22:11:35.156" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:35.134" endtime="20201115 22:11:35.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:35.158" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:35.157" endtime="20201115 22:11:35.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:35.160" endtime="20201115 22:11:35.161"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.132" endtime="20201115 22:11:35.162"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.130" endtime="20201115 22:11:35.162"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:35.168" endtime="20201115 22:11:35.454"></status>
</kw>
<msg timestamp="20201115 22:11:35.457" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024219236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024232861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:35.167" endtime="20201115 22:11:35.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:35.465" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024219236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024232861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:35.458" endtime="20201115 22:11:35.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:35.466" endtime="20201115 22:11:35.468"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.164" endtime="20201115 22:11:35.468"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.163" endtime="20201115 22:11:35.469"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:35.473" level="INFO">${RESULT} = [{'time': 0.024232861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3624999999999748e-05, 'source_diff': 1.3624999999999748e-05}, {'time': 0.024419694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:35.469" endtime="20201115 22:11:35.473"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:35.486" level="INFO">${OVERHEAD} = {'source_diff': [1.3624999999999748e-05, 1.3665999999998985e-05, 1.358299999999757e-05, 1.3596999999997139e-05, 1.3598000000000082e-05, 1.3597000000000609e-05, 1.3611000000000179e-05, 1.35970000000006...</msg>
<status status="PASS" starttime="20201115 22:11:35.474" endtime="20201115 22:11:35.487"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:35.491" level="INFO">NAME: 00-overhead-8-set</msg>
<status status="PASS" starttime="20201115 22:11:35.490" endtime="20201115 22:11:35.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:35.493" level="INFO">VALUE: [1.3624999999999748e-05, 1.3665999999998985e-05, 1.358299999999757e-05, 1.3596999999997139e-05, 1.3598000000000082e-05, 1.3597000000000609e-05, 1.3611000000000179e-05, 1.3597000000000609e-05, 1.3624999999999748e-05, 1.3611000000000179e-05, 1.3653000000002358e-05, 1.3597000000000609e-05, 1.3653000000002358e-05, 1.3611000000000179e-05, 1.3611000000000179e-05, 1.3598000000000082e-05, 1.3597000000000609e-05, 1.3638999999999318e-05, 1.3596999999997139e-05, 1.3611000000000179e-05, 1.3611000000000179e-05, 1.3598000000000082e-05, 1.3611000000000179e-05, 1.3597000000000609e-05, 1.3611000000000179e-05, 1.3597000000000609e-05, 1.3611999999999652e-05, 1.3597000000000609e-05, 1.3583000000001039e-05, 1.3612000000003122e-05, 1.3680999999998028e-05, 1.3598000000000082e-05, 1.3598000000000082e-05, 1.3624999999999748e-05, 1.3610999999996709e-05, 1.3653000000002358e-05, 1.3638999999999318e-05, 1.3610999999996709e-05, 1.3610999999996709e-05, 1.3597000000004078e-05, 1.3528000000005702e-05, 1.3596999999997139e-05, 1.3597999999996613e-05, 1.3611000000003648e-05, 1.3611000000003648e-05, 1.3625000000003218e-05, 1.3610999999996709e-05, 1.3596999999997139e-05, 1.3610999999996709e-05, 1.3596999999997139e-05]</msg>
<status status="PASS" starttime="20201115 22:11:35.492" endtime="20201115 22:11:35.494"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.487" endtime="20201115 22:11:35.495"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:35.497" endtime="20201115 22:11:35.498"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:35.500" endtime="20201115 22:11:35.520"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.499" endtime="20201115 22:11:35.520"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.495" endtime="20201115 22:11:35.521"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.128" endtime="20201115 22:11:35.521"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.126" endtime="20201115 22:11:35.521"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.125" endtime="20201115 22:11:35.521"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:35.524" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:35.532" endtime="20201115 22:11:35.554"></status>
</kw>
<msg timestamp="20201115 22:11:35.555" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:35.531" endtime="20201115 22:11:35.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:35.557" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:35.556" endtime="20201115 22:11:35.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:35.559" endtime="20201115 22:11:35.560"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.528" endtime="20201115 22:11:35.561"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.526" endtime="20201115 22:11:35.561"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:35.568" endtime="20201115 22:11:35.854"></status>
</kw>
<msg timestamp="20201115 22:11:35.857" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024620444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024635042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:35.566" endtime="20201115 22:11:35.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:35.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024620444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024635042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:35.858" endtime="20201115 22:11:35.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:35.866" endtime="20201115 22:11:35.868"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.564" endtime="20201115 22:11:35.868"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.562" endtime="20201115 22:11:35.869"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:35.873" level="INFO">${RESULT} = [{'time': 0.024635042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4598000000001082e-05, 'source_diff': 1.4598000000001082e-05}, {'time': 0.024843972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:35.870" endtime="20201115 22:11:35.873"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:35.887" level="INFO">${OVERHEAD} = {'source_diff': [1.4598000000001082e-05, 1.461099999999771e-05, 1.4611000000001179e-05, 1.4625000000000749e-05, 1.4625000000000749e-05, 1.4652999999999888e-05, 1.4680999999999028e-05, 1.46250000000007...</msg>
<status status="PASS" starttime="20201115 22:11:35.874" endtime="20201115 22:11:35.887"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:35.891" level="INFO">NAME: 00-overhead-9-set</msg>
<status status="PASS" starttime="20201115 22:11:35.890" endtime="20201115 22:11:35.892"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:35.894" level="INFO">VALUE: [1.4598000000001082e-05, 1.461099999999771e-05, 1.4611000000001179e-05, 1.4625000000000749e-05, 1.4625000000000749e-05, 1.4652999999999888e-05, 1.4680999999999028e-05, 1.4625000000000749e-05, 1.454099999999986e-05, 1.4625000000000749e-05, 1.4639000000000318e-05, 1.461099999999771e-05, 1.4639000000000318e-05, 1.4625000000000749e-05, 1.4638999999996849e-05, 1.461099999999771e-05, 1.4625000000000749e-05, 1.4625000000000749e-05, 1.4624999999997279e-05, 1.4652999999999888e-05, 1.4624999999997279e-05, 1.4611000000001179e-05, 1.4625000000000749e-05, 1.4625000000000749e-05, 1.4625000000000749e-05, 1.4611000000001179e-05, 1.4624999999997279e-05, 1.4624999999997279e-05, 1.4679999999999555e-05, 1.4639000000000318e-05, 1.4638999999996849e-05, 1.4639000000000318e-05, 1.4652999999999888e-05, 1.4624999999997279e-05, 1.4707999999995225e-05, 1.455499999999943e-05, 1.461099999999771e-05, 1.4624999999997279e-05, 1.4556000000005842e-05, 1.4625000000004218e-05, 1.4638999999996849e-05, 1.4625000000004218e-05, 1.4624999999997279e-05, 1.461099999999771e-05, 1.461099999999771e-05, 1.4625000000004218e-05, 1.4624999999997279e-05, 1.4541999999999333e-05, 1.461099999999771e-05, 1.4625000000004218e-05]</msg>
<status status="PASS" starttime="20201115 22:11:35.892" endtime="20201115 22:11:35.895"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.888" endtime="20201115 22:11:35.895"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:35.897" endtime="20201115 22:11:35.898"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:35.901" endtime="20201115 22:11:35.920"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.899" endtime="20201115 22:11:35.921"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.896" endtime="20201115 22:11:35.921"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.524" endtime="20201115 22:11:35.921"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.523" endtime="20201115 22:11:35.921"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.522" endtime="20201115 22:11:35.922"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:35.924" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:35.932" endtime="20201115 22:11:35.955"></status>
</kw>
<msg timestamp="20201115 22:11:35.955" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:35.931" endtime="20201115 22:11:35.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:35.957" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:35.956" endtime="20201115 22:11:35.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:35.958" endtime="20201115 22:11:35.960"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.928" endtime="20201115 22:11:35.961"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.926" endtime="20201115 22:11:35.961"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:35.967" endtime="20201115 22:11:36.253"></status>
</kw>
<msg timestamp="20201115 22:11:36.256" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024716944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024732569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:35.966" endtime="20201115 22:11:36.256"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:36.264" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024716944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024732569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:36.257" endtime="20201115 22:11:36.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:36.265" endtime="20201115 22:11:36.267"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.963" endtime="20201115 22:11:36.267"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.962" endtime="20201115 22:11:36.268"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:36.272" level="INFO">${RESULT} = [{'time': 0.024732569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.562499999999828e-05, 'source_diff': 1.562499999999828e-05}, {'time': 0.024955181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:36.268" endtime="20201115 22:11:36.272"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:36.286" level="INFO">${OVERHEAD} = {'source_diff': [1.562499999999828e-05, 1.563900000000132e-05, 1.566700000000046e-05, 1.565300000000089e-05, 1.561100000000218e-05, 1.565300000000089e-05, 1.566700000000046e-05, 1.563900000000132e-05,...</msg>
<status status="PASS" starttime="20201115 22:11:36.273" endtime="20201115 22:11:36.286"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:36.290" level="INFO">NAME: 00-overhead-10-set</msg>
<status status="PASS" starttime="20201115 22:11:36.289" endtime="20201115 22:11:36.291"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:36.293" level="INFO">VALUE: [1.562499999999828e-05, 1.563900000000132e-05, 1.566700000000046e-05, 1.565300000000089e-05, 1.561100000000218e-05, 1.565300000000089e-05, 1.566700000000046e-05, 1.563900000000132e-05, 1.5694999999999598e-05, 1.563900000000132e-05, 1.565300000000089e-05, 1.5651999999997945e-05, 1.562500000000175e-05, 1.563900000000132e-05, 1.563899999999785e-05, 1.5723000000002207e-05, 1.561099999999871e-05, 1.565300000000089e-05, 1.562499999999828e-05, 1.565300000000089e-05, 1.5652000000001415e-05, 1.566700000000046e-05, 1.563900000000132e-05, 1.565299999999742e-05, 1.562499999999828e-05, 1.559699999999914e-05, 1.566699999999699e-05, 1.565300000000089e-05, 1.565300000000089e-05, 1.562499999999828e-05, 1.562499999999828e-05, 1.5639000000004788e-05, 1.5679999999997085e-05, 1.565299999999742e-05, 1.563899999999785e-05, 1.5637999999998375e-05, 1.563899999999785e-05, 1.562499999999828e-05, 1.5653000000004358e-05, 1.5653000000004358e-05, 1.5569e-05, 1.563899999999785e-05, 1.563899999999785e-05, 1.5708000000003164e-05, 1.565299999999742e-05, 1.5667000000003928e-05, 1.562499999999828e-05, 1.563899999999785e-05, 1.5651999999997945e-05, 1.563899999999785e-05]</msg>
<status status="PASS" starttime="20201115 22:11:36.292" endtime="20201115 22:11:36.293"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.287" endtime="20201115 22:11:36.294"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:36.296" endtime="20201115 22:11:36.297"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:36.299" endtime="20201115 22:11:36.319"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.298" endtime="20201115 22:11:36.319"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.294" endtime="20201115 22:11:36.320"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.924" endtime="20201115 22:11:36.320"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.923" endtime="20201115 22:11:36.320"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.922" endtime="20201115 22:11:36.320"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:36.323" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:36.331" endtime="20201115 22:11:36.353"></status>
</kw>
<msg timestamp="20201115 22:11:36.354" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:36.330" endtime="20201115 22:11:36.354"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:36.356" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:36.355" endtime="20201115 22:11:36.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:36.357" endtime="20201115 22:11:36.359"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.327" endtime="20201115 22:11:36.359"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.325" endtime="20201115 22:11:36.360"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:36.366" endtime="20201115 22:11:36.653"></status>
</kw>
<msg timestamp="20201115 22:11:36.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024711417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024728111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:36.365" endtime="20201115 22:11:36.656"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:36.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024711417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024728111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:36.657" endtime="20201115 22:11:36.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:36.665" endtime="20201115 22:11:36.667"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.362" endtime="20201115 22:11:36.667"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.361" endtime="20201115 22:11:36.668"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:36.672" level="INFO">${RESULT} = [{'time': 0.024728111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6694000000001125e-05, 'source_diff': 1.6694000000001125e-05}, {'time': 0.024961556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:36.668" endtime="20201115 22:11:36.672"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:36.685" level="INFO">${OVERHEAD} = {'source_diff': [1.6694000000001125e-05, 1.666699999999799e-05, 1.6666000000001985e-05, 1.665299999999842e-05, 1.6666000000001985e-05, 1.6665999999998515e-05, 1.668100000000103e-05, 1.6666000000001985...</msg>
<status status="PASS" starttime="20201115 22:11:36.673" endtime="20201115 22:11:36.686"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:36.690" level="INFO">NAME: 00-overhead-11-set</msg>
<status status="PASS" starttime="20201115 22:11:36.689" endtime="20201115 22:11:36.690"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:36.692" level="INFO">VALUE: [1.6694000000001125e-05, 1.666699999999799e-05, 1.6666000000001985e-05, 1.665299999999842e-05, 1.6666000000001985e-05, 1.6665999999998515e-05, 1.668100000000103e-05, 1.6666000000001985e-05, 1.663899999999885e-05, 1.666699999999799e-05, 1.6722000000000264e-05, 1.668099999999756e-05, 1.668099999999756e-05, 1.668100000000103e-05, 1.668100000000103e-05, 1.666699999999799e-05, 1.6665999999998515e-05, 1.666700000000146e-05, 1.666700000000146e-05, 1.666699999999799e-05, 1.6666000000001985e-05, 1.666700000000146e-05, 1.668100000000103e-05, 1.6708000000000695e-05, 1.666700000000146e-05, 1.6694000000001125e-05, 1.6665999999998515e-05, 1.665300000000189e-05, 1.6679999999998085e-05, 1.666699999999799e-05, 1.6681000000004498e-05, 1.666699999999799e-05, 1.6665999999998515e-05, 1.666699999999799e-05, 1.6679999999998085e-05, 1.6637999999999376e-05, 1.6652000000005884e-05, 1.668099999999756e-05, 1.669499999999713e-05, 1.665299999999842e-05, 1.666699999999799e-05, 1.6653000000005358e-05, 1.666699999999799e-05, 1.6651999999998945e-05, 1.6708000000004164e-05, 1.6584000000000043e-05, 1.6679999999998085e-05, 1.6679999999998085e-05, 1.6639000000005788e-05, 1.6666000000005454e-05]</msg>
<status status="PASS" starttime="20201115 22:11:36.691" endtime="20201115 22:11:36.693"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.686" endtime="20201115 22:11:36.693"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:36.696" endtime="20201115 22:11:36.697"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:36.699" endtime="20201115 22:11:36.718"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.697" endtime="20201115 22:11:36.719"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.694" endtime="20201115 22:11:36.719"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.323" endtime="20201115 22:11:36.720"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.321" endtime="20201115 22:11:36.720"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.321" endtime="20201115 22:11:36.720"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:36.722" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:36.731" endtime="20201115 22:11:36.753"></status>
</kw>
<msg timestamp="20201115 22:11:36.754" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:36.729" endtime="20201115 22:11:36.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:36.756" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:36.755" endtime="20201115 22:11:36.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:36.757" endtime="20201115 22:11:36.759"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.727" endtime="20201115 22:11:36.759"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.725" endtime="20201115 22:11:36.760"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:36.767" endtime="20201115 22:11:37.054"></status>
</kw>
<msg timestamp="20201115 22:11:37.057" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024506167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024523833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:36.765" endtime="20201115 22:11:37.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:37.065" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024506167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024523833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:37.058" endtime="20201115 22:11:37.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:37.066" endtime="20201115 22:11:37.068"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.762" endtime="20201115 22:11:37.068"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.760" endtime="20201115 22:11:37.069"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:37.073" level="INFO">${RESULT} = [{'time': 0.024523833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7665999999999515e-05, 'source_diff': 1.7665999999999515e-05}, {'time': 0.024781833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:37.069" endtime="20201115 22:11:37.073"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:37.086" level="INFO">${OVERHEAD} = {'source_diff': [1.7665999999999515e-05, 1.7679999999999085e-05, 1.7707999999998225e-05, 1.7708000000001695e-05, 1.7665999999999515e-05, 1.76950000000016e-05, 1.768100000000203e-05, 1.7721999999997795...</msg>
<status status="PASS" starttime="20201115 22:11:37.074" endtime="20201115 22:11:37.087"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:37.091" level="INFO">NAME: 00-overhead-12-set</msg>
<status status="PASS" starttime="20201115 22:11:37.090" endtime="20201115 22:11:37.091"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:37.093" level="INFO">VALUE: [1.7665999999999515e-05, 1.7679999999999085e-05, 1.7707999999998225e-05, 1.7708000000001695e-05, 1.7665999999999515e-05, 1.76950000000016e-05, 1.768100000000203e-05, 1.7721999999997795e-05, 1.76950000000016e-05, 1.7666000000002985e-05, 1.7723000000000738e-05, 1.768099999999856e-05, 1.7721999999997795e-05, 1.76950000000016e-05, 1.768100000000203e-05, 1.76950000000016e-05, 1.762500000000028e-05, 1.761100000000071e-05, 1.7750000000000404e-05, 3.77919999999983e-05, 1.768100000000203e-05, 1.762500000000028e-05, 1.769499999999813e-05, 1.768099999999856e-05, 1.766700000000246e-05, 1.7763999999999974e-05, 1.768100000000203e-05, 1.7707999999998225e-05, 1.768099999999856e-05, 1.766699999999899e-05, 1.7695000000005068e-05, 1.768099999999856e-05, 1.7721999999997795e-05, 1.7695000000005068e-05, 1.7681000000005498e-05, 1.7707999999998225e-05, 1.7693999999998655e-05, 1.7638000000000376e-05, 1.768099999999856e-05, 1.7681000000005498e-05, 1.7721999999997795e-05, 1.7693999999998655e-05, 1.7638000000000376e-05, 1.768099999999856e-05, 1.768099999999856e-05, 1.7693999999998655e-05, 1.766699999999899e-05, 1.768099999999856e-05, 1.7695000000005068e-05, 1.769499999999813e-05]</msg>
<status status="PASS" starttime="20201115 22:11:37.092" endtime="20201115 22:11:37.094"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.087" endtime="20201115 22:11:37.094"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:37.096" endtime="20201115 22:11:37.098"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:37.100" endtime="20201115 22:11:37.119"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.098" endtime="20201115 22:11:37.120"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.095" endtime="20201115 22:11:37.120"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.723" endtime="20201115 22:11:37.121"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.721" endtime="20201115 22:11:37.121"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.720" endtime="20201115 22:11:37.121"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:37.123" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:37.132" endtime="20201115 22:11:37.156"></status>
</kw>
<msg timestamp="20201115 22:11:37.157" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:37.130" endtime="20201115 22:11:37.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:37.160" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:37.158" endtime="20201115 22:11:37.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:37.161" endtime="20201115 22:11:37.163"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.128" endtime="20201115 22:11:37.163"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.126" endtime="20201115 22:11:37.163"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:37.170" endtime="20201115 22:11:37.457"></status>
</kw>
<msg timestamp="20201115 22:11:37.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024485528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024504264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:37.168" endtime="20201115 22:11:37.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:37.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024485528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024504264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:37.461" endtime="20201115 22:11:37.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:37.469" endtime="20201115 22:11:37.471"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.166" endtime="20201115 22:11:37.471"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.164" endtime="20201115 22:11:37.472"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:37.476" level="INFO">${RESULT} = [{'time': 0.024504264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8736000000001835e-05, 'source_diff': 1.8736000000001835e-05}, {'time': 0.024775833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:37.472" endtime="20201115 22:11:37.476"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:37.490" level="INFO">${OVERHEAD} = {'source_diff': [1.8736000000001835e-05, 1.8666000000000516e-05, 1.87089999999987e-05, 1.8749999999997935e-05, 1.8693999999999655e-05, 1.870900000000217e-05, 1.87089999999987e-05, 1.869499999999913e-0...</msg>
<status status="PASS" starttime="20201115 22:11:37.477" endtime="20201115 22:11:37.490"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:37.494" level="INFO">NAME: 00-overhead-13-set</msg>
<status status="PASS" starttime="20201115 22:11:37.493" endtime="20201115 22:11:37.494"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:37.496" level="INFO">VALUE: [1.8736000000001835e-05, 1.8666000000000516e-05, 1.87089999999987e-05, 1.8749999999997935e-05, 1.8693999999999655e-05, 1.870900000000217e-05, 1.87089999999987e-05, 1.869499999999913e-05, 1.8721999999998795e-05, 1.8737000000001308e-05, 1.876299999999803e-05, 1.8721999999998795e-05, 1.8722000000002265e-05, 1.86950000000026e-05, 1.8693999999999655e-05, 1.8763999999997505e-05, 1.8721999999998795e-05, 1.8707999999999225e-05, 1.8707999999999225e-05, 1.8723000000001738e-05, 1.8736000000001835e-05, 1.870900000000217e-05, 1.868099999999956e-05, 1.869499999999913e-05, 1.8707999999999225e-05, 1.872299999999827e-05, 1.87089999999987e-05, 1.8736000000005304e-05, 1.8763999999997505e-05, 1.8707999999999225e-05, 1.8764000000004444e-05, 1.8721999999998795e-05, 1.8708000000006164e-05, 1.8721999999998795e-05, 1.869499999999913e-05, 1.8707999999999225e-05, 1.87089999999987e-05, 1.87089999999987e-05, 1.8721999999998795e-05, 1.8707999999999225e-05, 1.8693999999999655e-05, 1.8763999999997505e-05, 1.8750000000004874e-05, 1.87089999999987e-05, 1.8708000000006164e-05, 1.8693999999999655e-05, 1.8707999999999225e-05, 1.87089999999987e-05, 1.866699999999999e-05, 1.8722000000005734e-05]</msg>
<status status="PASS" starttime="20201115 22:11:37.495" endtime="20201115 22:11:37.497"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.490" endtime="20201115 22:11:37.497"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:37.500" endtime="20201115 22:11:37.501"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:37.503" endtime="20201115 22:11:37.522"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.501" endtime="20201115 22:11:37.523"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.498" endtime="20201115 22:11:37.523"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.124" endtime="20201115 22:11:37.523"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.122" endtime="20201115 22:11:37.524"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.121" endtime="20201115 22:11:37.524"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:37.526" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:37.535" endtime="20201115 22:11:37.560"></status>
</kw>
<msg timestamp="20201115 22:11:37.560" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:37.534" endtime="20201115 22:11:37.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:37.563" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:37.561" endtime="20201115 22:11:37.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:37.564" endtime="20201115 22:11:37.565"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.531" endtime="20201115 22:11:37.566"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.528" endtime="20201115 22:11:37.566"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:37.573" endtime="20201115 22:11:37.859"></status>
</kw>
<msg timestamp="20201115 22:11:37.862" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024929014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024948764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:37.571" endtime="20201115 22:11:37.862"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:37.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024929014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024948764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:37.863" endtime="20201115 22:11:37.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:37.871" endtime="20201115 22:11:37.873"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.569" endtime="20201115 22:11:37.873"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.567" endtime="20201115 22:11:37.874"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:37.878" level="INFO">${RESULT} = [{'time': 0.024948764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9749999999998935e-05, 'source_diff': 1.9749999999998935e-05}, {'time': 0.025237875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:37.874" endtime="20201115 22:11:37.878"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:37.891" level="INFO">${OVERHEAD} = {'source_diff': [1.9749999999998935e-05, 1.9735999999999365e-05, 1.9694000000000655e-05, 1.968100000000056e-05, 1.9721999999999795e-05, 1.972299999999927e-05, 1.9749999999998935e-05, 1.973599999999936...</msg>
<status status="PASS" starttime="20201115 22:11:37.879" endtime="20201115 22:11:37.892"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:37.896" level="INFO">NAME: 00-overhead-14-set</msg>
<status status="PASS" starttime="20201115 22:11:37.895" endtime="20201115 22:11:37.896"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:37.898" level="INFO">VALUE: [1.9749999999998935e-05, 1.9735999999999365e-05, 1.9694000000000655e-05, 1.968100000000056e-05, 1.9721999999999795e-05, 1.972299999999927e-05, 1.9749999999998935e-05, 1.9735999999999365e-05, 1.9665999999998046e-05, 1.969500000000013e-05, 1.9721999999999795e-05, 1.9749999999998935e-05, 1.9652000000001946e-05, 1.9721999999999795e-05, 1.9680000000001086e-05, 1.9721999999999795e-05, 1.9749999999998935e-05, 1.9735999999999365e-05, 1.9735999999999365e-05, 1.97089999999997e-05, 1.979100000000164e-05, 1.972299999999927e-05, 1.9791999999997645e-05, 1.9694000000000655e-05, 1.9750000000005874e-05, 1.9735999999999365e-05, 1.9721999999999795e-05, 1.973699999999884e-05, 1.9721999999999795e-05, 1.9721999999999795e-05, 1.9721999999999795e-05, 1.9777999999998075e-05, 1.9749999999998935e-05, 1.9735999999999365e-05, 1.9735999999999365e-05, 1.9735999999999365e-05, 1.9736000000006304e-05, 1.9708000000000225e-05, 1.9749999999998935e-05, 1.9749999999998935e-05, 1.9735999999999365e-05, 1.9680000000001086e-05, 1.9721999999999795e-05, 1.9735999999999365e-05, 1.973699999999884e-05, 1.972299999999927e-05, 1.9680000000001086e-05, 1.9721999999999795e-05, 1.969500000000013e-05, 1.9708000000000225e-05]</msg>
<status status="PASS" starttime="20201115 22:11:37.897" endtime="20201115 22:11:37.899"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.892" endtime="20201115 22:11:37.899"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:37.902" endtime="20201115 22:11:37.903"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:37.905" endtime="20201115 22:11:37.925"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.903" endtime="20201115 22:11:37.925"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.900" endtime="20201115 22:11:37.926"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.527" endtime="20201115 22:11:37.926"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.525" endtime="20201115 22:11:37.926"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.524" endtime="20201115 22:11:37.926"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:37.928" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:37.937" endtime="20201115 22:11:37.964"></status>
</kw>
<msg timestamp="20201115 22:11:37.964" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:37.936" endtime="20201115 22:11:37.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:37.966" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:37.965" endtime="20201115 22:11:37.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:37.968" endtime="20201115 22:11:37.969"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.933" endtime="20201115 22:11:37.970"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.931" endtime="20201115 22:11:37.970"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:37.976" endtime="20201115 22:11:38.262"></status>
</kw>
<msg timestamp="20201115 22:11:38.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024502736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024523486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:37.975" endtime="20201115 22:11:38.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:38.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024502736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024523486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:38.266" endtime="20201115 22:11:38.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:38.274" endtime="20201115 22:11:38.276"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.972" endtime="20201115 22:11:38.276"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.971" endtime="20201115 22:11:38.276"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:38.281" level="INFO">${RESULT} = [{'time': 0.024523486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0749999999999935e-05, 'source_diff': 2.0749999999999935e-05}, {'time': 0.024837389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:38.277" endtime="20201115 22:11:38.281"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:38.294" level="INFO">${OVERHEAD} = {'source_diff': [2.0749999999999935e-05, 2.0736000000000365e-05, 2.0749999999999935e-05, 2.0749999999999935e-05, 2.0763999999999505e-05, 2.0749999999999935e-05, 2.0763999999999505e-05, 2.0763999999999...</msg>
<status status="PASS" starttime="20201115 22:11:38.282" endtime="20201115 22:11:38.295"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:38.299" level="INFO">NAME: 00-overhead-15-set</msg>
<status status="PASS" starttime="20201115 22:11:38.298" endtime="20201115 22:11:38.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:38.301" level="INFO">VALUE: [2.0749999999999935e-05, 2.0736000000000365e-05, 2.0749999999999935e-05, 2.0749999999999935e-05, 2.0763999999999505e-05, 2.0749999999999935e-05, 2.0763999999999505e-05, 2.0763999999999505e-05, 2.0749999999999935e-05, 2.0749999999999935e-05, 2.0763999999999505e-05, 2.0763999999999505e-05, 2.0722000000000795e-05, 2.0749999999999935e-05, 2.0749999999999935e-05, 2.0722000000000795e-05, 2.0763999999999505e-05, 2.0749999999999935e-05, 2.0749999999999935e-05, 2.0736000000000365e-05, 2.076300000000003e-05, 2.0736000000000365e-05, 2.0749999999999935e-05, 2.0763999999999505e-05, 2.0722000000000795e-05, 2.0763999999999505e-05, 2.0763999999999505e-05, 2.0749999999999935e-05, 2.073699999999984e-05, 2.0749999999999935e-05, 2.0707999999994287e-05, 2.0791999999998645e-05, 2.0749999999999935e-05, 2.0749999999999935e-05, 2.0749999999999935e-05, 2.0749999999999935e-05, 2.0749999999999935e-05, 2.073699999999984e-05, 2.07769999999996e-05, 2.0763999999999505e-05, 2.0736000000000365e-05, 2.0708000000001225e-05, 2.0763999999999505e-05, 2.0749999999999935e-05, 2.0749999999999935e-05, 2.0735999999993426e-05, 2.0736000000000365e-05, 2.0777999999999075e-05, 2.0749999999999935e-05, 2.0749999999999935e-05]</msg>
<status status="PASS" starttime="20201115 22:11:38.300" endtime="20201115 22:11:38.302"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.295" endtime="20201115 22:11:38.303"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:38.305" endtime="20201115 22:11:38.306"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:38.308" endtime="20201115 22:11:38.328"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.307" endtime="20201115 22:11:38.328"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.303" endtime="20201115 22:11:38.329"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.929" endtime="20201115 22:11:38.329"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.927" endtime="20201115 22:11:38.329"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.927" endtime="20201115 22:11:38.329"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:38.331" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:38.340" endtime="20201115 22:11:38.367"></status>
</kw>
<msg timestamp="20201115 22:11:38.368" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:38.339" endtime="20201115 22:11:38.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:38.370" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:38.369" endtime="20201115 22:11:38.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:38.371" endtime="20201115 22:11:38.373"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.336" endtime="20201115 22:11:38.373"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.334" endtime="20201115 22:11:38.374"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:38.380" endtime="20201115 22:11:38.674"></status>
</kw>
<msg timestamp="20201115 22:11:38.681" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025104556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02512625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:11:38.379" endtime="20201115 22:11:38.681"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:38.699" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025104556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02512625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:11:38.683" endtime="20201115 22:11:38.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:38.702" endtime="20201115 22:11:38.705"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.376" endtime="20201115 22:11:38.706"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.374" endtime="20201115 22:11:38.707"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:38.716" level="INFO">${RESULT} = [{'time': 0.02512625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1693999999999186e-05, 'source_diff': 2.1693999999999186e-05}, {'time': 0.025461153, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:11:38.709" endtime="20201115 22:11:38.716"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:38.748" level="INFO">${OVERHEAD} = {'source_diff': [2.1693999999999186e-05, 2.1778000000000075e-05, 2.1722000000001795e-05, 2.1778000000000075e-05, 2.1792000000003114e-05, 2.1750000000000935e-05, 2.1750000000000935e-05, 2.1791999999999...</msg>
<status status="PASS" starttime="20201115 22:11:38.718" endtime="20201115 22:11:38.748"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:38.754" level="INFO">NAME: 00-overhead-16-set</msg>
<status status="PASS" starttime="20201115 22:11:38.753" endtime="20201115 22:11:38.755"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:38.757" level="INFO">VALUE: [2.1693999999999186e-05, 2.1778000000000075e-05, 2.1722000000001795e-05, 2.1778000000000075e-05, 2.1792000000003114e-05, 2.1750000000000935e-05, 2.1750000000000935e-05, 2.1791999999999645e-05, 2.1778000000000075e-05, 2.1778000000000075e-05, 2.17770000000006e-05, 2.1778000000000075e-05, 2.1750000000000935e-05, 2.1764000000000505e-05, 2.180499999999974e-05, 2.1764000000000505e-05, 2.1778000000000075e-05, 2.1693999999999186e-05, 2.1848000000001394e-05, 2.1762999999994093e-05, 2.1764000000000505e-05, 2.179100000000017e-05, 2.1778000000000075e-05, 2.1764000000000505e-05, 2.180499999999974e-05, 2.1791999999999645e-05, 2.1778000000000075e-05, 2.1778000000000075e-05, 2.1764000000000505e-05, 2.1778000000000075e-05, 2.1778000000000075e-05, 2.1764000000000505e-05, 2.1778000000000075e-05, 2.1791999999999645e-05, 2.1722000000001795e-05, 2.1764000000000505e-05, 2.1778000000000075e-05, 2.183299999999888e-05, 2.1750000000000935e-05, 2.1764000000000505e-05, 2.1763999999993566e-05, 2.1750000000000935e-05, 2.1778000000000075e-05, 2.1791999999999645e-05, 2.1764000000000505e-05, 2.1778000000000075e-05, 2.1778000000000075e-05, 2.1791999999999645e-05, 2.1776999999993663e-05, 2.1778000000000075e-05]</msg>
<status status="PASS" starttime="20201115 22:11:38.755" endtime="20201115 22:11:38.758"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.750" endtime="20201115 22:11:38.758"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:38.761" endtime="20201115 22:11:38.762"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:38.764" endtime="20201115 22:11:38.783"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.762" endtime="20201115 22:11:38.784"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.759" endtime="20201115 22:11:38.784"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.332" endtime="20201115 22:11:38.785"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.330" endtime="20201115 22:11:38.785"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.330" endtime="20201115 22:11:38.785"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:38.787" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:38.796" endtime="20201115 22:11:38.825"></status>
</kw>
<msg timestamp="20201115 22:11:38.825" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:38.795" endtime="20201115 22:11:38.825"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:38.828" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:38.826" endtime="20201115 22:11:38.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:38.829" endtime="20201115 22:11:38.830"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.792" endtime="20201115 22:11:38.831"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.790" endtime="20201115 22:11:38.831"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:38.838" endtime="20201115 22:11:39.126"></status>
</kw>
<msg timestamp="20201115 22:11:39.129" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024965194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024987972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:38.836" endtime="20201115 22:11:39.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:39.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024965194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024987972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:39.130" endtime="20201115 22:11:39.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:39.138" endtime="20201115 22:11:39.140"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.834" endtime="20201115 22:11:39.140"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.832" endtime="20201115 22:11:39.141"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:39.145" level="INFO">${RESULT} = [{'time': 0.024987972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2778000000001075e-05, 'source_diff': 2.2778000000001075e-05}, {'time': 0.025352, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:11:39.142" endtime="20201115 22:11:39.145"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:39.159" level="INFO">${OVERHEAD} = {'source_diff': [2.2778000000001075e-05, 2.2778000000001075e-05, 2.279100000000117e-05, 2.280500000000074e-05, 2.2777999999997606e-05, 2.2735999999998896e-05, 2.283299999999988e-05, 2.2806000000000215...</msg>
<status status="PASS" starttime="20201115 22:11:39.146" endtime="20201115 22:11:39.160"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:39.164" level="INFO">NAME: 00-overhead-17-set</msg>
<status status="PASS" starttime="20201115 22:11:39.163" endtime="20201115 22:11:39.164"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:39.166" level="INFO">VALUE: [2.2778000000001075e-05, 2.2778000000001075e-05, 2.279100000000117e-05, 2.280500000000074e-05, 2.2777999999997606e-05, 2.2735999999998896e-05, 2.283299999999988e-05, 2.2806000000000215e-05, 2.2792000000000645e-05, 2.284699999999945e-05, 2.2833999999999355e-05, 2.279100000000117e-05, 2.2777999999997606e-05, 2.2792000000000645e-05, 2.27229999999988e-05, 2.2778000000001075e-05, 2.2792000000000645e-05, 2.2735999999998896e-05, 2.2778000000001075e-05, 2.287499999999859e-05, 2.281900000000031e-05, 2.2806000000000215e-05, 2.27770000000016e-05, 2.2792000000000645e-05, 2.284699999999945e-05, 2.2806000000000215e-05, 2.2804999999993802e-05, 2.2792000000000645e-05, 2.2818999999993372e-05, 2.2764000000001505e-05, 2.281900000000031e-05, 2.2806000000000215e-05, 2.281900000000031e-05, 2.281900000000031e-05, 2.279100000000117e-05, 2.280500000000074e-05, 2.2806000000000215e-05, 2.2778000000001075e-05, 2.2792000000000645e-05, 2.2792000000000645e-05, 2.283299999999988e-05, 2.2819999999999785e-05, 2.2819999999999785e-05, 2.2750000000001935e-05, 2.2736000000002365e-05, 2.2749999999994996e-05, 2.2778000000001075e-05, 2.2792000000000645e-05, 2.2792000000000645e-05, 2.2819999999999785e-05]</msg>
<status status="PASS" starttime="20201115 22:11:39.165" endtime="20201115 22:11:39.167"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.160" endtime="20201115 22:11:39.167"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:39.169" endtime="20201115 22:11:39.171"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:39.173" endtime="20201115 22:11:39.192"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.171" endtime="20201115 22:11:39.193"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.168" endtime="20201115 22:11:39.193"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.788" endtime="20201115 22:11:39.193"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.786" endtime="20201115 22:11:39.194"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.785" endtime="20201115 22:11:39.194"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:39.196" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:39.205" endtime="20201115 22:11:39.234"></status>
</kw>
<msg timestamp="20201115 22:11:39.235" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:39.203" endtime="20201115 22:11:39.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:39.237" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:39.236" endtime="20201115 22:11:39.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:39.238" endtime="20201115 22:11:39.240"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.201" endtime="20201115 22:11:39.240"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.199" endtime="20201115 22:11:39.241"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:39.247" endtime="20201115 22:11:39.533"></status>
</kw>
<msg timestamp="20201115 22:11:39.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025174694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0251985, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:11:39.246" endtime="20201115 22:11:39.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:39.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025174694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0251985, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:11:39.537" endtime="20201115 22:11:39.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:39.545" endtime="20201115 22:11:39.547"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.243" endtime="20201115 22:11:39.547"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.241" endtime="20201115 22:11:39.548"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:39.552" level="INFO">${RESULT} = [{'time': 0.0251985, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3805999999997746e-05, 'source_diff': 2.3805999999997746e-05}, {'time': 0.025582875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:39.548" endtime="20201115 22:11:39.552"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:39.566" level="INFO">${OVERHEAD} = {'source_diff': [2.3805999999997746e-05, 2.381900000000131e-05, 2.3805999999997746e-05, 2.380500000000174e-05, 2.3790999999998702e-05, 2.381900000000131e-05, 2.3790999999998702e-05, 2.3790999999998702...</msg>
<status status="PASS" starttime="20201115 22:11:39.553" endtime="20201115 22:11:39.566"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:39.570" level="INFO">NAME: 00-overhead-18-set</msg>
<status status="PASS" starttime="20201115 22:11:39.569" endtime="20201115 22:11:39.571"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:39.573" level="INFO">VALUE: [2.3805999999997746e-05, 2.381900000000131e-05, 2.3805999999997746e-05, 2.380500000000174e-05, 2.3790999999998702e-05, 2.381900000000131e-05, 2.3790999999998702e-05, 2.3790999999998702e-05, 2.3764000000002505e-05, 2.3834000000000355e-05, 2.3805999999997746e-05, 2.3832999999997412e-05, 2.3834000000000355e-05, 2.379100000000217e-05, 2.3818999999997842e-05, 2.3847999999999925e-05, 2.381900000000131e-05, 2.383300000000088e-05, 2.386100000000002e-05, 2.3806000000001215e-05, 2.380500000000174e-05, 2.3777999999995136e-05, 2.3806000000001215e-05, 2.3806000000001215e-05, 2.3792000000001645e-05, 2.380500000000174e-05, 2.3820000000000785e-05, 2.3820000000000785e-05, 2.384700000000045e-05, 2.3736000000003366e-05, 2.3820000000000785e-05, 2.379100000000217e-05, 2.3820000000000785e-05, 2.383300000000088e-05, 2.3806000000001215e-05, 2.3819999999993846e-05, 2.3806000000001215e-05, 2.3820000000000785e-05, 2.381900000000131e-05, 2.381900000000131e-05, 2.387499999999959e-05, 2.383300000000088e-05, 2.3778000000002075e-05, 2.380500000000174e-05, 2.379100000000217e-05, 2.3820000000000785e-05, 2.381900000000131e-05, 2.381900000000131e-05, 2.380500000000174e-05, 2.381900000000131e-05]</msg>
<status status="PASS" starttime="20201115 22:11:39.571" endtime="20201115 22:11:39.573"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.567" endtime="20201115 22:11:39.574"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:39.576" endtime="20201115 22:11:39.577"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:39.579" endtime="20201115 22:11:39.599"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.578" endtime="20201115 22:11:39.599"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.574" endtime="20201115 22:11:39.600"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.197" endtime="20201115 22:11:39.600"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.195" endtime="20201115 22:11:39.600"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.194" endtime="20201115 22:11:39.600"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:39.603" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:39.612" endtime="20201115 22:11:39.644"></status>
</kw>
<msg timestamp="20201115 22:11:39.645" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:39.610" endtime="20201115 22:11:39.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:39.647" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:39.646" endtime="20201115 22:11:39.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:39.648" endtime="20201115 22:11:39.650"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.608" endtime="20201115 22:11:39.651"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.605" endtime="20201115 22:11:39.651"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:39.658" endtime="20201115 22:11:39.945"></status>
</kw>
<msg timestamp="20201115 22:11:39.948" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026286514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026311347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:39.656" endtime="20201115 22:11:39.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:39.956" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026286514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026311347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:39.950" endtime="20201115 22:11:39.957"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:39.958" endtime="20201115 22:11:39.959"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.653" endtime="20201115 22:11:39.960"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.652" endtime="20201115 22:11:39.960"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:39.964" level="INFO">${RESULT} = [{'time': 0.026311347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4832999999998412e-05, 'source_diff': 2.4832999999998412e-05}, {'time': 0.026714583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:39.961" endtime="20201115 22:11:39.964"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:39.978" level="INFO">${OVERHEAD} = {'source_diff': [2.4832999999998412e-05, 2.4818999999998842e-05, 2.4833999999997886e-05, 2.487500000000059e-05, 2.4848000000000925e-05, 2.483300000000188e-05, 2.4832999999998412e-05, 2.480499999999927...</msg>
<status status="PASS" starttime="20201115 22:11:39.965" endtime="20201115 22:11:39.978"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:39.983" level="INFO">NAME: 00-overhead-19-set</msg>
<status status="PASS" starttime="20201115 22:11:39.982" endtime="20201115 22:11:39.983"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:39.985" level="INFO">VALUE: [2.4832999999998412e-05, 2.4818999999998842e-05, 2.4833999999997886e-05, 2.487500000000059e-05, 2.4848000000000925e-05, 2.483300000000188e-05, 2.4832999999998412e-05, 2.4804999999999272e-05, 2.4832999999998412e-05, 2.4818999999998842e-05, 2.484700000000145e-05, 2.483300000000188e-05, 2.484700000000145e-05, 2.484700000000145e-05, 2.486100000000102e-05, 2.4832999999994942e-05, 2.4832999999994942e-05, 2.486100000000102e-05, 2.484700000000145e-05, 2.4832999999994942e-05, 2.4846999999994512e-05, 2.4833999999994416e-05, 2.4820000000001785e-05, 2.4749999999996997e-05, 2.486100000000102e-05, 2.4820000000001785e-05, 2.484700000000145e-05, 2.4902000000000257e-05, 2.484700000000145e-05, 2.486100000000102e-05, 2.4848000000000925e-05, 2.4874999999993652e-05, 2.4832999999994942e-05, 2.4848000000000925e-05, 2.4818999999995373e-05, 2.486100000000102e-05, 2.4848000000000925e-05, 2.483300000000188e-05, 2.4832999999994942e-05, 2.484700000000145e-05, 2.483300000000188e-05, 2.483300000000188e-05, 2.488900000000016e-05, 2.487500000000059e-05, 2.481900000000231e-05, 2.4819999999994846e-05, 2.4820000000001785e-05, 2.481900000000231e-05, 2.4834000000001355e-05, 2.483300000000188e-05]</msg>
<status status="PASS" starttime="20201115 22:11:39.984" endtime="20201115 22:11:39.986"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.979" endtime="20201115 22:11:39.986"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:39.988" endtime="20201115 22:11:39.990"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:39.992" endtime="20201115 22:11:40.011"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.990" endtime="20201115 22:11:40.012"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.987" endtime="20201115 22:11:40.012"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.603" endtime="20201115 22:11:40.012"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.602" endtime="20201115 22:11:40.013"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.601" endtime="20201115 22:11:40.013"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:40.015" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:40.024" endtime="20201115 22:11:40.056"></status>
</kw>
<msg timestamp="20201115 22:11:40.057" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:40.022" endtime="20201115 22:11:40.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:40.063" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:40.058" endtime="20201115 22:11:40.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:40.065" endtime="20201115 22:11:40.066"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.020" endtime="20201115 22:11:40.067"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.018" endtime="20201115 22:11:40.067"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:40.074" endtime="20201115 22:11:40.360"></status>
</kw>
<msg timestamp="20201115 22:11:40.363" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025059986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025085875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:40.072" endtime="20201115 22:11:40.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:40.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025059986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025085875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:40.365" endtime="20201115 22:11:40.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:40.372" endtime="20201115 22:11:40.374"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.070" endtime="20201115 22:11:40.375"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.068" endtime="20201115 22:11:40.375"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:40.379" level="INFO">${RESULT} = [{'time': 0.025085875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.588900000000116e-05, 'source_diff': 2.588900000000116e-05}, {'time': 0.025522278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:40.376" endtime="20201115 22:11:40.379"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:40.393" level="INFO">${OVERHEAD} = {'source_diff': [2.588900000000116e-05, 2.5860999999998552e-05, 2.5860999999998552e-05, 2.5846999999998982e-05, 2.588900000000116e-05, 2.588899999999769e-05, 2.5860999999998552e-05, 2.5846999999998982...</msg>
<status status="PASS" starttime="20201115 22:11:40.380" endtime="20201115 22:11:40.393"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:40.398" level="INFO">NAME: 00-overhead-20-set</msg>
<status status="PASS" starttime="20201115 22:11:40.396" endtime="20201115 22:11:40.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:40.400" level="INFO">VALUE: [2.588900000000116e-05, 2.5860999999998552e-05, 2.5860999999998552e-05, 2.5846999999998982e-05, 2.588900000000116e-05, 2.588899999999769e-05, 2.5860999999998552e-05, 2.5846999999998982e-05, 2.5848000000001925e-05, 2.5847999999998456e-05, 2.587500000000159e-05, 2.5833999999998886e-05, 2.5860999999998552e-05, 2.5860999999998552e-05, 2.586100000000202e-05, 2.587500000000159e-05, 2.5874999999994652e-05, 2.5860999999995082e-05, 2.5806000000003215e-05, 2.587500000000159e-05, 2.5792000000003645e-05, 2.584700000000245e-05, 2.5848000000001925e-05, 2.5860999999995082e-05, 2.584700000000245e-05, 2.5862000000001495e-05, 2.5860999999995082e-05, 2.586100000000202e-05, 2.586100000000202e-05, 2.5846999999995512e-05, 2.5805999999996276e-05, 2.584700000000245e-05, 2.5846999999995512e-05, 2.59170000000003e-05, 2.5860999999995082e-05, 2.584700000000245e-05, 2.584700000000245e-05, 2.586100000000202e-05, 2.586100000000202e-05, 2.588900000000116e-05, 2.5860999999995082e-05, 2.586100000000202e-05, 2.586100000000202e-05, 2.5848000000001925e-05, 2.586100000000202e-05, 2.5860999999995082e-05, 2.586100000000202e-05, 2.5846999999995512e-05, 2.587500000000159e-05, 2.5862000000001495e-05]</msg>
<status status="PASS" starttime="20201115 22:11:40.399" endtime="20201115 22:11:40.401"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.394" endtime="20201115 22:11:40.401"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:40.403" endtime="20201115 22:11:40.405"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:40.407" endtime="20201115 22:11:40.426"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.405" endtime="20201115 22:11:40.427"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.402" endtime="20201115 22:11:40.427"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.016" endtime="20201115 22:11:40.427"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.014" endtime="20201115 22:11:40.428"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.013" endtime="20201115 22:11:40.428"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:40.430" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:40.439" endtime="20201115 22:11:40.473"></status>
</kw>
<msg timestamp="20201115 22:11:40.473" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:40.438" endtime="20201115 22:11:40.474"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:40.476" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:40.474" endtime="20201115 22:11:40.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:40.477" endtime="20201115 22:11:40.478"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.435" endtime="20201115 22:11:40.479"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.433" endtime="20201115 22:11:40.479"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:40.486" endtime="20201115 22:11:40.773"></status>
</kw>
<msg timestamp="20201115 22:11:40.776" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025424417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025451306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:40.484" endtime="20201115 22:11:40.776"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:40.784" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025424417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025451306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:40.777" endtime="20201115 22:11:40.785"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:40.785" endtime="20201115 22:11:40.787"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.482" endtime="20201115 22:11:40.788"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.480" endtime="20201115 22:11:40.788"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:40.792" level="INFO">${RESULT} = [{'time': 0.025451306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6888999999998692e-05, 'source_diff': 2.6888999999998692e-05}, {'time': 0.025916806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:40.789" endtime="20201115 22:11:40.792"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:40.806" level="INFO">${OVERHEAD} = {'source_diff': [2.6888999999998692e-05, 2.6874999999999122e-05, 2.6860999999999552e-05, 2.688900000000216e-05, 2.6888000000002688e-05, 2.6861999999999026e-05, 2.6860999999999552e-05, 2.68750000000025...</msg>
<status status="PASS" starttime="20201115 22:11:40.793" endtime="20201115 22:11:40.806"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:40.810" level="INFO">NAME: 00-overhead-21-set</msg>
<status status="PASS" starttime="20201115 22:11:40.809" endtime="20201115 22:11:40.811"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:40.813" level="INFO">VALUE: [2.6888999999998692e-05, 2.6874999999999122e-05, 2.6860999999999552e-05, 2.688900000000216e-05, 2.6888000000002688e-05, 2.6861999999999026e-05, 2.6860999999999552e-05, 2.687500000000259e-05, 2.6888999999998692e-05, 2.6888000000002688e-05, 2.688900000000216e-05, 2.6874999999999122e-05, 2.6874999999999122e-05, 2.687500000000259e-05, 2.690300000000173e-05, 2.6874999999995652e-05, 2.687500000000259e-05, 2.6874999999995652e-05, 2.6888999999995222e-05, 2.688900000000216e-05, 2.687500000000259e-05, 2.684700000000345e-05, 2.6804999999997803e-05, 2.690300000000173e-05, 2.6832999999996943e-05, 2.6862000000002495e-05, 2.6860999999996082e-05, 2.693100000000087e-05, 2.684700000000345e-05, 2.6848000000002925e-05, 2.6819999999996846e-05, 2.687500000000259e-05, 2.688900000000216e-05, 2.687500000000259e-05, 2.687500000000259e-05, 2.688900000000216e-05, 2.6806000000004215e-05, 2.684700000000345e-05, 2.686100000000302e-05, 2.687500000000259e-05, 2.6874999999995652e-05, 2.693100000000087e-05, 2.6874999999995652e-05, 2.6846999999996513e-05, 2.687500000000259e-05, 2.687500000000259e-05, 2.6888999999995222e-05, 2.687500000000259e-05, 2.6874999999995652e-05, 2.6874999999995652e-05]</msg>
<status status="PASS" starttime="20201115 22:11:40.812" endtime="20201115 22:11:40.813"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.807" endtime="20201115 22:11:40.814"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:40.816" endtime="20201115 22:11:40.817"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:40.820" endtime="20201115 22:11:40.839"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.818" endtime="20201115 22:11:40.840"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.814" endtime="20201115 22:11:40.840"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.431" endtime="20201115 22:11:40.841"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.429" endtime="20201115 22:11:40.841"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.428" endtime="20201115 22:11:40.841"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:40.843" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:40.852" endtime="20201115 22:11:40.886"></status>
</kw>
<msg timestamp="20201115 22:11:40.887" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:40.851" endtime="20201115 22:11:40.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:40.889" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:40.888" endtime="20201115 22:11:40.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:40.890" endtime="20201115 22:11:40.892"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.848" endtime="20201115 22:11:40.893"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.846" endtime="20201115 22:11:40.893"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:40.899" endtime="20201115 22:11:41.186"></status>
</kw>
<msg timestamp="20201115 22:11:41.189" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024963833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024991708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:40.898" endtime="20201115 22:11:41.189"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:41.197" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024963833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024991708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:41.190" endtime="20201115 22:11:41.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:41.198" endtime="20201115 22:11:41.200"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.895" endtime="20201115 22:11:41.201"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.894" endtime="20201115 22:11:41.201"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:41.205" level="INFO">${RESULT} = [{'time': 0.024991708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7875000000000122e-05, 'source_diff': 2.7875000000000122e-05}, {'time': 0.025475208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:41.202" endtime="20201115 22:11:41.205"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:41.219" level="INFO">${OVERHEAD} = {'source_diff': [2.7875000000000122e-05, 2.7943999999998498e-05, 2.7875000000000122e-05, 2.790300000000273e-05, 2.7875000000000122e-05, 2.7902999999999262e-05, 2.7888999999999692e-05, 2.78750000000001...</msg>
<status status="PASS" starttime="20201115 22:11:41.206" endtime="20201115 22:11:41.219"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:41.224" level="INFO">NAME: 00-overhead-22-set</msg>
<status status="PASS" starttime="20201115 22:11:41.223" endtime="20201115 22:11:41.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:41.226" level="INFO">VALUE: [2.7875000000000122e-05, 2.7943999999998498e-05, 2.7875000000000122e-05, 2.790300000000273e-05, 2.7875000000000122e-05, 2.7902999999999262e-05, 2.7888999999999692e-05, 2.7875000000000122e-05, 2.7846999999997513e-05, 2.7902999999999262e-05, 2.790300000000273e-05, 2.7888999999999692e-05, 2.7902999999999262e-05, 2.7902999999995792e-05, 2.7916999999995362e-05, 2.790300000000273e-05, 2.79170000000023e-05, 2.790199999999632e-05, 2.7902999999995792e-05, 2.793100000000187e-05, 2.7902999999995792e-05, 2.788900000000316e-05, 2.7902999999995792e-05, 2.788900000000316e-05, 2.791599999999589e-05, 2.7916999999995362e-05, 2.790300000000273e-05, 2.7888999999996222e-05, 2.788900000000316e-05, 2.7888999999996222e-05, 2.7888999999996222e-05, 2.788900000000316e-05, 2.786100000000402e-05, 2.791599999999589e-05, 2.790300000000273e-05, 2.790300000000273e-05, 2.7944999999994502e-05, 2.792999999999546e-05, 2.790300000000273e-05, 2.790300000000273e-05, 2.79170000000023e-05, 2.790300000000273e-05, 2.7902999999995792e-05, 2.7820000000004785e-05, 2.790300000000273e-05, 2.7902000000003258e-05, 2.7902999999995792e-05, 2.790300000000273e-05, 2.7902999999995792e-05, 2.7888999999996222e-05]</msg>
<status status="PASS" starttime="20201115 22:11:41.225" endtime="20201115 22:11:41.227"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.220" endtime="20201115 22:11:41.227"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:41.230" endtime="20201115 22:11:41.231"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:41.233" endtime="20201115 22:11:41.252"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.232" endtime="20201115 22:11:41.253"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.228" endtime="20201115 22:11:41.254"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.844" endtime="20201115 22:11:41.254"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.842" endtime="20201115 22:11:41.254"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.842" endtime="20201115 22:11:41.254"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:41.256" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:41.265" endtime="20201115 22:11:41.301"></status>
</kw>
<msg timestamp="20201115 22:11:41.302" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:41.264" endtime="20201115 22:11:41.302"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:41.304" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:41.303" endtime="20201115 22:11:41.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:41.305" endtime="20201115 22:11:41.307"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.261" endtime="20201115 22:11:41.307"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.259" endtime="20201115 22:11:41.308"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:41.314" endtime="20201115 22:11:41.600"></status>
</kw>
<msg timestamp="20201115 22:11:41.603" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025058903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025087833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:41.313" endtime="20201115 22:11:41.603"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:41.610" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025058903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025087833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:41.604" endtime="20201115 22:11:41.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:41.612" endtime="20201115 22:11:41.613"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.310" endtime="20201115 22:11:41.614"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.308" endtime="20201115 22:11:41.614"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:41.618" level="INFO">${RESULT} = [{'time': 0.025087833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8929999999999928e-05, 'source_diff': 2.8929999999999928e-05}, {'time': 0.025603681, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:41.615" endtime="20201115 22:11:41.619"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:41.632" level="INFO">${OVERHEAD} = {'source_diff': [2.8929999999999928e-05, 2.8903000000000262e-05, 2.8903000000000262e-05, 2.8903000000000262e-05, 2.8916999999999832e-05, 2.89170000000033e-05, 2.8916999999999832e-05, 2.890300000000026...</msg>
<status status="PASS" starttime="20201115 22:11:41.619" endtime="20201115 22:11:41.633"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:41.637" level="INFO">NAME: 00-overhead-23-set</msg>
<status status="PASS" starttime="20201115 22:11:41.636" endtime="20201115 22:11:41.637"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:41.640" level="INFO">VALUE: [2.8929999999999928e-05, 2.8903000000000262e-05, 2.8903000000000262e-05, 2.8903000000000262e-05, 2.8916999999999832e-05, 2.89170000000033e-05, 2.8916999999999832e-05, 2.8903000000000262e-05, 2.8903000000000262e-05, 2.8916000000000358e-05, 2.8916999999999832e-05, 2.8916999999999832e-05, 2.890199999999732e-05, 2.8972999999994642e-05, 2.8916999999996362e-05, 2.894399999999603e-05, 2.89170000000033e-05, 2.890300000000373e-05, 2.890300000000373e-05, 2.8902000000004258e-05, 2.8916999999996362e-05, 2.893100000000287e-05, 2.8902999999996792e-05, 2.892999999999646e-05, 2.8930000000003397e-05, 2.891599999999689e-05, 2.891599999999689e-05, 2.890300000000373e-05, 2.893100000000287e-05, 2.89170000000033e-05, 2.89170000000033e-05, 2.8846999999998513e-05, 2.893100000000287e-05, 2.89170000000033e-05, 2.890300000000373e-05, 2.8916999999996362e-05, 2.891599999999689e-05, 2.89170000000033e-05, 2.891599999999689e-05, 2.89170000000033e-05, 2.8972000000002107e-05, 2.892999999999646e-05, 2.890300000000373e-05, 2.8874999999997653e-05, 2.887500000000459e-05, 2.892999999999646e-05, 2.890300000000373e-05, 2.892999999999646e-05, 2.8888999999997222e-05, 2.8930000000003397e-05]</msg>
<status status="PASS" starttime="20201115 22:11:41.638" endtime="20201115 22:11:41.641"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.633" endtime="20201115 22:11:41.641"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:41.644" endtime="20201115 22:11:41.645"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:41.648" endtime="20201115 22:11:41.667"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.646" endtime="20201115 22:11:41.668"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.642" endtime="20201115 22:11:41.668"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.257" endtime="20201115 22:11:41.668"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.255" endtime="20201115 22:11:41.669"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.255" endtime="20201115 22:11:41.669"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:41.671" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:41.680" endtime="20201115 22:11:41.718"></status>
</kw>
<msg timestamp="20201115 22:11:41.718" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:41.678" endtime="20201115 22:11:41.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:41.721" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:41.720" endtime="20201115 22:11:41.721"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:41.722" endtime="20201115 22:11:41.724"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.676" endtime="20201115 22:11:41.724"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.674" endtime="20201115 22:11:41.725"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:41.731" endtime="20201115 22:11:42.017"></status>
</kw>
<msg timestamp="20201115 22:11:42.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025214694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025244625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:41.730" endtime="20201115 22:11:42.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:42.028" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025214694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025244625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:42.021" endtime="20201115 22:11:42.029"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:42.029" endtime="20201115 22:11:42.031"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.727" endtime="20201115 22:11:42.032"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.725" endtime="20201115 22:11:42.032"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:42.036" level="INFO">${RESULT} = [{'time': 0.025244625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9931000000000402e-05, 'source_diff': 2.9931000000000402e-05}, {'time': 0.025795361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:42.033" endtime="20201115 22:11:42.037"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:42.050" level="INFO">${OVERHEAD} = {'source_diff': [2.9931000000000402e-05, 2.9999999999998778e-05, 2.998699999999868e-05, 2.9931000000000402e-05, 2.991599999999789e-05, 2.997299999999911e-05, 2.9916000000001358e-05, 2.9931000000000402...</msg>
<status status="PASS" starttime="20201115 22:11:42.037" endtime="20201115 22:11:42.051"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:42.055" level="INFO">NAME: 00-overhead-24-set</msg>
<status status="PASS" starttime="20201115 22:11:42.054" endtime="20201115 22:11:42.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:42.057" level="INFO">VALUE: [2.9931000000000402e-05, 2.9999999999998778e-05, 2.998699999999868e-05, 2.9931000000000402e-05, 2.991599999999789e-05, 2.997299999999911e-05, 2.9916000000001358e-05, 2.9931000000000402e-05, 2.992999999999746e-05, 2.994499999999997e-05, 2.9944000000000498e-05, 2.99579999999966e-05, 2.9944999999996502e-05, 2.992999999999746e-05, 2.9985999999995738e-05, 2.990300000000473e-05, 2.988900000000516e-05, 2.994399999999703e-05, 2.9958000000003537e-05, 2.9958000000003537e-05, 2.994399999999703e-05, 2.9944000000003967e-05, 2.99579999999966e-05, 2.9930999999996932e-05, 2.992999999999746e-05, 2.994399999999703e-05, 2.988900000000516e-05, 2.992999999999746e-05, 2.994399999999703e-05, 3.0000000000002247e-05, 2.992999999999746e-05, 2.994500000000344e-05, 2.9944000000003967e-05, 2.99579999999966e-05, 2.994399999999703e-05, 2.99579999999966e-05, 2.992999999999746e-05, 2.991599999999789e-05, 2.9944000000003967e-05, 2.9944999999996502e-05, 3.0000000000002247e-05, 2.9930999999996932e-05, 2.994399999999703e-05, 2.9972000000003107e-05, 2.99579999999966e-05, 2.9958000000003537e-05, 2.9944000000003967e-05, 2.993100000000387e-05, 2.99579999999966e-05, 2.994500000000344e-05]</msg>
<status status="PASS" starttime="20201115 22:11:42.056" endtime="20201115 22:11:42.058"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.051" endtime="20201115 22:11:42.058"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:42.061" endtime="20201115 22:11:42.062"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:42.064" endtime="20201115 22:11:42.083"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.062" endtime="20201115 22:11:42.084"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.059" endtime="20201115 22:11:42.084"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.672" endtime="20201115 22:11:42.085"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.670" endtime="20201115 22:11:42.085"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.669" endtime="20201115 22:11:42.085"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:42.087" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:42.096" endtime="20201115 22:11:42.136"></status>
</kw>
<msg timestamp="20201115 22:11:42.136" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:42.095" endtime="20201115 22:11:42.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:42.139" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:42.137" endtime="20201115 22:11:42.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:42.140" endtime="20201115 22:11:42.142"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.092" endtime="20201115 22:11:42.142"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.090" endtime="20201115 22:11:42.143"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:42.149" endtime="20201115 22:11:42.436"></status>
</kw>
<msg timestamp="20201115 22:11:42.439" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025335556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025366514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:42.147" endtime="20201115 22:11:42.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:42.447" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025335556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025366514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:42.440" endtime="20201115 22:11:42.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:42.449" endtime="20201115 22:11:42.450"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.145" endtime="20201115 22:11:42.451"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.143" endtime="20201115 22:11:42.451"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:42.455" level="INFO">${RESULT} = [{'time': 0.025366514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.095800000000107e-05, 'source_diff': 3.095800000000107e-05}, {'time': 0.02594, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3...</msg>
<status status="PASS" starttime="20201115 22:11:42.452" endtime="20201115 22:11:42.456"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:42.469" level="INFO">${OVERHEAD} = {'source_diff': [3.095800000000107e-05, 3.095800000000107e-05, 3.09579999999976e-05, 3.09579999999976e-05, 3.098600000000021e-05, 3.091699999999836e-05, 3.09579999999976e-05, 3.095800000000107e-05, 3....</msg>
<status status="PASS" starttime="20201115 22:11:42.456" endtime="20201115 22:11:42.470"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:42.474" level="INFO">NAME: 00-overhead-25-set</msg>
<status status="PASS" starttime="20201115 22:11:42.473" endtime="20201115 22:11:42.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:42.476" level="INFO">VALUE: [3.095800000000107e-05, 3.095800000000107e-05, 3.09579999999976e-05, 3.09579999999976e-05, 3.098600000000021e-05, 3.091699999999836e-05, 3.09579999999976e-05, 3.095800000000107e-05, 3.098600000000021e-05, 3.095900000000054e-05, 3.09440000000015e-05, 3.097200000000411e-05, 3.097200000000411e-05, 3.092999999999846e-05, 3.097199999999717e-05, 3.09579999999976e-05, 3.097199999999717e-05, 3.101400000000282e-05, 3.094400000000497e-05, 3.09449999999975e-05, 3.095899999999707e-05, 3.097199999999717e-05, 3.097199999999717e-05, 3.094400000000497e-05, 3.097200000000411e-05, 3.098600000000368e-05, 3.095800000000454e-05, 3.095800000000454e-05, 3.092999999999846e-05, 3.100000000000325e-05, 3.09579999999976e-05, 3.09579999999976e-05, 3.09579999999976e-05, 3.095800000000454e-05, 3.091699999999836e-05, 3.094500000000444e-05, 3.09449999999975e-05, 3.098700000000315e-05, 3.095900000000401e-05, 3.095800000000454e-05, 3.09449999999975e-05, 3.095800000000454e-05, 3.097199999999717e-05, 3.100000000000325e-05, 3.097299999999664e-05, 3.09449999999975e-05, 3.095800000000454e-05, 3.088899999999922e-05, 3.093099999999793e-05, 3.095900000000401e-05]</msg>
<status status="PASS" starttime="20201115 22:11:42.475" endtime="20201115 22:11:42.477"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.470" endtime="20201115 22:11:42.477"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:42.479" endtime="20201115 22:11:42.481"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:42.483" endtime="20201115 22:11:42.502"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.481" endtime="20201115 22:11:42.503"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.478" endtime="20201115 22:11:42.503"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.088" endtime="20201115 22:11:42.503"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.086" endtime="20201115 22:11:42.504"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.085" endtime="20201115 22:11:42.504"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.347" endtime="20201115 22:11:42.504"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="teardown">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:42.508" endtime="20201115 22:11:42.528"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.507" endtime="20201115 22:11:42.528"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.505" endtime="20201115 22:11:42.529"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:11:32.277" endtime="20201115 22:11:42.529" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Remove List">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:42.536" endtime="20201115 22:11:42.556"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.535" endtime="20201115 22:11:42.556"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:42.570" endtime="20201115 22:11:42.584"></status>
</kw>
<msg timestamp="20201115 22:11:42.585" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:42.567" endtime="20201115 22:11:42.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:42.588" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:42.586" endtime="20201115 22:11:42.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:11:42.591" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:11:42.589" endtime="20201115 22:11:42.591"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:42.565" endtime="20201115 22:11:42.592"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:42.563" endtime="20201115 22:11:42.592"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.561" endtime="20201115 22:11:42.593"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:11:42.596" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:11:42.596" endtime="20201115 22:11:42.597"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.594" endtime="20201115 22:11:42.597"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.561" endtime="20201115 22:11:42.597"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.560" endtime="20201115 22:11:42.597"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:42.598" endtime="20201115 22:11:42.600"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.558" endtime="20201115 22:11:42.600"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.557" endtime="20201115 22:11:42.601"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.533" endtime="20201115 22:11:42.601"></status>
</kw>
<kw name="${n} IN RANGE [ 25 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:42.604" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:42.613" endtime="20201115 22:11:42.629"></status>
</kw>
<msg timestamp="20201115 22:11:42.630" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:42.611" endtime="20201115 22:11:42.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:42.632" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:42.631" endtime="20201115 22:11:42.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:42.633" endtime="20201115 22:11:42.635"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.609" endtime="20201115 22:11:42.635"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.607" endtime="20201115 22:11:42.636"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:42.642" endtime="20201115 22:11:42.928"></status>
</kw>
<msg timestamp="20201115 22:11:42.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069518153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069520472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:42.641" endtime="20201115 22:11:42.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:42.939" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069518153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069520472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:42.932" endtime="20201115 22:11:42.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:42.940" endtime="20201115 22:11:42.943"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.638" endtime="20201115 22:11:42.944"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.636" endtime="20201115 22:11:42.944"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:42.949" level="INFO">${RESULT} = [{'time': 0.069520472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.319000000000626e-06, 'source_diff': 2.319000000000626e-06}, {'time': 0.069634458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:42.945" endtime="20201115 22:11:42.949"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:42.962" level="INFO">${OVERHEAD} = {'source_diff': [2.319000000000626e-06, 2.2910000000014863e-06, 2.2360000000026803e-06, 2.29200000000096e-06, 2.29200000000096e-06, 2.305000000007995e-06, 2.2769999999949775e-06, 2.305999999993591e-06...</msg>
<status status="PASS" starttime="20201115 22:11:42.950" endtime="20201115 22:11:42.963"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:42.967" level="INFO">NAME: 00-overhead-1-remove</msg>
<status status="PASS" starttime="20201115 22:11:42.966" endtime="20201115 22:11:42.967"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:42.969" level="INFO">VALUE: [2.319000000000626e-06, 2.2910000000014863e-06, 2.2360000000026803e-06, 2.29200000000096e-06, 2.29200000000096e-06, 2.305000000007995e-06, 2.2769999999949775e-06, 2.305999999993591e-06, 2.2910000000014863e-06, 2.278000000008329e-06, 2.278000000008329e-06, 2.29200000000096e-06, 2.29200000000096e-06, 2.3060000000074687e-06, 2.277999999994451e-06, 2.305999999993591e-06, 2.3049999999941173e-06, 2.291999999987082e-06, 2.278000000008329e-06, 2.26400000000182e-06, 2.222999999995645e-06, 2.2769999999949775e-06, 2.2770000000088553e-06, 2.291999999987082e-06, 2.26400000000182e-06, 2.3049999999941173e-06, 2.29200000000096e-06, 2.277999999994451e-06, 2.305999999993591e-06, 2.2499999999953113e-06, 2.2630000000023465e-06, 2.305999999993591e-06, 2.278000000008329e-06, 2.2360000000026803e-06, 2.2769999999949775e-06, 2.319000000000626e-06, 2.277999999994451e-06, 2.278000000008329e-06, 2.2769999999949775e-06, 2.277999999994451e-06, 2.3340000000066086e-06, 2.305999999993591e-06, 2.3049999999941173e-06, 2.3200000000000998e-06, 2.2639999999879423e-06, 2.278000000008329e-06, 2.29200000000096e-06, 2.305999999993591e-06, 2.3049999999941173e-06, 2.3610000000062747e-06]</msg>
<status status="PASS" starttime="20201115 22:11:42.968" endtime="20201115 22:11:42.970"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.963" endtime="20201115 22:11:42.970"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:42.973" endtime="20201115 22:11:42.974"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:42.976" endtime="20201115 22:11:42.995"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.975" endtime="20201115 22:11:42.996"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.971" endtime="20201115 22:11:42.996"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.605" endtime="20201115 22:11:42.997"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.603" endtime="20201115 22:11:42.997"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.602" endtime="20201115 22:11:42.997"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:42.999" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:43.008" endtime="20201115 22:11:43.025"></status>
</kw>
<msg timestamp="20201115 22:11:43.025" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:43.007" endtime="20201115 22:11:43.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:43.027" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:43.026" endtime="20201115 22:11:43.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:43.029" endtime="20201115 22:11:43.030"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.004" endtime="20201115 22:11:43.031"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.002" endtime="20201115 22:11:43.031"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:43.037" endtime="20201115 22:11:43.325"></status>
</kw>
<msg timestamp="20201115 22:11:43.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025350194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025352833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:43.036" endtime="20201115 22:11:43.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:43.336" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025350194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025352833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:43.329" endtime="20201115 22:11:43.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:43.337" endtime="20201115 22:11:43.339"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.033" endtime="20201115 22:11:43.339"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.032" endtime="20201115 22:11:43.340"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:43.344" level="INFO">${RESULT} = [{'time': 0.025352833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.639000000002195e-06, 'source_diff': 2.639000000002195e-06}, {'time': 0.02547675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:11:43.341" endtime="20201115 22:11:43.344"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:43.358" level="INFO">${OVERHEAD} = {'source_diff': [2.639000000002195e-06, 2.597000000000016e-06, 2.5839999999999197e-06, 2.597000000000016e-06, 2.610999999999586e-06, 2.583000000000446e-06, 2.583000000000446e-06, 2.5270000000021664e-0...</msg>
<status status="PASS" starttime="20201115 22:11:43.345" endtime="20201115 22:11:43.358"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:43.363" level="INFO">NAME: 00-overhead-2-remove</msg>
<status status="PASS" starttime="20201115 22:11:43.361" endtime="20201115 22:11:43.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:43.365" level="INFO">VALUE: [2.639000000002195e-06, 2.597000000000016e-06, 2.5839999999999197e-06, 2.597000000000016e-06, 2.610999999999586e-06, 2.583000000000446e-06, 2.583000000000446e-06, 2.5270000000021664e-06, 2.583000000000446e-06, 2.5549999999978368e-06, 2.5419999999977405e-06, 2.569000000000876e-06, 2.5839999999999197e-06, 2.5839999999999197e-06, 2.5550000000013062e-06, 2.583000000000446e-06, 2.583000000000446e-06, 2.51400000000207e-06, 2.569000000000876e-06, 2.598000000002959e-06, 2.597000000000016e-06, 2.5700000000003498e-06, 2.597000000000016e-06, 2.583000000000446e-06, 2.5689999999974067e-06, 2.583000000000446e-06, 2.5689999999974067e-06, 2.610999999999586e-06, 2.583000000000446e-06, 2.5139999999986007e-06, 2.583000000000446e-06, 2.597000000000016e-06, 2.5839999999999197e-06, 2.597000000000016e-06, 2.583000000000446e-06, 2.583000000000446e-06, 2.597000000000016e-06, 2.55600000000078e-06, 2.583000000000446e-06, 2.5979999999994896e-06, 2.5549999999978368e-06, 2.5829999999969766e-06, 2.583000000000446e-06, 2.610999999999586e-06, 2.583000000000446e-06, 2.569000000000876e-06, 2.597000000000016e-06, 2.6249999999991558e-06, 2.5839999999999197e-06, 2.610999999999586e-06]</msg>
<status status="PASS" starttime="20201115 22:11:43.364" endtime="20201115 22:11:43.365"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.359" endtime="20201115 22:11:43.366"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:43.368" endtime="20201115 22:11:43.369"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:43.372" endtime="20201115 22:11:43.391"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.370" endtime="20201115 22:11:43.392"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.366" endtime="20201115 22:11:43.392"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.000" endtime="20201115 22:11:43.392"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.998" endtime="20201115 22:11:43.393"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.997" endtime="20201115 22:11:43.393"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:43.395" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:43.404" endtime="20201115 22:11:43.421"></status>
</kw>
<msg timestamp="20201115 22:11:43.422" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:43.403" endtime="20201115 22:11:43.422"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:43.425" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:43.423" endtime="20201115 22:11:43.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:43.426" endtime="20201115 22:11:43.427"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.400" endtime="20201115 22:11:43.428"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.398" endtime="20201115 22:11:43.429"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:43.436" endtime="20201115 22:11:43.723"></status>
</kw>
<msg timestamp="20201115 22:11:43.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025269875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025272736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:43.434" endtime="20201115 22:11:43.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:43.734" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025269875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025272736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:43.727" endtime="20201115 22:11:43.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:43.735" endtime="20201115 22:11:43.737"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.432" endtime="20201115 22:11:43.737"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.430" endtime="20201115 22:11:43.738"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:43.742" level="INFO">${RESULT} = [{'time': 0.025272736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.860999999999836e-06, 'source_diff': 2.860999999999836e-06}, {'time': 0.025403819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:43.738" endtime="20201115 22:11:43.742"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:43.757" level="INFO">${OVERHEAD} = {'source_diff': [2.860999999999836e-06, 2.833000000000696e-06, 2.874999999999406e-06, 2.8340000000001697e-06, 2.874999999999406e-06, 2.8889999999989757e-06, 2.874999999999406e-06, 2.8469999999967965e-...</msg>
<status status="PASS" starttime="20201115 22:11:43.743" endtime="20201115 22:11:43.758"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:43.762" level="INFO">NAME: 00-overhead-3-remove</msg>
<status status="PASS" starttime="20201115 22:11:43.761" endtime="20201115 22:11:43.762"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:43.764" level="INFO">VALUE: [2.860999999999836e-06, 2.833000000000696e-06, 2.874999999999406e-06, 2.8340000000001697e-06, 2.874999999999406e-06, 2.8889999999989757e-06, 2.874999999999406e-06, 2.8469999999967965e-06, 2.8750000000028753e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.860999999999836e-06, 2.860999999999836e-06, 2.874999999999406e-06, 2.9029999999985456e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.8619999999993095e-06, 2.860999999999836e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.8619999999993095e-06, 2.889000000002445e-06, 2.944000000001251e-06, 2.9300000000016813e-06, 2.860999999999836e-06, 2.874999999999406e-06, 2.889000000002445e-06, 2.915999999998642e-06, 2.9300000000016813e-06, 2.874999999999406e-06, 2.860999999999836e-06, 2.8750000000028753e-06, 2.8340000000001697e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.917000000001585e-06, 2.860999999999836e-06, 2.8889999999989757e-06, 2.860999999999836e-06, 2.8889999999989757e-06, 2.874999999999406e-06, 2.860999999999836e-06, 2.874999999999406e-06, 2.9030000000054845e-06, 2.847000000000266e-06, 2.860999999999836e-06, 2.860999999999836e-06]</msg>
<status status="PASS" starttime="20201115 22:11:43.763" endtime="20201115 22:11:43.765"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.758" endtime="20201115 22:11:43.765"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:43.768" endtime="20201115 22:11:43.769"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:43.771" endtime="20201115 22:11:43.790"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.769" endtime="20201115 22:11:43.791"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.766" endtime="20201115 22:11:43.791"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.396" endtime="20201115 22:11:43.792"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.394" endtime="20201115 22:11:43.792"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.393" endtime="20201115 22:11:43.792"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:43.794" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:43.803" endtime="20201115 22:11:43.821"></status>
</kw>
<msg timestamp="20201115 22:11:43.821" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:43.801" endtime="20201115 22:11:43.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:43.824" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:43.823" endtime="20201115 22:11:43.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:43.825" endtime="20201115 22:11:43.827"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.799" endtime="20201115 22:11:43.827"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.797" endtime="20201115 22:11:43.828"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:43.834" endtime="20201115 22:11:44.121"></status>
</kw>
<msg timestamp="20201115 22:11:44.124" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025227931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025231083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:43.832" endtime="20201115 22:11:44.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:44.132" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025227931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025231083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:44.125" endtime="20201115 22:11:44.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:44.133" endtime="20201115 22:11:44.135"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.830" endtime="20201115 22:11:44.135"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.828" endtime="20201115 22:11:44.135"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:44.140" level="INFO">${RESULT} = [{'time': 0.025231083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1520000000027915e-06, 'source_diff': 3.1520000000027915e-06}, {'time': 0.025374347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:44.136" endtime="20201115 22:11:44.140"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:44.153" level="INFO">${OVERHEAD} = {'source_diff': [3.1520000000027915e-06, 3.2079999999976017e-06, 3.167000000001835e-06, 3.194000000001501e-06, 3.181000000001405e-06, 3.165999999998892e-06, 3.153000000002265e-06, 3.1389999999992257e-...</msg>
<status status="PASS" starttime="20201115 22:11:44.141" endtime="20201115 22:11:44.154"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:44.158" level="INFO">NAME: 00-overhead-4-remove</msg>
<status status="PASS" starttime="20201115 22:11:44.157" endtime="20201115 22:11:44.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:44.161" level="INFO">VALUE: [3.1520000000027915e-06, 3.2079999999976017e-06, 3.167000000001835e-06, 3.194000000001501e-06, 3.181000000001405e-06, 3.165999999998892e-06, 3.153000000002265e-06, 3.1389999999992257e-06, 3.167000000001835e-06, 3.208000000001071e-06, 3.181000000001405e-06, 3.1669999999983656e-06, 3.222000000000641e-06, 3.165999999998892e-06, 3.165999999998892e-06, 3.1529999999987957e-06, 3.1949999999975054e-06, 3.167000000001835e-06, 3.1529999999987957e-06, 3.1669999999983656e-06, 3.179999999998462e-06, 3.1939999999980317e-06, 3.1669999999983656e-06, 3.181000000001405e-06, 3.153000000002265e-06, 3.1669999999983656e-06, 3.165999999998892e-06, 3.181000000001405e-06, 3.2079999999976017e-06, 3.111000000000086e-06, 3.139000000002695e-06, 3.165999999998892e-06, 3.2090000000005448e-06, 3.1529999999987957e-06, 3.208000000001071e-06, 3.179999999998462e-06, 3.179999999998462e-06, 3.2090000000005448e-06, 3.153000000002265e-06, 3.179999999998462e-06, 3.167000000001835e-06, 3.179999999998462e-06, 3.1949999999975054e-06, 3.151999999999322e-06, 3.179999999998462e-06, 3.1669999999983656e-06, 3.1669999999983656e-06, 3.1669999999983656e-06, 3.111000000000086e-06, 3.151999999999322e-06]</msg>
<status status="PASS" starttime="20201115 22:11:44.159" endtime="20201115 22:11:44.161"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.154" endtime="20201115 22:11:44.161"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:44.164" endtime="20201115 22:11:44.165"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:44.167" endtime="20201115 22:11:44.186"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.165" endtime="20201115 22:11:44.187"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.162" endtime="20201115 22:11:44.187"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.795" endtime="20201115 22:11:44.188"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.793" endtime="20201115 22:11:44.188"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.792" endtime="20201115 22:11:44.188"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:44.191" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:44.199" endtime="20201115 22:11:44.218"></status>
</kw>
<msg timestamp="20201115 22:11:44.218" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:44.198" endtime="20201115 22:11:44.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:44.221" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:44.220" endtime="20201115 22:11:44.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:44.222" endtime="20201115 22:11:44.224"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.195" endtime="20201115 22:11:44.224"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.193" endtime="20201115 22:11:44.225"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:44.231" endtime="20201115 22:11:44.517"></status>
</kw>
<msg timestamp="20201115 22:11:44.521" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025156444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025159958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:44.229" endtime="20201115 22:11:44.521"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:44.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025156444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025159958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:44.522" endtime="20201115 22:11:44.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:44.530" endtime="20201115 22:11:44.531"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.227" endtime="20201115 22:11:44.532"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.225" endtime="20201115 22:11:44.532"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:44.536" level="INFO">${RESULT} = [{'time': 0.025159958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5139999999996008e-06, 'source_diff': 3.5139999999996008e-06}, {'time': 0.025317972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:44.533" endtime="20201115 22:11:44.536"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:44.550" level="INFO">${OVERHEAD} = {'source_diff': [3.5139999999996008e-06, 3.472000000000891e-06, 3.4579999999978517e-06, 3.429999999998712e-06, 3.472000000000891e-06, 3.472000000000891e-06, 3.4439999999982818e-06, 3.4719999999974216e...</msg>
<status status="PASS" starttime="20201115 22:11:44.537" endtime="20201115 22:11:44.550"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:44.555" level="INFO">NAME: 00-overhead-5-remove</msg>
<status status="PASS" starttime="20201115 22:11:44.554" endtime="20201115 22:11:44.555"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:44.557" level="INFO">VALUE: [3.5139999999996008e-06, 3.472000000000891e-06, 3.4579999999978517e-06, 3.429999999998712e-06, 3.472000000000891e-06, 3.472000000000891e-06, 3.4439999999982818e-06, 3.4719999999974216e-06, 3.500000000000031e-06, 3.472000000000891e-06, 3.4169999999986156e-06, 3.4439999999982818e-06, 3.458000000001321e-06, 3.4589999999973253e-06, 3.4439999999982818e-06, 3.458000000001321e-06, 3.472000000000891e-06, 3.458000000001321e-06, 3.472000000000891e-06, 3.472000000000891e-06, 3.4029999999990457e-06, 3.4719999999974216e-06, 3.486000000000461e-06, 3.486000000000461e-06, 3.4590000000007948e-06, 3.458000000001321e-06, 3.4589999999973253e-06, 3.486000000000461e-06, 3.500000000000031e-06, 3.4440000000017512e-06, 3.4309999999981855e-06, 3.4579999999978517e-06, 3.4029999999990457e-06, 3.4439999999982818e-06, 3.486000000000461e-06, 3.4590000000007948e-06, 3.472000000000891e-06, 3.458000000001321e-06, 3.4719999999974216e-06, 3.5139999999996008e-06, 3.4579999999978517e-06, 3.4590000000042642e-06, 3.4579999999978517e-06, 3.4579999999978517e-06, 3.4859999999969915e-06, 3.4720000000043605e-06, 3.4439999999982818e-06, 3.4589999999973253e-06, 3.4580000000047906e-06, 3.4579999999978517e-06]</msg>
<status status="PASS" starttime="20201115 22:11:44.556" endtime="20201115 22:11:44.558"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.551" endtime="20201115 22:11:44.558"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:44.561" endtime="20201115 22:11:44.562"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:44.564" endtime="20201115 22:11:44.584"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.563" endtime="20201115 22:11:44.584"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.559" endtime="20201115 22:11:44.585"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.191" endtime="20201115 22:11:44.585"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.190" endtime="20201115 22:11:44.585"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.189" endtime="20201115 22:11:44.585"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:44.587" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:44.596" endtime="20201115 22:11:44.616"></status>
</kw>
<msg timestamp="20201115 22:11:44.616" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:44.595" endtime="20201115 22:11:44.616"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:44.619" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:44.617" endtime="20201115 22:11:44.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:44.620" endtime="20201115 22:11:44.622"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.592" endtime="20201115 22:11:44.622"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.590" endtime="20201115 22:11:44.622"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:44.629" endtime="20201115 22:11:44.915"></status>
</kw>
<msg timestamp="20201115 22:11:44.918" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025036458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025040194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:44.627" endtime="20201115 22:11:44.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:44.926" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025036458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025040194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:44.920" endtime="20201115 22:11:44.927"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:44.928" endtime="20201115 22:11:44.929"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.625" endtime="20201115 22:11:44.930"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.623" endtime="20201115 22:11:44.930"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:44.934" level="INFO">${RESULT} = [{'time': 0.025040194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.736000000000711e-06, 'source_diff': 3.736000000000711e-06}, {'time': 0.025204125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:44.931" endtime="20201115 22:11:44.935"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:44.948" level="INFO">${OVERHEAD} = {'source_diff': [3.736000000000711e-06, 3.750000000000281e-06, 3.750000000000281e-06, 3.7779999999994207e-06, 3.776999999999947e-06, 3.750000000000281e-06, 3.7919999999989906e-06, 3.736000000000711e-0...</msg>
<status status="PASS" starttime="20201115 22:11:44.935" endtime="20201115 22:11:44.949"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:44.953" level="INFO">NAME: 00-overhead-6-remove</msg>
<status status="PASS" starttime="20201115 22:11:44.952" endtime="20201115 22:11:44.953"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:44.955" level="INFO">VALUE: [3.736000000000711e-06, 3.750000000000281e-06, 3.750000000000281e-06, 3.7779999999994207e-06, 3.776999999999947e-06, 3.750000000000281e-06, 3.7919999999989906e-06, 3.736000000000711e-06, 3.763999999999851e-06, 3.736000000000711e-06, 3.736000000000711e-06, 3.7219999999976716e-06, 3.7359999999972415e-06, 3.804999999999087e-06, 3.6940000000020012e-06, 3.722000000001141e-06, 3.750000000000281e-06, 3.7359999999972415e-06, 3.790999999999517e-06, 3.7219999999976716e-06, 3.750000000000281e-06, 3.763999999999851e-06, 3.7499999999968114e-06, 3.679999999998962e-06, 3.750000000000281e-06, 3.763999999999851e-06, 3.750000000000281e-06, 3.693999999998532e-06, 3.763999999999851e-06, 3.736000000000711e-06, 3.750000000000281e-06, 3.750000000000281e-06, 3.722000000001141e-06, 3.763999999999851e-06, 3.763999999999851e-06, 3.736000000000711e-06, 3.7219999999976716e-06, 3.77800000000289e-06, 3.7360000000041804e-06, 3.77800000000289e-06, 3.7499999999968114e-06, 3.7500000000037503e-06, 3.7500000000037503e-06, 3.737000000003654e-06, 3.7359999999972415e-06, 3.7499999999968114e-06, 3.7499999999968114e-06, 3.7500000000037503e-06, 3.7639999999963814e-06, 3.737000000003654e-06]</msg>
<status status="PASS" starttime="20201115 22:11:44.954" endtime="20201115 22:11:44.956"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.949" endtime="20201115 22:11:44.957"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:44.959" endtime="20201115 22:11:44.960"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:44.962" endtime="20201115 22:11:44.982"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.961" endtime="20201115 22:11:44.982"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.957" endtime="20201115 22:11:44.983"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.588" endtime="20201115 22:11:44.983"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.586" endtime="20201115 22:11:44.983"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.586" endtime="20201115 22:11:44.983"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:44.986" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:44.995" endtime="20201115 22:11:45.014"></status>
</kw>
<msg timestamp="20201115 22:11:45.015" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:44.993" endtime="20201115 22:11:45.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:45.017" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:45.016" endtime="20201115 22:11:45.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:45.018" endtime="20201115 22:11:45.020"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.990" endtime="20201115 22:11:45.020"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.988" endtime="20201115 22:11:45.021"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:45.027" endtime="20201115 22:11:45.314"></status>
</kw>
<msg timestamp="20201115 22:11:45.317" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024872472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024876486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:45.026" endtime="20201115 22:11:45.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:45.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024872472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024876486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:45.318" endtime="20201115 22:11:45.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:45.326" endtime="20201115 22:11:45.327"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.023" endtime="20201115 22:11:45.328"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.021" endtime="20201115 22:11:45.328"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:45.332" level="INFO">${RESULT} = [{'time': 0.024876486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.014000000000101e-06, 'source_diff': 4.014000000000101e-06}, {'time': 0.025051792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:45.329" endtime="20201115 22:11:45.333"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:45.353" level="INFO">${OVERHEAD} = {'source_diff': [4.014000000000101e-06, 4.000000000000531e-06, 4.0559999999988106e-06, 4.096999999998047e-06, 4.041999999999241e-06, 4.08400000000142e-06, 4.040999999999767e-06, 4.125000000000656e-06,...</msg>
<status status="PASS" starttime="20201115 22:11:45.339" endtime="20201115 22:11:45.354"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:45.358" level="INFO">NAME: 00-overhead-7-remove</msg>
<status status="PASS" starttime="20201115 22:11:45.357" endtime="20201115 22:11:45.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:45.360" level="INFO">VALUE: [4.014000000000101e-06, 4.000000000000531e-06, 4.0559999999988106e-06, 4.096999999998047e-06, 4.041999999999241e-06, 4.08400000000142e-06, 4.040999999999767e-06, 4.125000000000656e-06, 4.041999999999241e-06, 4.054999999999337e-06, 4.027999999999671e-06, 4.041999999999241e-06, 4.04200000000271e-06, 4.069000000002376e-06, 4.054999999999337e-06, 4.041999999999241e-06, 4.041999999999241e-06, 4.041999999999241e-06, 4.04200000000271e-06, 4.014000000000101e-06, 4.027000000000197e-06, 4.027000000000197e-06, 4.027000000000197e-06, 4.027999999999671e-06, 4.111000000001086e-06, 4.040999999999767e-06, 4.027000000000197e-06, 4.041999999999241e-06, 4.0559999999988106e-06, 4.027000000000197e-06, 4.083000000001946e-06, 4.041999999999241e-06, 4.097000000001516e-06, 4.027000000000197e-06, 4.041999999999241e-06, 3.9999999999970615e-06, 4.04200000000271e-06, 4.02800000000314e-06, 4.0410000000032364e-06, 4.026999999996728e-06, 4.055999999995341e-06, 4.041999999995771e-06, 4.026999999996728e-06, 4.0409999999962976e-06, 4.02800000000314e-06, 4.04200000000271e-06, 4.0410000000032364e-06, 4.026999999996728e-06, 3.9859999999974915e-06, 4.0409999999962976e-06]</msg>
<status status="PASS" starttime="20201115 22:11:45.359" endtime="20201115 22:11:45.361"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.354" endtime="20201115 22:11:45.361"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:45.364" endtime="20201115 22:11:45.365"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:45.367" endtime="20201115 22:11:45.386"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.365" endtime="20201115 22:11:45.387"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.362" endtime="20201115 22:11:45.387"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.986" endtime="20201115 22:11:45.388"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.985" endtime="20201115 22:11:45.388"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.984" endtime="20201115 22:11:45.388"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:45.390" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:45.399" endtime="20201115 22:11:45.419"></status>
</kw>
<msg timestamp="20201115 22:11:45.419" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:45.397" endtime="20201115 22:11:45.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:45.422" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:45.420" endtime="20201115 22:11:45.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:45.423" endtime="20201115 22:11:45.424"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.395" endtime="20201115 22:11:45.425"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.393" endtime="20201115 22:11:45.425"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:45.432" endtime="20201115 22:11:45.719"></status>
</kw>
<msg timestamp="20201115 22:11:45.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025017806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025022208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:45.430" endtime="20201115 22:11:45.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:45.730" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025017806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025022208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:45.723" endtime="20201115 22:11:45.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:45.731" endtime="20201115 22:11:45.733"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.428" endtime="20201115 22:11:45.733"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.426" endtime="20201115 22:11:45.734"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:45.738" level="INFO">${RESULT} = [{'time': 0.025022208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.402000000000572e-06, 'source_diff': 4.402000000000572e-06}, {'time': 0.025219, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 22:11:45.734" endtime="20201115 22:11:45.738"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:45.752" level="INFO">${OVERHEAD} = {'source_diff': [4.402000000000572e-06, 4.346999999998297e-06, 4.332999999998727e-06, 4.3339999999982e-06, 4.332999999998727e-06, 4.3199999999986305e-06, 4.318999999999157e-06, 4.332999999998727e-06, ...</msg>
<status status="PASS" starttime="20201115 22:11:45.739" endtime="20201115 22:11:45.752"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:45.756" level="INFO">NAME: 00-overhead-8-remove</msg>
<status status="PASS" starttime="20201115 22:11:45.755" endtime="20201115 22:11:45.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:45.759" level="INFO">VALUE: [4.402000000000572e-06, 4.346999999998297e-06, 4.332999999998727e-06, 4.3339999999982e-06, 4.332999999998727e-06, 4.3199999999986305e-06, 4.318999999999157e-06, 4.332999999998727e-06, 4.346999999998297e-06, 4.34799999999777e-06, 4.332999999998727e-06, 4.347000000001766e-06, 4.346999999998297e-06, 4.33400000000167e-06, 4.36200000000081e-06, 4.332999999998727e-06, 4.33400000000167e-06, 4.277999999999921e-06, 4.333000000002196e-06, 4.3339999999982e-06, 4.332999999998727e-06, 4.319000000002626e-06, 4.291999999999491e-06, 4.319000000002626e-06, 4.333000000002196e-06, 4.318999999999157e-06, 4.291000000000017e-06, 4.304999999999587e-06, 4.333000000002196e-06, 4.34799999999777e-06, 4.264000000000351e-06, 4.333000000002196e-06, 4.319000000002626e-06, 4.36200000000081e-06, 4.318999999995687e-06, 4.318999999995687e-06, 4.3049999999961175e-06, 4.347000000001766e-06, 4.332999999995257e-06, 4.3200000000021e-06, 4.389000000000476e-06, 4.333000000002196e-06, 4.318999999995687e-06, 4.319000000002626e-06, 4.333000000002196e-06, 4.319000000002626e-06, 4.332999999995257e-06, 4.347000000001766e-06, 4.319999999995161e-06, 4.416999999999616e-06]</msg>
<status status="PASS" starttime="20201115 22:11:45.757" endtime="20201115 22:11:45.759"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.753" endtime="20201115 22:11:45.760"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:45.762" endtime="20201115 22:11:45.763"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:45.765" endtime="20201115 22:11:45.785"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.764" endtime="20201115 22:11:45.785"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.760" endtime="20201115 22:11:45.786"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.391" endtime="20201115 22:11:45.786"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.389" endtime="20201115 22:11:45.786"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.388" endtime="20201115 22:11:45.786"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:45.788" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:45.797" endtime="20201115 22:11:45.819"></status>
</kw>
<msg timestamp="20201115 22:11:45.819" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:45.796" endtime="20201115 22:11:45.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:45.821" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:45.820" endtime="20201115 22:11:45.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:45.823" endtime="20201115 22:11:45.824"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.793" endtime="20201115 22:11:45.825"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.791" endtime="20201115 22:11:45.825"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:45.832" endtime="20201115 22:11:46.119"></status>
</kw>
<msg timestamp="20201115 22:11:46.122" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024771403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024776, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:11:45.830" endtime="20201115 22:11:46.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:46.130" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024771403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024776, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:11:46.123" endtime="20201115 22:11:46.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:46.131" endtime="20201115 22:11:46.133"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.827" endtime="20201115 22:11:46.133"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.826" endtime="20201115 22:11:46.134"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:46.138" level="INFO">${RESULT} = [{'time': 0.024776, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.596999999998547e-06, 'source_diff': 4.596999999998547e-06}, {'time': 0.024984278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 22:11:46.134" endtime="20201115 22:11:46.138"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:46.152" level="INFO">${OVERHEAD} = {'source_diff': [4.596999999998547e-06, 4.6249999999976865e-06, 4.596999999998547e-06, 4.625000000001156e-06, 4.625000000001156e-06, 4.625000000001156e-06, 4.625000000001156e-06, 4.639000000000726e-06...</msg>
<status status="PASS" starttime="20201115 22:11:46.139" endtime="20201115 22:11:46.152"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:46.156" level="INFO">NAME: 00-overhead-9-remove</msg>
<status status="PASS" starttime="20201115 22:11:46.155" endtime="20201115 22:11:46.157"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:46.159" level="INFO">VALUE: [4.596999999998547e-06, 4.6249999999976865e-06, 4.596999999998547e-06, 4.625000000001156e-06, 4.625000000001156e-06, 4.625000000001156e-06, 4.625000000001156e-06, 4.639000000000726e-06, 4.611000000001586e-06, 4.6249999999976865e-06, 4.610999999998117e-06, 4.611000000001586e-06, 4.611000000001586e-06, 4.610999999998117e-06, 4.653000000000296e-06, 4.597000000002016e-06, 4.639000000000726e-06, 4.611000000001586e-06, 4.610999999998117e-06, 4.639000000000726e-06, 4.611000000001586e-06, 4.625000000001156e-06, 4.6249999999976865e-06, 4.61200000000106e-06, 4.625000000001156e-06, 4.625000000001156e-06, 4.625000000001156e-06, 4.611000000001586e-06, 4.6249999999976865e-06, 4.5699999999988805e-06, 4.61200000000106e-06, 4.610999999994647e-06, 4.639000000000726e-06, 4.639000000000726e-06, 4.625000000001156e-06, 4.625000000001156e-06, 4.611000000001586e-06, 4.624999999994217e-06, 4.610999999994647e-06, 4.583000000002446e-06, 4.6810000000063745e-06, 4.625000000001156e-06, 4.597000000002016e-06, 4.625000000001156e-06, 4.625000000001156e-06, 4.693999999999532e-06, 4.54200000000321e-06, 4.624999999994217e-06, 4.625000000001156e-06, 4.625000000001156e-06]</msg>
<status status="PASS" starttime="20201115 22:11:46.157" endtime="20201115 22:11:46.159"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.153" endtime="20201115 22:11:46.160"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:46.162" endtime="20201115 22:11:46.163"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:46.165" endtime="20201115 22:11:46.184"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.164" endtime="20201115 22:11:46.185"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.160" endtime="20201115 22:11:46.185"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.789" endtime="20201115 22:11:46.186"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.787" endtime="20201115 22:11:46.186"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.787" endtime="20201115 22:11:46.186"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:46.188" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:46.197" endtime="20201115 22:11:46.219"></status>
</kw>
<msg timestamp="20201115 22:11:46.220" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:46.196" endtime="20201115 22:11:46.220"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:46.223" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:46.221" endtime="20201115 22:11:46.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:46.224" endtime="20201115 22:11:46.226"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.193" endtime="20201115 22:11:46.226"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.191" endtime="20201115 22:11:46.226"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:46.233" endtime="20201115 22:11:46.520"></status>
</kw>
<msg timestamp="20201115 22:11:46.523" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024869944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024874847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:46.231" endtime="20201115 22:11:46.523"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:46.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024869944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024874847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:46.524" endtime="20201115 22:11:46.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:46.532" endtime="20201115 22:11:46.533"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.229" endtime="20201115 22:11:46.534"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.227" endtime="20201115 22:11:46.534"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:46.538" level="INFO">${RESULT} = [{'time': 0.024874847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.902999999997076e-06, 'source_diff': 4.902999999997076e-06}, {'time': 0.025096403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:46.535" endtime="20201115 22:11:46.539"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:46.552" level="INFO">${OVERHEAD} = {'source_diff': [4.902999999997076e-06, 4.917000000000116e-06, 4.916000000000642e-06, 4.902999999997076e-06, 4.917000000000116e-06, 4.917000000000116e-06, 4.917000000000116e-06, 4.930999999999686e-06,...</msg>
<status status="PASS" starttime="20201115 22:11:46.539" endtime="20201115 22:11:46.553"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:46.557" level="INFO">NAME: 00-overhead-10-remove</msg>
<status status="PASS" starttime="20201115 22:11:46.556" endtime="20201115 22:11:46.557"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:46.559" level="INFO">VALUE: [4.902999999997076e-06, 4.917000000000116e-06, 4.916000000000642e-06, 4.902999999997076e-06, 4.917000000000116e-06, 4.917000000000116e-06, 4.917000000000116e-06, 4.930999999999686e-06, 4.917000000000116e-06, 4.916000000000642e-06, 4.917000000000116e-06, 4.915999999997173e-06, 4.903000000000546e-06, 4.917000000000116e-06, 4.903000000000546e-06, 4.916000000000642e-06, 4.917000000000116e-06, 4.917000000000116e-06, 4.916000000000642e-06, 4.915999999997173e-06, 4.917000000000116e-06, 4.916000000000642e-06, 4.917000000000116e-06, 4.875000000001406e-06, 4.84800000000174e-06, 4.917000000000116e-06, 4.930999999999686e-06, 4.917000000000116e-06, 4.915999999997173e-06, 4.917000000000116e-06, 4.917000000000116e-06, 4.917000000000116e-06, 4.902999999993607e-06, 4.916000000000642e-06, 4.917000000000116e-06, 4.930999999999686e-06, 4.943999999999782e-06, 4.930999999999686e-06, 4.916000000000642e-06, 4.930999999999686e-06, 4.916000000000642e-06, 4.930000000000212e-06, 4.875000000001406e-06, 4.901999999994133e-06, 4.902999999993607e-06, 4.917000000000116e-06, 4.903000000000546e-06, 4.917000000000116e-06, 4.943999999999782e-06, 4.917000000000116e-06]</msg>
<status status="PASS" starttime="20201115 22:11:46.558" endtime="20201115 22:11:46.560"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.553" endtime="20201115 22:11:46.560"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:46.563" endtime="20201115 22:11:46.564"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:46.566" endtime="20201115 22:11:46.585"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.564" endtime="20201115 22:11:46.586"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.561" endtime="20201115 22:11:46.586"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.189" endtime="20201115 22:11:46.587"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.187" endtime="20201115 22:11:46.587"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.186" endtime="20201115 22:11:46.587"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:46.589" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:46.598" endtime="20201115 22:11:46.622"></status>
</kw>
<msg timestamp="20201115 22:11:46.622" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:46.597" endtime="20201115 22:11:46.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:46.625" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:46.623" endtime="20201115 22:11:46.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:46.626" endtime="20201115 22:11:46.627"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.594" endtime="20201115 22:11:46.628"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.592" endtime="20201115 22:11:46.628"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:46.635" endtime="20201115 22:11:46.921"></status>
</kw>
<msg timestamp="20201115 22:11:46.924" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025780153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025785361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:46.633" endtime="20201115 22:11:46.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:46.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025780153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025785361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:46.925" endtime="20201115 22:11:46.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:46.933" endtime="20201115 22:11:46.935"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.631" endtime="20201115 22:11:46.935"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.629" endtime="20201115 22:11:46.936"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:46.940" level="INFO">${RESULT} = [{'time': 0.025785361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.207999999999602e-06, 'source_diff': 5.207999999999602e-06}, {'time': 0.026026389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:46.937" endtime="20201115 22:11:46.940"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:46.955" level="INFO">${OVERHEAD} = {'source_diff': [5.207999999999602e-06, 5.221999999999172e-06, 5.194000000000032e-06, 5.2089999999990755e-06, 5.1949999999995056e-06, 5.194000000000032e-06, 5.222000000002641e-06, 5.207999999999602e-0...</msg>
<status status="PASS" starttime="20201115 22:11:46.941" endtime="20201115 22:11:46.956"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:46.960" level="INFO">NAME: 00-overhead-11-remove</msg>
<status status="PASS" starttime="20201115 22:11:46.959" endtime="20201115 22:11:46.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:46.963" level="INFO">VALUE: [5.207999999999602e-06, 5.221999999999172e-06, 5.194000000000032e-06, 5.2089999999990755e-06, 5.1949999999995056e-06, 5.194000000000032e-06, 5.222000000002641e-06, 5.207999999999602e-06, 5.207999999999602e-06, 5.207999999999602e-06, 5.221999999999172e-06, 5.207999999999602e-06, 5.209000000002545e-06, 5.2499999999983116e-06, 5.222999999998645e-06, 5.222000000002641e-06, 5.207999999999602e-06, 5.194000000000032e-06, 5.221999999999172e-06, 5.207999999999602e-06, 5.194000000000032e-06, 5.153000000000796e-06, 5.277000000001447e-06, 5.221999999999172e-06, 5.2089999999990755e-06, 5.194000000000032e-06, 5.207999999999602e-06, 5.1950000000064445e-06, 5.1949999999995056e-06, 5.2499999999983116e-06, 5.2089999999990755e-06, 5.235999999998742e-06, 5.207999999999602e-06, 5.207999999999602e-06, 5.221999999999172e-06, 5.194000000000032e-06, 5.207999999999602e-06, 5.235999999998742e-06, 5.209000000006014e-06, 5.166999999993427e-06, 5.209000000006014e-06, 5.222999999998645e-06, 5.152999999993857e-06, 5.222999999998645e-06, 5.222999999998645e-06, 5.207999999999602e-06, 5.153000000000796e-06, 5.207999999999602e-06, 5.207999999999602e-06, 5.194000000000032e-06]</msg>
<status status="PASS" starttime="20201115 22:11:46.961" endtime="20201115 22:11:46.963"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.956" endtime="20201115 22:11:46.963"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:46.966" endtime="20201115 22:11:46.967"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:46.969" endtime="20201115 22:11:46.989"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.967" endtime="20201115 22:11:46.989"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.964" endtime="20201115 22:11:46.990"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.590" endtime="20201115 22:11:46.990"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.588" endtime="20201115 22:11:46.990"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.587" endtime="20201115 22:11:46.991"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:46.993" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:47.002" endtime="20201115 22:11:47.025"></status>
</kw>
<msg timestamp="20201115 22:11:47.026" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:47.000" endtime="20201115 22:11:47.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:47.028" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:47.027" endtime="20201115 22:11:47.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:47.029" endtime="20201115 22:11:47.031"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.997" endtime="20201115 22:11:47.031"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.995" endtime="20201115 22:11:47.032"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:47.038" endtime="20201115 22:11:47.326"></status>
</kw>
<msg timestamp="20201115 22:11:47.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025049611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025055125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:47.037" endtime="20201115 22:11:47.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:47.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025049611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025055125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:47.330" endtime="20201115 22:11:47.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:47.338" endtime="20201115 22:11:47.339"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.034" endtime="20201115 22:11:47.340"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.032" endtime="20201115 22:11:47.340"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:47.344" level="INFO">${RESULT} = [{'time': 0.025055125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.514000000001601e-06, 'source_diff': 5.514000000001601e-06}, {'time': 0.025314764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:47.341" endtime="20201115 22:11:47.345"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:47.358" level="INFO">${OVERHEAD} = {'source_diff': [5.514000000001601e-06, 5.485999999998992e-06, 5.499999999998562e-06, 5.499999999998562e-06, 5.485999999998992e-06, 5.500000000002031e-06, 5.5139999999981315e-06, 5.514000000001601e-06...</msg>
<status status="PASS" starttime="20201115 22:11:47.345" endtime="20201115 22:11:47.359"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:47.363" level="INFO">NAME: 00-overhead-12-remove</msg>
<status status="PASS" starttime="20201115 22:11:47.362" endtime="20201115 22:11:47.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:47.365" level="INFO">VALUE: [5.514000000001601e-06, 5.485999999998992e-06, 5.499999999998562e-06, 5.499999999998562e-06, 5.485999999998992e-06, 5.500000000002031e-06, 5.5139999999981315e-06, 5.514000000001601e-06, 5.499999999998562e-06, 5.500000000002031e-06, 5.471999999999422e-06, 5.499999999998562e-06, 5.500000000002031e-06, 5.499999999998562e-06, 5.5139999999981315e-06, 5.500000000002031e-06, 5.499999999998562e-06, 5.444999999999756e-06, 5.499999999998562e-06, 5.500000000002031e-06, 5.485999999998992e-06, 5.514000000001601e-06, 5.457999999999852e-06, 5.500000000002031e-06, 5.5139999999981315e-06, 5.51400000000507e-06, 5.471999999999422e-06, 5.5139999999981315e-06, 5.51400000000507e-06, 5.499999999998562e-06, 5.457999999999852e-06, 5.499999999998562e-06, 5.499999999998562e-06, 5.499999999998562e-06, 5.5000000000055005e-06, 5.485999999998992e-06, 5.471999999999422e-06, 5.499999999998562e-06, 5.485999999998992e-06, 5.527999999997701e-06, 5.499999999998562e-06, 5.5000000000055005e-06, 5.526999999998228e-06, 5.485999999998992e-06, 5.499999999998562e-06, 5.499999999998562e-06, 5.499999999998562e-06, 5.499999999998562e-06, 5.485999999998992e-06, 5.444000000000282e-06]</msg>
<status status="PASS" starttime="20201115 22:11:47.364" endtime="20201115 22:11:47.366"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.359" endtime="20201115 22:11:47.367"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:47.369" endtime="20201115 22:11:47.370"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:47.372" endtime="20201115 22:11:47.392"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.371" endtime="20201115 22:11:47.392"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.367" endtime="20201115 22:11:47.393"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.993" endtime="20201115 22:11:47.393"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.992" endtime="20201115 22:11:47.393"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.991" endtime="20201115 22:11:47.393"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:47.396" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:47.404" endtime="20201115 22:11:47.429"></status>
</kw>
<msg timestamp="20201115 22:11:47.430" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:47.403" endtime="20201115 22:11:47.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:47.432" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:47.431" endtime="20201115 22:11:47.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:47.433" endtime="20201115 22:11:47.435"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.400" endtime="20201115 22:11:47.435"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.398" endtime="20201115 22:11:47.436"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:47.442" endtime="20201115 22:11:47.729"></status>
</kw>
<msg timestamp="20201115 22:11:47.732" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025290569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025296361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:47.440" endtime="20201115 22:11:47.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:47.740" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025290569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025296361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:47.733" endtime="20201115 22:11:47.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:47.741" endtime="20201115 22:11:47.743"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.438" endtime="20201115 22:11:47.744"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.436" endtime="20201115 22:11:47.744"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:47.748" level="INFO">${RESULT} = [{'time': 0.025296361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.792000000000991e-06, 'source_diff': 5.792000000000991e-06}, {'time': 0.025576347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:47.745" endtime="20201115 22:11:47.748"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:47.762" level="INFO">${OVERHEAD} = {'source_diff': [5.792000000000991e-06, 5.804999999997618e-06, 5.736000000002711e-06, 5.750000000002281e-06, 5.735999999999242e-06, 5.792000000000991e-06, 5.792000000000991e-06, 5.792000000000991e-06,...</msg>
<status status="PASS" starttime="20201115 22:11:47.749" endtime="20201115 22:11:47.762"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:47.767" level="INFO">NAME: 00-overhead-13-remove</msg>
<status status="PASS" starttime="20201115 22:11:47.766" endtime="20201115 22:11:47.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:47.770" level="INFO">VALUE: [5.792000000000991e-06, 5.804999999997618e-06, 5.736000000002711e-06, 5.750000000002281e-06, 5.735999999999242e-06, 5.792000000000991e-06, 5.792000000000991e-06, 5.792000000000991e-06, 5.791000000001517e-06, 5.791000000001517e-06, 5.84800000000274e-06, 5.790999999998048e-06, 5.791000000001517e-06, 5.804999999997618e-06, 5.749999999998812e-06, 5.806000000000561e-06, 5.791999999997521e-06, 5.790999999998048e-06, 5.777000000001947e-06, 5.792000000000991e-06, 5.819000000000657e-06, 5.778000000001421e-06, 5.833000000003696e-06, 5.77800000000489e-06, 5.80600000000403e-06, 5.79200000000446e-06, 5.7779999999979514e-06, 5.790999999998048e-06, 5.805999999997091e-06, 5.791000000004987e-06, 5.790999999998048e-06, 5.805999999997091e-06, 5.790999999998048e-06, 5.749999999998812e-06, 5.790999999998048e-06, 5.79200000000446e-06, 5.76400000000532e-06, 5.77800000000489e-06, 5.77800000000489e-06, 5.804999999997618e-06, 5.80600000000403e-06, 5.791000000004987e-06, 5.790999999998048e-06, 5.79200000000446e-06, 5.804999999997618e-06, 5.84800000000274e-06, 5.79200000000446e-06, 5.7779999999979514e-06, 5.790999999998048e-06, 5.790999999998048e-06]</msg>
<status status="PASS" starttime="20201115 22:11:47.768" endtime="20201115 22:11:47.770"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.763" endtime="20201115 22:11:47.771"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:47.773" endtime="20201115 22:11:47.774"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:47.776" endtime="20201115 22:11:47.795"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.775" endtime="20201115 22:11:47.796"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.771" endtime="20201115 22:11:47.796"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.396" endtime="20201115 22:11:47.797"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.395" endtime="20201115 22:11:47.797"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.394" endtime="20201115 22:11:47.797"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:47.799" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:47.808" endtime="20201115 22:11:47.834"></status>
</kw>
<msg timestamp="20201115 22:11:47.834" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:47.807" endtime="20201115 22:11:47.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:47.837" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:47.835" endtime="20201115 22:11:47.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:47.838" endtime="20201115 22:11:47.839"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.804" endtime="20201115 22:11:47.840"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.802" endtime="20201115 22:11:47.840"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:47.847" endtime="20201115 22:11:48.133"></status>
</kw>
<msg timestamp="20201115 22:11:48.136" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025160069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025166167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:47.845" endtime="20201115 22:11:48.136"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:48.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025160069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025166167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:48.137" endtime="20201115 22:11:48.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:48.145" endtime="20201115 22:11:48.147"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.843" endtime="20201115 22:11:48.148"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.841" endtime="20201115 22:11:48.148"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:48.152" level="INFO">${RESULT} = [{'time': 0.025166167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0979999999995205e-06, 'source_diff': 6.0979999999995205e-06}, {'time': 0.025469, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:11:48.149" endtime="20201115 22:11:48.152"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:48.166" level="INFO">${OVERHEAD} = {'source_diff': [6.0979999999995205e-06, 6.097000000000047e-06, 6.083000000000477e-06, 6.069999999996911e-06, 6.083000000000477e-06, 6.0829999999970075e-06, 6.0839999999999506e-06, 6.083000000000477e-...</msg>
<status status="PASS" starttime="20201115 22:11:48.153" endtime="20201115 22:11:48.167"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:48.171" level="INFO">NAME: 00-overhead-14-remove</msg>
<status status="PASS" starttime="20201115 22:11:48.170" endtime="20201115 22:11:48.171"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:48.174" level="INFO">VALUE: [6.0979999999995205e-06, 6.097000000000047e-06, 6.083000000000477e-06, 6.069999999996911e-06, 6.083000000000477e-06, 6.0829999999970075e-06, 6.0839999999999506e-06, 6.083000000000477e-06, 6.0839999999999506e-06, 6.083000000000477e-06, 6.083000000000477e-06, 6.124999999999187e-06, 6.083000000000477e-06, 6.083000000000477e-06, 6.083000000000477e-06, 6.070000000000381e-06, 6.125000000002656e-06, 6.097000000000047e-06, 6.110999999999617e-06, 6.069000000000907e-06, 6.042000000001241e-06, 6.097999999996051e-06, 6.069999999996911e-06, 6.08400000000342e-06, 6.083999999996481e-06, 6.0829999999970075e-06, 6.069999999996911e-06, 6.0689999999974376e-06, 6.0689999999974376e-06, 6.083999999996481e-06, 6.0690000000043764e-06, 6.08400000000342e-06, 6.054999999997868e-06, 6.054999999997868e-06, 6.097000000003516e-06, 6.08400000000342e-06, 6.07000000000385e-06, 6.0829999999970075e-06, 6.07000000000385e-06, 6.07000000000385e-06, 6.0139999999986316e-06, 6.069999999996911e-06, 6.0279999999982015e-06, 6.02800000000514e-06, 6.083000000003946e-06, 6.083000000003946e-06, 6.0689999999974376e-06, 6.097000000003516e-06, 6.083000000003946e-06, 6.097000000003516e-06]</msg>
<status status="PASS" starttime="20201115 22:11:48.172" endtime="20201115 22:11:48.174"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.167" endtime="20201115 22:11:48.174"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:48.177" endtime="20201115 22:11:48.178"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:48.180" endtime="20201115 22:11:48.199"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.178" endtime="20201115 22:11:48.200"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.175" endtime="20201115 22:11:48.201"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.800" endtime="20201115 22:11:48.201"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.798" endtime="20201115 22:11:48.201"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.797" endtime="20201115 22:11:48.201"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:48.203" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:48.212" endtime="20201115 22:11:48.239"></status>
</kw>
<msg timestamp="20201115 22:11:48.240" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:48.211" endtime="20201115 22:11:48.240"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:48.242" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:48.241" endtime="20201115 22:11:48.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:48.243" endtime="20201115 22:11:48.245"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.208" endtime="20201115 22:11:48.245"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.206" endtime="20201115 22:11:48.246"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:48.252" endtime="20201115 22:11:48.539"></status>
</kw>
<msg timestamp="20201115 22:11:48.542" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025093514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025099889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:48.250" endtime="20201115 22:11:48.542"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:48.550" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025093514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025099889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:48.543" endtime="20201115 22:11:48.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:48.552" endtime="20201115 22:11:48.553"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.248" endtime="20201115 22:11:48.554"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.246" endtime="20201115 22:11:48.554"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:48.558" level="INFO">${RESULT} = [{'time': 0.025099889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.374999999999437e-06, 'source_diff': 6.374999999999437e-06}, {'time': 0.025423611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:48.555" endtime="20201115 22:11:48.558"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:48.574" level="INFO">${OVERHEAD} = {'source_diff': [6.374999999999437e-06, 6.374999999999437e-06, 6.347000000000297e-06, 6.430999999997716e-06, 6.374999999999437e-06, 6.374999999999437e-06, 6.375000000002906e-06, 6.374999999999437e-06,...</msg>
<status status="PASS" starttime="20201115 22:11:48.559" endtime="20201115 22:11:48.574"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:48.578" level="INFO">NAME: 00-overhead-15-remove</msg>
<status status="PASS" starttime="20201115 22:11:48.577" endtime="20201115 22:11:48.578"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:48.581" level="INFO">VALUE: [6.374999999999437e-06, 6.374999999999437e-06, 6.347000000000297e-06, 6.430999999997716e-06, 6.374999999999437e-06, 6.374999999999437e-06, 6.375000000002906e-06, 6.374999999999437e-06, 6.360999999999867e-06, 6.360999999999867e-06, 6.360999999999867e-06, 6.374999999999437e-06, 6.374999999999437e-06, 6.374999999999437e-06, 6.444000000001282e-06, 6.361000000003336e-06, 6.375000000002906e-06, 6.374999999999437e-06, 6.360999999999867e-06, 6.374999999999437e-06, 6.375000000002906e-06, 6.416000000002142e-06, 6.361000000003336e-06, 6.375000000002906e-06, 6.36200000000281e-06, 6.375000000002906e-06, 6.333999999996731e-06, 6.388999999995537e-06, 6.403000000002046e-06, 6.375000000002906e-06, 6.375000000002906e-06, 6.389000000002476e-06, 6.389000000002476e-06, 6.429999999994773e-06, 6.388999999995537e-06, 6.361000000003336e-06, 6.430000000001712e-06, 6.347999999996301e-06, 6.360999999996397e-06, 6.417000000001616e-06, 6.304999999998118e-06, 6.375000000002906e-06, 6.375000000002906e-06, 6.417000000001616e-06, 6.375000000002906e-06, 6.375000000002906e-06, 6.389000000002476e-06, 6.360999999996397e-06, 6.361000000003336e-06, 6.389000000002476e-06]</msg>
<status status="PASS" starttime="20201115 22:11:48.579" endtime="20201115 22:11:48.581"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.574" endtime="20201115 22:11:48.581"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:48.584" endtime="20201115 22:11:48.585"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:48.587" endtime="20201115 22:11:48.606"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.586" endtime="20201115 22:11:48.607"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.582" endtime="20201115 22:11:48.607"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.204" endtime="20201115 22:11:48.608"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.202" endtime="20201115 22:11:48.608"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.202" endtime="20201115 22:11:48.608"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:48.610" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:48.619" endtime="20201115 22:11:48.648"></status>
</kw>
<msg timestamp="20201115 22:11:48.648" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:48.618" endtime="20201115 22:11:48.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:48.650" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:48.649" endtime="20201115 22:11:48.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:48.652" endtime="20201115 22:11:48.653"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.615" endtime="20201115 22:11:48.654"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.613" endtime="20201115 22:11:48.654"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:48.661" endtime="20201115 22:11:48.946"></status>
</kw>
<msg timestamp="20201115 22:11:48.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025499944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025506611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:48.659" endtime="20201115 22:11:48.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:48.957" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025499944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025506611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:48.951" endtime="20201115 22:11:48.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:48.959" endtime="20201115 22:11:48.960"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.656" endtime="20201115 22:11:48.961"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.655" endtime="20201115 22:11:48.961"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:48.965" level="INFO">${RESULT} = [{'time': 0.025506611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.6669999999983964e-06, 'source_diff': 6.6669999999983964e-06}, {'time': 0.025844583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:48.962" endtime="20201115 22:11:48.966"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:48.979" level="INFO">${OVERHEAD} = {'source_diff': [6.6669999999983964e-06, 6.680000000001962e-06, 6.666000000002392e-06, 6.6529999999988265e-06, 6.6669999999983964e-06, 6.667000000001866e-06, 6.680000000001962e-06, 6.652000000002822e-...</msg>
<status status="PASS" starttime="20201115 22:11:48.966" endtime="20201115 22:11:48.980"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:48.984" level="INFO">NAME: 00-overhead-16-remove</msg>
<status status="PASS" starttime="20201115 22:11:48.983" endtime="20201115 22:11:48.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:48.986" level="INFO">VALUE: [6.6669999999983964e-06, 6.680000000001962e-06, 6.666000000002392e-06, 6.6529999999988265e-06, 6.6669999999983964e-06, 6.667000000001866e-06, 6.680000000001962e-06, 6.652000000002822e-06, 6.6669999999983964e-06, 6.7219999999972024e-06, 6.6529999999988265e-06, 6.680999999997966e-06, 6.6669999999983964e-06, 6.709000000000576e-06, 6.6669999999983964e-06, 6.665999999998923e-06, 6.681000000001436e-06, 6.653000000002296e-06, 6.653000000002296e-06, 6.639000000002726e-06, 6.666000000002392e-06, 6.680000000001962e-06, 6.653000000002296e-06, 6.681000000001436e-06, 6.653000000002296e-06, 6.680999999994497e-06, 6.667000000001866e-06, 6.667000000001866e-06, 6.666000000002392e-06, 6.680000000001962e-06, 6.708000000001102e-06, 6.638999999995787e-06, 6.665999999995453e-06, 6.7369999999997154e-06, 6.652000000002822e-06, 6.667000000001866e-06, 6.667000000001866e-06, 6.653000000002296e-06, 6.667000000001866e-06, 6.652999999995357e-06, 6.667000000001866e-06, 6.667000000001866e-06, 6.666999999994927e-06, 6.680000000001962e-06, 6.666000000002392e-06, 6.667000000001866e-06, 6.667000000001866e-06, 6.679999999995023e-06, 6.61200000000306e-06, 6.666999999994927e-06]</msg>
<status status="PASS" starttime="20201115 22:11:48.985" endtime="20201115 22:11:48.987"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.980" endtime="20201115 22:11:48.987"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:48.989" endtime="20201115 22:11:48.991"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:48.993" endtime="20201115 22:11:49.012"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.991" endtime="20201115 22:11:49.013"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.988" endtime="20201115 22:11:49.013"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.611" endtime="20201115 22:11:49.013"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.609" endtime="20201115 22:11:49.014"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.608" endtime="20201115 22:11:49.014"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:49.016" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:49.025" endtime="20201115 22:11:49.054"></status>
</kw>
<msg timestamp="20201115 22:11:49.054" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:49.023" endtime="20201115 22:11:49.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:49.057" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:49.055" endtime="20201115 22:11:49.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:49.058" endtime="20201115 22:11:49.060"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.021" endtime="20201115 22:11:49.061"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.019" endtime="20201115 22:11:49.061"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:49.068" endtime="20201115 22:11:49.355"></status>
</kw>
<msg timestamp="20201115 22:11:49.358" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025292069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025299069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:49.066" endtime="20201115 22:11:49.358"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:49.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025292069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025299069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:49.359" endtime="20201115 22:11:49.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:49.367" endtime="20201115 22:11:49.368"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.063" endtime="20201115 22:11:49.369"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.062" endtime="20201115 22:11:49.369"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:49.373" level="INFO">${RESULT} = [{'time': 0.025299069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.000000000000062e-06, 'source_diff': 7.000000000000062e-06}, {'time': 0.025671111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:49.370" endtime="20201115 22:11:49.374"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:49.387" level="INFO">${OVERHEAD} = {'source_diff': [7.000000000000062e-06, 6.958000000001352e-06, 6.930999999998216e-06, 6.9730000000003955e-06, 6.943999999998313e-06, 6.972000000000922e-06, 6.9730000000003955e-06, 6.959000000000826e-0...</msg>
<status status="PASS" starttime="20201115 22:11:49.374" endtime="20201115 22:11:49.388"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:49.392" level="INFO">NAME: 00-overhead-17-remove</msg>
<status status="PASS" starttime="20201115 22:11:49.391" endtime="20201115 22:11:49.392"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:49.394" level="INFO">VALUE: [7.000000000000062e-06, 6.958000000001352e-06, 6.930999999998216e-06, 6.9730000000003955e-06, 6.943999999998313e-06, 6.972000000000922e-06, 6.9730000000003955e-06, 6.959000000000826e-06, 6.9579999999978825e-06, 6.959000000000826e-06, 6.959000000000826e-06, 6.9730000000003955e-06, 6.958000000001352e-06, 6.986000000000492e-06, 6.972000000000922e-06, 6.972000000000922e-06, 6.986000000000492e-06, 6.958000000001352e-06, 6.875000000003406e-06, 7.0280000000061404e-06, 6.957999999994413e-06, 6.958000000001352e-06, 6.958000000001352e-06, 6.986000000000492e-06, 6.944000000001782e-06, 6.943999999994843e-06, 6.957999999994413e-06, 6.9730000000003955e-06, 7.0279999999992016e-06, 6.959000000000826e-06, 6.972000000000922e-06, 6.958000000001352e-06, 6.958000000001352e-06, 6.972000000000922e-06, 6.944000000001782e-06, 6.917000000002116e-06, 6.958000000001352e-06, 6.957999999994413e-06, 7.0279999999992016e-06, 6.958000000001352e-06, 6.958000000001352e-06, 7.000000000000062e-06, 6.957999999994413e-06, 6.944000000001782e-06, 6.972000000000922e-06, 6.972000000000922e-06, 6.930000000002212e-06, 6.971999999993983e-06, 6.945000000001256e-06, 6.958000000001352e-06]</msg>
<status status="PASS" starttime="20201115 22:11:49.393" endtime="20201115 22:11:49.395"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.388" endtime="20201115 22:11:49.395"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:49.397" endtime="20201115 22:11:49.399"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:49.401" endtime="20201115 22:11:49.420"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.399" endtime="20201115 22:11:49.421"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.396" endtime="20201115 22:11:49.421"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.017" endtime="20201115 22:11:49.422"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.015" endtime="20201115 22:11:49.422"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.014" endtime="20201115 22:11:49.422"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:49.424" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:49.434" endtime="20201115 22:11:49.463"></status>
</kw>
<msg timestamp="20201115 22:11:49.464" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:49.432" endtime="20201115 22:11:49.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:49.466" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:49.465" endtime="20201115 22:11:49.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:49.467" endtime="20201115 22:11:49.469"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.429" endtime="20201115 22:11:49.469"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.427" endtime="20201115 22:11:49.470"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:49.476" endtime="20201115 22:11:49.762"></status>
</kw>
<msg timestamp="20201115 22:11:49.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025640222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025647472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:49.475" endtime="20201115 22:11:49.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:49.774" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025640222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025647472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:49.767" endtime="20201115 22:11:49.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:49.775" endtime="20201115 22:11:49.777"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.472" endtime="20201115 22:11:49.777"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.470" endtime="20201115 22:11:49.777"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:49.782" level="INFO">${RESULT} = [{'time': 0.025647472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.250000000000312e-06, 'source_diff': 7.250000000000312e-06}, {'time': 0.026033278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:49.778" endtime="20201115 22:11:49.782"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:49.796" level="INFO">${OVERHEAD} = {'source_diff': [7.250000000000312e-06, 7.236000000000742e-06, 7.236000000000742e-06, 7.263999999999882e-06, 7.2629999999969386e-06, 7.278000000002921e-06, 7.263999999999882e-06, 7.250000000000312e-06...</msg>
<status status="PASS" starttime="20201115 22:11:49.783" endtime="20201115 22:11:49.796"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:49.800" level="INFO">NAME: 00-overhead-18-remove</msg>
<status status="PASS" starttime="20201115 22:11:49.799" endtime="20201115 22:11:49.801"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:49.803" level="INFO">VALUE: [7.250000000000312e-06, 7.236000000000742e-06, 7.236000000000742e-06, 7.263999999999882e-06, 7.2629999999969386e-06, 7.278000000002921e-06, 7.263999999999882e-06, 7.250000000000312e-06, 7.236000000000742e-06, 7.2219999999977025e-06, 7.194000000002032e-06, 7.236000000000742e-06, 7.250000000000312e-06, 7.236000000000742e-06, 7.2230000000006456e-06, 7.180000000002462e-06, 7.304999999999118e-06, 7.263999999999882e-06, 7.250000000000312e-06, 7.221999999994233e-06, 7.263000000000408e-06, 7.250000000000312e-06, 7.29200000000596e-06, 7.222000000001172e-06, 7.2779999999994516e-06, 7.250000000000312e-06, 7.250000000000312e-06, 7.263000000000408e-06, 7.250000000000312e-06, 7.250000000000312e-06, 7.236000000000742e-06, 7.209000000001076e-06, 7.2779999999994516e-06, 7.250000000000312e-06, 7.30600000000553e-06, 7.290999999999548e-06, 7.236000000000742e-06, 7.222999999993707e-06, 7.250000000000312e-06, 7.222000000001172e-06, 7.250000000000312e-06, 7.318999999998688e-06, 7.263999999999882e-06, 7.2640000000068206e-06, 7.2919999999990215e-06, 7.263999999999882e-06, 7.250000000000312e-06, 7.250000000000312e-06, 7.250000000000312e-06, 7.305999999998591e-06]</msg>
<status status="PASS" starttime="20201115 22:11:49.801" endtime="20201115 22:11:49.803"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.796" endtime="20201115 22:11:49.804"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:49.806" endtime="20201115 22:11:49.807"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:49.810" endtime="20201115 22:11:49.829"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.808" endtime="20201115 22:11:49.830"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.804" endtime="20201115 22:11:49.830"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.425" endtime="20201115 22:11:49.830"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.423" endtime="20201115 22:11:49.831"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.422" endtime="20201115 22:11:49.831"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:49.833" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:49.842" endtime="20201115 22:11:49.873"></status>
</kw>
<msg timestamp="20201115 22:11:49.874" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:49.840" endtime="20201115 22:11:49.874"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:49.876" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:49.875" endtime="20201115 22:11:49.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:49.877" endtime="20201115 22:11:49.879"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.838" endtime="20201115 22:11:49.879"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.836" endtime="20201115 22:11:49.880"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:49.886" endtime="20201115 22:11:50.172"></status>
</kw>
<msg timestamp="20201115 22:11:50.175" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025203056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025210583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:49.884" endtime="20201115 22:11:50.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:50.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025203056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025210583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:50.176" endtime="20201115 22:11:50.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:50.184" endtime="20201115 22:11:50.185"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.882" endtime="20201115 22:11:50.186"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.880" endtime="20201115 22:11:50.186"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:50.191" level="INFO">${RESULT} = [{'time': 0.025210583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.527000000000228e-06, 'source_diff': 7.527000000000228e-06}, {'time': 0.025623056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:50.187" endtime="20201115 22:11:50.191"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:50.206" level="INFO">${OVERHEAD} = {'source_diff': [7.527000000000228e-06, 7.570000000001881e-06, 7.540999999999798e-06, 7.556000000002311e-06, 7.5419999999992715e-06, 7.485999999997522e-06, 7.555999999998841e-06, 7.527999999999702e-06...</msg>
<status status="PASS" starttime="20201115 22:11:50.191" endtime="20201115 22:11:50.206"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:50.211" level="INFO">NAME: 00-overhead-19-remove</msg>
<status status="PASS" starttime="20201115 22:11:50.209" endtime="20201115 22:11:50.211"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:50.213" level="INFO">VALUE: [7.527000000000228e-06, 7.570000000001881e-06, 7.540999999999798e-06, 7.556000000002311e-06, 7.5419999999992715e-06, 7.485999999997522e-06, 7.555999999998841e-06, 7.527999999999702e-06, 7.527999999999702e-06, 7.540999999999798e-06, 7.555999999998841e-06, 7.554999999999368e-06, 7.540999999999798e-06, 7.5419999999992715e-06, 7.514000000000132e-06, 7.527999999999702e-06, 7.5419999999992715e-06, 7.5419999999992715e-06, 7.5419999999992715e-06, 7.527999999999702e-06, 7.5419999999992715e-06, 7.5830000000054465e-06, 7.527999999999702e-06, 7.527999999999702e-06, 7.527999999999702e-06, 7.582999999998508e-06, 7.527000000000228e-06, 7.555999999998841e-06, 7.5969999999980775e-06, 7.527000000000228e-06, 7.5419999999992715e-06, 7.472000000001422e-06, 7.5419999999992715e-06, 7.555999999998841e-06, 7.555999999998841e-06, 7.527999999999702e-06, 7.5419999999992715e-06, 7.5419999999992715e-06, 7.5419999999992715e-06, 7.5419999999992715e-06, 7.569999999998411e-06, 7.568999999998938e-06, 7.527999999999702e-06, 7.5419999999992715e-06, 7.4870000000004655e-06, 7.5419999999992715e-06, 7.5419999999992715e-06, 7.554999999999368e-06, 7.527999999999702e-06, 7.5419999999992715e-06]</msg>
<status status="PASS" starttime="20201115 22:11:50.212" endtime="20201115 22:11:50.214"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.207" endtime="20201115 22:11:50.214"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:50.217" endtime="20201115 22:11:50.218"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:50.220" endtime="20201115 22:11:50.239"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.218" endtime="20201115 22:11:50.240"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.215" endtime="20201115 22:11:50.240"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.834" endtime="20201115 22:11:50.241"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.832" endtime="20201115 22:11:50.241"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.831" endtime="20201115 22:11:50.241"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:50.243" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:50.252" endtime="20201115 22:11:50.286"></status>
</kw>
<msg timestamp="20201115 22:11:50.286" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:50.251" endtime="20201115 22:11:50.286"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:50.288" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:50.287" endtime="20201115 22:11:50.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:50.290" endtime="20201115 22:11:50.291"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.248" endtime="20201115 22:11:50.292"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.246" endtime="20201115 22:11:50.292"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:50.298" endtime="20201115 22:11:50.586"></status>
</kw>
<msg timestamp="20201115 22:11:50.589" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025350889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025358708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:50.297" endtime="20201115 22:11:50.589"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:50.597" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025350889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025358708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:50.590" endtime="20201115 22:11:50.597"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:50.598" endtime="20201115 22:11:50.600"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.294" endtime="20201115 22:11:50.600"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.293" endtime="20201115 22:11:50.601"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:50.605" level="INFO">${RESULT} = [{'time': 0.025358708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.818999999999188e-06, 'source_diff': 7.818999999999188e-06}, {'time': 0.025799458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:50.601" endtime="20201115 22:11:50.605"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:50.619" level="INFO">${OVERHEAD} = {'source_diff': [7.818999999999188e-06, 7.804999999999618e-06, 7.833000000002227e-06, 7.805999999999091e-06, 7.819999999998661e-06, 7.832999999998758e-06, 7.82000000000213e-06, 7.847000000001797e-06, ...</msg>
<status status="PASS" starttime="20201115 22:11:50.606" endtime="20201115 22:11:50.619"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:50.623" level="INFO">NAME: 00-overhead-20-remove</msg>
<status status="PASS" starttime="20201115 22:11:50.622" endtime="20201115 22:11:50.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:50.651" level="INFO">VALUE: [7.818999999999188e-06, 7.804999999999618e-06, 7.833000000002227e-06, 7.805999999999091e-06, 7.819999999998661e-06, 7.832999999998758e-06, 7.82000000000213e-06, 7.847000000001797e-06, 7.818999999999188e-06, 7.8340000000017e-06, 7.8340000000017e-06, 7.818999999999188e-06, 7.832999999998758e-06, 7.8340000000017e-06, 7.791999999999522e-06, 7.833999999998231e-06, 7.860999999997897e-06, 7.791000000000048e-06, 7.833999999998231e-06, 7.847000000005266e-06, 7.83400000000517e-06, 7.8200000000056e-06, 7.777999999999952e-06, 7.888999999997037e-06, 7.84800000000474e-06, 7.833999999998231e-06, 7.777000000000478e-06, 7.832999999998758e-06, 7.833999999998231e-06, 7.833999999998231e-06, 7.8200000000056e-06, 7.833999999998231e-06, 7.860999999997897e-06, 7.847000000005266e-06, 7.888999999997037e-06, 7.833999999998231e-06, 7.819999999998661e-06, 7.833000000005697e-06, 7.832999999998758e-06, 7.833000000005697e-06, 7.847999999997801e-06, 7.832999999998758e-06, 7.847000000005266e-06, 7.805999999999091e-06, 7.833000000005697e-06, 7.819999999998661e-06, 7.777999999999952e-06, 7.791999999999522e-06, 7.83400000000517e-06, 7.846999999998328e-06]</msg>
<status status="PASS" starttime="20201115 22:11:50.624" endtime="20201115 22:11:50.651"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.620" endtime="20201115 22:11:50.652"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:50.654" endtime="20201115 22:11:50.655"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:50.658" endtime="20201115 22:11:50.677"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.656" endtime="20201115 22:11:50.677"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.653" endtime="20201115 22:11:50.678"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.244" endtime="20201115 22:11:50.678"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.242" endtime="20201115 22:11:50.678"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.242" endtime="20201115 22:11:50.679"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:50.681" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:50.690" endtime="20201115 22:11:50.724"></status>
</kw>
<msg timestamp="20201115 22:11:50.725" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:50.688" endtime="20201115 22:11:50.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:50.727" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:50.726" endtime="20201115 22:11:50.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:50.728" endtime="20201115 22:11:50.730"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.685" endtime="20201115 22:11:50.730"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.683" endtime="20201115 22:11:50.731"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:50.737" endtime="20201115 22:11:51.023"></status>
</kw>
<msg timestamp="20201115 22:11:51.026" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025437278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025445403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:50.735" endtime="20201115 22:11:51.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:51.034" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025437278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025445403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:51.027" endtime="20201115 22:11:51.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:51.035" endtime="20201115 22:11:51.037"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.733" endtime="20201115 22:11:51.038"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.731" endtime="20201115 22:11:51.038"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:51.042" level="INFO">${RESULT} = [{'time': 0.025445403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.124999999997717e-06, 'source_diff': 8.124999999997717e-06}, {'time': 0.0259165, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:11:51.039" endtime="20201115 22:11:51.042"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:51.057" level="INFO">${OVERHEAD} = {'source_diff': [8.124999999997717e-06, 8.110999999998147e-06, 8.194999999999036e-06, 8.124999999997717e-06, 8.166000000000423e-06, 8.125000000001187e-06, 8.179999999999993e-06, 8.124999999997717e-06,...</msg>
<status status="PASS" starttime="20201115 22:11:51.044" endtime="20201115 22:11:51.057"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:51.061" level="INFO">NAME: 00-overhead-21-remove</msg>
<status status="PASS" starttime="20201115 22:11:51.060" endtime="20201115 22:11:51.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:51.064" level="INFO">VALUE: [8.124999999997717e-06, 8.110999999998147e-06, 8.194999999999036e-06, 8.124999999997717e-06, 8.166000000000423e-06, 8.125000000001187e-06, 8.179999999999993e-06, 8.124999999997717e-06, 8.125000000001187e-06, 8.125000000001187e-06, 8.124999999997717e-06, 8.125000000001187e-06, 8.124999999997717e-06, 8.124999999997717e-06, 8.138999999997287e-06, 8.138999999997287e-06, 8.110999999998147e-06, 8.096999999998578e-06, 8.138999999997287e-06, 8.110999999998147e-06, 8.124999999997717e-06, 8.124999999997717e-06, 8.193999999996093e-06, 8.179999999996523e-06, 8.138999999997287e-06, 8.110999999998147e-06, 8.083999999998481e-06, 8.125000000004656e-06, 8.124999999997717e-06, 8.180000000003462e-06, 8.139000000004226e-06, 8.124999999997717e-06, 8.138999999997287e-06, 8.110999999998147e-06, 8.124999999997717e-06, 8.124999999997717e-06, 8.055999999999341e-06, 8.153000000003796e-06, 8.124999999997717e-06, 8.125000000004656e-06, 8.124999999997717e-06, 8.139000000004226e-06, 8.138999999997287e-06, 8.125000000004656e-06, 8.180000000003462e-06, 8.138999999997287e-06, 8.180000000003462e-06, 8.124999999997717e-06, 8.110999999998147e-06, 8.138999999997287e-06]</msg>
<status status="PASS" starttime="20201115 22:11:51.062" endtime="20201115 22:11:51.064"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.057" endtime="20201115 22:11:51.065"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:51.067" endtime="20201115 22:11:51.068"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:51.070" endtime="20201115 22:11:51.090"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.069" endtime="20201115 22:11:51.090"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.065" endtime="20201115 22:11:51.091"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.681" endtime="20201115 22:11:51.091"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.680" endtime="20201115 22:11:51.091"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.679" endtime="20201115 22:11:51.091"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:51.094" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:51.102" endtime="20201115 22:11:51.138"></status>
</kw>
<msg timestamp="20201115 22:11:51.138" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:51.101" endtime="20201115 22:11:51.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:51.141" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:51.140" endtime="20201115 22:11:51.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:51.142" endtime="20201115 22:11:51.144"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.098" endtime="20201115 22:11:51.144"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.096" endtime="20201115 22:11:51.145"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:51.151" endtime="20201115 22:11:51.436"></status>
</kw>
<msg timestamp="20201115 22:11:51.439" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025335986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025344403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:51.149" endtime="20201115 22:11:51.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:51.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025335986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025344403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:51.440" endtime="20201115 22:11:51.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:51.448" endtime="20201115 22:11:51.450"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.147" endtime="20201115 22:11:51.450"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.145" endtime="20201115 22:11:51.451"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:51.455" level="INFO">${RESULT} = [{'time': 0.025344403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.417000000000147e-06, 'source_diff': 8.417000000000147e-06}, {'time': 0.025841889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:51.451" endtime="20201115 22:11:51.455"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:51.469" level="INFO">${OVERHEAD} = {'source_diff': [8.417000000000147e-06, 8.430999999999716e-06, 8.417000000000147e-06, 8.417000000000147e-06, 8.430000000000243e-06, 8.361000000001867e-06, 8.375000000001437e-06, 8.416000000000673e-06,...</msg>
<status status="PASS" starttime="20201115 22:11:51.456" endtime="20201115 22:11:51.469"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:51.473" level="INFO">NAME: 00-overhead-22-remove</msg>
<status status="PASS" starttime="20201115 22:11:51.472" endtime="20201115 22:11:51.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:51.476" level="INFO">VALUE: [8.417000000000147e-06, 8.430999999999716e-06, 8.417000000000147e-06, 8.417000000000147e-06, 8.430000000000243e-06, 8.361000000001867e-06, 8.375000000001437e-06, 8.416000000000673e-06, 8.444999999999286e-06, 8.417000000000147e-06, 8.417000000000147e-06, 8.416000000000673e-06, 8.417000000003616e-06, 8.416999999996677e-06, 8.416999999996677e-06, 8.431000000003186e-06, 8.416999999996677e-06, 8.415999999997203e-06, 8.417000000003616e-06, 8.416999999996677e-06, 8.430999999996247e-06, 8.416999999996677e-06, 8.403000000004046e-06, 8.429999999996773e-06, 8.429999999996773e-06, 8.389000000004476e-06, 8.431000000003186e-06, 8.402999999997107e-06, 8.388999999997537e-06, 8.416999999996677e-06, 8.429999999996773e-06, 8.486000000001992e-06, 8.415999999997203e-06, 8.416000000004142e-06, 8.429999999996773e-06, 8.401999999997634e-06, 8.388999999997537e-06, 8.429999999996773e-06, 8.403000000004046e-06, 8.417000000003616e-06, 8.402999999997107e-06, 8.401999999997634e-06, 8.416999999996677e-06, 8.360999999998397e-06, 8.388000000005003e-06, 8.402999999997107e-06, 8.417000000003616e-06, 8.333999999998731e-06, 8.403000000004046e-06, 8.416000000004142e-06]</msg>
<status status="PASS" starttime="20201115 22:11:51.474" endtime="20201115 22:11:51.476"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.470" endtime="20201115 22:11:51.477"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:51.479" endtime="20201115 22:11:51.480"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:51.483" endtime="20201115 22:11:51.502"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.481" endtime="20201115 22:11:51.502"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.477" endtime="20201115 22:11:51.503"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.094" endtime="20201115 22:11:51.503"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.093" endtime="20201115 22:11:51.503"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.092" endtime="20201115 22:11:51.503"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:51.506" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:51.514" endtime="20201115 22:11:51.552"></status>
</kw>
<msg timestamp="20201115 22:11:51.552" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:51.513" endtime="20201115 22:11:51.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:51.554" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:51.553" endtime="20201115 22:11:51.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:51.555" endtime="20201115 22:11:51.557"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.510" endtime="20201115 22:11:51.558"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.508" endtime="20201115 22:11:51.558"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:51.565" endtime="20201115 22:11:51.852"></status>
</kw>
<msg timestamp="20201115 22:11:51.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025191556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025200264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:51.563" endtime="20201115 22:11:51.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:51.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025191556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025200264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:51.856" endtime="20201115 22:11:51.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:51.864" endtime="20201115 22:11:51.865"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.560" endtime="20201115 22:11:51.866"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.559" endtime="20201115 22:11:51.866"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:51.870" level="INFO">${RESULT} = [{'time': 0.025200264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.707999999999633e-06, 'source_diff': 8.707999999999633e-06}, {'time': 0.025729764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:51.867" endtime="20201115 22:11:51.871"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:51.886" level="INFO">${OVERHEAD} = {'source_diff': [8.707999999999633e-06, 8.707999999999633e-06, 8.721999999999203e-06, 8.666000000000923e-06, 8.667000000000397e-06, 8.737000000001716e-06, 8.707999999999633e-06, 8.707999999999633e-06,...</msg>
<status status="PASS" starttime="20201115 22:11:51.872" endtime="20201115 22:11:51.886"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:51.890" level="INFO">NAME: 00-overhead-23-remove</msg>
<status status="PASS" starttime="20201115 22:11:51.889" endtime="20201115 22:11:51.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:51.893" level="INFO">VALUE: [8.707999999999633e-06, 8.707999999999633e-06, 8.721999999999203e-06, 8.666000000000923e-06, 8.667000000000397e-06, 8.737000000001716e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.708999999999106e-06, 8.707999999999633e-06, 8.709000000002576e-06, 8.736000000002242e-06, 8.722000000002672e-06, 8.709000000002576e-06, 8.693999999996593e-06, 8.722000000002672e-06, 8.721999999995733e-06, 8.723000000002146e-06, 8.707999999996163e-06, 8.708000000003102e-06, 8.709000000002576e-06, 8.695000000003006e-06, 8.708000000003102e-06, 8.653000000004296e-06, 8.709000000002576e-06, 8.695000000003006e-06, 8.695000000003006e-06, 8.708000000003102e-06, 8.694999999996067e-06, 8.709000000002576e-06, 8.722000000002672e-06, 8.735999999995303e-06, 8.708000000003102e-06, 8.693999999996593e-06, 8.694999999996067e-06, 8.708000000003102e-06, 8.721999999995733e-06, 8.707999999996163e-06, 8.707999999996163e-06, 8.708000000003102e-06, 8.708000000003102e-06, 8.694999999996067e-06, 8.707999999996163e-06, 8.708000000003102e-06, 8.709000000002576e-06, 8.695000000003006e-06, 8.638999999997787e-06, 8.723000000002146e-06, 8.736000000002242e-06]</msg>
<status status="PASS" starttime="20201115 22:11:51.892" endtime="20201115 22:11:51.893"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.887" endtime="20201115 22:11:51.894"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:51.896" endtime="20201115 22:11:51.897"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:51.899" endtime="20201115 22:11:51.919"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.898" endtime="20201115 22:11:51.919"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.894" endtime="20201115 22:11:51.920"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.506" endtime="20201115 22:11:51.920"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.505" endtime="20201115 22:11:51.920"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.504" endtime="20201115 22:11:51.921"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:51.923" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:51.932" endtime="20201115 22:11:51.970"></status>
</kw>
<msg timestamp="20201115 22:11:51.971" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:51.930" endtime="20201115 22:11:51.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:51.974" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:51.972" endtime="20201115 22:11:51.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:51.975" endtime="20201115 22:11:51.976"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.927" endtime="20201115 22:11:51.977"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.925" endtime="20201115 22:11:51.977"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:51.984" endtime="20201115 22:11:52.288"></status>
</kw>
<msg timestamp="20201115 22:11:52.295" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025327194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025336194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:51.982" endtime="20201115 22:11:52.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:52.306" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025327194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025336194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:52.297" endtime="20201115 22:11:52.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:52.307" endtime="20201115 22:11:52.309"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.980" endtime="20201115 22:11:52.310"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.978" endtime="20201115 22:11:52.310"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:52.314" level="INFO">${RESULT} = [{'time': 0.025336194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.999999999998592e-06, 'source_diff': 8.999999999998592e-06}, {'time': 0.025896264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:52.311" endtime="20201115 22:11:52.314"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:52.328" level="INFO">${OVERHEAD} = {'source_diff': [8.999999999998592e-06, 8.999999999998592e-06, 9.040999999997829e-06, 9.000000000002062e-06, 9.000000000002062e-06, 9.012999999998689e-06, 8.957999999999883e-06, 9.028000000001202e-06,...</msg>
<status status="PASS" starttime="20201115 22:11:52.315" endtime="20201115 22:11:52.328"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:52.333" level="INFO">NAME: 00-overhead-24-remove</msg>
<status status="PASS" starttime="20201115 22:11:52.332" endtime="20201115 22:11:52.333"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:52.335" level="INFO">VALUE: [8.999999999998592e-06, 8.999999999998592e-06, 9.040999999997829e-06, 9.000000000002062e-06, 9.000000000002062e-06, 9.012999999998689e-06, 8.957999999999883e-06, 9.028000000001202e-06, 9.042000000000772e-06, 8.999999999998592e-06, 8.999999999998592e-06, 9.056000000000342e-06, 9.042000000000772e-06, 9.000000000002062e-06, 8.971999999995983e-06, 8.999999999995123e-06, 9.042000000000772e-06, 8.985999999995553e-06, 9.000000000002062e-06, 9.000000000002062e-06, 8.986000000002492e-06, 8.999999999995123e-06, 8.999999999995123e-06, 9.014000000001632e-06, 9.000000000002062e-06, 9.014000000001632e-06, 8.999999999995123e-06, 9.028000000001202e-06, 9.000000000002062e-06, 9.000000000002062e-06, 9.000000000002062e-06, 8.958000000003352e-06, 9.000000000002062e-06, 9.000000000002062e-06, 8.958999999995887e-06, 9.000000000002062e-06, 8.957999999996413e-06, 8.986000000002492e-06, 8.986000000002492e-06, 8.999999999995123e-06, 8.999999999995123e-06, 8.999999999995123e-06, 8.999999999995123e-06, 9.000000000002062e-06, 9.000000000002062e-06, 9.014000000001632e-06, 9.000000000002062e-06, 9.014000000001632e-06, 9.000000000002062e-06, 9.000000000002062e-06]</msg>
<status status="PASS" starttime="20201115 22:11:52.334" endtime="20201115 22:11:52.335"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.329" endtime="20201115 22:11:52.336"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:52.338" endtime="20201115 22:11:52.339"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:52.342" endtime="20201115 22:11:52.361"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.340" endtime="20201115 22:11:52.362"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.337" endtime="20201115 22:11:52.362"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.923" endtime="20201115 22:11:52.362"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.922" endtime="20201115 22:11:52.363"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.921" endtime="20201115 22:11:52.363"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:52.365" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:52.374" endtime="20201115 22:11:52.415"></status>
</kw>
<msg timestamp="20201115 22:11:52.415" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:52.373" endtime="20201115 22:11:52.415"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:52.417" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:52.416" endtime="20201115 22:11:52.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:52.419" endtime="20201115 22:11:52.420"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.370" endtime="20201115 22:11:52.421"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.367" endtime="20201115 22:11:52.421"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:52.428" endtime="20201115 22:11:52.714"></status>
</kw>
<msg timestamp="20201115 22:11:52.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025848917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025858208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:52.426" endtime="20201115 22:11:52.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:52.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025848917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025858208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:52.718" endtime="20201115 22:11:52.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:52.726" endtime="20201115 22:11:52.728"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.424" endtime="20201115 22:11:52.728"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.422" endtime="20201115 22:11:52.729"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:52.733" level="INFO">${RESULT} = [{'time': 0.025858208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.291000000001548e-06, 'source_diff': 9.291000000001548e-06}, {'time': 0.026449861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:52.730" endtime="20201115 22:11:52.733"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:52.747" level="INFO">${OVERHEAD} = {'source_diff': [9.291000000001548e-06, 9.292000000001022e-06, 9.306000000000592e-06, 9.292000000001022e-06, 9.278000000001452e-06, 9.292000000001022e-06, 9.306000000000592e-06, 9.333999999999731e-06,...</msg>
<status status="PASS" starttime="20201115 22:11:52.734" endtime="20201115 22:11:52.747"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:52.751" level="INFO">NAME: 00-overhead-25-remove</msg>
<status status="PASS" starttime="20201115 22:11:52.750" endtime="20201115 22:11:52.752"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:52.754" level="INFO">VALUE: [9.291000000001548e-06, 9.292000000001022e-06, 9.306000000000592e-06, 9.292000000001022e-06, 9.278000000001452e-06, 9.292000000001022e-06, 9.306000000000592e-06, 9.333999999999731e-06, 9.292000000001022e-06, 9.290999999998079e-06, 9.319000000000688e-06, 9.360999999999398e-06, 9.291000000001548e-06, 9.291000000001548e-06, 9.292000000001022e-06, 9.333999999999731e-06, 9.291000000001548e-06, 9.290999999994609e-06, 9.306000000000592e-06, 9.291000000001548e-06, 9.223000000002646e-06, 9.278000000001452e-06, 9.223000000002646e-06, 9.319000000000688e-06, 9.278000000001452e-06, 9.290999999994609e-06, 9.278000000001452e-06, 9.291999999994083e-06, 9.292000000001022e-06, 9.292000000001022e-06, 9.277000000001978e-06, 9.292000000001022e-06, 9.292000000001022e-06, 9.264000000001882e-06, 9.292000000001022e-06, 9.264000000001882e-06, 9.306000000000592e-06, 9.291999999994083e-06, 9.292000000001022e-06, 9.291000000001548e-06, 9.291000000001548e-06, 9.292000000001022e-06, 9.277999999994513e-06, 9.291000000001548e-06, 9.291999999994083e-06, 9.291000000001548e-06, 9.292000000001022e-06, 9.277000000001978e-06, 9.292000000001022e-06, 9.278000000001452e-06]</msg>
<status status="PASS" starttime="20201115 22:11:52.752" endtime="20201115 22:11:52.754"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.748" endtime="20201115 22:11:52.755"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:52.757" endtime="20201115 22:11:52.758"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:52.761" endtime="20201115 22:11:52.780"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.759" endtime="20201115 22:11:52.781"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.755" endtime="20201115 22:11:52.781"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.365" endtime="20201115 22:11:52.782"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.364" endtime="20201115 22:11:52.782"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.363" endtime="20201115 22:11:52.782"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.601" endtime="20201115 22:11:52.782"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="teardown">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:52.786" endtime="20201115 22:11:52.806"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.785" endtime="20201115 22:11:52.807"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.784" endtime="20201115 22:11:52.807"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:11:42.531" endtime="20201115 22:11:52.807" critical="yes"></status>
</test>
<status status="PASS" starttime="20201115 22:11:29.801" endtime="20201115 22:11:52.813"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">nucleo-f091rc</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="PASS" starttime="20201115 22:11:27.788" endtime="20201115 22:11:52.831"></status>
</suite>
<statistics>
<total>
<stat pass="5" fail="0">Critical Tests</stat>
<stat pass="5" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="5" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="5" fail="0">BOARD_nucleo-f091rc</stat>
<stat pass="5" fail="0">dev</stat>
</tag>
<suite>
<stat pass="5" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="4" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
