<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201115 22:10:57.392" rpa="false">
<suite id="s1" name="tests_ztimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201115 22:10:57.955" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201115 22:10:57.963" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201115 22:10:59.067" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201115 22:10:57.954" endtime="20201115 22:10:59.067"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201115 22:10:59.070" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201115 22:10:59.068" endtime="20201115 22:10:59.070"></status>
</kw>
<status status="PASS" starttime="20201115 22:10:57.952" endtime="20201115 22:10:59.071"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:10:59.073" endtime="20201115 22:10:59.259"></status>
</kw>
<status status="PASS" starttime="20201115 22:10:59.072" endtime="20201115 22:10:59.260"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:10:59.272" endtime="20201115 22:10:59.287"></status>
</kw>
<msg timestamp="20201115 22:10:59.288" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['): This is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Succes...</msg>
<status status="PASS" starttime="20201115 22:10:59.271" endtime="20201115 22:10:59.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:10:59.290" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['): This is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Succes...</msg>
<status status="PASS" starttime="20201115 22:10:59.289" endtime="20201115 22:10:59.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:10:59.294" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:10:59.292" endtime="20201115 22:10:59.294"></status>
</kw>
<status status="FAIL" starttime="20201115 22:10:59.268" endtime="20201115 22:10:59.295"></status>
</kw>
<status status="FAIL" starttime="20201115 22:10:59.266" endtime="20201115 22:10:59.295"></status>
</kw>
<status status="PASS" starttime="20201115 22:10:59.265" endtime="20201115 22:10:59.296"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:10:59.299" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:10:59.299" endtime="20201115 22:10:59.300"></status>
</kw>
<status status="PASS" starttime="20201115 22:10:59.296" endtime="20201115 22:10:59.300"></status>
</kw>
<status status="PASS" starttime="20201115 22:10:59.264" endtime="20201115 22:10:59.300"></status>
</kw>
<status status="PASS" starttime="20201115 22:10:59.263" endtime="20201115 22:10:59.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:10:59.301" endtime="20201115 22:10:59.303"></status>
</kw>
<status status="PASS" starttime="20201115 22:10:59.262" endtime="20201115 22:10:59.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:10:59.304" endtime="20201115 22:10:59.305"></status>
</kw>
<status status="PASS" starttime="20201115 22:10:59.260" endtime="20201115 22:10:59.306"></status>
</kw>
<status status="PASS" starttime="20201115 22:10:57.951" endtime="20201115 22:10:59.306"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:10:59.313" endtime="20201115 22:10:59.332"></status>
</kw>
<status status="PASS" starttime="20201115 22:10:59.311" endtime="20201115 22:10:59.332"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:10:59.347" endtime="20201115 22:10:59.362"></status>
</kw>
<msg timestamp="20201115 22:10:59.362" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:10:59.344" endtime="20201115 22:10:59.362"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:10:59.365" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:10:59.363" endtime="20201115 22:10:59.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:10:59.368" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:10:59.366" endtime="20201115 22:10:59.368"></status>
</kw>
<status status="FAIL" starttime="20201115 22:10:59.342" endtime="20201115 22:10:59.369"></status>
</kw>
<status status="FAIL" starttime="20201115 22:10:59.339" endtime="20201115 22:10:59.369"></status>
</kw>
<status status="PASS" starttime="20201115 22:10:59.338" endtime="20201115 22:10:59.369"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:10:59.373" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:10:59.372" endtime="20201115 22:10:59.374"></status>
</kw>
<status status="PASS" starttime="20201115 22:10:59.370" endtime="20201115 22:10:59.374"></status>
</kw>
<status status="PASS" starttime="20201115 22:10:59.337" endtime="20201115 22:10:59.374"></status>
</kw>
<status status="PASS" starttime="20201115 22:10:59.336" endtime="20201115 22:10:59.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:10:59.375" endtime="20201115 22:10:59.376"></status>
</kw>
<status status="PASS" starttime="20201115 22:10:59.335" endtime="20201115 22:10:59.377"></status>
</kw>
<status status="PASS" starttime="20201115 22:10:59.333" endtime="20201115 22:10:59.377"></status>
</kw>
<status status="PASS" starttime="20201115 22:10:59.310" endtime="20201115 22:10:59.378"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:10:59.385" endtime="20201115 22:10:59.395"></status>
</kw>
<msg timestamp="20201115 22:10:59.395" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:10:59.383" endtime="20201115 22:10:59.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:10:59.398" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:10:59.396" endtime="20201115 22:10:59.398"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:10:59.399" endtime="20201115 22:10:59.400"></status>
</kw>
<status status="PASS" starttime="20201115 22:10:59.381" endtime="20201115 22:10:59.401"></status>
</kw>
<status status="PASS" starttime="20201115 22:10:59.379" endtime="20201115 22:10:59.401"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:10:59.406" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201115 22:10:59.405" endtime="20201115 22:10:59.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:10:59.408" level="INFO">VALUE: ztimer</msg>
<status status="PASS" starttime="20201115 22:10:59.407" endtime="20201115 22:10:59.408"></status>
</kw>
<status status="PASS" starttime="20201115 22:10:59.402" endtime="20201115 22:10:59.409"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:10:59.307" endtime="20201115 22:10:59.409" critical="yes"></status>
</test>
<status status="PASS" starttime="20201115 22:10:57.503" endtime="20201115 22:10:59.412"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201115 22:10:59.465" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201115 22:10:59.474" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201115 22:11:00.834" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201115 22:10:59.464" endtime="20201115 22:11:00.836"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201115 22:11:00.841" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201115 22:11:00.838" endtime="20201115 22:11:00.841"></status>
</kw>
<status status="PASS" starttime="20201115 22:10:59.463" endtime="20201115 22:11:00.842"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:00.844" endtime="20201115 22:11:01.067"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:00.843" endtime="20201115 22:11:01.067"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:01.079" endtime="20201115 22:11:01.094"></status>
</kw>
<msg timestamp="20201115 22:11:01.094" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['in(): This is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Suc...</msg>
<status status="PASS" starttime="20201115 22:11:01.078" endtime="20201115 22:11:01.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:01.097" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['in(): This is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Suc...</msg>
<status status="PASS" starttime="20201115 22:11:01.095" endtime="20201115 22:11:01.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:11:01.100" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:11:01.098" endtime="20201115 22:11:01.100"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:01.076" endtime="20201115 22:11:01.101"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:01.073" endtime="20201115 22:11:01.101"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.072" endtime="20201115 22:11:01.102"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:11:01.105" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:11:01.105" endtime="20201115 22:11:01.106"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.103" endtime="20201115 22:11:01.106"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.071" endtime="20201115 22:11:01.106"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.071" endtime="20201115 22:11:01.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:01.107" endtime="20201115 22:11:01.109"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.069" endtime="20201115 22:11:01.109"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:01.110" endtime="20201115 22:11:01.112"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.068" endtime="20201115 22:11:01.112"></status>
</kw>
<status status="PASS" starttime="20201115 22:10:59.462" endtime="20201115 22:11:01.112"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO/">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:01.119" endtime="20201115 22:11:01.138"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.117" endtime="20201115 22:11:01.139"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:01.152" endtime="20201115 22:11:01.166"></status>
</kw>
<msg timestamp="20201115 22:11:01.167" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:01.150" endtime="20201115 22:11:01.167"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:01.170" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:01.168" endtime="20201115 22:11:01.170"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:11:01.173" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:11:01.171" endtime="20201115 22:11:01.173"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:01.148" endtime="20201115 22:11:01.174"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:01.145" endtime="20201115 22:11:01.174"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.144" endtime="20201115 22:11:01.174"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:11:01.178" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:11:01.177" endtime="20201115 22:11:01.179"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.175" endtime="20201115 22:11:01.179"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.143" endtime="20201115 22:11:01.179"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.143" endtime="20201115 22:11:01.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:01.180" endtime="20201115 22:11:01.181"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.142" endtime="20201115 22:11:01.182"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.140" endtime="20201115 22:11:01.182"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.115" endtime="20201115 22:11:01.183"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure GPIO Overhead</arg>
</arguments>
<msg timestamp="20201115 22:11:01.185" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:01.193" endtime="20201115 22:11:01.204"></status>
</kw>
<msg timestamp="20201115 22:11:01.205" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:01.191" endtime="20201115 22:11:01.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:01.207" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:01.206" endtime="20201115 22:11:01.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:01.208" endtime="20201115 22:11:01.210"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.188" endtime="20201115 22:11:01.210"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.187" endtime="20201115 22:11:01.211"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:01.217" endtime="20201115 22:11:01.505"></status>
</kw>
<msg timestamp="20201115 22:11:01.509" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064499431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064499917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:01.216" endtime="20201115 22:11:01.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:01.517" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064499431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064499917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:01.510" endtime="20201115 22:11:01.517"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:01.518" endtime="20201115 22:11:01.520"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.213" endtime="20201115 22:11:01.520"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.211" endtime="20201115 22:11:01.521"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:01.525" level="INFO">${RESULT} = [{'time': 0.064499917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.86000000007869e-07, 'source_diff': 4.86000000007869e-07}, {'time': 0.064512764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:11:01.521" endtime="20201115 22:11:01.525"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:01.539" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:01.526" endtime="20201115 22:11:01.539"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:01.543" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201115 22:11:01.542" endtime="20201115 22:11:01.544"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:01.546" level="INFO">VALUE: [4.86000000007869e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999869561e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.86000000007869e-07, 4.720000000013602e-07, 4.870000000073427e-07, 4.720000000013602e-07, 4.729999999869561e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999998748243e-07, 4.720000000013602e-07, 4.7199999998748243e-07, 4.720000000013602e-07, 4.86000000007869e-07, 4.859999999939912e-07, 4.859999999939912e-07, 4.86000000007869e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.870000000073427e-07, 4.859999999939912e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201115 22:11:01.544" endtime="20201115 22:11:01.546"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.540" endtime="20201115 22:11:01.547"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:01.549" endtime="20201115 22:11:01.550"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:01.553" endtime="20201115 22:11:01.572"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.551" endtime="20201115 22:11:01.572"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.547" endtime="20201115 22:11:01.573"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.185" endtime="20201115 22:11:01.573"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.184" endtime="20201115 22:11:01.573"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:01.578" endtime="20201115 22:11:01.597"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.576" endtime="20201115 22:11:01.598"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.575" endtime="20201115 22:11:01.598"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:11:01.113" endtime="20201115 22:11:01.599" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:01.606" endtime="20201115 22:11:01.625"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.604" endtime="20201115 22:11:01.626"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:01.640" endtime="20201115 22:11:01.653"></status>
</kw>
<msg timestamp="20201115 22:11:01.654" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:01.638" endtime="20201115 22:11:01.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:01.656" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:01.655" endtime="20201115 22:11:01.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:11:01.659" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:11:01.657" endtime="20201115 22:11:01.660"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:01.636" endtime="20201115 22:11:01.661"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:01.633" endtime="20201115 22:11:01.661"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.632" endtime="20201115 22:11:01.662"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:11:01.665" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:11:01.665" endtime="20201115 22:11:01.666"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.662" endtime="20201115 22:11:01.666"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.631" endtime="20201115 22:11:01.666"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.630" endtime="20201115 22:11:01.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:01.667" endtime="20201115 22:11:01.668"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.628" endtime="20201115 22:11:01.669"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.627" endtime="20201115 22:11:01.669"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.603" endtime="20201115 22:11:01.670"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer Now Overhead</arg>
</arguments>
<msg timestamp="20201115 22:11:01.672" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:01.680" endtime="20201115 22:11:01.691"></status>
</kw>
<msg timestamp="20201115 22:11:01.692" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:01.678" endtime="20201115 22:11:01.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:01.694" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:01.693" endtime="20201115 22:11:01.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:01.695" endtime="20201115 22:11:01.697"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.676" endtime="20201115 22:11:01.698"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.674" endtime="20201115 22:11:01.698"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:01.705" endtime="20201115 22:11:01.990"></status>
</kw>
<msg timestamp="20201115 22:11:01.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065227139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065230236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:01.703" endtime="20201115 22:11:01.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:02.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065227139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065230236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:01.994" endtime="20201115 22:11:02.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:02.003" endtime="20201115 22:11:02.004"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.700" endtime="20201115 22:11:02.005"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.699" endtime="20201115 22:11:02.005"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:02.009" level="INFO">${RESULT} = [{'time': 0.065230236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.096999999993577e-06, 'source_diff': 3.096999999993577e-06}, {'time': 0.065245042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:02.006" endtime="20201115 22:11:02.010"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:02.023" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:02.010" endtime="20201115 22:11:02.024"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:02.028" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201115 22:11:02.027" endtime="20201115 22:11:02.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:02.031" level="INFO">VALUE: [3.096999999993577e-06, 3.014000000009509e-06, 3.02800000000214e-06, 3.0270000000026664e-06, 3.02800000000214e-06, 3.0279999999882623e-06, 3.014000000009509e-06, 3.0139999999956313e-06, 3.014000000009509e-06, 3.0139999999956313e-06, 3.0139999999956313e-06, 3.0139999999956313e-06, 3.02800000000214e-06, 3.02800000000214e-06, 3.0139999999956313e-06, 3.014000000009509e-06, 3.0549999999879285e-06, 3.0000000000030003e-06, 3.014000000009509e-06, 3.0139999999956313e-06, 3.0000000000030003e-06, 3.0129999999961576e-06, 3.02800000000214e-06, 3.0129999999961576e-06, 3.0279999999882623e-06, 3.0270000000026664e-06, 3.02800000000214e-06, 3.0139999999956313e-06, 3.02800000000214e-06, 2.973000000003334e-06, 3.0139999999956313e-06, 3.041999999994771e-06, 3.0270000000026664e-06, 2.9999999999891225e-06, 3.0129999999961576e-06, 3.02800000000214e-06, 3.02800000000214e-06, 3.0270000000026664e-06, 2.9859999999964915e-06, 2.9860000000103692e-06, 3.0270000000026664e-06, 3.0129999999961576e-06, 3.0000000000030003e-06, 3.041999999994771e-06, 3.02800000000214e-06, 3.0279999999882623e-06, 3.014000000009509e-06, 3.097000000007455e-06, 3.0550000000018063e-06, 3.0139999999956313e-06]</msg>
<status status="PASS" starttime="20201115 22:11:02.030" endtime="20201115 22:11:02.032"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.024" endtime="20201115 22:11:02.032"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:02.034" endtime="20201115 22:11:02.035"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:02.038" endtime="20201115 22:11:02.057"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.036" endtime="20201115 22:11:02.057"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.033" endtime="20201115 22:11:02.058"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.673" endtime="20201115 22:11:02.058"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.671" endtime="20201115 22:11:02.058"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:02.063" endtime="20201115 22:11:02.082"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.061" endtime="20201115 22:11:02.083"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.060" endtime="20201115 22:11:02.083"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:11:01.600" endtime="20201115 22:11:02.084" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set List">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:02.091" endtime="20201115 22:11:02.110"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.089" endtime="20201115 22:11:02.111"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:02.125" endtime="20201115 22:11:02.138"></status>
</kw>
<msg timestamp="20201115 22:11:02.139" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:02.123" endtime="20201115 22:11:02.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:02.142" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:02.140" endtime="20201115 22:11:02.142"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:11:02.145" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:11:02.143" endtime="20201115 22:11:02.145"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:02.120" endtime="20201115 22:11:02.146"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:02.117" endtime="20201115 22:11:02.146"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.116" endtime="20201115 22:11:02.146"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:11:02.150" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:11:02.149" endtime="20201115 22:11:02.151"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.147" endtime="20201115 22:11:02.151"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.115" endtime="20201115 22:11:02.151"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.115" endtime="20201115 22:11:02.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:02.152" endtime="20201115 22:11:02.154"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.113" endtime="20201115 22:11:02.154"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.111" endtime="20201115 22:11:02.155"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.088" endtime="20201115 22:11:02.155"></status>
</kw>
<kw name="${n} IN RANGE [ 25 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:02.158" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:02.167" endtime="20201115 22:11:02.181"></status>
</kw>
<msg timestamp="20201115 22:11:02.182" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:02.166" endtime="20201115 22:11:02.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:02.184" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:02.183" endtime="20201115 22:11:02.185"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:02.185" endtime="20201115 22:11:02.187"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.163" endtime="20201115 22:11:02.187"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.161" endtime="20201115 22:11:02.188"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:02.194" endtime="20201115 22:11:02.482"></status>
</kw>
<msg timestamp="20201115 22:11:02.485" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068828819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068837722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:02.193" endtime="20201115 22:11:02.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:02.494" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068828819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068837722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:02.486" endtime="20201115 22:11:02.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:02.495" endtime="20201115 22:11:02.496"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.190" endtime="20201115 22:11:02.497"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.188" endtime="20201115 22:11:02.497"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:02.502" level="INFO">${RESULT} = [{'time': 0.068837722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.903000000004546e-06, 'source_diff': 8.903000000004546e-06}, {'time': 0.068922236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:02.498" endtime="20201115 22:11:02.502"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:02.515" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:02.503" endtime="20201115 22:11:02.515"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:02.520" level="INFO">NAME: 00-overhead-1-set</msg>
<status status="PASS" starttime="20201115 22:11:02.519" endtime="20201115 22:11:02.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:02.522" level="INFO">VALUE: [8.903000000004546e-06, 8.903000000004546e-06, 8.887999999998564e-06, 8.915999999997704e-06, 8.860999999998898e-06, 8.889000000011915e-06, 8.903000000004546e-06, 8.902999999990668e-06, 8.916999999997177e-06, 8.888999999998037e-06, 8.875000000005406e-06, 8.889000000011915e-06, 8.903000000004546e-06, 8.888999999998037e-06, 8.901999999991195e-06, 8.875000000005406e-06, 8.888999999998037e-06, 8.903000000004546e-06, 8.874999999991529e-06, 8.888999999998037e-06, 8.84800000000574e-06, 8.888999999998037e-06, 8.874999999991529e-06, 8.875000000005406e-06, 8.902999999990668e-06, 8.874999999991529e-06, 8.888999999998037e-06, 8.903000000004546e-06, 8.903000000004546e-06, 8.888999999998037e-06, 8.903000000004546e-06, 8.903000000004546e-06, 8.888999999998037e-06, 8.888999999998037e-06, 8.901999999991195e-06, 8.888999999998037e-06, 8.833999999999231e-06, 8.903000000004546e-06, 8.875000000005406e-06, 8.887999999998564e-06, 8.902000000005073e-06, 8.915999999997704e-06, 8.860999999998898e-06, 8.888999999998037e-06, 8.916999999997177e-06, 8.888999999998037e-06, 8.902999999990668e-06, 8.887999999998564e-06, 8.887999999998564e-06, 8.902999999990668e-06]</msg>
<status status="PASS" starttime="20201115 22:11:02.521" endtime="20201115 22:11:02.523"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.516" endtime="20201115 22:11:02.523"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:02.526" endtime="20201115 22:11:02.527"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:02.529" endtime="20201115 22:11:02.548"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.528" endtime="20201115 22:11:02.549"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.524" endtime="20201115 22:11:02.550"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.159" endtime="20201115 22:11:02.550"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.157" endtime="20201115 22:11:02.550"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.156" endtime="20201115 22:11:02.550"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:02.552" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:02.561" endtime="20201115 22:11:02.576"></status>
</kw>
<msg timestamp="20201115 22:11:02.577" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:02.560" endtime="20201115 22:11:02.577"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:02.579" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:02.578" endtime="20201115 22:11:02.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:02.580" endtime="20201115 22:11:02.582"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.557" endtime="20201115 22:11:02.583"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.555" endtime="20201115 22:11:02.583"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:02.589" endtime="20201115 22:11:02.877"></status>
</kw>
<msg timestamp="20201115 22:11:02.880" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024260736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024267111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:02.588" endtime="20201115 22:11:02.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:02.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024260736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024267111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:02.881" endtime="20201115 22:11:02.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:02.890" endtime="20201115 22:11:02.891"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.585" endtime="20201115 22:11:02.892"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.584" endtime="20201115 22:11:02.892"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:02.896" level="INFO">${RESULT} = [{'time': 0.024267111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.374999999999437e-06, 'source_diff': 6.374999999999437e-06}, {'time': 0.02436425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:11:02.893" endtime="20201115 22:11:02.897"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:02.910" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:02.897" endtime="20201115 22:11:02.910"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:02.915" level="INFO">NAME: 00-overhead-2-set</msg>
<status status="PASS" starttime="20201115 22:11:02.913" endtime="20201115 22:11:02.915"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:02.917" level="INFO">VALUE: [6.374999999999437e-06, 6.347000000000297e-06, 6.388999999999007e-06, 6.403000000002046e-06, 6.403000000002046e-06, 6.388999999999007e-06, 6.388999999999007e-06, 6.4029999999985765e-06, 6.415999999998673e-06, 6.388999999999007e-06, 6.444000000001282e-06, 6.375000000002906e-06, 6.417000000001616e-06, 6.403000000002046e-06, 6.387999999999533e-06, 6.374999999999437e-06, 6.416999999998146e-06, 6.388999999999007e-06, 6.374999999999437e-06, 6.388999999999007e-06, 6.417000000001616e-06, 6.4029999999985765e-06, 6.401999999999103e-06, 6.403000000002046e-06, 6.387999999999533e-06, 6.4029999999985765e-06, 6.403000000002046e-06, 6.388999999999007e-06, 6.388999999999007e-06, 6.429999999998243e-06, 6.416000000002142e-06, 6.430999999997716e-06, 6.388999999999007e-06, 6.388999999999007e-06, 6.360999999999867e-06, 6.388999999999007e-06, 6.4029999999985765e-06, 6.389000000002476e-06, 6.374999999999437e-06, 6.4029999999985765e-06, 6.3479999999997705e-06, 6.388999999999007e-06, 6.4029999999985765e-06, 6.403000000002046e-06, 6.319000000001157e-06, 6.429999999998243e-06, 6.417000000001616e-06, 6.458000000000852e-06, 6.333000000000727e-06, 6.417000000001616e-06]</msg>
<status status="PASS" starttime="20201115 22:11:02.916" endtime="20201115 22:11:02.918"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.911" endtime="20201115 22:11:02.918"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:02.921" endtime="20201115 22:11:02.922"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:02.924" endtime="20201115 22:11:02.943"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.923" endtime="20201115 22:11:02.944"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.919" endtime="20201115 22:11:02.944"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.553" endtime="20201115 22:11:02.945"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.551" endtime="20201115 22:11:02.945"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.551" endtime="20201115 22:11:02.945"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:02.947" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:02.956" endtime="20201115 22:11:02.972"></status>
</kw>
<msg timestamp="20201115 22:11:02.973" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:02.955" endtime="20201115 22:11:02.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:02.975" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:02.974" endtime="20201115 22:11:02.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:02.976" endtime="20201115 22:11:02.978"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.952" endtime="20201115 22:11:02.978"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.950" endtime="20201115 22:11:02.979"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:02.985" endtime="20201115 22:11:03.272"></status>
</kw>
<msg timestamp="20201115 22:11:03.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024372833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024379528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:02.983" endtime="20201115 22:11:03.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:03.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024372833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024379528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:03.276" endtime="20201115 22:11:03.283"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:03.284" endtime="20201115 22:11:03.286"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.981" endtime="20201115 22:11:03.286"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.979" endtime="20201115 22:11:03.287"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:03.291" level="INFO">${RESULT} = [{'time': 0.024379528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.695000000001006e-06, 'source_diff': 6.695000000001006e-06}, {'time': 0.024488819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:03.288" endtime="20201115 22:11:03.291"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:03.305" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:03.292" endtime="20201115 22:11:03.305"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:03.310" level="INFO">NAME: 00-overhead-3-set</msg>
<status status="PASS" starttime="20201115 22:11:03.309" endtime="20201115 22:11:03.310"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:03.312" level="INFO">VALUE: [6.695000000001006e-06, 6.693999999998063e-06, 6.708999999997106e-06, 6.709000000000576e-06, 6.722000000000672e-06, 6.736000000000242e-06, 6.709000000000576e-06, 6.736000000000242e-06, 6.695000000001006e-06, 6.7079999999976325e-06, 6.693999999998063e-06, 6.694000000001532e-06, 6.708000000001102e-06, 6.681000000001436e-06, 6.736000000000242e-06, 6.708000000001102e-06, 6.695000000001006e-06, 6.722000000000672e-06, 6.695000000001006e-06, 6.708000000001102e-06, 6.681000000001436e-06, 6.708000000001102e-06, 6.651999999999353e-06, 6.694000000001532e-06, 6.736000000000242e-06, 6.708000000001102e-06, 6.792000000001991e-06, 6.708000000001102e-06, 6.7219999999972024e-06, 6.736000000000242e-06, 6.693999999998063e-06, 6.7779999999989515e-06, 6.693999999998063e-06, 6.708000000001102e-06, 6.7079999999976325e-06, 6.722000000000672e-06, 6.709000000000576e-06, 6.708000000001102e-06, 6.708000000001102e-06, 6.695000000001006e-06, 6.695000000001006e-06, 6.694999999997536e-06, 6.7230000000001455e-06, 6.7230000000001455e-06, 6.749999999999812e-06, 6.695000000001006e-06, 6.681000000001436e-06, 6.7079999999976325e-06, 6.708000000001102e-06, 6.763999999999382e-06]</msg>
<status status="PASS" starttime="20201115 22:11:03.311" endtime="20201115 22:11:03.313"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.306" endtime="20201115 22:11:03.313"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:03.315" endtime="20201115 22:11:03.317"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:03.319" endtime="20201115 22:11:03.338"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.317" endtime="20201115 22:11:03.339"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.314" endtime="20201115 22:11:03.339"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.948" endtime="20201115 22:11:03.340"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.946" endtime="20201115 22:11:03.340"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.945" endtime="20201115 22:11:03.340"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:03.342" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:03.351" endtime="20201115 22:11:03.368"></status>
</kw>
<msg timestamp="20201115 22:11:03.369" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:03.349" endtime="20201115 22:11:03.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:03.371" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:03.370" endtime="20201115 22:11:03.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:03.372" endtime="20201115 22:11:03.374"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.347" endtime="20201115 22:11:03.374"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.345" endtime="20201115 22:11:03.375"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:03.381" endtime="20201115 22:11:03.668"></status>
</kw>
<msg timestamp="20201115 22:11:03.671" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024818028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024825028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:03.380" endtime="20201115 22:11:03.671"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:03.679" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024818028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024825028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:03.672" endtime="20201115 22:11:03.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:03.681" endtime="20201115 22:11:03.682"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.377" endtime="20201115 22:11:03.683"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.375" endtime="20201115 22:11:03.683"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:03.687" level="INFO">${RESULT} = [{'time': 0.024825028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.000000000000062e-06, 'source_diff': 7.000000000000062e-06}, {'time': 0.024948097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:03.684" endtime="20201115 22:11:03.687"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:03.701" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:03.688" endtime="20201115 22:11:03.701"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:03.705" level="INFO">NAME: 00-overhead-4-set</msg>
<status status="PASS" starttime="20201115 22:11:03.704" endtime="20201115 22:11:03.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:03.708" level="INFO">VALUE: [7.000000000000062e-06, 7.0279999999992016e-06, 7.013999999999632e-06, 7.026999999999728e-06, 7.013999999999632e-06, 7.026999999999728e-06, 7.013000000000158e-06, 7.068999999998438e-06, 7.0279999999992016e-06, 7.013999999999632e-06, 7.070000000001381e-06, 7.000000000000062e-06, 7.013999999999632e-06, 7.056000000001811e-06, 7.014000000003101e-06, 7.0419999999987715e-06, 7.0279999999992016e-06, 7.0279999999992016e-06, 6.9730000000003955e-06, 7.0279999999992016e-06, 7.055999999998341e-06, 7.068999999998438e-06, 7.056000000001811e-06, 7.013999999999632e-06, 7.013999999999632e-06, 7.056000000001811e-06, 7.026999999999728e-06, 7.014000000003101e-06, 7.013999999999632e-06, 7.000000000000062e-06, 7.013999999999632e-06, 7.0419999999987715e-06, 7.013999999999632e-06, 7.0279999999992016e-06, 7.026999999999728e-06, 7.0279999999992016e-06, 7.0279999999992016e-06, 7.000000000000062e-06, 7.026999999999728e-06, 7.0279999999992016e-06, 7.013999999999632e-06, 7.013999999999632e-06, 7.0279999999992016e-06, 7.013999999999632e-06, 7.013999999999632e-06, 7.070000000001381e-06, 7.0279999999992016e-06, 7.013999999999632e-06, 7.013999999999632e-06, 7.013999999999632e-06]</msg>
<status status="PASS" starttime="20201115 22:11:03.706" endtime="20201115 22:11:03.708"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.702" endtime="20201115 22:11:03.709"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:03.711" endtime="20201115 22:11:03.712"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:03.714" endtime="20201115 22:11:03.734"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.713" endtime="20201115 22:11:03.734"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.709" endtime="20201115 22:11:03.735"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.343" endtime="20201115 22:11:03.735"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.341" endtime="20201115 22:11:03.735"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.340" endtime="20201115 22:11:03.735"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:03.738" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:03.746" endtime="20201115 22:11:03.764"></status>
</kw>
<msg timestamp="20201115 22:11:03.764" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:03.745" endtime="20201115 22:11:03.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:03.767" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:03.765" endtime="20201115 22:11:03.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:03.768" endtime="20201115 22:11:03.769"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.742" endtime="20201115 22:11:03.770"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.740" endtime="20201115 22:11:03.770"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:03.777" endtime="20201115 22:11:04.065"></status>
</kw>
<msg timestamp="20201115 22:11:04.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024408208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024415556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:03.775" endtime="20201115 22:11:04.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:04.076" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024408208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024415556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:04.070" endtime="20201115 22:11:04.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:04.078" endtime="20201115 22:11:04.079"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.773" endtime="20201115 22:11:04.080"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.771" endtime="20201115 22:11:04.080"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:04.084" level="INFO">${RESULT} = [{'time': 0.024415556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.348000000000771e-06, 'source_diff': 7.348000000000771e-06}, {'time': 0.024563181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:04.081" endtime="20201115 22:11:04.085"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:04.098" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:04.085" endtime="20201115 22:11:04.098"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:04.102" level="INFO">NAME: 00-overhead-5-set</msg>
<status status="PASS" starttime="20201115 22:11:04.101" endtime="20201115 22:11:04.103"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:04.105" level="INFO">VALUE: [7.348000000000771e-06, 7.334000000001201e-06, 7.3469999999978275e-06, 7.3469999999978275e-06, 7.334000000001201e-06, 7.347000000001297e-06, 7.334000000001201e-06, 7.333999999997731e-06, 7.305999999998591e-06, 7.263999999999882e-06, 7.318999999998688e-06, 7.319999999998161e-06, 7.333000000001727e-06, 7.333000000001727e-06, 7.332999999998258e-06, 7.361999999996871e-06, 7.320000000001631e-06, 7.334000000001201e-06, 7.361000000000867e-06, 7.334000000001201e-06, 7.334000000001201e-06, 7.402999999999577e-06, 7.305999999998591e-06, 7.318999999998688e-06, 7.2779999999994516e-06, 7.318999999998688e-06, 7.333999999997731e-06, 7.305000000002587e-06, 7.334000000001201e-06, 7.304999999999118e-06, 7.318999999998688e-06, 7.332999999998258e-06, 7.319000000002157e-06, 7.333000000001727e-06, 7.276999999999978e-06, 7.320000000001631e-06, 7.334000000001201e-06, 7.333000000001727e-06, 7.334000000001201e-06, 7.332999999998258e-06, 7.320000000001631e-06, 7.333000000001727e-06, 7.333999999997731e-06, 7.333000000001727e-06, 7.334000000001201e-06, 7.333000000001727e-06, 7.263999999999882e-06, 7.332999999998258e-06, 7.319999999998161e-06, 7.361000000004336e-06]</msg>
<status status="PASS" starttime="20201115 22:11:04.104" endtime="20201115 22:11:04.105"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.099" endtime="20201115 22:11:04.106"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:04.108" endtime="20201115 22:11:04.109"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:04.111" endtime="20201115 22:11:04.131"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.110" endtime="20201115 22:11:04.131"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.106" endtime="20201115 22:11:04.132"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.738" endtime="20201115 22:11:04.132"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.736" endtime="20201115 22:11:04.132"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.736" endtime="20201115 22:11:04.133"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:04.135" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:04.143" endtime="20201115 22:11:04.161"></status>
</kw>
<msg timestamp="20201115 22:11:04.162" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:04.142" endtime="20201115 22:11:04.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:04.165" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:04.163" endtime="20201115 22:11:04.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:04.166" endtime="20201115 22:11:04.167"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.139" endtime="20201115 22:11:04.168"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.137" endtime="20201115 22:11:04.168"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:04.175" endtime="20201115 22:11:04.463"></status>
</kw>
<msg timestamp="20201115 22:11:04.466" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024349292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024356944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:04.173" endtime="20201115 22:11:04.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:04.474" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024349292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024356944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:04.467" endtime="20201115 22:11:04.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:04.475" endtime="20201115 22:11:04.477"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.171" endtime="20201115 22:11:04.477"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.169" endtime="20201115 22:11:04.478"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:04.482" level="INFO">${RESULT} = [{'time': 0.024356944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.651999999996884e-06, 'source_diff': 7.651999999996884e-06}, {'time': 0.024513819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:04.478" endtime="20201115 22:11:04.482"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:04.495" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:04.483" endtime="20201115 22:11:04.495"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:04.500" level="INFO">NAME: 00-overhead-6-set</msg>
<status status="PASS" starttime="20201115 22:11:04.499" endtime="20201115 22:11:04.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:04.502" level="INFO">VALUE: [7.651999999996884e-06, 7.652000000000353e-06, 7.639000000000257e-06, 7.597000000001547e-06, 7.639000000000257e-06, 7.666999999999397e-06, 7.639000000000257e-06, 7.652999999999827e-06, 7.625000000000687e-06, 7.638999999996787e-06, 7.666999999999397e-06, 7.639000000000257e-06, 7.666999999999397e-06, 7.638000000000783e-06, 7.5969999999980775e-06, 7.652000000000353e-06, 7.667000000002866e-06, 7.639000000000257e-06, 7.639000000000257e-06, 7.639000000000257e-06, 7.639000000000257e-06, 7.652000000000353e-06, 7.598000000001021e-06, 7.652999999999827e-06, 7.639000000000257e-06, 7.667000000002866e-06, 7.666999999999397e-06, 7.652999999999827e-06, 7.639000000000257e-06, 7.624999999997217e-06, 7.679999999999493e-06, 7.652000000000353e-06, 7.652999999999827e-06, 7.625000000000687e-06, 7.639000000000257e-06, 7.652999999999827e-06, 7.652999999999827e-06, 7.652999999999827e-06, 7.639000000000257e-06, 7.582999999998508e-06, 7.639000000000257e-06, 7.653000000003296e-06, 7.6109999999976474e-06, 7.639000000000257e-06, 7.652000000003822e-06, 7.638000000004252e-06, 7.624999999997217e-06, 7.637999999997314e-06, 7.638999999996787e-06, 7.624999999997217e-06]</msg>
<status status="PASS" starttime="20201115 22:11:04.501" endtime="20201115 22:11:04.503"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.496" endtime="20201115 22:11:04.503"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:04.505" endtime="20201115 22:11:04.507"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:04.509" endtime="20201115 22:11:04.528"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.507" endtime="20201115 22:11:04.529"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.504" endtime="20201115 22:11:04.529"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.135" endtime="20201115 22:11:04.530"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.134" endtime="20201115 22:11:04.530"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.133" endtime="20201115 22:11:04.530"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:04.532" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:04.541" endtime="20201115 22:11:04.560"></status>
</kw>
<msg timestamp="20201115 22:11:04.561" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:04.540" endtime="20201115 22:11:04.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:04.563" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:04.562" endtime="20201115 22:11:04.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:04.564" endtime="20201115 22:11:04.566"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.537" endtime="20201115 22:11:04.566"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.535" endtime="20201115 22:11:04.567"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:04.573" endtime="20201115 22:11:04.859"></status>
</kw>
<msg timestamp="20201115 22:11:04.862" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024957083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024965042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:04.572" endtime="20201115 22:11:04.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:04.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024957083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024965042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:04.864" endtime="20201115 22:11:04.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:04.872" endtime="20201115 22:11:04.873"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.569" endtime="20201115 22:11:04.874"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.567" endtime="20201115 22:11:04.874"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:04.878" level="INFO">${RESULT} = [{'time': 0.024965042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.958999999998356e-06, 'source_diff': 7.958999999998356e-06}, {'time': 0.025133944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:04.875" endtime="20201115 22:11:04.878"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:04.892" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:04.879" endtime="20201115 22:11:04.892"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:04.896" level="INFO">NAME: 00-overhead-7-set</msg>
<status status="PASS" starttime="20201115 22:11:04.895" endtime="20201115 22:11:04.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:04.899" level="INFO">VALUE: [7.958999999998356e-06, 7.957999999998883e-06, 7.957999999998883e-06, 7.958999999998356e-06, 7.957999999998883e-06, 7.958000000002352e-06, 7.958999999998356e-06, 7.943999999999313e-06, 7.957999999998883e-06, 7.958000000002352e-06, 7.958000000002352e-06, 7.916000000000173e-06, 7.944999999998786e-06, 7.971999999998453e-06, 7.889000000000507e-06, 7.957999999998883e-06, 7.971999999998453e-06, 7.959000000001826e-06, 7.972000000001922e-06, 7.972000000001922e-06, 7.889000000000507e-06, 7.958999999998356e-06, 7.958999999998356e-06, 7.943999999999313e-06, 7.957999999998883e-06, 7.972999999997926e-06, 7.957999999998883e-06, 7.971999999998453e-06, 7.971999999998453e-06, 7.972000000001922e-06, 7.945000000002256e-06, 7.957999999998883e-06, 7.971999999998453e-06, 7.959000000001826e-06, 7.957999999998883e-06, 7.957999999998883e-06, 7.958000000002352e-06, 7.971999999994983e-06, 7.958000000002352e-06, 7.958000000002352e-06, 7.944000000002782e-06, 7.959000000001826e-06, 7.958000000002352e-06, 7.958999999994887e-06, 7.959000000001826e-06, 7.971999999994983e-06, 7.959000000001826e-06, 7.959000000001826e-06, 7.888999999997037e-06, 7.959000000001826e-06]</msg>
<status status="PASS" starttime="20201115 22:11:04.897" endtime="20201115 22:11:04.899"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.893" endtime="20201115 22:11:04.900"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:04.902" endtime="20201115 22:11:04.903"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:04.905" endtime="20201115 22:11:04.925"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.904" endtime="20201115 22:11:04.926"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.900" endtime="20201115 22:11:04.926"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.533" endtime="20201115 22:11:04.926"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.531" endtime="20201115 22:11:04.927"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.530" endtime="20201115 22:11:04.927"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:04.929" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:04.938" endtime="20201115 22:11:04.958"></status>
</kw>
<msg timestamp="20201115 22:11:04.958" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:04.936" endtime="20201115 22:11:04.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:04.961" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:04.959" endtime="20201115 22:11:04.961"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:04.962" endtime="20201115 22:11:04.963"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.934" endtime="20201115 22:11:04.964"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.932" endtime="20201115 22:11:04.964"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:04.971" endtime="20201115 22:11:05.257"></status>
</kw>
<msg timestamp="20201115 22:11:05.260" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024363681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024371958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:04.969" endtime="20201115 22:11:05.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:05.268" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024363681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024371958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:05.261" endtime="20201115 22:11:05.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:05.269" endtime="20201115 22:11:05.271"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.967" endtime="20201115 22:11:05.271"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.965" endtime="20201115 22:11:05.272"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:05.276" level="INFO">${RESULT} = [{'time': 0.024371958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.276999999997509e-06, 'source_diff': 8.276999999997509e-06}, {'time': 0.024558722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:05.273" endtime="20201115 22:11:05.276"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:05.289" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:05.277" endtime="20201115 22:11:05.290"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:05.294" level="INFO">NAME: 00-overhead-8-set</msg>
<status status="PASS" starttime="20201115 22:11:05.293" endtime="20201115 22:11:05.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:05.296" level="INFO">VALUE: [8.276999999997509e-06, 8.264000000000882e-06, 8.277000000000978e-06, 8.264000000000882e-06, 8.264000000000882e-06, 8.277999999996982e-06, 8.264000000000882e-06, 8.277000000000978e-06, 8.264000000000882e-06, 8.263000000001408e-06, 8.249999999997842e-06, 8.305999999999591e-06, 8.264000000000882e-06, 8.236000000001742e-06, 8.278000000000452e-06, 8.264000000000882e-06, 8.264000000000882e-06, 8.278000000000452e-06, 8.235999999998272e-06, 8.278000000000452e-06, 8.292000000000022e-06, 8.278000000000452e-06, 8.264000000000882e-06, 8.250000000001312e-06, 8.277999999996982e-06, 8.263999999997412e-06, 8.292000000000022e-06, 8.292000000000022e-06, 8.264000000000882e-06, 8.277000000000978e-06, 8.264000000000882e-06, 8.360999999998397e-06, 8.264000000000882e-06, 8.277000000000978e-06, 8.278000000000452e-06, 8.264000000000882e-06, 8.278000000000452e-06, 8.263000000001408e-06, 8.278000000000452e-06, 8.277000000000978e-06, 8.264000000000882e-06, 8.194999999995567e-06, 8.235999999994803e-06, 8.264000000000882e-06, 8.278000000000452e-06, 8.264000000000882e-06, 8.278000000000452e-06, 8.277000000000978e-06, 8.278000000000452e-06, 8.264000000000882e-06]</msg>
<status status="PASS" starttime="20201115 22:11:05.295" endtime="20201115 22:11:05.297"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.290" endtime="20201115 22:11:05.298"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:05.300" endtime="20201115 22:11:05.301"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:05.304" endtime="20201115 22:11:05.323"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.302" endtime="20201115 22:11:05.323"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.298" endtime="20201115 22:11:05.324"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.930" endtime="20201115 22:11:05.324"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.928" endtime="20201115 22:11:05.324"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.927" endtime="20201115 22:11:05.325"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:05.327" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:05.336" endtime="20201115 22:11:05.356"></status>
</kw>
<msg timestamp="20201115 22:11:05.356" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:05.334" endtime="20201115 22:11:05.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:05.359" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:05.357" endtime="20201115 22:11:05.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:05.360" endtime="20201115 22:11:05.361"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.332" endtime="20201115 22:11:05.362"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.329" endtime="20201115 22:11:05.362"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:05.369" endtime="20201115 22:11:05.656"></status>
</kw>
<msg timestamp="20201115 22:11:05.659" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024764333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024772917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:05.367" endtime="20201115 22:11:05.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:05.667" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024764333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024772917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:05.661" endtime="20201115 22:11:05.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:05.669" endtime="20201115 22:11:05.670"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.365" endtime="20201115 22:11:05.671"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.363" endtime="20201115 22:11:05.671"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:05.675" level="INFO">${RESULT} = [{'time': 0.024772917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.583999999998981e-06, 'source_diff': 8.583999999998981e-06}, {'time': 0.024983861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:05.672" endtime="20201115 22:11:05.676"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:05.689" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:05.676" endtime="20201115 22:11:05.689"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:05.693" level="INFO">NAME: 00-overhead-9-set</msg>
<status status="PASS" starttime="20201115 22:11:05.692" endtime="20201115 22:11:05.694"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:05.696" level="INFO">VALUE: [8.583999999998981e-06, 8.582999999999508e-06, 8.582999999999508e-06, 8.58400000000245e-06, 8.569999999999411e-06, 8.59800000000202e-06, 8.582999999999508e-06, 8.568999999999938e-06, 8.568999999999938e-06, 8.596999999999078e-06, 8.542000000000272e-06, 8.596999999999078e-06, 8.527999999997232e-06, 8.583999999998981e-06, 8.583000000002977e-06, 8.569999999999411e-06, 8.568999999999938e-06, 8.58400000000245e-06, 8.568999999999938e-06, 8.583999999998981e-06, 8.596999999999078e-06, 8.568999999999938e-06, 8.582999999999508e-06, 8.582999999999508e-06, 8.596999999999078e-06, 8.680000000000493e-06, 8.568999999999938e-06, 8.596999999999078e-06, 8.555999999999842e-06, 8.555999999999842e-06, 8.569999999999411e-06, 8.597000000002547e-06, 8.583999999998981e-06, 8.666000000004392e-06, 8.597999999998551e-06, 8.596999999999078e-06, 8.583999999998981e-06, 8.583999999998981e-06, 8.583999999998981e-06, 8.500000000001562e-06, 8.57000000000635e-06, 8.638999999997787e-06, 8.582999999999508e-06, 8.58400000000592e-06, 8.583999999998981e-06, 8.568999999999938e-06, 8.624999999998217e-06, 8.569999999999411e-06, 8.597999999998551e-06, 8.583999999998981e-06]</msg>
<status status="PASS" starttime="20201115 22:11:05.694" endtime="20201115 22:11:05.697"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.690" endtime="20201115 22:11:05.697"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:05.699" endtime="20201115 22:11:05.701"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:05.703" endtime="20201115 22:11:05.722"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.701" endtime="20201115 22:11:05.723"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.698" endtime="20201115 22:11:05.723"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.327" endtime="20201115 22:11:05.724"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.326" endtime="20201115 22:11:05.724"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.325" endtime="20201115 22:11:05.724"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:05.726" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:05.735" endtime="20201115 22:11:05.756"></status>
</kw>
<msg timestamp="20201115 22:11:05.757" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:05.733" endtime="20201115 22:11:05.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:05.759" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:05.758" endtime="20201115 22:11:05.760"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:05.760" endtime="20201115 22:11:05.762"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.731" endtime="20201115 22:11:05.762"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.729" endtime="20201115 22:11:05.763"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:05.769" endtime="20201115 22:11:06.056"></status>
</kw>
<msg timestamp="20201115 22:11:06.059" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024491556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024500444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:05.768" endtime="20201115 22:11:06.059"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:06.067" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024491556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024500444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:06.060" endtime="20201115 22:11:06.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:06.068" endtime="20201115 22:11:06.069"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.765" endtime="20201115 22:11:06.070"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.763" endtime="20201115 22:11:06.070"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:06.075" level="INFO">${RESULT} = [{'time': 0.024500444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.887999999998564e-06, 'source_diff': 8.887999999998564e-06}, {'time': 0.024726361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:06.071" endtime="20201115 22:11:06.075"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:06.089" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:06.076" endtime="20201115 22:11:06.089"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:06.094" level="INFO">NAME: 00-overhead-10-set</msg>
<status status="PASS" starttime="20201115 22:11:06.093" endtime="20201115 22:11:06.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:06.096" level="INFO">VALUE: [8.887999999998564e-06, 8.888999999998037e-06, 8.889000000001507e-06, 8.916000000001173e-06, 8.847000000002797e-06, 8.931000000000217e-06, 8.903000000001077e-06, 8.888999999998037e-06, 8.889000000001507e-06, 8.889000000001507e-06, 8.889000000001507e-06, 8.902999999997607e-06, 8.888999999998037e-06, 8.846999999999328e-06, 8.917000000000647e-06, 8.888999999998037e-06, 8.888999999998037e-06, 8.888999999998037e-06, 8.902999999997607e-06, 8.888999999998037e-06, 8.902000000001603e-06, 8.903000000001077e-06, 8.903000000001077e-06, 8.889000000001507e-06, 8.903000000001077e-06, 8.889000000001507e-06, 8.903000000001077e-06, 8.917000000000647e-06, 8.903000000001077e-06, 8.888999999998037e-06, 8.874999999998467e-06, 8.917000000004116e-06, 8.889000000004976e-06, 8.874999999998467e-06, 8.917000000004116e-06, 8.888999999998037e-06, 8.874999999998467e-06, 8.846999999999328e-06, 8.902999999997607e-06, 8.888999999998037e-06, 8.916999999997177e-06, 8.806000000000092e-06, 8.888999999998037e-06, 8.874999999998467e-06, 8.888999999998037e-06, 8.902999999997607e-06, 8.874999999998467e-06, 8.889000000004976e-06, 8.846999999999328e-06, 8.888999999998037e-06]</msg>
<status status="PASS" starttime="20201115 22:11:06.095" endtime="20201115 22:11:06.097"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.090" endtime="20201115 22:11:06.097"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:06.099" endtime="20201115 22:11:06.101"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:06.103" endtime="20201115 22:11:06.122"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.101" endtime="20201115 22:11:06.123"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.098" endtime="20201115 22:11:06.123"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.727" endtime="20201115 22:11:06.123"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.725" endtime="20201115 22:11:06.124"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.724" endtime="20201115 22:11:06.124"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:06.126" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:06.135" endtime="20201115 22:11:06.157"></status>
</kw>
<msg timestamp="20201115 22:11:06.158" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:06.133" endtime="20201115 22:11:06.158"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:06.160" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:06.159" endtime="20201115 22:11:06.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:06.161" endtime="20201115 22:11:06.163"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.131" endtime="20201115 22:11:06.163"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.128" endtime="20201115 22:11:06.164"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:06.170" endtime="20201115 22:11:06.457"></status>
</kw>
<msg timestamp="20201115 22:11:06.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024567694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024576903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:06.169" endtime="20201115 22:11:06.461"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:06.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024567694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024576903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:06.462" endtime="20201115 22:11:06.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:06.470" endtime="20201115 22:11:06.472"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.166" endtime="20201115 22:11:06.472"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.164" endtime="20201115 22:11:06.473"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:06.477" level="INFO">${RESULT} = [{'time': 0.024576903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.208999999999606e-06, 'source_diff': 9.208999999999606e-06}, {'time': 0.024814292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:06.473" endtime="20201115 22:11:06.477"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:06.490" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:06.478" endtime="20201115 22:11:06.491"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:06.495" level="INFO">NAME: 00-overhead-11-set</msg>
<status status="PASS" starttime="20201115 22:11:06.494" endtime="20201115 22:11:06.495"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:06.497" level="INFO">VALUE: [9.208999999999606e-06, 9.209000000003076e-06, 9.222000000003172e-06, 9.263999999998412e-06, 9.195000000000036e-06, 9.194000000000563e-06, 9.250000000002312e-06, 9.208000000000133e-06, 9.222999999999176e-06, 9.166000000001423e-06, 9.208000000000133e-06, 9.208000000000133e-06, 9.194000000000563e-06, 9.208999999999606e-06, 9.208000000000133e-06, 9.208000000000133e-06, 9.264000000001882e-06, 9.194000000000563e-06, 9.208000000000133e-06, 9.222999999999176e-06, 9.208000000000133e-06, 9.262999999998939e-06, 9.249999999998842e-06, 9.221999999999703e-06, 9.208000000000133e-06, 9.195000000000036e-06, 9.194000000000563e-06, 9.208000000000133e-06, 9.207999999996663e-06, 9.209000000003076e-06, 9.167000000004366e-06, 9.221999999996233e-06, 9.193999999997093e-06, 9.207999999996663e-06, 9.138999999998287e-06, 9.222000000003172e-06, 9.208999999996137e-06, 9.208000000003602e-06, 9.166999999997427e-06, 9.207999999996663e-06, 9.207999999996663e-06, 9.208000000003602e-06, 9.207999999996663e-06, 9.194000000004032e-06, 9.235999999995803e-06, 9.207999999996663e-06, 9.193999999997093e-06, 9.208000000003602e-06, 9.193999999997093e-06, 9.208000000003602e-06]</msg>
<status status="PASS" starttime="20201115 22:11:06.496" endtime="20201115 22:11:06.498"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.491" endtime="20201115 22:11:06.498"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:06.500" endtime="20201115 22:11:06.502"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:06.504" endtime="20201115 22:11:06.523"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.502" endtime="20201115 22:11:06.524"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.499" endtime="20201115 22:11:06.524"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.127" endtime="20201115 22:11:06.524"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.125" endtime="20201115 22:11:06.525"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.124" endtime="20201115 22:11:06.525"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:06.527" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:06.536" endtime="20201115 22:11:06.559"></status>
</kw>
<msg timestamp="20201115 22:11:06.559" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:06.534" endtime="20201115 22:11:06.559"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:06.562" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:06.560" endtime="20201115 22:11:06.562"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:06.563" endtime="20201115 22:11:06.564"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.532" endtime="20201115 22:11:06.565"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.530" endtime="20201115 22:11:06.565"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:06.572" endtime="20201115 22:11:06.857"></status>
</kw>
<msg timestamp="20201115 22:11:06.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024480097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024489625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:06.570" endtime="20201115 22:11:06.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:06.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024480097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024489625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:06.861" endtime="20201115 22:11:06.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:06.869" endtime="20201115 22:11:06.871"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.567" endtime="20201115 22:11:06.872"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.566" endtime="20201115 22:11:06.872"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:06.876" level="INFO">${RESULT} = [{'time': 0.024489625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.528000000001702e-06, 'source_diff': 9.528000000001702e-06}, {'time': 0.0247515, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:11:06.873" endtime="20201115 22:11:06.876"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:06.890" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:06.877" endtime="20201115 22:11:06.890"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:06.894" level="INFO">NAME: 00-overhead-12-set</msg>
<status status="PASS" starttime="20201115 22:11:06.893" endtime="20201115 22:11:06.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:06.896" level="INFO">VALUE: [9.528000000001702e-06, 9.583000000000508e-06, 9.526999999998759e-06, 9.513999999998662e-06, 9.540999999998329e-06, 9.541999999997802e-06, 9.513999999998662e-06, 9.526999999998759e-06, 9.526999999998759e-06, 9.528000000001702e-06, 9.514000000002132e-06, 9.527999999998232e-06, 9.541999999997802e-06, 9.526999999998759e-06, 9.514000000002132e-06, 9.527999999998232e-06, 9.528000000001702e-06, 9.457999999996913e-06, 9.514000000002132e-06, 9.541999999997802e-06, 9.527999999998232e-06, 9.472999999999426e-06, 9.513999999998662e-06, 9.514000000002132e-06, 9.514000000002132e-06, 9.540999999998329e-06, 9.528000000001702e-06, 9.500000000002562e-06, 9.513999999995193e-06, 9.500000000002562e-06, 9.527999999994763e-06, 9.541000000001798e-06, 9.514000000002132e-06, 9.569000000000938e-06, 9.513999999995193e-06, 9.514000000002132e-06, 9.513999999995193e-06, 9.556000000000842e-06, 9.527999999994763e-06, 9.528000000001702e-06, 9.499999999995623e-06, 9.527999999994763e-06, 9.514000000002132e-06, 9.597000000000078e-06, 9.528000000001702e-06, 9.527999999994763e-06, 9.528000000001702e-06, 9.528000000001702e-06, 9.500000000002562e-06, 9.500000000002562e-06]</msg>
<status status="PASS" starttime="20201115 22:11:06.895" endtime="20201115 22:11:06.897"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.890" endtime="20201115 22:11:06.897"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:06.900" endtime="20201115 22:11:06.901"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:06.903" endtime="20201115 22:11:06.922"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.902" endtime="20201115 22:11:06.923"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.898" endtime="20201115 22:11:06.923"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.528" endtime="20201115 22:11:06.924"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.526" endtime="20201115 22:11:06.924"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.525" endtime="20201115 22:11:06.924"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:06.926" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:06.935" endtime="20201115 22:11:06.959"></status>
</kw>
<msg timestamp="20201115 22:11:06.960" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:06.934" endtime="20201115 22:11:06.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:06.963" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:06.961" endtime="20201115 22:11:06.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:06.964" endtime="20201115 22:11:06.966"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.931" endtime="20201115 22:11:06.966"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.929" endtime="20201115 22:11:06.966"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:06.973" endtime="20201115 22:11:07.261"></status>
</kw>
<msg timestamp="20201115 22:11:07.264" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024661653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024671472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:06.971" endtime="20201115 22:11:07.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:07.272" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024661653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024671472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:07.265" endtime="20201115 22:11:07.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:07.273" endtime="20201115 22:11:07.275"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.969" endtime="20201115 22:11:07.275"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.967" endtime="20201115 22:11:07.276"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:07.280" level="INFO">${RESULT} = [{'time': 0.024671472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.819000000001188e-06, 'source_diff': 9.819000000001188e-06}, {'time': 0.024946097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:07.277" endtime="20201115 22:11:07.280"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:07.293" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:07.281" endtime="20201115 22:11:07.294"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:07.298" level="INFO">NAME: 00-overhead-13-set</msg>
<status status="PASS" starttime="20201115 22:11:07.297" endtime="20201115 22:11:07.298"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:07.301" level="INFO">VALUE: [9.819000000001188e-06, 9.903000000002077e-06, 9.833000000000758e-06, 9.820000000000662e-06, 9.749999999999343e-06, 9.833000000000758e-06, 9.833000000000758e-06, 9.833000000000758e-06, 9.833000000000758e-06, 9.847000000000328e-06, 9.847000000000328e-06, 9.750000000002812e-06, 9.833000000000758e-06, 9.764000000002382e-06, 9.833000000000758e-06, 9.834000000000231e-06, 9.820000000000662e-06, 9.833000000000758e-06, 9.860999999999898e-06, 9.833000000000758e-06, 9.834000000000231e-06, 9.833000000000758e-06, 9.818999999997718e-06, 9.847000000000328e-06, 9.833000000000758e-06, 9.833000000000758e-06, 9.847999999999801e-06, 9.820000000000662e-06, 9.902999999998607e-06, 9.833000000000758e-06, 9.804999999994679e-06, 9.833000000000758e-06, 9.834000000000231e-06, 9.834000000000231e-06, 9.902999999998607e-06, 9.874999999999468e-06, 9.832999999993819e-06, 9.806000000001092e-06, 9.888999999999037e-06, 9.833000000000758e-06, 9.833000000000758e-06, 9.820000000000662e-06, 9.902999999998607e-06, 9.834000000000231e-06, 9.847000000000328e-06, 9.806000000001092e-06, 9.805000000001618e-06, 9.834000000000231e-06, 9.833000000000758e-06, 9.805000000001618e-06]</msg>
<status status="PASS" starttime="20201115 22:11:07.299" endtime="20201115 22:11:07.301"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.294" endtime="20201115 22:11:07.301"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:07.304" endtime="20201115 22:11:07.305"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:07.307" endtime="20201115 22:11:07.326"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.306" endtime="20201115 22:11:07.327"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.302" endtime="20201115 22:11:07.327"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.927" endtime="20201115 22:11:07.328"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.925" endtime="20201115 22:11:07.328"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.924" endtime="20201115 22:11:07.328"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:07.330" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:07.340" endtime="20201115 22:11:07.364"></status>
</kw>
<msg timestamp="20201115 22:11:07.365" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:07.338" endtime="20201115 22:11:07.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:07.367" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:07.366" endtime="20201115 22:11:07.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:07.368" endtime="20201115 22:11:07.370"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.335" endtime="20201115 22:11:07.370"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.333" endtime="20201115 22:11:07.371"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:07.377" endtime="20201115 22:11:07.665"></status>
</kw>
<msg timestamp="20201115 22:11:07.668" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025085847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025095972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:07.376" endtime="20201115 22:11:07.668"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:07.676" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025085847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025095972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:07.669" endtime="20201115 22:11:07.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:07.677" endtime="20201115 22:11:07.679"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.373" endtime="20201115 22:11:07.679"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.371" endtime="20201115 22:11:07.680"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:07.684" level="INFO">${RESULT} = [{'time': 0.025095972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0124999999999718e-05, 'source_diff': 1.0124999999999718e-05}, {'time': 0.025386625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:07.681" endtime="20201115 22:11:07.684"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:07.698" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:07.685" endtime="20201115 22:11:07.698"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:07.702" level="INFO">NAME: 00-overhead-14-set</msg>
<status status="PASS" starttime="20201115 22:11:07.701" endtime="20201115 22:11:07.703"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:07.705" level="INFO">VALUE: [1.0124999999999718e-05, 1.0138999999999287e-05, 1.0139000000002757e-05, 1.0139000000002757e-05, 1.0166999999998427e-05, 1.0139000000002757e-05, 1.0138999999999287e-05, 1.0153000000002327e-05, 1.0152999999998857e-05, 1.0124999999999718e-05, 1.0166999999998427e-05, 1.0166999999998427e-05, 1.0153000000002327e-05, 1.0138999999999287e-05, 1.0195000000001037e-05, 1.0179999999998524e-05, 1.0137999999999814e-05, 1.0137999999999814e-05, 1.0138999999999287e-05, 1.0124999999999718e-05, 1.0138999999999287e-05, 1.0124999999999718e-05, 1.0152999999998857e-05, 1.0152999999998857e-05, 1.0207999999997663e-05, 1.0166999999998427e-05, 1.0221999999997233e-05, 1.0124999999999718e-05, 1.0139000000006226e-05, 1.0138999999999287e-05, 1.0166999999998427e-05, 1.0152999999998857e-05, 1.0124999999999718e-05, 1.0152999999998857e-05, 1.0166999999998427e-05, 1.0179999999998524e-05, 1.0152999999998857e-05, 1.0138999999999287e-05, 1.0181000000004936e-05, 1.0138999999999287e-05, 1.0138999999999287e-05, 1.0124999999999718e-05, 1.0138999999999287e-05, 1.0139000000006226e-05, 1.0139000000006226e-05, 1.0138999999999287e-05, 1.0152999999998857e-05, 1.0137999999999814e-05, 1.0098000000000051e-05, 1.0138999999999287e-05]</msg>
<status status="PASS" starttime="20201115 22:11:07.703" endtime="20201115 22:11:07.705"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.699" endtime="20201115 22:11:07.706"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:07.708" endtime="20201115 22:11:07.709"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:07.712" endtime="20201115 22:11:07.731"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.710" endtime="20201115 22:11:07.732"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.706" endtime="20201115 22:11:07.732"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.331" endtime="20201115 22:11:07.732"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.329" endtime="20201115 22:11:07.733"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.328" endtime="20201115 22:11:07.733"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:07.735" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:07.744" endtime="20201115 22:11:07.770"></status>
</kw>
<msg timestamp="20201115 22:11:07.771" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:07.742" endtime="20201115 22:11:07.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:07.773" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:07.772" endtime="20201115 22:11:07.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:07.774" endtime="20201115 22:11:07.776"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.740" endtime="20201115 22:11:07.776"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.737" endtime="20201115 22:11:07.777"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:07.783" endtime="20201115 22:11:08.070"></status>
</kw>
<msg timestamp="20201115 22:11:08.073" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024615153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024625611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:07.782" endtime="20201115 22:11:08.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:08.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024615153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024625611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:08.074" endtime="20201115 22:11:08.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:08.082" endtime="20201115 22:11:08.084"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.779" endtime="20201115 22:11:08.085"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.777" endtime="20201115 22:11:08.085"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:08.089" level="INFO">${RESULT} = [{'time': 0.024625611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0457999999997913e-05, 'source_diff': 1.0457999999997913e-05}, {'time': 0.024938792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:08.086" endtime="20201115 22:11:08.090"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:08.103" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:08.090" endtime="20201115 22:11:08.103"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:08.108" level="INFO">NAME: 00-overhead-15-set</msg>
<status status="PASS" starttime="20201115 22:11:08.107" endtime="20201115 22:11:08.108"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:08.111" level="INFO">VALUE: [1.0457999999997913e-05, 1.0459000000000857e-05, 1.0457999999997913e-05, 1.0458999999997387e-05, 1.0458000000001383e-05, 1.0459000000000857e-05, 1.0458000000001383e-05, 1.0458999999997387e-05, 1.0472000000000953e-05, 1.0458000000001383e-05, 1.0443999999998343e-05, 1.0458000000001383e-05, 1.0443999999998343e-05, 1.0458000000001383e-05, 1.0458000000001383e-05, 1.0458999999997387e-05, 1.0444000000001813e-05, 1.0443999999998343e-05, 1.0513999999999663e-05, 1.0458000000001383e-05, 1.0444000000001813e-05, 1.0513000000000189e-05, 1.0458999999997387e-05, 1.0430000000005712e-05, 1.0445000000004756e-05, 1.0388999999999537e-05, 1.0402999999999107e-05, 1.0415999999999204e-05, 1.0443999999998343e-05, 1.0457999999997913e-05, 1.0443999999998343e-05, 1.0471999999997483e-05, 1.0458999999997387e-05, 1.0471999999997483e-05, 1.0444000000005282e-05, 1.0471999999997483e-05, 1.0444999999997817e-05, 1.0431000000005186e-05, 1.0458999999997387e-05, 1.0430999999998247e-05, 1.0429999999998774e-05, 1.0485999999997053e-05, 1.0444999999997817e-05, 1.0444000000005282e-05, 1.0528000000002702e-05, 1.0443999999998343e-05, 1.0457999999997913e-05, 1.0473000000003896e-05, 1.0458999999997387e-05, 1.0457999999997913e-05]</msg>
<status status="PASS" starttime="20201115 22:11:08.109" endtime="20201115 22:11:08.112"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.104" endtime="20201115 22:11:08.112"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:08.115" endtime="20201115 22:11:08.116"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:08.119" endtime="20201115 22:11:08.138"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.117" endtime="20201115 22:11:08.139"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.113" endtime="20201115 22:11:08.139"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.735" endtime="20201115 22:11:08.140"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.734" endtime="20201115 22:11:08.140"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.733" endtime="20201115 22:11:08.140"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:08.142" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:08.151" endtime="20201115 22:11:08.178"></status>
</kw>
<msg timestamp="20201115 22:11:08.179" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:08.149" endtime="20201115 22:11:08.179"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:08.181" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:08.180" endtime="20201115 22:11:08.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:08.182" endtime="20201115 22:11:08.184"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.147" endtime="20201115 22:11:08.184"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.145" endtime="20201115 22:11:08.185"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:08.191" endtime="20201115 22:11:08.478"></status>
</kw>
<msg timestamp="20201115 22:11:08.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024707736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024718514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:08.190" endtime="20201115 22:11:08.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:08.489" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024707736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024718514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:08.482" endtime="20201115 22:11:08.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:08.490" endtime="20201115 22:11:08.492"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.187" endtime="20201115 22:11:08.492"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.185" endtime="20201115 22:11:08.493"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:08.497" level="INFO">${RESULT} = [{'time': 0.024718514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0777999999999482e-05, 'source_diff': 1.0777999999999482e-05}, {'time': 0.02504975, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:11:08.494" endtime="20201115 22:11:08.498"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:08.511" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:08.498" endtime="20201115 22:11:08.511"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:08.515" level="INFO">NAME: 00-overhead-16-set</msg>
<status status="PASS" starttime="20201115 22:11:08.514" endtime="20201115 22:11:08.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:08.523" level="INFO">VALUE: [1.0777999999999482e-05, 1.0805999999998622e-05, 1.0763999999999913e-05, 1.0763999999999913e-05, 1.0750000000000343e-05, 1.0681000000001967e-05, 1.0750000000000343e-05, 1.0777999999999482e-05, 1.0777999999999482e-05, 1.0736000000000773e-05, 1.0777999999999482e-05, 1.0763999999999913e-05, 1.0763999999999913e-05, 1.0777999999999482e-05, 1.0791999999999052e-05, 1.0763999999999913e-05, 1.0763999999999913e-05, 1.0778000000002952e-05, 1.0777000000000009e-05, 1.0750000000000343e-05, 1.0764000000003382e-05, 1.0777999999996013e-05, 1.0777999999996013e-05, 1.0764000000003382e-05, 1.0735999999997303e-05, 1.0778000000002952e-05, 1.0778000000002952e-05, 1.0763999999996443e-05, 1.0778000000002952e-05, 1.077699999999654e-05, 1.0763999999996443e-05, 1.0763999999996443e-05, 1.0763999999996443e-05, 1.0778000000002952e-05, 1.0750000000003812e-05, 1.0778000000002952e-05, 1.0764000000003382e-05, 1.0763999999996443e-05, 1.0778000000002952e-05, 1.079099999999611e-05, 1.0736000000004242e-05, 1.0764000000003382e-05, 1.0778000000002952e-05, 1.0777999999996013e-05, 1.0750000000003812e-05, 1.0764000000003382e-05, 1.0792000000002522e-05, 1.0792000000002522e-05, 1.0750000000003812e-05, 1.0750000000003812e-05]</msg>
<status status="PASS" starttime="20201115 22:11:08.517" endtime="20201115 22:11:08.524"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.512" endtime="20201115 22:11:08.524"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:08.527" endtime="20201115 22:11:08.528"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:08.530" endtime="20201115 22:11:08.549"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.528" endtime="20201115 22:11:08.550"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.525" endtime="20201115 22:11:08.550"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.143" endtime="20201115 22:11:08.551"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.141" endtime="20201115 22:11:08.551"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.140" endtime="20201115 22:11:08.551"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:08.553" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:08.562" endtime="20201115 22:11:08.590"></status>
</kw>
<msg timestamp="20201115 22:11:08.591" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:08.561" endtime="20201115 22:11:08.591"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:08.593" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:08.592" endtime="20201115 22:11:08.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:08.594" endtime="20201115 22:11:08.596"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.558" endtime="20201115 22:11:08.596"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.556" endtime="20201115 22:11:08.597"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:08.603" endtime="20201115 22:11:08.891"></status>
</kw>
<msg timestamp="20201115 22:11:08.894" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024655972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024667056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:08.602" endtime="20201115 22:11:08.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:08.902" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024655972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024667056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:08.895" endtime="20201115 22:11:08.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:08.903" endtime="20201115 22:11:08.905"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.599" endtime="20201115 22:11:08.905"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.597" endtime="20201115 22:11:08.906"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:08.910" level="INFO">${RESULT} = [{'time': 0.024667056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1083999999998012e-05, 'source_diff': 1.1083999999998012e-05}, {'time': 0.025023764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:08.907" endtime="20201115 22:11:08.911"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:08.924" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:08.911" endtime="20201115 22:11:08.924"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:08.928" level="INFO">NAME: 00-overhead-17-set</msg>
<status status="PASS" starttime="20201115 22:11:08.927" endtime="20201115 22:11:08.929"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:08.931" level="INFO">VALUE: [1.1083999999998012e-05, 1.1070000000001912e-05, 1.1083000000002008e-05, 1.1069999999998442e-05, 1.1069999999998442e-05, 1.1083999999998012e-05, 1.1055999999998872e-05, 1.1084000000001482e-05, 1.1069000000002438e-05, 1.1125000000000718e-05, 1.1083000000002008e-05, 1.1096999999998108e-05, 1.1069000000002438e-05, 1.1083000000002008e-05, 1.1152999999999857e-05, 1.1082999999998538e-05, 1.1082999999998538e-05, 1.1097000000001578e-05, 1.1152999999999857e-05, 1.1083000000002008e-05, 1.1028000000003202e-05, 1.1111000000001148e-05, 1.1069000000002438e-05, 1.1084000000001482e-05, 1.1013999999996693e-05, 1.1112000000000621e-05, 1.1069000000002438e-05, 1.1083000000002008e-05, 1.1070000000001912e-05, 1.1070000000001912e-05, 1.1083000000002008e-05, 1.1082999999995069e-05, 1.1083000000002008e-05, 1.1069999999994973e-05, 1.1084000000001482e-05, 1.1069000000002438e-05, 1.1110999999994209e-05, 1.1098000000001051e-05, 1.1083999999994543e-05, 1.1097000000001578e-05, 1.1110999999994209e-05, 1.1083000000002008e-05, 1.1042000000002772e-05, 1.1096999999994639e-05, 1.1069999999994973e-05, 1.1068999999995499e-05, 1.1083000000002008e-05, 1.1097000000001578e-05, 1.1069000000002438e-05, 1.1082999999995069e-05]</msg>
<status status="PASS" starttime="20201115 22:11:08.930" endtime="20201115 22:11:08.931"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.925" endtime="20201115 22:11:08.932"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:08.934" endtime="20201115 22:11:08.935"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:08.938" endtime="20201115 22:11:08.957"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.936" endtime="20201115 22:11:08.957"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.933" endtime="20201115 22:11:08.958"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.554" endtime="20201115 22:11:08.958"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.552" endtime="20201115 22:11:08.958"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.552" endtime="20201115 22:11:08.959"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:08.961" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:08.970" endtime="20201115 22:11:08.999"></status>
</kw>
<msg timestamp="20201115 22:11:08.999" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:08.968" endtime="20201115 22:11:09.000"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:09.002" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:09.001" endtime="20201115 22:11:09.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:09.003" endtime="20201115 22:11:09.005"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.965" endtime="20201115 22:11:09.005"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.963" endtime="20201115 22:11:09.006"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:09.012" endtime="20201115 22:11:09.299"></status>
</kw>
<msg timestamp="20201115 22:11:09.302" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024819153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024830569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:09.010" endtime="20201115 22:11:09.302"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:09.310" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024819153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024830569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:09.303" endtime="20201115 22:11:09.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:09.311" endtime="20201115 22:11:09.313"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.008" endtime="20201115 22:11:09.313"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.006" endtime="20201115 22:11:09.314"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:09.318" level="INFO">${RESULT} = [{'time': 0.024830569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1416000000000204e-05, 'source_diff': 1.1416000000000204e-05}, {'time': 0.025203236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:09.315" endtime="20201115 22:11:09.318"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:09.332" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:09.319" endtime="20201115 22:11:09.332"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:09.336" level="INFO">NAME: 00-overhead-18-set</msg>
<status status="PASS" starttime="20201115 22:11:09.335" endtime="20201115 22:11:09.336"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:09.339" level="INFO">VALUE: [1.1416000000000204e-05, 1.1389000000000538e-05, 1.1389000000000538e-05, 1.1388000000001064e-05, 1.1403000000000107e-05, 1.1443999999999344e-05, 1.1389000000000538e-05, 1.1403000000000107e-05, 1.1375000000000968e-05, 1.1417000000003147e-05, 1.1375000000000968e-05, 1.1403000000000107e-05, 1.1346999999998358e-05, 1.1388999999997068e-05, 1.1403000000000107e-05, 1.1457999999998913e-05, 1.1403000000000107e-05, 1.1389000000000538e-05, 1.1403000000000107e-05, 1.1389000000000538e-05, 1.1403000000000107e-05, 1.1361000000001398e-05, 1.1389000000000538e-05, 1.1346999999994889e-05, 1.1416999999999677e-05, 1.1388000000001064e-05, 1.1472000000005422e-05, 1.1403000000000107e-05, 1.1389000000000538e-05, 1.1347000000001828e-05, 1.1374999999994029e-05, 1.1403000000000107e-05, 1.1334000000001732e-05, 1.1429999999999774e-05, 1.1347000000001828e-05, 1.1416999999999677e-05, 1.1402000000000634e-05, 1.1416999999999677e-05, 1.1416999999999677e-05, 1.1430999999999247e-05, 1.1416999999999677e-05, 1.1416000000000204e-05, 1.1389000000000538e-05, 1.1375000000000968e-05, 1.1403000000000107e-05, 1.1389000000000538e-05, 1.1403000000000107e-05, 1.1403000000000107e-05, 1.1443999999999344e-05, 1.1403000000000107e-05]</msg>
<status status="PASS" starttime="20201115 22:11:09.337" endtime="20201115 22:11:09.339"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.332" endtime="20201115 22:11:09.339"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:09.342" endtime="20201115 22:11:09.343"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:09.345" endtime="20201115 22:11:09.364"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.344" endtime="20201115 22:11:09.365"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.340" endtime="20201115 22:11:09.365"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.961" endtime="20201115 22:11:09.366"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.960" endtime="20201115 22:11:09.366"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.959" endtime="20201115 22:11:09.366"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:09.368" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:09.377" endtime="20201115 22:11:09.407"></status>
</kw>
<msg timestamp="20201115 22:11:09.407" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:09.376" endtime="20201115 22:11:09.408"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:09.410" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:09.408" endtime="20201115 22:11:09.410"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:09.411" endtime="20201115 22:11:09.413"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.373" endtime="20201115 22:11:09.413"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.371" endtime="20201115 22:11:09.414"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:09.421" endtime="20201115 22:11:09.708"></status>
</kw>
<msg timestamp="20201115 22:11:09.712" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024537958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024549653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:09.419" endtime="20201115 22:11:09.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:09.720" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024537958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024549653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:09.713" endtime="20201115 22:11:09.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:09.721" endtime="20201115 22:11:09.722"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.416" endtime="20201115 22:11:09.723"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.414" endtime="20201115 22:11:09.723"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:09.727" level="INFO">${RESULT} = [{'time': 0.024549653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1695000000002537e-05, 'source_diff': 1.1695000000002537e-05}, {'time': 0.024936125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:09.724" endtime="20201115 22:11:09.728"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:09.741" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:09.728" endtime="20201115 22:11:09.741"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:09.746" level="INFO">NAME: 00-overhead-19-set</msg>
<status status="PASS" starttime="20201115 22:11:09.745" endtime="20201115 22:11:09.746"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:09.748" level="INFO">VALUE: [1.1695000000002537e-05, 1.1693999999999594e-05, 1.1777999999997013e-05, 1.1708999999998637e-05, 1.1721999999998733e-05, 1.1708999999998637e-05, 1.1723000000001677e-05, 1.1735999999998303e-05, 1.1707999999999164e-05, 1.1708000000002633e-05, 1.1707999999999164e-05, 1.1707999999999164e-05, 1.1722000000002203e-05, 1.1693999999999594e-05, 1.1709000000002107e-05, 1.1721999999998733e-05, 1.1721999999998733e-05, 1.1750000000001343e-05, 1.1707999999999164e-05, 1.1735999999998303e-05, 1.1694999999999067e-05, 1.1666999999999927e-05, 1.1693999999999594e-05, 1.1708999999998637e-05, 1.1707999999999164e-05, 1.1707999999999164e-05, 1.1792000000003522e-05, 1.1708999999998637e-05, 1.1721999999998733e-05, 1.1721999999998733e-05, 1.1693999999999594e-05, 1.1708000000006102e-05, 1.1694999999999067e-05, 1.1708999999998637e-05, 1.1708000000006102e-05, 1.1625000000001218e-05, 1.1707999999999164e-05, 1.1708999999998637e-05, 1.1722000000005672e-05, 1.1735999999998303e-05, 1.1707999999999164e-05, 1.1666000000000454e-05, 1.1763999999997443e-05, 1.1723000000005146e-05, 1.1693999999999594e-05, 1.1721999999998733e-05, 1.1666000000000454e-05, 1.1722000000005672e-05, 1.1693999999999594e-05, 1.1680000000000024e-05]</msg>
<status status="PASS" starttime="20201115 22:11:09.747" endtime="20201115 22:11:09.748"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.742" endtime="20201115 22:11:09.749"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:09.751" endtime="20201115 22:11:09.753"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:09.755" endtime="20201115 22:11:09.774"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.753" endtime="20201115 22:11:09.775"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.750" endtime="20201115 22:11:09.775"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.369" endtime="20201115 22:11:09.775"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.367" endtime="20201115 22:11:09.775"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.366" endtime="20201115 22:11:09.776"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:09.778" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:09.787" endtime="20201115 22:11:09.818"></status>
</kw>
<msg timestamp="20201115 22:11:09.818" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:09.785" endtime="20201115 22:11:09.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:09.821" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:09.819" endtime="20201115 22:11:09.821"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:09.822" endtime="20201115 22:11:09.824"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.783" endtime="20201115 22:11:09.824"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.780" endtime="20201115 22:11:09.825"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:09.831" endtime="20201115 22:11:10.118"></status>
</kw>
<msg timestamp="20201115 22:11:10.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024629236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024641236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:09.830" endtime="20201115 22:11:10.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:10.129" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024629236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024641236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:10.122" endtime="20201115 22:11:10.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:10.130" endtime="20201115 22:11:10.132"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.827" endtime="20201115 22:11:10.132"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.825" endtime="20201115 22:11:10.133"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:10.137" level="INFO">${RESULT} = [{'time': 0.024641236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2000000000001593e-05, 'source_diff': 1.2000000000001593e-05}, {'time': 0.025055181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:10.133" endtime="20201115 22:11:10.137"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:10.151" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:10.138" endtime="20201115 22:11:10.151"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:10.156" level="INFO">NAME: 00-overhead-20-set</msg>
<status status="PASS" starttime="20201115 22:11:10.155" endtime="20201115 22:11:10.156"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:10.158" level="INFO">VALUE: [1.2000000000001593e-05, 1.2042000000000302e-05, 1.2027000000001259e-05, 1.2028000000000733e-05, 1.2041000000000829e-05, 1.2068999999999969e-05, 1.202699999999779e-05, 1.2014000000001163e-05, 1.2014000000001163e-05, 1.1985999999998553e-05, 1.2069999999999442e-05, 1.1985999999998553e-05, 1.2042000000000302e-05, 1.2027000000001259e-05, 1.2055000000000399e-05, 1.2028000000000733e-05, 1.2055999999999872e-05, 1.2042000000003772e-05, 1.204099999999736e-05, 1.2027999999997263e-05, 1.2028000000004202e-05, 1.1999999999998123e-05, 1.202699999999779e-05, 1.1971999999998983e-05, 1.2041999999996833e-05, 1.1986000000005492e-05, 1.1999999999998123e-05, 1.2041999999996833e-05, 1.2013999999997693e-05, 1.2041999999996833e-05, 1.2014000000004632e-05, 1.2027999999997263e-05, 1.2027999999997263e-05, 1.2013999999997693e-05, 1.2027999999997263e-05, 1.2013999999997693e-05, 1.2027999999997263e-05, 1.202699999999779e-05, 1.2013999999997693e-05, 1.204099999999736e-05, 1.2013999999997693e-05, 1.2013999999997693e-05, 1.2027999999997263e-05, 1.1999999999998123e-05, 1.2027999999997263e-05, 1.2013999999997693e-05, 1.2070000000002912e-05, 1.2041999999996833e-05, 1.1999999999998123e-05, 1.202699999999779e-05]</msg>
<status status="PASS" starttime="20201115 22:11:10.157" endtime="20201115 22:11:10.159"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.152" endtime="20201115 22:11:10.159"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:10.161" endtime="20201115 22:11:10.163"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:10.165" endtime="20201115 22:11:10.184"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.163" endtime="20201115 22:11:10.185"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.160" endtime="20201115 22:11:10.185"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.778" endtime="20201115 22:11:10.185"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.777" endtime="20201115 22:11:10.186"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.776" endtime="20201115 22:11:10.186"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:10.188" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:10.197" endtime="20201115 22:11:10.229"></status>
</kw>
<msg timestamp="20201115 22:11:10.229" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:10.196" endtime="20201115 22:11:10.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:10.232" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:10.230" endtime="20201115 22:11:10.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:10.233" endtime="20201115 22:11:10.234"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.193" endtime="20201115 22:11:10.235"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.191" endtime="20201115 22:11:10.235"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:10.242" endtime="20201115 22:11:10.530"></status>
</kw>
<msg timestamp="20201115 22:11:10.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025423972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025436292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:10.240" endtime="20201115 22:11:10.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:10.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025423972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025436292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:10.534" endtime="20201115 22:11:10.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:10.542" endtime="20201115 22:11:10.544"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.238" endtime="20201115 22:11:10.544"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.236" endtime="20201115 22:11:10.545"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:10.549" level="INFO">${RESULT} = [{'time': 0.025436292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2319999999999692e-05, 'source_diff': 1.2319999999999692e-05}, {'time': 0.025872806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:10.545" endtime="20201115 22:11:10.549"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:10.562" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:10.550" endtime="20201115 22:11:10.563"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:10.567" level="INFO">NAME: 00-overhead-21-set</msg>
<status status="PASS" starttime="20201115 22:11:10.566" endtime="20201115 22:11:10.567"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:10.569" level="INFO">VALUE: [1.2319999999999692e-05, 1.2348000000002302e-05, 1.2332999999999789e-05, 1.2360999999998928e-05, 1.2361999999998402e-05, 1.2333999999999262e-05, 1.2333999999999262e-05, 1.2333999999999262e-05, 1.226299999999847e-05, 1.2333999999999262e-05, 1.2332999999999789e-05, 1.2319999999999692e-05, 1.2347999999998832e-05, 1.2332999999999789e-05, 1.2346999999995889e-05, 1.2292000000004022e-05, 1.2347000000002828e-05, 1.2319999999996223e-05, 1.2319999999996223e-05, 1.2332999999996319e-05, 1.2332999999996319e-05, 1.2347000000002828e-05, 1.2291999999997083e-05, 1.2347000000002828e-05, 1.2291999999997083e-05, 1.2333000000003258e-05, 1.2347000000002828e-05, 1.2319999999996223e-05, 1.2348000000002302e-05, 1.2264000000004882e-05, 1.2334000000002732e-05, 1.2277999999997513e-05, 1.2347000000002828e-05, 1.231899999999675e-05, 1.2319000000003688e-05, 1.2347000000002828e-05, 1.2333000000003258e-05, 1.2319999999996223e-05, 1.2375000000001968e-05, 1.2346999999995889e-05, 1.2333000000003258e-05, 1.2332999999996319e-05, 1.2250000000005312e-05, 1.2346999999995889e-05, 1.2305999999996653e-05, 1.2334000000002732e-05, 1.2360999999995459e-05, 1.2333000000003258e-05, 1.2263999999997943e-05, 1.2332999999996319e-05]</msg>
<status status="PASS" starttime="20201115 22:11:10.568" endtime="20201115 22:11:10.570"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.563" endtime="20201115 22:11:10.570"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:10.572" endtime="20201115 22:11:10.574"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:10.576" endtime="20201115 22:11:10.596"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.574" endtime="20201115 22:11:10.596"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.571" endtime="20201115 22:11:10.597"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.189" endtime="20201115 22:11:10.597"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.187" endtime="20201115 22:11:10.597"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.186" endtime="20201115 22:11:10.597"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:10.600" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:10.608" endtime="20201115 22:11:10.642"></status>
</kw>
<msg timestamp="20201115 22:11:10.642" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:10.607" endtime="20201115 22:11:10.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:10.645" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:10.643" endtime="20201115 22:11:10.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:10.646" endtime="20201115 22:11:10.647"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.604" endtime="20201115 22:11:10.648"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.602" endtime="20201115 22:11:10.648"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:10.655" endtime="20201115 22:11:10.940"></status>
</kw>
<msg timestamp="20201115 22:11:10.943" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024688347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024701, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:11:10.653" endtime="20201115 22:11:10.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:10.951" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024688347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024701, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:11:10.944" endtime="20201115 22:11:10.951"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:10.952" endtime="20201115 22:11:10.954"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.651" endtime="20201115 22:11:10.954"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.649" endtime="20201115 22:11:10.955"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:10.959" level="INFO">${RESULT} = [{'time': 0.024701, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2653000000001358e-05, 'source_diff': 1.2653000000001358e-05}, {'time': 0.025148236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:11:10.955" endtime="20201115 22:11:10.959"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:10.972" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:10.960" endtime="20201115 22:11:10.972"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:10.977" level="INFO">NAME: 00-overhead-22-set</msg>
<status status="PASS" starttime="20201115 22:11:10.976" endtime="20201115 22:11:10.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:10.979" level="INFO">VALUE: [1.2653000000001358e-05, 1.2639000000001788e-05, 1.2708999999999637e-05, 1.2638999999998318e-05, 1.2639000000001788e-05, 1.2624999999998748e-05, 1.2624999999998748e-05, 1.2624999999998748e-05, 1.2653000000001358e-05, 1.2651999999998415e-05, 1.2694000000000594e-05, 1.2666999999997458e-05, 1.2721999999999734e-05, 1.2638999999998318e-05, 1.2624999999998748e-05, 1.2597000000003078e-05, 1.2638999999994849e-05, 1.2667000000000928e-05, 1.2694000000000594e-05, 1.2639000000001788e-05, 1.2638999999994849e-05, 1.2694000000000594e-05, 1.2653000000001358e-05, 1.2639000000001788e-05, 1.2596999999996139e-05, 1.2639000000001788e-05, 1.2695000000000067e-05, 1.2639000000001788e-05, 1.2639000000001788e-05, 1.2666000000001454e-05, 1.2653000000001358e-05, 1.2652000000001884e-05, 1.2596999999996139e-05, 1.2639000000001788e-05, 1.2665999999994515e-05, 1.2735999999999303e-05, 1.2597000000003078e-05, 1.2639000000001788e-05, 1.2667000000000928e-05, 1.2652000000001884e-05, 1.2639000000001788e-05, 1.2637999999995375e-05, 1.2653000000001358e-05, 1.2652999999994419e-05, 1.2653000000001358e-05, 1.2695000000000067e-05, 1.2638999999994849e-05, 1.2639000000001788e-05, 1.2651999999994945e-05, 1.2639000000001788e-05]</msg>
<status status="PASS" starttime="20201115 22:11:10.978" endtime="20201115 22:11:10.980"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.973" endtime="20201115 22:11:10.981"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:10.983" endtime="20201115 22:11:10.984"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:10.986" endtime="20201115 22:11:11.006"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.985" endtime="20201115 22:11:11.006"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.981" endtime="20201115 22:11:11.007"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.600" endtime="20201115 22:11:11.007"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.598" endtime="20201115 22:11:11.007"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.598" endtime="20201115 22:11:11.008"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:11.010" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:11.019" endtime="20201115 22:11:11.053"></status>
</kw>
<msg timestamp="20201115 22:11:11.053" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:11.017" endtime="20201115 22:11:11.054"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:11.056" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:11.054" endtime="20201115 22:11:11.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:11.057" endtime="20201115 22:11:11.058"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.014" endtime="20201115 22:11:11.059"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.012" endtime="20201115 22:11:11.059"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:11.066" endtime="20201115 22:11:11.353"></status>
</kw>
<msg timestamp="20201115 22:11:11.356" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024889542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024902514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:11.064" endtime="20201115 22:11:11.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:11.364" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024889542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024902514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:11.357" endtime="20201115 22:11:11.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:11.365" endtime="20201115 22:11:11.367"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.062" endtime="20201115 22:11:11.367"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.060" endtime="20201115 22:11:11.368"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:11.372" level="INFO">${RESULT} = [{'time': 0.024902514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2971999999999984e-05, 'source_diff': 1.2971999999999984e-05}, {'time': 0.025374333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:11.369" endtime="20201115 22:11:11.372"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:11.386" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:11.373" endtime="20201115 22:11:11.386"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:11.390" level="INFO">NAME: 00-overhead-23-set</msg>
<status status="PASS" starttime="20201115 22:11:11.389" endtime="20201115 22:11:11.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:11.393" level="INFO">VALUE: [1.2971999999999984e-05, 1.2999999999999123e-05, 1.2917000000001178e-05, 1.2958999999999887e-05, 1.2971999999999984e-05, 1.2958999999999887e-05, 1.2958999999999887e-05, 1.2971999999999984e-05, 1.3027999999998263e-05, 1.2958000000000414e-05, 1.2971999999999984e-05, 1.2958000000000414e-05, 1.2971999999999984e-05, 1.2999999999999123e-05, 1.2958000000000414e-05, 1.3013999999998693e-05, 1.2945000000000317e-05, 1.2971999999999984e-05, 1.2931000000000747e-05, 1.2944000000000844e-05, 1.2958999999999887e-05, 1.2943999999993905e-05, 1.2972999999999457e-05, 1.2917000000001178e-05, 1.2958000000000414e-05, 1.2945000000000317e-05, 1.3027999999998263e-05, 1.2944000000000844e-05, 1.2957999999993475e-05, 1.2944999999993378e-05, 1.2986000000006492e-05, 1.2958999999999887e-05, 1.2958000000000414e-05, 1.2971999999999984e-05, 1.2958000000000414e-05, 1.2958000000000414e-05, 1.2958000000000414e-05, 1.2957999999993475e-05, 1.2889000000002038e-05, 1.2971999999999984e-05, 1.2931000000000747e-05, 1.2958000000000414e-05, 1.2971999999999984e-05, 1.2929999999994335e-05, 1.2958000000000414e-05, 1.2999999999999123e-05, 1.2958999999999887e-05, 1.2971999999999984e-05, 1.2972999999999457e-05, 1.2902999999994669e-05]</msg>
<status status="PASS" starttime="20201115 22:11:11.391" endtime="20201115 22:11:11.394"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.387" endtime="20201115 22:11:11.394"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:11.396" endtime="20201115 22:11:11.398"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:11.400" endtime="20201115 22:11:11.419"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.398" endtime="20201115 22:11:11.420"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.395" endtime="20201115 22:11:11.420"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.010" endtime="20201115 22:11:11.421"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.009" endtime="20201115 22:11:11.421"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.008" endtime="20201115 22:11:11.421"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:11.423" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:11.432" endtime="20201115 22:11:11.467"></status>
</kw>
<msg timestamp="20201115 22:11:11.468" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:11.431" endtime="20201115 22:11:11.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:11.470" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:11.469" endtime="20201115 22:11:11.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:11.472" endtime="20201115 22:11:11.473"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.428" endtime="20201115 22:11:11.474"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.426" endtime="20201115 22:11:11.474"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:11.481" endtime="20201115 22:11:11.767"></status>
</kw>
<msg timestamp="20201115 22:11:11.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025130583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025143847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:11.479" endtime="20201115 22:11:11.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:11.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025130583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025143847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:11.771" endtime="20201115 22:11:11.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:11.779" endtime="20201115 22:11:11.781"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.476" endtime="20201115 22:11:11.781"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.475" endtime="20201115 22:11:11.782"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:11.786" level="INFO">${RESULT} = [{'time': 0.025143847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3263999999998943e-05, 'source_diff': 1.3263999999998943e-05}, {'time': 0.025641819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:11.782" endtime="20201115 22:11:11.786"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:11.800" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:11.787" endtime="20201115 22:11:11.800"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:11.805" level="INFO">NAME: 00-overhead-24-set</msg>
<status status="PASS" starttime="20201115 22:11:11.803" endtime="20201115 22:11:11.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:11.807" level="INFO">VALUE: [1.3263999999998943e-05, 1.3249999999999373e-05, 1.3263999999998943e-05, 1.3249999999999373e-05, 1.3263999999998943e-05, 1.3277999999998513e-05, 1.3263999999998943e-05, 1.3291999999998083e-05, 1.326299999999947e-05, 1.327699999999904e-05, 1.3277999999998513e-05, 1.3277999999998513e-05, 1.3264000000002413e-05, 1.3249999999999373e-05, 1.3263999999998943e-05, 1.3263999999998943e-05, 1.3222000000000234e-05, 1.3249999999999373e-05, 1.3235999999999803e-05, 1.327699999999904e-05, 1.3292000000005022e-05, 1.3277999999998513e-05, 1.3277999999998513e-05, 1.3277999999998513e-05, 1.3222000000000234e-05, 1.3263999999998943e-05, 1.3249999999999373e-05, 1.3263999999998943e-05, 1.3263999999998943e-05, 1.3222000000000234e-05, 1.3277999999998513e-05, 1.3277999999998513e-05, 1.3263999999998943e-05, 1.3222000000000234e-05, 1.3249999999999373e-05, 1.3249999999999373e-05, 1.3263999999998943e-05, 1.3249999999999373e-05, 1.3278000000005452e-05, 1.3277999999998513e-05, 1.3277999999998513e-05, 1.327699999999904e-05, 1.3249999999999373e-05, 1.3263999999998943e-05, 1.326299999999947e-05, 1.3263999999998943e-05, 1.327699999999904e-05, 1.3277999999998513e-05, 1.3263999999998943e-05, 1.3263999999998943e-05]</msg>
<status status="PASS" starttime="20201115 22:11:11.806" endtime="20201115 22:11:11.807"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.801" endtime="20201115 22:11:11.808"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:11.810" endtime="20201115 22:11:11.811"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:11.814" endtime="20201115 22:11:11.833"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.812" endtime="20201115 22:11:11.833"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.808" endtime="20201115 22:11:11.834"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.424" endtime="20201115 22:11:11.834"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.422" endtime="20201115 22:11:11.834"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.421" endtime="20201115 22:11:11.835"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:11.837" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:11.846" endtime="20201115 22:11:11.882"></status>
</kw>
<msg timestamp="20201115 22:11:11.882" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:11.844" endtime="20201115 22:11:11.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:11.885" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:11.883" endtime="20201115 22:11:11.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:11.886" endtime="20201115 22:11:11.888"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.842" endtime="20201115 22:11:11.888"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.839" endtime="20201115 22:11:11.889"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:11.895" endtime="20201115 22:11:12.184"></status>
</kw>
<msg timestamp="20201115 22:11:12.187" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024791486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024805069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:11.894" endtime="20201115 22:11:12.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:12.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024791486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024805069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:12.188" endtime="20201115 22:11:12.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:12.197" endtime="20201115 22:11:12.198"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.891" endtime="20201115 22:11:12.199"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.889" endtime="20201115 22:11:12.199"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:12.204" level="INFO">${RESULT} = [{'time': 0.024805069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.358299999999757e-05, 'source_diff': 1.358299999999757e-05}, {'time': 0.025316556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:12.200" endtime="20201115 22:11:12.204"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:12.217" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:12.205" endtime="20201115 22:11:12.217"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:12.222" level="INFO">NAME: 00-overhead-25-set</msg>
<status status="PASS" starttime="20201115 22:11:12.221" endtime="20201115 22:11:12.222"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:12.224" level="INFO">VALUE: [1.358299999999757e-05, 1.3598000000000082e-05, 1.3583999999997043e-05, 1.3569999999997473e-05, 1.3597000000000609e-05, 1.3513999999999193e-05, 1.3597000000000609e-05, 1.3527999999998763e-05, 1.3597000000000609e-05, 1.3569999999997473e-05, 1.358299999999757e-05, 1.3597000000000609e-05, 1.3569000000001469e-05, 1.3583999999997043e-05, 1.3597000000004078e-05, 1.3569999999997473e-05, 1.3597000000004078e-05, 1.3610999999996709e-05, 1.3569999999997473e-05, 1.3597000000004078e-05, 1.3583000000004508e-05, 1.3597999999996613e-05, 1.358299999999757e-05, 1.3625000000003218e-05, 1.3583000000004508e-05, 1.3596999999997139e-05, 1.3597000000004078e-05, 1.3583999999997043e-05, 1.358299999999757e-05, 1.358299999999757e-05, 1.3569999999997473e-05, 1.3568999999998e-05, 1.3541999999998333e-05, 1.3570000000004412e-05, 1.3583999999997043e-05, 1.3611000000003648e-05, 1.3583000000004508e-05, 1.3555999999997903e-05, 1.352699999999929e-05, 1.3568999999998e-05, 1.3584000000003982e-05, 1.358299999999757e-05, 1.3652999999995419e-05, 1.3583000000004508e-05, 1.3596999999997139e-05, 1.358299999999757e-05, 1.3569999999997473e-05, 1.3569999999997473e-05, 1.3597000000004078e-05, 1.3568999999998e-05]</msg>
<status status="PASS" starttime="20201115 22:11:12.223" endtime="20201115 22:11:12.225"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.218" endtime="20201115 22:11:12.225"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:12.227" endtime="20201115 22:11:12.229"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:12.231" endtime="20201115 22:11:12.250"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.229" endtime="20201115 22:11:12.251"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.226" endtime="20201115 22:11:12.251"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.837" endtime="20201115 22:11:12.252"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.836" endtime="20201115 22:11:12.252"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.835" endtime="20201115 22:11:12.252"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.156" endtime="20201115 22:11:12.252"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="teardown">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:12.256" endtime="20201115 22:11:12.276"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.255" endtime="20201115 22:11:12.276"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.254" endtime="20201115 22:11:12.277"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:11:02.085" endtime="20201115 22:11:12.277" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Remove List">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:12.284" endtime="20201115 22:11:12.304"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.283" endtime="20201115 22:11:12.304"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:12.318" endtime="20201115 22:11:12.332"></status>
</kw>
<msg timestamp="20201115 22:11:12.333" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:12.316" endtime="20201115 22:11:12.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:12.336" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:12.334" endtime="20201115 22:11:12.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:11:12.339" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:11:12.337" endtime="20201115 22:11:12.339"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:12.313" endtime="20201115 22:11:12.340"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:12.311" endtime="20201115 22:11:12.340"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.310" endtime="20201115 22:11:12.341"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:11:12.344" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:11:12.344" endtime="20201115 22:11:12.345"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.342" endtime="20201115 22:11:12.345"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.309" endtime="20201115 22:11:12.345"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.308" endtime="20201115 22:11:12.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:12.346" endtime="20201115 22:11:12.348"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.307" endtime="20201115 22:11:12.348"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.305" endtime="20201115 22:11:12.349"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.282" endtime="20201115 22:11:12.349"></status>
</kw>
<kw name="${n} IN RANGE [ 25 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:12.352" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:12.361" endtime="20201115 22:11:12.376"></status>
</kw>
<msg timestamp="20201115 22:11:12.376" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:12.359" endtime="20201115 22:11:12.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:12.379" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:12.377" endtime="20201115 22:11:12.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:12.380" endtime="20201115 22:11:12.381"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.357" endtime="20201115 22:11:12.382"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.355" endtime="20201115 22:11:12.382"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:12.389" endtime="20201115 22:11:12.674"></status>
</kw>
<msg timestamp="20201115 22:11:12.677" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069243917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069253611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:12.387" endtime="20201115 22:11:12.677"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:12.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069243917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069253611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:12.678" endtime="20201115 22:11:12.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:12.686" endtime="20201115 22:11:12.689"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.385" endtime="20201115 22:11:12.689"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.383" endtime="20201115 22:11:12.690"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:12.694" level="INFO">${RESULT} = [{'time': 0.069253611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.694000000004532e-06, 'source_diff': 9.694000000004532e-06}, {'time': 0.069332667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:12.690" endtime="20201115 22:11:12.694"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:12.708" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:12.695" endtime="20201115 22:11:12.708"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:12.712" level="INFO">NAME: 00-overhead-1-remove</msg>
<status status="PASS" starttime="20201115 22:11:12.711" endtime="20201115 22:11:12.713"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:12.715" level="INFO">VALUE: [9.694000000004532e-06, 9.695000000004006e-06, 9.597000000000078e-06, 9.694999999990128e-06, 9.694000000004532e-06, 9.679999999998024e-06, 9.694000000004532e-06, 9.694000000004532e-06, 9.667000000004866e-06, 9.681000000011375e-06, 9.638999999991849e-06, 9.639000000005726e-06, 9.707999999997163e-06, 9.709000000010515e-06, 9.679999999998024e-06, 9.694000000004532e-06, 9.707999999997163e-06, 9.750000000002812e-06, 9.624999999999218e-06, 9.680000000011901e-06, 9.679999999998024e-06, 9.597000000000078e-06, 9.693999999990655e-06, 9.666000000005393e-06, 9.680999999997497e-06, 9.736000000010181e-06, 9.693999999990655e-06, 9.666999999990988e-06, 9.694000000004532e-06, 9.639000000005726e-06, 9.639000000005726e-06, 9.652999999998357e-06, 9.667000000004866e-06, 9.722000000003672e-06, 9.709000000010515e-06, 9.679999999998024e-06, 9.693999999990655e-06, 9.666999999990988e-06, 9.680999999997497e-06, 9.624999999999218e-06, 9.695000000004006e-06, 9.666000000005393e-06, 9.694000000004532e-06, 9.666999999990988e-06, 9.722000000003672e-06, 9.694000000004532e-06, 9.694999999990128e-06, 9.679999999998024e-06, 9.694000000004532e-06, 9.721999999989794e-06]</msg>
<status status="PASS" starttime="20201115 22:11:12.713" endtime="20201115 22:11:12.715"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.709" endtime="20201115 22:11:12.716"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:12.718" endtime="20201115 22:11:12.719"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:12.721" endtime="20201115 22:11:12.741"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.720" endtime="20201115 22:11:12.741"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.716" endtime="20201115 22:11:12.742"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.353" endtime="20201115 22:11:12.742"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.351" endtime="20201115 22:11:12.742"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.350" endtime="20201115 22:11:12.742"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:12.745" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:12.753" endtime="20201115 22:11:12.769"></status>
</kw>
<msg timestamp="20201115 22:11:12.769" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:12.752" endtime="20201115 22:11:12.769"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:12.772" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:12.770" endtime="20201115 22:11:12.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:12.773" endtime="20201115 22:11:12.774"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.749" endtime="20201115 22:11:12.775"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.747" endtime="20201115 22:11:12.775"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:12.782" endtime="20201115 22:11:13.069"></status>
</kw>
<msg timestamp="20201115 22:11:13.072" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025187486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025197514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:12.780" endtime="20201115 22:11:13.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:13.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025187486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025197514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:13.073" endtime="20201115 22:11:13.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:13.082" endtime="20201115 22:11:13.083"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.778" endtime="20201115 22:11:13.084"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.776" endtime="20201115 22:11:13.084"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:13.088" level="INFO">${RESULT} = [{'time': 0.025197514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0028000000002202e-05, 'source_diff': 1.0028000000002202e-05}, {'time': 0.025293542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:13.085" endtime="20201115 22:11:13.089"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:13.102" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:13.089" endtime="20201115 22:11:13.102"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:13.107" level="INFO">NAME: 00-overhead-2-remove</msg>
<status status="PASS" starttime="20201115 22:11:13.106" endtime="20201115 22:11:13.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:13.109" level="INFO">VALUE: [1.0028000000002202e-05, 9.999999999999593e-06, 9.986000000000023e-06, 1.0027999999998732e-05, 1.0013999999999162e-05, 1.0027999999998732e-05, 1.0013999999999162e-05, 1.0041999999998302e-05, 1.0013999999999162e-05, 1.0027999999998732e-05, 9.958000000000883e-06, 1.0000000000003062e-05, 1.0013999999999162e-05, 1.0027999999998732e-05, 9.999999999999593e-06, 9.999999999999593e-06, 1.0042000000001772e-05, 1.0028000000002202e-05, 1.0028000000002202e-05, 1.0027999999998732e-05, 1.0014000000002632e-05, 1.0027999999998732e-05, 9.986000000000023e-06, 9.999999999999593e-06, 1.0056000000001342e-05, 1.0014000000002632e-05, 1.0026999999999259e-05, 1.0027999999998732e-05, 1.0028000000002202e-05, 1.0026999999999259e-05, 1.0012999999999689e-05, 9.999999999999593e-06, 1.0098000000000051e-05, 1.0028000000002202e-05, 1.0041999999998302e-05, 9.944000000001313e-06, 1.0056000000001342e-05, 1.0042000000001772e-05, 1.0027999999998732e-05, 1.0027999999998732e-05, 1.0013999999999162e-05, 1.0012999999999689e-05, 1.0013999999999162e-05, 1.0013999999999162e-05, 1.0027999999998732e-05, 1.0027000000002728e-05, 1.0041999999998302e-05, 1.0027999999998732e-05, 1.0042000000001772e-05, 9.999999999999593e-06]</msg>
<status status="PASS" starttime="20201115 22:11:13.108" endtime="20201115 22:11:13.110"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.103" endtime="20201115 22:11:13.110"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:13.112" endtime="20201115 22:11:13.114"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:13.116" endtime="20201115 22:11:13.135"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.114" endtime="20201115 22:11:13.136"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.111" endtime="20201115 22:11:13.136"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.745" endtime="20201115 22:11:13.136"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.744" endtime="20201115 22:11:13.137"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.743" endtime="20201115 22:11:13.137"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:13.139" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:13.148" endtime="20201115 22:11:13.164"></status>
</kw>
<msg timestamp="20201115 22:11:13.165" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:13.146" endtime="20201115 22:11:13.165"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:13.167" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:13.166" endtime="20201115 22:11:13.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:13.168" endtime="20201115 22:11:13.170"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.144" endtime="20201115 22:11:13.170"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.142" endtime="20201115 22:11:13.171"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:13.178" endtime="20201115 22:11:13.464"></status>
</kw>
<msg timestamp="20201115 22:11:13.467" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024857125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024867444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:13.176" endtime="20201115 22:11:13.467"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:13.475" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024857125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024867444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:13.468" endtime="20201115 22:11:13.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:13.476" endtime="20201115 22:11:13.478"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.173" endtime="20201115 22:11:13.478"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.172" endtime="20201115 22:11:13.479"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:13.483" level="INFO">${RESULT} = [{'time': 0.024867444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0318999999998218e-05, 'source_diff': 1.0318999999998218e-05}, {'time': 0.024976861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:13.480" endtime="20201115 22:11:13.483"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:13.498" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:13.484" endtime="20201115 22:11:13.498"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:13.503" level="INFO">NAME: 00-overhead-3-remove</msg>
<status status="PASS" starttime="20201115 22:11:13.502" endtime="20201115 22:11:13.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:13.505" level="INFO">VALUE: [1.0318999999998218e-05, 1.0332999999997788e-05, 1.0263999999999412e-05, 1.0347000000000828e-05, 1.0318999999998218e-05, 1.0347000000000828e-05, 1.0348000000000301e-05, 1.0332999999997788e-05, 1.0346999999997358e-05, 1.0332999999997788e-05, 1.0305000000002118e-05, 1.0346999999997358e-05, 1.0332999999997788e-05, 1.0333000000001258e-05, 1.0332999999997788e-05, 1.0347000000000828e-05, 1.0333000000001258e-05, 1.0334000000000731e-05, 1.0333000000001258e-05, 1.0388999999999537e-05, 1.0334000000000731e-05, 1.0320000000001162e-05, 1.0374999999999968e-05, 1.0304999999998649e-05, 1.0333000000001258e-05, 1.0334000000000731e-05, 1.0333000000001258e-05, 1.0334000000000731e-05, 1.0416999999998677e-05, 1.0333000000001258e-05, 1.0332999999997788e-05, 1.0304999999998649e-05, 1.0318999999998218e-05, 1.0346999999997358e-05, 1.0332999999997788e-05, 1.0361000000000398e-05, 1.0333000000001258e-05, 1.0347000000000828e-05, 1.0333000000001258e-05, 1.0333000000001258e-05, 1.0334000000000731e-05, 1.0347000000000828e-05, 1.0332999999997788e-05, 1.0333000000001258e-05, 1.0333000000001258e-05, 1.0333000000001258e-05, 1.0332999999997788e-05, 1.0320000000001162e-05, 1.0333000000001258e-05, 1.0306000000001592e-05]</msg>
<status status="PASS" starttime="20201115 22:11:13.504" endtime="20201115 22:11:13.506"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.499" endtime="20201115 22:11:13.506"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:13.508" endtime="20201115 22:11:13.510"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:13.512" endtime="20201115 22:11:13.531"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.510" endtime="20201115 22:11:13.532"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.507" endtime="20201115 22:11:13.532"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.140" endtime="20201115 22:11:13.532"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.138" endtime="20201115 22:11:13.533"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.137" endtime="20201115 22:11:13.533"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:13.535" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:13.544" endtime="20201115 22:11:13.565"></status>
</kw>
<msg timestamp="20201115 22:11:13.566" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:13.542" endtime="20201115 22:11:13.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:13.568" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:13.567" endtime="20201115 22:11:13.569"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:13.569" endtime="20201115 22:11:13.571"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.540" endtime="20201115 22:11:13.572"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.538" endtime="20201115 22:11:13.572"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:13.578" endtime="20201115 22:11:13.866"></status>
</kw>
<msg timestamp="20201115 22:11:13.869" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029616833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029627458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:13.577" endtime="20201115 22:11:13.869"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:13.877" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029616833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029627458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:13.870" endtime="20201115 22:11:13.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:13.878" endtime="20201115 22:11:13.880"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.574" endtime="20201115 22:11:13.880"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.573" endtime="20201115 22:11:13.881"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:13.885" level="INFO">${RESULT} = [{'time': 0.029627458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0625000000000218e-05, 'source_diff': 1.0625000000000218e-05}, {'time': 0.029754528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:13.881" endtime="20201115 22:11:13.885"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:13.898" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:13.886" endtime="20201115 22:11:13.899"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:13.903" level="INFO">NAME: 00-overhead-4-remove</msg>
<status status="PASS" starttime="20201115 22:11:13.902" endtime="20201115 22:11:13.903"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:13.905" level="INFO">VALUE: [1.0625000000000218e-05, 1.0638999999999788e-05, 1.0625000000000218e-05, 1.0625000000000218e-05, 1.0652999999999357e-05, 1.0639000000003257e-05, 1.0625000000000218e-05, 1.0638000000000314e-05, 1.0665999999999454e-05, 1.0638999999999788e-05, 1.0625000000000218e-05, 1.0652999999999357e-05, 1.0611000000000648e-05, 1.0666999999998927e-05, 1.0666999999998927e-05, 1.0651999999999884e-05, 1.0666999999998927e-05, 1.0638999999999788e-05, 1.0708999999997637e-05, 1.0652999999999357e-05, 1.0709000000004576e-05, 1.0651999999999884e-05, 1.0625000000000218e-05, 1.0625000000000218e-05, 1.0638999999999788e-05, 1.0625000000000218e-05, 1.0638999999999788e-05, 1.0638999999999788e-05, 1.0625000000000218e-05, 1.0665999999999454e-05, 1.0652999999999357e-05, 1.0652999999999357e-05, 1.0667000000005866e-05, 1.0652999999999357e-05, 1.0638999999999788e-05, 1.0652999999999357e-05, 1.0680999999998497e-05, 1.0638999999999788e-05, 1.0638999999999788e-05, 1.0612000000000121e-05, 1.0625000000000218e-05, 1.0582999999994569e-05, 1.0625000000000218e-05, 1.0708999999997637e-05, 1.0625000000000218e-05, 1.0652999999999357e-05, 1.0638999999999788e-05, 1.0638999999999788e-05, 1.0639000000006726e-05, 1.0638000000000314e-05]</msg>
<status status="PASS" starttime="20201115 22:11:13.904" endtime="20201115 22:11:13.906"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.899" endtime="20201115 22:11:13.906"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:13.908" endtime="20201115 22:11:13.910"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:13.912" endtime="20201115 22:11:13.931"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.910" endtime="20201115 22:11:13.932"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.907" endtime="20201115 22:11:13.932"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.536" endtime="20201115 22:11:13.933"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.534" endtime="20201115 22:11:13.933"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.533" endtime="20201115 22:11:13.933"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:13.936" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:13.944" endtime="20201115 22:11:13.962"></status>
</kw>
<msg timestamp="20201115 22:11:13.962" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:13.943" endtime="20201115 22:11:13.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:13.965" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:13.963" endtime="20201115 22:11:13.965"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:13.966" endtime="20201115 22:11:13.967"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.940" endtime="20201115 22:11:13.968"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.938" endtime="20201115 22:11:13.968"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:13.975" endtime="20201115 22:11:14.261"></status>
</kw>
<msg timestamp="20201115 22:11:14.264" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025543139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025554097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:13.973" endtime="20201115 22:11:14.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:14.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025543139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025554097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:14.265" endtime="20201115 22:11:14.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:14.273" endtime="20201115 22:11:14.274"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.971" endtime="20201115 22:11:14.275"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.969" endtime="20201115 22:11:14.275"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:14.279" level="INFO">${RESULT} = [{'time': 0.025554097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0958000000001883e-05, 'source_diff': 1.0958000000001883e-05}, {'time': 0.025700847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:14.276" endtime="20201115 22:11:14.280"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:14.293" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:14.280" endtime="20201115 22:11:14.293"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:14.298" level="INFO">NAME: 00-overhead-5-remove</msg>
<status status="PASS" starttime="20201115 22:11:14.297" endtime="20201115 22:11:14.298"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:14.300" level="INFO">VALUE: [1.0958000000001883e-05, 1.0985999999997553e-05, 1.0972000000001453e-05, 1.0903000000003077e-05, 1.0958999999997887e-05, 1.0957999999998413e-05, 1.0999999999997123e-05, 1.0958999999997887e-05, 1.0945000000001787e-05, 1.0958000000001883e-05, 1.0958000000001883e-05, 1.0973000000000926e-05, 1.0943999999998844e-05, 1.0958000000001883e-05, 1.0958000000001883e-05, 1.0957999999998413e-05, 1.0971999999997983e-05, 1.0957999999998413e-05, 1.0972000000001453e-05, 1.0958000000001883e-05, 1.0945000000001787e-05, 1.0958000000001883e-05, 1.0959000000001357e-05, 1.0971999999997983e-05, 1.0957999999998413e-05, 1.0957999999998413e-05, 1.0916999999999177e-05, 1.0958000000001883e-05, 1.0944999999998317e-05, 1.0957999999998413e-05, 1.0986000000001023e-05, 1.0973000000000926e-05, 1.0971999999997983e-05, 1.0973000000000926e-05, 1.0986000000001023e-05, 1.0958000000001883e-05, 1.1000000000000593e-05, 1.1027999999999732e-05, 1.0986000000001023e-05, 1.0959000000001357e-05, 1.0985999999997553e-05, 1.0959000000004826e-05, 1.0958999999997887e-05, 1.0971999999997983e-05, 1.0944999999998317e-05, 1.0944999999998317e-05, 1.0971999999997983e-05, 1.0985999999997553e-05, 1.0958999999997887e-05, 1.0971999999997983e-05]</msg>
<status status="PASS" starttime="20201115 22:11:14.299" endtime="20201115 22:11:14.301"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.294" endtime="20201115 22:11:14.301"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:14.304" endtime="20201115 22:11:14.305"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:14.307" endtime="20201115 22:11:14.326"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.306" endtime="20201115 22:11:14.327"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.302" endtime="20201115 22:11:14.327"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.936" endtime="20201115 22:11:14.328"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.934" endtime="20201115 22:11:14.328"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.934" endtime="20201115 22:11:14.328"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:14.330" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:14.339" endtime="20201115 22:11:14.358"></status>
</kw>
<msg timestamp="20201115 22:11:14.359" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:14.338" endtime="20201115 22:11:14.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:14.361" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:14.360" endtime="20201115 22:11:14.362"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:14.363" endtime="20201115 22:11:14.364"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.335" endtime="20201115 22:11:14.365"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.333" endtime="20201115 22:11:14.365"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:14.371" endtime="20201115 22:11:14.658"></status>
</kw>
<msg timestamp="20201115 22:11:14.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024807042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024818375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:14.370" endtime="20201115 22:11:14.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:14.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024807042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024818375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:14.662" endtime="20201115 22:11:14.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:14.670" endtime="20201115 22:11:14.672"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.367" endtime="20201115 22:11:14.672"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.366" endtime="20201115 22:11:14.673"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:14.677" level="INFO">${RESULT} = [{'time': 0.024818375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1332999999998788e-05, 'source_diff': 1.1332999999998788e-05}, {'time': 0.024975014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:14.673" endtime="20201115 22:11:14.677"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:14.690" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:14.678" endtime="20201115 22:11:14.691"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:14.695" level="INFO">NAME: 00-overhead-6-remove</msg>
<status status="PASS" starttime="20201115 22:11:14.694" endtime="20201115 22:11:14.695"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:14.698" level="INFO">VALUE: [1.1332999999998788e-05, 1.1291999999999552e-05, 1.1277999999999982e-05, 1.1249999999997373e-05, 1.1277999999999982e-05, 1.1277999999999982e-05, 1.1263999999996943e-05, 1.1291999999999552e-05, 1.1291999999999552e-05, 1.1277999999999982e-05, 1.1250000000000843e-05, 1.1250000000000843e-05, 1.1264000000000413e-05, 1.1207999999998663e-05, 1.1277999999999982e-05, 1.1277999999999982e-05, 1.127699999999704e-05, 1.1221999999998233e-05, 1.1277999999999982e-05, 1.1277000000000509e-05, 1.1250000000000843e-05, 1.1292000000003022e-05, 1.1264000000000413e-05, 1.1264000000000413e-05, 1.1264000000000413e-05, 1.1264000000000413e-05, 1.1221999999998233e-05, 1.1277999999999982e-05, 1.1264000000000413e-05, 1.1263999999996943e-05, 1.1277999999999982e-05, 1.1291000000000079e-05, 1.1264000000000413e-05, 1.1277999999999982e-05, 1.1277999999999982e-05, 1.1277999999999982e-05, 1.1277999999999982e-05, 1.126299999999747e-05, 1.1264000000000413e-05, 1.1250000000000843e-05, 1.1250000000000843e-05, 1.1278000000003452e-05, 1.1278000000003452e-05, 1.1263999999996943e-05, 1.1278000000003452e-05, 1.1278000000003452e-05, 1.127699999999704e-05, 1.1278000000003452e-05, 1.1278000000003452e-05, 1.1222000000005172e-05]</msg>
<status status="PASS" starttime="20201115 22:11:14.696" endtime="20201115 22:11:14.698"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.691" endtime="20201115 22:11:14.699"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:14.701" endtime="20201115 22:11:14.702"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:14.705" endtime="20201115 22:11:14.724"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.703" endtime="20201115 22:11:14.724"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.699" endtime="20201115 22:11:14.725"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.331" endtime="20201115 22:11:14.725"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.329" endtime="20201115 22:11:14.725"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.329" endtime="20201115 22:11:14.726"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:14.728" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:14.737" endtime="20201115 22:11:14.756"></status>
</kw>
<msg timestamp="20201115 22:11:14.757" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:14.735" endtime="20201115 22:11:14.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:14.759" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:14.758" endtime="20201115 22:11:14.760"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:14.760" endtime="20201115 22:11:14.762"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.732" endtime="20201115 22:11:14.763"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.730" endtime="20201115 22:11:14.763"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:14.769" endtime="20201115 22:11:15.056"></status>
</kw>
<msg timestamp="20201115 22:11:15.059" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025140556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025152167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:14.768" endtime="20201115 22:11:15.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:15.067" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025140556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025152167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:15.060" endtime="20201115 22:11:15.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:15.068" endtime="20201115 22:11:15.070"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.765" endtime="20201115 22:11:15.071"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.764" endtime="20201115 22:11:15.071"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:15.075" level="INFO">${RESULT} = [{'time': 0.025152167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1610999999998178e-05, 'source_diff': 1.1610999999998178e-05}, {'time': 0.025323667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:15.072" endtime="20201115 22:11:15.076"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:15.091" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:15.077" endtime="20201115 22:11:15.091"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:15.095" level="INFO">NAME: 00-overhead-7-remove</msg>
<status status="PASS" starttime="20201115 22:11:15.094" endtime="20201115 22:11:15.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:15.098" level="INFO">VALUE: [1.1610999999998178e-05, 1.1653000000000358e-05, 1.1638000000001314e-05, 1.1597000000002078e-05, 1.1584000000001982e-05, 1.1582999999999039e-05, 1.1582999999999039e-05, 1.1569999999998942e-05, 1.1582999999999039e-05, 1.1597000000002078e-05, 1.1610999999998178e-05, 1.1569999999998942e-05, 1.1541999999999802e-05, 1.1624999999997748e-05, 1.1584000000001982e-05, 1.1555999999999372e-05, 1.1569999999998942e-05, 1.1625000000001218e-05, 1.1583999999998512e-05, 1.1584000000001982e-05, 1.1569000000002938e-05, 1.1596999999998608e-05, 1.1598000000001552e-05, 1.1583000000002508e-05, 1.1597000000002078e-05, 1.1583999999998512e-05, 1.1583999999998512e-05, 1.1596999999998608e-05, 1.1596999999998608e-05, 1.1584000000001982e-05, 1.1653000000000358e-05, 1.1582999999999039e-05, 1.1596999999998608e-05, 1.1611000000001648e-05, 1.1583000000002508e-05, 1.1584000000001982e-05, 1.1569999999995473e-05, 1.1528000000003702e-05, 1.1625000000001218e-05, 1.1583000000002508e-05, 1.1570000000002412e-05, 1.1597000000002078e-05, 1.1582999999995569e-05, 1.1596999999995139e-05, 1.1582999999995569e-05, 1.1639000000000788e-05, 1.1597000000002078e-05, 1.1596999999995139e-05, 1.1568999999995999e-05, 1.1625000000001218e-05]</msg>
<status status="PASS" starttime="20201115 22:11:15.096" endtime="20201115 22:11:15.098"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.092" endtime="20201115 22:11:15.099"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:15.101" endtime="20201115 22:11:15.102"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:15.104" endtime="20201115 22:11:15.124"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.103" endtime="20201115 22:11:15.124"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.099" endtime="20201115 22:11:15.125"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.728" endtime="20201115 22:11:15.125"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.727" endtime="20201115 22:11:15.125"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.726" endtime="20201115 22:11:15.125"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:15.128" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:15.136" endtime="20201115 22:11:15.157"></status>
</kw>
<msg timestamp="20201115 22:11:15.157" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:15.135" endtime="20201115 22:11:15.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:15.160" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:15.158" endtime="20201115 22:11:15.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:15.161" endtime="20201115 22:11:15.162"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.132" endtime="20201115 22:11:15.163"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.130" endtime="20201115 22:11:15.163"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:15.170" endtime="20201115 22:11:15.456"></status>
</kw>
<msg timestamp="20201115 22:11:15.459" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024707611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0247195, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:11:15.168" endtime="20201115 22:11:15.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:15.467" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024707611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0247195, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:11:15.460" endtime="20201115 22:11:15.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:15.468" endtime="20201115 22:11:15.470"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.166" endtime="20201115 22:11:15.470"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.164" endtime="20201115 22:11:15.471"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:15.475" level="INFO">${RESULT} = [{'time': 0.0247195, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1888999999997568e-05, 'source_diff': 1.1888999999997568e-05}, {'time': 0.024915208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:15.472" endtime="20201115 22:11:15.475"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:15.489" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:15.476" endtime="20201115 22:11:15.489"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:15.493" level="INFO">NAME: 00-overhead-8-remove</msg>
<status status="PASS" starttime="20201115 22:11:15.492" endtime="20201115 22:11:15.493"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:15.496" level="INFO">VALUE: [1.1888999999997568e-05, 1.1889000000001038e-05, 1.1889000000001038e-05, 1.1917000000000177e-05, 1.1888999999997568e-05, 1.1888999999997568e-05, 1.1930999999999747e-05, 1.1972999999998457e-05, 1.1805999999999622e-05, 1.1875000000001468e-05, 1.1889000000001038e-05, 1.1889000000001038e-05, 1.1860999999998428e-05, 1.1819999999999192e-05, 1.1903000000000608e-05, 1.1917000000000177e-05, 1.1971999999998983e-05, 1.1902000000001134e-05, 1.1903000000000608e-05, 1.1944999999999317e-05, 1.1889000000001038e-05, 1.1875000000001468e-05, 1.1874999999997998e-05, 1.1887999999998095e-05, 1.1903000000000608e-05, 1.1903000000000608e-05, 1.1888999999997568e-05, 1.1903000000000608e-05, 1.1875000000001468e-05, 1.1889000000001038e-05, 1.1889000000001038e-05, 1.1903000000000608e-05, 1.1875000000001468e-05, 1.1889000000001038e-05, 1.1917000000000177e-05, 1.1903000000000608e-05, 1.1875000000001468e-05, 1.1889000000001038e-05, 1.1889000000001038e-05, 1.1903000000000608e-05, 1.1903000000000608e-05, 1.1903000000000608e-05, 1.1903000000000608e-05, 1.1889000000001038e-05, 1.1903000000000608e-05, 1.1889000000001038e-05, 1.1889000000001038e-05, 1.1972999999998457e-05, 1.1874999999994529e-05, 1.1889000000001038e-05]</msg>
<status status="PASS" starttime="20201115 22:11:15.494" endtime="20201115 22:11:15.496"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.490" endtime="20201115 22:11:15.496"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:15.499" endtime="20201115 22:11:15.500"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:15.502" endtime="20201115 22:11:15.522"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.501" endtime="20201115 22:11:15.522"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.497" endtime="20201115 22:11:15.523"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.128" endtime="20201115 22:11:15.523"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.127" endtime="20201115 22:11:15.523"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.126" endtime="20201115 22:11:15.523"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:15.526" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:15.534" endtime="20201115 22:11:15.556"></status>
</kw>
<msg timestamp="20201115 22:11:15.556" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:15.533" endtime="20201115 22:11:15.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:15.559" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:15.557" endtime="20201115 22:11:15.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:15.560" endtime="20201115 22:11:15.561"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.530" endtime="20201115 22:11:15.562"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.528" endtime="20201115 22:11:15.562"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:15.569" endtime="20201115 22:11:15.856"></status>
</kw>
<msg timestamp="20201115 22:11:15.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024761028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024773222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:15.568" endtime="20201115 22:11:15.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:15.867" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024761028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024773222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:15.860" endtime="20201115 22:11:15.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:15.868" endtime="20201115 22:11:15.870"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.565" endtime="20201115 22:11:15.871"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.563" endtime="20201115 22:11:15.871"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:15.875" level="INFO">${RESULT} = [{'time': 0.024773222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2194000000000094e-05, 'source_diff': 1.2194000000000094e-05}, {'time': 0.024982389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:15.872" endtime="20201115 22:11:15.875"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:15.889" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:15.876" endtime="20201115 22:11:15.889"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:15.893" level="INFO">NAME: 00-overhead-9-remove</msg>
<status status="PASS" starttime="20201115 22:11:15.892" endtime="20201115 22:11:15.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:15.896" level="INFO">VALUE: [1.2194000000000094e-05, 1.2264000000001413e-05, 1.2222000000002703e-05, 1.2152999999997388e-05, 1.2207999999999664e-05, 1.2194000000000094e-05, 1.2235999999998803e-05, 1.2207999999999664e-05, 1.2235999999998803e-05, 1.2153000000000858e-05, 1.2194000000000094e-05, 1.2207999999999664e-05, 1.2124999999998248e-05, 1.2207999999999664e-05, 1.2194999999999567e-05, 1.2208000000003133e-05, 1.2263999999997943e-05, 1.2207999999999664e-05, 1.2207999999999664e-05, 1.2194000000000094e-05, 1.2194000000000094e-05, 1.2221999999999233e-05, 1.2208999999999137e-05, 1.2194000000000094e-05, 1.2180999999999997e-05, 1.2194000000000094e-05, 1.2208999999999137e-05, 1.2194000000000094e-05, 1.2194000000000094e-05, 1.2194999999999567e-05, 1.2194999999999567e-05, 1.2277999999997513e-05, 1.2207999999999664e-05, 1.2221999999999233e-05, 1.2207999999999664e-05, 1.2194999999999567e-05, 1.2207999999999664e-05, 1.2180000000000524e-05, 1.2221999999999233e-05, 1.2207999999999664e-05, 1.2221999999999233e-05, 1.2222999999998707e-05, 1.2180000000000524e-05, 1.2207999999999664e-05, 1.2207999999999664e-05, 1.2207999999999664e-05, 1.2166000000000954e-05, 1.2153000000000858e-05, 1.2222999999998707e-05, 1.2221999999999233e-05]</msg>
<status status="PASS" starttime="20201115 22:11:15.894" endtime="20201115 22:11:15.896"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.890" endtime="20201115 22:11:15.897"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:15.899" endtime="20201115 22:11:15.900"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:15.902" endtime="20201115 22:11:15.922"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.901" endtime="20201115 22:11:15.922"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.897" endtime="20201115 22:11:15.923"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.526" endtime="20201115 22:11:15.923"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.524" endtime="20201115 22:11:15.923"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.524" endtime="20201115 22:11:15.923"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:15.926" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:15.934" endtime="20201115 22:11:15.957"></status>
</kw>
<msg timestamp="20201115 22:11:15.957" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:15.933" endtime="20201115 22:11:15.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:15.960" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:15.959" endtime="20201115 22:11:15.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:15.961" endtime="20201115 22:11:15.963"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.930" endtime="20201115 22:11:15.963"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.928" endtime="20201115 22:11:15.964"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:15.970" endtime="20201115 22:11:16.259"></status>
</kw>
<msg timestamp="20201115 22:11:16.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024721222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02473375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:11:15.969" endtime="20201115 22:11:16.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:16.270" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024721222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02473375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:11:16.263" endtime="20201115 22:11:16.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:16.271" endtime="20201115 22:11:16.273"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.966" endtime="20201115 22:11:16.273"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.964" endtime="20201115 22:11:16.274"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:16.278" level="INFO">${RESULT} = [{'time': 0.02473375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2527999999997763e-05, 'source_diff': 1.2527999999997763e-05}, {'time': 0.024957417, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:11:16.275" endtime="20201115 22:11:16.278"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:16.292" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:16.279" endtime="20201115 22:11:16.292"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:16.296" level="INFO">NAME: 00-overhead-10-remove</msg>
<status status="PASS" starttime="20201115 22:11:16.295" endtime="20201115 22:11:16.296"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:16.299" level="INFO">VALUE: [1.2527999999997763e-05, 1.2513999999998193e-05, 1.2513999999998193e-05, 1.2513999999998193e-05, 1.2569999999999942e-05, 1.2528000000001233e-05, 1.2527000000001759e-05, 1.2569999999999942e-05, 1.2513999999998193e-05, 1.252699999999829e-05, 1.2528000000001233e-05, 1.2528000000001233e-05, 1.251299999999872e-05, 1.2500000000002093e-05, 1.2514000000001663e-05, 1.2527999999997763e-05, 1.2513999999998193e-05, 1.252699999999829e-05, 1.2514000000001663e-05, 1.2513000000002189e-05, 1.2528000000001233e-05, 1.2514000000001663e-05, 1.2527000000001759e-05, 1.2528000000001233e-05, 1.252699999999829e-05, 1.2514000000001663e-05, 1.2444000000000344e-05, 1.2499999999998623e-05, 1.2542000000000803e-05, 1.2527999999997763e-05, 1.2527999999997763e-05, 1.2444999999999817e-05, 1.2485999999999053e-05, 1.2514000000005132e-05, 1.2499999999998623e-05, 1.2527999999997763e-05, 1.2527999999997763e-05, 1.2556000000003842e-05, 1.2596999999996139e-05, 1.2513999999998193e-05, 1.2597000000003078e-05, 1.2513999999998193e-05, 1.2527999999997763e-05, 1.2513999999998193e-05, 1.2527999999997763e-05, 1.2513999999998193e-05, 1.2582999999996569e-05, 1.2541999999997333e-05, 1.2513999999998193e-05, 1.2514000000005132e-05]</msg>
<status status="PASS" starttime="20201115 22:11:16.297" endtime="20201115 22:11:16.299"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.292" endtime="20201115 22:11:16.300"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:16.302" endtime="20201115 22:11:16.303"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:16.305" endtime="20201115 22:11:16.324"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.304" endtime="20201115 22:11:16.325"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.300" endtime="20201115 22:11:16.326"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.926" endtime="20201115 22:11:16.326"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.925" endtime="20201115 22:11:16.326"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.924" endtime="20201115 22:11:16.326"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:16.328" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:16.338" endtime="20201115 22:11:16.360"></status>
</kw>
<msg timestamp="20201115 22:11:16.361" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:16.336" endtime="20201115 22:11:16.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:16.363" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:16.362" endtime="20201115 22:11:16.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:16.364" endtime="20201115 22:11:16.366"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.334" endtime="20201115 22:11:16.366"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.331" endtime="20201115 22:11:16.367"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:16.373" endtime="20201115 22:11:16.660"></status>
</kw>
<msg timestamp="20201115 22:11:16.663" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025307986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025320806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:16.372" endtime="20201115 22:11:16.663"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:16.671" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025307986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025320806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:16.664" endtime="20201115 22:11:16.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:16.672" endtime="20201115 22:11:16.674"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.369" endtime="20201115 22:11:16.674"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.367" endtime="20201115 22:11:16.675"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:16.679" level="INFO">${RESULT} = [{'time': 0.025320806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2820000000000192e-05, 'source_diff': 1.2820000000000192e-05}, {'time': 0.025564486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:16.675" endtime="20201115 22:11:16.679"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:16.694" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:16.680" endtime="20201115 22:11:16.694"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:16.698" level="INFO">NAME: 00-overhead-11-remove</msg>
<status status="PASS" starttime="20201115 22:11:16.697" endtime="20201115 22:11:16.699"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:16.701" level="INFO">VALUE: [1.2820000000000192e-05, 1.2833000000000289e-05, 1.2833000000000289e-05, 1.2777999999998013e-05, 1.2820000000000192e-05, 1.2820000000000192e-05, 1.277699999999854e-05, 1.2833000000000289e-05, 1.2792000000001053e-05, 1.283299999999682e-05, 1.2846999999999859e-05, 1.2833000000000289e-05, 1.2833000000000289e-05, 1.2833000000000289e-05, 1.2833000000000289e-05, 1.2847999999999332e-05, 1.2806000000000622e-05, 1.2833000000000289e-05, 1.2833000000000289e-05, 1.2833000000000289e-05, 1.2846999999999859e-05, 1.2833000000000289e-05, 1.2806000000000622e-05, 1.2819000000000719e-05, 1.2846999999999859e-05, 1.2833000000003758e-05, 1.2846999999996389e-05, 1.2819000000004188e-05, 1.2847000000003328e-05, 1.283299999999682e-05, 1.2833000000003758e-05, 1.283299999999682e-05, 1.2820000000003662e-05, 1.2834000000003232e-05, 1.2847000000003328e-05, 1.2834000000003232e-05, 1.2833999999996293e-05, 1.2833000000003758e-05, 1.2861000000002898e-05, 1.2763999999998443e-05, 1.2847000000003328e-05, 1.2833000000003758e-05, 1.2833000000003758e-05, 1.2834000000003232e-05, 1.283299999999682e-05, 1.2833999999996293e-05, 1.283299999999682e-05, 1.281899999999725e-05, 1.2819000000004188e-05, 1.2861000000002898e-05]</msg>
<status status="PASS" starttime="20201115 22:11:16.700" endtime="20201115 22:11:16.701"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.695" endtime="20201115 22:11:16.702"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:16.704" endtime="20201115 22:11:16.706"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:16.708" endtime="20201115 22:11:16.727"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.706" endtime="20201115 22:11:16.728"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.702" endtime="20201115 22:11:16.728"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.329" endtime="20201115 22:11:16.729"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.327" endtime="20201115 22:11:16.729"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.327" endtime="20201115 22:11:16.729"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:16.731" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:16.740" endtime="20201115 22:11:16.764"></status>
</kw>
<msg timestamp="20201115 22:11:16.765" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:16.738" endtime="20201115 22:11:16.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:16.767" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:16.766" endtime="20201115 22:11:16.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:16.768" endtime="20201115 22:11:16.770"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.736" endtime="20201115 22:11:16.771"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.734" endtime="20201115 22:11:16.771"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:16.777" endtime="20201115 22:11:17.064"></status>
</kw>
<msg timestamp="20201115 22:11:17.067" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024921014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024934167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:16.776" endtime="20201115 22:11:17.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:17.075" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024921014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024934167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:17.068" endtime="20201115 22:11:17.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:17.076" endtime="20201115 22:11:17.078"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.773" endtime="20201115 22:11:17.078"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.772" endtime="20201115 22:11:17.079"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:17.083" level="INFO">${RESULT} = [{'time': 0.024934167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3153000000001858e-05, 'source_diff': 1.3153000000001858e-05}, {'time': 0.025196347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:17.079" endtime="20201115 22:11:17.083"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:17.096" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:17.084" endtime="20201115 22:11:17.097"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:17.101" level="INFO">NAME: 00-overhead-12-remove</msg>
<status status="PASS" starttime="20201115 22:11:17.100" endtime="20201115 22:11:17.101"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:17.103" level="INFO">VALUE: [1.3153000000001858e-05, 1.3139000000002288e-05, 1.3152999999998388e-05, 1.3167000000001428e-05, 1.3124999999999248e-05, 1.3166999999997958e-05, 1.3138999999998818e-05, 1.3055000000001399e-05, 1.3152999999998388e-05, 1.3166000000001954e-05, 1.3125000000002718e-05, 1.3152999999998388e-05, 1.3110999999999678e-05, 1.3124999999999248e-05, 1.3208000000000664e-05, 1.3167000000001428e-05, 1.3139000000002288e-05, 1.3151999999998915e-05, 1.3195000000000567e-05, 1.3138999999998818e-05, 1.3138999999998818e-05, 1.3222000000000234e-05, 1.3137999999999345e-05, 1.3124999999999248e-05, 1.3138999999998818e-05, 1.3181000000000997e-05, 1.3153000000001858e-05, 1.3166000000001954e-05, 1.3124999999995779e-05, 1.3152999999994919e-05, 1.3166000000001954e-05, 1.3153000000001858e-05, 1.3139000000002288e-05, 1.3166999999994489e-05, 1.3125000000002718e-05, 1.3153000000001858e-05, 1.3152000000002384e-05, 1.3138999999995349e-05, 1.305499999999793e-05, 1.3111000000003148e-05, 1.3152999999994919e-05, 1.3152000000002384e-05, 1.3139000000002288e-05, 1.3139000000002288e-05, 1.3153000000001858e-05, 1.3125000000002718e-05, 1.3153000000001858e-05, 1.3139000000002288e-05, 1.3153000000001858e-05, 1.3152999999994919e-05]</msg>
<status status="PASS" starttime="20201115 22:11:17.102" endtime="20201115 22:11:17.104"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.097" endtime="20201115 22:11:17.105"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:17.107" endtime="20201115 22:11:17.108"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:17.111" endtime="20201115 22:11:17.130"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.109" endtime="20201115 22:11:17.130"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.105" endtime="20201115 22:11:17.131"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.732" endtime="20201115 22:11:17.131"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.730" endtime="20201115 22:11:17.131"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.729" endtime="20201115 22:11:17.132"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:17.134" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:17.143" endtime="20201115 22:11:17.167"></status>
</kw>
<msg timestamp="20201115 22:11:17.168" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:17.141" endtime="20201115 22:11:17.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:17.170" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:17.169" endtime="20201115 22:11:17.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:17.171" endtime="20201115 22:11:17.173"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.138" endtime="20201115 22:11:17.173"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.136" endtime="20201115 22:11:17.174"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:17.180" endtime="20201115 22:11:17.467"></status>
</kw>
<msg timestamp="20201115 22:11:17.470" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024963958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024977403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:17.179" endtime="20201115 22:11:17.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:17.478" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024963958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024977403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:17.471" endtime="20201115 22:11:17.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:17.479" endtime="20201115 22:11:17.481"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.176" endtime="20201115 22:11:17.481"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.174" endtime="20201115 22:11:17.482"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:17.486" level="INFO">${RESULT} = [{'time': 0.024977403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3444999999997348e-05, 'source_diff': 1.3444999999997348e-05}, {'time': 0.025259056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:17.482" endtime="20201115 22:11:17.486"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:17.499" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:17.487" endtime="20201115 22:11:17.499"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:17.504" level="INFO">NAME: 00-overhead-13-remove</msg>
<status status="PASS" starttime="20201115 22:11:17.503" endtime="20201115 22:11:17.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:17.507" level="INFO">VALUE: [1.3444999999997348e-05, 1.3444999999997348e-05, 1.3444000000001344e-05, 1.3499999999999623e-05, 1.3459000000000387e-05, 1.3458999999996918e-05, 1.3459000000000387e-05, 1.3472000000000484e-05, 1.3444000000001344e-05, 1.3459000000000387e-05, 1.3374999999999498e-05, 1.3457999999997444e-05, 1.3445000000000817e-05, 1.3472000000000484e-05, 1.3459000000000387e-05, 1.3431000000001247e-05, 1.3472000000000484e-05, 1.3443999999997874e-05, 1.3403000000002108e-05, 1.3486000000000054e-05, 1.3457999999997444e-05, 1.3458000000000914e-05, 1.3458000000000914e-05, 1.3472000000000484e-05, 1.3486000000000054e-05, 1.3499999999999623e-05, 1.3458000000000914e-05, 1.3472000000000484e-05, 1.3458000000000914e-05, 1.3472000000000484e-05, 1.3403000000002108e-05, 1.3458000000000914e-05, 1.3443999999994405e-05, 1.3472000000000484e-05, 1.3444000000001344e-05, 1.3375000000002968e-05, 1.3389000000002538e-05, 1.3472000000000484e-05, 1.3458000000000914e-05, 1.3459000000000387e-05, 1.3458000000000914e-05, 1.3429999999994835e-05, 1.3445000000000817e-05, 1.3389000000002538e-05, 1.3458000000000914e-05, 1.3527999999998763e-05, 1.3458000000000914e-05, 1.3472000000000484e-05, 1.3431000000001247e-05, 1.3486000000000054e-05]</msg>
<status status="PASS" starttime="20201115 22:11:17.505" endtime="20201115 22:11:17.507"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.500" endtime="20201115 22:11:17.508"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:17.510" endtime="20201115 22:11:17.511"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:17.513" endtime="20201115 22:11:17.533"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.512" endtime="20201115 22:11:17.533"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.508" endtime="20201115 22:11:17.534"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.134" endtime="20201115 22:11:17.534"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.133" endtime="20201115 22:11:17.534"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.132" endtime="20201115 22:11:17.534"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:17.537" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:17.545" endtime="20201115 22:11:17.571"></status>
</kw>
<msg timestamp="20201115 22:11:17.572" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:17.544" endtime="20201115 22:11:17.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:17.574" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:17.573" endtime="20201115 22:11:17.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:17.575" endtime="20201115 22:11:17.577"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.541" endtime="20201115 22:11:17.577"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.539" endtime="20201115 22:11:17.578"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:17.584" endtime="20201115 22:11:17.871"></status>
</kw>
<msg timestamp="20201115 22:11:17.874" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024832542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024846292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:17.583" endtime="20201115 22:11:17.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:17.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024832542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024846292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:17.875" endtime="20201115 22:11:17.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:17.884" endtime="20201115 22:11:17.885"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.580" endtime="20201115 22:11:17.886"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.578" endtime="20201115 22:11:17.886"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:17.890" level="INFO">${RESULT} = [{'time': 0.024846292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3749999999999873e-05, 'source_diff': 1.3749999999999873e-05}, {'time': 0.025149264, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:17.887" endtime="20201115 22:11:17.891"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:17.905" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:17.892" endtime="20201115 22:11:17.905"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:17.909" level="INFO">NAME: 00-overhead-14-remove</msg>
<status status="PASS" starttime="20201115 22:11:17.908" endtime="20201115 22:11:17.910"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:17.912" level="INFO">VALUE: [1.3749999999999873e-05, 1.3778000000002483e-05, 1.377699999999954e-05, 1.3777999999999013e-05, 1.3764000000002913e-05, 1.3763999999999443e-05, 1.3763999999999443e-05, 1.3722000000000734e-05, 1.3763999999999443e-05, 1.377699999999954e-05, 1.3778000000002483e-05, 1.3777999999999013e-05, 1.3777999999999013e-05, 1.3777999999999013e-05, 1.3764000000002913e-05, 1.3763999999999443e-05, 1.3722000000000734e-05, 1.377699999999954e-05, 1.377699999999954e-05, 1.380499999999868e-05, 1.379099999999911e-05, 1.3749999999999873e-05, 1.380499999999868e-05, 1.377699999999954e-05, 1.3777999999999013e-05, 1.376299999999997e-05, 1.3763999999999443e-05, 1.3763999999999443e-05, 1.3777999999999013e-05, 1.3763999999999443e-05, 1.3778000000005952e-05, 1.3749999999999873e-05, 1.3791999999998583e-05, 1.3749999999999873e-05, 1.3791999999998583e-05, 1.3749999999999873e-05, 1.3763999999999443e-05, 1.3763999999999443e-05, 1.3777999999999013e-05, 1.3777999999999013e-05, 1.380499999999868e-05, 1.3763999999999443e-05, 1.3694000000001594e-05, 1.3778000000005952e-05, 1.3736000000000304e-05, 1.3763999999999443e-05, 1.3805999999998153e-05, 1.3777999999999013e-05, 1.3777999999999013e-05, 1.3736000000000304e-05]</msg>
<status status="PASS" starttime="20201115 22:11:17.910" endtime="20201115 22:11:17.912"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.906" endtime="20201115 22:11:17.913"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:17.915" endtime="20201115 22:11:17.916"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:17.918" endtime="20201115 22:11:17.938"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.917" endtime="20201115 22:11:17.938"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.913" endtime="20201115 22:11:17.939"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.537" endtime="20201115 22:11:17.939"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.536" endtime="20201115 22:11:17.939"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.535" endtime="20201115 22:11:17.939"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:17.942" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:17.950" endtime="20201115 22:11:17.977"></status>
</kw>
<msg timestamp="20201115 22:11:17.978" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:17.949" endtime="20201115 22:11:17.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:17.980" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:17.979" endtime="20201115 22:11:17.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:17.981" endtime="20201115 22:11:17.983"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.946" endtime="20201115 22:11:17.983"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.944" endtime="20201115 22:11:17.984"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:17.991" endtime="20201115 22:11:18.279"></status>
</kw>
<msg timestamp="20201115 22:11:18.282" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025019903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025033986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:17.989" endtime="20201115 22:11:18.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:18.290" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025019903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025033986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:18.283" endtime="20201115 22:11:18.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:18.291" endtime="20201115 22:11:18.293"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.986" endtime="20201115 22:11:18.294"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.985" endtime="20201115 22:11:18.294"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:18.298" level="INFO">${RESULT} = [{'time': 0.025033986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4083000000001539e-05, 'source_diff': 1.4083000000001539e-05}, {'time': 0.025355542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:18.295" endtime="20201115 22:11:18.298"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:18.313" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:18.299" endtime="20201115 22:11:18.314"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:18.318" level="INFO">NAME: 00-overhead-15-remove</msg>
<status status="PASS" starttime="20201115 22:11:18.317" endtime="20201115 22:11:18.318"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:18.320" level="INFO">VALUE: [1.4083000000001539e-05, 1.4083999999997543e-05, 1.4055999999998403e-05, 1.408299999999807e-05, 1.40689999999985e-05, 1.4083000000001539e-05, 1.4097999999997113e-05, 1.408299999999807e-05, 1.4083999999997543e-05, 1.4084000000001012e-05, 1.408299999999807e-05, 1.4041999999998833e-05, 1.40689999999985e-05, 1.408299999999807e-05, 1.4084000000001012e-05, 1.4125000000000248e-05, 1.4138999999999818e-05, 1.4042000000002303e-05, 1.4013999999999693e-05, 1.4098000000000582e-05, 1.4097000000004578e-05, 1.4083999999997543e-05, 1.4125000000003718e-05, 1.4083999999997543e-05, 1.4069999999997973e-05, 1.4138999999996349e-05, 1.4097000000004578e-05, 1.4125000000003718e-05, 1.4083999999997543e-05, 1.408299999999807e-05, 1.409699999999764e-05, 1.4097999999997113e-05, 1.408299999999807e-05, 1.40689999999985e-05, 1.4110999999997209e-05, 1.408299999999807e-05, 1.408299999999807e-05, 1.405499999999893e-05, 1.4041999999998833e-05, 1.4097000000004578e-05, 1.4041999999998833e-05, 1.408299999999807e-05, 1.4055000000005868e-05, 1.4083999999997543e-05, 1.409699999999764e-05, 1.4013999999999693e-05, 1.4125000000003718e-05, 1.405499999999893e-05, 1.40689999999985e-05, 1.4152999999995919e-05]</msg>
<status status="PASS" starttime="20201115 22:11:18.319" endtime="20201115 22:11:18.321"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.314" endtime="20201115 22:11:18.321"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:18.324" endtime="20201115 22:11:18.325"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:18.327" endtime="20201115 22:11:18.346"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.325" endtime="20201115 22:11:18.347"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.322" endtime="20201115 22:11:18.347"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.942" endtime="20201115 22:11:18.348"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.941" endtime="20201115 22:11:18.348"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.940" endtime="20201115 22:11:18.348"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:18.350" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:18.359" endtime="20201115 22:11:18.386"></status>
</kw>
<msg timestamp="20201115 22:11:18.387" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:18.358" endtime="20201115 22:11:18.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:18.389" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:18.388" endtime="20201115 22:11:18.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:18.391" endtime="20201115 22:11:18.392"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.355" endtime="20201115 22:11:18.393"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.353" endtime="20201115 22:11:18.393"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:18.402" endtime="20201115 22:11:18.689"></status>
</kw>
<msg timestamp="20201115 22:11:18.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025153097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025167514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:18.400" endtime="20201115 22:11:18.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:18.700" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025153097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025167514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:18.693" endtime="20201115 22:11:18.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:18.701" endtime="20201115 22:11:18.703"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.396" endtime="20201115 22:11:18.703"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.394" endtime="20201115 22:11:18.704"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:18.708" level="INFO">${RESULT} = [{'time': 0.025167514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4416999999999208e-05, 'source_diff': 1.4416999999999208e-05}, {'time': 0.025500292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:18.705" endtime="20201115 22:11:18.708"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:18.722" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:18.709" endtime="20201115 22:11:18.722"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:18.726" level="INFO">NAME: 00-overhead-16-remove</msg>
<status status="PASS" starttime="20201115 22:11:18.725" endtime="20201115 22:11:18.727"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:18.729" level="INFO">VALUE: [1.4416999999999208e-05, 1.4375000000000498e-05, 1.4389000000000068e-05, 1.4389000000000068e-05, 1.4402999999999638e-05, 1.4388000000000595e-05, 1.4389000000000068e-05, 1.4389000000000068e-05, 1.4458000000001914e-05, 1.4388000000000595e-05, 1.4333999999997793e-05, 1.4375000000000498e-05, 1.4389000000000068e-05, 1.4375000000000498e-05, 1.4375000000000498e-05, 1.4361000000000929e-05, 1.4389000000000068e-05, 1.4375000000000498e-05, 1.4444999999998348e-05, 1.4389000000003538e-05, 1.4444000000002344e-05, 1.4361000000004398e-05, 1.4389000000003538e-05, 1.4403000000003108e-05, 1.4430000000002774e-05, 1.4388999999996599e-05, 1.4388999999996599e-05, 1.4402000000003634e-05, 1.4388999999996599e-05, 1.4416000000003204e-05, 1.4417000000002678e-05, 1.4402000000003634e-05, 1.4389000000003538e-05, 1.4389000000003538e-05, 1.4388999999996599e-05, 1.4375000000003968e-05, 1.4389000000003538e-05, 1.4375000000003968e-05, 1.4388999999996599e-05, 1.4334000000004732e-05, 1.4401999999996695e-05, 1.4388999999996599e-05, 1.4402999999996169e-05, 1.4388999999996599e-05, 1.4403000000003108e-05, 1.4387999999997125e-05, 1.4416999999995739e-05, 1.4334000000004732e-05, 1.4388999999996599e-05, 1.4402999999996169e-05]</msg>
<status status="PASS" starttime="20201115 22:11:18.727" endtime="20201115 22:11:18.729"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.723" endtime="20201115 22:11:18.730"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:18.732" endtime="20201115 22:11:18.733"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:18.735" endtime="20201115 22:11:18.755"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.734" endtime="20201115 22:11:18.755"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.730" endtime="20201115 22:11:18.756"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.351" endtime="20201115 22:11:18.756"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.349" endtime="20201115 22:11:18.756"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.348" endtime="20201115 22:11:18.756"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:18.759" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:18.767" endtime="20201115 22:11:18.796"></status>
</kw>
<msg timestamp="20201115 22:11:18.797" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:18.766" endtime="20201115 22:11:18.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:18.803" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:18.802" endtime="20201115 22:11:18.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:18.804" endtime="20201115 22:11:18.806"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.763" endtime="20201115 22:11:18.807"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.761" endtime="20201115 22:11:18.807"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:18.814" endtime="20201115 22:11:19.099"></status>
</kw>
<msg timestamp="20201115 22:11:19.102" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024904333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024919111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:18.812" endtime="20201115 22:11:19.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:19.110" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024904333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024919111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:19.104" endtime="20201115 22:11:19.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:19.112" endtime="20201115 22:11:19.113"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.810" endtime="20201115 22:11:19.114"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.808" endtime="20201115 22:11:19.114"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:19.118" level="INFO">${RESULT} = [{'time': 0.024919111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4778000000000013e-05, 'source_diff': 1.4778000000000013e-05}, {'time': 0.025272903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:19.115" endtime="20201115 22:11:19.118"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:19.132" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:19.119" endtime="20201115 22:11:19.132"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:19.136" level="INFO">NAME: 00-overhead-17-remove</msg>
<status status="PASS" starttime="20201115 22:11:19.135" endtime="20201115 22:11:19.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:19.139" level="INFO">VALUE: [1.4778000000000013e-05, 1.4708999999998168e-05, 1.4707999999998694e-05, 1.4723000000001207e-05, 1.4695000000002068e-05, 1.4707999999998694e-05, 1.4709000000001637e-05, 1.4707999999998694e-05, 1.4708000000002164e-05, 1.4749999999997404e-05, 1.4722000000001734e-05, 1.4750000000000874e-05, 1.4764000000000443e-05, 1.4721999999998264e-05, 1.4709000000001637e-05, 1.4709000000001637e-05, 1.4708000000002164e-05, 1.4778000000000013e-05, 1.4708000000002164e-05, 1.4750000000000874e-05, 1.477700000000054e-05, 1.4693999999995655e-05, 1.4722000000001734e-05, 1.4652000000003884e-05, 1.4722000000001734e-05, 1.4708999999994699e-05, 1.4707999999995225e-05, 1.4722000000001734e-05, 1.4708999999994699e-05, 1.4708000000002164e-05, 1.4750000000000874e-05, 1.4722000000001734e-05, 1.4709000000001637e-05, 1.4707999999995225e-05, 1.4707999999995225e-05, 1.4708000000002164e-05, 1.4652999999996419e-05, 1.4708000000002164e-05, 1.4681000000002498e-05, 1.4679999999996085e-05, 1.4750000000000874e-05, 1.4708000000002164e-05, 1.4735999999994365e-05, 1.4708000000002164e-05, 1.4749999999993935e-05, 1.4694000000002594e-05, 1.4749999999993935e-05, 1.4764000000000443e-05, 1.4708000000002164e-05, 1.4707999999995225e-05]</msg>
<status status="PASS" starttime="20201115 22:11:19.138" endtime="20201115 22:11:19.139"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.133" endtime="20201115 22:11:19.140"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:19.142" endtime="20201115 22:11:19.143"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:19.145" endtime="20201115 22:11:19.165"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.144" endtime="20201115 22:11:19.165"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.140" endtime="20201115 22:11:19.166"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.759" endtime="20201115 22:11:19.166"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.757" endtime="20201115 22:11:19.166"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.757" endtime="20201115 22:11:19.167"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:19.169" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:19.178" endtime="20201115 22:11:19.208"></status>
</kw>
<msg timestamp="20201115 22:11:19.209" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:19.177" endtime="20201115 22:11:19.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:19.211" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:19.210" endtime="20201115 22:11:19.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:19.212" endtime="20201115 22:11:19.214"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.174" endtime="20201115 22:11:19.215"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.172" endtime="20201115 22:11:19.215"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:19.222" endtime="20201115 22:11:19.509"></status>
</kw>
<msg timestamp="20201115 22:11:19.512" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025440042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025455083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:19.220" endtime="20201115 22:11:19.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:19.520" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025440042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025455083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:19.513" endtime="20201115 22:11:19.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:19.521" endtime="20201115 22:11:19.523"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.218" endtime="20201115 22:11:19.524"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.216" endtime="20201115 22:11:19.524"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:19.528" level="INFO">${RESULT} = [{'time': 0.025455083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.504100000000036e-05, 'source_diff': 1.504100000000036e-05}, {'time': 0.025827667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:19.525" endtime="20201115 22:11:19.529"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:19.542" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:19.529" endtime="20201115 22:11:19.542"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:19.547" level="INFO">NAME: 00-overhead-18-remove</msg>
<status status="PASS" starttime="20201115 22:11:19.546" endtime="20201115 22:11:19.547"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:19.549" level="INFO">VALUE: [1.504100000000036e-05, 1.5041999999999833e-05, 1.5028000000000263e-05, 1.5014000000000693e-05, 1.5014000000000693e-05, 1.5014000000000693e-05, 1.501299999999775e-05, 1.5014000000000693e-05, 1.5028000000000263e-05, 1.5041999999999833e-05, 1.5028000000000263e-05, 1.5028000000000263e-05, 1.502700000000079e-05, 1.5013999999997224e-05, 1.5014000000000693e-05, 1.5013999999997224e-05, 1.5028000000000263e-05, 1.5014000000000693e-05, 1.4986000000001554e-05, 1.502699999999385e-05, 1.50689999999995e-05, 1.5014000000000693e-05, 1.5028000000000263e-05, 1.5000000000001124e-05, 1.508299999999907e-05, 1.5028000000000263e-05, 1.5013999999993755e-05, 1.502700000000079e-05, 1.5014000000000693e-05, 1.502700000000079e-05, 1.502700000000079e-05, 1.5084000000005482e-05, 1.5014000000000693e-05, 1.501300000000122e-05, 1.5000000000001124e-05, 1.50689999999995e-05, 1.5069000000006438e-05, 1.4986000000001554e-05, 1.5028000000000263e-05, 1.5028000000000263e-05, 1.5014000000000693e-05, 1.4973000000001457e-05, 1.508299999999907e-05, 1.5028000000000263e-05, 1.5028000000000263e-05, 1.5028000000000263e-05, 1.4986000000001554e-05, 1.5014000000000693e-05, 1.5000000000001124e-05, 1.50689999999995e-05]</msg>
<status status="PASS" starttime="20201115 22:11:19.548" endtime="20201115 22:11:19.550"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.543" endtime="20201115 22:11:19.550"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:19.552" endtime="20201115 22:11:19.554"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:19.556" endtime="20201115 22:11:19.576"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.555" endtime="20201115 22:11:19.576"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.551" endtime="20201115 22:11:19.577"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.170" endtime="20201115 22:11:19.577"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.168" endtime="20201115 22:11:19.577"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.167" endtime="20201115 22:11:19.577"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:19.580" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:19.588" endtime="20201115 22:11:19.619"></status>
</kw>
<msg timestamp="20201115 22:11:19.619" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:19.587" endtime="20201115 22:11:19.620"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:19.622" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:19.620" endtime="20201115 22:11:19.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:19.623" endtime="20201115 22:11:19.624"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.584" endtime="20201115 22:11:19.625"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.582" endtime="20201115 22:11:19.625"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:19.632" endtime="20201115 22:11:19.918"></status>
</kw>
<msg timestamp="20201115 22:11:19.921" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024848208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024863556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:19.630" endtime="20201115 22:11:19.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:19.929" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024848208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024863556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:19.922" endtime="20201115 22:11:19.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:19.930" endtime="20201115 22:11:19.932"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.628" endtime="20201115 22:11:19.933"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.626" endtime="20201115 22:11:19.933"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:19.937" level="INFO">${RESULT} = [{'time': 0.024863556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5347999999998363e-05, 'source_diff': 1.5347999999998363e-05}, {'time': 0.025257639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:19.934" endtime="20201115 22:11:19.937"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:19.952" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:19.938" endtime="20201115 22:11:19.953"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:19.957" level="INFO">NAME: 00-overhead-19-remove</msg>
<status status="PASS" starttime="20201115 22:11:19.956" endtime="20201115 22:11:19.957"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:19.959" level="INFO">VALUE: [1.5347999999998363e-05, 1.533299999999932e-05, 1.531899999999975e-05, 1.534699999999889e-05, 1.531899999999975e-05, 1.5333999999998793e-05, 1.5278000000000513e-05, 1.533299999999932e-05, 1.5278000000000513e-05, 1.533299999999932e-05, 1.534699999999889e-05, 1.5264000000000943e-05, 1.533299999999932e-05, 1.531899999999975e-05, 1.5334000000002262e-05, 1.534700000000236e-05, 1.5333999999998793e-05, 1.5347999999998363e-05, 1.534699999999889e-05, 1.5333000000006258e-05, 1.5361000000005398e-05, 1.533299999999932e-05, 1.531899999999975e-05, 1.5347000000005828e-05, 1.5333999999998793e-05, 1.530500000000018e-05, 1.5389000000004538e-05, 1.5278000000000513e-05, 1.536099999999846e-05, 1.5362000000004872e-05, 1.5348000000005302e-05, 1.537499999999803e-05, 1.5333999999998793e-05, 1.534699999999889e-05, 1.5319999999999223e-05, 1.533299999999932e-05, 1.5334000000005732e-05, 1.531899999999975e-05, 1.536099999999846e-05, 1.5333999999998793e-05, 1.531899999999975e-05, 1.531899999999975e-05, 1.533299999999932e-05, 1.5334000000005732e-05, 1.533299999999932e-05, 1.537499999999803e-05, 1.5333999999998793e-05, 1.541699999999674e-05, 1.537499999999803e-05, 1.533299999999932e-05]</msg>
<status status="PASS" starttime="20201115 22:11:19.958" endtime="20201115 22:11:19.960"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.953" endtime="20201115 22:11:19.961"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:19.963" endtime="20201115 22:11:19.964"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:19.966" endtime="20201115 22:11:19.986"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.965" endtime="20201115 22:11:19.986"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.961" endtime="20201115 22:11:19.987"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.580" endtime="20201115 22:11:19.987"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.578" endtime="20201115 22:11:19.987"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.578" endtime="20201115 22:11:19.987"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:19.990" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:19.998" endtime="20201115 22:11:20.030"></status>
</kw>
<msg timestamp="20201115 22:11:20.031" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:19.997" endtime="20201115 22:11:20.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:20.033" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:20.032" endtime="20201115 22:11:20.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:20.034" endtime="20201115 22:11:20.036"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.994" endtime="20201115 22:11:20.036"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.992" endtime="20201115 22:11:20.037"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:20.043" endtime="20201115 22:11:20.330"></status>
</kw>
<msg timestamp="20201115 22:11:20.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024974792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024990444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:20.041" endtime="20201115 22:11:20.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:20.341" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024974792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024990444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:20.334" endtime="20201115 22:11:20.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:20.342" endtime="20201115 22:11:20.344"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.039" endtime="20201115 22:11:20.345"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.037" endtime="20201115 22:11:20.345"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:20.349" level="INFO">${RESULT} = [{'time': 0.024990444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5652000000001415e-05, 'source_diff': 1.5652000000001415e-05}, {'time': 0.025407042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:20.346" endtime="20201115 22:11:20.349"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:20.363" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:20.350" endtime="20201115 22:11:20.363"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:20.367" level="INFO">NAME: 00-overhead-20-remove</msg>
<status status="PASS" starttime="20201115 22:11:20.366" endtime="20201115 22:11:20.368"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:20.370" level="INFO">VALUE: [1.5652000000001415e-05, 1.563900000000132e-05, 1.5694000000000125e-05, 1.5680000000000555e-05, 1.5555999999999903e-05, 1.562499999999828e-05, 1.561099999999871e-05, 1.563899999999785e-05, 1.566700000000046e-05, 1.5638000000001845e-05, 1.563900000000132e-05, 1.5652000000001415e-05, 1.563900000000132e-05, 1.5709000000002638e-05, 1.563900000000132e-05, 1.5652000000001415e-05, 1.559699999999914e-05, 1.566699999999699e-05, 1.562499999999828e-05, 1.5639000000004788e-05, 1.565299999999742e-05, 1.566699999999699e-05, 1.563899999999785e-05, 1.5653000000004358e-05, 1.562499999999828e-05, 1.5651999999997945e-05, 1.562499999999828e-05, 1.563899999999785e-05, 1.5709000000002638e-05, 1.5653000000004358e-05, 1.5651999999997945e-05, 1.5665999999997515e-05, 1.5694000000003594e-05, 1.5667000000003928e-05, 1.565299999999742e-05, 1.5665999999997515e-05, 1.5667000000003928e-05, 1.5583999999999043e-05, 1.5665999999997515e-05, 1.566699999999699e-05, 1.5637999999998375e-05, 1.5639000000004788e-05, 1.566699999999699e-05, 1.562499999999828e-05, 1.5639000000004788e-05, 1.5693999999996655e-05, 1.5625000000005218e-05, 1.5639000000004788e-05, 1.565299999999742e-05, 1.566699999999699e-05]</msg>
<status status="PASS" starttime="20201115 22:11:20.368" endtime="20201115 22:11:20.371"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.364" endtime="20201115 22:11:20.371"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:20.374" endtime="20201115 22:11:20.375"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:20.377" endtime="20201115 22:11:20.396"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.375" endtime="20201115 22:11:20.397"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.372" endtime="20201115 22:11:20.397"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.990" endtime="20201115 22:11:20.398"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.988" endtime="20201115 22:11:20.398"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.988" endtime="20201115 22:11:20.398"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:20.400" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:20.409" endtime="20201115 22:11:20.441"></status>
</kw>
<msg timestamp="20201115 22:11:20.441" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:20.408" endtime="20201115 22:11:20.442"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:20.444" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:20.442" endtime="20201115 22:11:20.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:20.445" endtime="20201115 22:11:20.446"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.405" endtime="20201115 22:11:20.447"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.403" endtime="20201115 22:11:20.447"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:20.454" endtime="20201115 22:11:20.741"></status>
</kw>
<msg timestamp="20201115 22:11:20.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025186639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025202597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:20.452" endtime="20201115 22:11:20.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:20.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025186639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025202597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:20.745" endtime="20201115 22:11:20.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:20.753" endtime="20201115 22:11:20.755"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.450" endtime="20201115 22:11:20.755"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.448" endtime="20201115 22:11:20.756"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:20.760" level="INFO">${RESULT} = [{'time': 0.025202597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5957999999999944e-05, 'source_diff': 1.5957999999999944e-05}, {'time': 0.025643, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:11:20.756" endtime="20201115 22:11:20.760"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:20.774" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:20.761" endtime="20201115 22:11:20.774"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:20.778" level="INFO">NAME: 00-overhead-21-remove</msg>
<status status="PASS" starttime="20201115 22:11:20.777" endtime="20201115 22:11:20.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:20.781" level="INFO">VALUE: [1.5957999999999944e-05, 1.590299999999767e-05, 1.5958999999999418e-05, 1.5944000000000375e-05, 1.5931000000000278e-05, 1.5944000000000375e-05, 1.5958999999999418e-05, 1.588900000000157e-05, 1.5957999999999944e-05, 1.5972999999998988e-05, 1.602700000000179e-05, 1.5971999999999514e-05, 1.5958999999999418e-05, 1.5957999999999944e-05, 1.595899999999595e-05, 1.5959000000002888e-05, 1.6014000000001694e-05, 1.5957999999996475e-05, 1.5958000000003414e-05, 1.5943999999996905e-05, 1.5959000000002888e-05, 1.5972000000002984e-05, 1.5958000000003414e-05, 1.5971999999996045e-05, 1.5943999999996905e-05, 1.594499999999638e-05, 1.6014000000001694e-05, 1.5916000000004704e-05, 1.595899999999595e-05, 1.6013999999994755e-05, 1.5985999999995615e-05, 1.594499999999638e-05, 1.5929999999997335e-05, 1.5957999999996475e-05, 1.5972000000002984e-05, 1.5972000000002984e-05, 1.5957999999996475e-05, 1.5971999999996045e-05, 1.5959000000002888e-05, 1.5958000000003414e-05, 1.5958000000003414e-05, 1.5943999999996905e-05, 1.5959000000002888e-05, 1.5972000000002984e-05, 1.595899999999595e-05, 1.5959000000002888e-05, 1.5944000000003844e-05, 1.5957999999996475e-05, 1.5957999999996475e-05, 1.5958000000003414e-05]</msg>
<status status="PASS" starttime="20201115 22:11:20.780" endtime="20201115 22:11:20.781"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.775" endtime="20201115 22:11:20.782"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:20.784" endtime="20201115 22:11:20.785"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:20.788" endtime="20201115 22:11:20.807"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.786" endtime="20201115 22:11:20.808"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.782" endtime="20201115 22:11:20.808"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.401" endtime="20201115 22:11:20.808"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.399" endtime="20201115 22:11:20.809"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.398" endtime="20201115 22:11:20.809"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:20.811" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:20.820" endtime="20201115 22:11:20.853"></status>
</kw>
<msg timestamp="20201115 22:11:20.854" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:20.818" endtime="20201115 22:11:20.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:20.856" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:20.855" endtime="20201115 22:11:20.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:20.857" endtime="20201115 22:11:20.859"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.816" endtime="20201115 22:11:20.859"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.813" endtime="20201115 22:11:20.860"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:20.866" endtime="20201115 22:11:21.152"></status>
</kw>
<msg timestamp="20201115 22:11:21.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025165056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025181306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:20.865" endtime="20201115 22:11:21.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:21.163" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025165056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025181306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:21.156" endtime="20201115 22:11:21.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:21.165" endtime="20201115 22:11:21.167"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.862" endtime="20201115 22:11:21.167"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.860" endtime="20201115 22:11:21.168"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:21.172" level="INFO">${RESULT} = [{'time': 0.025181306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6249999999998904e-05, 'source_diff': 1.6249999999998904e-05}, {'time': 0.025640861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:21.168" endtime="20201115 22:11:21.172"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:21.186" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:21.173" endtime="20201115 22:11:21.186"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:21.190" level="INFO">NAME: 00-overhead-22-remove</msg>
<status status="PASS" starttime="20201115 22:11:21.189" endtime="20201115 22:11:21.190"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:21.193" level="INFO">VALUE: [1.6249999999998904e-05, 1.6278000000001513e-05, 1.6291999999997614e-05, 1.6277999999998044e-05, 1.6264000000001944e-05, 1.6277999999998044e-05, 1.630500000000118e-05, 1.6250000000002374e-05, 1.6264000000001944e-05, 1.6264000000001944e-05, 1.6306000000000653e-05, 1.6277999999998044e-05, 1.6277999999998044e-05, 1.626300000000247e-05, 1.630500000000118e-05, 1.6264000000001944e-05, 1.6263999999995005e-05, 1.629100000000161e-05, 1.627700000000204e-05, 1.6278000000001513e-05, 1.627700000000204e-05, 1.6278000000001513e-05, 1.6292000000001083e-05, 1.6277999999994575e-05, 1.6264000000001944e-05, 1.6277999999994575e-05, 1.6277999999994575e-05, 1.6264000000001944e-05, 1.6236000000002804e-05, 1.62769999999951e-05, 1.6250000000002374e-05, 1.6292000000001083e-05, 1.626300000000247e-05, 1.633300000000032e-05, 1.6250000000002374e-05, 1.6291999999994144e-05, 1.6264000000001944e-05, 1.6236000000002804e-05, 1.6263999999995005e-05, 1.6223000000002707e-05, 1.6292000000001083e-05, 1.6278000000001513e-05, 1.6264000000001944e-05, 1.6264000000001944e-05, 1.626300000000247e-05, 1.6305999999993714e-05, 1.6278000000001513e-05, 1.6208000000003664e-05, 1.627700000000204e-05, 1.6277999999994575e-05]</msg>
<status status="PASS" starttime="20201115 22:11:21.191" endtime="20201115 22:11:21.193"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.186" endtime="20201115 22:11:21.193"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:21.196" endtime="20201115 22:11:21.197"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:21.199" endtime="20201115 22:11:21.218"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.197" endtime="20201115 22:11:21.219"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.194" endtime="20201115 22:11:21.220"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.811" endtime="20201115 22:11:21.220"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.810" endtime="20201115 22:11:21.220"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.809" endtime="20201115 22:11:21.220"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:21.222" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:21.231" endtime="20201115 22:11:21.266"></status>
</kw>
<msg timestamp="20201115 22:11:21.267" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:21.230" endtime="20201115 22:11:21.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:21.269" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:21.268" endtime="20201115 22:11:21.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:21.270" endtime="20201115 22:11:21.272"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.227" endtime="20201115 22:11:21.273"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.225" endtime="20201115 22:11:21.273"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:21.280" endtime="20201115 22:11:21.567"></status>
</kw>
<msg timestamp="20201115 22:11:21.570" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0251515, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025168028, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:11:21.278" endtime="20201115 22:11:21.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:21.578" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0251515, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025168028, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:11:21.571" endtime="20201115 22:11:21.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:21.579" endtime="20201115 22:11:21.581"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.275" endtime="20201115 22:11:21.582"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.274" endtime="20201115 22:11:21.582"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:21.586" level="INFO">${RESULT} = [{'time': 0.025168028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6527999999998294e-05, 'source_diff': 1.6527999999998294e-05}, {'time': 0.025651694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:21.583" endtime="20201115 22:11:21.586"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:21.601" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:21.587" endtime="20201115 22:11:21.602"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:21.606" level="INFO">NAME: 00-overhead-23-remove</msg>
<status status="PASS" starttime="20201115 22:11:21.605" endtime="20201115 22:11:21.606"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:21.608" level="INFO">VALUE: [1.6527999999998294e-05, 1.659700000000014e-05, 1.6584000000000043e-05, 1.6584000000000043e-05, 1.6611999999999183e-05, 1.658300000000057e-05, 1.6584000000000043e-05, 1.6584000000000043e-05, 1.659700000000014e-05, 1.65829999999971e-05, 1.659700000000014e-05, 1.659700000000014e-05, 1.658300000000057e-05, 1.658300000000057e-05, 1.6584000000000043e-05, 1.661099999999971e-05, 1.659700000000014e-05, 1.6569000000001e-05, 1.6584000000000043e-05, 1.6597999999999613e-05, 1.6541999999994395e-05, 1.6584000000000043e-05, 1.659700000000014e-05, 1.659700000000014e-05, 1.659700000000014e-05, 1.658300000000057e-05, 1.655500000000143e-05, 1.658300000000057e-05, 1.6514000000002194e-05, 1.659700000000014e-05, 1.6500000000002624e-05, 1.6569000000001e-05, 1.662499999999928e-05, 1.6570000000000473e-05, 1.6584000000000043e-05, 1.6597999999999613e-05, 1.658300000000057e-05, 1.6570000000000473e-05, 1.6584000000000043e-05, 1.6499999999995685e-05, 1.6570000000000473e-05, 1.6584000000000043e-05, 1.659700000000014e-05, 1.6570000000000473e-05, 1.658300000000057e-05, 1.6570000000000473e-05, 1.6597999999999613e-05, 1.6584000000000043e-05, 1.6597999999999613e-05, 1.658300000000057e-05]</msg>
<status status="PASS" starttime="20201115 22:11:21.607" endtime="20201115 22:11:21.609"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.602" endtime="20201115 22:11:21.609"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:21.611" endtime="20201115 22:11:21.613"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:21.615" endtime="20201115 22:11:21.634"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.613" endtime="20201115 22:11:21.635"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.610" endtime="20201115 22:11:21.635"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.223" endtime="20201115 22:11:21.636"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.221" endtime="20201115 22:11:21.636"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.221" endtime="20201115 22:11:21.636"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:21.638" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:21.647" endtime="20201115 22:11:21.683"></status>
</kw>
<msg timestamp="20201115 22:11:21.684" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:21.645" endtime="20201115 22:11:21.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:21.687" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:21.685" endtime="20201115 22:11:21.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:21.688" endtime="20201115 22:11:21.689"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.643" endtime="20201115 22:11:21.690"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.641" endtime="20201115 22:11:21.690"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:21.697" endtime="20201115 22:11:21.984"></status>
</kw>
<msg timestamp="20201115 22:11:21.987" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025455153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025472056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:21.695" endtime="20201115 22:11:21.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:21.995" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025455153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025472056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:21.988" endtime="20201115 22:11:21.995"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:21.996" endtime="20201115 22:11:21.998"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.693" endtime="20201115 22:11:21.998"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.691" endtime="20201115 22:11:21.999"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:22.003" level="INFO">${RESULT} = [{'time': 0.025472056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.690299999999867e-05, 'source_diff': 1.690299999999867e-05}, {'time': 0.025977639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:22.000" endtime="20201115 22:11:22.003"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:22.017" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:22.004" endtime="20201115 22:11:22.017"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:22.021" level="INFO">NAME: 00-overhead-24-remove</msg>
<status status="PASS" starttime="20201115 22:11:22.020" endtime="20201115 22:11:22.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:22.024" level="INFO">VALUE: [1.690299999999867e-05, 1.690299999999867e-05, 1.68889999999991e-05, 1.6901999999999195e-05, 1.6916000000002235e-05, 1.688900000000257e-05, 1.691700000000171e-05, 1.68889999999991e-05, 1.6958000000000945e-05, 1.690299999999867e-05, 1.68889999999991e-05, 1.687499999999953e-05, 1.687499999999953e-05, 1.68889999999991e-05, 1.68889999999991e-05, 1.6901999999999195e-05, 1.68889999999991e-05, 1.690299999999867e-05, 1.68889999999991e-05, 1.690299999999867e-05, 1.68889999999991e-05, 1.6901999999999195e-05, 1.6915999999998765e-05, 1.6889000000006038e-05, 1.695899999999695e-05, 1.690299999999867e-05, 1.687499999999953e-05, 1.68889999999991e-05, 1.6834000000000293e-05, 1.6901999999999195e-05, 1.690299999999867e-05, 1.687499999999953e-05, 1.68889999999991e-05, 1.68889999999991e-05, 1.686099999999996e-05, 1.690299999999867e-05, 1.6887999999999626e-05, 1.68889999999991e-05, 1.68889999999991e-05, 1.690299999999867e-05, 1.690299999999867e-05, 1.683300000000082e-05, 1.690299999999867e-05, 1.690299999999867e-05, 1.6943999999997905e-05, 1.693099999999781e-05, 1.68889999999991e-05, 1.6903000000005608e-05, 1.6903000000005608e-05, 1.690299999999867e-05]</msg>
<status status="PASS" starttime="20201115 22:11:22.022" endtime="20201115 22:11:22.024"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.018" endtime="20201115 22:11:22.025"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:22.027" endtime="20201115 22:11:22.028"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:22.030" endtime="20201115 22:11:22.050"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.029" endtime="20201115 22:11:22.050"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.025" endtime="20201115 22:11:22.051"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.639" endtime="20201115 22:11:22.051"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.637" endtime="20201115 22:11:22.051"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.636" endtime="20201115 22:11:22.051"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:22.054" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:22.063" endtime="20201115 22:11:22.099"></status>
</kw>
<msg timestamp="20201115 22:11:22.100" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:22.061" endtime="20201115 22:11:22.100"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:22.102" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:22.101" endtime="20201115 22:11:22.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:22.103" endtime="20201115 22:11:22.105"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.059" endtime="20201115 22:11:22.105"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.056" endtime="20201115 22:11:22.106"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:22.112" endtime="20201115 22:11:22.400"></status>
</kw>
<msg timestamp="20201115 22:11:22.403" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025566083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02558325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:11:22.111" endtime="20201115 22:11:22.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:22.411" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025566083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02558325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:11:22.404" endtime="20201115 22:11:22.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:22.412" endtime="20201115 22:11:22.414"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.108" endtime="20201115 22:11:22.415"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.106" endtime="20201115 22:11:22.415"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:22.419" level="INFO">${RESULT} = [{'time': 0.02558325, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.716699999999849e-05, 'source_diff': 1.716699999999849e-05}, {'time': 0.026111056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:11:22.416" endtime="20201115 22:11:22.419"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:22.433" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:11:22.420" endtime="20201115 22:11:22.433"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:22.437" level="INFO">NAME: 00-overhead-25-remove</msg>
<status status="PASS" starttime="20201115 22:11:22.436" endtime="20201115 22:11:22.438"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:22.440" level="INFO">VALUE: [1.716699999999849e-05, 1.7209000000000668e-05, 1.7209000000000668e-05, 1.719499999999763e-05, 1.7193999999998155e-05, 1.7208000000001195e-05, 1.7179999999998585e-05, 1.7193999999998155e-05, 1.7137999999999876e-05, 1.7208000000001195e-05, 1.7195000000001098e-05, 1.7207999999997725e-05, 1.7235999999996865e-05, 1.7193999999998155e-05, 1.7179999999998585e-05, 1.7194000000005094e-05, 1.7249999999996435e-05, 1.7207999999997725e-05, 1.716699999999849e-05, 1.7181000000004998e-05, 1.7209000000004138e-05, 1.7208000000004664e-05, 1.7193999999998155e-05, 1.7209000000004138e-05, 1.7208000000004664e-05, 1.7207999999997725e-05, 1.72089999999972e-05, 1.7207999999997725e-05, 1.7278000000002514e-05, 1.7193999999998155e-05, 1.7209000000004138e-05, 1.7193999999998155e-05, 1.7249999999996435e-05, 1.715299999999892e-05, 1.7193999999998155e-05, 1.7250000000003374e-05, 1.7166000000005954e-05, 1.7235999999996865e-05, 1.7208000000004664e-05, 1.7151999999999445e-05, 1.718099999999806e-05, 1.712499999999978e-05, 1.7193999999998155e-05, 1.715299999999892e-05, 1.7207999999997725e-05, 1.7221999999997295e-05, 1.72089999999972e-05, 1.7221999999997295e-05, 1.7221999999997295e-05, 1.7207999999997725e-05]</msg>
<status status="PASS" starttime="20201115 22:11:22.439" endtime="20201115 22:11:22.440"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.434" endtime="20201115 22:11:22.441"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:22.443" endtime="20201115 22:11:22.445"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:22.447" endtime="20201115 22:11:22.466"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.445" endtime="20201115 22:11:22.467"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.441" endtime="20201115 22:11:22.467"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.054" endtime="20201115 22:11:22.468"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.053" endtime="20201115 22:11:22.468"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.052" endtime="20201115 22:11:22.468"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.349" endtime="20201115 22:11:22.468"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="teardown">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:22.473" endtime="20201115 22:11:22.492"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.471" endtime="20201115 22:11:22.493"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.470" endtime="20201115 22:11:22.493"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:11:12.279" endtime="20201115 22:11:22.494" critical="yes"></status>
</test>
<status status="PASS" starttime="20201115 22:10:59.418" endtime="20201115 22:11:22.499"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_ztimer_benchmarks</item>
<item name="RIOT-Board">nucleo-f091rc</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="PASS" starttime="20201115 22:10:57.395" endtime="20201115 22:11:22.516"></status>
</suite>
<statistics>
<total>
<stat pass="5" fail="0">Critical Tests</stat>
<stat pass="5" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="5" fail="0">APP_tests_ztimer_benchmarks</stat>
<stat pass="5" fail="0">BOARD_nucleo-f091rc</stat>
<stat pass="5" fail="0">dev</stat>
</tag>
<suite>
<stat pass="5" fail="0" id="s1" name="tests_ztimer_benchmarks">tests_ztimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_ztimer_benchmarks.Timer Version</stat>
<stat pass="4" fail="0" id="s1-s2" name="Timer Overhead">tests_ztimer_benchmarks.Timer Overhead</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
