<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201115 22:10:58.315" rpa="false">
<suite id="s1" name="tests_ztimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201115 22:10:58.888" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201115 22:10:58.897" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201115 22:11:00.006" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201115 22:10:58.887" endtime="20201115 22:11:00.007"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201115 22:11:00.009" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201115 22:11:00.008" endtime="20201115 22:11:00.010"></status>
</kw>
<status status="PASS" starttime="20201115 22:10:58.886" endtime="20201115 22:11:00.010"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:00.013" endtime="20201115 22:11:00.197"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:00.011" endtime="20201115 22:11:00.197"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:00.211" endtime="20201115 22:11:00.226"></status>
</kw>
<msg timestamp="20201115 22:11:00.226" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:00.209" endtime="20201115 22:11:00.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:00.229" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:00.227" endtime="20201115 22:11:00.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:11:00.232" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:11:00.230" endtime="20201115 22:11:00.232"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:00.207" endtime="20201115 22:11:00.233"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:00.205" endtime="20201115 22:11:00.234"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:00.203" endtime="20201115 22:11:00.234"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:11:00.238" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:11:00.237" endtime="20201115 22:11:00.238"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:00.235" endtime="20201115 22:11:00.239"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:00.202" endtime="20201115 22:11:00.239"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:00.201" endtime="20201115 22:11:00.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:00.240" endtime="20201115 22:11:00.241"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:00.200" endtime="20201115 22:11:00.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:00.242" endtime="20201115 22:11:00.244"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:00.198" endtime="20201115 22:11:00.244"></status>
</kw>
<status status="PASS" starttime="20201115 22:10:58.884" endtime="20201115 22:11:00.245"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:00.251" endtime="20201115 22:11:00.270"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:00.249" endtime="20201115 22:11:00.271"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:00.286" endtime="20201115 22:11:00.299"></status>
</kw>
<msg timestamp="20201115 22:11:00.300" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:00.283" endtime="20201115 22:11:00.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:00.302" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:00.301" endtime="20201115 22:11:00.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:11:00.305" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:11:00.303" endtime="20201115 22:11:00.306"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:00.281" endtime="20201115 22:11:00.306"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:00.278" endtime="20201115 22:11:00.307"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:00.276" endtime="20201115 22:11:00.307"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:11:00.311" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:11:00.310" endtime="20201115 22:11:00.311"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:00.308" endtime="20201115 22:11:00.312"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:00.275" endtime="20201115 22:11:00.312"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:00.275" endtime="20201115 22:11:00.312"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:00.313" endtime="20201115 22:11:00.314"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:00.273" endtime="20201115 22:11:00.315"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:00.272" endtime="20201115 22:11:00.315"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:00.248" endtime="20201115 22:11:00.315"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:00.323" endtime="20201115 22:11:00.333"></status>
</kw>
<msg timestamp="20201115 22:11:00.333" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:00.321" endtime="20201115 22:11:00.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:00.336" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:00.334" endtime="20201115 22:11:00.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:00.337" endtime="20201115 22:11:00.338"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:00.318" endtime="20201115 22:11:00.339"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:00.316" endtime="20201115 22:11:00.339"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:00.344" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201115 22:11:00.343" endtime="20201115 22:11:00.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:00.346" level="INFO">VALUE: ztimer</msg>
<status status="PASS" starttime="20201115 22:11:00.345" endtime="20201115 22:11:00.346"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:00.340" endtime="20201115 22:11:00.347"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:11:00.245" endtime="20201115 22:11:00.348" critical="yes"></status>
</test>
<status status="PASS" starttime="20201115 22:10:58.428" endtime="20201115 22:11:00.350"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201115 22:11:00.405" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201115 22:11:00.413" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201115 22:11:01.631" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201115 22:11:00.404" endtime="20201115 22:11:01.631"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201115 22:11:01.634" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201115 22:11:01.632" endtime="20201115 22:11:01.634"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:00.402" endtime="20201115 22:11:01.635"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:01.637" endtime="20201115 22:11:01.858"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.635" endtime="20201115 22:11:01.859"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:01.876" endtime="20201115 22:11:01.890"></status>
</kw>
<msg timestamp="20201115 22:11:01.891" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:01.874" endtime="20201115 22:11:01.891"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:01.894" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:01.892" endtime="20201115 22:11:01.895"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:11:01.900" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:11:01.897" endtime="20201115 22:11:01.901"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:01.870" endtime="20201115 22:11:01.902"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:01.867" endtime="20201115 22:11:01.903"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.866" endtime="20201115 22:11:01.903"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:11:01.909" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:11:01.907" endtime="20201115 22:11:01.909"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.904" endtime="20201115 22:11:01.909"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.864" endtime="20201115 22:11:01.910"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.863" endtime="20201115 22:11:01.910"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:01.911" endtime="20201115 22:11:01.912"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.862" endtime="20201115 22:11:01.913"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:01.914" endtime="20201115 22:11:01.917"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.860" endtime="20201115 22:11:01.918"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:00.401" endtime="20201115 22:11:01.918"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO/">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:01.926" endtime="20201115 22:11:01.946"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.923" endtime="20201115 22:11:01.947"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:01.960" endtime="20201115 22:11:01.974"></status>
</kw>
<msg timestamp="20201115 22:11:01.974" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:01.958" endtime="20201115 22:11:01.975"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:01.977" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:01.976" endtime="20201115 22:11:01.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:11:01.980" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:11:01.978" endtime="20201115 22:11:01.981"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:01.956" endtime="20201115 22:11:01.981"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:01.953" endtime="20201115 22:11:01.982"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.952" endtime="20201115 22:11:01.982"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:11:01.986" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:11:01.985" endtime="20201115 22:11:01.986"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.983" endtime="20201115 22:11:01.986"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.951" endtime="20201115 22:11:01.987"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.951" endtime="20201115 22:11:01.987"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:01.988" endtime="20201115 22:11:01.989"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.949" endtime="20201115 22:11:01.990"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.947" endtime="20201115 22:11:01.990"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.921" endtime="20201115 22:11:01.990"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure GPIO Overhead</arg>
</arguments>
<msg timestamp="20201115 22:11:01.993" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:02.001" endtime="20201115 22:11:02.011"></status>
</kw>
<msg timestamp="20201115 22:11:02.012" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:01.999" endtime="20201115 22:11:02.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:02.014" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:02.013" endtime="20201115 22:11:02.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:02.015" endtime="20201115 22:11:02.017"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.997" endtime="20201115 22:11:02.018"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.995" endtime="20201115 22:11:02.018"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:02.025" endtime="20201115 22:11:02.314"></status>
</kw>
<msg timestamp="20201115 22:11:02.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065380292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065382292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:02.023" endtime="20201115 22:11:02.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:02.321" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065380292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065382292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:02.317" endtime="20201115 22:11:02.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:02.322" endtime="20201115 22:11:02.324"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.020" endtime="20201115 22:11:02.325"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.019" endtime="20201115 22:11:02.325"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:02.328" level="INFO">${RESULT} = [{'time': 0.065382292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9999999999881224e-06, 'source_diff': 1.9999999999881224e-06}, {'time': 0.065385681, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:02.326" endtime="20201115 22:11:02.329"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:02.337" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [1.9999999999881224e-06, 1.7370000000016539e-06, 1.5839999999989196e-06, 1.9029999999975455e-06, 2.042000000007649e-06, 1.8749999999984057e-06, 1.5980000000054284e-06, 2.05500000000080...</msg>
<status status="PASS" starttime="20201115 22:11:02.329" endtime="20201115 22:11:02.337"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:02.341" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201115 22:11:02.340" endtime="20201115 22:11:02.342"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:02.344" level="INFO">VALUE: [1.9999999999881224e-06, 1.7370000000016539e-06, 1.5839999999989196e-06, 1.9029999999975455e-06, 2.042000000007649e-06, 1.8749999999984057e-06, 1.5980000000054284e-06, 2.055000000000806e-06, 1.5000000000015001e-06, 2.014000000008509e-06, 1.832999999992757e-06, 1.8610000000057747e-06, 1.5550000000003061e-06, 1.750000000008689e-06, 2.013999999994631e-06, 1.5550000000003061e-06, 1.473000000001834e-06, 1.915999999990703e-06, 1.6530000000042344e-06, 1.5689999999929372e-06, 1.7080000000030404e-06, 1.8610000000057747e-06, 1.9720000000028604e-06, 1.7080000000030404e-06, 1.7920000000004599e-06]</msg>
<status status="PASS" starttime="20201115 22:11:02.342" endtime="20201115 22:11:02.344"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.338" endtime="20201115 22:11:02.345"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:02.347" endtime="20201115 22:11:02.348"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:02.350" endtime="20201115 22:11:02.370"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.349" endtime="20201115 22:11:02.370"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.345" endtime="20201115 22:11:02.371"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.994" endtime="20201115 22:11:02.371"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:01.992" endtime="20201115 22:11:02.371"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:02.376" endtime="20201115 22:11:02.395"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.374" endtime="20201115 22:11:02.396"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.373" endtime="20201115 22:11:02.396"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:11:01.918" endtime="20201115 22:11:02.397" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:02.405" endtime="20201115 22:11:02.424"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.404" endtime="20201115 22:11:02.425"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:02.439" endtime="20201115 22:11:02.453"></status>
</kw>
<msg timestamp="20201115 22:11:02.453" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:02.438" endtime="20201115 22:11:02.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:02.456" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:02.454" endtime="20201115 22:11:02.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:11:02.459" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:11:02.457" endtime="20201115 22:11:02.459"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:02.434" endtime="20201115 22:11:02.460"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:02.432" endtime="20201115 22:11:02.460"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.431" endtime="20201115 22:11:02.461"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:11:02.464" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:11:02.464" endtime="20201115 22:11:02.465"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.461" endtime="20201115 22:11:02.465"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.430" endtime="20201115 22:11:02.466"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.429" endtime="20201115 22:11:02.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:02.466" endtime="20201115 22:11:02.468"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.428" endtime="20201115 22:11:02.469"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.426" endtime="20201115 22:11:02.469"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.402" endtime="20201115 22:11:02.469"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer Now Overhead</arg>
</arguments>
<msg timestamp="20201115 22:11:02.472" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:02.480" endtime="20201115 22:11:02.491"></status>
</kw>
<msg timestamp="20201115 22:11:02.492" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:02.478" endtime="20201115 22:11:02.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:02.494" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:02.493" endtime="20201115 22:11:02.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:02.495" endtime="20201115 22:11:02.497"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.476" endtime="20201115 22:11:02.498"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.474" endtime="20201115 22:11:02.498"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:02.505" endtime="20201115 22:11:02.787"></status>
</kw>
<msg timestamp="20201115 22:11:02.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065761722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065762944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:02.503" endtime="20201115 22:11:02.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:02.798" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065761722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065762944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:02.791" endtime="20201115 22:11:02.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:02.799" endtime="20201115 22:11:02.801"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.500" endtime="20201115 22:11:02.801"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.499" endtime="20201115 22:11:02.802"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:02.806" level="INFO">${RESULT} = [{'time': 0.065762944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2220000000090492e-06, 'source_diff': 1.2220000000090492e-06}, {'time': 0.0657655, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:02.803" endtime="20201115 22:11:02.806"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:02.819" level="INFO">${OVERHEAD} = {'source_diff': [1.2220000000090492e-06, 9.030000000104232e-07, 9.170000000030543e-07, 9.019999999970718e-07, 9.299999999962116e-07, 9.170000000030543e-07, 8.87999999990563e-07, 9.160000000035806e-07,...</msg>
<status status="PASS" starttime="20201115 22:11:02.807" endtime="20201115 22:11:02.819"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:02.823" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201115 22:11:02.822" endtime="20201115 22:11:02.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:02.826" level="INFO">VALUE: [1.2220000000090492e-06, 9.030000000104232e-07, 9.170000000030543e-07, 9.019999999970718e-07, 9.299999999962116e-07, 9.170000000030543e-07, 8.87999999990563e-07, 9.160000000035806e-07, 9.310000000095631e-07, 9.019999999970718e-07, 9.170000000030543e-07, 9.169999999891765e-07, 8.889999999900366e-07, 9.160000000035806e-07, 9.170000000030543e-07, 9.159999999897028e-07, 9.159999999897028e-07, 9.309999999956853e-07, 9.450000000021941e-07, 9.170000000030543e-07, 9.170000000030543e-07, 9.159999999897028e-07, 9.029999999965455e-07, 9.030000000104232e-07, 9.160000000035806e-07, 9.170000000030543e-07, 9.029999999965455e-07, 9.310000000095631e-07, 9.170000000030543e-07, 9.300000000100894e-07, 9.310000000095631e-07, 9.019999999970718e-07, 9.160000000035806e-07, 9.170000000030543e-07, 9.170000000030543e-07, 9.019999999970718e-07, 9.170000000030543e-07, 9.299999999962116e-07, 9.160000000035806e-07, 8.890000000039144e-07, 9.030000000104232e-07, 9.310000000095631e-07, 9.170000000030543e-07, 9.160000000035806e-07, 9.160000000035806e-07, 9.169999999891765e-07, 9.170000000030543e-07, 9.169999999891765e-07, 9.170000000030543e-07, 9.310000000095631e-07]</msg>
<status status="PASS" starttime="20201115 22:11:02.825" endtime="20201115 22:11:02.827"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.820" endtime="20201115 22:11:02.827"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:02.830" endtime="20201115 22:11:02.831"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:02.833" endtime="20201115 22:11:02.852"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.832" endtime="20201115 22:11:02.853"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.828" endtime="20201115 22:11:02.853"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.473" endtime="20201115 22:11:02.854"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.471" endtime="20201115 22:11:02.854"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:02.859" endtime="20201115 22:11:02.878"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.857" endtime="20201115 22:11:02.879"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.856" endtime="20201115 22:11:02.879"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:11:02.399" endtime="20201115 22:11:02.880" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set List">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:02.888" endtime="20201115 22:11:02.907"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.886" endtime="20201115 22:11:02.908"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:02.922" endtime="20201115 22:11:02.937"></status>
</kw>
<msg timestamp="20201115 22:11:02.938" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:02.920" endtime="20201115 22:11:02.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:02.940" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:02.939" endtime="20201115 22:11:02.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:11:02.943" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:11:02.941" endtime="20201115 22:11:02.944"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:02.917" endtime="20201115 22:11:02.944"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:02.914" endtime="20201115 22:11:02.945"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.913" endtime="20201115 22:11:02.945"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:11:02.949" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:11:02.948" endtime="20201115 22:11:02.949"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.946" endtime="20201115 22:11:02.950"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.912" endtime="20201115 22:11:02.950"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.912" endtime="20201115 22:11:02.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:02.951" endtime="20201115 22:11:02.952"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.910" endtime="20201115 22:11:02.953"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.909" endtime="20201115 22:11:02.953"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.885" endtime="20201115 22:11:02.953"></status>
</kw>
<kw name="${n} IN RANGE [ 25 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:02.957" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:02.967" endtime="20201115 22:11:02.979"></status>
</kw>
<msg timestamp="20201115 22:11:02.979" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:02.965" endtime="20201115 22:11:02.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:02.982" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:02.980" endtime="20201115 22:11:02.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:02.983" endtime="20201115 22:11:02.984"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.962" endtime="20201115 22:11:02.985"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.960" endtime="20201115 22:11:02.985"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:02.992" endtime="20201115 22:11:03.279"></status>
</kw>
<msg timestamp="20201115 22:11:03.282" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071235375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071239625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:02.990" endtime="20201115 22:11:03.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:03.290" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071235375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071239625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:03.283" endtime="20201115 22:11:03.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:03.292" endtime="20201115 22:11:03.293"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.988" endtime="20201115 22:11:03.294"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.986" endtime="20201115 22:11:03.294"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:03.298" level="INFO">${RESULT} = [{'time': 0.071239625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2499999999973115e-06, 'source_diff': 4.2499999999973115e-06}, {'time': 0.071273417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:03.295" endtime="20201115 22:11:03.299"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:03.314" level="INFO">${OVERHEAD} = {'source_diff': [4.2499999999973115e-06, 3.52800000000264e-06, 3.360999999993397e-06, 3.665999999999392e-06, 3.5000000000035003e-06, 3.652999999992357e-06, 3.5139999999961313e-06, 3.665999999999392e-0...</msg>
<status status="PASS" starttime="20201115 22:11:03.299" endtime="20201115 22:11:03.314"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:03.318" level="INFO">NAME: 00-overhead-1-set</msg>
<status status="PASS" starttime="20201115 22:11:03.317" endtime="20201115 22:11:03.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:03.321" level="INFO">VALUE: [4.2499999999973115e-06, 3.52800000000264e-06, 3.360999999993397e-06, 3.665999999999392e-06, 3.5000000000035003e-06, 3.652999999992357e-06, 3.5139999999961313e-06, 3.665999999999392e-06, 3.514000000010009e-06, 3.597000000007955e-06, 3.4859999999969915e-06, 3.665999999999392e-06, 3.542000000009149e-06, 3.665999999999392e-06, 3.4579999999978517e-06, 3.5840000000009198e-06, 3.5000000000035003e-06, 3.6810000000053744e-06, 3.4999999999896225e-06, 3.6530000000062346e-06, 3.5270000000031665e-06, 3.583000000001446e-06, 3.5000000000035003e-06, 3.665999999999392e-06, 3.5139999999961313e-06, 3.651999999992883e-06, 3.4860000000108693e-06, 3.6530000000062346e-06, 3.55600000000178e-06, 3.6530000000062346e-06, 3.5139999999961313e-06, 3.624999999993217e-06, 3.5139999999961313e-06, 3.651999999992883e-06, 3.5139999999961313e-06, 3.652999999992357e-06, 3.4999999999896225e-06, 3.6530000000062346e-06, 3.52800000000264e-06, 3.652999999992357e-06, 3.5270000000031665e-06, 3.6530000000062346e-06, 3.5000000000035003e-06, 3.652999999992357e-06, 3.5129999999966577e-06, 3.6669999999988656e-06, 3.514000000010009e-06, 3.6530000000062346e-06, 3.5139999999961313e-06, 3.6389999999997258e-06]</msg>
<status status="PASS" starttime="20201115 22:11:03.320" endtime="20201115 22:11:03.321"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.315" endtime="20201115 22:11:03.322"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:03.324" endtime="20201115 22:11:03.325"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:03.328" endtime="20201115 22:11:03.347"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.326" endtime="20201115 22:11:03.348"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.322" endtime="20201115 22:11:03.348"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.958" endtime="20201115 22:11:03.349"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.956" endtime="20201115 22:11:03.349"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.955" endtime="20201115 22:11:03.349"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:03.351" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:03.360" endtime="20201115 22:11:03.372"></status>
</kw>
<msg timestamp="20201115 22:11:03.373" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:03.359" endtime="20201115 22:11:03.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:03.375" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:03.374" endtime="20201115 22:11:03.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:03.376" endtime="20201115 22:11:03.378"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.356" endtime="20201115 22:11:03.379"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.354" endtime="20201115 22:11:03.379"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:03.386" endtime="20201115 22:11:03.673"></status>
</kw>
<msg timestamp="20201115 22:11:03.676" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025403375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025405778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:03.384" endtime="20201115 22:11:03.676"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:03.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025403375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025405778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:03.677" endtime="20201115 22:11:03.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:03.685" endtime="20201115 22:11:03.687"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.381" endtime="20201115 22:11:03.688"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.380" endtime="20201115 22:11:03.688"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:03.692" level="INFO">${RESULT} = [{'time': 0.025405778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.403000000001515e-06, 'source_diff': 2.403000000001515e-06}, {'time': 0.025446111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:03.689" endtime="20201115 22:11:03.692"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:03.705" level="INFO">${OVERHEAD} = {'source_diff': [2.403000000001515e-06, 2.4999999999990308e-06, 2.4729999999993646e-06, 2.4589999999997947e-06, 2.485999999999461e-06, 2.4860000000029303e-06, 2.471999999999891e-06, 2.5139999999986007...</msg>
<status status="PASS" starttime="20201115 22:11:03.693" endtime="20201115 22:11:03.706"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:03.710" level="INFO">NAME: 00-overhead-2-set</msg>
<status status="PASS" starttime="20201115 22:11:03.709" endtime="20201115 22:11:03.710"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:03.712" level="INFO">VALUE: [2.403000000001515e-06, 2.4999999999990308e-06, 2.4729999999993646e-06, 2.4589999999997947e-06, 2.485999999999461e-06, 2.4860000000029303e-06, 2.471999999999891e-06, 2.5139999999986007e-06, 2.485999999999461e-06, 2.431000000000655e-06, 2.473000000002834e-06, 2.4999999999990308e-06, 2.471999999999891e-06, 2.485999999999461e-06, 2.487000000002404e-06, 2.4999999999990308e-06, 2.4729999999993646e-06, 2.52800000000164e-06, 2.471999999999891e-06, 2.471999999999891e-06, 2.471999999999891e-06, 2.485999999999461e-06, 2.4729999999993646e-06, 2.4860000000029303e-06, 2.4729999999993646e-06, 2.5139999999986007e-06, 2.5410000000017363e-06, 2.485999999999461e-06, 2.4729999999993646e-06, 2.4999999999990308e-06, 2.431000000000655e-06, 2.4999999999990308e-06, 2.5279999999981706e-06, 2.485999999999461e-06, 2.4999999999990308e-06, 2.458000000000321e-06, 2.471999999999891e-06, 2.485999999999461e-06, 2.485999999999461e-06, 2.51400000000207e-06, 2.471999999999891e-06, 2.5000000000025002e-06, 2.458000000000321e-06, 2.5410000000017363e-06, 2.471999999999891e-06, 2.5270000000021664e-06, 2.4729999999993646e-06, 2.5700000000003498e-06, 2.471999999999891e-06, 2.471999999999891e-06]</msg>
<status status="PASS" starttime="20201115 22:11:03.711" endtime="20201115 22:11:03.713"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.706" endtime="20201115 22:11:03.714"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:03.716" endtime="20201115 22:11:03.717"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:03.720" endtime="20201115 22:11:03.739"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.718" endtime="20201115 22:11:03.740"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.714" endtime="20201115 22:11:03.740"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.352" endtime="20201115 22:11:03.740"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.350" endtime="20201115 22:11:03.741"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.349" endtime="20201115 22:11:03.741"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:03.743" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:03.752" endtime="20201115 22:11:03.765"></status>
</kw>
<msg timestamp="20201115 22:11:03.765" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:03.750" endtime="20201115 22:11:03.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:03.768" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:03.766" endtime="20201115 22:11:03.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:03.769" endtime="20201115 22:11:03.771"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.748" endtime="20201115 22:11:03.771"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.745" endtime="20201115 22:11:03.772"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:03.778" endtime="20201115 22:11:04.065"></status>
</kw>
<msg timestamp="20201115 22:11:04.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024622903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024624903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:03.777" endtime="20201115 22:11:04.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:04.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024622903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024624903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:04.070" endtime="20201115 22:11:04.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:04.078" endtime="20201115 22:11:04.080"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.774" endtime="20201115 22:11:04.080"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.772" endtime="20201115 22:11:04.081"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:04.085" level="INFO">${RESULT} = [{'time': 0.024624903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9999999999985307e-06, 'source_diff': 1.9999999999985307e-06}, {'time': 0.024669306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:04.081" endtime="20201115 22:11:04.085"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:04.098" level="INFO">${OVERHEAD} = {'source_diff': [1.9999999999985307e-06, 2.3749999999989058e-06, 1.9860000000024303e-06, 1.9449999999997247e-06, 2.26400000000182e-06, 1.944000000000251e-06, 1.917000000000585e-06, 2.262999999998877e-...</msg>
<status status="PASS" starttime="20201115 22:11:04.086" endtime="20201115 22:11:04.098"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:04.103" level="INFO">NAME: 00-overhead-3-set</msg>
<status status="PASS" starttime="20201115 22:11:04.102" endtime="20201115 22:11:04.103"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:04.106" level="INFO">VALUE: [1.9999999999985307e-06, 2.3749999999989058e-06, 1.9860000000024303e-06, 1.9449999999997247e-06, 2.26400000000182e-06, 1.944000000000251e-06, 1.917000000000585e-06, 2.262999999998877e-06, 2.02800000000114e-06, 1.9729999999988646e-06, 2.2779999999979206e-06, 2.012999999998627e-06, 2.01400000000157e-06, 2.2639999999983507e-06, 2.000000000002e-06, 1.957999999999821e-06, 2.26400000000182e-06, 2.01400000000157e-06, 2.000000000002e-06, 2.27800000000139e-06, 1.971999999999391e-06, 1.9729999999988646e-06, 2.29200000000096e-06, 1.9999999999985307e-06, 1.9860000000024303e-06, 2.2639999999983507e-06, 1.971999999999391e-06, 1.985999999998961e-06, 2.27800000000139e-06, 1.9860000000024303e-06, 1.971999999999391e-06, 2.2779999999979206e-06, 1.9729999999988646e-06, 1.9860000000024303e-06, 2.2779999999979206e-06, 1.9869999999984345e-06, 2.000000000002e-06, 2.2910000000014863e-06, 1.9589999999992946e-06, 1.9999999999985307e-06, 2.2639999999983507e-06, 1.985999999998961e-06, 1.985999999998961e-06, 2.2779999999979206e-06, 1.985999999998961e-06, 1.985999999998961e-06, 2.194000000000501e-06, 1.9860000000024303e-06, 1.985999999998961e-06, 2.27800000000139e-06]</msg>
<status status="PASS" starttime="20201115 22:11:04.104" endtime="20201115 22:11:04.106"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.099" endtime="20201115 22:11:04.107"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:04.109" endtime="20201115 22:11:04.110"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:04.112" endtime="20201115 22:11:04.132"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.111" endtime="20201115 22:11:04.132"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.107" endtime="20201115 22:11:04.133"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.743" endtime="20201115 22:11:04.133"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.742" endtime="20201115 22:11:04.133"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:03.741" endtime="20201115 22:11:04.134"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:04.136" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:04.145" endtime="20201115 22:11:04.158"></status>
</kw>
<msg timestamp="20201115 22:11:04.158" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:04.143" endtime="20201115 22:11:04.158"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:04.160" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:04.159" endtime="20201115 22:11:04.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:04.162" endtime="20201115 22:11:04.163"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.141" endtime="20201115 22:11:04.164"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.138" endtime="20201115 22:11:04.164"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:04.171" endtime="20201115 22:11:04.458"></status>
</kw>
<msg timestamp="20201115 22:11:04.461" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024516875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024519014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:04.169" endtime="20201115 22:11:04.461"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:04.469" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024516875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024519014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:04.462" endtime="20201115 22:11:04.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:04.470" endtime="20201115 22:11:04.472"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.166" endtime="20201115 22:11:04.472"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.165" endtime="20201115 22:11:04.473"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:04.477" level="INFO">${RESULT} = [{'time': 0.024519014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1389999999982257e-06, 'source_diff': 2.1389999999982257e-06}, {'time': 0.024567556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:04.474" endtime="20201115 22:11:04.477"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:04.491" level="INFO">${OVERHEAD} = {'source_diff': [2.1389999999982257e-06, 2.3339999999996697e-06, 2.180000000000931e-06, 2.139000000001695e-06, 2.403000000001515e-06, 2.110999999999086e-06, 2.139000000001695e-06, 2.4020000000020414e-...</msg>
<status status="PASS" starttime="20201115 22:11:04.478" endtime="20201115 22:11:04.491"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:04.495" level="INFO">NAME: 00-overhead-4-set</msg>
<status status="PASS" starttime="20201115 22:11:04.494" endtime="20201115 22:11:04.496"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:04.498" level="INFO">VALUE: [2.1389999999982257e-06, 2.3339999999996697e-06, 2.180000000000931e-06, 2.139000000001695e-06, 2.403000000001515e-06, 2.110999999999086e-06, 2.139000000001695e-06, 2.4020000000020414e-06, 2.1249999999986557e-06, 2.125000000002125e-06, 2.4169999999976155e-06, 2.1389999999982257e-06, 2.110999999999086e-06, 2.4029999999980456e-06, 2.1669999999973655e-06, 2.1249999999986557e-06, 2.4160000000016113e-06, 2.110999999999086e-06, 2.125000000002125e-06, 2.403000000001515e-06, 2.151999999998322e-06, 2.137999999998752e-06, 2.403000000001515e-06, 2.0839999999994197e-06, 2.137999999998752e-06, 2.3889999999984757e-06, 2.167000000000835e-06, 2.1110000000025553e-06, 2.403000000001515e-06, 2.125000000002125e-06, 2.05600000000028e-06, 2.389000000001945e-06, 2.082999999999946e-06, 2.0699999999998497e-06, 2.3889999999984757e-06, 2.1249999999986557e-06, 2.125000000002125e-06, 2.431000000000655e-06, 2.125000000002125e-06, 2.110999999999086e-06, 2.4300000000011812e-06, 2.1529999999977956e-06, 2.1249999999986557e-06, 2.3889999999984757e-06, 2.1249999999986557e-06, 2.139000000001695e-06, 2.471999999999891e-06, 2.139000000001695e-06, 2.1389999999982257e-06, 2.403000000001515e-06]</msg>
<status status="PASS" starttime="20201115 22:11:04.496" endtime="20201115 22:11:04.498"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.492" endtime="20201115 22:11:04.499"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:04.501" endtime="20201115 22:11:04.502"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:04.504" endtime="20201115 22:11:04.524"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.503" endtime="20201115 22:11:04.524"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.499" endtime="20201115 22:11:04.525"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.136" endtime="20201115 22:11:04.525"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.135" endtime="20201115 22:11:04.525"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.134" endtime="20201115 22:11:04.526"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:04.528" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:04.537" endtime="20201115 22:11:04.550"></status>
</kw>
<msg timestamp="20201115 22:11:04.550" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:04.535" endtime="20201115 22:11:04.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:04.553" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:04.551" endtime="20201115 22:11:04.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:04.554" endtime="20201115 22:11:04.555"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.533" endtime="20201115 22:11:04.556"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.530" endtime="20201115 22:11:04.556"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:04.563" endtime="20201115 22:11:04.850"></status>
</kw>
<msg timestamp="20201115 22:11:04.853" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024481972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024484236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:04.561" endtime="20201115 22:11:04.853"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:04.861" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024481972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024484236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:04.854" endtime="20201115 22:11:04.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:04.863" endtime="20201115 22:11:04.864"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.559" endtime="20201115 22:11:04.865"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.557" endtime="20201115 22:11:04.865"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:04.870" level="INFO">${RESULT} = [{'time': 0.024484236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2639999999983507e-06, 'source_diff': 2.2639999999983507e-06}, {'time': 0.024537542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:04.866" endtime="20201115 22:11:04.870"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:04.884" level="INFO">${OVERHEAD} = {'source_diff': [2.2639999999983507e-06, 2.5419999999977405e-06, 2.235999999999211e-06, 2.2499999999987808e-06, 2.55600000000078e-06, 2.26400000000182e-06, 2.26400000000182e-06, 2.583000000000446e-06,...</msg>
<status status="PASS" starttime="20201115 22:11:04.871" endtime="20201115 22:11:04.885"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:04.889" level="INFO">NAME: 00-overhead-5-set</msg>
<status status="PASS" starttime="20201115 22:11:04.888" endtime="20201115 22:11:04.889"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:04.892" level="INFO">VALUE: [2.2639999999983507e-06, 2.5419999999977405e-06, 2.235999999999211e-06, 2.2499999999987808e-06, 2.55600000000078e-06, 2.26400000000182e-06, 2.26400000000182e-06, 2.583000000000446e-06, 2.2499999999987808e-06, 2.2499999999987808e-06, 2.55600000000078e-06, 2.2770000000019164e-06, 2.2639999999983507e-06, 2.5550000000013062e-06, 2.2639999999983507e-06, 2.2779999999979206e-06, 2.569000000000876e-06, 2.2639999999983507e-06, 2.235999999999211e-06, 2.5279999999981706e-06, 2.235999999999211e-06, 2.208000000000071e-06, 2.5549999999978368e-06, 2.3479999999992396e-06, 2.27800000000139e-06, 2.5700000000003498e-06, 2.223000000002584e-06, 2.194000000000501e-06, 2.5410000000017363e-06, 2.2499999999987808e-06, 2.235999999999211e-06, 2.4999999999990308e-06, 2.2639999999983507e-06, 2.276999999998447e-06, 2.5700000000003498e-06, 2.2779999999979206e-06, 2.3200000000000998e-06, 2.5139999999986007e-06, 2.235999999999211e-06, 2.27800000000139e-06, 2.5419999999977405e-06, 2.2779999999979206e-06, 2.2499999999987808e-06, 2.5829999999969766e-06, 2.2499999999987808e-06, 2.276999999998447e-06, 2.55600000000078e-06, 2.221999999999641e-06, 2.2499999999987808e-06, 2.5700000000003498e-06]</msg>
<status status="PASS" starttime="20201115 22:11:04.890" endtime="20201115 22:11:04.892"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.885" endtime="20201115 22:11:04.892"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:04.895" endtime="20201115 22:11:04.896"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:04.898" endtime="20201115 22:11:04.917"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.896" endtime="20201115 22:11:04.918"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.893" endtime="20201115 22:11:04.919"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.528" endtime="20201115 22:11:04.919"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.527" endtime="20201115 22:11:04.919"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.526" endtime="20201115 22:11:04.919"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:04.922" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:04.930" endtime="20201115 22:11:04.944"></status>
</kw>
<msg timestamp="20201115 22:11:04.944" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:04.929" endtime="20201115 22:11:04.945"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:04.947" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:04.945" endtime="20201115 22:11:04.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:04.948" endtime="20201115 22:11:04.950"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.926" endtime="20201115 22:11:04.950"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.924" endtime="20201115 22:11:04.950"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:04.957" endtime="20201115 22:11:05.245"></status>
</kw>
<msg timestamp="20201115 22:11:05.249" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024458236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024460611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:04.955" endtime="20201115 22:11:05.249"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:05.257" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024458236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024460611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:05.250" endtime="20201115 22:11:05.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:05.258" endtime="20201115 22:11:05.260"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.953" endtime="20201115 22:11:05.260"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.951" endtime="20201115 22:11:05.261"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:05.265" level="INFO">${RESULT} = [{'time': 0.024460611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3749999999989058e-06, 'source_diff': 2.3749999999989058e-06}, {'time': 0.024517972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:05.261" endtime="20201115 22:11:05.265"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:05.278" level="INFO">${OVERHEAD} = {'source_diff': [2.3749999999989058e-06, 2.6939999999975317e-06, 2.401999999998572e-06, 2.3329999999967266e-06, 2.695000000000475e-06, 2.333000000000196e-06, 2.3889999999984757e-06, 2.6809999999974354...</msg>
<status status="PASS" starttime="20201115 22:11:05.266" endtime="20201115 22:11:05.279"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:05.284" level="INFO">NAME: 00-overhead-6-set</msg>
<status status="PASS" starttime="20201115 22:11:05.282" endtime="20201115 22:11:05.284"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:05.286" level="INFO">VALUE: [2.3749999999989058e-06, 2.6939999999975317e-06, 2.401999999998572e-06, 2.3329999999967266e-06, 2.695000000000475e-06, 2.333000000000196e-06, 2.3889999999984757e-06, 2.6809999999974354e-06, 2.3889999999984757e-06, 2.3749999999989058e-06, 2.6529999999982956e-06, 2.4309999999971854e-06, 2.4300000000011812e-06, 2.681000000000905e-06, 2.403000000001515e-06, 2.4450000000002248e-06, 2.695000000000475e-06, 2.403000000001515e-06, 2.389000000001945e-06, 2.695000000000475e-06, 2.4029999999980456e-06, 2.401999999998572e-06, 2.694000000001001e-06, 2.4020000000020414e-06, 2.415999999998142e-06, 2.6669999999978655e-06, 2.4169999999976155e-06, 2.417000000001085e-06, 2.681000000000905e-06, 2.4160000000016113e-06, 2.403000000001515e-06, 2.76400000000232e-06, 2.3889999999984757e-06, 2.3749999999989058e-06, 2.7090000000000447e-06, 2.403000000001515e-06, 2.403000000001515e-06, 2.735999999999711e-06, 2.3749999999989058e-06, 2.401999999998572e-06, 2.681000000000905e-06, 2.417000000001085e-06, 2.403000000001515e-06, 2.695000000000475e-06, 2.417000000001085e-06, 2.403000000001515e-06, 2.694000000001001e-06, 2.4029999999980456e-06, 2.4029999999980456e-06, 2.6939999999975317e-06]</msg>
<status status="PASS" starttime="20201115 22:11:05.285" endtime="20201115 22:11:05.287"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.279" endtime="20201115 22:11:05.287"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:05.289" endtime="20201115 22:11:05.291"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:05.293" endtime="20201115 22:11:05.312"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.291" endtime="20201115 22:11:05.313"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.288" endtime="20201115 22:11:05.313"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.922" endtime="20201115 22:11:05.313"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.920" endtime="20201115 22:11:05.314"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:04.920" endtime="20201115 22:11:05.314"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:05.316" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:05.325" endtime="20201115 22:11:05.338"></status>
</kw>
<msg timestamp="20201115 22:11:05.338" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:05.323" endtime="20201115 22:11:05.338"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:05.348" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:05.339" endtime="20201115 22:11:05.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:05.349" endtime="20201115 22:11:05.351"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.321" endtime="20201115 22:11:05.351"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.319" endtime="20201115 22:11:05.352"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:05.358" endtime="20201115 22:11:05.645"></status>
</kw>
<msg timestamp="20201115 22:11:05.648" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024455069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024457625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:05.357" endtime="20201115 22:11:05.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:05.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024455069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024457625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:05.649" endtime="20201115 22:11:05.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:05.658" endtime="20201115 22:11:05.659"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.354" endtime="20201115 22:11:05.660"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.352" endtime="20201115 22:11:05.660"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:05.664" level="INFO">${RESULT} = [{'time': 0.024457625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.55600000000078e-06, 'source_diff': 2.55600000000078e-06}, {'time': 0.024519014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:11:05.661" endtime="20201115 22:11:05.665"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:05.678" level="INFO">${OVERHEAD} = {'source_diff': [2.55600000000078e-06, 2.8329999999972266e-06, 2.458000000000321e-06, 2.5419999999977405e-06, 2.8050000000015562e-06, 2.5700000000003498e-06, 2.54200000000121e-06, 2.819000000001126e-0...</msg>
<status status="PASS" starttime="20201115 22:11:05.665" endtime="20201115 22:11:05.678"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:05.682" level="INFO">NAME: 00-overhead-7-set</msg>
<status status="PASS" starttime="20201115 22:11:05.681" endtime="20201115 22:11:05.683"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:05.685" level="INFO">VALUE: [2.55600000000078e-06, 2.8329999999972266e-06, 2.458000000000321e-06, 2.5419999999977405e-06, 2.8050000000015562e-06, 2.5700000000003498e-06, 2.54200000000121e-06, 2.819000000001126e-06, 2.526999999998697e-06, 2.5419999999977405e-06, 2.833000000000696e-06, 2.5139999999986007e-06, 2.5550000000013062e-06, 2.8189999999976567e-06, 2.5139999999986007e-06, 2.55600000000078e-06, 2.7919999999979905e-06, 2.55600000000078e-06, 2.5559999999973104e-06, 2.833000000000696e-06, 2.4720000000033604e-06, 2.5419999999977405e-06, 2.8329999999972266e-06, 2.55600000000078e-06, 2.485999999999461e-06, 2.8200000000006e-06, 2.5139999999986007e-06, 2.540999999998267e-06, 2.735999999999711e-06, 2.583000000000446e-06, 2.540999999998267e-06, 2.819000000001126e-06, 2.52800000000164e-06, 2.471999999999891e-06, 2.8340000000001697e-06, 2.5550000000013062e-06, 2.54200000000121e-06, 2.8200000000006e-06, 2.5410000000017363e-06, 2.540999999998267e-06, 2.860999999999836e-06, 2.54200000000121e-06, 2.540999999998267e-06, 2.8050000000015562e-06, 2.51400000000207e-06, 2.52800000000164e-06, 2.8340000000001697e-06, 2.5700000000003498e-06, 2.5549999999978368e-06, 2.8340000000001697e-06]</msg>
<status status="PASS" starttime="20201115 22:11:05.683" endtime="20201115 22:11:05.685"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.679" endtime="20201115 22:11:05.686"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:05.688" endtime="20201115 22:11:05.689"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:05.691" endtime="20201115 22:11:05.711"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.690" endtime="20201115 22:11:05.711"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.686" endtime="20201115 22:11:05.712"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.317" endtime="20201115 22:11:05.712"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.315" endtime="20201115 22:11:05.712"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.314" endtime="20201115 22:11:05.713"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:05.715" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:05.724" endtime="20201115 22:11:05.737"></status>
</kw>
<msg timestamp="20201115 22:11:05.738" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:05.723" endtime="20201115 22:11:05.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:05.740" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:05.739" endtime="20201115 22:11:05.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:05.741" endtime="20201115 22:11:05.743"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.720" endtime="20201115 22:11:05.744"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.717" endtime="20201115 22:11:05.744"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:05.751" endtime="20201115 22:11:06.038"></status>
</kw>
<msg timestamp="20201115 22:11:06.041" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025120722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025123458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:05.749" endtime="20201115 22:11:06.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:06.049" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025120722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025123458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:06.042" endtime="20201115 22:11:06.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:06.051" endtime="20201115 22:11:06.052"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.746" endtime="20201115 22:11:06.053"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.745" endtime="20201115 22:11:06.053"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:06.057" level="INFO">${RESULT} = [{'time': 0.025123458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.735999999999711e-06, 'source_diff': 2.735999999999711e-06}, {'time': 0.025189847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:06.054" endtime="20201115 22:11:06.058"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:06.071" level="INFO">${OVERHEAD} = {'source_diff': [2.735999999999711e-06, 2.972000000000391e-06, 2.610999999999586e-06, 2.694000000001001e-06, 2.9590000000002947e-06, 2.6800000000014312e-06, 2.694000000001001e-06, 2.958000000000821e-0...</msg>
<status status="PASS" starttime="20201115 22:11:06.058" endtime="20201115 22:11:06.071"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:06.075" level="INFO">NAME: 00-overhead-8-set</msg>
<status status="PASS" starttime="20201115 22:11:06.074" endtime="20201115 22:11:06.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:06.078" level="INFO">VALUE: [2.735999999999711e-06, 2.972000000000391e-06, 2.610999999999586e-06, 2.694000000001001e-06, 2.9590000000002947e-06, 2.6800000000014312e-06, 2.694000000001001e-06, 2.958000000000821e-06, 2.6660000000018613e-06, 2.665999999998392e-06, 2.944000000001251e-06, 2.667000000001335e-06, 2.695000000000475e-06, 2.9300000000016813e-06, 2.667000000001335e-06, 2.6660000000018613e-06, 2.972000000000391e-06, 2.681000000000905e-06, 2.679999999997962e-06, 2.9439999999977817e-06, 2.665999999998392e-06, 2.6949999999970053e-06, 2.985999999999961e-06, 2.694000000001001e-06, 2.6669999999978655e-06, 2.958000000000821e-06, 2.667000000001335e-06, 2.6809999999974354e-06, 2.945000000000725e-06, 2.681000000000905e-06, 2.6809999999974354e-06, 2.9590000000002947e-06, 2.6389999999987257e-06, 2.6809999999974354e-06, 2.958000000000821e-06, 2.6809999999974354e-06, 2.6809999999974354e-06, 2.972000000000391e-06, 2.667000000001335e-06, 2.681000000000905e-06, 2.972000000000391e-06, 2.681000000000905e-06, 2.695000000000475e-06, 2.9719999999969215e-06, 2.6660000000018613e-06, 2.665999999998392e-06, 2.9590000000002947e-06, 2.723000000003084e-06, 2.651999999998822e-06, 2.9029999999985456e-06]</msg>
<status status="PASS" starttime="20201115 22:11:06.077" endtime="20201115 22:11:06.078"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.072" endtime="20201115 22:11:06.079"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:06.081" endtime="20201115 22:11:06.083"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:06.085" endtime="20201115 22:11:06.104"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.083" endtime="20201115 22:11:06.105"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.080" endtime="20201115 22:11:06.105"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.715" endtime="20201115 22:11:06.106"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.714" endtime="20201115 22:11:06.106"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:05.713" endtime="20201115 22:11:06.106"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:06.109" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:06.117" endtime="20201115 22:11:06.131"></status>
</kw>
<msg timestamp="20201115 22:11:06.131" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:06.116" endtime="20201115 22:11:06.132"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:06.134" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:06.133" endtime="20201115 22:11:06.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:06.135" endtime="20201115 22:11:06.137"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.113" endtime="20201115 22:11:06.137"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.111" endtime="20201115 22:11:06.138"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:06.144" endtime="20201115 22:11:06.431"></status>
</kw>
<msg timestamp="20201115 22:11:06.434" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024625528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024628319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:06.143" endtime="20201115 22:11:06.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:06.443" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024625528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024628319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:06.435" endtime="20201115 22:11:06.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:06.444" endtime="20201115 22:11:06.445"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.140" endtime="20201115 22:11:06.446"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.138" endtime="20201115 22:11:06.446"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:06.451" level="INFO">${RESULT} = [{'time': 0.024628319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.790999999998517e-06, 'source_diff': 2.790999999998517e-06}, {'time': 0.0247, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3....</msg>
<status status="PASS" starttime="20201115 22:11:06.447" endtime="20201115 22:11:06.451"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:06.465" level="INFO">${OVERHEAD} = {'source_diff': [2.790999999998517e-06, 3.097000000000516e-06, 2.804999999998087e-06, 2.8200000000006e-06, 3.111000000000086e-06, 2.8200000000006e-06, 2.790999999998517e-06, 3.153000000002265e-06, 2.8...</msg>
<status status="PASS" starttime="20201115 22:11:06.452" endtime="20201115 22:11:06.466"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:06.470" level="INFO">NAME: 00-overhead-9-set</msg>
<status status="PASS" starttime="20201115 22:11:06.469" endtime="20201115 22:11:06.470"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:06.472" level="INFO">VALUE: [2.790999999998517e-06, 3.097000000000516e-06, 2.804999999998087e-06, 2.8200000000006e-06, 3.111000000000086e-06, 2.8200000000006e-06, 2.790999999998517e-06, 3.153000000002265e-06, 2.8200000000006e-06, 2.8050000000015562e-06, 3.124999999999656e-06, 2.80600000000103e-06, 2.8200000000006e-06, 3.1389999999992257e-06, 2.8200000000006e-06, 2.819000000001126e-06, 3.124999999999656e-06, 2.833000000000696e-06, 2.819000000001126e-06, 3.0969999999970466e-06, 2.819000000001126e-06, 2.847000000000266e-06, 3.097000000000516e-06, 2.7500000000027502e-06, 2.8189999999976567e-06, 3.1660000000023614e-06, 2.819000000001126e-06, 2.8619999999993095e-06, 3.124999999999656e-06, 2.80600000000103e-06, 2.8339999999967003e-06, 3.0979999999999897e-06, 2.8329999999972266e-06, 2.8189999999976567e-06, 3.124999999999656e-06, 2.80600000000103e-06, 2.833000000000696e-06, 3.0829999999974766e-06, 2.8050000000015562e-06, 2.8200000000006e-06, 3.124999999999656e-06, 2.749999999999281e-06, 2.833000000000696e-06, 3.1669999999983656e-06, 2.7919999999979905e-06, 2.8340000000001697e-06, 3.111000000000086e-06, 2.80600000000103e-06, 2.8200000000006e-06, 3.097000000000516e-06]</msg>
<status status="PASS" starttime="20201115 22:11:06.471" endtime="20201115 22:11:06.473"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.466" endtime="20201115 22:11:06.474"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:06.476" endtime="20201115 22:11:06.477"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:06.480" endtime="20201115 22:11:06.499"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.478" endtime="20201115 22:11:06.500"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.474" endtime="20201115 22:11:06.500"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.109" endtime="20201115 22:11:06.500"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.107" endtime="20201115 22:11:06.501"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.107" endtime="20201115 22:11:06.501"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:06.503" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:06.512" endtime="20201115 22:11:06.526"></status>
</kw>
<msg timestamp="20201115 22:11:06.526" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:06.510" endtime="20201115 22:11:06.526"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:06.529" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:06.527" endtime="20201115 22:11:06.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:06.530" endtime="20201115 22:11:06.531"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.508" endtime="20201115 22:11:06.532"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.506" endtime="20201115 22:11:06.532"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:06.539" endtime="20201115 22:11:06.827"></status>
</kw>
<msg timestamp="20201115 22:11:06.830" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024558889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024561861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:06.537" endtime="20201115 22:11:06.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:06.838" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024558889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024561861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:06.831" endtime="20201115 22:11:06.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:06.839" endtime="20201115 22:11:06.841"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.535" endtime="20201115 22:11:06.842"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.533" endtime="20201115 22:11:06.842"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:06.846" level="INFO">${RESULT} = [{'time': 0.024561861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.972000000000391e-06, 'source_diff': 2.972000000000391e-06}, {'time': 0.024638375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:06.843" endtime="20201115 22:11:06.846"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:06.860" level="INFO">${OVERHEAD} = {'source_diff': [2.972000000000391e-06, 3.222000000000641e-06, 2.944000000001251e-06, 2.958000000000821e-06, 3.2639999999993508e-06, 2.958000000000821e-06, 2.9579999999973516e-06, 3.236000000000211e-0...</msg>
<status status="PASS" starttime="20201115 22:11:06.847" endtime="20201115 22:11:06.860"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:06.864" level="INFO">NAME: 00-overhead-10-set</msg>
<status status="PASS" starttime="20201115 22:11:06.863" endtime="20201115 22:11:06.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:06.867" level="INFO">VALUE: [2.972000000000391e-06, 3.222000000000641e-06, 2.944000000001251e-06, 2.958000000000821e-06, 3.2639999999993508e-06, 2.958000000000821e-06, 2.9579999999973516e-06, 3.236000000000211e-06, 2.958000000000821e-06, 2.9439999999977817e-06, 3.26400000000282e-06, 2.958000000000821e-06, 2.958000000000821e-06, 3.236000000000211e-06, 2.9729999999998646e-06, 2.985999999999961e-06, 3.249999999999781e-06, 2.9719999999969215e-06, 2.9590000000002947e-06, 3.181000000001405e-06, 2.945000000000725e-06, 2.9449999999972554e-06, 3.2779999999989207e-06, 2.874999999999406e-06, 2.889000000002445e-06, 3.249999999999781e-06, 2.931000000001155e-06, 2.9439999999977817e-06, 3.151999999999322e-06, 2.958000000000821e-06, 2.944000000001251e-06, 3.1529999999987957e-06, 2.929999999998212e-06, 2.9579999999973516e-06, 3.236000000000211e-06, 2.972000000000391e-06, 2.9729999999998646e-06, 3.2639999999993508e-06, 2.958000000000821e-06, 2.9579999999973516e-06, 3.2500000000032503e-06, 2.9439999999977817e-06, 2.944000000001251e-06, 3.2219999999971716e-06, 2.9729999999998646e-06, 2.9729999999998646e-06, 3.249999999999781e-06, 2.985999999999961e-06, 2.944000000001251e-06, 3.2230000000001147e-06]</msg>
<status status="PASS" starttime="20201115 22:11:06.865" endtime="20201115 22:11:06.868"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.860" endtime="20201115 22:11:06.868"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:06.870" endtime="20201115 22:11:06.872"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:06.874" endtime="20201115 22:11:06.893"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.872" endtime="20201115 22:11:06.894"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.869" endtime="20201115 22:11:06.894"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.504" endtime="20201115 22:11:06.894"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.502" endtime="20201115 22:11:06.895"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.501" endtime="20201115 22:11:06.895"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:06.897" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:06.906" endtime="20201115 22:11:06.921"></status>
</kw>
<msg timestamp="20201115 22:11:06.921" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:06.904" endtime="20201115 22:11:06.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:06.924" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:06.922" endtime="20201115 22:11:06.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:06.925" endtime="20201115 22:11:06.926"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.902" endtime="20201115 22:11:06.927"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.900" endtime="20201115 22:11:06.927"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:06.934" endtime="20201115 22:11:07.221"></status>
</kw>
<msg timestamp="20201115 22:11:07.224" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025044875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025047958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:06.932" endtime="20201115 22:11:07.225"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:07.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025044875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025047958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:07.226" endtime="20201115 22:11:07.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:07.234" endtime="20201115 22:11:07.236"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.930" endtime="20201115 22:11:07.236"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.928" endtime="20201115 22:11:07.237"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:07.241" level="INFO">${RESULT} = [{'time': 0.025047958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0829999999974766e-06, 'source_diff': 3.0829999999974766e-06}, {'time': 0.025129292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:07.237" endtime="20201115 22:11:07.241"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:07.255" level="INFO">${OVERHEAD} = {'source_diff': [3.0829999999974766e-06, 3.417000000002085e-06, 3.124999999999656e-06, 3.1529999999987957e-06, 3.388000000000002e-06, 3.097000000000516e-06, 3.069000000001376e-06, 3.3889999999994758e-...</msg>
<status status="PASS" starttime="20201115 22:11:07.242" endtime="20201115 22:11:07.255"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:07.259" level="INFO">NAME: 00-overhead-11-set</msg>
<status status="PASS" starttime="20201115 22:11:07.258" endtime="20201115 22:11:07.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:07.262" level="INFO">VALUE: [3.0829999999974766e-06, 3.417000000002085e-06, 3.124999999999656e-06, 3.1529999999987957e-06, 3.388000000000002e-06, 3.097000000000516e-06, 3.069000000001376e-06, 3.3889999999994758e-06, 3.097000000000516e-06, 3.111000000000086e-06, 3.3889999999994758e-06, 3.05600000000128e-06, 3.0139999999991007e-06, 3.374999999999906e-06, 3.1389999999992257e-06, 3.0840000000004197e-06, 3.3889999999994758e-06, 3.167000000001835e-06, 3.0969999999970466e-06, 3.3889999999994758e-06, 3.0840000000004197e-06, 3.097000000000516e-06, 3.333000000001196e-06, 3.0979999999999897e-06, 3.097000000000516e-06, 3.374999999999906e-06, 3.0689999999979067e-06, 3.124999999999656e-06, 3.4029999999990457e-06, 3.0969999999970466e-06, 3.02800000000214e-06, 3.374999999999906e-06, 3.111000000000086e-06, 3.083000000000946e-06, 3.374999999999906e-06, 3.111000000000086e-06, 3.0969999999970466e-06, 3.374999999999906e-06, 3.165999999998892e-06, 3.1389999999992257e-06, 3.374999999999906e-06, 3.04200000000171e-06, 3.111000000000086e-06, 3.4309999999981855e-06, 3.083000000000946e-06, 3.097000000000516e-06, 3.3889999999994758e-06, 3.0979999999999897e-06, 3.097000000000516e-06, 3.361000000000336e-06]</msg>
<status status="PASS" starttime="20201115 22:11:07.260" endtime="20201115 22:11:07.262"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.256" endtime="20201115 22:11:07.263"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:07.265" endtime="20201115 22:11:07.266"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:07.268" endtime="20201115 22:11:07.288"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.267" endtime="20201115 22:11:07.288"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.263" endtime="20201115 22:11:07.289"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.898" endtime="20201115 22:11:07.289"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.896" endtime="20201115 22:11:07.289"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:06.895" endtime="20201115 22:11:07.290"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:07.292" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:07.301" endtime="20201115 22:11:07.316"></status>
</kw>
<msg timestamp="20201115 22:11:07.316" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:07.299" endtime="20201115 22:11:07.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:07.319" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:07.317" endtime="20201115 22:11:07.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:07.320" endtime="20201115 22:11:07.321"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.297" endtime="20201115 22:11:07.322"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.294" endtime="20201115 22:11:07.322"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:07.329" endtime="20201115 22:11:07.615"></status>
</kw>
<msg timestamp="20201115 22:11:07.618" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025180167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025183375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:07.327" endtime="20201115 22:11:07.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:07.626" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025180167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025183375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:07.619" endtime="20201115 22:11:07.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:07.628" endtime="20201115 22:11:07.630"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.325" endtime="20201115 22:11:07.630"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.323" endtime="20201115 22:11:07.631"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:07.635" level="INFO">${RESULT} = [{'time': 0.025183375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.208000000001071e-06, 'source_diff': 3.208000000001071e-06}, {'time': 0.025270292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:07.632" endtime="20201115 22:11:07.635"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:07.648" level="INFO">${OVERHEAD} = {'source_diff': [3.208000000001071e-06, 3.5139999999996008e-06, 3.2230000000001147e-06, 3.2500000000032503e-06, 3.5279999999991707e-06, 3.2359999999967415e-06, 3.2500000000032503e-06, 3.52799999999917...</msg>
<status status="PASS" starttime="20201115 22:11:07.636" endtime="20201115 22:11:07.649"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:07.653" level="INFO">NAME: 00-overhead-12-set</msg>
<status status="PASS" starttime="20201115 22:11:07.652" endtime="20201115 22:11:07.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:07.655" level="INFO">VALUE: [3.208000000001071e-06, 3.5139999999996008e-06, 3.2230000000001147e-06, 3.2500000000032503e-06, 3.5279999999991707e-06, 3.2359999999967415e-06, 3.2500000000032503e-06, 3.5279999999991707e-06, 3.1529999999987957e-06, 3.2230000000001147e-06, 3.5139999999996008e-06, 3.236000000000211e-06, 3.222000000000641e-06, 3.54200000000221e-06, 3.151999999999322e-06, 3.222000000000641e-06, 3.5139999999996008e-06, 3.2369999999996846e-06, 3.27800000000239e-06, 3.513000000000127e-06, 3.222000000000641e-06, 3.222000000000641e-06, 3.52800000000264e-06, 3.208000000001071e-06, 3.236000000000211e-06, 3.5139999999996008e-06, 3.195000000000975e-06, 3.249999999999781e-06, 3.526999999999697e-06, 3.262999999999877e-06, 3.222000000000641e-06, 3.4730000000003647e-06, 3.249999999999781e-06, 3.236000000000211e-06, 3.500000000000031e-06, 3.2639999999993508e-06, 3.236000000000211e-06, 3.513000000000127e-06, 3.2089999999970753e-06, 3.2779999999989207e-06, 3.5279999999991707e-06, 3.249999999999781e-06, 3.236000000000211e-06, 3.5279999999991707e-06, 3.237000000003154e-06, 3.236000000000211e-06, 3.540999999999267e-06, 3.249999999999781e-06, 3.236000000000211e-06, 3.5140000000030702e-06]</msg>
<status status="PASS" starttime="20201115 22:11:07.654" endtime="20201115 22:11:07.656"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.649" endtime="20201115 22:11:07.656"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:07.659" endtime="20201115 22:11:07.660"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:07.662" endtime="20201115 22:11:07.681"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.660" endtime="20201115 22:11:07.682"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.657" endtime="20201115 22:11:07.682"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.292" endtime="20201115 22:11:07.683"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.291" endtime="20201115 22:11:07.683"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.290" endtime="20201115 22:11:07.683"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:07.685" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:07.694" endtime="20201115 22:11:07.709"></status>
</kw>
<msg timestamp="20201115 22:11:07.710" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:07.693" endtime="20201115 22:11:07.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:07.712" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:07.711" endtime="20201115 22:11:07.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:07.713" endtime="20201115 22:11:07.715"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.690" endtime="20201115 22:11:07.716"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.688" endtime="20201115 22:11:07.716"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:07.723" endtime="20201115 22:11:08.010"></status>
</kw>
<msg timestamp="20201115 22:11:08.013" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024928708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024932069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:07.721" endtime="20201115 22:11:08.013"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:08.021" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024928708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024932069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:08.014" endtime="20201115 22:11:08.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:08.023" endtime="20201115 22:11:08.024"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.718" endtime="20201115 22:11:08.025"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.717" endtime="20201115 22:11:08.025"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:08.029" level="INFO">${RESULT} = [{'time': 0.024932069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.361000000000336e-06, 'source_diff': 3.361000000000336e-06}, {'time': 0.025024056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:08.026" endtime="20201115 22:11:08.030"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:08.044" level="INFO">${OVERHEAD} = {'source_diff': [3.361000000000336e-06, 3.6529999999992957e-06, 3.3619999999998096e-06, 3.4160000000026114e-06, 3.6669999999988656e-06, 3.374999999999906e-06, 3.4029999999990457e-06, 3.666999999998865...</msg>
<status status="PASS" starttime="20201115 22:11:08.030" endtime="20201115 22:11:08.045"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:08.049" level="INFO">NAME: 00-overhead-13-set</msg>
<status status="PASS" starttime="20201115 22:11:08.048" endtime="20201115 22:11:08.049"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:08.051" level="INFO">VALUE: [3.361000000000336e-06, 3.6529999999992957e-06, 3.3619999999998096e-06, 3.4160000000026114e-06, 3.6669999999988656e-06, 3.374999999999906e-06, 3.4029999999990457e-06, 3.6669999999988656e-06, 3.3189999999981568e-06, 3.361000000000336e-06, 3.679999999998962e-06, 3.4440000000017512e-06, 3.3889999999994758e-06, 3.665999999999392e-06, 3.333000000001196e-06, 3.374999999999906e-06, 3.665999999999392e-06, 3.3890000000029452e-06, 3.361000000000336e-06, 3.6669999999988656e-06, 3.374999999999906e-06, 3.361000000000336e-06, 3.6669999999988656e-06, 3.374999999999906e-06, 3.431000000001655e-06, 3.6389999999997258e-06, 3.374999999999906e-06, 3.415999999999142e-06, 3.708000000001571e-06, 3.374999999999906e-06, 3.374999999999906e-06, 3.6669999999988656e-06, 3.361000000000336e-06, 3.3889999999994758e-06, 3.6669999999988656e-06, 3.3889999999994758e-06, 3.3469999999972966e-06, 3.6669999999988656e-06, 3.374999999999906e-06, 3.3619999999998096e-06, 3.6389999999997258e-06, 3.374999999999906e-06, 3.374999999999906e-06, 3.7219999999976716e-06, 3.374999999999906e-06, 3.362000000003279e-06, 3.665999999999392e-06, 3.374999999999906e-06, 3.3619999999998096e-06, 3.6529999999992957e-06]</msg>
<status status="PASS" starttime="20201115 22:11:08.050" endtime="20201115 22:11:08.052"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.045" endtime="20201115 22:11:08.052"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:08.054" endtime="20201115 22:11:08.056"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:08.058" endtime="20201115 22:11:08.077"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.056" endtime="20201115 22:11:08.078"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.053" endtime="20201115 22:11:08.078"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.686" endtime="20201115 22:11:08.079"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.684" endtime="20201115 22:11:08.079"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.683" endtime="20201115 22:11:08.079"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:08.081" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:08.090" endtime="20201115 22:11:08.105"></status>
</kw>
<msg timestamp="20201115 22:11:08.106" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:08.089" endtime="20201115 22:11:08.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:08.109" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:08.107" endtime="20201115 22:11:08.109"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:08.110" endtime="20201115 22:11:08.111"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.086" endtime="20201115 22:11:08.112"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.084" endtime="20201115 22:11:08.112"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:08.119" endtime="20201115 22:11:08.406"></status>
</kw>
<msg timestamp="20201115 22:11:08.409" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024428708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024432208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:08.117" endtime="20201115 22:11:08.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:08.417" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024428708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024432208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:08.410" endtime="20201115 22:11:08.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:08.418" endtime="20201115 22:11:08.420"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.115" endtime="20201115 22:11:08.421"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.113" endtime="20201115 22:11:08.421"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:08.425" level="INFO">${RESULT} = [{'time': 0.024432208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.500000000000031e-06, 'source_diff': 3.500000000000031e-06}, {'time': 0.024529597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:08.422" endtime="20201115 22:11:08.425"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:08.439" level="INFO">${OVERHEAD} = {'source_diff': [3.500000000000031e-06, 3.804999999999087e-06, 3.472000000000891e-06, 3.5139999999996008e-06, 3.804999999999087e-06, 3.4440000000017512e-06, 3.4869999999999346e-06, 3.8059999999985605e...</msg>
<status status="PASS" starttime="20201115 22:11:08.426" endtime="20201115 22:11:08.439"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:08.443" level="INFO">NAME: 00-overhead-14-set</msg>
<status status="PASS" starttime="20201115 22:11:08.442" endtime="20201115 22:11:08.444"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:08.446" level="INFO">VALUE: [3.500000000000031e-06, 3.804999999999087e-06, 3.472000000000891e-06, 3.5139999999996008e-06, 3.804999999999087e-06, 3.4440000000017512e-06, 3.4869999999999346e-06, 3.8059999999985605e-06, 3.5139999999996008e-06, 3.500000000000031e-06, 3.804999999999087e-06, 3.5139999999996008e-06, 3.5279999999991707e-06, 3.7370000000001846e-06, 3.5139999999996008e-06, 3.500000000000031e-06, 3.847000000001266e-06, 3.540999999999267e-06, 3.5139999999996008e-06, 3.8059999999985605e-06, 3.540999999999267e-06, 3.5139999999996008e-06, 3.790999999999517e-06, 3.5139999999996008e-06, 3.5139999999996008e-06, 3.804999999999087e-06, 3.500000000000031e-06, 3.5829999999979767e-06, 3.819000000002126e-06, 3.5270000000031665e-06, 3.500000000000031e-06, 3.832999999998227e-06, 3.500000000000031e-06, 3.5140000000030702e-06, 3.790999999999517e-06, 3.5690000000018762e-06, 3.5140000000030702e-06, 3.804999999999087e-06, 3.500000000000031e-06, 3.54200000000221e-06, 3.8059999999985605e-06, 3.5140000000030702e-06, 3.5139999999996008e-06, 3.7919999999989906e-06, 3.5559999999983105e-06, 3.5139999999996008e-06, 3.804999999999087e-06, 3.5419999999987406e-06, 3.500000000000031e-06, 3.8059999999985605e-06]</msg>
<status status="PASS" starttime="20201115 22:11:08.444" endtime="20201115 22:11:08.446"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.440" endtime="20201115 22:11:08.447"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:08.449" endtime="20201115 22:11:08.450"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:08.452" endtime="20201115 22:11:08.472"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.451" endtime="20201115 22:11:08.472"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.447" endtime="20201115 22:11:08.473"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.082" endtime="20201115 22:11:08.473"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.080" endtime="20201115 22:11:08.473"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.079" endtime="20201115 22:11:08.473"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:08.476" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:08.485" endtime="20201115 22:11:08.500"></status>
</kw>
<msg timestamp="20201115 22:11:08.500" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:08.483" endtime="20201115 22:11:08.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:08.503" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:08.501" endtime="20201115 22:11:08.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:08.504" endtime="20201115 22:11:08.505"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.481" endtime="20201115 22:11:08.506"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.478" endtime="20201115 22:11:08.506"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:08.513" endtime="20201115 22:11:08.800"></status>
</kw>
<msg timestamp="20201115 22:11:08.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025022056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025025694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:08.511" endtime="20201115 22:11:08.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:08.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025022056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025025694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:08.804" endtime="20201115 22:11:08.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:08.812" endtime="20201115 22:11:08.814"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.509" endtime="20201115 22:11:08.814"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.507" endtime="20201115 22:11:08.815"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:08.819" level="INFO">${RESULT} = [{'time': 0.025025694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.638000000000252e-06, 'source_diff': 3.638000000000252e-06}, {'time': 0.025128958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:08.816" endtime="20201115 22:11:08.819"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:08.833" level="INFO">${OVERHEAD} = {'source_diff': [3.638000000000252e-06, 3.929999999999212e-06, 3.5969999999975466e-06, 3.6389999999997258e-06, 3.902999999999546e-06, 3.5690000000018762e-06, 3.693999999998532e-06, 3.957999999998352e-...</msg>
<status status="PASS" starttime="20201115 22:11:08.820" endtime="20201115 22:11:08.833"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:08.837" level="INFO">NAME: 00-overhead-15-set</msg>
<status status="PASS" starttime="20201115 22:11:08.836" endtime="20201115 22:11:08.838"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:08.840" level="INFO">VALUE: [3.638000000000252e-06, 3.929999999999212e-06, 3.5969999999975466e-06, 3.6389999999997258e-06, 3.902999999999546e-06, 3.5690000000018762e-06, 3.693999999998532e-06, 3.957999999998352e-06, 3.6249999999966864e-06, 3.6389999999997258e-06, 3.915999999999642e-06, 3.651999999999822e-06, 3.6390000000031952e-06, 3.9449999999982555e-06, 3.625000000000156e-06, 3.709000000001045e-06, 3.958000000001821e-06, 3.667000000002335e-06, 3.665999999999392e-06, 3.9449999999982555e-06, 3.6389999999997258e-06, 3.6529999999992957e-06, 3.929999999999212e-06, 3.6529999999992957e-06, 3.6389999999997258e-06, 3.943999999998782e-06, 3.6389999999997258e-06, 3.6529999999992957e-06, 3.901999999996603e-06, 3.6529999999992957e-06, 3.6390000000031952e-06, 3.931000000002155e-06, 3.6389999999997258e-06, 3.6809999999984355e-06, 3.930000000002681e-06, 3.6529999999992957e-06, 3.5840000000009198e-06, 3.915999999999642e-06, 3.651999999999822e-06, 3.625000000000156e-06, 3.902999999999546e-06, 3.653000000002765e-06, 3.653000000002765e-06, 3.959000000001295e-06, 3.6529999999992957e-06, 3.651999999999822e-06, 3.943999999998782e-06, 3.625000000000156e-06, 3.6390000000031952e-06, 3.943999999998782e-06]</msg>
<status status="PASS" starttime="20201115 22:11:08.838" endtime="20201115 22:11:08.840"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.833" endtime="20201115 22:11:08.841"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:08.843" endtime="20201115 22:11:08.844"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:08.847" endtime="20201115 22:11:08.866"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.845" endtime="20201115 22:11:08.867"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.841" endtime="20201115 22:11:08.867"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.476" endtime="20201115 22:11:08.868"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.475" endtime="20201115 22:11:08.868"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.474" endtime="20201115 22:11:08.868"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:08.870" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:08.879" endtime="20201115 22:11:08.895"></status>
</kw>
<msg timestamp="20201115 22:11:08.895" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:08.878" endtime="20201115 22:11:08.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:08.898" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:08.896" endtime="20201115 22:11:08.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:08.899" endtime="20201115 22:11:08.901"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.875" endtime="20201115 22:11:08.901"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.873" endtime="20201115 22:11:08.902"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:08.908" endtime="20201115 22:11:09.194"></status>
</kw>
<msg timestamp="20201115 22:11:09.197" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024638819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024642611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:08.906" endtime="20201115 22:11:09.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:09.205" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024638819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024642611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:09.198" endtime="20201115 22:11:09.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:09.206" endtime="20201115 22:11:09.208"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.904" endtime="20201115 22:11:09.209"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.902" endtime="20201115 22:11:09.209"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:09.213" level="INFO">${RESULT} = [{'time': 0.024642611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7919999999989906e-06, 'source_diff': 3.7919999999989906e-06}, {'time': 0.024751639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:09.210" endtime="20201115 22:11:09.213"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:09.227" level="INFO">${OVERHEAD} = {'source_diff': [3.7919999999989906e-06, 4.082999999998477e-06, 3.79200000000246e-06, 3.763999999999851e-06, 4.07000000000185e-06, 3.7919999999989906e-06, 3.77800000000289e-06, 4.041999999999241e-06, ...</msg>
<status status="PASS" starttime="20201115 22:11:09.214" endtime="20201115 22:11:09.227"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:09.231" level="INFO">NAME: 00-overhead-16-set</msg>
<status status="PASS" starttime="20201115 22:11:09.230" endtime="20201115 22:11:09.232"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:09.234" level="INFO">VALUE: [3.7919999999989906e-06, 4.082999999998477e-06, 3.79200000000246e-06, 3.763999999999851e-06, 4.07000000000185e-06, 3.7919999999989906e-06, 3.77800000000289e-06, 4.041999999999241e-06, 3.847000000001266e-06, 3.8059999999985605e-06, 4.082999999998477e-06, 3.7779999999994207e-06, 3.763999999999851e-06, 4.082999999998477e-06, 3.763999999999851e-06, 3.776999999999947e-06, 4.069000000002376e-06, 3.776999999999947e-06, 3.790999999999517e-06, 4.069000000002376e-06, 3.79200000000246e-06, 3.7919999999989906e-06, 4.11200000000056e-06, 3.8050000000025563e-06, 3.763999999999851e-06, 4.09800000000099e-06, 3.80600000000203e-06, 3.819000000002126e-06, 4.1249999999971865e-06, 3.750000000000281e-06, 3.804999999999087e-06, 4.041999999999241e-06, 3.7779999999994207e-06, 3.776999999999947e-06, 4.152999999999796e-06, 3.846999999997797e-06, 3.8059999999985605e-06, 4.096999999998047e-06, 3.763999999999851e-06, 3.7230000000006147e-06, 4.069000000002376e-06, 3.790999999999517e-06, 3.7919999999989906e-06, 4.111000000001086e-06, 3.77800000000289e-06, 3.8200000000016e-06, 4.027000000000197e-06, 3.888999999999976e-06, 3.832999999998227e-06, 4.055000000002806e-06]</msg>
<status status="PASS" starttime="20201115 22:11:09.232" endtime="20201115 22:11:09.234"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.228" endtime="20201115 22:11:09.235"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:09.237" endtime="20201115 22:11:09.239"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:09.241" endtime="20201115 22:11:09.260"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.239" endtime="20201115 22:11:09.261"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.236" endtime="20201115 22:11:09.261"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.871" endtime="20201115 22:11:09.262"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.869" endtime="20201115 22:11:09.262"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:08.868" endtime="20201115 22:11:09.262"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:09.264" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:09.273" endtime="20201115 22:11:09.289"></status>
</kw>
<msg timestamp="20201115 22:11:09.290" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:09.272" endtime="20201115 22:11:09.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:09.292" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:09.291" endtime="20201115 22:11:09.292"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:09.293" endtime="20201115 22:11:09.295"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.269" endtime="20201115 22:11:09.295"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.267" endtime="20201115 22:11:09.296"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:09.302" endtime="20201115 22:11:09.589"></status>
</kw>
<msg timestamp="20201115 22:11:09.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024593847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024597764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:09.301" endtime="20201115 22:11:09.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:09.600" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024593847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024597764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:09.593" endtime="20201115 22:11:09.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:09.602" endtime="20201115 22:11:09.603"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.298" endtime="20201115 22:11:09.604"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.296" endtime="20201115 22:11:09.604"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:09.608" level="INFO">${RESULT} = [{'time': 0.024597764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.917000000002585e-06, 'source_diff': 3.917000000002585e-06}, {'time': 0.024713069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:09.605" endtime="20201115 22:11:09.609"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:09.623" level="INFO">${OVERHEAD} = {'source_diff': [3.917000000002585e-06, 4.236000000001211e-06, 3.916999999999116e-06, 3.915999999999642e-06, 4.2359999999977416e-06, 3.9309999999986855e-06, 3.917000000002585e-06, 4.277999999999921e-0...</msg>
<status status="PASS" starttime="20201115 22:11:09.609" endtime="20201115 22:11:09.623"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:09.628" level="INFO">NAME: 00-overhead-17-set</msg>
<status status="PASS" starttime="20201115 22:11:09.627" endtime="20201115 22:11:09.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:09.631" level="INFO">VALUE: [3.917000000002585e-06, 4.236000000001211e-06, 3.916999999999116e-06, 3.915999999999642e-06, 4.2359999999977416e-06, 3.9309999999986855e-06, 3.917000000002585e-06, 4.277999999999921e-06, 3.931000000002155e-06, 3.916999999999116e-06, 4.277000000000447e-06, 3.902999999999546e-06, 3.902999999999546e-06, 4.236000000001211e-06, 3.9449999999982555e-06, 3.9160000000031114e-06, 4.221999999998172e-06, 3.902999999999546e-06, 3.930000000002681e-06, 4.221999999998172e-06, 3.9309999999986855e-06, 3.847000000001266e-06, 4.208999999998075e-06, 3.9309999999986855e-06, 3.902000000000072e-06, 4.208000000002071e-06, 3.929999999999212e-06, 3.9309999999986855e-06, 4.2359999999977416e-06, 3.888999999999976e-06, 3.945000000001725e-06, 4.179999999999462e-06, 3.931000000002155e-06, 3.957999999998352e-06, 4.209000000001545e-06, 3.931000000002155e-06, 3.902000000000072e-06, 4.207999999998602e-06, 3.916999999999116e-06, 3.917000000002585e-06, 4.208000000002071e-06, 3.929999999999212e-06, 3.903000000003015e-06, 4.193999999999032e-06, 3.902999999999546e-06, 3.902999999999546e-06, 4.208000000002071e-06, 3.943999999998782e-06, 3.902000000000072e-06, 4.139000000000226e-06]</msg>
<status status="PASS" starttime="20201115 22:11:09.629" endtime="20201115 22:11:09.631"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.624" endtime="20201115 22:11:09.632"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:09.634" endtime="20201115 22:11:09.635"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:09.638" endtime="20201115 22:11:09.657"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.636" endtime="20201115 22:11:09.658"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.632" endtime="20201115 22:11:09.658"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.265" endtime="20201115 22:11:09.658"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.263" endtime="20201115 22:11:09.659"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.262" endtime="20201115 22:11:09.659"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:09.661" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:09.670" endtime="20201115 22:11:09.686"></status>
</kw>
<msg timestamp="20201115 22:11:09.687" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:09.668" endtime="20201115 22:11:09.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:09.689" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:09.688" endtime="20201115 22:11:09.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:09.690" endtime="20201115 22:11:09.692"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.666" endtime="20201115 22:11:09.692"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.664" endtime="20201115 22:11:09.693"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:09.699" endtime="20201115 22:11:09.986"></status>
</kw>
<msg timestamp="20201115 22:11:09.989" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024557542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024561597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:09.698" endtime="20201115 22:11:09.989"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:09.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024557542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024561597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:09.990" endtime="20201115 22:11:09.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:09.998" endtime="20201115 22:11:10.000"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.695" endtime="20201115 22:11:10.001"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.694" endtime="20201115 22:11:10.001"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:10.005" level="INFO">${RESULT} = [{'time': 0.024561597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.054999999999337e-06, 'source_diff': 4.054999999999337e-06}, {'time': 0.024682806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:10.002" endtime="20201115 22:11:10.005"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:10.019" level="INFO">${OVERHEAD} = {'source_diff': [4.054999999999337e-06, 4.403000000000046e-06, 4.08400000000142e-06, 4.096999999998047e-06, 4.347000000001766e-06, 4.08400000000142e-06, 4.069000000002376e-06, 4.361000000001336e-06, 4...</msg>
<status status="PASS" starttime="20201115 22:11:10.007" endtime="20201115 22:11:10.019"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:10.024" level="INFO">NAME: 00-overhead-18-set</msg>
<status status="PASS" starttime="20201115 22:11:10.023" endtime="20201115 22:11:10.024"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:10.026" level="INFO">VALUE: [4.054999999999337e-06, 4.403000000000046e-06, 4.08400000000142e-06, 4.096999999998047e-06, 4.347000000001766e-06, 4.08400000000142e-06, 4.069000000002376e-06, 4.361000000001336e-06, 4.082999999998477e-06, 4.054999999999337e-06, 4.361000000001336e-06, 4.0699999999983805e-06, 4.07000000000185e-06, 4.33400000000167e-06, 4.041999999999241e-06, 4.07000000000185e-06, 4.361000000001336e-06, 4.069000000002376e-06, 4.082999999998477e-06, 4.34800000000124e-06, 4.054999999999337e-06, 4.02800000000314e-06, 4.34799999999777e-06, 4.083000000001946e-06, 4.0559999999988106e-06, 4.346999999998297e-06, 4.014000000000101e-06, 4.0699999999983805e-06, 4.34800000000124e-06, 4.04200000000271e-06, 4.083000000001946e-06, 4.34800000000124e-06, 4.0699999999983805e-06, 4.0699999999983805e-06, 4.360999999997867e-06, 4.054999999999337e-06, 4.139000000000226e-06, 4.361000000001336e-06, 4.0699999999983805e-06, 4.0559999999988106e-06, 4.361000000001336e-06, 4.054999999999337e-06, 4.0559999999988106e-06, 4.346999999998297e-06, 4.068999999998907e-06, 4.082999999998477e-06, 4.375000000000906e-06, 4.083000000001946e-06, 4.0559999999988106e-06, 4.346999999998297e-06]</msg>
<status status="PASS" starttime="20201115 22:11:10.025" endtime="20201115 22:11:10.027"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.020" endtime="20201115 22:11:10.027"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:10.029" endtime="20201115 22:11:10.031"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:10.033" endtime="20201115 22:11:10.052"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.031" endtime="20201115 22:11:10.053"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.028" endtime="20201115 22:11:10.053"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.662" endtime="20201115 22:11:10.053"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.660" endtime="20201115 22:11:10.054"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.659" endtime="20201115 22:11:10.054"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:10.056" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:10.065" endtime="20201115 22:11:10.082"></status>
</kw>
<msg timestamp="20201115 22:11:10.082" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:10.063" endtime="20201115 22:11:10.083"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:10.085" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:10.083" endtime="20201115 22:11:10.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:10.086" endtime="20201115 22:11:10.088"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.061" endtime="20201115 22:11:10.088"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.059" endtime="20201115 22:11:10.089"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:10.095" endtime="20201115 22:11:10.381"></status>
</kw>
<msg timestamp="20201115 22:11:10.385" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024530792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024535014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:10.093" endtime="20201115 22:11:10.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:10.393" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024530792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024535014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:10.386" endtime="20201115 22:11:10.397"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:10.398" endtime="20201115 22:11:10.400"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.091" endtime="20201115 22:11:10.400"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.089" endtime="20201115 22:11:10.401"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:10.405" level="INFO">${RESULT} = [{'time': 0.024535014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.222000000001641e-06, 'source_diff': 4.222000000001641e-06}, {'time': 0.024662028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:10.401" endtime="20201115 22:11:10.405"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:10.418" level="INFO">${OVERHEAD} = {'source_diff': [4.222000000001641e-06, 4.485999999997992e-06, 4.1809999999989356e-06, 4.165999999999892e-06, 4.500000000001031e-06, 4.193999999999032e-06, 4.194000000002501e-06, 4.500000000001031e-06...</msg>
<status status="PASS" starttime="20201115 22:11:10.406" endtime="20201115 22:11:10.418"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:10.423" level="INFO">NAME: 00-overhead-19-set</msg>
<status status="PASS" starttime="20201115 22:11:10.422" endtime="20201115 22:11:10.423"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:10.425" level="INFO">VALUE: [4.222000000001641e-06, 4.485999999997992e-06, 4.1809999999989356e-06, 4.165999999999892e-06, 4.500000000001031e-06, 4.193999999999032e-06, 4.194000000002501e-06, 4.500000000001031e-06, 4.139000000000226e-06, 4.221999999998172e-06, 4.458999999998325e-06, 4.223000000001115e-06, 4.181000000002405e-06, 4.486000000001461e-06, 4.208999999998075e-06, 4.165999999999892e-06, 4.500000000001031e-06, 4.250000000000781e-06, 4.208000000002071e-06, 4.430999999999186e-06, 4.193999999999032e-06, 4.193999999999032e-06, 4.500000000001031e-06, 4.207999999998602e-06, 4.152999999999796e-06, 4.500000000001031e-06, 4.208999999998075e-06, 4.193999999999032e-06, 4.500000000001031e-06, 4.221999999998172e-06, 4.208000000002071e-06, 4.514000000000601e-06, 4.194000000002501e-06, 4.208999999998075e-06, 4.500000000001031e-06, 4.250000000000781e-06, 4.209000000001545e-06, 4.500000000001031e-06, 4.166999999999366e-06, 4.193999999999032e-06, 4.473000000001365e-06, 4.223000000001115e-06, 4.221999999998172e-06, 4.500000000001031e-06, 4.208000000002071e-06, 4.152999999999796e-06, 4.485999999997992e-06, 4.221999999998172e-06, 4.193999999999032e-06, 4.514000000000601e-06]</msg>
<status status="PASS" starttime="20201115 22:11:10.424" endtime="20201115 22:11:10.426"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.419" endtime="20201115 22:11:10.426"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:10.429" endtime="20201115 22:11:10.430"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:10.432" endtime="20201115 22:11:10.451"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.430" endtime="20201115 22:11:10.452"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.427" endtime="20201115 22:11:10.452"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.057" endtime="20201115 22:11:10.453"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.055" endtime="20201115 22:11:10.453"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.054" endtime="20201115 22:11:10.453"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:10.455" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:10.464" endtime="20201115 22:11:10.481"></status>
</kw>
<msg timestamp="20201115 22:11:10.481" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:10.463" endtime="20201115 22:11:10.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:10.484" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:10.482" endtime="20201115 22:11:10.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:10.485" endtime="20201115 22:11:10.486"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.460" endtime="20201115 22:11:10.487"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.458" endtime="20201115 22:11:10.487"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:10.494" endtime="20201115 22:11:10.781"></status>
</kw>
<msg timestamp="20201115 22:11:10.784" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024549514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024553847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:10.492" endtime="20201115 22:11:10.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:10.792" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024549514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024553847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:10.785" endtime="20201115 22:11:10.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:10.793" endtime="20201115 22:11:10.795"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.490" endtime="20201115 22:11:10.795"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.488" endtime="20201115 22:11:10.796"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:10.800" level="INFO">${RESULT} = [{'time': 0.024553847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.332999999998727e-06, 'source_diff': 4.332999999998727e-06}, {'time': 0.024687667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:10.796" endtime="20201115 22:11:10.800"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:10.813" level="INFO">${OVERHEAD} = {'source_diff': [4.332999999998727e-06, 4.639000000000726e-06, 4.416000000000142e-06, 4.34800000000124e-06, 4.6249999999976865e-06, 4.361000000001336e-06, 4.347000000001766e-06, 4.639000000000726e-06,...</msg>
<status status="PASS" starttime="20201115 22:11:10.801" endtime="20201115 22:11:10.813"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:10.818" level="INFO">NAME: 00-overhead-20-set</msg>
<status status="PASS" starttime="20201115 22:11:10.817" endtime="20201115 22:11:10.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:10.820" level="INFO">VALUE: [4.332999999998727e-06, 4.639000000000726e-06, 4.416000000000142e-06, 4.34800000000124e-06, 4.6249999999976865e-06, 4.361000000001336e-06, 4.347000000001766e-06, 4.639000000000726e-06, 4.346999999998297e-06, 4.332999999998727e-06, 4.679999999999962e-06, 4.361000000001336e-06, 4.332999999998727e-06, 4.653000000000296e-06, 4.346999999998297e-06, 4.346999999998297e-06, 4.637999999997783e-06, 4.347000000001766e-06, 4.347000000001766e-06, 4.653000000000296e-06, 4.361000000001336e-06, 4.33400000000167e-06, 4.639000000000726e-06, 4.347000000001766e-06, 4.347000000001766e-06, 4.610999999998117e-06, 4.375000000000906e-06, 4.319000000002626e-06, 4.625000000001156e-06, 4.318999999999157e-06, 4.3339999999982e-06, 4.611000000001586e-06, 4.416999999999616e-06, 4.361000000001336e-06, 4.639000000000726e-06, 4.332999999998727e-06, 4.34799999999777e-06, 4.610999999998117e-06, 4.305999999999061e-06, 4.34799999999777e-06, 4.637999999997783e-06, 4.333000000002196e-06, 4.361000000001336e-06, 4.625000000001156e-06, 4.34800000000124e-06, 4.36199999999734e-06, 4.639000000000726e-06, 4.416000000000142e-06, 4.3339999999982e-06, 4.6389999999972564e-06]</msg>
<status status="PASS" starttime="20201115 22:11:10.819" endtime="20201115 22:11:10.821"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.814" endtime="20201115 22:11:10.821"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:10.823" endtime="20201115 22:11:10.825"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:10.827" endtime="20201115 22:11:10.846"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.825" endtime="20201115 22:11:10.847"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.822" endtime="20201115 22:11:10.847"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.456" endtime="20201115 22:11:10.848"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.454" endtime="20201115 22:11:10.848"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.453" endtime="20201115 22:11:10.848"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:10.850" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:10.859" endtime="20201115 22:11:10.876"></status>
</kw>
<msg timestamp="20201115 22:11:10.877" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:10.858" endtime="20201115 22:11:10.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:10.879" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:10.878" endtime="20201115 22:11:10.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:10.881" endtime="20201115 22:11:10.883"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.855" endtime="20201115 22:11:10.883"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.853" endtime="20201115 22:11:10.884"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:10.890" endtime="20201115 22:11:11.177"></status>
</kw>
<msg timestamp="20201115 22:11:11.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024654278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024658764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:10.888" endtime="20201115 22:11:11.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:11.188" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024654278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024658764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:11.181" endtime="20201115 22:11:11.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:11.189" endtime="20201115 22:11:11.191"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.886" endtime="20201115 22:11:11.191"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.884" endtime="20201115 22:11:11.192"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:11.196" level="INFO">${RESULT} = [{'time': 0.024658764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.485999999997992e-06, 'source_diff': 4.485999999997992e-06}, {'time': 0.024799167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:11.193" endtime="20201115 22:11:11.196"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:11.211" level="INFO">${OVERHEAD} = {'source_diff': [4.485999999997992e-06, 4.778000000000421e-06, 4.485999999997992e-06, 4.471999999998422e-06, 4.778000000000421e-06, 4.485999999997992e-06, 4.459000000001795e-06, 4.777999999996951e-06,...</msg>
<status status="PASS" starttime="20201115 22:11:11.197" endtime="20201115 22:11:11.211"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:11.215" level="INFO">NAME: 00-overhead-21-set</msg>
<status status="PASS" starttime="20201115 22:11:11.214" endtime="20201115 22:11:11.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:11.218" level="INFO">VALUE: [4.485999999997992e-06, 4.778000000000421e-06, 4.485999999997992e-06, 4.471999999998422e-06, 4.778000000000421e-06, 4.485999999997992e-06, 4.459000000001795e-06, 4.777999999996951e-06, 4.472000000001891e-06, 4.486000000001461e-06, 4.778000000000421e-06, 4.487000000000935e-06, 4.472999999997895e-06, 4.778000000000421e-06, 4.416000000000142e-06, 4.514000000000601e-06, 4.7499999999978115e-06, 4.500000000001031e-06, 4.457999999998852e-06, 4.777000000000947e-06, 4.4999999999975615e-06, 4.472000000001891e-06, 4.764000000000851e-06, 4.430999999999186e-06, 4.486000000001461e-06, 4.7499999999978115e-06, 4.472000000001891e-06, 4.485999999997992e-06, 4.791999999999991e-06, 4.485999999997992e-06, 4.457999999998852e-06, 4.764000000000851e-06, 4.485999999997992e-06, 4.4449999999987555e-06, 4.791999999999991e-06, 4.445000000002225e-06, 4.457999999998852e-06, 4.80600000000303e-06, 4.4449999999987555e-06, 4.514000000000601e-06, 4.791999999999991e-06, 4.513000000001127e-06, 4.513000000001127e-06, 4.736999999997715e-06, 4.486999999997465e-06, 4.486000000001461e-06, 4.778000000000421e-06, 4.486000000001461e-06, 4.471999999998422e-06, 4.77800000000389e-06]</msg>
<status status="PASS" starttime="20201115 22:11:11.216" endtime="20201115 22:11:11.218"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.212" endtime="20201115 22:11:11.219"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:11.221" endtime="20201115 22:11:11.222"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:11.225" endtime="20201115 22:11:11.244"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.223" endtime="20201115 22:11:11.244"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.219" endtime="20201115 22:11:11.245"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.851" endtime="20201115 22:11:11.245"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.849" endtime="20201115 22:11:11.245"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.849" endtime="20201115 22:11:11.246"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:11.248" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:11.257" endtime="20201115 22:11:11.274"></status>
</kw>
<msg timestamp="20201115 22:11:11.274" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:11.256" endtime="20201115 22:11:11.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:11.277" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:11.276" endtime="20201115 22:11:11.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:11.278" endtime="20201115 22:11:11.280"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.253" endtime="20201115 22:11:11.280"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.250" endtime="20201115 22:11:11.281"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:11.287" endtime="20201115 22:11:11.575"></status>
</kw>
<msg timestamp="20201115 22:11:11.578" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025195278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025199903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:11.286" endtime="20201115 22:11:11.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:11.586" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025195278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025199903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:11.579" endtime="20201115 22:11:11.586"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:11.587" endtime="20201115 22:11:11.589"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.283" endtime="20201115 22:11:11.589"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.281" endtime="20201115 22:11:11.590"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:11.594" level="INFO">${RESULT} = [{'time': 0.025199903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.6249999999976865e-06, 'source_diff': 4.6249999999976865e-06}, {'time': 0.025346375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:11.590" endtime="20201115 22:11:11.594"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:11.607" level="INFO">${OVERHEAD} = {'source_diff': [4.6249999999976865e-06, 4.903000000000546e-06, 4.6249999999976865e-06, 4.61200000000106e-06, 4.903000000000546e-06, 4.610999999998117e-06, 4.666999999999866e-06, 4.917000000000116e-06...</msg>
<status status="PASS" starttime="20201115 22:11:11.595" endtime="20201115 22:11:11.607"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:11.612" level="INFO">NAME: 00-overhead-22-set</msg>
<status status="PASS" starttime="20201115 22:11:11.611" endtime="20201115 22:11:11.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:11.614" level="INFO">VALUE: [4.6249999999976865e-06, 4.903000000000546e-06, 4.6249999999976865e-06, 4.61200000000106e-06, 4.903000000000546e-06, 4.610999999998117e-06, 4.666999999999866e-06, 4.917000000000116e-06, 4.611000000001586e-06, 4.639000000000726e-06, 4.917000000000116e-06, 4.6249999999976865e-06, 4.568999999999407e-06, 4.903000000000546e-06, 4.639000000000726e-06, 4.679999999999962e-06, 4.902000000001072e-06, 4.625000000001156e-06, 4.625000000001156e-06, 4.901999999997603e-06, 4.610999999998117e-06, 4.610999999998117e-06, 4.917000000000116e-06, 4.610999999998117e-06, 4.625000000001156e-06, 4.889000000000976e-06, 4.6249999999976865e-06, 4.610999999998117e-06, 4.917000000000116e-06, 4.610999999998117e-06, 4.6389999999972564e-06, 4.901999999997603e-06, 4.639000000000726e-06, 4.5699999999988805e-06, 4.916000000000642e-06, 4.625000000001156e-06, 4.6249999999976865e-06, 4.903000000000546e-06, 4.611000000001586e-06, 4.6389999999972564e-06, 4.903000000000546e-06, 4.6249999999976865e-06, 4.624999999994217e-06, 4.903000000000546e-06, 4.610999999994647e-06, 4.666999999999866e-06, 4.903000000000546e-06, 4.625000000001156e-06, 4.611000000001586e-06, 4.903000000000546e-06]</msg>
<status status="PASS" starttime="20201115 22:11:11.613" endtime="20201115 22:11:11.615"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.608" endtime="20201115 22:11:11.615"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:11.617" endtime="20201115 22:11:11.619"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:11.621" endtime="20201115 22:11:11.640"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.619" endtime="20201115 22:11:11.641"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.616" endtime="20201115 22:11:11.642"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.248" endtime="20201115 22:11:11.642"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.247" endtime="20201115 22:11:11.642"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.246" endtime="20201115 22:11:11.642"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:11.645" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:11.654" endtime="20201115 22:11:11.672"></status>
</kw>
<msg timestamp="20201115 22:11:11.672" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:11.652" endtime="20201115 22:11:11.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:11.675" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:11.673" endtime="20201115 22:11:11.675"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:11.676" endtime="20201115 22:11:11.678"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.649" endtime="20201115 22:11:11.678"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.647" endtime="20201115 22:11:11.679"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:11.685" endtime="20201115 22:11:11.972"></status>
</kw>
<msg timestamp="20201115 22:11:11.975" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024923681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024928431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:11.683" endtime="20201115 22:11:11.975"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:11.983" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024923681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024928431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:11.976" endtime="20201115 22:11:11.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:11.985" endtime="20201115 22:11:11.986"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.681" endtime="20201115 22:11:11.987"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.679" endtime="20201115 22:11:11.987"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:11.991" level="INFO">${RESULT} = [{'time': 0.024928431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.750000000001281e-06, 'source_diff': 4.750000000001281e-06}, {'time': 0.025081847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:11.988" endtime="20201115 22:11:11.992"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:12.005" level="INFO">${OVERHEAD} = {'source_diff': [4.750000000001281e-06, 5.041000000000767e-06, 4.736999999997715e-06, 4.750000000001281e-06, 5.042000000000241e-06, 4.7499999999978115e-06, 4.750000000001281e-06, 5.0699999999993806e-0...</msg>
<status status="PASS" starttime="20201115 22:11:11.992" endtime="20201115 22:11:12.005"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:12.009" level="INFO">NAME: 00-overhead-23-set</msg>
<status status="PASS" starttime="20201115 22:11:12.008" endtime="20201115 22:11:12.010"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:12.012" level="INFO">VALUE: [4.750000000001281e-06, 5.041000000000767e-06, 4.736999999997715e-06, 4.750000000001281e-06, 5.042000000000241e-06, 4.7499999999978115e-06, 4.750000000001281e-06, 5.0699999999993806e-06, 4.764000000000851e-06, 4.764000000000851e-06, 5.055999999999811e-06, 4.791999999999991e-06, 4.737000000001185e-06, 5.027000000001197e-06, 4.750000000001281e-06, 4.750000000001281e-06, 5.041000000000767e-06, 4.7499999999978115e-06, 4.7499999999978115e-06, 5.055999999999811e-06, 4.7499999999978115e-06, 4.764000000000851e-06, 5.082999999999477e-06, 4.750000000001281e-06, 4.764000000000851e-06, 5.0699999999993806e-06, 4.7639999999973814e-06, 4.764000000000851e-06, 5.028000000000671e-06, 4.764000000000851e-06, 4.750000000001281e-06, 4.985999999998492e-06, 4.750000000001281e-06, 4.7499999999978115e-06, 5.068999999999907e-06, 4.778000000000421e-06, 4.7639999999973814e-06, 5.042000000000241e-06, 4.8199999999991305e-06, 4.764000000000851e-06, 4.986000000001961e-06, 4.722000000002141e-06, 4.77800000000389e-06, 5.027999999997201e-06, 4.777999999996951e-06, 4.76400000000432e-06, 5.05600000000328e-06, 4.735999999998242e-06, 4.762999999997908e-06, 5.041999999996771e-06]</msg>
<status status="PASS" starttime="20201115 22:11:12.010" endtime="20201115 22:11:12.013"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.006" endtime="20201115 22:11:12.013"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:12.015" endtime="20201115 22:11:12.017"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:12.019" endtime="20201115 22:11:12.038"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.017" endtime="20201115 22:11:12.039"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.014" endtime="20201115 22:11:12.039"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.645" endtime="20201115 22:11:12.040"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.644" endtime="20201115 22:11:12.040"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.643" endtime="20201115 22:11:12.040"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:12.042" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:12.051" endtime="20201115 22:11:12.070"></status>
</kw>
<msg timestamp="20201115 22:11:12.070" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:12.050" endtime="20201115 22:11:12.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:12.073" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:12.071" endtime="20201115 22:11:12.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:12.074" endtime="20201115 22:11:12.075"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.047" endtime="20201115 22:11:12.076"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.045" endtime="20201115 22:11:12.076"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:12.083" endtime="20201115 22:11:12.370"></status>
</kw>
<msg timestamp="20201115 22:11:12.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025014472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025019375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:12.081" endtime="20201115 22:11:12.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:12.381" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025014472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025019375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:12.374" endtime="20201115 22:11:12.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:12.383" endtime="20201115 22:11:12.385"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.079" endtime="20201115 22:11:12.385"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.077" endtime="20201115 22:11:12.386"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:12.390" level="INFO">${RESULT} = [{'time': 0.025019375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.903000000000546e-06, 'source_diff': 4.903000000000546e-06}, {'time': 0.025179972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:12.386" endtime="20201115 22:11:12.390"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:12.404" level="INFO">${OVERHEAD} = {'source_diff': [4.903000000000546e-06, 5.1799999999969926e-06, 4.916000000000642e-06, 4.903000000000546e-06, 5.180999999999936e-06, 4.889000000000976e-06, 4.887999999998033e-06, 5.180999999999936e-06...</msg>
<status status="PASS" starttime="20201115 22:11:12.391" endtime="20201115 22:11:12.404"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:12.409" level="INFO">NAME: 00-overhead-24-set</msg>
<status status="PASS" starttime="20201115 22:11:12.408" endtime="20201115 22:11:12.409"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:12.412" level="INFO">VALUE: [4.903000000000546e-06, 5.1799999999969926e-06, 4.916000000000642e-06, 4.903000000000546e-06, 5.180999999999936e-06, 4.889000000000976e-06, 4.887999999998033e-06, 5.180999999999936e-06, 4.903000000000546e-06, 4.889000000000976e-06, 5.153000000000796e-06, 4.930999999999686e-06, 4.8889999999975065e-06, 5.207999999999602e-06, 4.832999999999227e-06, 4.917000000000116e-06, 5.1949999999995056e-06, 4.917000000000116e-06, 4.903000000000546e-06, 5.1249999999981866e-06, 4.875000000001406e-06, 4.889000000000976e-06, 5.2499999999983116e-06, 4.8749999999979365e-06, 4.8749999999979365e-06, 5.1249999999981866e-06, 4.903000000000546e-06, 4.903000000000546e-06, 5.180999999999936e-06, 4.903000000000546e-06, 4.930000000000212e-06, 5.207999999999602e-06, 4.847000000002266e-06, 4.889000000000976e-06, 5.1949999999995056e-06, 4.903000000000546e-06, 4.903000000000546e-06, 5.180000000000462e-06, 4.8749999999979365e-06, 4.903000000000546e-06, 5.194000000000032e-06, 4.888000000001502e-06, 4.875000000001406e-06, 5.207999999999602e-06, 4.917000000000116e-06, 4.903000000000546e-06, 5.180000000000462e-06, 4.903000000000546e-06, 4.943999999999782e-06, 5.180000000000462e-06]</msg>
<status status="PASS" starttime="20201115 22:11:12.410" endtime="20201115 22:11:12.412"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.405" endtime="20201115 22:11:12.413"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:12.415" endtime="20201115 22:11:12.416"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:12.418" endtime="20201115 22:11:12.438"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.417" endtime="20201115 22:11:12.438"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.413" endtime="20201115 22:11:12.439"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.043" endtime="20201115 22:11:12.439"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.041" endtime="20201115 22:11:12.439"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.040" endtime="20201115 22:11:12.440"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:12.442" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:12.451" endtime="20201115 22:11:12.469"></status>
</kw>
<msg timestamp="20201115 22:11:12.470" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:12.449" endtime="20201115 22:11:12.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:12.472" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:12.471" endtime="20201115 22:11:12.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:12.473" endtime="20201115 22:11:12.475"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.446" endtime="20201115 22:11:12.476"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.444" endtime="20201115 22:11:12.476"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:12.483" endtime="20201115 22:11:12.769"></status>
</kw>
<msg timestamp="20201115 22:11:12.772" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024690472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024695514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:12.481" endtime="20201115 22:11:12.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:12.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024690472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024695514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:12.773" endtime="20201115 22:11:12.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:12.782" endtime="20201115 22:11:12.783"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.478" endtime="20201115 22:11:12.784"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.477" endtime="20201115 22:11:12.784"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:12.788" level="INFO">${RESULT} = [{'time': 0.024695514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.041999999996771e-06, 'source_diff': 5.041999999996771e-06}, {'time': 0.024862708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:12.785" endtime="20201115 22:11:12.789"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:12.804" level="INFO">${OVERHEAD} = {'source_diff': [5.041999999996771e-06, 5.332999999999727e-06, 5.042000000000241e-06, 5.026999999997728e-06, 5.332999999999727e-06, 5.0139999999976315e-06, 5.027999999997201e-06, 5.332999999999727e-06...</msg>
<status status="PASS" starttime="20201115 22:11:12.790" endtime="20201115 22:11:12.804"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:12.808" level="INFO">NAME: 00-overhead-25-set</msg>
<status status="PASS" starttime="20201115 22:11:12.807" endtime="20201115 22:11:12.809"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:12.811" level="INFO">VALUE: [5.041999999996771e-06, 5.332999999999727e-06, 5.042000000000241e-06, 5.026999999997728e-06, 5.332999999999727e-06, 5.0139999999976315e-06, 5.027999999997201e-06, 5.332999999999727e-06, 4.9999999999980616e-06, 5.014000000001101e-06, 5.319000000000157e-06, 5.014000000001101e-06, 5.027999999997201e-06, 5.319000000000157e-06, 5.041000000000767e-06, 5.014000000001101e-06, 5.332999999999727e-06, 5.028000000000671e-06, 4.971999999998922e-06, 5.291999999997021e-06, 5.041000000000767e-06, 5.042000000000241e-06, 5.3339999999992005e-06, 5.014000000001101e-06, 5.042000000000241e-06, 5.319000000000157e-06, 5.040999999997298e-06, 5.041000000000767e-06, 5.3339999999992005e-06, 5.028000000000671e-06, 4.971999999998922e-06, 5.346999999999297e-06, 5.05600000000328e-06, 5.055000000000337e-06, 5.3339999999992005e-06, 5.041000000000767e-06, 5.055999999999811e-06, 5.305000000000587e-06, 5.014000000001101e-06, 5.027999999997201e-06, 5.332999999996257e-06, 5.041999999996771e-06, 4.9999999999980616e-06, 5.304999999997118e-06, 5.055999999996341e-06, 5.01400000000457e-06, 5.332999999996257e-06, 5.02800000000414e-06, 5.055999999996341e-06, 5.3200000000031e-06]</msg>
<status status="PASS" starttime="20201115 22:11:12.810" endtime="20201115 22:11:12.811"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.805" endtime="20201115 22:11:12.812"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:12.814" endtime="20201115 22:11:12.815"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:12.818" endtime="20201115 22:11:12.837"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.816" endtime="20201115 22:11:12.838"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.812" endtime="20201115 22:11:12.838"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.442" endtime="20201115 22:11:12.838"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.441" endtime="20201115 22:11:12.839"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.440" endtime="20201115 22:11:12.839"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:02.954" endtime="20201115 22:11:12.839"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="teardown">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:12.843" endtime="20201115 22:11:12.863"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.842" endtime="20201115 22:11:12.863"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.840" endtime="20201115 22:11:12.864"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:11:02.882" endtime="20201115 22:11:12.864" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Remove List">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:12.871" endtime="20201115 22:11:12.891"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.870" endtime="20201115 22:11:12.891"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:12.904" endtime="20201115 22:11:12.919"></status>
</kw>
<msg timestamp="20201115 22:11:12.920" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:12.903" endtime="20201115 22:11:12.920"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:12.922" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:12.921" endtime="20201115 22:11:12.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:11:12.925" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:11:12.923" endtime="20201115 22:11:12.926"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:12.900" endtime="20201115 22:11:12.927"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:12.898" endtime="20201115 22:11:12.927"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.897" endtime="20201115 22:11:12.928"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:11:12.932" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:11:12.931" endtime="20201115 22:11:12.932"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.929" endtime="20201115 22:11:12.932"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.896" endtime="20201115 22:11:12.932"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.895" endtime="20201115 22:11:12.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:12.933" endtime="20201115 22:11:12.935"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.894" endtime="20201115 22:11:12.935"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.892" endtime="20201115 22:11:12.936"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.869" endtime="20201115 22:11:12.936"></status>
</kw>
<kw name="${n} IN RANGE [ 25 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:12.939" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:12.949" endtime="20201115 22:11:12.961"></status>
</kw>
<msg timestamp="20201115 22:11:12.961" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:12.947" endtime="20201115 22:11:12.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:12.963" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:12.962" endtime="20201115 22:11:12.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:12.965" endtime="20201115 22:11:12.966"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.944" endtime="20201115 22:11:12.967"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.942" endtime="20201115 22:11:12.967"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:12.974" endtime="20201115 22:11:13.259"></status>
</kw>
<msg timestamp="20201115 22:11:13.263" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069648611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069651972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:12.972" endtime="20201115 22:11:13.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:13.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069648611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069651972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:13.264" endtime="20201115 22:11:13.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:13.272" endtime="20201115 22:11:13.274"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.970" endtime="20201115 22:11:13.274"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.968" endtime="20201115 22:11:13.275"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:13.279" level="INFO">${RESULT} = [{'time': 0.069651972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.361000000007275e-06, 'source_diff': 3.361000000007275e-06}, {'time': 0.069685681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:13.276" endtime="20201115 22:11:13.279"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:13.293" level="INFO">${OVERHEAD} = {'source_diff': [3.361000000007275e-06, 3.209000000004014e-06, 3.1809999999909966e-06, 3.2219999999971716e-06, 3.2080000000045406e-06, 3.179999999991523e-06, 3.2079999999906628e-06, 3.179999999991523e...</msg>
<status status="PASS" starttime="20201115 22:11:13.280" endtime="20201115 22:11:13.294"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:13.299" level="INFO">NAME: 00-overhead-1-remove</msg>
<status status="PASS" starttime="20201115 22:11:13.297" endtime="20201115 22:11:13.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:13.301" level="INFO">VALUE: [3.361000000007275e-06, 3.209000000004014e-06, 3.1809999999909966e-06, 3.2219999999971716e-06, 3.2080000000045406e-06, 3.179999999991523e-06, 3.2079999999906628e-06, 3.179999999991523e-06, 3.1949999999975054e-06, 3.2080000000045406e-06, 3.1949999999975054e-06, 3.1939999999980317e-06, 3.2080000000045406e-06, 3.2629999999894688e-06, 3.1949999999975054e-06, 3.1939999999980317e-06, 3.179999999991523e-06, 3.195000000011383e-06, 3.209000000004014e-06, 3.1530000000057345e-06, 3.1809999999909966e-06, 3.1939999999980317e-06, 3.29200000000196e-06, 3.2079999999906628e-06, 3.2080000000045406e-06, 3.2630000000033466e-06, 3.1389999999992257e-06, 3.1800000000054007e-06, 3.1809999999909966e-06, 3.1939999999980317e-06, 3.2219999999971716e-06, 3.2639999999889424e-06, 3.1390000000131035e-06, 3.1800000000054007e-06, 3.2229999999966452e-06, 3.1949999999975054e-06, 3.1939999999980317e-06, 3.2080000000045406e-06, 3.2219999999971716e-06, 3.1949999999975054e-06, 3.152000000006261e-06, 3.2219999999971716e-06, 3.2080000000045406e-06, 3.2079999999906628e-06, 3.2080000000045406e-06, 3.1949999999975054e-06, 3.137999999999752e-06, 3.1939999999980317e-06, 3.1939999999980317e-06, 3.2080000000045406e-06]</msg>
<status status="PASS" starttime="20201115 22:11:13.300" endtime="20201115 22:11:13.301"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.294" endtime="20201115 22:11:13.302"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:13.304" endtime="20201115 22:11:13.305"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:13.308" endtime="20201115 22:11:13.327"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.306" endtime="20201115 22:11:13.328"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.303" endtime="20201115 22:11:13.328"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.940" endtime="20201115 22:11:13.328"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.938" endtime="20201115 22:11:13.329"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.937" endtime="20201115 22:11:13.329"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:13.331" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:13.340" endtime="20201115 22:11:13.352"></status>
</kw>
<msg timestamp="20201115 22:11:13.353" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:13.338" endtime="20201115 22:11:13.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:13.355" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:13.354" endtime="20201115 22:11:13.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:13.356" endtime="20201115 22:11:13.358"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.336" endtime="20201115 22:11:13.358"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.334" endtime="20201115 22:11:13.359"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:13.365" endtime="20201115 22:11:13.651"></status>
</kw>
<msg timestamp="20201115 22:11:13.654" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0248265, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024830861, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:11:13.364" endtime="20201115 22:11:13.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:13.662" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0248265, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024830861, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:11:13.655" endtime="20201115 22:11:13.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:13.664" endtime="20201115 22:11:13.666"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.361" endtime="20201115 22:11:13.667"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.359" endtime="20201115 22:11:13.667"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:13.672" level="INFO">${RESULT} = [{'time': 0.024830861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.360999999997867e-06, 'source_diff': 4.360999999997867e-06}, {'time': 0.024870069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:13.668" endtime="20201115 22:11:13.672"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:13.685" level="INFO">${OVERHEAD} = {'source_diff': [4.360999999997867e-06, 4.138000000000752e-06, 3.971999999997922e-06, 4.000000000000531e-06, 4.152000000000322e-06, 3.986999999996965e-06, 4.014000000000101e-06, 4.139000000000226e-06,...</msg>
<status status="PASS" starttime="20201115 22:11:13.673" endtime="20201115 22:11:13.685"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:13.690" level="INFO">NAME: 00-overhead-2-remove</msg>
<status status="PASS" starttime="20201115 22:11:13.689" endtime="20201115 22:11:13.690"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:13.692" level="INFO">VALUE: [4.360999999997867e-06, 4.138000000000752e-06, 3.971999999997922e-06, 4.000000000000531e-06, 4.152000000000322e-06, 3.986999999996965e-06, 4.014000000000101e-06, 4.139000000000226e-06, 3.917000000002585e-06, 4.013000000000627e-06, 4.139000000000226e-06, 3.972999999997395e-06, 4.000000000000531e-06, 4.125000000000656e-06, 3.958000000001821e-06, 4.0559999999988106e-06, 4.139000000000226e-06, 3.986000000000961e-06, 3.987000000000435e-06, 4.111000000001086e-06, 3.944000000002251e-06, 4.000000000000531e-06, 4.139000000000226e-06, 3.971999999997922e-06, 4.014000000000101e-06, 4.125000000000656e-06, 3.971999999997922e-06, 4.027999999999671e-06, 4.1809999999989356e-06, 3.972000000001391e-06, 4.014000000000101e-06, 4.125000000000656e-06, 3.987000000000435e-06, 4.013000000000627e-06, 4.125000000000656e-06, 3.972999999997395e-06, 3.986000000000961e-06, 4.165999999999892e-06, 3.986000000000961e-06, 3.958000000001821e-06, 4.139000000000226e-06, 3.972000000001391e-06, 4.014000000000101e-06, 4.069000000002376e-06, 3.986000000000961e-06, 4.027000000000197e-06, 4.152999999999796e-06, 3.971999999997922e-06, 4.000000000000531e-06, 4.152999999999796e-06]</msg>
<status status="PASS" starttime="20201115 22:11:13.691" endtime="20201115 22:11:13.693"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.686" endtime="20201115 22:11:13.693"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:13.695" endtime="20201115 22:11:13.697"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:13.699" endtime="20201115 22:11:13.718"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.697" endtime="20201115 22:11:13.719"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.694" endtime="20201115 22:11:13.719"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.332" endtime="20201115 22:11:13.720"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.330" endtime="20201115 22:11:13.720"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.329" endtime="20201115 22:11:13.720"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:13.722" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:13.731" endtime="20201115 22:11:13.743"></status>
</kw>
<msg timestamp="20201115 22:11:13.744" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:13.730" endtime="20201115 22:11:13.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:13.746" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:13.745" endtime="20201115 22:11:13.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:13.747" endtime="20201115 22:11:13.749"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.727" endtime="20201115 22:11:13.750"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.725" endtime="20201115 22:11:13.750"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:13.757" endtime="20201115 22:11:14.044"></status>
</kw>
<msg timestamp="20201115 22:11:14.048" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024748028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024752583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:13.755" endtime="20201115 22:11:14.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:14.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024748028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024752583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:14.049" endtime="20201115 22:11:14.057"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:14.058" endtime="20201115 22:11:14.059"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.752" endtime="20201115 22:11:14.060"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.751" endtime="20201115 22:11:14.060"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:14.064" level="INFO">${RESULT} = [{'time': 0.024752583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.555000000003306e-06, 'source_diff': 4.555000000003306e-06}, {'time': 0.024796903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:14.061" endtime="20201115 22:11:14.065"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:14.078" level="INFO">${OVERHEAD} = {'source_diff': [4.555000000003306e-06, 4.3339999999982e-06, 4.193999999999032e-06, 4.209000000001545e-06, 4.389000000000476e-06, 4.194000000002501e-06, 4.152999999999796e-06, 4.34800000000124e-06, 4....</msg>
<status status="PASS" starttime="20201115 22:11:14.065" endtime="20201115 22:11:14.078"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:14.082" level="INFO">NAME: 00-overhead-3-remove</msg>
<status status="PASS" starttime="20201115 22:11:14.081" endtime="20201115 22:11:14.083"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:14.085" level="INFO">VALUE: [4.555000000003306e-06, 4.3339999999982e-06, 4.193999999999032e-06, 4.209000000001545e-06, 4.389000000000476e-06, 4.194000000002501e-06, 4.152999999999796e-06, 4.34800000000124e-06, 4.193999999999032e-06, 4.11200000000056e-06, 4.332999999998727e-06, 4.1249999999971865e-06, 4.193999999999032e-06, 4.34800000000124e-06, 4.195000000001975e-06, 4.193999999999032e-06, 4.36199999999734e-06, 4.166999999999366e-06, 4.181000000002405e-06, 4.33400000000167e-06, 4.207999999998602e-06, 4.193999999999032e-06, 4.360999999997867e-06, 4.179999999999462e-06, 4.125000000000656e-06, 4.332999999998727e-06, 4.207999999998602e-06, 4.1809999999989356e-06, 4.318999999999157e-06, 4.165999999999892e-06, 4.1949999999985055e-06, 4.264000000000351e-06, 4.1949999999985055e-06, 4.152999999999796e-06, 4.319000000002626e-06, 4.195000000001975e-06, 4.179999999999462e-06, 4.347000000001766e-06, 4.237000000000685e-06, 4.166999999999366e-06, 4.3339999999982e-06, 4.179999999999462e-06, 4.179999999999462e-06, 4.347000000001766e-06, 4.193999999999032e-06, 4.166999999999366e-06, 4.360999999997867e-06, 4.153000000003265e-06, 4.193999999999032e-06, 4.347000000001766e-06]</msg>
<status status="PASS" starttime="20201115 22:11:14.083" endtime="20201115 22:11:14.085"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.079" endtime="20201115 22:11:14.086"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:14.088" endtime="20201115 22:11:14.089"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:14.091" endtime="20201115 22:11:14.111"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.090" endtime="20201115 22:11:14.111"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.086" endtime="20201115 22:11:14.112"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.723" endtime="20201115 22:11:14.112"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.721" endtime="20201115 22:11:14.112"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.720" endtime="20201115 22:11:14.112"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:14.115" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:14.124" endtime="20201115 22:11:14.136"></status>
</kw>
<msg timestamp="20201115 22:11:14.136" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:14.122" endtime="20201115 22:11:14.136"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:14.139" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:14.137" endtime="20201115 22:11:14.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:14.140" endtime="20201115 22:11:14.141"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.119" endtime="20201115 22:11:14.142"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.117" endtime="20201115 22:11:14.142"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:14.149" endtime="20201115 22:11:14.437"></status>
</kw>
<msg timestamp="20201115 22:11:14.441" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024657528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024662292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:14.148" endtime="20201115 22:11:14.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:14.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024657528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024662292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:14.442" endtime="20201115 22:11:14.449"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:14.450" endtime="20201115 22:11:14.452"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.145" endtime="20201115 22:11:14.452"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.143" endtime="20201115 22:11:14.453"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:14.457" level="INFO">${RESULT} = [{'time': 0.024662292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7639999999973814e-06, 'source_diff': 4.7639999999973814e-06}, {'time': 0.024711028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:14.453" endtime="20201115 22:11:14.457"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:14.470" level="INFO">${OVERHEAD} = {'source_diff': [4.7639999999973814e-06, 4.514000000000601e-06, 4.36199999999734e-06, 4.389000000000476e-06, 4.528000000000171e-06, 4.36200000000081e-06, 4.34800000000124e-06, 4.528000000000171e-06, 4...</msg>
<status status="PASS" starttime="20201115 22:11:14.458" endtime="20201115 22:11:14.471"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:14.475" level="INFO">NAME: 00-overhead-4-remove</msg>
<status status="PASS" starttime="20201115 22:11:14.474" endtime="20201115 22:11:14.475"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:14.477" level="INFO">VALUE: [4.7639999999973814e-06, 4.514000000000601e-06, 4.36199999999734e-06, 4.389000000000476e-06, 4.528000000000171e-06, 4.36200000000081e-06, 4.34800000000124e-06, 4.528000000000171e-06, 4.388000000001002e-06, 4.389000000000476e-06, 4.514000000000601e-06, 4.361000000001336e-06, 4.332999999998727e-06, 4.528000000000171e-06, 4.360999999997867e-06, 4.3199999999986305e-06, 4.540999999996798e-06, 4.375000000000906e-06, 4.403000000000046e-06, 4.527000000000697e-06, 4.3749999999974365e-06, 4.403000000000046e-06, 4.514000000000601e-06, 4.403000000000046e-06, 4.402000000000572e-06, 4.4999999999975615e-06, 4.375000000000906e-06, 4.375000000000906e-06, 4.555999999999311e-06, 4.389000000000476e-06, 4.375000000000906e-06, 4.528000000000171e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.513999999997131e-06, 4.36200000000081e-06, 4.389000000000476e-06, 4.541000000000267e-06, 4.347000000001766e-06, 4.375000000000906e-06, 4.500000000001031e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.514000000000601e-06, 4.389000000000476e-06, 4.34799999999777e-06, 4.486000000001461e-06, 4.375000000000906e-06, 4.375000000000906e-06, 4.514000000000601e-06]</msg>
<status status="PASS" starttime="20201115 22:11:14.476" endtime="20201115 22:11:14.478"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.471" endtime="20201115 22:11:14.478"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:14.481" endtime="20201115 22:11:14.482"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:14.484" endtime="20201115 22:11:14.503"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.482" endtime="20201115 22:11:14.504"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.479" endtime="20201115 22:11:14.504"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.115" endtime="20201115 22:11:14.505"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.114" endtime="20201115 22:11:14.505"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.113" endtime="20201115 22:11:14.505"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:14.507" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:14.516" endtime="20201115 22:11:14.529"></status>
</kw>
<msg timestamp="20201115 22:11:14.530" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:14.515" endtime="20201115 22:11:14.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:14.532" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:14.531" endtime="20201115 22:11:14.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:14.533" endtime="20201115 22:11:14.535"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.512" endtime="20201115 22:11:14.535"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.510" endtime="20201115 22:11:14.536"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:14.542" endtime="20201115 22:11:14.828"></status>
</kw>
<msg timestamp="20201115 22:11:14.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024706125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024711069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:14.541" endtime="20201115 22:11:14.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:14.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024706125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024711069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:14.833" endtime="20201115 22:11:14.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:14.841" endtime="20201115 22:11:14.843"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.538" endtime="20201115 22:11:14.843"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.536" endtime="20201115 22:11:14.844"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:14.848" level="INFO">${RESULT} = [{'time': 0.024711069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.943999999999782e-06, 'source_diff': 4.943999999999782e-06}, {'time': 0.024764542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:14.844" endtime="20201115 22:11:14.848"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:14.861" level="INFO">${OVERHEAD} = {'source_diff': [4.943999999999782e-06, 4.750000000001281e-06, 4.5839999999984504e-06, 4.568999999999407e-06, 4.735999999998242e-06, 4.583000000002446e-06, 4.555999999999311e-06, 4.721999999998672e-06...</msg>
<status status="PASS" starttime="20201115 22:11:14.849" endtime="20201115 22:11:14.861"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:14.866" level="INFO">NAME: 00-overhead-5-remove</msg>
<status status="PASS" starttime="20201115 22:11:14.865" endtime="20201115 22:11:14.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:14.868" level="INFO">VALUE: [4.943999999999782e-06, 4.750000000001281e-06, 4.5839999999984504e-06, 4.568999999999407e-06, 4.735999999998242e-06, 4.583000000002446e-06, 4.555999999999311e-06, 4.721999999998672e-06, 4.554999999999837e-06, 4.555999999999311e-06, 4.679999999999962e-06, 4.583000000002446e-06, 4.611000000001586e-06, 4.735999999998242e-06, 4.610999999998117e-06, 4.569000000002876e-06, 4.7499999999978115e-06, 4.555999999999311e-06, 4.57000000000235e-06, 4.736000000001711e-06, 4.514000000000601e-06, 4.528000000000171e-06, 4.750000000001281e-06, 4.528000000000171e-06, 4.541999999999741e-06, 4.735999999998242e-06, 4.5699999999988805e-06, 4.582999999998977e-06, 4.709000000002045e-06, 4.554999999999837e-06, 4.541000000000267e-06, 4.709000000002045e-06, 4.582999999998977e-06, 4.625000000001156e-06, 4.722000000002141e-06, 4.5839999999984504e-06, 4.5699999999988805e-06, 4.735999999998242e-06, 4.583000000002446e-06, 4.541999999999741e-06, 4.721999999998672e-06, 4.5699999999988805e-06, 4.541999999999741e-06, 4.695000000002475e-06, 4.555999999999311e-06, 4.5699999999988805e-06, 4.721999999998672e-06, 4.5839999999984504e-06, 4.528000000000171e-06, 4.707999999999102e-06]</msg>
<status status="PASS" starttime="20201115 22:11:14.867" endtime="20201115 22:11:14.869"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.862" endtime="20201115 22:11:14.869"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:14.871" endtime="20201115 22:11:14.873"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:14.875" endtime="20201115 22:11:14.894"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.873" endtime="20201115 22:11:14.895"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.870" endtime="20201115 22:11:14.895"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.508" endtime="20201115 22:11:14.895"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.506" endtime="20201115 22:11:14.896"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.505" endtime="20201115 22:11:14.896"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:14.899" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:14.908" endtime="20201115 22:11:14.921"></status>
</kw>
<msg timestamp="20201115 22:11:14.922" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:14.906" endtime="20201115 22:11:14.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:14.924" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:14.923" endtime="20201115 22:11:14.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:14.925" endtime="20201115 22:11:14.927"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.903" endtime="20201115 22:11:14.927"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.901" endtime="20201115 22:11:14.928"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:14.934" endtime="20201115 22:11:15.221"></status>
</kw>
<msg timestamp="20201115 22:11:15.224" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025297722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025302861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:14.933" endtime="20201115 22:11:15.225"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:15.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025297722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025302861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:15.226" endtime="20201115 22:11:15.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:15.234" endtime="20201115 22:11:15.236"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.930" endtime="20201115 22:11:15.236"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.928" endtime="20201115 22:11:15.237"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:15.241" level="INFO">${RESULT} = [{'time': 0.025302861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.1389999999977565e-06, 'source_diff': 5.1389999999977565e-06}, {'time': 0.025360569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:15.237" endtime="20201115 22:11:15.241"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:15.254" level="INFO">${OVERHEAD} = {'source_diff': [5.1389999999977565e-06, 4.902000000001072e-06, 4.7639999999973814e-06, 4.777999999996951e-06, 4.916000000000642e-06, 4.763000000001377e-06, 4.777000000000947e-06, 4.903000000000546e-0...</msg>
<status status="PASS" starttime="20201115 22:11:15.242" endtime="20201115 22:11:15.254"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:15.259" level="INFO">NAME: 00-overhead-6-remove</msg>
<status status="PASS" starttime="20201115 22:11:15.258" endtime="20201115 22:11:15.259"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:15.261" level="INFO">VALUE: [5.1389999999977565e-06, 4.902000000001072e-06, 4.7639999999973814e-06, 4.777999999996951e-06, 4.916000000000642e-06, 4.763000000001377e-06, 4.777000000000947e-06, 4.903000000000546e-06, 4.737000000001185e-06, 4.778000000000421e-06, 4.903000000000546e-06, 4.777999999996951e-06, 4.777000000000947e-06, 4.903000000000546e-06, 4.7499999999978115e-06, 4.778000000000421e-06, 4.903000000000546e-06, 4.7639999999973814e-06, 4.805000000000087e-06, 4.860999999998367e-06, 4.750000000001281e-06, 4.791000000000517e-06, 4.903000000000546e-06, 4.764000000000851e-06, 4.778000000000421e-06, 4.915999999997173e-06, 4.791999999999991e-06, 4.778000000000421e-06, 4.917000000000116e-06, 4.735999999998242e-06, 4.7639999999973814e-06, 4.903000000000546e-06, 4.7499999999978115e-06, 4.764000000000851e-06, 4.903000000000546e-06, 4.805000000000087e-06, 4.791000000000517e-06, 4.930999999999686e-06, 4.7499999999978115e-06, 4.791999999999991e-06, 4.901999999997603e-06, 4.750000000001281e-06, 4.791999999999991e-06, 4.903000000000546e-06, 4.764000000000851e-06, 4.7639999999973814e-06, 4.917000000000116e-06, 4.764000000000851e-06, 4.764000000000851e-06, 4.915999999997173e-06]</msg>
<status status="PASS" starttime="20201115 22:11:15.260" endtime="20201115 22:11:15.262"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.255" endtime="20201115 22:11:15.262"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:15.265" endtime="20201115 22:11:15.266"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:15.268" endtime="20201115 22:11:15.288"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.267" endtime="20201115 22:11:15.288"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.263" endtime="20201115 22:11:15.289"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.899" endtime="20201115 22:11:15.289"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.897" endtime="20201115 22:11:15.289"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.896" endtime="20201115 22:11:15.289"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:15.292" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:15.301" endtime="20201115 22:11:15.314"></status>
</kw>
<msg timestamp="20201115 22:11:15.315" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:15.299" endtime="20201115 22:11:15.315"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:15.317" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:15.316" endtime="20201115 22:11:15.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:15.319" endtime="20201115 22:11:15.320"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.296" endtime="20201115 22:11:15.321"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.294" endtime="20201115 22:11:15.321"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:15.328" endtime="20201115 22:11:15.614"></status>
</kw>
<msg timestamp="20201115 22:11:15.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024772333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024777722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:15.326" endtime="20201115 22:11:15.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:15.626" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024772333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024777722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:15.618" endtime="20201115 22:11:15.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:15.627" endtime="20201115 22:11:15.629"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.323" endtime="20201115 22:11:15.629"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.322" endtime="20201115 22:11:15.630"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:15.634" level="INFO">${RESULT} = [{'time': 0.024777722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.3889999999980065e-06, 'source_diff': 5.3889999999980065e-06}, {'time': 0.024840083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:15.630" endtime="20201115 22:11:15.634"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:15.647" level="INFO">${OVERHEAD} = {'source_diff': [5.3889999999980065e-06, 5.068999999999907e-06, 4.957999999999352e-06, 4.889000000000976e-06, 5.166000000000892e-06, 4.957999999999352e-06, 4.986000000001961e-06, 5.0839999999989505e-0...</msg>
<status status="PASS" starttime="20201115 22:11:15.635" endtime="20201115 22:11:15.648"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:15.652" level="INFO">NAME: 00-overhead-7-remove</msg>
<status status="PASS" starttime="20201115 22:11:15.651" endtime="20201115 22:11:15.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:15.654" level="INFO">VALUE: [5.3889999999980065e-06, 5.068999999999907e-06, 4.957999999999352e-06, 4.889000000000976e-06, 5.166000000000892e-06, 4.957999999999352e-06, 4.986000000001961e-06, 5.0839999999989505e-06, 4.9589999999988255e-06, 4.971999999998922e-06, 5.110999999998617e-06, 4.943999999999782e-06, 4.957999999999352e-06, 5.096999999999047e-06, 5.042000000000241e-06, 4.917000000000116e-06, 5.110999999998617e-06, 4.972000000002391e-06, 4.986000000001961e-06, 5.110999999998617e-06, 4.973000000001865e-06, 4.972999999998395e-06, 5.110999999998617e-06, 4.971999999998922e-06, 4.957999999999352e-06, 5.110999999998617e-06, 4.9449999999992555e-06, 4.971999999998922e-06, 5.1249999999981866e-06, 4.958000000002821e-06, 5.014000000001101e-06, 5.11199999999809e-06, 4.986000000001961e-06, 4.972000000002391e-06, 5.110999999998617e-06, 4.971999999998922e-06, 4.971999999998922e-06, 5.139000000001226e-06, 4.986000000001961e-06, 4.959000000002295e-06, 5.1249999999981866e-06, 4.957999999999352e-06, 4.971999999998922e-06, 5.110999999998617e-06, 4.972000000002391e-06, 4.957999999999352e-06, 5.207999999999602e-06, 4.972000000002391e-06, 4.971999999998922e-06, 5.1249999999981866e-06]</msg>
<status status="PASS" starttime="20201115 22:11:15.653" endtime="20201115 22:11:15.659"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.648" endtime="20201115 22:11:15.659"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:15.662" endtime="20201115 22:11:15.663"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:15.665" endtime="20201115 22:11:15.684"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.664" endtime="20201115 22:11:15.685"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.660" endtime="20201115 22:11:15.686"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.292" endtime="20201115 22:11:15.686"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.291" endtime="20201115 22:11:15.686"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.290" endtime="20201115 22:11:15.686"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:15.689" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:15.697" endtime="20201115 22:11:15.711"></status>
</kw>
<msg timestamp="20201115 22:11:15.711" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:15.696" endtime="20201115 22:11:15.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:15.714" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:15.712" endtime="20201115 22:11:15.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:15.715" endtime="20201115 22:11:15.716"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.693" endtime="20201115 22:11:15.717"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.691" endtime="20201115 22:11:15.717"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:15.724" endtime="20201115 22:11:16.012"></status>
</kw>
<msg timestamp="20201115 22:11:16.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025038458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025044, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:11:15.722" endtime="20201115 22:11:16.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:16.023" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025038458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025044, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:11:16.016" endtime="20201115 22:11:16.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:16.025" endtime="20201115 22:11:16.026"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.720" endtime="20201115 22:11:16.027"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.718" endtime="20201115 22:11:16.027"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:16.032" level="INFO">${RESULT} = [{'time': 0.025044, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.542000000000741e-06, 'source_diff': 5.542000000000741e-06}, {'time': 0.025111667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 22:11:16.028" endtime="20201115 22:11:16.032"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:16.045" level="INFO">${OVERHEAD} = {'source_diff': [5.542000000000741e-06, 5.292000000000491e-06, 5.152999999997326e-06, 5.153000000000796e-06, 5.221999999999172e-06, 5.153000000000796e-06, 5.207999999999602e-06, 5.306000000000061e-06,...</msg>
<status status="PASS" starttime="20201115 22:11:16.033" endtime="20201115 22:11:16.045"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:16.050" level="INFO">NAME: 00-overhead-8-remove</msg>
<status status="PASS" starttime="20201115 22:11:16.048" endtime="20201115 22:11:16.050"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:16.052" level="INFO">VALUE: [5.542000000000741e-06, 5.292000000000491e-06, 5.152999999997326e-06, 5.153000000000796e-06, 5.221999999999172e-06, 5.153000000000796e-06, 5.207999999999602e-06, 5.306000000000061e-06, 5.180000000000462e-06, 5.167000000000366e-06, 5.292000000000491e-06, 5.1389999999977565e-06, 5.221999999999172e-06, 5.306000000000061e-06, 5.167000000000366e-06, 5.153000000000796e-06, 5.306000000000061e-06, 5.1389999999977565e-06, 5.180999999999936e-06, 5.319000000000157e-06, 5.1389999999977565e-06, 5.180000000000462e-06, 5.291000000001017e-06, 5.194000000000032e-06, 5.166999999996896e-06, 5.292000000000491e-06, 5.152999999997326e-06, 5.153000000000796e-06, 5.319000000000157e-06, 5.167000000000366e-06, 5.207999999999602e-06, 5.306000000000061e-06, 5.152000000001322e-06, 5.139000000001226e-06, 5.306000000000061e-06, 5.152000000001322e-06, 5.180999999999936e-06, 5.306000000000061e-06, 5.139000000001226e-06, 5.166999999996896e-06, 5.319000000000157e-06, 5.153000000000796e-06, 5.180000000000462e-06, 5.319999999999631e-06, 5.180000000000462e-06, 5.180000000000462e-06, 5.306000000000061e-06, 5.153000000000796e-06, 5.165999999997423e-06, 5.291999999997021e-06]</msg>
<status status="PASS" starttime="20201115 22:11:16.051" endtime="20201115 22:11:16.053"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.046" endtime="20201115 22:11:16.053"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:16.056" endtime="20201115 22:11:16.057"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:16.059" endtime="20201115 22:11:16.078"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.058" endtime="20201115 22:11:16.079"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.054" endtime="20201115 22:11:16.079"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.689" endtime="20201115 22:11:16.080"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.687" endtime="20201115 22:11:16.080"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.687" endtime="20201115 22:11:16.080"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:16.082" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:16.091" endtime="20201115 22:11:16.106"></status>
</kw>
<msg timestamp="20201115 22:11:16.106" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:16.090" endtime="20201115 22:11:16.107"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:16.109" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:16.108" endtime="20201115 22:11:16.109"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:16.110" endtime="20201115 22:11:16.112"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.087" endtime="20201115 22:11:16.112"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.085" endtime="20201115 22:11:16.113"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:16.119" endtime="20201115 22:11:16.406"></status>
</kw>
<msg timestamp="20201115 22:11:16.409" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025121986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025127653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:16.118" endtime="20201115 22:11:16.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:16.417" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025121986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025127653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:16.410" endtime="20201115 22:11:16.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:16.419" endtime="20201115 22:11:16.420"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.115" endtime="20201115 22:11:16.421"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.113" endtime="20201115 22:11:16.421"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:16.425" level="INFO">${RESULT} = [{'time': 0.025127653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.667000000000866e-06, 'source_diff': 5.667000000000866e-06}, {'time': 0.025200167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:16.422" endtime="20201115 22:11:16.426"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:16.439" level="INFO">${OVERHEAD} = {'source_diff': [5.667000000000866e-06, 5.499999999998562e-06, 5.360999999998867e-06, 5.361000000002336e-06, 5.499999999998562e-06, 5.346999999999297e-06, 5.3339999999992005e-06, 5.457999999999852e-06...</msg>
<status status="PASS" starttime="20201115 22:11:16.427" endtime="20201115 22:11:16.440"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:16.444" level="INFO">NAME: 00-overhead-9-remove</msg>
<status status="PASS" starttime="20201115 22:11:16.443" endtime="20201115 22:11:16.445"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:16.447" level="INFO">VALUE: [5.667000000000866e-06, 5.499999999998562e-06, 5.360999999998867e-06, 5.361000000002336e-06, 5.499999999998562e-06, 5.346999999999297e-06, 5.3339999999992005e-06, 5.457999999999852e-06, 5.346999999999297e-06, 5.374999999998437e-06, 5.457999999999852e-06, 5.360999999998867e-06, 5.33400000000267e-06, 5.5139999999981315e-06, 5.360999999998867e-06, 5.375000000001906e-06, 5.5139999999981315e-06, 5.360999999998867e-06, 5.388000000002002e-06, 5.499999999998562e-06, 5.360999999998867e-06, 5.34800000000224e-06, 5.514000000001601e-06, 5.346999999999297e-06, 5.360999999998867e-06, 5.500000000002031e-06, 5.360999999998867e-06, 5.34799999999877e-06, 5.499999999998562e-06, 5.36199999999834e-06, 5.374999999998437e-06, 5.499999999998562e-06, 5.360999999998867e-06, 5.34800000000224e-06, 5.499999999998562e-06, 5.347000000002766e-06, 5.346999999999297e-06, 5.514000000001601e-06, 5.346999999999297e-06, 5.360999999998867e-06, 5.499999999998562e-06, 5.36200000000181e-06, 5.374999999998437e-06, 5.512999999998658e-06, 5.346999999999297e-06, 5.319999999999631e-06, 5.486000000002461e-06, 5.360999999998867e-06, 5.374999999998437e-06, 5.500000000002031e-06]</msg>
<status status="PASS" starttime="20201115 22:11:16.445" endtime="20201115 22:11:16.448"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.440" endtime="20201115 22:11:16.448"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:16.451" endtime="20201115 22:11:16.452"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:16.455" endtime="20201115 22:11:16.474"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.453" endtime="20201115 22:11:16.475"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.449" endtime="20201115 22:11:16.475"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.083" endtime="20201115 22:11:16.475"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.081" endtime="20201115 22:11:16.476"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.081" endtime="20201115 22:11:16.476"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:16.478" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:16.487" endtime="20201115 22:11:16.502"></status>
</kw>
<msg timestamp="20201115 22:11:16.502" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:16.485" endtime="20201115 22:11:16.503"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:16.505" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:16.503" endtime="20201115 22:11:16.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:16.506" endtime="20201115 22:11:16.508"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.483" endtime="20201115 22:11:16.508"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.481" endtime="20201115 22:11:16.509"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:16.515" endtime="20201115 22:11:16.802"></status>
</kw>
<msg timestamp="20201115 22:11:16.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025014722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025020639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:16.513" endtime="20201115 22:11:16.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:16.813" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025014722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025020639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:16.806" endtime="20201115 22:11:16.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:16.815" endtime="20201115 22:11:16.816"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.511" endtime="20201115 22:11:16.817"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.509" endtime="20201115 22:11:16.818"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:16.822" level="INFO">${RESULT} = [{'time': 0.025020639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.917000000001116e-06, 'source_diff': 5.917000000001116e-06}, {'time': 0.025098167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:16.818" endtime="20201115 22:11:16.822"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:16.835" level="INFO">${OVERHEAD} = {'source_diff': [5.917000000001116e-06, 5.7089999999995755e-06, 5.554999999997368e-06, 5.555000000000837e-06, 5.737000000002185e-06, 5.542000000000741e-06, 5.61199999999859e-06, 5.681000000000436e-06,...</msg>
<status status="PASS" starttime="20201115 22:11:16.823" endtime="20201115 22:11:16.835"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:16.840" level="INFO">NAME: 00-overhead-10-remove</msg>
<status status="PASS" starttime="20201115 22:11:16.839" endtime="20201115 22:11:16.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:16.842" level="INFO">VALUE: [5.917000000001116e-06, 5.7089999999995755e-06, 5.554999999997368e-06, 5.555000000000837e-06, 5.737000000002185e-06, 5.542000000000741e-06, 5.61199999999859e-06, 5.681000000000436e-06, 5.526999999998228e-06, 5.528000000001171e-06, 5.653000000001296e-06, 5.555999999996841e-06, 5.555000000000837e-06, 5.695000000000006e-06, 5.5139999999981315e-06, 5.555999999996841e-06, 5.721999999999672e-06, 5.542000000000741e-06, 5.624999999998687e-06, 5.694000000000532e-06, 5.528000000001171e-06, 5.556000000000311e-06, 5.680999999996966e-06, 5.542000000000741e-06, 5.554999999997368e-06, 5.666000000001392e-06, 5.542000000000741e-06, 5.569000000000407e-06, 5.680000000000962e-06, 5.569000000000407e-06, 5.569999999999881e-06, 5.6529999999978264e-06, 5.556000000000311e-06, 5.555999999996841e-06, 5.695000000000006e-06, 5.555000000000837e-06, 5.556000000000311e-06, 5.735999999999242e-06, 5.555000000000837e-06, 5.556000000000311e-06, 5.681000000000436e-06, 5.486000000002461e-06, 5.569999999999881e-06, 5.694000000000532e-06, 5.541999999997271e-06, 5.556000000000311e-06, 5.666999999997396e-06, 5.556000000000311e-06, 5.5689999999969375e-06, 5.694000000000532e-06]</msg>
<status status="PASS" starttime="20201115 22:11:16.841" endtime="20201115 22:11:16.842"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.836" endtime="20201115 22:11:16.843"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:16.845" endtime="20201115 22:11:16.847"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:16.849" endtime="20201115 22:11:16.868"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.847" endtime="20201115 22:11:16.869"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.844" endtime="20201115 22:11:16.869"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.479" endtime="20201115 22:11:16.869"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.477" endtime="20201115 22:11:16.870"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.476" endtime="20201115 22:11:16.870"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:16.872" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:16.881" endtime="20201115 22:11:16.895"></status>
</kw>
<msg timestamp="20201115 22:11:16.896" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:16.879" endtime="20201115 22:11:16.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:16.898" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:16.897" endtime="20201115 22:11:16.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:16.900" endtime="20201115 22:11:16.901"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.877" endtime="20201115 22:11:16.902"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.875" endtime="20201115 22:11:16.902"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:16.909" endtime="20201115 22:11:17.196"></status>
</kw>
<msg timestamp="20201115 22:11:17.199" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024785472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024791597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:16.907" endtime="20201115 22:11:17.200"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:17.208" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024785472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024791597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:17.200" endtime="20201115 22:11:17.208"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:17.209" endtime="20201115 22:11:17.210"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.904" endtime="20201115 22:11:17.211"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.903" endtime="20201115 22:11:17.211"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:17.216" level="INFO">${RESULT} = [{'time': 0.024791597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.124999999999187e-06, 'source_diff': 6.124999999999187e-06}, {'time': 0.024874583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:17.212" endtime="20201115 22:11:17.216"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:17.229" level="INFO">${OVERHEAD} = {'source_diff': [6.124999999999187e-06, 5.8889999999985065e-06, 5.749999999998812e-06, 5.694000000000532e-06, 5.915999999998173e-06, 5.708000000000102e-06, 5.735999999999242e-06, 5.8889999999985065e-0...</msg>
<status status="PASS" starttime="20201115 22:11:17.217" endtime="20201115 22:11:17.229"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:17.234" level="INFO">NAME: 00-overhead-11-remove</msg>
<status status="PASS" starttime="20201115 22:11:17.233" endtime="20201115 22:11:17.234"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:17.236" level="INFO">VALUE: [6.124999999999187e-06, 5.8889999999985065e-06, 5.749999999998812e-06, 5.694000000000532e-06, 5.915999999998173e-06, 5.708000000000102e-06, 5.735999999999242e-06, 5.8889999999985065e-06, 5.694000000000532e-06, 5.735999999999242e-06, 5.8889999999985065e-06, 5.750000000002281e-06, 5.749999999998812e-06, 5.9029999999980765e-06, 5.735999999999242e-06, 5.749999999998812e-06, 5.931000000000686e-06, 5.7639999999983815e-06, 5.735999999999242e-06, 5.917000000001116e-06, 5.750000000002281e-06, 5.695000000000006e-06, 5.901999999998603e-06, 5.749999999998812e-06, 5.764000000001851e-06, 5.903000000001546e-06, 5.749999999998812e-06, 5.750000000002281e-06, 5.846999999999797e-06, 5.750000000002281e-06, 5.749999999998812e-06, 5.903000000001546e-06, 5.7639999999983815e-06, 5.735999999999242e-06, 5.889000000001976e-06, 5.735999999999242e-06, 5.792000000000991e-06, 5.945000000000256e-06, 5.749999999998812e-06, 5.721999999999672e-06, 5.8889999999985065e-06, 5.749999999998812e-06, 5.749999999998812e-06, 5.8889999999985065e-06, 5.749999999998812e-06, 5.681000000000436e-06, 5.860999999999367e-06, 5.735999999999242e-06, 5.735999999999242e-06, 5.9029999999980765e-06]</msg>
<status status="PASS" starttime="20201115 22:11:17.235" endtime="20201115 22:11:17.236"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.230" endtime="20201115 22:11:17.237"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:17.239" endtime="20201115 22:11:17.241"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:17.243" endtime="20201115 22:11:17.262"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.241" endtime="20201115 22:11:17.263"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.238" endtime="20201115 22:11:17.263"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.873" endtime="20201115 22:11:17.263"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.871" endtime="20201115 22:11:17.264"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.870" endtime="20201115 22:11:17.264"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:17.266" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:17.275" endtime="20201115 22:11:17.290"></status>
</kw>
<msg timestamp="20201115 22:11:17.290" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:17.273" endtime="20201115 22:11:17.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:17.293" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:17.291" endtime="20201115 22:11:17.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:17.294" endtime="20201115 22:11:17.296"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.271" endtime="20201115 22:11:17.296"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.269" endtime="20201115 22:11:17.297"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:17.303" endtime="20201115 22:11:17.592"></status>
</kw>
<msg timestamp="20201115 22:11:17.595" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024861472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024867736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:17.302" endtime="20201115 22:11:17.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:17.603" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024861472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024867736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:17.596" endtime="20201115 22:11:17.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:17.605" endtime="20201115 22:11:17.606"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.299" endtime="20201115 22:11:17.607"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.297" endtime="20201115 22:11:17.607"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:17.611" level="INFO">${RESULT} = [{'time': 0.024867736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.264000000002351e-06, 'source_diff': 6.264000000002351e-06}, {'time': 0.024956208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:17.608" endtime="20201115 22:11:17.612"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:17.625" level="INFO">${OVERHEAD} = {'source_diff': [6.264000000002351e-06, 6.097000000000047e-06, 5.916999999997646e-06, 5.9729999999993955e-06, 6.083000000000477e-06, 5.9439999999973125e-06, 5.930999999997216e-06, 6.070000000000381e-0...</msg>
<status status="PASS" starttime="20201115 22:11:17.612" endtime="20201115 22:11:17.625"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:17.629" level="INFO">NAME: 00-overhead-12-remove</msg>
<status status="PASS" starttime="20201115 22:11:17.628" endtime="20201115 22:11:17.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:17.632" level="INFO">VALUE: [6.264000000002351e-06, 6.097000000000047e-06, 5.916999999997646e-06, 5.9729999999993955e-06, 6.083000000000477e-06, 5.9439999999973125e-06, 5.930999999997216e-06, 6.070000000000381e-06, 5.945000000000256e-06, 5.944000000000782e-06, 6.0839999999999506e-06, 5.929999999997743e-06, 5.944000000000782e-06, 6.055000000001337e-06, 5.916000000001642e-06, 5.931000000000686e-06, 6.070000000000381e-06, 5.917000000001116e-06, 5.889000000001976e-06, 6.070000000000381e-06, 5.917000000001116e-06, 5.958000000000352e-06, 6.0689999999974376e-06, 5.916999999997646e-06, 5.985999999999492e-06, 6.083000000000477e-06, 5.930000000001212e-06, 5.945000000000256e-06, 6.110999999999617e-06, 5.903000000001546e-06, 5.959000000003295e-06, 6.0689999999974376e-06, 5.931000000000686e-06, 5.971999999999922e-06, 6.070000000000381e-06, 5.916999999997646e-06, 5.9589999999998255e-06, 6.139000000002226e-06, 5.930000000001212e-06, 5.917000000001116e-06, 6.070000000000381e-06, 5.945000000000256e-06, 5.944000000000782e-06, 6.097000000000047e-06, 5.917000000001116e-06, 5.944000000000782e-06, 6.097000000000047e-06, 5.930000000001212e-06, 5.958000000000352e-06, 6.070000000000381e-06]</msg>
<status status="PASS" starttime="20201115 22:11:17.631" endtime="20201115 22:11:17.632"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.626" endtime="20201115 22:11:17.633"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:17.635" endtime="20201115 22:11:17.636"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:17.639" endtime="20201115 22:11:17.658"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.637" endtime="20201115 22:11:17.659"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.634" endtime="20201115 22:11:17.659"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.266" endtime="20201115 22:11:17.659"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.265" endtime="20201115 22:11:17.660"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.264" endtime="20201115 22:11:17.660"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:17.662" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:17.671" endtime="20201115 22:11:17.688"></status>
</kw>
<msg timestamp="20201115 22:11:17.688" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:17.670" endtime="20201115 22:11:17.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:17.691" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:17.689" endtime="20201115 22:11:17.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:17.692" endtime="20201115 22:11:17.693"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.667" endtime="20201115 22:11:17.694"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.664" endtime="20201115 22:11:17.694"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:17.701" endtime="20201115 22:11:17.987"></status>
</kw>
<msg timestamp="20201115 22:11:17.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025266833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025273306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:17.699" endtime="20201115 22:11:17.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:17.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025266833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025273306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:17.992" endtime="20201115 22:11:18.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:18.001" endtime="20201115 22:11:18.002"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.697" endtime="20201115 22:11:18.003"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.695" endtime="20201115 22:11:18.003"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:18.008" level="INFO">${RESULT} = [{'time': 0.025273306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.4729999999998955e-06, 'source_diff': 6.4729999999998955e-06}, {'time': 0.025367417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:18.004" endtime="20201115 22:11:18.008"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:18.021" level="INFO">${OVERHEAD} = {'source_diff': [6.4729999999998955e-06, 6.291999999998021e-06, 6.1389999999987566e-06, 6.1389999999987566e-06, 6.292000000001491e-06, 6.124999999999187e-06, 6.137999999999283e-06, 6.277000000002447e-...</msg>
<status status="PASS" starttime="20201115 22:11:18.009" endtime="20201115 22:11:18.022"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:18.026" level="INFO">NAME: 00-overhead-13-remove</msg>
<status status="PASS" starttime="20201115 22:11:18.025" endtime="20201115 22:11:18.027"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:18.029" level="INFO">VALUE: [6.4729999999998955e-06, 6.291999999998021e-06, 6.1389999999987566e-06, 6.1389999999987566e-06, 6.292000000001491e-06, 6.124999999999187e-06, 6.137999999999283e-06, 6.277000000002447e-06, 6.125000000002656e-06, 6.139000000002226e-06, 6.235999999999742e-06, 6.125000000002656e-06, 6.069000000000907e-06, 6.306000000001061e-06, 6.097000000000047e-06, 6.124999999999187e-06, 6.276999999998978e-06, 6.180000000001462e-06, 6.1389999999987566e-06, 6.2639999999988816e-06, 6.139000000002226e-06, 6.125000000002656e-06, 6.277000000002447e-06, 6.110999999999617e-06, 6.139000000002226e-06, 6.292000000001491e-06, 6.110999999999617e-06, 6.124999999999187e-06, 6.278000000001921e-06, 6.124999999999187e-06, 6.1389999999987566e-06, 6.2779999999984515e-06, 6.166999999997896e-06, 6.1389999999987566e-06, 6.2779999999984515e-06, 6.139000000002226e-06, 6.124999999999187e-06, 6.2639999999988816e-06, 6.0979999999995205e-06, 6.125000000002656e-06, 6.278000000001921e-06, 6.124999999999187e-06, 6.1389999999987566e-06, 6.2639999999988816e-06, 6.152000000002322e-06, 6.110999999999617e-06, 6.292000000001491e-06, 6.1529999999983265e-06, 6.124999999999187e-06, 6.2779999999984515e-06]</msg>
<status status="PASS" starttime="20201115 22:11:18.027" endtime="20201115 22:11:18.029"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.022" endtime="20201115 22:11:18.030"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:18.032" endtime="20201115 22:11:18.034"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:18.037" endtime="20201115 22:11:18.056"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.034" endtime="20201115 22:11:18.057"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.031" endtime="20201115 22:11:18.057"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.662" endtime="20201115 22:11:18.058"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.661" endtime="20201115 22:11:18.058"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.660" endtime="20201115 22:11:18.058"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:18.060" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:18.069" endtime="20201115 22:11:18.085"></status>
</kw>
<msg timestamp="20201115 22:11:18.086" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:18.067" endtime="20201115 22:11:18.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:18.088" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:18.087" endtime="20201115 22:11:18.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:18.089" endtime="20201115 22:11:18.091"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.065" endtime="20201115 22:11:18.091"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.063" endtime="20201115 22:11:18.092"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:18.098" endtime="20201115 22:11:18.385"></status>
</kw>
<msg timestamp="20201115 22:11:18.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025417236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025423944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:18.097" endtime="20201115 22:11:18.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:18.397" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025417236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025423944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:18.390" endtime="20201115 22:11:18.397"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:18.398" endtime="20201115 22:11:18.400"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.094" endtime="20201115 22:11:18.400"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.092" endtime="20201115 22:11:18.401"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:18.405" level="INFO">${RESULT} = [{'time': 0.025423944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.708000000001102e-06, 'source_diff': 6.708000000001102e-06}, {'time': 0.025523903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:18.401" endtime="20201115 22:11:18.405"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:18.418" level="INFO">${OVERHEAD} = {'source_diff': [6.708000000001102e-06, 6.459000000000326e-06, 6.319000000001157e-06, 6.333000000000727e-06, 6.4029999999985765e-06, 6.319000000001157e-06, 6.3329999999972575e-06, 6.458000000000852e-0...</msg>
<status status="PASS" starttime="20201115 22:11:18.406" endtime="20201115 22:11:18.418"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:18.423" level="INFO">NAME: 00-overhead-14-remove</msg>
<status status="PASS" starttime="20201115 22:11:18.422" endtime="20201115 22:11:18.423"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:18.425" level="INFO">VALUE: [6.708000000001102e-06, 6.459000000000326e-06, 6.319000000001157e-06, 6.333000000000727e-06, 6.4029999999985765e-06, 6.319000000001157e-06, 6.3329999999972575e-06, 6.458000000000852e-06, 6.347000000000297e-06, 6.374999999999437e-06, 6.499999999999562e-06, 6.319999999997161e-06, 6.333000000000727e-06, 6.444000000001282e-06, 6.319999999997161e-06, 6.3479999999997705e-06, 6.458000000000852e-06, 6.305000000001587e-06, 6.333000000000727e-06, 6.471999999996952e-06, 6.320000000000631e-06, 6.346999999996827e-06, 6.459000000000326e-06, 6.305000000001587e-06, 6.3479999999997705e-06, 6.458999999996856e-06, 6.333000000000727e-06, 6.333000000000727e-06, 6.444000000001282e-06, 6.320000000000631e-06, 6.347000000000297e-06, 6.458000000000852e-06, 6.375000000002906e-06, 6.319000000001157e-06, 6.472000000000422e-06, 6.278000000001921e-06, 6.320000000000631e-06, 6.458000000000852e-06, 6.388999999999007e-06, 6.347000000000297e-06, 6.458000000000852e-06, 6.320000000000631e-06, 6.334000000000201e-06, 6.485999999999992e-06, 6.318999999997688e-06, 6.318999999997688e-06, 6.458000000000852e-06, 6.306000000001061e-06, 6.334000000000201e-06, 6.458000000000852e-06]</msg>
<status status="PASS" starttime="20201115 22:11:18.424" endtime="20201115 22:11:18.426"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.419" endtime="20201115 22:11:18.427"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:18.429" endtime="20201115 22:11:18.430"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:18.432" endtime="20201115 22:11:18.452"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.431" endtime="20201115 22:11:18.452"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.427" endtime="20201115 22:11:18.453"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.061" endtime="20201115 22:11:18.453"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.059" endtime="20201115 22:11:18.453"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.058" endtime="20201115 22:11:18.454"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:18.456" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:18.465" endtime="20201115 22:11:18.480"></status>
</kw>
<msg timestamp="20201115 22:11:18.480" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:18.463" endtime="20201115 22:11:18.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:18.483" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:18.481" endtime="20201115 22:11:18.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:18.484" endtime="20201115 22:11:18.486"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.461" endtime="20201115 22:11:18.487"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.458" endtime="20201115 22:11:18.487"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:18.494" endtime="20201115 22:11:18.781"></status>
</kw>
<msg timestamp="20201115 22:11:18.784" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024849833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02485675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:11:18.492" endtime="20201115 22:11:18.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:18.793" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024849833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02485675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:11:18.785" endtime="20201115 22:11:18.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:18.794" endtime="20201115 22:11:18.795"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.490" endtime="20201115 22:11:18.796"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.488" endtime="20201115 22:11:18.796"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:18.801" level="INFO">${RESULT} = [{'time': 0.02485675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.9169999999986465e-06, 'source_diff': 6.9169999999986465e-06}, {'time': 0.024962569, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:11:18.797" endtime="20201115 22:11:18.801"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:18.814" level="INFO">${OVERHEAD} = {'source_diff': [6.9169999999986465e-06, 6.651999999999353e-06, 6.514000000002601e-06, 6.570000000000881e-06, 6.611000000000117e-06, 6.555000000001837e-06, 6.540999999998798e-06, 6.6669999999983964e-0...</msg>
<status status="PASS" starttime="20201115 22:11:18.802" endtime="20201115 22:11:18.814"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:18.819" level="INFO">NAME: 00-overhead-15-remove</msg>
<status status="PASS" starttime="20201115 22:11:18.818" endtime="20201115 22:11:18.819"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:18.822" level="INFO">VALUE: [6.9169999999986465e-06, 6.651999999999353e-06, 6.514000000002601e-06, 6.570000000000881e-06, 6.611000000000117e-06, 6.555000000001837e-06, 6.540999999998798e-06, 6.6669999999983964e-06, 6.4729999999998955e-06, 6.472000000000422e-06, 6.679999999998493e-06, 6.541000000002267e-06, 6.540999999998798e-06, 6.6669999999983964e-06, 6.597000000000547e-06, 6.542000000001741e-06, 6.680000000001962e-06, 6.5279999999987015e-06, 6.499999999999562e-06, 6.667000000001866e-06, 6.5279999999987015e-06, 6.513999999999132e-06, 6.667000000001866e-06, 6.542000000001741e-06, 6.570000000000881e-06, 6.6529999999988265e-06, 6.526999999999228e-06, 6.541999999998271e-06, 6.693999999998063e-06, 6.526999999999228e-06, 6.5279999999987015e-06, 6.638999999999257e-06, 6.5279999999987015e-06, 6.528000000002171e-06, 6.665999999998923e-06, 6.4729999999998955e-06, 6.513999999999132e-06, 6.666000000002392e-06, 6.540999999998798e-06, 6.512999999999658e-06, 6.667000000001866e-06, 6.499999999999562e-06, 6.5279999999987015e-06, 6.680999999997966e-06, 6.528000000002171e-06, 6.513999999999132e-06, 6.681000000001436e-06, 6.513999999999132e-06, 6.513999999999132e-06, 6.667000000001866e-06]</msg>
<status status="PASS" starttime="20201115 22:11:18.820" endtime="20201115 22:11:18.822"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.815" endtime="20201115 22:11:18.823"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:18.825" endtime="20201115 22:11:18.826"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:18.828" endtime="20201115 22:11:18.848"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.827" endtime="20201115 22:11:18.848"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.823" endtime="20201115 22:11:18.849"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.456" endtime="20201115 22:11:18.849"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.455" endtime="20201115 22:11:18.849"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.454" endtime="20201115 22:11:18.849"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:18.852" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:18.861" endtime="20201115 22:11:18.876"></status>
</kw>
<msg timestamp="20201115 22:11:18.876" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:18.859" endtime="20201115 22:11:18.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:18.879" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:18.878" endtime="20201115 22:11:18.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:18.880" endtime="20201115 22:11:18.882"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.856" endtime="20201115 22:11:18.882"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.854" endtime="20201115 22:11:18.883"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:18.889" endtime="20201115 22:11:19.178"></status>
</kw>
<msg timestamp="20201115 22:11:19.181" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024944097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024951208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:18.888" endtime="20201115 22:11:19.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:19.189" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024944097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024951208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:19.182" endtime="20201115 22:11:19.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:19.190" endtime="20201115 22:11:19.192"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.885" endtime="20201115 22:11:19.192"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.883" endtime="20201115 22:11:19.193"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:19.197" level="INFO">${RESULT} = [{'time': 0.024951208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.111000000000617e-06, 'source_diff': 7.111000000000617e-06}, {'time': 0.025062569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:19.193" endtime="20201115 22:11:19.197"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:19.211" level="INFO">${OVERHEAD} = {'source_diff': [7.111000000000617e-06, 6.818999999998188e-06, 6.722000000000672e-06, 6.736000000000242e-06, 6.847000000000797e-06, 6.6669999999983964e-06, 6.722000000000672e-06, 6.874999999999937e-06...</msg>
<status status="PASS" starttime="20201115 22:11:19.198" endtime="20201115 22:11:19.211"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:19.215" level="INFO">NAME: 00-overhead-16-remove</msg>
<status status="PASS" starttime="20201115 22:11:19.214" endtime="20201115 22:11:19.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:19.218" level="INFO">VALUE: [7.111000000000617e-06, 6.818999999998188e-06, 6.722000000000672e-06, 6.736000000000242e-06, 6.847000000000797e-06, 6.6669999999983964e-06, 6.722000000000672e-06, 6.874999999999937e-06, 6.709000000000576e-06, 6.736000000000242e-06, 6.847000000000797e-06, 6.7219999999972024e-06, 6.695000000001006e-06, 6.874999999999937e-06, 6.7779999999989515e-06, 6.749999999999812e-06, 6.8480000000002705e-06, 6.694000000001532e-06, 6.695000000001006e-06, 6.820000000001131e-06, 6.708000000001102e-06, 6.708999999997106e-06, 6.8619999999998404e-06, 6.708000000001102e-06, 6.736000000000242e-06, 6.804999999998618e-06, 6.7079999999976325e-06, 6.736000000000242e-06, 6.861000000000367e-06, 6.708000000001102e-06, 6.736000000000242e-06, 6.874999999999937e-06, 6.693999999998063e-06, 6.7079999999976325e-06, 6.888999999999507e-06, 6.722000000000672e-06, 6.709000000000576e-06, 6.903000000002546e-06, 6.722000000000672e-06, 6.749999999999812e-06, 6.9029999999990765e-06, 6.709000000000576e-06, 6.736000000000242e-06, 6.901999999999603e-06, 6.749999999999812e-06, 6.735999999996772e-06, 6.834000000000701e-06, 6.722000000000672e-06, 6.735999999996772e-06, 6.861000000000367e-06]</msg>
<status status="PASS" starttime="20201115 22:11:19.216" endtime="20201115 22:11:19.218"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.212" endtime="20201115 22:11:19.219"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:19.221" endtime="20201115 22:11:19.222"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:19.224" endtime="20201115 22:11:19.244"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.223" endtime="20201115 22:11:19.244"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.219" endtime="20201115 22:11:19.245"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.852" endtime="20201115 22:11:19.245"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.851" endtime="20201115 22:11:19.245"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.850" endtime="20201115 22:11:19.245"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:19.248" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:19.257" endtime="20201115 22:11:19.273"></status>
</kw>
<msg timestamp="20201115 22:11:19.274" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:19.255" endtime="20201115 22:11:19.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:19.276" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:19.275" endtime="20201115 22:11:19.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:19.277" endtime="20201115 22:11:19.279"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.253" endtime="20201115 22:11:19.279"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.250" endtime="20201115 22:11:19.280"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:19.286" endtime="20201115 22:11:19.574"></status>
</kw>
<msg timestamp="20201115 22:11:19.577" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02506875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025076042, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:11:19.285" endtime="20201115 22:11:19.577"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:19.585" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02506875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025076042, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:11:19.578" endtime="20201115 22:11:19.586"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:19.587" endtime="20201115 22:11:19.589"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.282" endtime="20201115 22:11:19.589"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.280" endtime="20201115 22:11:19.590"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:19.594" level="INFO">${RESULT} = [{'time': 0.025076042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.2919999999990215e-06, 'source_diff': 7.2919999999990215e-06}, {'time': 0.025193667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:19.590" endtime="20201115 22:11:19.594"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:19.607" level="INFO">${OVERHEAD} = {'source_diff': [7.2919999999990215e-06, 7.055999999998341e-06, 6.9029999999990765e-06, 6.861000000000367e-06, 7.083000000001477e-06, 6.916000000002642e-06, 6.903000000002546e-06, 7.055000000002337e-0...</msg>
<status status="PASS" starttime="20201115 22:11:19.595" endtime="20201115 22:11:19.607"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:19.612" level="INFO">NAME: 00-overhead-17-remove</msg>
<status status="PASS" starttime="20201115 22:11:19.611" endtime="20201115 22:11:19.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:19.614" level="INFO">VALUE: [7.2919999999990215e-06, 7.055999999998341e-06, 6.9029999999990765e-06, 6.861000000000367e-06, 7.083000000001477e-06, 6.916000000002642e-06, 6.903000000002546e-06, 7.055000000002337e-06, 6.833000000001227e-06, 6.9029999999990765e-06, 7.068999999998438e-06, 6.931000000001686e-06, 6.9169999999986465e-06, 7.069999999997911e-06, 6.9169999999986465e-06, 6.9169999999986465e-06, 7.110999999997147e-06, 6.9029999999990765e-06, 6.916000000002642e-06, 7.069000000001907e-06, 7.000000000000062e-06, 6.9029999999990765e-06, 7.054999999998868e-06, 6.917000000002116e-06, 6.9029999999990765e-06, 7.054999999998868e-06, 6.874999999999937e-06, 6.9579999999978825e-06, 7.083000000001477e-06, 6.888999999999507e-06, 6.847000000000797e-06, 7.055999999998341e-06, 6.847000000000797e-06, 6.902000000003072e-06, 7.054999999998868e-06, 6.888000000000033e-06, 6.9029999999990765e-06, 7.055999999998341e-06, 6.9169999999986465e-06, 6.945000000001256e-06, 7.056000000001811e-06, 6.889000000002976e-06, 6.9169999999986465e-06, 7.040999999999298e-06, 6.916000000002642e-06, 6.847000000000797e-06, 7.0419999999987715e-06, 6.943999999998313e-06, 6.903000000002546e-06, 7.056000000001811e-06]</msg>
<status status="PASS" starttime="20201115 22:11:19.613" endtime="20201115 22:11:19.615"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.608" endtime="20201115 22:11:19.615"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:19.617" endtime="20201115 22:11:19.619"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:19.621" endtime="20201115 22:11:19.640"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.619" endtime="20201115 22:11:19.641"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.616" endtime="20201115 22:11:19.641"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.248" endtime="20201115 22:11:19.642"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.247" endtime="20201115 22:11:19.642"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.246" endtime="20201115 22:11:19.642"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:19.644" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:19.653" endtime="20201115 22:11:19.669"></status>
</kw>
<msg timestamp="20201115 22:11:19.670" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:19.652" endtime="20201115 22:11:19.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:19.672" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:19.671" endtime="20201115 22:11:19.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:19.673" endtime="20201115 22:11:19.675"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.649" endtime="20201115 22:11:19.675"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.647" endtime="20201115 22:11:19.676"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:19.683" endtime="20201115 22:11:19.970"></status>
</kw>
<msg timestamp="20201115 22:11:19.973" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024864361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024871833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:19.681" endtime="20201115 22:11:19.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:19.981" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024864361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024871833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:19.974" endtime="20201115 22:11:19.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:19.982" endtime="20201115 22:11:19.984"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.678" endtime="20201115 22:11:19.984"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.676" endtime="20201115 22:11:19.985"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:19.989" level="INFO">${RESULT} = [{'time': 0.024871833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.4719999999979525e-06, 'source_diff': 7.4719999999979525e-06}, {'time': 0.024995667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:19.986" endtime="20201115 22:11:19.989"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:20.003" level="INFO">${OVERHEAD} = {'source_diff': [7.4719999999979525e-06, 7.263999999999882e-06, 7.0980000000005206e-06, 7.125000000000187e-06, 7.250000000000312e-06, 7.097000000001047e-06, 7.111000000000617e-06, 7.2219999999977025e-...</msg>
<status status="PASS" starttime="20201115 22:11:19.990" endtime="20201115 22:11:20.003"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:20.007" level="INFO">NAME: 00-overhead-18-remove</msg>
<status status="PASS" starttime="20201115 22:11:20.006" endtime="20201115 22:11:20.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:20.010" level="INFO">VALUE: [7.4719999999979525e-06, 7.263999999999882e-06, 7.0980000000005206e-06, 7.125000000000187e-06, 7.250000000000312e-06, 7.097000000001047e-06, 7.111000000000617e-06, 7.2219999999977025e-06, 7.1120000000000905e-06, 7.110999999997147e-06, 7.235999999997272e-06, 7.097000000001047e-06, 7.111000000000617e-06, 7.236000000000742e-06, 7.0419999999987715e-06, 7.125000000000187e-06, 7.250000000000312e-06, 7.097000000001047e-06, 7.125000000000187e-06, 7.250000000000312e-06, 7.138000000000283e-06, 7.111000000000617e-06, 7.179999999998993e-06, 7.110999999997147e-06, 7.125000000000187e-06, 7.250000000000312e-06, 7.083000000001477e-06, 7.138999999999757e-06, 7.250000000000312e-06, 7.138999999999757e-06, 7.0980000000005206e-06, 7.222000000001172e-06, 7.138999999999757e-06, 7.111000000000617e-06, 7.250000000000312e-06, 7.097999999997051e-06, 7.111000000000617e-06, 7.2370000000002155e-06, 7.0980000000005206e-06, 7.111000000000617e-06, 7.250000000000312e-06, 7.0829999999980076e-06, 7.1120000000000905e-06, 7.250000000000312e-06, 7.097000000001047e-06, 7.111000000000617e-06, 7.250000000000312e-06, 7.125000000000187e-06, 7.125000000000187e-06, 7.222000000001172e-06]</msg>
<status status="PASS" starttime="20201115 22:11:20.008" endtime="20201115 22:11:20.010"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.003" endtime="20201115 22:11:20.011"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:20.013" endtime="20201115 22:11:20.014"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:20.016" endtime="20201115 22:11:20.036"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.015" endtime="20201115 22:11:20.036"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.011" endtime="20201115 22:11:20.037"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.645" endtime="20201115 22:11:20.037"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.643" endtime="20201115 22:11:20.037"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.642" endtime="20201115 22:11:20.038"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:20.040" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:20.049" endtime="20201115 22:11:20.066"></status>
</kw>
<msg timestamp="20201115 22:11:20.066" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:20.047" endtime="20201115 22:11:20.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:20.069" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:20.067" endtime="20201115 22:11:20.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:20.070" endtime="20201115 22:11:20.072"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.044" endtime="20201115 22:11:20.072"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.042" endtime="20201115 22:11:20.073"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:20.079" endtime="20201115 22:11:20.366"></status>
</kw>
<msg timestamp="20201115 22:11:20.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024954069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02496175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:11:20.078" endtime="20201115 22:11:20.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:20.377" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024954069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02496175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:11:20.370" endtime="20201115 22:11:20.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:20.378" endtime="20201115 22:11:20.380"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.075" endtime="20201115 22:11:20.380"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.073" endtime="20201115 22:11:20.381"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:20.385" level="INFO">${RESULT} = [{'time': 0.02496175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.681000000002436e-06, 'source_diff': 7.681000000002436e-06}, {'time': 0.025092097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:11:20.381" endtime="20201115 22:11:20.385"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:20.398" level="INFO">${OVERHEAD} = {'source_diff': [7.681000000002436e-06, 7.444000000002282e-06, 7.347000000001297e-06, 7.2779999999994516e-06, 7.458000000001852e-06, 7.305999999998591e-06, 7.305999999998591e-06, 7.430999999998716e-06...</msg>
<status status="PASS" starttime="20201115 22:11:20.386" endtime="20201115 22:11:20.398"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:20.403" level="INFO">NAME: 00-overhead-19-remove</msg>
<status status="PASS" starttime="20201115 22:11:20.402" endtime="20201115 22:11:20.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:20.405" level="INFO">VALUE: [7.681000000002436e-06, 7.444000000002282e-06, 7.347000000001297e-06, 7.2779999999994516e-06, 7.458000000001852e-06, 7.305999999998591e-06, 7.305999999998591e-06, 7.430999999998716e-06, 7.305000000002587e-06, 7.305999999998591e-06, 7.472999999997426e-06, 7.318999999998688e-06, 7.305000000002587e-06, 7.458000000001852e-06, 7.305000000002587e-06, 7.250000000000312e-06, 7.429999999999243e-06, 7.250000000000312e-06, 7.290999999999548e-06, 7.443999999998813e-06, 7.305999999998591e-06, 7.304999999999118e-06, 7.472999999997426e-06, 7.2919999999990215e-06, 7.305000000002587e-06, 7.486000000000992e-06, 7.290999999999548e-06, 7.263999999999882e-06, 7.415999999999673e-06, 7.2779999999994516e-06, 7.290999999999548e-06, 7.444999999998286e-06, 7.263999999999882e-06, 7.319000000002157e-06, 7.445000000001756e-06, 7.305999999998591e-06, 7.276999999999978e-06, 7.443999999998813e-06, 7.2919999999990215e-06, 7.304999999999118e-06, 7.459000000001326e-06, 7.304999999999118e-06, 7.320000000001631e-06, 7.457999999998383e-06, 7.318999999998688e-06, 7.306000000002061e-06, 7.443999999998813e-06, 7.304999999999118e-06, 7.306000000002061e-06, 7.457999999994913e-06]</msg>
<status status="PASS" starttime="20201115 22:11:20.404" endtime="20201115 22:11:20.405"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.399" endtime="20201115 22:11:20.406"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:20.408" endtime="20201115 22:11:20.410"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:20.412" endtime="20201115 22:11:20.431"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.410" endtime="20201115 22:11:20.432"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.407" endtime="20201115 22:11:20.432"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.040" endtime="20201115 22:11:20.432"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.039" endtime="20201115 22:11:20.433"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.038" endtime="20201115 22:11:20.433"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:20.435" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:20.445" endtime="20201115 22:11:20.461"></status>
</kw>
<msg timestamp="20201115 22:11:20.462" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:20.443" endtime="20201115 22:11:20.462"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:20.464" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:20.463" endtime="20201115 22:11:20.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:20.465" endtime="20201115 22:11:20.467"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.440" endtime="20201115 22:11:20.467"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.438" endtime="20201115 22:11:20.468"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:20.474" endtime="20201115 22:11:20.763"></status>
</kw>
<msg timestamp="20201115 22:11:20.766" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025407139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025415014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:20.473" endtime="20201115 22:11:20.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:20.774" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025407139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025415014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:20.767" endtime="20201115 22:11:20.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:20.775" endtime="20201115 22:11:20.777"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.470" endtime="20201115 22:11:20.777"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.468" endtime="20201115 22:11:20.778"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:20.782" level="INFO">${RESULT} = [{'time': 0.025415014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.875000000000937e-06, 'source_diff': 7.875000000000937e-06}, {'time': 0.025551986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:20.778" endtime="20201115 22:11:20.782"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:20.795" level="INFO">${OVERHEAD} = {'source_diff': [7.875000000000937e-06, 7.624999999997217e-06, 7.473000000000896e-06, 7.555999999998841e-06, 7.625000000000687e-06, 7.472000000001422e-06, 7.486000000000992e-06, 7.624999999997217e-06,...</msg>
<status status="PASS" starttime="20201115 22:11:20.783" endtime="20201115 22:11:20.795"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:20.800" level="INFO">NAME: 00-overhead-20-remove</msg>
<status status="PASS" starttime="20201115 22:11:20.799" endtime="20201115 22:11:20.800"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:20.802" level="INFO">VALUE: [7.875000000000937e-06, 7.624999999997217e-06, 7.473000000000896e-06, 7.555999999998841e-06, 7.625000000000687e-06, 7.472000000001422e-06, 7.486000000000992e-06, 7.624999999997217e-06, 7.514000000000132e-06, 7.527999999999702e-06, 7.582999999998508e-06, 7.500000000000562e-06, 7.514000000000132e-06, 7.624999999997217e-06, 7.500000000000562e-06, 7.499999999997092e-06, 7.639000000000257e-06, 7.472000000001422e-06, 7.500000000000562e-06, 7.652000000000353e-06, 7.485999999997522e-06, 7.500000000000562e-06, 7.625000000000687e-06, 7.472000000001422e-06, 7.486000000000992e-06, 7.625000000000687e-06, 7.4719999999979525e-06, 7.500000000000562e-06, 7.6109999999976474e-06, 7.4719999999979525e-06, 7.500000000000562e-06, 7.639000000000257e-06, 7.486000000000992e-06, 7.514000000000132e-06, 7.5969999999980775e-06, 7.568999999998938e-06, 7.500000000000562e-06, 7.639000000000257e-06, 7.4719999999979525e-06, 7.4870000000004655e-06, 7.6109999999976474e-06, 7.486000000000992e-06, 7.514000000000132e-06, 7.624999999997217e-06, 7.485999999994053e-06, 7.459000000001326e-06, 7.653000000003296e-06, 7.527999999999702e-06, 7.582999999998508e-06, 7.624999999997217e-06]</msg>
<status status="PASS" starttime="20201115 22:11:20.801" endtime="20201115 22:11:20.803"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.796" endtime="20201115 22:11:20.803"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:20.805" endtime="20201115 22:11:20.807"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:20.813" endtime="20201115 22:11:20.833"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.807" endtime="20201115 22:11:20.833"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.804" endtime="20201115 22:11:20.834"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.436" endtime="20201115 22:11:20.834"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.434" endtime="20201115 22:11:20.834"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.433" endtime="20201115 22:11:20.834"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:20.837" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:20.846" endtime="20201115 22:11:20.863"></status>
</kw>
<msg timestamp="20201115 22:11:20.864" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:20.844" endtime="20201115 22:11:20.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:20.866" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:20.865" endtime="20201115 22:11:20.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:20.867" endtime="20201115 22:11:20.869"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.841" endtime="20201115 22:11:20.869"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.839" endtime="20201115 22:11:20.870"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:20.876" endtime="20201115 22:11:21.163"></status>
</kw>
<msg timestamp="20201115 22:11:21.166" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024857264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024865333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:20.875" endtime="20201115 22:11:21.167"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:21.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024857264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024865333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:21.168" endtime="20201115 22:11:21.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:21.176" endtime="20201115 22:11:21.177"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.872" endtime="20201115 22:11:21.178"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.870" endtime="20201115 22:11:21.178"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:21.182" level="INFO">${RESULT} = [{'time': 0.024865333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.068999999999438e-06, 'source_diff': 8.068999999999438e-06}, {'time': 0.025009222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:21.179" endtime="20201115 22:11:21.183"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:21.196" level="INFO">${OVERHEAD} = {'source_diff': [8.068999999999438e-06, 7.777999999999952e-06, 7.693999999999063e-06, 7.694000000002532e-06, 7.833999999998231e-06, 7.681000000002436e-06, 7.680999999998966e-06, 7.84800000000127e-06, ...</msg>
<status status="PASS" starttime="20201115 22:11:21.183" endtime="20201115 22:11:21.196"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:21.201" level="INFO">NAME: 00-overhead-21-remove</msg>
<status status="PASS" starttime="20201115 22:11:21.199" endtime="20201115 22:11:21.201"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:21.203" level="INFO">VALUE: [8.068999999999438e-06, 7.777999999999952e-06, 7.693999999999063e-06, 7.694000000002532e-06, 7.833999999998231e-06, 7.681000000002436e-06, 7.680999999998966e-06, 7.84800000000127e-06, 7.721999999998203e-06, 7.652999999999827e-06, 7.82000000000213e-06, 7.694999999998536e-06, 7.693999999999063e-06, 7.847000000001797e-06, 7.680999999998966e-06, 7.680999999998966e-06, 7.847999999997801e-06, 7.665999999999923e-06, 7.681000000002436e-06, 7.833999999998231e-06, 7.665999999999923e-06, 7.652999999999827e-06, 7.847999999997801e-06, 7.693999999999063e-06, 7.693999999999063e-06, 7.833999999998231e-06, 7.749999999997342e-06, 7.694999999998536e-06, 7.8340000000017e-06, 7.679999999999493e-06, 7.680999999998966e-06, 7.832999999998758e-06, 7.694000000002532e-06, 7.693999999999063e-06, 7.806000000002561e-06, 7.680000000002962e-06, 7.652999999999827e-06, 7.832999999998758e-06, 7.680999999998966e-06, 7.679999999999493e-06, 7.861000000001367e-06, 7.638999999996787e-06, 7.680999999998966e-06, 7.8340000000017e-06, 7.694000000002532e-06, 7.652999999996357e-06, 7.833000000005697e-06, 7.679999999996023e-06, 7.721999999994733e-06, 7.804999999999618e-06]</msg>
<status status="PASS" starttime="20201115 22:11:21.202" endtime="20201115 22:11:21.204"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.197" endtime="20201115 22:11:21.204"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:21.207" endtime="20201115 22:11:21.208"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:21.210" endtime="20201115 22:11:21.229"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.209" endtime="20201115 22:11:21.230"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.205" endtime="20201115 22:11:21.230"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.837" endtime="20201115 22:11:21.231"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.836" endtime="20201115 22:11:21.231"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.835" endtime="20201115 22:11:21.231"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:21.233" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:21.242" endtime="20201115 22:11:21.261"></status>
</kw>
<msg timestamp="20201115 22:11:21.261" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:21.241" endtime="20201115 22:11:21.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:21.264" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:21.262" endtime="20201115 22:11:21.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:21.265" endtime="20201115 22:11:21.266"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.238" endtime="20201115 22:11:21.267"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.236" endtime="20201115 22:11:21.268"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:21.274" endtime="20201115 22:11:21.560"></status>
</kw>
<msg timestamp="20201115 22:11:21.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025224375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025232625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:21.273" endtime="20201115 22:11:21.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:21.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025224375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025232625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:21.564" endtime="20201115 22:11:21.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:21.572" endtime="20201115 22:11:21.574"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.270" endtime="20201115 22:11:21.574"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.268" endtime="20201115 22:11:21.575"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:21.579" level="INFO">${RESULT} = [{'time': 0.025232625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.250000000001312e-06, 'source_diff': 8.250000000001312e-06}, {'time': 0.025383236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:21.576" endtime="20201115 22:11:21.579"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:21.592" level="INFO">${OVERHEAD} = {'source_diff': [8.250000000001312e-06, 8.028000000000202e-06, 7.887999999997564e-06, 7.888999999997037e-06, 8.111000000001617e-06, 7.875000000000937e-06, 7.875000000000937e-06, 8.014000000000632e-06,...</msg>
<status status="PASS" starttime="20201115 22:11:21.580" endtime="20201115 22:11:21.593"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:21.597" level="INFO">NAME: 00-overhead-22-remove</msg>
<status status="PASS" starttime="20201115 22:11:21.596" endtime="20201115 22:11:21.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:21.600" level="INFO">VALUE: [8.250000000001312e-06, 8.028000000000202e-06, 7.887999999997564e-06, 7.888999999997037e-06, 8.111000000001617e-06, 7.875000000000937e-06, 7.875000000000937e-06, 8.014000000000632e-06, 7.861999999997371e-06, 7.889000000000507e-06, 8.027000000000728e-06, 7.889000000000507e-06, 7.903000000000077e-06, 8.014000000000632e-06, 7.861000000001367e-06, 7.874999999997467e-06, 8.027000000000728e-06, 7.888000000001033e-06, 7.916999999999647e-06, 8.069999999998911e-06, 7.860999999997897e-06, 7.875000000000937e-06, 8.028000000000202e-06, 7.875000000000937e-06, 7.889000000000507e-06, 8.000000000001062e-06, 7.889000000000507e-06, 7.875000000000937e-06, 8.027000000000728e-06, 7.875000000000937e-06, 7.875000000000937e-06, 8.014000000000632e-06, 7.875000000000937e-06, 7.875000000000937e-06, 8.054999999999868e-06, 7.860999999997897e-06, 7.889000000000507e-06, 8.028000000000202e-06, 7.889000000000507e-06, 7.889000000000507e-06, 8.014000000000632e-06, 7.889000000003976e-06, 7.902999999996607e-06, 8.014000000000632e-06, 7.861999999997371e-06, 7.903000000003546e-06, 7.958000000002352e-06, 7.861999999997371e-06, 7.819999999998661e-06, 8.013999999993693e-06]</msg>
<status status="PASS" starttime="20201115 22:11:21.598" endtime="20201115 22:11:21.600"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.593" endtime="20201115 22:11:21.601"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:21.603" endtime="20201115 22:11:21.605"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:21.607" endtime="20201115 22:11:21.626"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.605" endtime="20201115 22:11:21.627"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.602" endtime="20201115 22:11:21.627"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.234" endtime="20201115 22:11:21.628"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.232" endtime="20201115 22:11:21.628"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.232" endtime="20201115 22:11:21.628"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:21.630" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:21.639" endtime="20201115 22:11:21.658"></status>
</kw>
<msg timestamp="20201115 22:11:21.658" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:21.638" endtime="20201115 22:11:21.659"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:21.661" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:21.659" endtime="20201115 22:11:21.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:21.662" endtime="20201115 22:11:21.663"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.635" endtime="20201115 22:11:21.664"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.633" endtime="20201115 22:11:21.664"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:21.671" endtime="20201115 22:11:21.958"></status>
</kw>
<msg timestamp="20201115 22:11:21.961" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024989833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024998306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:21.669" endtime="20201115 22:11:21.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:21.969" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024989833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024998306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:21.962" endtime="20201115 22:11:21.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:21.970" endtime="20201115 22:11:21.972"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.667" endtime="20201115 22:11:21.972"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.665" endtime="20201115 22:11:21.973"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:21.977" level="INFO">${RESULT} = [{'time': 0.024998306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.473000000001896e-06, 'source_diff': 8.473000000001896e-06}, {'time': 0.025156042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:21.973" endtime="20201115 22:11:21.977"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:21.991" level="INFO">${OVERHEAD} = {'source_diff': [8.473000000001896e-06, 8.223000000001646e-06, 8.08400000000195e-06, 8.068999999999438e-06, 8.221999999998703e-06, 8.097000000002047e-06, 8.055999999999341e-06, 8.166999999999897e-06, ...</msg>
<status status="PASS" starttime="20201115 22:11:21.978" endtime="20201115 22:11:21.991"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:21.995" level="INFO">NAME: 00-overhead-23-remove</msg>
<status status="PASS" starttime="20201115 22:11:21.994" endtime="20201115 22:11:21.996"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:21.998" level="INFO">VALUE: [8.473000000001896e-06, 8.223000000001646e-06, 8.08400000000195e-06, 8.068999999999438e-06, 8.221999999998703e-06, 8.097000000002047e-06, 8.055999999999341e-06, 8.166999999999897e-06, 8.000000000001062e-06, 8.068999999999438e-06, 8.207999999999133e-06, 8.083000000002477e-06, 8.082999999999008e-06, 8.278000000000452e-06, 8.082999999999008e-06, 8.097000000002047e-06, 8.236000000001742e-06, 8.055999999999341e-06, 8.068999999999438e-06, 8.222999999998176e-06, 8.013000000001158e-06, 8.068999999999438e-06, 8.207999999999133e-06, 8.083999999998481e-06, 8.083000000002477e-06, 8.235999999998272e-06, 8.096999999998578e-06, 8.082999999999008e-06, 8.237000000001216e-06, 8.054999999999868e-06, 8.068999999999438e-06, 8.207999999999133e-06, 8.082999999999008e-06, 8.125000000001187e-06, 8.235999999998272e-06, 8.069000000002907e-06, 8.041000000000298e-06, 8.209000000002076e-06, 8.068999999999438e-06, 8.028000000000202e-06, 8.222000000002172e-06, 8.041000000000298e-06, 8.069999999998911e-06, 8.180999999995997e-06, 8.083999999998481e-06, 8.125000000004656e-06, 8.236000000001742e-06, 8.055999999999341e-06, 8.069999999998911e-06, 8.264000000000882e-06]</msg>
<status status="PASS" starttime="20201115 22:11:21.996" endtime="20201115 22:11:21.998"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.992" endtime="20201115 22:11:21.999"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:22.001" endtime="20201115 22:11:22.002"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:22.005" endtime="20201115 22:11:22.024"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.003" endtime="20201115 22:11:22.025"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.999" endtime="20201115 22:11:22.025"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.631" endtime="20201115 22:11:22.025"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.629" endtime="20201115 22:11:22.026"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.628" endtime="20201115 22:11:22.026"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:22.028" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:22.037" endtime="20201115 22:11:22.055"></status>
</kw>
<msg timestamp="20201115 22:11:22.056" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:22.035" endtime="20201115 22:11:22.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:22.058" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:22.057" endtime="20201115 22:11:22.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:22.060" endtime="20201115 22:11:22.061"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.033" endtime="20201115 22:11:22.062"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.031" endtime="20201115 22:11:22.062"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:22.069" endtime="20201115 22:11:22.357"></status>
</kw>
<msg timestamp="20201115 22:11:22.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025316861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025325514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:22.067" endtime="20201115 22:11:22.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:22.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025316861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025325514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:22.361" endtime="20201115 22:11:22.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:22.369" endtime="20201115 22:11:22.371"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.064" endtime="20201115 22:11:22.372"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.063" endtime="20201115 22:11:22.372"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:22.376" level="INFO">${RESULT} = [{'time': 0.025325514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.653000000000827e-06, 'source_diff': 8.653000000000827e-06}, {'time': 0.025490375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:22.373" endtime="20201115 22:11:22.376"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:22.389" level="INFO">${OVERHEAD} = {'source_diff': [8.653000000000827e-06, 8.443999999999813e-06, 8.263999999997412e-06, 8.292000000000022e-06, 8.403000000000577e-06, 8.32000000000263e-06, 8.278000000000452e-06, 8.401999999997634e-06, ...</msg>
<status status="PASS" starttime="20201115 22:11:22.377" endtime="20201115 22:11:22.390"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:22.394" level="INFO">NAME: 00-overhead-24-remove</msg>
<status status="PASS" starttime="20201115 22:11:22.393" endtime="20201115 22:11:22.394"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:22.396" level="INFO">VALUE: [8.653000000000827e-06, 8.443999999999813e-06, 8.263999999997412e-06, 8.292000000000022e-06, 8.403000000000577e-06, 8.32000000000263e-06, 8.278000000000452e-06, 8.401999999997634e-06, 8.222000000002172e-06, 8.292000000000022e-06, 8.417000000000147e-06, 8.250000000001312e-06, 8.278000000000452e-06, 8.403000000000577e-06, 8.264000000000882e-06, 8.292000000000022e-06, 8.389000000001007e-06, 8.207999999999133e-06, 8.291000000000548e-06, 8.430000000000243e-06, 8.264000000000882e-06, 8.291000000000548e-06, 8.417000000000147e-06, 8.264000000000882e-06, 8.305999999999591e-06, 8.416000000000673e-06, 8.263999999997412e-06, 8.264000000000882e-06, 8.443999999999813e-06, 8.207999999999133e-06, 8.347000000002297e-06, 8.403000000000577e-06, 8.263000000001408e-06, 8.236000000001742e-06, 8.430000000000243e-06, 8.250000000001312e-06, 8.278000000000452e-06, 8.416999999996677e-06, 8.277000000000978e-06, 8.264000000000882e-06, 8.415999999997203e-06, 8.277000000000978e-06, 8.278000000000452e-06, 8.416000000004142e-06, 8.278000000000452e-06, 8.292000000000022e-06, 8.346999999998828e-06, 8.263999999993943e-06, 8.292000000000022e-06, 8.444000000003282e-06]</msg>
<status status="PASS" starttime="20201115 22:11:22.395" endtime="20201115 22:11:22.397"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.390" endtime="20201115 22:11:22.397"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:22.400" endtime="20201115 22:11:22.401"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:22.403" endtime="20201115 22:11:22.422"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.402" endtime="20201115 22:11:22.423"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.398" endtime="20201115 22:11:22.423"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.029" endtime="20201115 22:11:22.424"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.027" endtime="20201115 22:11:22.424"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.026" endtime="20201115 22:11:22.424"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:22.426" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:22.435" endtime="20201115 22:11:22.455"></status>
</kw>
<msg timestamp="20201115 22:11:22.455" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:22.434" endtime="20201115 22:11:22.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:22.458" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:22.456" endtime="20201115 22:11:22.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:22.459" endtime="20201115 22:11:22.461"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.431" endtime="20201115 22:11:22.461"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.429" endtime="20201115 22:11:22.462"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:22.468" endtime="20201115 22:11:22.755"></status>
</kw>
<msg timestamp="20201115 22:11:22.758" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024881778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024890625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:22.466" endtime="20201115 22:11:22.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:22.766" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024881778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024890625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:22.759" endtime="20201115 22:11:22.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:22.767" endtime="20201115 22:11:22.769"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.464" endtime="20201115 22:11:22.769"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.462" endtime="20201115 22:11:22.770"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:22.774" level="INFO">${RESULT} = [{'time': 0.024890625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.846999999999328e-06, 'source_diff': 8.846999999999328e-06}, {'time': 0.025062764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:22.770" endtime="20201115 22:11:22.774"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:22.787" level="INFO">${OVERHEAD} = {'source_diff': [8.846999999999328e-06, 8.597000000002547e-06, 8.473000000001896e-06, 8.416000000000673e-06, 8.568999999999938e-06, 8.459000000002326e-06, 8.471999999998953e-06, 8.611000000002117e-06,...</msg>
<status status="PASS" starttime="20201115 22:11:22.775" endtime="20201115 22:11:22.787"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:22.792" level="INFO">NAME: 00-overhead-25-remove</msg>
<status status="PASS" starttime="20201115 22:11:22.791" endtime="20201115 22:11:22.792"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:22.794" level="INFO">VALUE: [8.846999999999328e-06, 8.597000000002547e-06, 8.473000000001896e-06, 8.416000000000673e-06, 8.568999999999938e-06, 8.459000000002326e-06, 8.471999999998953e-06, 8.611000000002117e-06, 8.500000000001562e-06, 8.471999999998953e-06, 8.597000000002547e-06, 8.459000000002326e-06, 8.471999999998953e-06, 8.59800000000202e-06, 8.485999999998523e-06, 8.471999999998953e-06, 8.611000000002117e-06, 8.473000000001896e-06, 8.472000000002422e-06, 8.596999999999078e-06, 8.443999999999813e-06, 8.471999999998953e-06, 8.625000000001687e-06, 8.445000000002756e-06, 8.485999999998523e-06, 8.582999999999508e-06, 8.472000000002422e-06, 8.471999999998953e-06, 8.555999999999842e-06, 8.499999999998092e-06, 8.457999999999383e-06, 8.611000000002117e-06, 8.444999999999286e-06, 8.457999999999383e-06, 8.625000000001687e-06, 8.457999999999383e-06, 8.458999999998856e-06, 8.624999999998217e-06, 8.514000000001132e-06, 8.471999999995483e-06, 8.610999999998648e-06, 8.458000000002852e-06, 8.473000000001896e-06, 8.610999999998648e-06, 8.459000000002326e-06, 8.458000000002852e-06, 8.583999999998981e-06, 8.458000000002852e-06, 8.472000000002422e-06, 8.610999999998648e-06]</msg>
<status status="PASS" starttime="20201115 22:11:22.793" endtime="20201115 22:11:22.795"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.788" endtime="20201115 22:11:22.795"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:22.797" endtime="20201115 22:11:22.799"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:22.801" endtime="20201115 22:11:22.820"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.799" endtime="20201115 22:11:22.821"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.796" endtime="20201115 22:11:22.821"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.427" endtime="20201115 22:11:22.822"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.425" endtime="20201115 22:11:22.822"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.424" endtime="20201115 22:11:22.822"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.937" endtime="20201115 22:11:22.822"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="teardown">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:22.827" endtime="20201115 22:11:22.846"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.825" endtime="20201115 22:11:22.847"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.824" endtime="20201115 22:11:22.847"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:11:12.866" endtime="20201115 22:11:22.847" critical="yes"></status>
</test>
<status status="PASS" starttime="20201115 22:11:00.356" endtime="20201115 22:11:22.853"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_ztimer_benchmarks</item>
<item name="RIOT-Board">nucleo-f767zi</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="PASS" starttime="20201115 22:10:58.318" endtime="20201115 22:11:22.870"></status>
</suite>
<statistics>
<total>
<stat pass="5" fail="0">Critical Tests</stat>
<stat pass="5" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="5" fail="0">APP_tests_ztimer_benchmarks</stat>
<stat pass="5" fail="0">BOARD_nucleo-f767zi</stat>
<stat pass="5" fail="0">dev</stat>
</tag>
<suite>
<stat pass="5" fail="0" id="s1" name="tests_ztimer_benchmarks">tests_ztimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_ztimer_benchmarks.Timer Version</stat>
<stat pass="4" fail="0" id="s1-s2" name="Timer Overhead">tests_ztimer_benchmarks.Timer Overhead</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
