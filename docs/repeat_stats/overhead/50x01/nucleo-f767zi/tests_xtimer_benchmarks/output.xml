<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201115 22:11:28.963" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201115 22:11:29.520" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201115 22:11:29.529" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201115 22:11:30.633" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201115 22:11:29.519" endtime="20201115 22:11:30.634"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201115 22:11:30.636" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201115 22:11:30.635" endtime="20201115 22:11:30.637"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:29.518" endtime="20201115 22:11:30.637"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:30.640" endtime="20201115 22:11:30.823"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:30.638" endtime="20201115 22:11:30.824"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:30.836" endtime="20201115 22:11:30.851"></status>
</kw>
<msg timestamp="20201115 22:11:30.851" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:30.835" endtime="20201115 22:11:30.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:30.854" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:30.852" endtime="20201115 22:11:30.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:11:30.857" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:11:30.855" endtime="20201115 22:11:30.857"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:30.832" endtime="20201115 22:11:30.858"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:30.830" endtime="20201115 22:11:30.859"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:30.829" endtime="20201115 22:11:30.859"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:11:30.863" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:11:30.862" endtime="20201115 22:11:30.863"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:30.860" endtime="20201115 22:11:30.864"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:30.828" endtime="20201115 22:11:30.864"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:30.827" endtime="20201115 22:11:30.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:30.865" endtime="20201115 22:11:30.866"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:30.826" endtime="20201115 22:11:30.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:30.867" endtime="20201115 22:11:30.869"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:30.824" endtime="20201115 22:11:30.869"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:29.516" endtime="20201115 22:11:30.870"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:30.876" endtime="20201115 22:11:30.895"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:30.874" endtime="20201115 22:11:30.896"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:30.911" endtime="20201115 22:11:30.925"></status>
</kw>
<msg timestamp="20201115 22:11:30.925" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:30.908" endtime="20201115 22:11:30.925"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:30.928" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:30.926" endtime="20201115 22:11:30.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:11:30.931" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:11:30.929" endtime="20201115 22:11:30.931"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:30.905" endtime="20201115 22:11:30.932"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:30.903" endtime="20201115 22:11:30.932"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:30.901" endtime="20201115 22:11:30.932"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:11:30.936" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:11:30.935" endtime="20201115 22:11:30.936"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:30.933" endtime="20201115 22:11:30.937"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:30.900" endtime="20201115 22:11:30.937"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:30.900" endtime="20201115 22:11:30.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:30.938" endtime="20201115 22:11:30.939"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:30.898" endtime="20201115 22:11:30.940"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:30.897" endtime="20201115 22:11:30.940"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:30.873" endtime="20201115 22:11:30.940"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:30.947" endtime="20201115 22:11:30.957"></status>
</kw>
<msg timestamp="20201115 22:11:30.958" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:30.946" endtime="20201115 22:11:30.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:30.960" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:30.959" endtime="20201115 22:11:30.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:30.961" endtime="20201115 22:11:30.963"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:30.943" endtime="20201115 22:11:30.963"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:30.941" endtime="20201115 22:11:30.964"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:30.968" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201115 22:11:30.967" endtime="20201115 22:11:30.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:30.970" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201115 22:11:30.969" endtime="20201115 22:11:30.970"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:30.964" endtime="20201115 22:11:30.971"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:11:30.870" endtime="20201115 22:11:30.971" critical="yes"></status>
</test>
<status status="PASS" starttime="20201115 22:11:29.073" endtime="20201115 22:11:30.974"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201115 22:11:31.027" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201115 22:11:31.035" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201115 22:11:32.194" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201115 22:11:31.025" endtime="20201115 22:11:32.195"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201115 22:11:32.197" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201115 22:11:32.196" endtime="20201115 22:11:32.198"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:31.024" endtime="20201115 22:11:32.198"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:32.200" endtime="20201115 22:11:32.420"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.199" endtime="20201115 22:11:32.421"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:32.433" endtime="20201115 22:11:32.448"></status>
</kw>
<msg timestamp="20201115 22:11:32.448" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:32.432" endtime="20201115 22:11:32.448"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:32.451" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:32.449" endtime="20201115 22:11:32.451"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:11:32.454" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:11:32.452" endtime="20201115 22:11:32.454"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:32.429" endtime="20201115 22:11:32.455"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:32.427" endtime="20201115 22:11:32.455"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.426" endtime="20201115 22:11:32.455"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:11:32.459" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:11:32.458" endtime="20201115 22:11:32.460"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.456" endtime="20201115 22:11:32.460"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.425" endtime="20201115 22:11:32.460"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.424" endtime="20201115 22:11:32.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:32.461" endtime="20201115 22:11:32.462"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.423" endtime="20201115 22:11:32.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:32.464" endtime="20201115 22:11:32.465"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.422" endtime="20201115 22:11:32.466"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:31.023" endtime="20201115 22:11:32.466"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO/">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:32.473" endtime="20201115 22:11:32.492"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.470" endtime="20201115 22:11:32.493"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:32.505" endtime="20201115 22:11:32.519"></status>
</kw>
<msg timestamp="20201115 22:11:32.520" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:32.504" endtime="20201115 22:11:32.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:32.523" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:32.521" endtime="20201115 22:11:32.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:11:32.526" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:11:32.524" endtime="20201115 22:11:32.526"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:32.501" endtime="20201115 22:11:32.527"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:32.499" endtime="20201115 22:11:32.527"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.498" endtime="20201115 22:11:32.528"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:11:32.531" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:11:32.530" endtime="20201115 22:11:32.532"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.528" endtime="20201115 22:11:32.532"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.497" endtime="20201115 22:11:32.532"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.496" endtime="20201115 22:11:32.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:32.533" endtime="20201115 22:11:32.534"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.495" endtime="20201115 22:11:32.535"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.493" endtime="20201115 22:11:32.535"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.469" endtime="20201115 22:11:32.535"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure GPIO Overhead</arg>
</arguments>
<msg timestamp="20201115 22:11:32.538" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:32.545" endtime="20201115 22:11:32.556"></status>
</kw>
<msg timestamp="20201115 22:11:32.557" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:32.544" endtime="20201115 22:11:32.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:32.559" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:32.558" endtime="20201115 22:11:32.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:32.560" endtime="20201115 22:11:32.562"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.541" endtime="20201115 22:11:32.563"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.540" endtime="20201115 22:11:32.563"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:32.569" endtime="20201115 22:11:32.858"></status>
</kw>
<msg timestamp="20201115 22:11:32.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063434569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.063442667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:32.568" endtime="20201115 22:11:32.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:32.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063434569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.063442667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:32.860" endtime="20201115 22:11:32.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:32.866" endtime="20201115 22:11:32.868"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.565" endtime="20201115 22:11:32.868"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.564" endtime="20201115 22:11:32.869"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:32.872" level="INFO">${RESULT} = [{'time': 0.063442667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.097999999998051e-06, 'source_diff': 8.097999999998051e-06}, {'time': 0.063452569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:32.869" endtime="20201115 22:11:32.872"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:32.880" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:32.873" endtime="20201115 22:11:32.881"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:32.885" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201115 22:11:32.884" endtime="20201115 22:11:32.885"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:32.887" level="INFO">VALUE: [8.097999999998051e-06, 5.040999999997298e-06, 3.111000000000086e-06, 7.514000000000132e-06, 9.624999999999218e-06, 7.153000000009735e-06, 3.1250000000065947e-06, 9.291000000008487e-06, 1.9029999999975455e-06, 9.166999999990488e-06, 6.681000000008375e-06, 7.139000000003226e-06, 2.29200000000096e-06, 5.0000000000050004e-06, 9.834000000000231e-06, 2.4440000000042206e-06, 1.6389999999977256e-06, 7.818999999992249e-06, 3.929999999999212e-06, 2.847000000000266e-06, 4.8049999999966175e-06, 6.874999999989528e-06, 8.55600000000678e-06, 4.596999999995077e-06, 5.541999999997271e-06]</msg>
<status status="PASS" starttime="20201115 22:11:32.886" endtime="20201115 22:11:32.887"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.881" endtime="20201115 22:11:32.888"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:32.890" endtime="20201115 22:11:32.891"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:32.893" endtime="20201115 22:11:32.912"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.892" endtime="20201115 22:11:32.913"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.888" endtime="20201115 22:11:32.914"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.538" endtime="20201115 22:11:32.914"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.537" endtime="20201115 22:11:32.914"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:32.918" endtime="20201115 22:11:32.938"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.917" endtime="20201115 22:11:32.938"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.915" endtime="20201115 22:11:32.939"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:11:32.466" endtime="20201115 22:11:32.939" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:32.946" endtime="20201115 22:11:32.966"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.945" endtime="20201115 22:11:32.966"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:32.980" endtime="20201115 22:11:32.993"></status>
</kw>
<msg timestamp="20201115 22:11:32.993" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:32.978" endtime="20201115 22:11:32.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:32.996" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:32.994" endtime="20201115 22:11:32.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:11:32.999" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:11:32.997" endtime="20201115 22:11:32.999"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:32.975" endtime="20201115 22:11:33.000"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:32.973" endtime="20201115 22:11:33.000"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.971" endtime="20201115 22:11:33.001"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:11:33.004" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:11:33.004" endtime="20201115 22:11:33.005"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.002" endtime="20201115 22:11:33.005"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.971" endtime="20201115 22:11:33.005"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.970" endtime="20201115 22:11:33.006"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:33.006" endtime="20201115 22:11:33.008"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.969" endtime="20201115 22:11:33.009"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.967" endtime="20201115 22:11:33.009"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.943" endtime="20201115 22:11:33.009"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer Now Overhead</arg>
</arguments>
<msg timestamp="20201115 22:11:33.012" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:33.019" endtime="20201115 22:11:33.031"></status>
</kw>
<msg timestamp="20201115 22:11:33.032" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:33.018" endtime="20201115 22:11:33.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:33.034" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:33.033" endtime="20201115 22:11:33.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:33.035" endtime="20201115 22:11:33.037"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.015" endtime="20201115 22:11:33.037"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.014" endtime="20201115 22:11:33.038"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:33.044" endtime="20201115 22:11:33.334"></status>
</kw>
<msg timestamp="20201115 22:11:33.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064143569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064144931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:33.042" endtime="20201115 22:11:33.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:33.345" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064143569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064144931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:33.338" endtime="20201115 22:11:33.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:33.346" endtime="20201115 22:11:33.348"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.040" endtime="20201115 22:11:33.348"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.038" endtime="20201115 22:11:33.349"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:33.353" level="INFO">${RESULT} = [{'time': 0.064144931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3620000000047483e-06, 'source_diff': 1.3620000000047483e-06}, {'time': 0.064153347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:33.349" endtime="20201115 22:11:33.353"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:33.366" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:33.354" endtime="20201115 22:11:33.366"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:33.370" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201115 22:11:33.369" endtime="20201115 22:11:33.370"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:33.372" level="INFO">VALUE: [1.3620000000047483e-06, 1.082999999998946e-06, 1.0270000000006663e-06, 1.082999999998946e-06, 1.0839999999984196e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.096999999991577e-06, 1.0700000000057885e-06, 1.0830000000128237e-06, 1.0420000000066487e-06, 1.069000000006315e-06, 1.082999999998946e-06, 1.0700000000057885e-06, 1.0839999999984196e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.096999999991577e-06, 1.0980000000049284e-06, 1.0699999999919108e-06, 1.0970000000054547e-06, 1.1389999999972256e-06, 1.054999999999806e-06, 1.0839999999984196e-06, 1.0839999999984196e-06, 1.069000000006315e-06, 1.0689999999924371e-06, 1.082999999998946e-06, 1.0839999999984196e-06, 1.1109999999980857e-06, 1.069000000006315e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.0839999999984196e-06, 1.0699999999919108e-06, 1.096999999991577e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.096999999991577e-06, 1.0689999999924371e-06, 1.1110000000119635e-06, 1.1109999999980857e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.0839999999984196e-06, 1.082999999998946e-06, 1.096999999991577e-06, 1.0839999999984196e-06, 1.082999999998946e-06, 1.069000000006315e-06]</msg>
<status status="PASS" starttime="20201115 22:11:33.371" endtime="20201115 22:11:33.373"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.367" endtime="20201115 22:11:33.374"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:33.376" endtime="20201115 22:11:33.377"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:33.379" endtime="20201115 22:11:33.399"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.378" endtime="20201115 22:11:33.399"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.374" endtime="20201115 22:11:33.400"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.012" endtime="20201115 22:11:33.400"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.010" endtime="20201115 22:11:33.400"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:33.405" endtime="20201115 22:11:33.424"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.403" endtime="20201115 22:11:33.424"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.402" endtime="20201115 22:11:33.425"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:11:32.941" endtime="20201115 22:11:33.425" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set List">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:33.432" endtime="20201115 22:11:33.452"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.431" endtime="20201115 22:11:33.452"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:33.466" endtime="20201115 22:11:33.481"></status>
</kw>
<msg timestamp="20201115 22:11:33.481" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:33.464" endtime="20201115 22:11:33.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:33.484" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:33.482" endtime="20201115 22:11:33.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:11:33.487" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:11:33.485" endtime="20201115 22:11:33.487"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:33.461" endtime="20201115 22:11:33.488"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:33.459" endtime="20201115 22:11:33.488"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.457" endtime="20201115 22:11:33.488"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:11:33.492" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:11:33.491" endtime="20201115 22:11:33.492"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.489" endtime="20201115 22:11:33.493"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.457" endtime="20201115 22:11:33.493"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.456" endtime="20201115 22:11:33.493"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:33.494" endtime="20201115 22:11:33.495"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.455" endtime="20201115 22:11:33.496"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.453" endtime="20201115 22:11:33.496"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.430" endtime="20201115 22:11:33.496"></status>
</kw>
<kw name="${n} IN RANGE [ 25 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:33.500" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:33.509" endtime="20201115 22:11:33.521"></status>
</kw>
<msg timestamp="20201115 22:11:33.522" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:33.507" endtime="20201115 22:11:33.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:33.524" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:33.523" endtime="20201115 22:11:33.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:33.525" endtime="20201115 22:11:33.527"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.504" endtime="20201115 22:11:33.527"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.502" endtime="20201115 22:11:33.528"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:33.534" endtime="20201115 22:11:33.820"></status>
</kw>
<msg timestamp="20201115 22:11:33.823" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069163181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069167028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:33.532" endtime="20201115 22:11:33.823"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:33.831" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069163181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069167028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:33.824" endtime="20201115 22:11:33.831"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:33.832" endtime="20201115 22:11:33.834"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.530" endtime="20201115 22:11:33.834"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.528" endtime="20201115 22:11:33.835"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:33.839" level="INFO">${RESULT} = [{'time': 0.069167028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.847000000001266e-06, 'source_diff': 3.847000000001266e-06}, {'time': 0.069215097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:33.835" endtime="20201115 22:11:33.839"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:33.854" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:33.840" endtime="20201115 22:11:33.854"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:33.858" level="INFO">NAME: 00-overhead-1-set</msg>
<status status="PASS" starttime="20201115 22:11:33.857" endtime="20201115 22:11:33.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:33.861" level="INFO">VALUE: [3.847000000001266e-06, 3.361000000007275e-06, 3.2220000000110494e-06, 3.2360000000036804e-06, 3.2499999999963114e-06, 3.2360000000036804e-06, 3.2359999999898026e-06, 3.2769999999959776e-06, 3.2360000000036804e-06, 3.26400000000282e-06, 3.195000000011383e-06, 3.2360000000036804e-06, 3.2499999999963114e-06, 3.2219999999971716e-06, 3.2630000000033466e-06, 3.165999999998892e-06, 3.2360000000036804e-06, 3.250000000010189e-06, 3.250000000010189e-06, 3.2630000000033466e-06, 3.250000000010189e-06, 3.2499999999963114e-06, 3.2080000000045406e-06, 3.250000000010189e-06, 3.2220000000110494e-06, 3.26400000000282e-06, 3.2499999999963114e-06, 3.2499999999963114e-06, 3.319000000001626e-06, 3.2359999999898026e-06, 3.250000000010189e-06, 3.2360000000036804e-06, 3.1949999999975054e-06, 3.2639999999889424e-06, 3.26400000000282e-06, 3.2499999999963114e-06, 3.26400000000282e-06, 3.26400000000282e-06, 3.2360000000036804e-06, 3.2229999999966452e-06, 3.250000000010189e-06, 3.2499999999963114e-06, 3.2499999999963114e-06, 3.250000000010189e-06, 3.250000000010189e-06, 3.2360000000036804e-06, 3.2910000000024864e-06, 3.1939999999980317e-06, 3.2360000000036804e-06, 3.237000000003154e-06]</msg>
<status status="PASS" starttime="20201115 22:11:33.859" endtime="20201115 22:11:33.861"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.855" endtime="20201115 22:11:33.862"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:33.864" endtime="20201115 22:11:33.865"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:33.867" endtime="20201115 22:11:33.887"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.866" endtime="20201115 22:11:33.887"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.862" endtime="20201115 22:11:33.888"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.500" endtime="20201115 22:11:33.889"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.499" endtime="20201115 22:11:33.889"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.498" endtime="20201115 22:11:33.889"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:33.891" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:33.900" endtime="20201115 22:11:33.912"></status>
</kw>
<msg timestamp="20201115 22:11:33.912" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:33.898" endtime="20201115 22:11:33.912"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:33.915" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:33.913" endtime="20201115 22:11:33.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:33.916" endtime="20201115 22:11:33.917"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.896" endtime="20201115 22:11:33.918"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.894" endtime="20201115 22:11:33.918"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:33.925" endtime="20201115 22:11:34.209"></status>
</kw>
<msg timestamp="20201115 22:11:34.212" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024512014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0245155, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:11:33.923" endtime="20201115 22:11:34.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:34.220" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024512014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0245155, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:11:34.213" endtime="20201115 22:11:34.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:34.222" endtime="20201115 22:11:34.223"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.921" endtime="20201115 22:11:34.224"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.919" endtime="20201115 22:11:34.224"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:34.228" level="INFO">${RESULT} = [{'time': 0.0245155, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.486000000000461e-06, 'source_diff': 3.486000000000461e-06}, {'time': 0.024565111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:11:34.225" endtime="20201115 22:11:34.228"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:34.241" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:34.229" endtime="20201115 22:11:34.242"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:34.246" level="INFO">NAME: 00-overhead-2-set</msg>
<status status="PASS" starttime="20201115 22:11:34.245" endtime="20201115 22:11:34.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:34.248" level="INFO">VALUE: [3.486000000000461e-06, 3.069000000001376e-06, 3.097000000000516e-06, 3.083000000000946e-06, 3.111000000000086e-06, 3.04200000000171e-06, 3.097000000000516e-06, 3.097000000000516e-06, 3.139000000002695e-06, 3.097000000000516e-06, 3.111000000000086e-06, 3.0969999999970466e-06, 3.097000000000516e-06, 3.097000000000516e-06, 3.097000000000516e-06, 3.083000000000946e-06, 3.124999999999656e-06, 3.1119999999995596e-06, 3.069000000001376e-06, 3.083000000000946e-06, 3.165999999998892e-06, 3.1119999999995596e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.1669999999983656e-06, 3.111000000000086e-06, 3.083000000000946e-06, 3.0829999999974766e-06, 3.083000000000946e-06, 3.124999999999656e-06, 3.124999999999656e-06, 3.083000000000946e-06, 3.097000000000516e-06, 3.097000000000516e-06, 3.0699999999973804e-06, 3.069000000001376e-06, 3.097000000000516e-06, 3.124999999999656e-06, 3.083000000000946e-06, 3.0550000000018063e-06, 3.083000000000946e-06, 3.097000000000516e-06, 3.111000000000086e-06, 3.097000000000516e-06, 3.097000000000516e-06, 3.097000000000516e-06, 3.054999999998337e-06, 3.0839999999969503e-06, 3.097000000000516e-06, 3.0979999999999897e-06]</msg>
<status status="PASS" starttime="20201115 22:11:34.247" endtime="20201115 22:11:34.249"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.242" endtime="20201115 22:11:34.250"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:34.252" endtime="20201115 22:11:34.253"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:34.255" endtime="20201115 22:11:34.274"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.254" endtime="20201115 22:11:34.275"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.250" endtime="20201115 22:11:34.275"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.892" endtime="20201115 22:11:34.276"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.890" endtime="20201115 22:11:34.276"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.889" endtime="20201115 22:11:34.276"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:34.278" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:34.287" endtime="20201115 22:11:34.299"></status>
</kw>
<msg timestamp="20201115 22:11:34.300" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:34.285" endtime="20201115 22:11:34.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:34.302" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:34.301" endtime="20201115 22:11:34.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:34.303" endtime="20201115 22:11:34.305"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.283" endtime="20201115 22:11:34.305"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.281" endtime="20201115 22:11:34.306"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:34.312" endtime="20201115 22:11:34.599"></status>
</kw>
<msg timestamp="20201115 22:11:34.602" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024124625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024128056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:34.311" endtime="20201115 22:11:34.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:34.610" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024124625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024128056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:34.603" endtime="20201115 22:11:34.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:34.611" endtime="20201115 22:11:34.613"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.308" endtime="20201115 22:11:34.613"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.306" endtime="20201115 22:11:34.614"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:34.618" level="INFO">${RESULT} = [{'time': 0.024128056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4309999999981855e-06, 'source_diff': 3.4309999999981855e-06}, {'time': 0.024178569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:34.614" endtime="20201115 22:11:34.618"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:34.631" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:34.619" endtime="20201115 22:11:34.631"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:34.636" level="INFO">NAME: 00-overhead-3-set</msg>
<status status="PASS" starttime="20201115 22:11:34.635" endtime="20201115 22:11:34.636"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:34.638" level="INFO">VALUE: [3.4309999999981855e-06, 3.194000000001501e-06, 3.236000000000211e-06, 3.222000000000641e-06, 3.222000000000641e-06, 3.236000000000211e-06, 3.236000000000211e-06, 3.236000000000211e-06, 3.167000000001835e-06, 3.194000000001501e-06, 3.222000000000641e-06, 3.2639999999993508e-06, 3.236000000000211e-06, 3.2770000000029165e-06, 3.222000000000641e-06, 3.208000000001071e-06, 3.222000000000641e-06, 3.222000000000641e-06, 3.2230000000001147e-06, 3.236000000000211e-06, 3.2230000000001147e-06, 3.2230000000001147e-06, 3.236000000000211e-06, 3.2079999999976017e-06, 3.222000000000641e-06, 3.249999999999781e-06, 3.2079999999976017e-06, 3.236000000000211e-06, 3.222000000000641e-06, 3.2230000000001147e-06, 3.236000000000211e-06, 3.249999999999781e-06, 3.2639999999993508e-06, 3.222000000000641e-06, 3.2359999999967415e-06, 3.208000000001071e-06, 3.2779999999989207e-06, 3.2500000000032503e-06, 3.2919999999984906e-06, 3.2779999999989207e-06, 3.208000000001071e-06, 3.249999999999781e-06, 3.2359999999967415e-06, 3.27800000000239e-06, 3.236000000000211e-06, 3.236000000000211e-06, 3.249999999999781e-06, 3.236000000000211e-06, 3.236000000000211e-06, 3.222000000000641e-06]</msg>
<status status="PASS" starttime="20201115 22:11:34.637" endtime="20201115 22:11:34.639"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.632" endtime="20201115 22:11:34.639"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:34.642" endtime="20201115 22:11:34.643"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:34.645" endtime="20201115 22:11:34.664"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.643" endtime="20201115 22:11:34.665"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.640" endtime="20201115 22:11:34.665"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.279" endtime="20201115 22:11:34.665"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.277" endtime="20201115 22:11:34.666"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.276" endtime="20201115 22:11:34.666"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:34.668" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:34.677" endtime="20201115 22:11:34.690"></status>
</kw>
<msg timestamp="20201115 22:11:34.691" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:34.675" endtime="20201115 22:11:34.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:34.693" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:34.692" endtime="20201115 22:11:34.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:34.694" endtime="20201115 22:11:34.696"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.673" endtime="20201115 22:11:34.696"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.671" endtime="20201115 22:11:34.696"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:34.703" endtime="20201115 22:11:34.988"></status>
</kw>
<msg timestamp="20201115 22:11:34.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024721972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024725694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:34.701" endtime="20201115 22:11:34.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:34.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024721972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024725694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:34.992" endtime="20201115 22:11:35.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:35.001" endtime="20201115 22:11:35.002"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.699" endtime="20201115 22:11:35.003"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.697" endtime="20201115 22:11:35.003"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:35.007" level="INFO">${RESULT} = [{'time': 0.024725694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.722000000001141e-06, 'source_diff': 3.722000000001141e-06}, {'time': 0.024778681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:35.004" endtime="20201115 22:11:35.007"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:35.021" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:35.009" endtime="20201115 22:11:35.021"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:35.025" level="INFO">NAME: 00-overhead-4-set</msg>
<status status="PASS" starttime="20201115 22:11:35.024" endtime="20201115 22:11:35.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:35.028" level="INFO">VALUE: [3.722000000001141e-06, 3.55600000000178e-06, 3.486000000000461e-06, 3.486000000000461e-06, 3.526999999999697e-06, 3.5279999999991707e-06, 3.472000000000891e-06, 3.5279999999991707e-06, 3.500000000000031e-06, 3.4859999999969915e-06, 3.5139999999996008e-06, 3.554999999998837e-06, 3.5139999999996008e-06, 3.5140000000030702e-06, 3.486000000000461e-06, 3.583000000001446e-06, 3.500000000000031e-06, 3.5419999999987406e-06, 3.5139999999996008e-06, 3.472000000000891e-06, 3.4869999999999346e-06, 3.5139999999996008e-06, 3.513000000000127e-06, 3.4579999999978517e-06, 3.500000000000031e-06, 3.52800000000264e-06, 3.5279999999991707e-06, 3.5139999999996008e-06, 3.5139999999996008e-06, 3.5139999999996008e-06, 3.5139999999996008e-06, 3.500000000000031e-06, 3.5139999999996008e-06, 3.4579999999978517e-06, 3.5559999999983105e-06, 3.5139999999996008e-06, 3.526999999999697e-06, 3.500000000000031e-06, 3.526999999999697e-06, 3.429999999998712e-06, 3.57000000000135e-06, 3.5139999999996008e-06, 3.5279999999991707e-06, 3.513000000000127e-06, 3.526999999999697e-06, 3.5279999999991707e-06, 3.472000000000891e-06, 3.5279999999991707e-06, 3.5139999999996008e-06, 3.5279999999991707e-06]</msg>
<status status="PASS" starttime="20201115 22:11:35.026" endtime="20201115 22:11:35.028"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.022" endtime="20201115 22:11:35.029"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:35.031" endtime="20201115 22:11:35.032"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:35.034" endtime="20201115 22:11:35.054"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.033" endtime="20201115 22:11:35.054"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.029" endtime="20201115 22:11:35.055"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.669" endtime="20201115 22:11:35.055"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.667" endtime="20201115 22:11:35.055"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.666" endtime="20201115 22:11:35.055"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:35.058" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:35.066" endtime="20201115 22:11:35.080"></status>
</kw>
<msg timestamp="20201115 22:11:35.080" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:35.065" endtime="20201115 22:11:35.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:35.083" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:35.081" endtime="20201115 22:11:35.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:35.084" endtime="20201115 22:11:35.085"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.062" endtime="20201115 22:11:35.086"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.060" endtime="20201115 22:11:35.086"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:35.093" endtime="20201115 22:11:35.379"></status>
</kw>
<msg timestamp="20201115 22:11:35.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024128819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024132806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:35.091" endtime="20201115 22:11:35.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:35.390" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024128819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024132806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:35.383" endtime="20201115 22:11:35.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:35.392" endtime="20201115 22:11:35.393"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.089" endtime="20201115 22:11:35.394"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.087" endtime="20201115 22:11:35.394"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:35.398" level="INFO">${RESULT} = [{'time': 0.024132806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.987000000000435e-06, 'source_diff': 3.987000000000435e-06}, {'time': 0.024196972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:35.395" endtime="20201115 22:11:35.399"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:35.413" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:35.399" endtime="20201115 22:11:35.413"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:35.417" level="INFO">NAME: 00-overhead-5-set</msg>
<status status="PASS" starttime="20201115 22:11:35.416" endtime="20201115 22:11:35.418"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:35.420" level="INFO">VALUE: [3.987000000000435e-06, 3.819000000002126e-06, 3.8199999999981304e-06, 3.818999999998657e-06, 3.790999999999517e-06, 3.7919999999989906e-06, 3.804999999999087e-06, 3.804999999999087e-06, 3.79200000000246e-06, 3.8059999999985605e-06, 3.8200000000016e-06, 3.7779999999994207e-06, 3.804999999999087e-06, 3.804999999999087e-06, 3.8199999999981304e-06, 3.8200000000016e-06, 3.8059999999985605e-06, 3.804999999999087e-06, 3.804999999999087e-06, 3.8199999999981304e-06, 3.80600000000203e-06, 3.776999999999947e-06, 3.790999999999517e-06, 3.804999999999087e-06, 3.7919999999989906e-06, 3.83400000000117e-06, 3.804999999999087e-06, 3.847000000001266e-06, 3.8339999999977e-06, 3.79200000000246e-06, 3.776999999999947e-06, 3.7779999999994207e-06, 3.875000000000406e-06, 3.750000000000281e-06, 3.8199999999981304e-06, 3.80600000000203e-06, 3.86200000000031e-06, 3.7779999999994207e-06, 3.7919999999989906e-06, 3.8059999999985605e-06, 3.8050000000025563e-06, 3.80600000000203e-06, 3.832999999998227e-06, 3.776999999999947e-06, 3.8609999999973665e-06, 3.8059999999985605e-06, 3.776999999999947e-06, 3.7779999999994207e-06, 3.77800000000289e-06, 3.736000000000711e-06]</msg>
<status status="PASS" starttime="20201115 22:11:35.418" endtime="20201115 22:11:35.420"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.414" endtime="20201115 22:11:35.421"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:35.423" endtime="20201115 22:11:35.424"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:35.426" endtime="20201115 22:11:35.446"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.425" endtime="20201115 22:11:35.446"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.421" endtime="20201115 22:11:35.447"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.058" endtime="20201115 22:11:35.447"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.056" endtime="20201115 22:11:35.447"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.056" endtime="20201115 22:11:35.447"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:35.450" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:35.458" endtime="20201115 22:11:35.471"></status>
</kw>
<msg timestamp="20201115 22:11:35.471" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:35.457" endtime="20201115 22:11:35.471"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:35.474" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:35.472" endtime="20201115 22:11:35.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:35.475" endtime="20201115 22:11:35.476"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.454" endtime="20201115 22:11:35.477"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.452" endtime="20201115 22:11:35.477"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:35.484" endtime="20201115 22:11:35.770"></status>
</kw>
<msg timestamp="20201115 22:11:35.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024070625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024074917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:35.482" endtime="20201115 22:11:35.774"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:35.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024070625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024074917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:35.774" endtime="20201115 22:11:35.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:35.783" endtime="20201115 22:11:35.784"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.479" endtime="20201115 22:11:35.785"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.478" endtime="20201115 22:11:35.785"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:35.789" level="INFO">${RESULT} = [{'time': 0.024074917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.29200000000296e-06, 'source_diff': 4.29200000000296e-06}, {'time': 0.024137958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:11:35.786" endtime="20201115 22:11:35.790"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:35.803" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:35.791" endtime="20201115 22:11:35.803"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:35.808" level="INFO">NAME: 00-overhead-6-set</msg>
<status status="PASS" starttime="20201115 22:11:35.807" endtime="20201115 22:11:35.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:35.810" level="INFO">VALUE: [4.29200000000296e-06, 4.111000000001086e-06, 4.097000000001516e-06, 4.097000000001516e-06, 4.111000000001086e-06, 4.097000000001516e-06, 4.09800000000099e-06, 4.1109999999976166e-06, 4.097000000001516e-06, 4.082999999998477e-06, 4.152000000000322e-06, 4.097000000001516e-06, 4.09800000000099e-06, 4.069000000002376e-06, 4.0699999999983805e-06, 4.096999999998047e-06, 4.082999999998477e-06, 4.111000000001086e-06, 4.083000000001946e-06, 4.082999999998477e-06, 4.054999999999337e-06, 4.139000000000226e-06, 4.139000000000226e-06, 4.027999999999671e-06, 4.11200000000056e-06, 4.125000000000656e-06, 4.111000000001086e-06, 4.096999999998047e-06, 4.111000000001086e-06, 4.09800000000099e-06, 4.083000000001946e-06, 4.125000000000656e-06, 4.07000000000185e-06, 4.082999999998477e-06, 4.139000000000226e-06, 4.04200000000271e-06, 4.097000000001516e-06, 4.111000000001086e-06, 4.097000000001516e-06, 4.111000000001086e-06, 4.166999999999366e-06, 4.139000000000226e-06, 4.068999999998907e-06, 4.083000000001946e-06, 4.083000000001946e-06, 4.11200000000056e-06, 4.09800000000099e-06, 4.1109999999976166e-06, 4.083000000001946e-06, 4.055000000002806e-06]</msg>
<status status="PASS" starttime="20201115 22:11:35.809" endtime="20201115 22:11:35.811"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.804" endtime="20201115 22:11:35.811"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:35.813" endtime="20201115 22:11:35.815"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:35.817" endtime="20201115 22:11:35.836"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.815" endtime="20201115 22:11:35.837"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.812" endtime="20201115 22:11:35.837"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.450" endtime="20201115 22:11:35.837"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.448" endtime="20201115 22:11:35.838"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.448" endtime="20201115 22:11:35.838"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:35.840" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:35.849" endtime="20201115 22:11:35.863"></status>
</kw>
<msg timestamp="20201115 22:11:35.863" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:35.847" endtime="20201115 22:11:35.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:35.866" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:35.864" endtime="20201115 22:11:35.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:35.867" endtime="20201115 22:11:35.869"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.845" endtime="20201115 22:11:35.869"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.843" endtime="20201115 22:11:35.870"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:35.876" endtime="20201115 22:11:36.162"></status>
</kw>
<msg timestamp="20201115 22:11:36.165" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024619347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024623917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:35.875" endtime="20201115 22:11:36.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:36.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024619347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024623917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:36.167" endtime="20201115 22:11:36.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:36.175" endtime="20201115 22:11:36.176"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.872" endtime="20201115 22:11:36.177"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.870" endtime="20201115 22:11:36.177"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:36.181" level="INFO">${RESULT} = [{'time': 0.024623917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.5699999999988805e-06, 'source_diff': 4.5699999999988805e-06}, {'time': 0.024688125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:36.178" endtime="20201115 22:11:36.182"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:36.194" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:36.182" endtime="20201115 22:11:36.195"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:36.199" level="INFO">NAME: 00-overhead-7-set</msg>
<status status="PASS" starttime="20201115 22:11:36.198" endtime="20201115 22:11:36.199"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:36.201" level="INFO">VALUE: [4.5699999999988805e-06, 4.3749999999974365e-06, 4.375000000000906e-06, 4.375000000000906e-06, 4.361000000001336e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.360999999997867e-06, 4.389000000000476e-06, 4.375000000000906e-06, 4.403000000000046e-06, 4.361000000001336e-06, 4.403000000000046e-06, 4.4449999999987555e-06, 4.403000000000046e-06, 4.375000000000906e-06, 4.3749999999974365e-06, 4.375000000000906e-06, 4.375000000000906e-06, 4.361000000001336e-06, 4.29200000000296e-06, 4.388000000001002e-06, 4.389000000000476e-06, 4.444000000002751e-06, 4.30600000000253e-06, 4.389000000000476e-06, 4.375000000000906e-06, 4.429999999999712e-06, 4.3749999999974365e-06, 4.361000000001336e-06, 4.360999999997867e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.305999999999061e-06, 4.375000000000906e-06, 4.375000000000906e-06, 4.361000000001336e-06, 4.3749999999974365e-06, 4.36199999999734e-06, 4.360999999997867e-06, 4.375000000000906e-06, 4.361000000001336e-06, 4.36199999999734e-06, 4.375000000000906e-06, 4.3749999999974365e-06, 4.346999999998297e-06, 4.375000000000906e-06, 4.375000000000906e-06, 4.375000000000906e-06, 4.375000000000906e-06]</msg>
<status status="PASS" starttime="20201115 22:11:36.200" endtime="20201115 22:11:36.202"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.195" endtime="20201115 22:11:36.202"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:36.204" endtime="20201115 22:11:36.206"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:36.208" endtime="20201115 22:11:36.227"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.206" endtime="20201115 22:11:36.228"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.203" endtime="20201115 22:11:36.228"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.841" endtime="20201115 22:11:36.228"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.839" endtime="20201115 22:11:36.229"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.838" endtime="20201115 22:11:36.229"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:36.231" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:36.240" endtime="20201115 22:11:36.254"></status>
</kw>
<msg timestamp="20201115 22:11:36.254" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:36.239" endtime="20201115 22:11:36.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:36.256" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:36.255" endtime="20201115 22:11:36.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:36.258" endtime="20201115 22:11:36.259"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.236" endtime="20201115 22:11:36.260"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.233" endtime="20201115 22:11:36.260"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:36.266" endtime="20201115 22:11:36.554"></status>
</kw>
<msg timestamp="20201115 22:11:36.557" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024948611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024953458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:36.265" endtime="20201115 22:11:36.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:36.565" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024948611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024953458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:36.558" endtime="20201115 22:11:36.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:36.566" endtime="20201115 22:11:36.568"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.262" endtime="20201115 22:11:36.568"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.261" endtime="20201115 22:11:36.568"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:36.573" level="INFO">${RESULT} = [{'time': 0.024953458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.847000000002266e-06, 'source_diff': 4.847000000002266e-06}, {'time': 0.025023556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:36.569" endtime="20201115 22:11:36.573"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:36.586" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:36.574" endtime="20201115 22:11:36.586"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:36.590" level="INFO">NAME: 00-overhead-8-set</msg>
<status status="PASS" starttime="20201115 22:11:36.589" endtime="20201115 22:11:36.591"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:36.593" level="INFO">VALUE: [4.847000000002266e-06, 4.680999999999436e-06, 4.666999999999866e-06, 4.693999999999532e-06, 4.666999999999866e-06, 4.679999999999962e-06, 4.679999999999962e-06, 4.680999999999436e-06, 4.666999999999866e-06, 4.721999999998672e-06, 4.680999999999436e-06, 4.610999999998117e-06, 4.666999999999866e-06, 4.680999999999436e-06, 4.679999999999962e-06, 4.680999999999436e-06, 4.694000000003001e-06, 4.610999999998117e-06, 4.653000000000296e-06, 4.722999999998145e-06, 4.666999999999866e-06, 4.653000000000296e-06, 4.666000000000392e-06, 4.625000000001156e-06, 4.750000000001281e-06, 4.666999999999866e-06, 4.666999999999866e-06, 4.597000000002016e-06, 4.679999999999962e-06, 4.610999999998117e-06, 4.6249999999976865e-06, 4.679999999999962e-06, 4.707999999999102e-06, 4.736000000001711e-06, 4.707999999999102e-06, 4.652999999996826e-06, 4.666999999999866e-06, 4.653000000000296e-06, 4.693999999999532e-06, 4.693999999999532e-06, 4.653000000000296e-06, 4.639000000000726e-06, 4.680999999999436e-06, 4.6949999999990055e-06, 4.695000000002475e-06, 4.653000000000296e-06, 4.651999999997353e-06, 4.707999999999102e-06, 4.680999999999436e-06, 4.679999999999962e-06]</msg>
<status status="PASS" starttime="20201115 22:11:36.591" endtime="20201115 22:11:36.593"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.587" endtime="20201115 22:11:36.594"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:36.596" endtime="20201115 22:11:36.597"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:36.599" endtime="20201115 22:11:36.619"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.598" endtime="20201115 22:11:36.620"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.594" endtime="20201115 22:11:36.620"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.232" endtime="20201115 22:11:36.620"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.230" endtime="20201115 22:11:36.621"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.229" endtime="20201115 22:11:36.621"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:36.623" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:36.632" endtime="20201115 22:11:36.646"></status>
</kw>
<msg timestamp="20201115 22:11:36.646" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:36.630" endtime="20201115 22:11:36.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:36.649" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:36.647" endtime="20201115 22:11:36.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:36.650" endtime="20201115 22:11:36.651"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.628" endtime="20201115 22:11:36.652"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.625" endtime="20201115 22:11:36.652"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:36.658" endtime="20201115 22:11:36.945"></status>
</kw>
<msg timestamp="20201115 22:11:36.948" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024687986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024693125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:36.657" endtime="20201115 22:11:36.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:36.956" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024687986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024693125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:36.949" endtime="20201115 22:11:36.957"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:36.958" endtime="20201115 22:11:36.959"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.654" endtime="20201115 22:11:36.960"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.653" endtime="20201115 22:11:36.960"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:36.964" level="INFO">${RESULT} = [{'time': 0.024693125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.139000000001226e-06, 'source_diff': 5.139000000001226e-06}, {'time': 0.024774194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:36.961" endtime="20201115 22:11:36.964"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:36.979" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:36.965" endtime="20201115 22:11:36.979"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:36.983" level="INFO">NAME: 00-overhead-9-set</msg>
<status status="PASS" starttime="20201115 22:11:36.982" endtime="20201115 22:11:36.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:36.986" level="INFO">VALUE: [5.139000000001226e-06, 4.930000000000212e-06, 4.943999999999782e-06, 4.9449999999992555e-06, 4.9449999999992555e-06, 4.9449999999992555e-06, 5.014000000001101e-06, 4.957999999999352e-06, 4.9449999999992555e-06, 4.930999999999686e-06, 4.9449999999992555e-06, 4.959000000002295e-06, 4.916000000000642e-06, 4.945000000002725e-06, 4.957999999999352e-06, 4.943999999999782e-06, 4.943999999999782e-06, 4.943999999999782e-06, 4.943999999999782e-06, 4.9589999999988255e-06, 4.945000000002725e-06, 4.9449999999992555e-06, 4.9589999999988255e-06, 4.930999999999686e-06, 4.986000000001961e-06, 4.972000000002391e-06, 4.930999999999686e-06, 4.9589999999988255e-06, 4.972999999998395e-06, 4.943999999999782e-06, 4.957999999999352e-06, 4.972000000002391e-06, 4.986000000001961e-06, 4.9449999999992555e-06, 4.9449999999992555e-06, 4.930999999999686e-06, 4.943999999999782e-06, 4.930000000000212e-06, 4.957999999999352e-06, 4.9449999999992555e-06, 4.9449999999992555e-06, 4.943999999999782e-06, 4.943999999999782e-06, 4.889000000000976e-06, 4.931000000003155e-06, 4.903000000000546e-06, 4.9449999999992555e-06, 4.943999999999782e-06, 4.972000000002391e-06, 4.9449999999992555e-06]</msg>
<status status="PASS" starttime="20201115 22:11:36.984" endtime="20201115 22:11:36.987"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.980" endtime="20201115 22:11:36.987"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:36.989" endtime="20201115 22:11:36.991"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:36.993" endtime="20201115 22:11:37.012"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.991" endtime="20201115 22:11:37.013"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.988" endtime="20201115 22:11:37.013"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.624" endtime="20201115 22:11:37.013"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.622" endtime="20201115 22:11:37.014"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.621" endtime="20201115 22:11:37.014"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:37.016" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:37.025" endtime="20201115 22:11:37.040"></status>
</kw>
<msg timestamp="20201115 22:11:37.040" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:37.023" endtime="20201115 22:11:37.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:37.042" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:37.041" endtime="20201115 22:11:37.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:37.043" endtime="20201115 22:11:37.045"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.021" endtime="20201115 22:11:37.045"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.019" endtime="20201115 22:11:37.046"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:37.052" endtime="20201115 22:11:37.339"></status>
</kw>
<msg timestamp="20201115 22:11:37.342" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024875861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024881278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:37.051" endtime="20201115 22:11:37.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:37.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024875861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024881278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:37.343" endtime="20201115 22:11:37.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:37.351" endtime="20201115 22:11:37.353"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.048" endtime="20201115 22:11:37.353"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.046" endtime="20201115 22:11:37.354"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:37.358" level="INFO">${RESULT} = [{'time': 0.024881278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.417000000000616e-06, 'source_diff': 5.417000000000616e-06}, {'time': 0.024966, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 22:11:37.355" endtime="20201115 22:11:37.358"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:37.371" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:37.359" endtime="20201115 22:11:37.371"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:37.376" level="INFO">NAME: 00-overhead-10-set</msg>
<status status="PASS" starttime="20201115 22:11:37.375" endtime="20201115 22:11:37.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:37.379" level="INFO">VALUE: [5.417000000000616e-06, 5.235999999998742e-06, 5.250000000001781e-06, 5.194000000000032e-06, 5.236999999998215e-06, 5.250000000001781e-06, 5.207999999999602e-06, 5.221999999999172e-06, 5.250000000001781e-06, 5.235999999998742e-06, 5.264000000001351e-06, 5.235999999998742e-06, 5.180999999999936e-06, 5.235999999998742e-06, 5.250000000001781e-06, 5.235999999998742e-06, 5.237000000001685e-06, 5.250000000001781e-06, 5.2499999999983116e-06, 5.2499999999983116e-06, 5.235999999998742e-06, 5.264000000001351e-06, 5.236000000002211e-06, 5.2089999999990755e-06, 5.262999999998408e-06, 5.250000000001781e-06, 5.264000000001351e-06, 5.236000000002211e-06, 5.250000000001781e-06, 5.2499999999983116e-06, 5.235999999998742e-06, 5.209000000002545e-06, 5.291000000001017e-06, 5.250000000001781e-06, 5.167000000000366e-06, 5.250000000001781e-06, 5.250000000001781e-06, 5.263000000001877e-06, 5.2499999999983116e-06, 5.236000000002211e-06, 5.236999999998215e-06, 5.250000000001781e-06, 5.236000000002211e-06, 5.221999999999172e-06, 5.235999999998742e-06, 5.236000000002211e-06, 5.2639999999978815e-06, 5.2499999999983116e-06, 5.235999999998742e-06, 5.235999999998742e-06]</msg>
<status status="PASS" starttime="20201115 22:11:37.377" endtime="20201115 22:11:37.379"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.372" endtime="20201115 22:11:37.380"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:37.382" endtime="20201115 22:11:37.383"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:37.385" endtime="20201115 22:11:37.404"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.384" endtime="20201115 22:11:37.405"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.380" endtime="20201115 22:11:37.405"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.016" endtime="20201115 22:11:37.406"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.015" endtime="20201115 22:11:37.406"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.014" endtime="20201115 22:11:37.406"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:37.408" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:37.417" endtime="20201115 22:11:37.433"></status>
</kw>
<msg timestamp="20201115 22:11:37.433" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:37.415" endtime="20201115 22:11:37.434"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:37.436" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:37.434" endtime="20201115 22:11:37.436"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:37.437" endtime="20201115 22:11:37.439"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.413" endtime="20201115 22:11:37.439"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.411" endtime="20201115 22:11:37.439"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:37.446" endtime="20201115 22:11:37.732"></status>
</kw>
<msg timestamp="20201115 22:11:37.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024171014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024176778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:37.444" endtime="20201115 22:11:37.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:37.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024171014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024176778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:37.736" endtime="20201115 22:11:37.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:37.744" endtime="20201115 22:11:37.746"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.442" endtime="20201115 22:11:37.747"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.440" endtime="20201115 22:11:37.747"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:37.751" level="INFO">${RESULT} = [{'time': 0.024176778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7639999999983815e-06, 'source_diff': 5.7639999999983815e-06}, {'time': 0.024262319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:37.748" endtime="20201115 22:11:37.751"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:37.765" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:37.752" endtime="20201115 22:11:37.765"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:37.769" level="INFO">NAME: 00-overhead-11-set</msg>
<status status="PASS" starttime="20201115 22:11:37.768" endtime="20201115 22:11:37.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:37.772" level="INFO">VALUE: [5.7639999999983815e-06, 5.527000000001697e-06, 5.5139999999981315e-06, 5.499999999998562e-06, 5.542000000000741e-06, 5.5139999999981315e-06, 5.527999999997701e-06, 5.542000000000741e-06, 5.542000000000741e-06, 5.528000000001171e-06, 5.528000000001171e-06, 5.514000000001601e-06, 5.5139999999981315e-06, 5.528000000001171e-06, 5.513000000002127e-06, 5.528000000001171e-06, 5.5139999999981315e-06, 5.514000000001601e-06, 5.514000000001601e-06, 5.5139999999981315e-06, 5.499999999998562e-06, 5.542000000000741e-06, 5.514000000001601e-06, 5.542000000000741e-06, 5.514000000001601e-06, 5.5139999999981315e-06, 5.569000000000407e-06, 5.528000000001171e-06, 5.528000000001171e-06, 5.514000000001601e-06, 5.500000000002031e-06, 5.514000000001601e-06, 5.5139999999981315e-06, 5.499999999998562e-06, 5.528000000001171e-06, 5.457999999999852e-06, 5.512999999998658e-06, 5.512999999998658e-06, 5.556000000000311e-06, 5.527999999997701e-06, 5.514000000001601e-06, 5.541000000001267e-06, 5.512999999998658e-06, 5.556000000000311e-06, 5.528000000001171e-06, 5.5139999999981315e-06, 5.486000000002461e-06, 5.528000000001171e-06, 5.528000000001171e-06, 5.471999999999422e-06]</msg>
<status status="PASS" starttime="20201115 22:11:37.770" endtime="20201115 22:11:37.772"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.765" endtime="20201115 22:11:37.772"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:37.775" endtime="20201115 22:11:37.776"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:37.778" endtime="20201115 22:11:37.797"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.777" endtime="20201115 22:11:37.798"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.773" endtime="20201115 22:11:37.799"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.409" endtime="20201115 22:11:37.799"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.407" endtime="20201115 22:11:37.799"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.406" endtime="20201115 22:11:37.799"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:37.801" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:37.810" endtime="20201115 22:11:37.826"></status>
</kw>
<msg timestamp="20201115 22:11:37.826" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:37.808" endtime="20201115 22:11:37.826"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:37.829" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:37.827" endtime="20201115 22:11:37.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:37.830" endtime="20201115 22:11:37.832"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.806" endtime="20201115 22:11:37.832"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.804" endtime="20201115 22:11:37.833"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:37.840" endtime="20201115 22:11:38.126"></status>
</kw>
<msg timestamp="20201115 22:11:38.129" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024515917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024521931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:37.838" endtime="20201115 22:11:38.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:38.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024515917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024521931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:38.130" endtime="20201115 22:11:38.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:38.138" endtime="20201115 22:11:38.140"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.836" endtime="20201115 22:11:38.141"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.834" endtime="20201115 22:11:38.141"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:38.145" level="INFO">${RESULT} = [{'time': 0.024521931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0139999999986316e-06, 'source_diff': 6.0139999999986316e-06}, {'time': 0.024618806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:38.142" endtime="20201115 22:11:38.145"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:38.158" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:38.146" endtime="20201115 22:11:38.158"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:38.163" level="INFO">NAME: 00-overhead-12-set</msg>
<status status="PASS" starttime="20201115 22:11:38.162" endtime="20201115 22:11:38.163"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:38.165" level="INFO">VALUE: [6.0139999999986316e-06, 5.820000000000131e-06, 5.804999999997618e-06, 5.819000000000657e-06, 5.820000000000131e-06, 5.805999999997091e-06, 5.7779999999979514e-06, 5.805000000001087e-06, 5.805000000001087e-06, 5.833000000000227e-06, 5.846999999999797e-06, 5.819000000000657e-06, 5.791999999997521e-06, 5.764000000001851e-06, 5.804999999997618e-06, 5.804999999997618e-06, 5.806000000000561e-06, 5.846999999999797e-06, 5.820000000000131e-06, 5.750000000002281e-06, 5.846999999999797e-06, 5.819000000000657e-06, 5.819000000000657e-06, 5.819000000000657e-06, 5.820000000000131e-06, 5.806000000000561e-06, 5.833000000000227e-06, 5.833000000000227e-06, 5.791999999997521e-06, 5.819000000000657e-06, 5.8339999999997005e-06, 5.819000000000657e-06, 5.875000000002406e-06, 5.806000000000561e-06, 5.8189999999971875e-06, 5.8189999999971875e-06, 5.791999999997521e-06, 5.805000000001087e-06, 5.833000000000227e-06, 5.791999999997521e-06, 5.820000000000131e-06, 5.804999999997618e-06, 5.805000000001087e-06, 5.819000000000657e-06, 5.819000000000657e-06, 5.806000000000561e-06, 5.820000000000131e-06, 5.833000000000227e-06, 5.778000000001421e-06, 5.819000000000657e-06]</msg>
<status status="PASS" starttime="20201115 22:11:38.164" endtime="20201115 22:11:38.165"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.159" endtime="20201115 22:11:38.166"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:38.168" endtime="20201115 22:11:38.169"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:38.172" endtime="20201115 22:11:38.191"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.170" endtime="20201115 22:11:38.191"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.166" endtime="20201115 22:11:38.192"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.802" endtime="20201115 22:11:38.192"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.800" endtime="20201115 22:11:38.192"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.800" endtime="20201115 22:11:38.193"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:38.195" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:38.203" endtime="20201115 22:11:38.218"></status>
</kw>
<msg timestamp="20201115 22:11:38.219" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:38.202" endtime="20201115 22:11:38.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:38.221" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:38.220" endtime="20201115 22:11:38.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:38.222" endtime="20201115 22:11:38.224"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.199" endtime="20201115 22:11:38.225"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.197" endtime="20201115 22:11:38.225"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:38.232" endtime="20201115 22:11:38.517"></status>
</kw>
<msg timestamp="20201115 22:11:38.520" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024294611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024300903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:38.230" endtime="20201115 22:11:38.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:38.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024294611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024300903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:38.521" endtime="20201115 22:11:38.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:38.530" endtime="20201115 22:11:38.531"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.227" endtime="20201115 22:11:38.532"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.226" endtime="20201115 22:11:38.532"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:38.536" level="INFO">${RESULT} = [{'time': 0.024300903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.291999999998021e-06, 'source_diff': 6.291999999998021e-06}, {'time': 0.02439975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:11:38.533" endtime="20201115 22:11:38.536"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:38.551" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:38.537" endtime="20201115 22:11:38.551"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:38.555" level="INFO">NAME: 00-overhead-13-set</msg>
<status status="PASS" starttime="20201115 22:11:38.554" endtime="20201115 22:11:38.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:38.558" level="INFO">VALUE: [6.291999999998021e-06, 6.097000000000047e-06, 6.153000000001796e-06, 6.083000000000477e-06, 6.069000000000907e-06, 6.110999999999617e-06, 6.0839999999999506e-06, 6.097000000000047e-06, 6.070000000000381e-06, 6.069000000000907e-06, 6.097000000000047e-06, 6.137999999999283e-06, 6.124999999999187e-06, 6.083000000000477e-06, 6.083000000000477e-06, 6.110999999999617e-06, 6.124999999999187e-06, 6.083000000000477e-06, 6.083000000000477e-06, 6.056000000000811e-06, 6.070000000000381e-06, 6.070000000000381e-06, 6.083000000000477e-06, 6.110999999999617e-06, 6.0139999999986316e-06, 6.153000000001796e-06, 6.083000000000477e-06, 6.0689999999974376e-06, 6.070000000000381e-06, 6.0839999999999506e-06, 6.166000000001892e-06, 6.110999999999617e-06, 6.083000000000477e-06, 6.110999999999617e-06, 6.097000000000047e-06, 6.097000000000047e-06, 6.097000000000047e-06, 6.1389999999987566e-06, 6.097000000000047e-06, 6.0979999999995205e-06, 6.097000000000047e-06, 6.0689999999974376e-06, 6.0979999999995205e-06, 6.097000000000047e-06, 6.0689999999974376e-06, 6.083000000000477e-06, 6.110999999999617e-06, 6.0839999999999506e-06, 6.097000000000047e-06, 6.0979999999995205e-06]</msg>
<status status="PASS" starttime="20201115 22:11:38.556" endtime="20201115 22:11:38.558"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.552" endtime="20201115 22:11:38.559"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:38.561" endtime="20201115 22:11:38.562"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:38.564" endtime="20201115 22:11:38.583"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.563" endtime="20201115 22:11:38.584"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.559" endtime="20201115 22:11:38.584"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.195" endtime="20201115 22:11:38.585"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.194" endtime="20201115 22:11:38.585"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.193" endtime="20201115 22:11:38.585"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:38.587" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:38.596" endtime="20201115 22:11:38.611"></status>
</kw>
<msg timestamp="20201115 22:11:38.611" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:38.594" endtime="20201115 22:11:38.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:38.614" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:38.612" endtime="20201115 22:11:38.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:38.615" endtime="20201115 22:11:38.617"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.592" endtime="20201115 22:11:38.617"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.590" endtime="20201115 22:11:38.618"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:38.624" endtime="20201115 22:11:38.911"></status>
</kw>
<msg timestamp="20201115 22:11:38.914" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024593972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024600472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:38.623" endtime="20201115 22:11:38.914"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:38.921" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024593972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024600472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:38.915" endtime="20201115 22:11:38.922"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:38.923" endtime="20201115 22:11:38.924"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.620" endtime="20201115 22:11:38.925"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.618" endtime="20201115 22:11:38.925"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:38.929" level="INFO">${RESULT} = [{'time': 0.024600472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.500000000003031e-06, 'source_diff': 6.500000000003031e-06}, {'time': 0.024704042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:38.926" endtime="20201115 22:11:38.930"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:38.943" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:38.930" endtime="20201115 22:11:38.943"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:38.947" level="INFO">NAME: 00-overhead-14-set</msg>
<status status="PASS" starttime="20201115 22:11:38.946" endtime="20201115 22:11:38.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:38.950" level="INFO">VALUE: [6.500000000003031e-06, 6.444999999997286e-06, 6.389000000002476e-06, 6.374999999999437e-06, 6.347000000000297e-06, 6.374999999999437e-06, 6.388999999999007e-06, 6.374999999999437e-06, 6.4029999999985765e-06, 6.4029999999985765e-06, 6.374999999999437e-06, 6.374999999999437e-06, 6.387999999999533e-06, 6.389000000002476e-06, 6.374999999999437e-06, 6.389000000002476e-06, 6.388999999999007e-06, 6.417000000001616e-06, 6.430999999997716e-06, 6.389000000002476e-06, 6.388999999999007e-06, 6.360999999999867e-06, 6.389000000002476e-06, 6.375000000002906e-06, 6.388999999999007e-06, 6.401999999999103e-06, 6.388999999999007e-06, 6.388999999999007e-06, 6.388999999999007e-06, 6.360999999999867e-06, 6.4029999999985765e-06, 6.4029999999985765e-06, 6.374999999999437e-06, 6.388999999999007e-06, 6.401999999999103e-06, 6.388999999999007e-06, 6.4029999999985765e-06, 6.4029999999985765e-06, 6.374999999999437e-06, 6.389000000002476e-06, 6.388999999999007e-06, 6.388999999999007e-06, 6.403000000002046e-06, 6.388999999999007e-06, 6.388999999999007e-06, 6.444000000001282e-06, 6.417000000001616e-06, 6.389000000002476e-06, 6.374999999999437e-06, 6.388999999999007e-06]</msg>
<status status="PASS" starttime="20201115 22:11:38.948" endtime="20201115 22:11:38.950"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.944" endtime="20201115 22:11:38.950"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:38.953" endtime="20201115 22:11:38.954"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:38.956" endtime="20201115 22:11:38.975"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.954" endtime="20201115 22:11:38.976"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.951" endtime="20201115 22:11:38.976"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.588" endtime="20201115 22:11:38.977"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.586" endtime="20201115 22:11:38.977"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.585" endtime="20201115 22:11:38.977"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:38.979" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:38.988" endtime="20201115 22:11:39.005"></status>
</kw>
<msg timestamp="20201115 22:11:39.005" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:38.987" endtime="20201115 22:11:39.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:39.008" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:39.006" endtime="20201115 22:11:39.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:39.009" endtime="20201115 22:11:39.010"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.984" endtime="20201115 22:11:39.011"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.982" endtime="20201115 22:11:39.011"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:39.017" endtime="20201115 22:11:39.303"></status>
</kw>
<msg timestamp="20201115 22:11:39.306" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025053903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025060806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:39.016" endtime="20201115 22:11:39.306"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:39.314" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025053903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025060806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:39.307" endtime="20201115 22:11:39.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:39.315" endtime="20201115 22:11:39.317"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.013" endtime="20201115 22:11:39.318"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.012" endtime="20201115 22:11:39.318"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:39.322" level="INFO">${RESULT} = [{'time': 0.025060806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.903000000002546e-06, 'source_diff': 6.903000000002546e-06}, {'time': 0.025174181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:39.319" endtime="20201115 22:11:39.323"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:39.336" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:39.323" endtime="20201115 22:11:39.336"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:39.340" level="INFO">NAME: 00-overhead-15-set</msg>
<status status="PASS" starttime="20201115 22:11:39.339" endtime="20201115 22:11:39.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:39.343" level="INFO">VALUE: [6.903000000002546e-06, 6.667000000001866e-06, 6.679999999998493e-06, 6.681000000001436e-06, 6.6669999999983964e-06, 6.665999999998923e-06, 6.6119999999995904e-06, 6.624999999999687e-06, 6.638999999999257e-06, 6.6669999999983964e-06, 6.653000000002296e-06, 6.680000000001962e-06, 6.639000000002726e-06, 6.638999999999257e-06, 6.6669999999983964e-06, 6.6669999999983964e-06, 6.653000000002296e-06, 6.6529999999988265e-06, 6.6669999999983964e-06, 6.709000000000576e-06, 6.6669999999983964e-06, 6.708999999997106e-06, 6.651999999999353e-06, 6.694999999997536e-06, 6.6529999999988265e-06, 6.6529999999988265e-06, 6.667000000001866e-06, 6.680999999997966e-06, 6.6669999999983964e-06, 6.681000000001436e-06, 6.680999999997966e-06, 6.680999999997966e-06, 6.651999999999353e-06, 6.7230000000001455e-06, 6.639000000002726e-06, 6.6529999999988265e-06, 6.6529999999988265e-06, 6.6669999999983964e-06, 6.667000000001866e-06, 6.651999999999353e-06, 6.694000000001532e-06, 6.679999999998493e-06, 6.6669999999983964e-06, 6.665999999998923e-06, 6.611000000000117e-06, 6.681000000001436e-06, 6.653000000002296e-06, 6.611000000000117e-06, 6.7079999999976325e-06, 6.624999999999687e-06]</msg>
<status status="PASS" starttime="20201115 22:11:39.341" endtime="20201115 22:11:39.343"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.337" endtime="20201115 22:11:39.344"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:39.346" endtime="20201115 22:11:39.347"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:39.349" endtime="20201115 22:11:39.369"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.348" endtime="20201115 22:11:39.370"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.344" endtime="20201115 22:11:39.370"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.980" endtime="20201115 22:11:39.370"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.978" endtime="20201115 22:11:39.371"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.977" endtime="20201115 22:11:39.371"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:39.373" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:39.382" endtime="20201115 22:11:39.398"></status>
</kw>
<msg timestamp="20201115 22:11:39.399" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:39.380" endtime="20201115 22:11:39.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:39.401" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:39.400" endtime="20201115 22:11:39.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:39.402" endtime="20201115 22:11:39.404"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.378" endtime="20201115 22:11:39.404"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.375" endtime="20201115 22:11:39.405"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:39.411" endtime="20201115 22:11:39.697"></status>
</kw>
<msg timestamp="20201115 22:11:39.700" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02442, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024427167, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201115 22:11:39.410" endtime="20201115 22:11:39.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:39.708" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02442, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024427167, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201115 22:11:39.702" endtime="20201115 22:11:39.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:39.710" endtime="20201115 22:11:39.711"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.407" endtime="20201115 22:11:39.712"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.405" endtime="20201115 22:11:39.712"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:39.716" level="INFO">${RESULT} = [{'time': 0.024427167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.1669999999988965e-06, 'source_diff': 7.1669999999988965e-06}, {'time': 0.024546889, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:39.713" endtime="20201115 22:11:39.716"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:39.730" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:39.717" endtime="20201115 22:11:39.730"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:39.734" level="INFO">NAME: 00-overhead-16-set</msg>
<status status="PASS" starttime="20201115 22:11:39.733" endtime="20201115 22:11:39.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:39.736" level="INFO">VALUE: [7.1669999999988965e-06, 7.000000000000062e-06, 6.944999999997786e-06, 6.9579999999978825e-06, 6.901999999999603e-06, 6.972000000000922e-06, 7.056000000001811e-06, 6.958000000001352e-06, 6.9719999999974525e-06, 7.000000000000062e-06, 6.958000000001352e-06, 6.958000000001352e-06, 6.972000000000922e-06, 6.9719999999974525e-06, 6.972000000000922e-06, 6.972000000000922e-06, 6.972000000000922e-06, 6.972000000000922e-06, 6.986000000000492e-06, 6.958000000001352e-06, 6.986000000000492e-06, 7.028000000002671e-06, 6.986000000000492e-06, 6.958999999997356e-06, 6.9730000000003955e-06, 6.972000000000922e-06, 6.959000000000826e-06, 6.944999999997786e-06, 6.986000000000492e-06, 6.972000000000922e-06, 6.9579999999978825e-06, 6.958000000001352e-06, 6.943999999998313e-06, 6.9869999999999655e-06, 6.959000000000826e-06, 6.972000000000922e-06, 6.901999999999603e-06, 7.000000000000062e-06, 6.9719999999974525e-06, 6.972000000000922e-06, 6.972000000000922e-06, 6.888999999999507e-06, 6.944000000001782e-06, 6.9579999999978825e-06, 6.972000000000922e-06, 6.959000000000826e-06, 6.944999999997786e-06, 6.9579999999978825e-06, 6.9730000000003955e-06, 6.958000000001352e-06]</msg>
<status status="PASS" starttime="20201115 22:11:39.735" endtime="20201115 22:11:39.737"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.730" endtime="20201115 22:11:39.738"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:39.740" endtime="20201115 22:11:39.741"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:39.743" endtime="20201115 22:11:39.763"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.742" endtime="20201115 22:11:39.763"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.738" endtime="20201115 22:11:39.764"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.373" endtime="20201115 22:11:39.764"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.372" endtime="20201115 22:11:39.764"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.371" endtime="20201115 22:11:39.764"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:39.767" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:39.775" endtime="20201115 22:11:39.792"></status>
</kw>
<msg timestamp="20201115 22:11:39.792" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:39.774" endtime="20201115 22:11:39.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:39.794" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:39.793" endtime="20201115 22:11:39.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:39.795" endtime="20201115 22:11:39.797"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.771" endtime="20201115 22:11:39.798"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.769" endtime="20201115 22:11:39.798"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:39.804" endtime="20201115 22:11:40.093"></status>
</kw>
<msg timestamp="20201115 22:11:40.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024181931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024189375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:39.803" endtime="20201115 22:11:40.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:40.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024181931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024189375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:40.097" endtime="20201115 22:11:40.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:40.105" endtime="20201115 22:11:40.107"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.800" endtime="20201115 22:11:40.107"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.799" endtime="20201115 22:11:40.108"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:40.112" level="INFO">${RESULT} = [{'time': 0.024189375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.443999999998813e-06, 'source_diff': 7.443999999998813e-06}, {'time': 0.024321444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:40.109" endtime="20201115 22:11:40.112"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:40.127" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:40.113" endtime="20201115 22:11:40.127"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:40.132" level="INFO">NAME: 00-overhead-17-set</msg>
<status status="PASS" starttime="20201115 22:11:40.131" endtime="20201115 22:11:40.132"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:40.135" level="INFO">VALUE: [7.443999999998813e-06, 7.236000000000742e-06, 7.2370000000002155e-06, 7.250000000000312e-06, 7.236000000000742e-06, 7.222000000001172e-06, 7.250000000000312e-06, 7.250000000000312e-06, 7.236000000000742e-06, 7.222000000001172e-06, 7.222000000001172e-06, 7.263999999999882e-06, 7.263999999999882e-06, 7.236000000000742e-06, 7.236000000000742e-06, 7.222000000001172e-06, 7.250000000000312e-06, 7.208000000001602e-06, 7.236000000000742e-06, 7.236000000000742e-06, 7.236000000000742e-06, 7.222000000001172e-06, 7.236000000000742e-06, 7.236000000000742e-06, 7.236000000000742e-06, 7.250000000000312e-06, 7.236000000000742e-06, 7.250000000000312e-06, 7.250000000000312e-06, 7.2219999999977025e-06, 7.250000000000312e-06, 7.250000000000312e-06, 7.249999999996842e-06, 7.250000000000312e-06, 7.250000000000312e-06, 7.250000000000312e-06, 7.236000000000742e-06, 7.250000000000312e-06, 7.236000000000742e-06, 7.194000000002032e-06, 7.235999999997272e-06, 7.304999999999118e-06, 7.236000000000742e-06, 7.2779999999994516e-06, 7.236000000000742e-06, 7.250000000000312e-06, 7.236000000000742e-06, 7.2919999999990215e-06, 7.250000000000312e-06, 7.250000000000312e-06]</msg>
<status status="PASS" starttime="20201115 22:11:40.133" endtime="20201115 22:11:40.135"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.128" endtime="20201115 22:11:40.136"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:40.138" endtime="20201115 22:11:40.140"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:40.142" endtime="20201115 22:11:40.161"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.140" endtime="20201115 22:11:40.162"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.136" endtime="20201115 22:11:40.162"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.767" endtime="20201115 22:11:40.162"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.765" endtime="20201115 22:11:40.163"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.765" endtime="20201115 22:11:40.163"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:40.165" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:40.174" endtime="20201115 22:11:40.192"></status>
</kw>
<msg timestamp="20201115 22:11:40.192" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:40.173" endtime="20201115 22:11:40.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:40.195" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:40.193" endtime="20201115 22:11:40.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:40.196" endtime="20201115 22:11:40.198"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.170" endtime="20201115 22:11:40.198"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.168" endtime="20201115 22:11:40.199"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:40.205" endtime="20201115 22:11:40.493"></status>
</kw>
<msg timestamp="20201115 22:11:40.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025029306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025037014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:40.204" endtime="20201115 22:11:40.496"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:40.504" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025029306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025037014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:40.497" endtime="20201115 22:11:40.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:40.505" endtime="20201115 22:11:40.507"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.201" endtime="20201115 22:11:40.508"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.199" endtime="20201115 22:11:40.508"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:40.512" level="INFO">${RESULT} = [{'time': 0.025037014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.707999999998633e-06, 'source_diff': 7.707999999998633e-06}, {'time': 0.025173847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:40.509" endtime="20201115 22:11:40.512"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:40.526" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:40.514" endtime="20201115 22:11:40.527"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:40.531" level="INFO">NAME: 00-overhead-18-set</msg>
<status status="PASS" starttime="20201115 22:11:40.530" endtime="20201115 22:11:40.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:40.534" level="INFO">VALUE: [7.707999999998633e-06, 7.568999999998938e-06, 7.555999999998841e-06, 7.5419999999992715e-06, 7.5419999999992715e-06, 7.542000000002741e-06, 7.527000000000228e-06, 7.5419999999992715e-06, 7.527999999999702e-06, 7.527999999999702e-06, 7.5419999999992715e-06, 7.542000000002741e-06, 7.527999999999702e-06, 7.527999999999702e-06, 7.527999999999702e-06, 7.540999999999798e-06, 7.554999999999368e-06, 7.527999999999702e-06, 7.472000000001422e-06, 7.555999999998841e-06, 7.540999999999798e-06, 7.486000000000992e-06, 7.568999999998938e-06, 7.540999999999798e-06, 7.5419999999992715e-06, 7.625000000000687e-06, 7.527999999999702e-06, 7.527999999999702e-06, 7.554999999999368e-06, 7.554999999999368e-06, 7.527999999999702e-06, 7.541000000003267e-06, 7.527999999999702e-06, 7.556000000002311e-06, 7.568999999998938e-06, 7.527999999999702e-06, 7.528000000003171e-06, 7.5419999999992715e-06, 7.527999999999702e-06, 7.540999999999798e-06, 7.527999999999702e-06, 7.527000000000228e-06, 7.527999999999702e-06, 7.554999999999368e-06, 7.5419999999992715e-06, 7.540999999999798e-06, 7.540999999999798e-06, 7.5419999999992715e-06, 7.582999999998508e-06, 7.527000000000228e-06]</msg>
<status status="PASS" starttime="20201115 22:11:40.532" endtime="20201115 22:11:40.534"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.527" endtime="20201115 22:11:40.535"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:40.537" endtime="20201115 22:11:40.538"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:40.541" endtime="20201115 22:11:40.560"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.539" endtime="20201115 22:11:40.560"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.535" endtime="20201115 22:11:40.561"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.166" endtime="20201115 22:11:40.561"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.164" endtime="20201115 22:11:40.562"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.163" endtime="20201115 22:11:40.562"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:40.564" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:40.573" endtime="20201115 22:11:40.590"></status>
</kw>
<msg timestamp="20201115 22:11:40.591" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:40.571" endtime="20201115 22:11:40.591"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:40.593" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:40.592" endtime="20201115 22:11:40.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:40.594" endtime="20201115 22:11:40.596"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.569" endtime="20201115 22:11:40.596"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.567" endtime="20201115 22:11:40.597"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:40.604" endtime="20201115 22:11:40.890"></status>
</kw>
<msg timestamp="20201115 22:11:40.893" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02490925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024917208, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:11:40.602" endtime="20201115 22:11:40.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:40.901" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02490925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024917208, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:11:40.894" endtime="20201115 22:11:40.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:40.903" endtime="20201115 22:11:40.904"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.599" endtime="20201115 22:11:40.905"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.598" endtime="20201115 22:11:40.905"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:40.909" level="INFO">${RESULT} = [{'time': 0.024917208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.957999999998883e-06, 'source_diff': 7.957999999998883e-06}, {'time': 0.025057014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:40.906" endtime="20201115 22:11:40.910"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:40.922" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:40.910" endtime="20201115 22:11:40.923"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:40.927" level="INFO">NAME: 00-overhead-19-set</msg>
<status status="PASS" starttime="20201115 22:11:40.926" endtime="20201115 22:11:40.927"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:40.930" level="INFO">VALUE: [7.957999999998883e-06, 7.819999999998661e-06, 7.832999999998758e-06, 7.833999999998231e-06, 7.888999999997037e-06, 7.819000000002657e-06, 7.833000000002227e-06, 7.818999999999188e-06, 7.82000000000213e-06, 7.805999999999091e-06, 7.818999999999188e-06, 7.832999999998758e-06, 7.82000000000213e-06, 7.819999999998661e-06, 7.791999999999522e-06, 7.819999999998661e-06, 7.777999999999952e-06, 7.833999999998231e-06, 7.818999999999188e-06, 7.805999999999091e-06, 7.806000000002561e-06, 7.764000000000382e-06, 7.832999999998758e-06, 7.804999999999618e-06, 7.82000000000213e-06, 7.806000000002561e-06, 7.805999999999091e-06, 7.805999999999091e-06, 7.818999999999188e-06, 7.818999999999188e-06, 7.764000000000382e-06, 7.805999999999091e-06, 7.818999999999188e-06, 7.874999999997467e-06, 7.819999999998661e-06, 7.819999999998661e-06, 7.805999999999091e-06, 7.819999999998661e-06, 7.832999999998758e-06, 7.819999999998661e-06, 7.833000000002227e-06, 7.82000000000213e-06, 7.805999999999091e-06, 7.722000000001672e-06, 7.818999999999188e-06, 7.818999999999188e-06, 7.832999999998758e-06, 7.818999999999188e-06, 7.819000000006127e-06, 7.818999999999188e-06]</msg>
<status status="PASS" starttime="20201115 22:11:40.928" endtime="20201115 22:11:40.930"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.923" endtime="20201115 22:11:40.930"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:40.933" endtime="20201115 22:11:40.934"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:40.936" endtime="20201115 22:11:40.955"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.934" endtime="20201115 22:11:40.956"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.931" endtime="20201115 22:11:40.956"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.564" endtime="20201115 22:11:40.957"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.563" endtime="20201115 22:11:40.957"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.562" endtime="20201115 22:11:40.957"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:40.959" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:40.968" endtime="20201115 22:11:40.985"></status>
</kw>
<msg timestamp="20201115 22:11:40.986" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:40.966" endtime="20201115 22:11:40.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:40.988" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:40.987" endtime="20201115 22:11:40.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:40.989" endtime="20201115 22:11:40.991"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.964" endtime="20201115 22:11:40.991"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.962" endtime="20201115 22:11:40.992"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:40.999" endtime="20201115 22:11:41.296"></status>
</kw>
<msg timestamp="20201115 22:11:41.303" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024272917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024281222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:40.997" endtime="20201115 22:11:41.303"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:41.321" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024272917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024281222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:41.305" endtime="20201115 22:11:41.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:41.323" endtime="20201115 22:11:41.326"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.994" endtime="20201115 22:11:41.327"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.992" endtime="20201115 22:11:41.328"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:41.337" level="INFO">${RESULT} = [{'time': 0.024281222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.305000000000118e-06, 'source_diff': 8.305000000000118e-06}, {'time': 0.024435042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:41.330" endtime="20201115 22:11:41.338"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:41.357" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:41.339" endtime="20201115 22:11:41.357"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:41.361" level="INFO">NAME: 00-overhead-20-set</msg>
<status status="PASS" starttime="20201115 22:11:41.360" endtime="20201115 22:11:41.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:41.364" level="INFO">VALUE: [8.305000000000118e-06, 8.111000000001617e-06, 8.054999999999868e-06, 8.097000000002047e-06, 8.111000000001617e-06, 8.111000000001617e-06, 8.11200000000109e-06, 8.111000000001617e-06, 8.111000000001617e-06, 8.11200000000109e-06, 8.110999999998147e-06, 8.097000000002047e-06, 8.125000000001187e-06, 8.111000000001617e-06, 8.097000000002047e-06, 8.111000000001617e-06, 8.125000000001187e-06, 8.125000000001187e-06, 8.097999999998051e-06, 8.068999999999438e-06, 8.125000000001187e-06, 8.138000000001283e-06, 8.194999999999036e-06, 8.11200000000109e-06, 8.124999999997717e-06, 8.096999999998578e-06, 8.165999999996953e-06, 8.180999999999466e-06, 8.09800000000152e-06, 8.08400000000195e-06, 8.097000000002047e-06, 8.055999999999341e-06, 8.110999999998147e-06, 8.110999999998147e-06, 8.111000000001617e-06, 8.041999999999772e-06, 8.124999999997717e-06, 8.139000000000757e-06, 8.082999999999008e-06, 8.125000000001187e-06, 8.179999999999993e-06, 8.08400000000195e-06, 8.179999999999993e-06, 8.041000000000298e-06, 8.125000000001187e-06, 8.111000000001617e-06, 8.096999999998578e-06, 8.110999999998147e-06, 8.096999999998578e-06, 8.138999999997287e-06]</msg>
<status status="PASS" starttime="20201115 22:11:41.362" endtime="20201115 22:11:41.364"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.358" endtime="20201115 22:11:41.365"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:41.367" endtime="20201115 22:11:41.368"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:41.370" endtime="20201115 22:11:41.390"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.369" endtime="20201115 22:11:41.390"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.365" endtime="20201115 22:11:41.391"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.960" endtime="20201115 22:11:41.391"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.958" endtime="20201115 22:11:41.391"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.957" endtime="20201115 22:11:41.391"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:41.393" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:41.402" endtime="20201115 22:11:41.421"></status>
</kw>
<msg timestamp="20201115 22:11:41.421" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:41.401" endtime="20201115 22:11:41.421"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:41.424" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:41.422" endtime="20201115 22:11:41.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:41.430" endtime="20201115 22:11:41.431"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.398" endtime="20201115 22:11:41.432"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.396" endtime="20201115 22:11:41.432"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:41.439" endtime="20201115 22:11:41.724"></status>
</kw>
<msg timestamp="20201115 22:11:41.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024356028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024364597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:41.437" endtime="20201115 22:11:41.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:41.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024356028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024364597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:41.729" endtime="20201115 22:11:41.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:41.737" endtime="20201115 22:11:41.738"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.435" endtime="20201115 22:11:41.739"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.433" endtime="20201115 22:11:41.739"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:41.743" level="INFO">${RESULT} = [{'time': 0.024364597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.569000000003407e-06, 'source_diff': 8.569000000003407e-06}, {'time': 0.024528625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:41.740" endtime="20201115 22:11:41.744"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:41.758" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:41.744" endtime="20201115 22:11:41.758"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:41.762" level="INFO">NAME: 00-overhead-21-set</msg>
<status status="PASS" starttime="20201115 22:11:41.761" endtime="20201115 22:11:41.763"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:41.765" level="INFO">VALUE: [8.569000000003407e-06, 8.430999999999716e-06, 8.374999999997967e-06, 8.403000000000577e-06, 8.403000000000577e-06, 8.374999999997967e-06, 8.389000000001007e-06, 8.389000000001007e-06, 8.375000000001437e-06, 8.403000000000577e-06, 8.401999999997634e-06, 8.430999999999716e-06, 8.375000000001437e-06, 8.389000000001007e-06, 8.430999999999716e-06, 8.402000000001103e-06, 8.375000000001437e-06, 8.360999999998397e-06, 8.403000000000577e-06, 8.389000000001007e-06, 8.389000000001007e-06, 8.402000000001103e-06, 8.389000000001007e-06, 8.415999999997203e-06, 8.361000000001867e-06, 8.403000000000577e-06, 8.417000000000147e-06, 8.388999999997537e-06, 8.403000000000577e-06, 8.403000000000577e-06, 8.374999999997967e-06, 8.375000000001437e-06, 8.360999999998397e-06, 8.389000000001007e-06, 8.430999999999716e-06, 8.347000000002297e-06, 8.361000000001867e-06, 8.403000000000577e-06, 8.389000000001007e-06, 8.403000000000577e-06, 8.416000000000673e-06, 8.332999999999258e-06, 8.389000000001007e-06, 8.388999999997537e-06, 8.375000000004906e-06, 8.388999999997537e-06, 8.388000000005003e-06, 8.444999999995817e-06, 8.375000000004906e-06, 8.389000000004476e-06]</msg>
<status status="PASS" starttime="20201115 22:11:41.763" endtime="20201115 22:11:41.765"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.759" endtime="20201115 22:11:41.766"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:41.768" endtime="20201115 22:11:41.769"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:41.771" endtime="20201115 22:11:41.791"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.770" endtime="20201115 22:11:41.791"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.766" endtime="20201115 22:11:41.792"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.394" endtime="20201115 22:11:41.792"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.392" endtime="20201115 22:11:41.792"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.392" endtime="20201115 22:11:41.792"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:41.795" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:41.804" endtime="20201115 22:11:41.822"></status>
</kw>
<msg timestamp="20201115 22:11:41.823" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:41.802" endtime="20201115 22:11:41.823"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:41.825" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:41.824" endtime="20201115 22:11:41.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:41.826" endtime="20201115 22:11:41.828"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.799" endtime="20201115 22:11:41.829"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.797" endtime="20201115 22:11:41.829"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:41.835" endtime="20201115 22:11:42.121"></status>
</kw>
<msg timestamp="20201115 22:11:42.124" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024833861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024842736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:41.834" endtime="20201115 22:11:42.125"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:42.132" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024833861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024842736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:42.125" endtime="20201115 22:11:42.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:42.134" endtime="20201115 22:11:42.135"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.831" endtime="20201115 22:11:42.136"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.830" endtime="20201115 22:11:42.136"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:42.140" level="INFO">${RESULT} = [{'time': 0.024842736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.875000000001937e-06, 'source_diff': 8.875000000001937e-06}, {'time': 0.025007361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:42.137" endtime="20201115 22:11:42.140"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:42.153" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:42.141" endtime="20201115 22:11:42.154"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:42.158" level="INFO">NAME: 00-overhead-22-set</msg>
<status status="PASS" starttime="20201115 22:11:42.157" endtime="20201115 22:11:42.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:42.160" level="INFO">VALUE: [8.875000000001937e-06, 8.680000000000493e-06, 8.694000000000063e-06, 8.764000000001382e-06, 8.694000000000063e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.680999999999967e-06, 8.610999999998648e-06, 8.694000000000063e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.694999999999536e-06, 8.708999999999106e-06, 8.680999999999967e-06, 8.653000000000827e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.707999999999633e-06, 8.667000000000397e-06, 8.707999999999633e-06, 8.680000000000493e-06, 8.694999999999536e-06, 8.667000000000397e-06, 8.694999999999536e-06, 8.695000000003006e-06, 8.679999999997023e-06, 8.667000000000397e-06, 8.680999999999967e-06, 8.667000000000397e-06, 8.708999999999106e-06, 8.694000000000063e-06, 8.625000000001687e-06, 8.721999999999203e-06, 8.680000000000493e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.681000000003436e-06, 8.707999999996163e-06, 8.680000000003962e-06, 8.680999999996497e-06, 8.708000000003102e-06, 8.681000000003436e-06, 8.652000000004822e-06, 8.679999999997023e-06, 8.708000000003102e-06, 8.679999999997023e-06, 8.708000000003102e-06]</msg>
<status status="PASS" starttime="20201115 22:11:42.159" endtime="20201115 22:11:42.161"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.154" endtime="20201115 22:11:42.161"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:42.163" endtime="20201115 22:11:42.165"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:42.167" endtime="20201115 22:11:42.186"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.165" endtime="20201115 22:11:42.187"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.162" endtime="20201115 22:11:42.188"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.795" endtime="20201115 22:11:42.188"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.793" endtime="20201115 22:11:42.188"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.793" endtime="20201115 22:11:42.188"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:42.190" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:42.199" endtime="20201115 22:11:42.218"></status>
</kw>
<msg timestamp="20201115 22:11:42.219" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:42.198" endtime="20201115 22:11:42.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:42.221" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:42.220" endtime="20201115 22:11:42.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:42.222" endtime="20201115 22:11:42.224"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.195" endtime="20201115 22:11:42.224"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.193" endtime="20201115 22:11:42.225"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:42.231" endtime="20201115 22:11:42.518"></status>
</kw>
<msg timestamp="20201115 22:11:42.521" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024727639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024736778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:42.230" endtime="20201115 22:11:42.521"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:42.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024727639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024736778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:42.522" endtime="20201115 22:11:42.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:42.530" endtime="20201115 22:11:42.531"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.227" endtime="20201115 22:11:42.532"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.225" endtime="20201115 22:11:42.532"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:42.536" level="INFO">${RESULT} = [{'time': 0.024736778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.139000000001757e-06, 'source_diff': 9.139000000001757e-06}, {'time': 0.024913181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:42.533" endtime="20201115 22:11:42.537"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:42.549" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:42.537" endtime="20201115 22:11:42.550"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:42.554" level="INFO">NAME: 00-overhead-23-set</msg>
<status status="PASS" starttime="20201115 22:11:42.553" endtime="20201115 22:11:42.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:42.556" level="INFO">VALUE: [9.139000000001757e-06, 8.903000000001077e-06, 8.958999999999356e-06, 8.985999999999023e-06, 8.973000000002396e-06, 8.971999999999453e-06, 8.973000000002396e-06, 8.971999999999453e-06, 8.957999999999883e-06, 8.957999999999883e-06, 8.957999999999883e-06, 8.971999999999453e-06, 8.944000000000313e-06, 8.986999999998496e-06, 8.957999999999883e-06, 8.971999999999453e-06, 9.042000000000772e-06, 8.944999999999786e-06, 8.971999999999453e-06, 8.957999999999883e-06, 8.944000000000313e-06, 8.915999999997704e-06, 8.972000000002922e-06, 8.931000000000217e-06, 8.971999999999453e-06, 8.957999999999883e-06, 8.971999999999453e-06, 8.958999999999356e-06, 8.987000000001966e-06, 8.957999999999883e-06, 8.957999999999883e-06, 8.957999999999883e-06, 8.957999999999883e-06, 8.944999999999786e-06, 8.985999999999023e-06, 8.972999999998926e-06, 8.957999999999883e-06, 8.972000000002922e-06, 8.972000000002922e-06, 8.971999999995983e-06, 8.944000000003782e-06, 8.972000000002922e-06, 8.972000000002922e-06, 8.958000000003352e-06, 8.971999999995983e-06, 8.972000000002922e-06, 8.973000000002396e-06, 8.972000000002922e-06, 8.972000000002922e-06, 8.902999999997607e-06]</msg>
<status status="PASS" starttime="20201115 22:11:42.555" endtime="20201115 22:11:42.557"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.550" endtime="20201115 22:11:42.558"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:42.560" endtime="20201115 22:11:42.561"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:42.563" endtime="20201115 22:11:42.583"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.562" endtime="20201115 22:11:42.583"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.558" endtime="20201115 22:11:42.584"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.191" endtime="20201115 22:11:42.584"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.189" endtime="20201115 22:11:42.584"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.189" endtime="20201115 22:11:42.584"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:42.587" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:42.595" endtime="20201115 22:11:42.615"></status>
</kw>
<msg timestamp="20201115 22:11:42.616" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:42.594" endtime="20201115 22:11:42.616"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:42.618" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:42.617" endtime="20201115 22:11:42.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:42.619" endtime="20201115 22:11:42.621"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.591" endtime="20201115 22:11:42.621"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.589" endtime="20201115 22:11:42.622"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:42.628" endtime="20201115 22:11:42.915"></status>
</kw>
<msg timestamp="20201115 22:11:42.919" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024281056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0242905, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:11:42.626" endtime="20201115 22:11:42.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:42.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024281056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0242905, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:11:42.920" endtime="20201115 22:11:42.927"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:42.928" endtime="20201115 22:11:42.930"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.624" endtime="20201115 22:11:42.930"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.622" endtime="20201115 22:11:42.930"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:42.935" level="INFO">${RESULT} = [{'time': 0.0242905, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.444000000000813e-06, 'source_diff': 9.444000000000813e-06}, {'time': 0.024480139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:11:42.931" endtime="20201115 22:11:42.935"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:42.948" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:42.935" endtime="20201115 22:11:42.948"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:42.952" level="INFO">NAME: 00-overhead-24-set</msg>
<status status="PASS" starttime="20201115 22:11:42.951" endtime="20201115 22:11:42.953"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:42.955" level="INFO">VALUE: [9.444000000000813e-06, 9.278000000001452e-06, 9.276999999998509e-06, 9.193999999997093e-06, 9.264000000001882e-06, 9.263999999998412e-06, 9.264000000001882e-06, 9.249999999998842e-06, 9.263999999998412e-06, 9.278000000001452e-06, 9.263999999998412e-06, 9.278000000001452e-06, 9.263999999998412e-06, 9.277999999997982e-06, 9.304999999997648e-06, 9.292000000001022e-06, 9.262999999998939e-06, 9.264000000001882e-06, 9.194000000000563e-06, 9.263999999998412e-06, 9.305999999997122e-06, 9.235999999999273e-06, 9.250000000002312e-06, 9.264000000001882e-06, 9.250000000002312e-06, 9.264000000001882e-06, 9.221999999999703e-06, 9.263999999998412e-06, 9.249999999998842e-06, 9.250000000002312e-06, 9.249999999998842e-06, 9.264000000001882e-06, 9.250000000002312e-06, 9.235999999999273e-06, 9.263999999998412e-06, 9.250000000002312e-06, 9.250000000002312e-06, 9.235999999999273e-06, 9.263999999994943e-06, 9.223000000002646e-06, 9.26299999999547e-06, 9.208000000003602e-06, 9.277000000001978e-06, 9.236000000002742e-06, 9.264000000001882e-06, 9.277999999994513e-06, 9.237000000002216e-06, 9.208999999996137e-06, 9.249999999995373e-06, 9.27699999999504e-06]</msg>
<status status="PASS" starttime="20201115 22:11:42.953" endtime="20201115 22:11:42.955"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.949" endtime="20201115 22:11:42.956"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:42.958" endtime="20201115 22:11:42.960"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:42.962" endtime="20201115 22:11:42.981"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.960" endtime="20201115 22:11:42.982"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.957" endtime="20201115 22:11:42.982"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.587" endtime="20201115 22:11:42.982"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.586" endtime="20201115 22:11:42.983"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.585" endtime="20201115 22:11:42.983"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:42.985" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:42.994" endtime="20201115 22:11:43.014"></status>
</kw>
<msg timestamp="20201115 22:11:43.014" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:42.992" endtime="20201115 22:11:43.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:43.016" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:43.015" endtime="20201115 22:11:43.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:43.017" endtime="20201115 22:11:43.019"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.990" endtime="20201115 22:11:43.020"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.988" endtime="20201115 22:11:43.020"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:43.026" endtime="20201115 22:11:43.313"></status>
</kw>
<msg timestamp="20201115 22:11:43.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024472722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024482444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:43.025" endtime="20201115 22:11:43.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:43.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024472722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024482444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:43.317" endtime="20201115 22:11:43.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:43.325" endtime="20201115 22:11:43.327"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.022" endtime="20201115 22:11:43.327"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.021" endtime="20201115 22:11:43.328"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:43.332" level="INFO">${RESULT} = [{'time': 0.024482444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.722000000000203e-06, 'source_diff': 9.722000000000203e-06}, {'time': 0.024674986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:43.329" endtime="20201115 22:11:43.332"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:43.347" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:43.333" endtime="20201115 22:11:43.347"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:43.351" level="INFO">NAME: 00-overhead-25-set</msg>
<status status="PASS" starttime="20201115 22:11:43.350" endtime="20201115 22:11:43.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:43.354" level="INFO">VALUE: [9.722000000000203e-06, 9.527999999998232e-06, 9.526999999998759e-06, 9.542000000001272e-06, 9.528000000001702e-06, 9.513999999998662e-06, 9.514000000002132e-06, 9.528000000001702e-06, 9.540999999998329e-06, 9.527999999998232e-06, 9.542000000001272e-06, 9.542000000001272e-06, 9.597999999999551e-06, 9.513999999998662e-06, 9.597000000000078e-06, 9.526999999998759e-06, 9.541999999997802e-06, 9.526999999998759e-06, 9.542000000001272e-06, 9.542000000001272e-06, 9.527999999998232e-06, 9.570000000000412e-06, 9.540999999998329e-06, 9.528000000001702e-06, 9.555999999997372e-06, 9.528000000001702e-06, 9.542000000001272e-06, 9.527999999998232e-06, 9.556000000000842e-06, 9.583000000000508e-06, 9.528000000001702e-06, 9.514000000002132e-06, 9.540999999998329e-06, 9.555999999997372e-06, 9.597000000000078e-06, 9.527000000002228e-06, 9.528000000001702e-06, 9.485999999996053e-06, 9.555000000001368e-06, 9.542000000001272e-06, 9.485999999996053e-06, 9.513999999995193e-06, 9.528000000001702e-06, 9.528000000001702e-06, 9.555000000001368e-06, 9.528000000001702e-06, 9.555000000001368e-06, 9.542000000001272e-06, 9.542000000001272e-06, 9.528000000001702e-06]</msg>
<status status="PASS" starttime="20201115 22:11:43.353" endtime="20201115 22:11:43.354"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.348" endtime="20201115 22:11:43.355"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:43.357" endtime="20201115 22:11:43.358"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:43.360" endtime="20201115 22:11:43.380"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.359" endtime="20201115 22:11:43.380"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.355" endtime="20201115 22:11:43.381"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.985" endtime="20201115 22:11:43.381"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.984" endtime="20201115 22:11:43.381"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.983" endtime="20201115 22:11:43.381"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.497" endtime="20201115 22:11:43.382"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="teardown">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:43.386" endtime="20201115 22:11:43.406"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.385" endtime="20201115 22:11:43.406"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.383" endtime="20201115 22:11:43.407"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:11:33.427" endtime="20201115 22:11:43.407" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Remove List">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:43.417" endtime="20201115 22:11:43.437"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.415" endtime="20201115 22:11:43.437"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:43.450" endtime="20201115 22:11:43.464"></status>
</kw>
<msg timestamp="20201115 22:11:43.464" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:43.449" endtime="20201115 22:11:43.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:43.467" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:43.465" endtime="20201115 22:11:43.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:11:43.470" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:11:43.468" endtime="20201115 22:11:43.470"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:43.446" endtime="20201115 22:11:43.471"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:43.444" endtime="20201115 22:11:43.472"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.442" endtime="20201115 22:11:43.472"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:11:43.476" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:11:43.475" endtime="20201115 22:11:43.476"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.473" endtime="20201115 22:11:43.476"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.442" endtime="20201115 22:11:43.477"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.441" endtime="20201115 22:11:43.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:43.478" endtime="20201115 22:11:43.479"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.440" endtime="20201115 22:11:43.480"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.438" endtime="20201115 22:11:43.480"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.414" endtime="20201115 22:11:43.480"></status>
</kw>
<kw name="${n} IN RANGE [ 25 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:43.484" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:43.493" endtime="20201115 22:11:43.505"></status>
</kw>
<msg timestamp="20201115 22:11:43.505" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:43.491" endtime="20201115 22:11:43.505"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:43.508" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:43.506" endtime="20201115 22:11:43.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:43.509" endtime="20201115 22:11:43.510"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.489" endtime="20201115 22:11:43.511"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.487" endtime="20201115 22:11:43.511"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:43.518" endtime="20201115 22:11:43.803"></status>
</kw>
<msg timestamp="20201115 22:11:43.806" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068052403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.06805375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:11:43.516" endtime="20201115 22:11:43.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:43.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068052403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.06805375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:11:43.807" endtime="20201115 22:11:43.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:43.815" endtime="20201115 22:11:43.817"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.514" endtime="20201115 22:11:43.817"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.512" endtime="20201115 22:11:43.818"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:43.822" level="INFO">${RESULT} = [{'time': 0.06805375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3469999999987659e-06, 'source_diff': 1.3469999999987659e-06}, {'time': 0.06809725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:43.818" endtime="20201115 22:11:43.822"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:43.836" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:43.823" endtime="20201115 22:11:43.836"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:43.841" level="INFO">NAME: 00-overhead-1-remove</msg>
<status status="PASS" starttime="20201115 22:11:43.840" endtime="20201115 22:11:43.841"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:43.843" level="INFO">VALUE: [1.3469999999987659e-06, 1.332999999992257e-06, 1.3199999999990997e-06, 1.318999999999626e-06, 1.2780000000073288e-06, 1.3049999999931172e-06, 1.277999999993451e-06, 1.3199999999990997e-06, 1.3060000000064687e-06, 1.3199999999990997e-06, 1.3059999999925909e-06, 1.3049999999931172e-06, 1.26400000000082e-06, 1.3049999999931172e-06, 1.3340000000056085e-06, 1.2360000000016802e-06, 1.3199999999990997e-06, 1.305000000006995e-06, 1.3060000000064687e-06, 1.3059999999925909e-06, 1.2919999999999598e-06, 1.3060000000064687e-06, 1.2919999999999598e-06, 1.3060000000064687e-06, 1.2499999999943112e-06, 1.3340000000056085e-06, 1.3059999999925909e-06, 1.3060000000064687e-06, 1.318999999999626e-06, 1.3049999999931172e-06, 1.3060000000064687e-06, 1.305000000006995e-06, 1.3049999999931172e-06, 1.2360000000016802e-06, 1.277999999993451e-06, 1.277999999993451e-06, 1.2919999999999598e-06, 1.318999999999626e-06, 1.3199999999990997e-06, 1.3060000000064687e-06, 1.3060000000064687e-06, 1.2630000000013464e-06, 1.3049999999931172e-06, 1.2919999999999598e-06, 1.2910000000004862e-06, 1.318999999999626e-06, 1.3469999999987659e-06, 1.318999999999626e-06, 1.3479999999982395e-06, 1.3479999999982395e-06]</msg>
<status status="PASS" starttime="20201115 22:11:43.842" endtime="20201115 22:11:43.844"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.837" endtime="20201115 22:11:43.844"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:43.846" endtime="20201115 22:11:43.848"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:43.850" endtime="20201115 22:11:43.869"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.848" endtime="20201115 22:11:43.870"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.845" endtime="20201115 22:11:43.870"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.485" endtime="20201115 22:11:43.870"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.483" endtime="20201115 22:11:43.871"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.482" endtime="20201115 22:11:43.871"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:43.873" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:43.882" endtime="20201115 22:11:43.894"></status>
</kw>
<msg timestamp="20201115 22:11:43.895" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:43.880" endtime="20201115 22:11:43.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:43.897" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:43.896" endtime="20201115 22:11:43.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:43.898" endtime="20201115 22:11:43.900"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.878" endtime="20201115 22:11:43.900"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.875" endtime="20201115 22:11:43.901"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:43.907" endtime="20201115 22:11:44.193"></status>
</kw>
<msg timestamp="20201115 22:11:44.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024543722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024545444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:43.906" endtime="20201115 22:11:44.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:44.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024543722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024545444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:44.197" endtime="20201115 22:11:44.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:44.205" endtime="20201115 22:11:44.208"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.903" endtime="20201115 22:11:44.208"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.901" endtime="20201115 22:11:44.209"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:44.213" level="INFO">${RESULT} = [{'time': 0.024545444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7219999999991409e-06, 'source_diff': 1.7219999999991409e-06}, {'time': 0.024593806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:44.210" endtime="20201115 22:11:44.213"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:44.226" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:44.214" endtime="20201115 22:11:44.226"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:44.231" level="INFO">NAME: 00-overhead-2-remove</msg>
<status status="PASS" starttime="20201115 22:11:44.230" endtime="20201115 22:11:44.231"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:44.233" level="INFO">VALUE: [1.7219999999991409e-06, 1.4869999999979344e-06, 1.4720000000023603e-06, 1.4719999999988909e-06, 1.5000000000015001e-06, 1.4449999999992247e-06, 1.4719999999988909e-06, 1.4720000000023603e-06, 1.4309999999996548e-06, 1.4999999999980307e-06, 1.4999999999980307e-06, 1.4859999999984608e-06, 1.4449999999992247e-06, 1.5000000000015001e-06, 1.4860000000019302e-06, 1.5000000000015001e-06, 1.4309999999996548e-06, 1.4729999999983645e-06, 1.51400000000107e-06, 1.5000000000015001e-06, 1.4859999999984608e-06, 1.4860000000019302e-06, 1.457999999999321e-06, 1.4720000000023603e-06, 1.5000000000015001e-06, 1.4999999999980307e-06, 1.4719999999988909e-06, 1.568999999999876e-06, 1.4859999999984608e-06, 1.4859999999984608e-06, 1.4860000000019302e-06, 1.5000000000015001e-06, 1.4860000000019302e-06, 1.4720000000023603e-06, 1.4719999999988909e-06, 1.52800000000064e-06, 1.4859999999984608e-06, 1.5559999999997798e-06, 1.5000000000015001e-06, 1.5000000000015001e-06, 1.4999999999980307e-06, 1.5139999999976006e-06, 1.5139999999976006e-06, 1.4859999999984608e-06, 1.4719999999988909e-06, 1.5139999999976006e-06, 1.4860000000019302e-06, 1.5000000000015001e-06, 1.4870000000014039e-06, 1.5410000000007362e-06]</msg>
<status status="PASS" starttime="20201115 22:11:44.232" endtime="20201115 22:11:44.234"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.227" endtime="20201115 22:11:44.234"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:44.236" endtime="20201115 22:11:44.238"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:44.240" endtime="20201115 22:11:44.259"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.238" endtime="20201115 22:11:44.260"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.235" endtime="20201115 22:11:44.260"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.873" endtime="20201115 22:11:44.260"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.872" endtime="20201115 22:11:44.261"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.871" endtime="20201115 22:11:44.261"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:44.263" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:44.272" endtime="20201115 22:11:44.284"></status>
</kw>
<msg timestamp="20201115 22:11:44.285" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:44.270" endtime="20201115 22:11:44.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:44.287" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:44.286" endtime="20201115 22:11:44.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:44.288" endtime="20201115 22:11:44.290"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.268" endtime="20201115 22:11:44.290"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.265" endtime="20201115 22:11:44.291"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:44.297" endtime="20201115 22:11:44.583"></status>
</kw>
<msg timestamp="20201115 22:11:44.587" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024293403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02429525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:11:44.296" endtime="20201115 22:11:44.587"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:44.595" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024293403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02429525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:11:44.588" endtime="20201115 22:11:44.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:44.596" endtime="20201115 22:11:44.598"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.293" endtime="20201115 22:11:44.598"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.291" endtime="20201115 22:11:44.599"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:44.603" level="INFO">${RESULT} = [{'time': 0.02429525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.024345542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:11:44.600" endtime="20201115 22:11:44.603"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:44.616" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:44.604" endtime="20201115 22:11:44.616"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:44.621" level="INFO">NAME: 00-overhead-3-remove</msg>
<status status="PASS" starttime="20201115 22:11:44.620" endtime="20201115 22:11:44.621"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:44.623" level="INFO">VALUE: [1.846999999999266e-06, 1.6809999999999048e-06, 1.6110000000020552e-06, 1.5969999999990159e-06, 1.5970000000024853e-06, 1.5969999999990159e-06, 1.6250000000016251e-06, 1.6120000000015289e-06, 1.6389999999977256e-06, 1.6120000000015289e-06, 1.5969999999990159e-06, 1.6250000000016251e-06, 1.6110000000020552e-06, 1.6109999999985858e-06, 1.6110000000020552e-06, 1.6110000000020552e-06, 1.6109999999985858e-06, 1.6250000000016251e-06, 1.6250000000016251e-06, 1.6250000000016251e-06, 1.6109999999985858e-06, 1.6529999999972955e-06, 1.5979999999984895e-06, 1.582999999999446e-06, 1.6249999999981557e-06, 1.582999999999446e-06, 1.6250000000016251e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.653000000000765e-06, 1.6110000000020552e-06, 1.6250000000016251e-06, 1.6109999999985858e-06, 1.6670000000003349e-06, 1.639000000001195e-06, 1.5839999999989196e-06, 1.5560000000032492e-06, 1.6250000000016251e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.6249999999981557e-06, 1.6110000000020552e-06, 1.568999999999876e-06, 1.5969999999990159e-06, 1.639000000001195e-06, 1.6110000000020552e-06, 1.639000000001195e-06, 1.6110000000020552e-06, 1.582999999999446e-06, 1.6109999999985858e-06]</msg>
<status status="PASS" starttime="20201115 22:11:44.622" endtime="20201115 22:11:44.623"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.617" endtime="20201115 22:11:44.624"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:44.626" endtime="20201115 22:11:44.627"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:44.630" endtime="20201115 22:11:44.649"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.628" endtime="20201115 22:11:44.649"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.624" endtime="20201115 22:11:44.650"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.264" endtime="20201115 22:11:44.650"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.262" endtime="20201115 22:11:44.650"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.261" endtime="20201115 22:11:44.651"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:44.653" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:44.662" endtime="20201115 22:11:44.676"></status>
</kw>
<msg timestamp="20201115 22:11:44.676" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:44.660" endtime="20201115 22:11:44.677"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:44.679" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:44.678" endtime="20201115 22:11:44.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:44.680" endtime="20201115 22:11:44.682"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.657" endtime="20201115 22:11:44.682"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.655" endtime="20201115 22:11:44.683"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:44.689" endtime="20201115 22:11:44.978"></status>
</kw>
<msg timestamp="20201115 22:11:44.981" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024380486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024382472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:44.688" endtime="20201115 22:11:44.981"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:44.989" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024380486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024382472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:44.982" endtime="20201115 22:11:44.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:44.990" endtime="20201115 22:11:44.992"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.685" endtime="20201115 22:11:44.992"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.684" endtime="20201115 22:11:44.993"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:44.997" level="INFO">${RESULT} = [{'time': 0.024382472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.985999999998961e-06, 'source_diff': 1.985999999998961e-06}, {'time': 0.024438167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:44.994" endtime="20201115 22:11:44.997"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:45.010" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:44.998" endtime="20201115 22:11:45.010"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:45.015" level="INFO">NAME: 00-overhead-4-remove</msg>
<status status="PASS" starttime="20201115 22:11:45.014" endtime="20201115 22:11:45.015"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:45.017" level="INFO">VALUE: [1.985999999998961e-06, 1.7500000000017502e-06, 1.7500000000017502e-06, 1.762999999998377e-06, 1.7500000000017502e-06, 1.7500000000017502e-06, 1.76400000000132e-06, 1.76400000000132e-06, 1.8060000000000298e-06, 1.7500000000017502e-06, 1.7639999999978506e-06, 1.7500000000017502e-06, 1.7499999999982807e-06, 1.7639999999978506e-06, 1.77800000000089e-06, 1.76400000000132e-06, 1.76400000000132e-06, 1.7779999999974205e-06, 1.7219999999991409e-06, 1.819000000000126e-06, 1.76400000000132e-06, 1.7499999999982807e-06, 1.8060000000000298e-06, 1.7499999999982807e-06, 1.6800000000004311e-06, 1.694000000000001e-06, 1.76400000000132e-06, 1.819000000000126e-06, 1.7500000000017502e-06, 1.7910000000009862e-06, 1.76400000000132e-06, 1.7779999999974205e-06, 1.7499999999982807e-06, 1.7779999999974205e-06, 1.7779999999974205e-06, 1.7500000000017502e-06, 1.7630000000018464e-06, 1.7500000000017502e-06, 1.7639999999978506e-06, 1.7639999999978506e-06, 1.7500000000017502e-06, 1.7499999999982807e-06, 1.819000000000126e-06, 1.7499999999982807e-06, 1.7499999999982807e-06, 1.8330000000031654e-06, 1.7499999999982807e-06, 1.6949999999994747e-06, 1.7499999999982807e-06, 1.7909999999975168e-06]</msg>
<status status="PASS" starttime="20201115 22:11:45.016" endtime="20201115 22:11:45.018"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.011" endtime="20201115 22:11:45.018"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:45.020" endtime="20201115 22:11:45.022"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:45.024" endtime="20201115 22:11:45.043"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.022" endtime="20201115 22:11:45.044"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.019" endtime="20201115 22:11:45.044"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.653" endtime="20201115 22:11:45.044"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.652" endtime="20201115 22:11:45.045"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:44.651" endtime="20201115 22:11:45.045"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:45.047" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:45.055" endtime="20201115 22:11:45.070"></status>
</kw>
<msg timestamp="20201115 22:11:45.070" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:45.054" endtime="20201115 22:11:45.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:45.073" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:45.071" endtime="20201115 22:11:45.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:45.074" endtime="20201115 22:11:45.075"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.051" endtime="20201115 22:11:45.076"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.049" endtime="20201115 22:11:45.076"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:45.083" endtime="20201115 22:11:45.369"></status>
</kw>
<msg timestamp="20201115 22:11:45.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024812875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024815, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:11:45.081" endtime="20201115 22:11:45.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:45.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024812875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024815, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:11:45.373" endtime="20201115 22:11:45.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:45.382" endtime="20201115 22:11:45.383"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.079" endtime="20201115 22:11:45.384"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.077" endtime="20201115 22:11:45.384"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:45.388" level="INFO">${RESULT} = [{'time': 0.024815, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1249999999986557e-06, 'source_diff': 2.1249999999986557e-06}, {'time': 0.024877764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:11:45.385" endtime="20201115 22:11:45.388"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:45.401" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:45.389" endtime="20201115 22:11:45.402"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:45.406" level="INFO">NAME: 00-overhead-5-remove</msg>
<status status="PASS" starttime="20201115 22:11:45.405" endtime="20201115 22:11:45.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:45.408" level="INFO">VALUE: [2.1249999999986557e-06, 1.889000000001445e-06, 1.889000000001445e-06, 1.832999999999696e-06, 1.903000000001015e-06, 1.901999999998072e-06, 1.903000000001015e-06, 1.903000000001015e-06, 1.889000000001445e-06, 1.889000000001445e-06, 1.903000000001015e-06, 1.8889999999979756e-06, 1.889000000001445e-06, 1.8749999999984057e-06, 1.8750000000018752e-06, 1.917000000000585e-06, 1.917000000000585e-06, 1.8889999999979756e-06, 1.887999999998502e-06, 1.889000000001445e-06, 1.889000000001445e-06, 1.944000000000251e-06, 1.889000000001445e-06, 1.8750000000018752e-06, 1.889000000001445e-06, 1.944000000000251e-06, 1.832999999999696e-06, 1.9169999999971155e-06, 1.8889999999979756e-06, 1.8750000000018752e-06, 1.8889999999979756e-06, 1.9029999999975455e-06, 1.917000000000585e-06, 1.8750000000018752e-06, 1.903000000001015e-06, 1.889000000001445e-06, 1.9029999999975455e-06, 1.903000000001015e-06, 1.8750000000018752e-06, 1.903000000001015e-06, 1.887999999998502e-06, 1.889000000001445e-06, 1.8750000000018752e-06, 1.901999999998072e-06, 1.903000000001015e-06, 1.8610000000023053e-06, 1.9029999999975455e-06, 1.903000000001015e-06, 1.8749999999984057e-06, 1.903000000001015e-06]</msg>
<status status="PASS" starttime="20201115 22:11:45.407" endtime="20201115 22:11:45.409"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.402" endtime="20201115 22:11:45.409"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:45.411" endtime="20201115 22:11:45.412"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:45.415" endtime="20201115 22:11:45.434"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.413" endtime="20201115 22:11:45.435"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.410" endtime="20201115 22:11:45.435"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.047" endtime="20201115 22:11:45.435"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.046" endtime="20201115 22:11:45.436"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.045" endtime="20201115 22:11:45.436"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:45.438" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:45.447" endtime="20201115 22:11:45.461"></status>
</kw>
<msg timestamp="20201115 22:11:45.461" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:45.445" endtime="20201115 22:11:45.462"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:45.464" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:45.462" endtime="20201115 22:11:45.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:45.465" endtime="20201115 22:11:45.466"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.443" endtime="20201115 22:11:45.467"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.441" endtime="20201115 22:11:45.467"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:45.474" endtime="20201115 22:11:45.761"></status>
</kw>
<msg timestamp="20201115 22:11:45.764" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024904444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024906708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:45.472" endtime="20201115 22:11:45.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:45.772" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024904444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024906708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:45.765" endtime="20201115 22:11:45.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:45.773" endtime="20201115 22:11:45.775"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.470" endtime="20201115 22:11:45.775"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.468" endtime="20201115 22:11:45.776"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:45.780" level="INFO">${RESULT} = [{'time': 0.024906708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2639999999983507e-06, 'source_diff': 2.2639999999983507e-06}, {'time': 0.024968792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:45.777" endtime="20201115 22:11:45.780"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:45.793" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:45.781" endtime="20201115 22:11:45.793"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:45.798" level="INFO">NAME: 00-overhead-6-remove</msg>
<status status="PASS" starttime="20201115 22:11:45.797" endtime="20201115 22:11:45.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:45.800" level="INFO">VALUE: [2.2639999999983507e-06, 2.04200000000071e-06, 2.02800000000114e-06, 2.0139999999981006e-06, 2.04200000000071e-06, 2.055000000000806e-06, 2.069000000000376e-06, 2.04200000000071e-06, 2.0419999999972405e-06, 2.05600000000028e-06, 2.0699999999998497e-06, 1.985999999998961e-06, 2.0699999999998497e-06, 2.04200000000071e-06, 2.069000000000376e-06, 2.026999999998197e-06, 2.082999999999946e-06, 2.05600000000028e-06, 2.096999999999516e-06, 2.02800000000114e-06, 2.04200000000071e-06, 2.05600000000028e-06, 2.0410000000012363e-06, 2.0410000000012363e-06, 2.0410000000012363e-06, 2.02800000000114e-06, 2.096999999999516e-06, 2.055000000000806e-06, 2.04200000000071e-06, 2.0139999999981006e-06, 2.05600000000028e-06, 2.04200000000071e-06, 2.04200000000071e-06, 2.082999999999946e-06, 2.0549999999973367e-06, 2.05600000000028e-06, 2.0419999999972405e-06, 2.055000000000806e-06, 2.04200000000071e-06, 2.0419999999972405e-06, 2.0419999999972405e-06, 2.04200000000071e-06, 2.02800000000114e-06, 2.0970000000029854e-06, 2.01400000000157e-06, 1.9729999999988646e-06, 2.01400000000157e-06, 2.04200000000071e-06, 2.040999999997767e-06, 2.04200000000071e-06]</msg>
<status status="PASS" starttime="20201115 22:11:45.799" endtime="20201115 22:11:45.800"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.794" endtime="20201115 22:11:45.801"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:45.804" endtime="20201115 22:11:45.805"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:45.807" endtime="20201115 22:11:45.826"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.806" endtime="20201115 22:11:45.827"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.802" endtime="20201115 22:11:45.828"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.439" endtime="20201115 22:11:45.828"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.437" endtime="20201115 22:11:45.828"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.436" endtime="20201115 22:11:45.828"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:45.830" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:45.839" endtime="20201115 22:11:45.853"></status>
</kw>
<msg timestamp="20201115 22:11:45.854" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:45.838" endtime="20201115 22:11:45.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:45.856" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:45.855" endtime="20201115 22:11:45.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:45.857" endtime="20201115 22:11:45.859"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.835" endtime="20201115 22:11:45.859"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.833" endtime="20201115 22:11:45.860"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:45.866" endtime="20201115 22:11:46.152"></status>
</kw>
<msg timestamp="20201115 22:11:46.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024549889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024552292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:45.864" endtime="20201115 22:11:46.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:46.163" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024549889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024552292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:46.156" endtime="20201115 22:11:46.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:46.165" endtime="20201115 22:11:46.166"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.862" endtime="20201115 22:11:46.167"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.860" endtime="20201115 22:11:46.167"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:46.171" level="INFO">${RESULT} = [{'time': 0.024552292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.403000000001515e-06, 'source_diff': 2.403000000001515e-06}, {'time': 0.024617653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:46.168" endtime="20201115 22:11:46.171"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:46.184" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:46.172" endtime="20201115 22:11:46.185"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:46.189" level="INFO">NAME: 00-overhead-7-remove</msg>
<status status="PASS" starttime="20201115 22:11:46.188" endtime="20201115 22:11:46.189"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:46.191" level="INFO">VALUE: [2.403000000001515e-06, 2.2089999999995447e-06, 2.167000000000835e-06, 2.180000000000931e-06, 2.167000000000835e-06, 2.180000000000931e-06, 2.1809999999969354e-06, 2.1660000000013613e-06, 2.181000000000405e-06, 2.167000000000835e-06, 2.181000000000405e-06, 2.167000000000835e-06, 2.1529999999977956e-06, 2.153000000001265e-06, 2.1799999999974617e-06, 2.2229999999991146e-06, 2.1529999999977956e-06, 2.1799999999974617e-06, 2.165999999997892e-06, 2.1660000000013613e-06, 2.153000000001265e-06, 2.1660000000013613e-06, 2.167000000000835e-06, 2.153000000001265e-06, 2.125000000002125e-06, 2.096999999999516e-06, 2.194000000000501e-06, 2.208000000000071e-06, 2.194000000000501e-06, 2.167000000000835e-06, 2.180000000000931e-06, 2.1520000000017914e-06, 2.1520000000017914e-06, 2.1660000000013613e-06, 2.167000000000835e-06, 2.125000000002125e-06, 2.1799999999974617e-06, 2.1669999999973655e-06, 2.181000000000405e-06, 2.167000000000835e-06, 2.1660000000013613e-06, 2.1660000000013613e-06, 2.167000000000835e-06, 2.165999999997892e-06, 2.167000000000835e-06, 2.1949999999999747e-06, 2.167000000000835e-06, 2.194000000000501e-06, 2.181000000000405e-06, 2.153000000001265e-06]</msg>
<status status="PASS" starttime="20201115 22:11:46.190" endtime="20201115 22:11:46.192"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.185" endtime="20201115 22:11:46.193"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:46.195" endtime="20201115 22:11:46.196"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:46.198" endtime="20201115 22:11:46.218"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.197" endtime="20201115 22:11:46.218"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.193" endtime="20201115 22:11:46.219"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.831" endtime="20201115 22:11:46.219"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.829" endtime="20201115 22:11:46.219"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:45.829" endtime="20201115 22:11:46.219"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:46.222" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:46.231" endtime="20201115 22:11:46.244"></status>
</kw>
<msg timestamp="20201115 22:11:46.245" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:46.229" endtime="20201115 22:11:46.245"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:46.247" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:46.246" endtime="20201115 22:11:46.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:46.248" endtime="20201115 22:11:46.250"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.226" endtime="20201115 22:11:46.250"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.224" endtime="20201115 22:11:46.251"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:46.257" endtime="20201115 22:11:46.545"></status>
</kw>
<msg timestamp="20201115 22:11:46.548" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024877014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024879556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:46.256" endtime="20201115 22:11:46.548"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:46.556" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024877014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024879556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:46.549" endtime="20201115 22:11:46.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:46.557" endtime="20201115 22:11:46.559"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.253" endtime="20201115 22:11:46.559"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.251" endtime="20201115 22:11:46.560"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:46.564" level="INFO">${RESULT} = [{'time': 0.024879556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.54200000000121e-06, 'source_diff': 2.54200000000121e-06}, {'time': 0.02495575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 22:11:46.561" endtime="20201115 22:11:46.564"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:46.581" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:46.569" endtime="20201115 22:11:46.581"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:46.585" level="INFO">NAME: 00-overhead-8-remove</msg>
<status status="PASS" starttime="20201115 22:11:46.584" endtime="20201115 22:11:46.586"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:46.588" level="INFO">VALUE: [2.54200000000121e-06, 2.3189999999971567e-06, 2.30600000000053e-06, 2.3339999999996697e-06, 2.3200000000000998e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.319000000000626e-06, 2.333000000000196e-06, 2.30600000000053e-06, 2.3200000000000998e-06, 2.2639999999983507e-06, 2.333000000000196e-06, 2.3339999999996697e-06, 2.25000000000225e-06, 2.30600000000053e-06, 2.3339999999996697e-06, 2.362000000002279e-06, 2.2639999999983507e-06, 2.3339999999996697e-06, 2.319000000000626e-06, 2.3200000000000998e-06, 2.319000000000626e-06, 2.3329999999967266e-06, 2.29200000000096e-06, 2.30600000000053e-06, 2.333000000000196e-06, 2.333000000000196e-06, 2.290999999998017e-06, 2.3200000000000998e-06, 2.346999999999766e-06, 2.29200000000096e-06, 2.3200000000000998e-06, 2.333000000000196e-06, 2.319000000000626e-06, 2.333000000000196e-06, 2.30600000000053e-06, 2.319000000000626e-06, 2.3200000000000998e-06, 2.333000000000196e-06, 2.3049999999975868e-06, 2.2779999999979206e-06, 2.333000000000196e-06, 2.319000000000626e-06, 2.2770000000019164e-06, 2.30600000000053e-06, 2.30600000000053e-06, 2.319000000000626e-06, 2.305000000001056e-06, 2.319000000000626e-06]</msg>
<status status="PASS" starttime="20201115 22:11:46.586" endtime="20201115 22:11:46.588"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.582" endtime="20201115 22:11:46.589"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:46.591" endtime="20201115 22:11:46.592"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:46.594" endtime="20201115 22:11:46.614"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.593" endtime="20201115 22:11:46.614"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.589" endtime="20201115 22:11:46.615"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.222" endtime="20201115 22:11:46.615"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.221" endtime="20201115 22:11:46.615"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.220" endtime="20201115 22:11:46.615"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:46.618" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:46.626" endtime="20201115 22:11:46.640"></status>
</kw>
<msg timestamp="20201115 22:11:46.641" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:46.625" endtime="20201115 22:11:46.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:46.643" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:46.642" endtime="20201115 22:11:46.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:46.644" endtime="20201115 22:11:46.645"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.622" endtime="20201115 22:11:46.646"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.620" endtime="20201115 22:11:46.646"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:46.653" endtime="20201115 22:11:46.939"></status>
</kw>
<msg timestamp="20201115 22:11:46.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024595556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024598222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:46.651" endtime="20201115 22:11:46.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:46.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024595556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024598222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:46.943" endtime="20201115 22:11:46.951"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:46.952" endtime="20201115 22:11:46.953"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.649" endtime="20201115 22:11:46.954"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.647" endtime="20201115 22:11:46.954"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:46.958" level="INFO">${RESULT} = [{'time': 0.024598222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.665999999998392e-06, 'source_diff': 2.665999999998392e-06}, {'time': 0.024676611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:46.955" endtime="20201115 22:11:46.958"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:46.972" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:46.959" endtime="20201115 22:11:46.972"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:46.976" level="INFO">NAME: 00-overhead-9-remove</msg>
<status status="PASS" starttime="20201115 22:11:46.975" endtime="20201115 22:11:46.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:46.979" level="INFO">VALUE: [2.665999999998392e-06, 2.444000000000751e-06, 2.444000000000751e-06, 2.459000000003264e-06, 2.4300000000011812e-06, 2.444000000000751e-06, 2.4589999999997947e-06, 2.458000000000321e-06, 2.4589999999997947e-06, 2.458000000000321e-06, 2.4300000000011812e-06, 2.444000000000751e-06, 2.458000000000321e-06, 2.4169999999976155e-06, 2.415999999998142e-06, 2.4450000000002248e-06, 2.4300000000011812e-06, 2.458000000000321e-06, 2.444000000000751e-06, 2.4439999999972817e-06, 2.458000000000321e-06, 2.3889999999984757e-06, 2.444000000000751e-06, 2.52800000000164e-06, 2.4450000000002248e-06, 2.4299999999977118e-06, 2.4589999999997947e-06, 2.458000000000321e-06, 2.4169999999976155e-06, 2.4169999999976155e-06, 2.4729999999993646e-06, 2.444000000000751e-06, 2.458000000000321e-06, 2.4999999999990308e-06, 2.3749999999989058e-06, 2.4450000000002248e-06, 2.4720000000033604e-06, 2.444000000000751e-06, 2.458000000000321e-06, 2.431000000000655e-06, 2.458000000000321e-06, 2.4450000000002248e-06, 2.444000000000751e-06, 2.417000000001085e-06, 2.4450000000002248e-06, 2.4579999999968516e-06, 2.458000000000321e-06, 2.4450000000002248e-06, 2.403000000001515e-06, 2.458000000000321e-06]</msg>
<status status="PASS" starttime="20201115 22:11:46.978" endtime="20201115 22:11:46.980"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.973" endtime="20201115 22:11:46.980"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:46.983" endtime="20201115 22:11:46.984"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:46.986" endtime="20201115 22:11:47.006"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.985" endtime="20201115 22:11:47.006"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.981" endtime="20201115 22:11:47.007"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.618" endtime="20201115 22:11:47.007"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.617" endtime="20201115 22:11:47.007"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.616" endtime="20201115 22:11:47.007"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:47.010" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:47.018" endtime="20201115 22:11:47.032"></status>
</kw>
<msg timestamp="20201115 22:11:47.033" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:47.017" endtime="20201115 22:11:47.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:47.035" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:47.034" endtime="20201115 22:11:47.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:47.036" endtime="20201115 22:11:47.038"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.014" endtime="20201115 22:11:47.038"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.012" endtime="20201115 22:11:47.039"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:47.046" endtime="20201115 22:11:47.332"></status>
</kw>
<msg timestamp="20201115 22:11:47.335" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024660444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024663264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:47.044" endtime="20201115 22:11:47.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:47.343" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024660444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024663264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:47.336" endtime="20201115 22:11:47.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:47.344" endtime="20201115 22:11:47.346"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.041" endtime="20201115 22:11:47.346"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.039" endtime="20201115 22:11:47.347"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:47.351" level="INFO">${RESULT} = [{'time': 0.024663264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8200000000006e-06, 'source_diff': 2.8200000000006e-06}, {'time': 0.024744806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2...</msg>
<status status="PASS" starttime="20201115 22:11:47.348" endtime="20201115 22:11:47.351"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:47.364" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:47.352" endtime="20201115 22:11:47.364"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:47.369" level="INFO">NAME: 00-overhead-10-remove</msg>
<status status="PASS" starttime="20201115 22:11:47.367" endtime="20201115 22:11:47.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:47.371" level="INFO">VALUE: [2.8200000000006e-06, 2.5979999999994896e-06, 2.6249999999991558e-06, 2.5839999999999197e-06, 2.610999999999586e-06, 2.5839999999999197e-06, 2.597000000000016e-06, 2.54200000000121e-06, 2.5829999999969766e-06, 2.597000000000016e-06, 2.612000000002529e-06, 2.5839999999999197e-06, 2.597000000000016e-06, 2.597000000000016e-06, 2.6249999999991558e-06, 2.6529999999982956e-06, 2.597000000000016e-06, 2.597000000000016e-06, 2.597000000000016e-06, 2.597000000000016e-06, 2.6389999999987257e-06, 2.597000000000016e-06, 2.597000000000016e-06, 2.51400000000207e-06, 2.6119999999990595e-06, 2.583000000000446e-06, 2.583000000000446e-06, 2.583000000000446e-06, 2.5979999999994896e-06, 2.598000000002959e-06, 2.597000000000016e-06, 2.597000000000016e-06, 2.610999999999586e-06, 2.597000000000016e-06, 2.610999999999586e-06, 2.5839999999999197e-06, 2.6529999999982956e-06, 2.5550000000013062e-06, 2.6119999999990595e-06, 2.610999999999586e-06, 2.597000000000016e-06, 2.5979999999994896e-06, 2.5550000000013062e-06, 2.55600000000078e-06, 2.610999999999586e-06, 2.597000000000016e-06, 2.610999999999586e-06, 2.610999999999586e-06, 2.583000000000446e-06, 2.569000000000876e-06]</msg>
<status status="PASS" starttime="20201115 22:11:47.370" endtime="20201115 22:11:47.371"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.365" endtime="20201115 22:11:47.372"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:47.374" endtime="20201115 22:11:47.375"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:47.377" endtime="20201115 22:11:47.397"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.376" endtime="20201115 22:11:47.397"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.372" endtime="20201115 22:11:47.398"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.010" endtime="20201115 22:11:47.398"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.008" endtime="20201115 22:11:47.398"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.008" endtime="20201115 22:11:47.399"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:47.401" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:47.409" endtime="20201115 22:11:47.424"></status>
</kw>
<msg timestamp="20201115 22:11:47.425" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:47.408" endtime="20201115 22:11:47.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:47.428" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:47.426" endtime="20201115 22:11:47.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:47.429" endtime="20201115 22:11:47.431"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.405" endtime="20201115 22:11:47.431"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.403" endtime="20201115 22:11:47.432"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:47.438" endtime="20201115 22:11:47.724"></status>
</kw>
<msg timestamp="20201115 22:11:47.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024514181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024517097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:47.436" endtime="20201115 22:11:47.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:47.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024514181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024517097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:47.728" endtime="20201115 22:11:47.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:47.736" endtime="20201115 22:11:47.738"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.434" endtime="20201115 22:11:47.738"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.432" endtime="20201115 22:11:47.738"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:47.743" level="INFO">${RESULT} = [{'time': 0.024517097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9160000000021113e-06, 'source_diff': 2.9160000000021113e-06}, {'time': 0.024606194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:47.739" endtime="20201115 22:11:47.743"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:47.756" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:47.744" endtime="20201115 22:11:47.756"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:47.760" level="INFO">NAME: 00-overhead-11-remove</msg>
<status status="PASS" starttime="20201115 22:11:47.759" endtime="20201115 22:11:47.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:47.763" level="INFO">VALUE: [2.9160000000021113e-06, 2.722000000000141e-06, 2.7360000000031803e-06, 2.722000000000141e-06, 2.7090000000000447e-06, 2.708000000000571e-06, 2.735999999999711e-06, 2.7639999999988507e-06, 2.653000000001765e-06, 2.7229999999996146e-06, 2.722000000000141e-06, 2.7500000000027502e-06, 2.694000000001001e-06, 2.695000000000475e-06, 2.749999999999281e-06, 2.723000000003084e-06, 2.722000000000141e-06, 2.7639999999988507e-06, 2.735999999999711e-06, 2.80600000000103e-06, 2.7639999999988507e-06, 2.722000000000141e-06, 2.722000000000141e-06, 2.722000000000141e-06, 2.722000000000141e-06, 2.735999999999711e-06, 2.722000000000141e-06, 2.722000000000141e-06, 2.722000000000141e-06, 2.7919999999979905e-06, 2.6520000000022914e-06, 2.735999999999711e-06, 2.7500000000027502e-06, 2.7779999999984206e-06, 2.735999999999711e-06, 2.7079999999971016e-06, 2.7639999999988507e-06, 2.708000000000571e-06, 2.735999999999711e-06, 2.722000000000141e-06, 2.722000000000141e-06, 2.735999999999711e-06, 2.7229999999996146e-06, 2.722000000000141e-06, 2.7090000000000447e-06, 2.762999999999377e-06, 2.77800000000189e-06, 2.722000000000141e-06, 2.6809999999974354e-06, 2.722000000000141e-06]</msg>
<status status="PASS" starttime="20201115 22:11:47.761" endtime="20201115 22:11:47.763"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.757" endtime="20201115 22:11:47.763"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:47.766" endtime="20201115 22:11:47.767"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:47.769" endtime="20201115 22:11:47.788"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.768" endtime="20201115 22:11:47.789"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.764" endtime="20201115 22:11:47.789"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.401" endtime="20201115 22:11:47.790"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.400" endtime="20201115 22:11:47.790"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.399" endtime="20201115 22:11:47.790"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:47.792" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:47.802" endtime="20201115 22:11:47.816"></status>
</kw>
<msg timestamp="20201115 22:11:47.817" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:47.800" endtime="20201115 22:11:47.817"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:47.819" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:47.818" endtime="20201115 22:11:47.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:47.820" endtime="20201115 22:11:47.822"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.797" endtime="20201115 22:11:47.823"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.795" endtime="20201115 22:11:47.823"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:47.830" endtime="20201115 22:11:48.116"></status>
</kw>
<msg timestamp="20201115 22:11:48.119" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025114319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025117458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:47.828" endtime="20201115 22:11:48.119"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:48.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025114319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025117458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:48.120" endtime="20201115 22:11:48.128"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:48.128" endtime="20201115 22:11:48.130"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.825" endtime="20201115 22:11:48.131"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.824" endtime="20201115 22:11:48.131"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:48.135" level="INFO">${RESULT} = [{'time': 0.025117458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1389999999992257e-06, 'source_diff': 3.1389999999992257e-06}, {'time': 0.025212944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:48.132" endtime="20201115 22:11:48.135"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:48.148" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:48.136" endtime="20201115 22:11:48.148"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:48.153" level="INFO">NAME: 00-overhead-12-remove</msg>
<status status="PASS" starttime="20201115 22:11:48.152" endtime="20201115 22:11:48.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:48.155" level="INFO">VALUE: [3.1389999999992257e-06, 2.860999999999836e-06, 2.8619999999993095e-06, 2.874999999999406e-06, 2.8889999999989757e-06, 2.874999999999406e-06, 2.860999999999836e-06, 2.874999999999406e-06, 2.8889999999989757e-06, 2.917000000001585e-06, 2.874999999999406e-06, 2.862000000002779e-06, 2.79200000000146e-06, 2.874999999999406e-06, 2.8619999999993095e-06, 2.874999999999406e-06, 2.8750000000028753e-06, 2.8619999999993095e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.889000000002445e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.889000000002445e-06, 2.860999999999836e-06, 2.917000000001585e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.833000000000696e-06, 2.8479999999997396e-06, 2.847000000000266e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.889000000002445e-06, 2.860999999999836e-06, 2.915999999998642e-06, 2.889000000002445e-06, 2.874999999999406e-06, 2.847000000000266e-06, 2.874999999999406e-06, 2.860999999999836e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.8889999999989757e-06, 2.889000000002445e-06]</msg>
<status status="PASS" starttime="20201115 22:11:48.154" endtime="20201115 22:11:48.156"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.149" endtime="20201115 22:11:48.156"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:48.158" endtime="20201115 22:11:48.160"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:48.162" endtime="20201115 22:11:48.181"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.160" endtime="20201115 22:11:48.182"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.157" endtime="20201115 22:11:48.182"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.793" endtime="20201115 22:11:48.183"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.791" endtime="20201115 22:11:48.183"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.790" endtime="20201115 22:11:48.183"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:48.185" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:48.194" endtime="20201115 22:11:48.209"></status>
</kw>
<msg timestamp="20201115 22:11:48.209" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:48.192" endtime="20201115 22:11:48.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:48.212" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:48.210" endtime="20201115 22:11:48.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:48.213" endtime="20201115 22:11:48.214"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.190" endtime="20201115 22:11:48.215"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.188" endtime="20201115 22:11:48.215"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:48.222" endtime="20201115 22:11:48.509"></status>
</kw>
<msg timestamp="20201115 22:11:48.512" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024534139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024537375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:48.220" endtime="20201115 22:11:48.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:48.520" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024534139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024537375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:48.513" endtime="20201115 22:11:48.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:48.522" endtime="20201115 22:11:48.523"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.218" endtime="20201115 22:11:48.524"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.216" endtime="20201115 22:11:48.524"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:48.528" level="INFO">${RESULT} = [{'time': 0.024537375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.236000000000211e-06, 'source_diff': 3.236000000000211e-06}, {'time': 0.024640111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:48.525" endtime="20201115 22:11:48.529"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:48.541" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:48.529" endtime="20201115 22:11:48.542"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:48.546" level="INFO">NAME: 00-overhead-13-remove</msg>
<status status="PASS" starttime="20201115 22:11:48.545" endtime="20201115 22:11:48.546"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:48.548" level="INFO">VALUE: [3.236000000000211e-06, 2.985999999999961e-06, 2.9169999999981155e-06, 2.999999999999531e-06, 3.02800000000214e-06, 2.985999999999961e-06, 3.0139999999991007e-06, 3.0000000000030003e-06, 2.999999999999531e-06, 3.0139999999991007e-06, 3.0139999999991007e-06, 3.0139999999991007e-06, 3.0000000000030003e-06, 2.917000000001585e-06, 3.0139999999991007e-06, 3.0139999999991007e-06, 2.999999999999531e-06, 2.945000000000725e-06, 2.999999999999531e-06, 3.01400000000257e-06, 3.0000000000030003e-06, 2.999999999999531e-06, 3.069000000001376e-06, 2.999999999999531e-06, 3.05600000000128e-06, 2.999999999999531e-06, 3.054999999998337e-06, 2.999999999999531e-06, 2.999999999999531e-06, 2.999999999999531e-06, 2.985999999999961e-06, 2.972000000000391e-06, 2.999999999999531e-06, 3.05600000000128e-06, 3.0139999999991007e-06, 3.0000000000030003e-06, 3.01400000000257e-06, 2.999999999999531e-06, 2.999999999999531e-06, 2.999999999999531e-06, 2.985999999999961e-06, 3.0139999999991007e-06, 3.0270000000026664e-06, 2.999999999999531e-06, 3.02800000000214e-06, 2.999999999999531e-06, 2.9590000000002947e-06, 3.0000000000030003e-06, 2.985999999999961e-06, 3.0139999999991007e-06]</msg>
<status status="PASS" starttime="20201115 22:11:48.547" endtime="20201115 22:11:48.549"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.542" endtime="20201115 22:11:48.550"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:48.552" endtime="20201115 22:11:48.553"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:48.555" endtime="20201115 22:11:48.575"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.554" endtime="20201115 22:11:48.575"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.550" endtime="20201115 22:11:48.576"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.186" endtime="20201115 22:11:48.576"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.184" endtime="20201115 22:11:48.576"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.184" endtime="20201115 22:11:48.576"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:48.579" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:48.587" endtime="20201115 22:11:48.603"></status>
</kw>
<msg timestamp="20201115 22:11:48.604" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:48.586" endtime="20201115 22:11:48.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:48.606" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:48.605" endtime="20201115 22:11:48.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:48.607" endtime="20201115 22:11:48.609"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.583" endtime="20201115 22:11:48.609"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.581" endtime="20201115 22:11:48.610"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:48.616" endtime="20201115 22:11:48.902"></status>
</kw>
<msg timestamp="20201115 22:11:48.905" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024602208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024605597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:48.615" endtime="20201115 22:11:48.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:48.913" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024602208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024605597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:48.906" endtime="20201115 22:11:48.913"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:48.914" endtime="20201115 22:11:48.916"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.612" endtime="20201115 22:11:48.916"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.610" endtime="20201115 22:11:48.917"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:48.921" level="INFO">${RESULT} = [{'time': 0.024605597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3889999999994758e-06, 'source_diff': 3.3889999999994758e-06}, {'time': 0.024717069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:48.918" endtime="20201115 22:11:48.921"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:48.934" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:48.922" endtime="20201115 22:11:48.934"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:48.939" level="INFO">NAME: 00-overhead-14-remove</msg>
<status status="PASS" starttime="20201115 22:11:48.938" endtime="20201115 22:11:48.939"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:48.942" level="INFO">VALUE: [3.3889999999994758e-06, 3.137999999999752e-06, 3.153000000002265e-06, 3.1529999999987957e-06, 3.153000000002265e-06, 3.097000000000516e-06, 3.1529999999987957e-06, 3.1660000000023614e-06, 3.167000000001835e-06, 3.1660000000023614e-06, 3.1529999999987957e-06, 3.1529999999987957e-06, 3.1389999999992257e-06, 3.1389999999992257e-06, 3.1389999999992257e-06, 3.1529999999987957e-06, 3.1939999999980317e-06, 3.153000000002265e-06, 3.1669999999983656e-06, 3.151999999999322e-06, 3.151999999999322e-06, 3.137999999999752e-06, 3.165999999998892e-06, 3.1389999999992257e-06, 3.153000000002265e-06, 3.1529999999987957e-06, 3.1529999999987957e-06, 3.222000000000641e-06, 3.1389999999992257e-06, 3.1389999999992257e-06, 3.2090000000005448e-06, 3.153000000002265e-06, 3.0979999999999897e-06, 3.1389999999992257e-06, 3.0979999999999897e-06, 3.1389999999992257e-06, 3.167000000001835e-06, 3.069000000001376e-06, 3.181000000001405e-06, 3.153000000002265e-06, 3.208000000001071e-06, 3.139000000002695e-06, 3.139000000002695e-06, 3.1250000000031253e-06, 3.1520000000027915e-06, 3.1529999999987957e-06, 3.1669999999983656e-06, 3.0840000000004197e-06, 3.1669999999983656e-06, 3.124999999999656e-06]</msg>
<status status="PASS" starttime="20201115 22:11:48.940" endtime="20201115 22:11:48.942"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.935" endtime="20201115 22:11:48.943"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:48.945" endtime="20201115 22:11:48.946"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:48.948" endtime="20201115 22:11:48.968"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.947" endtime="20201115 22:11:48.968"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.943" endtime="20201115 22:11:48.969"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.579" endtime="20201115 22:11:48.969"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.578" endtime="20201115 22:11:48.969"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.577" endtime="20201115 22:11:48.969"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:48.972" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:48.980" endtime="20201115 22:11:48.996"></status>
</kw>
<msg timestamp="20201115 22:11:48.997" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:48.979" endtime="20201115 22:11:48.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:48.999" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:48.998" endtime="20201115 22:11:49.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:49.001" endtime="20201115 22:11:49.003"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.976" endtime="20201115 22:11:49.003"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.974" endtime="20201115 22:11:49.004"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:49.011" endtime="20201115 22:11:49.298"></status>
</kw>
<msg timestamp="20201115 22:11:49.301" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024972181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024975681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:49.009" endtime="20201115 22:11:49.301"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:49.309" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024972181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024975681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:49.302" endtime="20201115 22:11:49.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:49.310" endtime="20201115 22:11:49.312"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.006" endtime="20201115 22:11:49.312"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.004" endtime="20201115 22:11:49.313"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:49.317" level="INFO">${RESULT} = [{'time': 0.024975681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.500000000000031e-06, 'source_diff': 3.500000000000031e-06}, {'time': 0.025093736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:49.313" endtime="20201115 22:11:49.317"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:49.330" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:49.318" endtime="20201115 22:11:49.331"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:49.335" level="INFO">NAME: 00-overhead-15-remove</msg>
<status status="PASS" starttime="20201115 22:11:49.334" endtime="20201115 22:11:49.335"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:49.337" level="INFO">VALUE: [3.500000000000031e-06, 3.2919999999984906e-06, 3.30600000000153e-06, 3.276999999999447e-06, 3.3050000000020563e-06, 3.2779999999989207e-06, 3.276999999999447e-06, 3.3059999999980605e-06, 3.26400000000282e-06, 3.2779999999989207e-06, 3.276999999999447e-06, 3.3059999999980605e-06, 3.2639999999993508e-06, 3.2639999999993508e-06, 3.3059999999980605e-06, 3.2639999999993508e-06, 3.2919999999984906e-06, 3.2910000000024864e-06, 3.2639999999993508e-06, 3.26400000000282e-06, 3.29200000000196e-06, 3.2779999999989207e-06, 3.3050000000020563e-06, 3.2639999999993508e-06, 3.29200000000196e-06, 3.3059999999980605e-06, 3.2639999999993508e-06, 3.2779999999989207e-06, 3.2779999999989207e-06, 3.3050000000020563e-06, 3.2919999999984906e-06, 3.29200000000196e-06, 3.3609999999968665e-06, 3.3050000000020563e-06, 3.29200000000196e-06, 3.2919999999984906e-06, 3.3050000000020563e-06, 3.2779999999989207e-06, 3.319000000001626e-06, 3.290999999999017e-06, 3.2639999999993508e-06, 3.2779999999989207e-06, 3.276999999999447e-06, 3.290999999999017e-06, 3.3059999999980605e-06, 3.222000000000641e-06, 3.2910000000024864e-06, 3.2779999999989207e-06, 3.249999999999781e-06, 3.2779999999989207e-06]</msg>
<status status="PASS" starttime="20201115 22:11:49.336" endtime="20201115 22:11:49.338"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.331" endtime="20201115 22:11:49.338"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:49.340" endtime="20201115 22:11:49.342"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:49.344" endtime="20201115 22:11:49.363"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.342" endtime="20201115 22:11:49.364"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.339" endtime="20201115 22:11:49.364"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.972" endtime="20201115 22:11:49.364"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.971" endtime="20201115 22:11:49.365"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.970" endtime="20201115 22:11:49.365"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:49.367" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:49.376" endtime="20201115 22:11:49.392"></status>
</kw>
<msg timestamp="20201115 22:11:49.393" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:49.374" endtime="20201115 22:11:49.393"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:49.395" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:49.394" endtime="20201115 22:11:49.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:49.396" endtime="20201115 22:11:49.398"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.372" endtime="20201115 22:11:49.398"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.369" endtime="20201115 22:11:49.399"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:49.405" endtime="20201115 22:11:49.693"></status>
</kw>
<msg timestamp="20201115 22:11:49.696" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024803306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024806986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:49.404" endtime="20201115 22:11:49.696"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:49.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024803306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024806986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:49.697" endtime="20201115 22:11:49.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:49.706" endtime="20201115 22:11:49.707"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.401" endtime="20201115 22:11:49.708"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.399" endtime="20201115 22:11:49.708"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:49.712" level="INFO">${RESULT} = [{'time': 0.024806986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.679999999998962e-06, 'source_diff': 3.679999999998962e-06}, {'time': 0.02492575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:11:49.709" endtime="20201115 22:11:49.712"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:49.725" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:49.713" endtime="20201115 22:11:49.726"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:49.730" level="INFO">NAME: 00-overhead-16-remove</msg>
<status status="PASS" starttime="20201115 22:11:49.729" endtime="20201115 22:11:49.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:49.732" level="INFO">VALUE: [3.679999999998962e-06, 3.4439999999982818e-06, 3.4309999999981855e-06, 3.3889999999994758e-06, 3.4579999999978517e-06, 3.4169999999986156e-06, 3.4309999999981855e-06, 3.500000000000031e-06, 3.4439999999982818e-06, 3.4439999999982818e-06, 3.3889999999994758e-06, 3.472000000000891e-06, 3.500000000000031e-06, 3.429999999998712e-06, 3.445000000001225e-06, 3.417000000002085e-06, 3.4300000000021813e-06, 3.429999999998712e-06, 3.431000000001655e-06, 3.486000000000461e-06, 3.415999999999142e-06, 3.4439999999982818e-06, 3.417000000002085e-06, 3.415999999999142e-06, 3.486000000000461e-06, 3.4440000000017512e-06, 3.4309999999981855e-06, 3.4579999999978517e-06, 3.4309999999981855e-06, 3.4439999999982818e-06, 3.403000000002515e-06, 3.431000000001655e-06, 3.401999999999572e-06, 3.415999999999142e-06, 3.417000000002085e-06, 3.415999999999142e-06, 3.4309999999981855e-06, 3.415999999999142e-06, 3.458000000001321e-06, 3.429999999998712e-06, 3.429999999998712e-06, 3.429999999998712e-06, 3.4300000000021813e-06, 3.3889999999994758e-06, 3.347000000000766e-06, 3.4300000000021813e-06, 3.4160000000026114e-06, 3.431000000001655e-06, 3.429999999998712e-06, 3.500000000000031e-06]</msg>
<status status="PASS" starttime="20201115 22:11:49.731" endtime="20201115 22:11:49.733"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.726" endtime="20201115 22:11:49.733"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:49.735" endtime="20201115 22:11:49.737"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:49.739" endtime="20201115 22:11:49.758"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.737" endtime="20201115 22:11:49.759"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.734" endtime="20201115 22:11:49.759"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.367" endtime="20201115 22:11:49.759"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.366" endtime="20201115 22:11:49.760"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.365" endtime="20201115 22:11:49.760"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:49.762" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:49.771" endtime="20201115 22:11:49.788"></status>
</kw>
<msg timestamp="20201115 22:11:49.788" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:49.769" endtime="20201115 22:11:49.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:49.791" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:49.789" endtime="20201115 22:11:49.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:49.792" endtime="20201115 22:11:49.793"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.767" endtime="20201115 22:11:49.794"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.764" endtime="20201115 22:11:49.794"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:49.801" endtime="20201115 22:11:50.089"></status>
</kw>
<msg timestamp="20201115 22:11:50.092" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024571375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024575236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:49.799" endtime="20201115 22:11:50.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:50.100" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024571375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024575236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:50.093" endtime="20201115 22:11:50.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:50.101" endtime="20201115 22:11:50.103"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.796" endtime="20201115 22:11:50.103"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.795" endtime="20201115 22:11:50.104"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:50.108" level="INFO">${RESULT} = [{'time': 0.024575236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.861000000000836e-06, 'source_diff': 3.861000000000836e-06}, {'time': 0.024702569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:50.104" endtime="20201115 22:11:50.108"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:50.121" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:50.109" endtime="20201115 22:11:50.121"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:50.125" level="INFO">NAME: 00-overhead-17-remove</msg>
<status status="PASS" starttime="20201115 22:11:50.124" endtime="20201115 22:11:50.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:50.128" level="INFO">VALUE: [3.861000000000836e-06, 3.540999999999267e-06, 3.5559999999983105e-06, 3.5550000000023063e-06, 3.540999999999267e-06, 3.5699999999978804e-06, 3.5689999999984068e-06, 3.5419999999987406e-06, 3.5270000000031665e-06, 3.5279999999991707e-06, 3.57000000000135e-06, 3.5550000000023063e-06, 3.55600000000178e-06, 3.554999999998837e-06, 3.540999999999267e-06, 3.5689999999984068e-06, 3.5689999999984068e-06, 3.55600000000178e-06, 3.5550000000023063e-06, 3.554999999998837e-06, 3.5699999999978804e-06, 3.5279999999991707e-06, 3.554999999998837e-06, 3.583000000001446e-06, 3.5550000000023063e-06, 3.5699999999978804e-06, 3.5840000000009198e-06, 3.500000000000031e-06, 3.554999999998837e-06, 3.5980000000004897e-06, 3.5690000000018762e-06, 3.554999999998837e-06, 3.5559999999983105e-06, 3.5550000000023063e-06, 3.5699999999978804e-06, 3.5559999999983105e-06, 3.5689999999984068e-06, 3.540999999999267e-06, 3.57000000000135e-06, 3.554999999998837e-06, 3.583000000001446e-06, 3.5699999999978804e-06, 3.5550000000023063e-06, 3.55600000000178e-06, 3.5689999999984068e-06, 3.5829999999979767e-06, 3.57000000000135e-06, 3.5690000000018762e-06, 3.5419999999987406e-06, 3.5829999999979767e-06]</msg>
<status status="PASS" starttime="20201115 22:11:50.126" endtime="20201115 22:11:50.128"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.122" endtime="20201115 22:11:50.129"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:50.131" endtime="20201115 22:11:50.132"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:50.134" endtime="20201115 22:11:50.154"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.133" endtime="20201115 22:11:50.154"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.129" endtime="20201115 22:11:50.155"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.763" endtime="20201115 22:11:50.155"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.761" endtime="20201115 22:11:50.155"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.760" endtime="20201115 22:11:50.155"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:50.158" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:50.166" endtime="20201115 22:11:50.185"></status>
</kw>
<msg timestamp="20201115 22:11:50.185" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:50.165" endtime="20201115 22:11:50.185"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:50.188" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:50.186" endtime="20201115 22:11:50.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:50.189" endtime="20201115 22:11:50.191"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.162" endtime="20201115 22:11:50.191"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.160" endtime="20201115 22:11:50.192"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:50.198" endtime="20201115 22:11:50.486"></status>
</kw>
<msg timestamp="20201115 22:11:50.489" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025030597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025034514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:50.196" endtime="20201115 22:11:50.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:50.497" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025030597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025034514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:50.490" endtime="20201115 22:11:50.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:50.498" endtime="20201115 22:11:50.500"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.194" endtime="20201115 22:11:50.500"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.192" endtime="20201115 22:11:50.501"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:50.505" level="INFO">${RESULT} = [{'time': 0.025034514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.916999999999116e-06, 'source_diff': 3.916999999999116e-06}, {'time': 0.025168708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:50.501" endtime="20201115 22:11:50.505"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:50.518" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:50.506" endtime="20201115 22:11:50.518"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:50.522" level="INFO">NAME: 00-overhead-18-remove</msg>
<status status="PASS" starttime="20201115 22:11:50.521" endtime="20201115 22:11:50.523"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:50.525" level="INFO">VALUE: [3.916999999999116e-06, 3.708000000001571e-06, 3.695000000001475e-06, 3.6940000000020012e-06, 3.7079999999981017e-06, 3.708000000001571e-06, 3.665999999999392e-06, 3.7089999999975753e-06, 3.7230000000006147e-06, 3.708000000001571e-06, 3.722000000001141e-06, 3.6949999999980054e-06, 3.722000000001141e-06, 3.708000000001571e-06, 3.6940000000020012e-06, 3.708000000001571e-06, 3.679999999998962e-06, 3.708000000001571e-06, 3.709000000001045e-06, 3.7079999999981017e-06, 3.6669999999988656e-06, 3.722000000001141e-06, 3.6940000000020012e-06, 3.722000000001141e-06, 3.722000000001141e-06, 3.7230000000006147e-06, 3.625000000000156e-06, 3.7230000000006147e-06, 3.7230000000006147e-06, 3.693999999998532e-06, 3.695000000001475e-06, 3.693999999998532e-06, 3.7219999999976716e-06, 3.736000000000711e-06, 3.709000000001045e-06, 3.6809999999984355e-06, 3.750000000000281e-06, 3.693999999998532e-06, 3.7079999999981017e-06, 3.709000000001045e-06, 3.709000000001045e-06, 3.750000000000281e-06, 3.693999999998532e-06, 3.693999999998532e-06, 3.695000000001475e-06, 3.665999999999392e-06, 3.7079999999981017e-06, 3.6949999999980054e-06, 3.665999999999392e-06, 3.7360000000041804e-06]</msg>
<status status="PASS" starttime="20201115 22:11:50.523" endtime="20201115 22:11:50.525"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.519" endtime="20201115 22:11:50.525"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:50.528" endtime="20201115 22:11:50.529"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:50.531" endtime="20201115 22:11:50.551"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.530" endtime="20201115 22:11:50.551"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.526" endtime="20201115 22:11:50.552"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.158" endtime="20201115 22:11:50.552"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.156" endtime="20201115 22:11:50.552"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.156" endtime="20201115 22:11:50.552"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:50.555" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:50.564" endtime="20201115 22:11:50.581"></status>
</kw>
<msg timestamp="20201115 22:11:50.582" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:50.562" endtime="20201115 22:11:50.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:50.584" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:50.583" endtime="20201115 22:11:50.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:50.585" endtime="20201115 22:11:50.587"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.560" endtime="20201115 22:11:50.587"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.557" endtime="20201115 22:11:50.588"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:50.594" endtime="20201115 22:11:50.881"></status>
</kw>
<msg timestamp="20201115 22:11:50.884" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025064417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025068486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:50.593" endtime="20201115 22:11:50.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:50.891" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025064417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025068486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:50.885" endtime="20201115 22:11:50.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:50.893" endtime="20201115 22:11:50.894"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.590" endtime="20201115 22:11:50.895"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.588" endtime="20201115 22:11:50.895"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:50.899" level="INFO">${RESULT} = [{'time': 0.025068486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.069000000002376e-06, 'source_diff': 4.069000000002376e-06}, {'time': 0.025211778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:50.896" endtime="20201115 22:11:50.900"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:50.912" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:50.900" endtime="20201115 22:11:50.913"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:50.917" level="INFO">NAME: 00-overhead-19-remove</msg>
<status status="PASS" starttime="20201115 22:11:50.916" endtime="20201115 22:11:50.917"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:50.919" level="INFO">VALUE: [4.069000000002376e-06, 3.7919999999989906e-06, 3.84800000000074e-06, 3.832999999998227e-06, 3.83400000000117e-06, 3.861000000000836e-06, 3.902999999999546e-06, 3.84799999999727e-06, 3.86200000000031e-06, 3.861000000000836e-06, 3.861000000000836e-06, 3.8199999999981304e-06, 3.847000000001266e-06, 3.832999999998227e-06, 3.833000000001696e-06, 3.8339999999977e-06, 3.83400000000117e-06, 3.833000000001696e-06, 3.888999999999976e-06, 3.7779999999994207e-06, 3.8749999999969365e-06, 3.847000000001266e-06, 3.833000000001696e-06, 3.819000000002126e-06, 3.8200000000016e-06, 3.8199999999981304e-06, 3.8200000000016e-06, 3.832999999998227e-06, 3.846999999997797e-06, 3.833000000001696e-06, 3.832999999998227e-06, 3.819000000002126e-06, 3.833000000001696e-06, 3.83400000000117e-06, 3.8609999999973665e-06, 3.833000000001696e-06, 3.83400000000117e-06, 3.84800000000074e-06, 3.832999999998227e-06, 3.833000000001696e-06, 3.833000000001696e-06, 3.902999999999546e-06, 3.861000000000836e-06, 3.861000000000836e-06, 3.860999999993897e-06, 3.861000000000836e-06, 3.915999999999642e-06, 3.861000000000836e-06, 3.84800000000074e-06, 3.902999999999546e-06]</msg>
<status status="PASS" starttime="20201115 22:11:50.918" endtime="20201115 22:11:50.920"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.913" endtime="20201115 22:11:50.920"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:50.922" endtime="20201115 22:11:50.924"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:50.926" endtime="20201115 22:11:50.946"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.924" endtime="20201115 22:11:50.946"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.921" endtime="20201115 22:11:50.947"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.555" endtime="20201115 22:11:50.947"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.554" endtime="20201115 22:11:50.947"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.553" endtime="20201115 22:11:50.947"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:50.950" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:50.958" endtime="20201115 22:11:50.977"></status>
</kw>
<msg timestamp="20201115 22:11:50.977" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:50.957" endtime="20201115 22:11:50.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:50.980" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:50.978" endtime="20201115 22:11:50.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:50.981" endtime="20201115 22:11:50.982"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.954" endtime="20201115 22:11:50.983"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.952" endtime="20201115 22:11:50.983"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:50.990" endtime="20201115 22:11:51.278"></status>
</kw>
<msg timestamp="20201115 22:11:51.281" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024635639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024639847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:50.988" endtime="20201115 22:11:51.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:51.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024635639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024639847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:51.282" endtime="20201115 22:11:51.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:51.290" endtime="20201115 22:11:51.292"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.986" endtime="20201115 22:11:51.292"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.984" endtime="20201115 22:11:51.293"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:51.297" level="INFO">${RESULT} = [{'time': 0.024639847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.207999999998602e-06, 'source_diff': 4.207999999998602e-06}, {'time': 0.024793042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:51.294" endtime="20201115 22:11:51.297"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:51.310" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:51.298" endtime="20201115 22:11:51.310"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:51.314" level="INFO">NAME: 00-overhead-20-remove</msg>
<status status="PASS" starttime="20201115 22:11:51.313" endtime="20201115 22:11:51.315"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:51.317" level="INFO">VALUE: [4.207999999998602e-06, 3.973000000000865e-06, 3.986000000000961e-06, 3.986000000000961e-06, 3.973000000000865e-06, 4.000000000000531e-06, 3.986000000000961e-06, 3.986000000000961e-06, 3.957999999998352e-06, 4.013000000000627e-06, 3.9859999999974915e-06, 3.971999999997922e-06, 3.972000000001391e-06, 3.902999999999546e-06, 3.986000000000961e-06, 3.986000000000961e-06, 3.943999999998782e-06, 3.986000000000961e-06, 4.000000000000531e-06, 4.000000000000531e-06, 3.986000000000961e-06, 3.986000000000961e-06, 3.9859999999974915e-06, 3.972000000001391e-06, 3.987000000000435e-06, 3.9859999999974915e-06, 3.971999999997922e-06, 3.986000000000961e-06, 3.986000000000961e-06, 3.971999999997922e-06, 3.971999999997922e-06, 3.971999999997922e-06, 4.000000000000531e-06, 4.000000000000531e-06, 4.000000000000531e-06, 3.930000000002681e-06, 3.986000000000961e-06, 3.986000000000961e-06, 3.986000000000961e-06, 3.986000000000961e-06, 4.000000000000531e-06, 3.986000000000961e-06, 3.9449999999982555e-06, 3.972000000001391e-06, 3.9860000000044304e-06, 3.929999999999212e-06, 3.9860000000044304e-06, 3.9860000000044304e-06, 3.9999999999970615e-06, 3.9859999999974915e-06]</msg>
<status status="PASS" starttime="20201115 22:11:51.316" endtime="20201115 22:11:51.318"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.311" endtime="20201115 22:11:51.318"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:51.320" endtime="20201115 22:11:51.322"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:51.324" endtime="20201115 22:11:51.343"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.322" endtime="20201115 22:11:51.344"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.319" endtime="20201115 22:11:51.344"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.950" endtime="20201115 22:11:51.344"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.949" endtime="20201115 22:11:51.345"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.948" endtime="20201115 22:11:51.345"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:51.347" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:51.356" endtime="20201115 22:11:51.374"></status>
</kw>
<msg timestamp="20201115 22:11:51.375" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:51.354" endtime="20201115 22:11:51.375"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:51.377" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:51.376" endtime="20201115 22:11:51.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:51.378" endtime="20201115 22:11:51.380"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.352" endtime="20201115 22:11:51.381"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.350" endtime="20201115 22:11:51.381"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:51.387" endtime="20201115 22:11:51.675"></status>
</kw>
<msg timestamp="20201115 22:11:51.678" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024711708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024716042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:51.386" endtime="20201115 22:11:51.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:51.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024711708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024716042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:51.679" endtime="20201115 22:11:51.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:51.687" endtime="20201115 22:11:51.688"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.383" endtime="20201115 22:11:51.689"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.382" endtime="20201115 22:11:51.689"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:51.693" level="INFO">${RESULT} = [{'time': 0.024716042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.33400000000167e-06, 'source_diff': 4.33400000000167e-06}, {'time': 0.024880222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:11:51.690" endtime="20201115 22:11:51.693"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:51.706" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:51.694" endtime="20201115 22:11:51.707"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:51.711" level="INFO">NAME: 00-overhead-21-remove</msg>
<status status="PASS" starttime="20201115 22:11:51.710" endtime="20201115 22:11:51.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:51.720" level="INFO">VALUE: [4.33400000000167e-06, 4.083000000001946e-06, 4.125000000000656e-06, 4.11200000000056e-06, 4.166999999999366e-06, 4.096999999998047e-06, 4.096999999998047e-06, 4.111000000001086e-06, 4.1109999999976166e-06, 4.097000000001516e-06, 4.111000000001086e-06, 4.125000000000656e-06, 4.125000000000656e-06, 4.111000000001086e-06, 4.139000000000226e-06, 4.139000000000226e-06, 4.111000000001086e-06, 4.111000000001086e-06, 4.097000000001516e-06, 4.111000000001086e-06, 4.111000000001086e-06, 4.111000000001086e-06, 4.097000000001516e-06, 4.111000000001086e-06, 4.11200000000056e-06, 4.097000000001516e-06, 4.0699999999983805e-06, 4.139000000000226e-06, 4.125000000000656e-06, 4.09799999999752e-06, 4.1249999999971865e-06, 4.08399999999795e-06, 4.139000000000226e-06, 4.068999999998907e-06, 4.111000000001086e-06, 4.1109999999976166e-06, 4.125000000000656e-06, 4.125000000000656e-06, 4.139000000000226e-06, 4.1109999999976166e-06, 4.139000000000226e-06, 4.125000000000656e-06, 4.1809999999989356e-06, 4.138000000000752e-06, 4.08400000000142e-06, 4.1809999999989356e-06, 4.111000000001086e-06, 4.097000000001516e-06, 4.125000000000656e-06, 4.111000000001086e-06]</msg>
<status status="PASS" starttime="20201115 22:11:51.712" endtime="20201115 22:11:51.720"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.707" endtime="20201115 22:11:51.721"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:51.723" endtime="20201115 22:11:51.724"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:51.726" endtime="20201115 22:11:51.746"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.725" endtime="20201115 22:11:51.746"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.721" endtime="20201115 22:11:51.747"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.348" endtime="20201115 22:11:51.747"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.346" endtime="20201115 22:11:51.747"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.345" endtime="20201115 22:11:51.748"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:51.750" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:51.758" endtime="20201115 22:11:51.777"></status>
</kw>
<msg timestamp="20201115 22:11:51.777" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:51.757" endtime="20201115 22:11:51.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:51.780" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:51.778" endtime="20201115 22:11:51.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:51.781" endtime="20201115 22:11:51.782"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.754" endtime="20201115 22:11:51.783"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.752" endtime="20201115 22:11:51.783"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:51.790" endtime="20201115 22:11:52.081"></status>
</kw>
<msg timestamp="20201115 22:11:52.084" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024689486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024693931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:51.788" endtime="20201115 22:11:52.084"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:52.092" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024689486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024693931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:52.085" endtime="20201115 22:11:52.092"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:52.093" endtime="20201115 22:11:52.094"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.786" endtime="20201115 22:11:52.095"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.784" endtime="20201115 22:11:52.095"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:52.099" level="INFO">${RESULT} = [{'time': 0.024693931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.4449999999987555e-06, 'source_diff': 4.4449999999987555e-06}, {'time': 0.024865375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:52.096" endtime="20201115 22:11:52.100"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:52.113" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:52.101" endtime="20201115 22:11:52.113"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:52.118" level="INFO">NAME: 00-overhead-22-remove</msg>
<status status="PASS" starttime="20201115 22:11:52.117" endtime="20201115 22:11:52.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:52.120" level="INFO">VALUE: [4.4449999999987555e-06, 4.263999999996881e-06, 4.277999999999921e-06, 4.208000000002071e-06, 4.277999999999921e-06, 4.264000000000351e-06, 4.2359999999977416e-06, 4.222000000001641e-06, 4.264000000000351e-06, 4.221999999998172e-06, 4.2499999999973115e-06, 4.277999999999921e-06, 4.250000000000781e-06, 4.277999999999921e-06, 4.264000000000351e-06, 4.291999999999491e-06, 4.291999999999491e-06, 4.264000000000351e-06, 4.221999999998172e-06, 4.277000000000447e-06, 4.2499999999973115e-06, 4.264000000000351e-06, 4.276999999996978e-06, 4.264000000000351e-06, 4.264000000000351e-06, 4.264000000000351e-06, 4.264000000000351e-06, 4.2499999999973115e-06, 4.319000000002626e-06, 4.291999999999491e-06, 4.264000000000351e-06, 4.264000000000351e-06, 4.277999999999921e-06, 4.264000000000351e-06, 4.193999999999032e-06, 4.2499999999973115e-06, 4.264000000000351e-06, 4.263999999996881e-06, 4.250000000000781e-06, 4.2499999999973115e-06, 4.263000000004347e-06, 4.263999999996881e-06, 4.2359999999977416e-06, 4.26400000000382e-06, 4.26400000000382e-06, 4.263999999996881e-06, 4.26400000000382e-06, 4.2909999999965476e-06, 4.263999999996881e-06, 4.2910000000034865e-06]</msg>
<status status="PASS" starttime="20201115 22:11:52.119" endtime="20201115 22:11:52.120"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.114" endtime="20201115 22:11:52.121"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:52.123" endtime="20201115 22:11:52.124"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:52.126" endtime="20201115 22:11:52.146"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.125" endtime="20201115 22:11:52.146"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.122" endtime="20201115 22:11:52.147"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.750" endtime="20201115 22:11:52.147"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.749" endtime="20201115 22:11:52.147"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.748" endtime="20201115 22:11:52.148"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:52.150" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:52.158" endtime="20201115 22:11:52.178"></status>
</kw>
<msg timestamp="20201115 22:11:52.178" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:52.157" endtime="20201115 22:11:52.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:52.180" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:52.179" endtime="20201115 22:11:52.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:52.182" endtime="20201115 22:11:52.183"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.154" endtime="20201115 22:11:52.184"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.152" endtime="20201115 22:11:52.184"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:52.190" endtime="20201115 22:11:52.477"></status>
</kw>
<msg timestamp="20201115 22:11:52.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024665903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024670556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:52.189" endtime="20201115 22:11:52.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:52.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024665903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024670556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:52.481" endtime="20201115 22:11:52.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:52.489" endtime="20201115 22:11:52.491"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.186" endtime="20201115 22:11:52.491"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.185" endtime="20201115 22:11:52.492"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:52.496" level="INFO">${RESULT} = [{'time': 0.024670556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.653000000000296e-06, 'source_diff': 4.653000000000296e-06}, {'time': 0.024853264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:52.493" endtime="20201115 22:11:52.496"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:52.509" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:52.497" endtime="20201115 22:11:52.509"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:52.513" level="INFO">NAME: 00-overhead-23-remove</msg>
<status status="PASS" starttime="20201115 22:11:52.512" endtime="20201115 22:11:52.514"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:52.516" level="INFO">VALUE: [4.653000000000296e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.3749999999974365e-06, 4.403000000000046e-06, 4.388999999997006e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.36200000000081e-06, 4.389000000000476e-06, 4.346999999998297e-06, 4.416999999999616e-06, 4.375000000000906e-06, 4.388000000001002e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.360999999997867e-06, 4.346999999998297e-06, 4.389000000000476e-06, 4.388999999997006e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.388999999997006e-06, 4.416999999999616e-06, 4.375000000000906e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.346999999998297e-06, 4.402000000000572e-06, 4.388000000001002e-06, 4.389000000000476e-06, 4.388000000001002e-06, 4.403000000000046e-06, 4.361000000001336e-06, 4.375000000000906e-06, 4.403000000000046e-06, 4.346999999994827e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.402000000000572e-06, 4.402000000000572e-06, 4.430999999999186e-06, 4.375000000000906e-06, 4.402000000000572e-06]</msg>
<status status="PASS" starttime="20201115 22:11:52.514" endtime="20201115 22:11:52.516"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.510" endtime="20201115 22:11:52.517"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:52.519" endtime="20201115 22:11:52.520"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:52.523" endtime="20201115 22:11:52.542"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.521" endtime="20201115 22:11:52.542"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.517" endtime="20201115 22:11:52.543"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.150" endtime="20201115 22:11:52.543"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.149" endtime="20201115 22:11:52.543"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.148" endtime="20201115 22:11:52.544"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:52.546" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:52.554" endtime="20201115 22:11:52.575"></status>
</kw>
<msg timestamp="20201115 22:11:52.575" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:52.553" endtime="20201115 22:11:52.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:52.578" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:52.576" endtime="20201115 22:11:52.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:52.579" endtime="20201115 22:11:52.580"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.550" endtime="20201115 22:11:52.581"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.548" endtime="20201115 22:11:52.581"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:52.588" endtime="20201115 22:11:52.875"></status>
</kw>
<msg timestamp="20201115 22:11:52.878" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024744458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024749222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:52.586" endtime="20201115 22:11:52.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:52.886" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024744458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024749222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:52.880" endtime="20201115 22:11:52.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:52.887" endtime="20201115 22:11:52.889"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.584" endtime="20201115 22:11:52.890"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.582" endtime="20201115 22:11:52.890"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:52.894" level="INFO">${RESULT} = [{'time': 0.024749222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.764000000000851e-06, 'source_diff': 4.764000000000851e-06}, {'time': 0.024941569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:52.891" endtime="20201115 22:11:52.894"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:52.907" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:52.895" endtime="20201115 22:11:52.908"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:52.912" level="INFO">NAME: 00-overhead-24-remove</msg>
<status status="PASS" starttime="20201115 22:11:52.911" endtime="20201115 22:11:52.912"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:52.914" level="INFO">VALUE: [4.764000000000851e-06, 4.554999999999837e-06, 4.527000000000697e-06, 4.485999999997992e-06, 4.554999999999837e-06, 4.554999999999837e-06, 4.513999999997131e-06, 4.528000000000171e-06, 4.568999999999407e-06, 4.554999999999837e-06, 4.514000000000601e-06, 4.528000000000171e-06, 4.541999999999741e-06, 4.57000000000235e-06, 4.5839999999984504e-06, 4.527000000000697e-06, 4.541000000000267e-06, 4.568999999999407e-06, 4.500000000001031e-06, 4.541000000000267e-06, 4.57000000000235e-06, 4.555999999999311e-06, 4.54200000000321e-06, 4.541999999999741e-06, 4.541000000000267e-06, 4.541000000000267e-06, 4.487000000000935e-06, 4.527999999996701e-06, 4.541000000000267e-06, 4.528000000000171e-06, 4.541999999999741e-06, 4.471999999998422e-06, 4.486000000001461e-06, 4.55600000000278e-06, 4.541000000000267e-06, 4.472999999997895e-06, 4.555999999995841e-06, 4.54200000000321e-06, 4.5549999999963675e-06, 4.541999999996271e-06, 4.540999999996798e-06, 4.485999999997992e-06, 4.471999999998422e-06, 4.583000000002446e-06, 4.540999999996798e-06, 4.527999999996701e-06, 4.513999999997131e-06, 4.527999999996701e-06, 4.5410000000037365e-06, 4.54200000000321e-06]</msg>
<status status="PASS" starttime="20201115 22:11:52.913" endtime="20201115 22:11:52.914"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.908" endtime="20201115 22:11:52.915"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:52.917" endtime="20201115 22:11:52.919"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:52.921" endtime="20201115 22:11:52.940"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.919" endtime="20201115 22:11:52.941"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.916" endtime="20201115 22:11:52.941"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.546" endtime="20201115 22:11:52.941"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.545" endtime="20201115 22:11:52.942"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.544" endtime="20201115 22:11:52.942"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:52.944" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:52.953" endtime="20201115 22:11:52.974"></status>
</kw>
<msg timestamp="20201115 22:11:52.974" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:52.951" endtime="20201115 22:11:52.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:52.977" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:52.975" endtime="20201115 22:11:52.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:52.978" endtime="20201115 22:11:52.980"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.949" endtime="20201115 22:11:52.980"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.946" endtime="20201115 22:11:52.981"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:52.987" endtime="20201115 22:11:53.273"></status>
</kw>
<msg timestamp="20201115 22:11:53.276" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02517725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025182208, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:11:52.985" endtime="20201115 22:11:53.276"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:53.284" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02517725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025182208, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:11:53.277" endtime="20201115 22:11:53.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:53.285" endtime="20201115 22:11:53.287"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.983" endtime="20201115 22:11:53.287"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.981" endtime="20201115 22:11:53.288"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:53.292" level="INFO">${RESULT} = [{'time': 0.025182208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.957999999999352e-06, 'source_diff': 4.957999999999352e-06}, {'time': 0.025384361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:53.288" endtime="20201115 22:11:53.292"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:53.305" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:53.293" endtime="20201115 22:11:53.305"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:53.309" level="INFO">NAME: 00-overhead-25-remove</msg>
<status status="PASS" starttime="20201115 22:11:53.308" endtime="20201115 22:11:53.310"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:53.312" level="INFO">VALUE: [4.957999999999352e-06, 4.666999999999866e-06, 4.666999999999866e-06, 4.653000000000296e-06, 4.6949999999990055e-06, 4.652000000000822e-06, 4.652000000000822e-06, 4.680999999999436e-06, 4.680999999999436e-06, 4.653000000000296e-06, 4.666999999999866e-06, 4.666000000000392e-06, 4.666999999999866e-06, 4.652000000000822e-06, 4.653000000000296e-06, 4.666999999999866e-06, 4.679999999999962e-06, 4.666000000000392e-06, 4.666999999999866e-06, 4.679999999999962e-06, 4.679999999999962e-06, 4.597000000002016e-06, 4.695000000002475e-06, 4.639000000000726e-06, 4.680999999999436e-06, 4.680999999999436e-06, 4.666999999999866e-06, 4.653000000000296e-06, 4.666999999999866e-06, 4.639000000000726e-06, 4.666999999999866e-06, 4.653000000000296e-06, 4.666000000000392e-06, 4.666999999999866e-06, 4.680999999999436e-06, 4.679999999999962e-06, 4.666000000000392e-06, 4.653000000000296e-06, 4.6810000000063745e-06, 4.666999999999866e-06, 4.666999999999866e-06, 4.679999999999962e-06, 4.666000000000392e-06, 4.693999999999532e-06, 4.679999999999962e-06, 4.666000000000392e-06, 4.666000000000392e-06, 4.666999999999866e-06, 4.721999999998672e-06, 4.666999999999866e-06]</msg>
<status status="PASS" starttime="20201115 22:11:53.311" endtime="20201115 22:11:53.312"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.306" endtime="20201115 22:11:53.313"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:53.315" endtime="20201115 22:11:53.316"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:53.318" endtime="20201115 22:11:53.338"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.317" endtime="20201115 22:11:53.338"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.313" endtime="20201115 22:11:53.339"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.944" endtime="20201115 22:11:53.339"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.943" endtime="20201115 22:11:53.339"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.942" endtime="20201115 22:11:53.339"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.481" endtime="20201115 22:11:53.340"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="teardown">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:53.344" endtime="20201115 22:11:53.364"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.343" endtime="20201115 22:11:53.364"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.341" endtime="20201115 22:11:53.365"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:11:43.411" endtime="20201115 22:11:53.366" critical="yes"></status>
</test>
<status status="PASS" starttime="20201115 22:11:30.979" endtime="20201115 22:11:53.372"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">nucleo-f767zi</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="PASS" starttime="20201115 22:11:28.966" endtime="20201115 22:11:53.390"></status>
</suite>
<statistics>
<total>
<stat pass="5" fail="0">Critical Tests</stat>
<stat pass="5" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="5" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="5" fail="0">BOARD_nucleo-f767zi</stat>
<stat pass="5" fail="0">dev</stat>
</tag>
<suite>
<stat pass="5" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="4" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
