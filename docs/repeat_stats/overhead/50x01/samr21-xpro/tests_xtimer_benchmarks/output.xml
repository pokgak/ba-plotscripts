<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2 (Python 3.7.3 on linux)" generated="20201115 22:11:57.955" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201115 22:11:59.180" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201115 22:11:59.196" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201115 22:12:01.130" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201115 22:11:59.176" endtime="20201115 22:12:01.131"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201115 22:12:01.137" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201115 22:12:01.134" endtime="20201115 22:12:01.138"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:59.173" endtime="20201115 22:12:01.139"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:01.144" endtime="20201115 22:12:01.483"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:01.141" endtime="20201115 22:12:01.485"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:01.515" endtime="20201115 22:12:01.531"></status>
</kw>
<msg timestamp="20201115 22:12:01.532" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:01.512" endtime="20201115 22:12:01.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:01.539" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:01.534" endtime="20201115 22:12:01.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:12:01.545" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:12:01.541" endtime="20201115 22:12:01.546"></status>
</kw>
<status status="FAIL" starttime="20201115 22:12:01.505" endtime="20201115 22:12:01.548"></status>
</kw>
<status status="FAIL" starttime="20201115 22:12:01.500" endtime="20201115 22:12:01.550"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:01.497" endtime="20201115 22:12:01.550"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:12:01.558" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:12:01.557" endtime="20201115 22:12:01.559"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:01.552" endtime="20201115 22:12:01.559"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:01.495" endtime="20201115 22:12:01.560"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:01.493" endtime="20201115 22:12:01.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:01.562" endtime="20201115 22:12:01.565"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:01.490" endtime="20201115 22:12:01.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:01.568" endtime="20201115 22:12:01.572"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:01.487" endtime="20201115 22:12:01.574"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:59.170" endtime="20201115 22:12:01.574"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:01.590" endtime="20201115 22:12:01.612"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:01.587" endtime="20201115 22:12:01.614"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:01.647" endtime="20201115 22:12:01.662"></status>
</kw>
<msg timestamp="20201115 22:12:01.663" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:01.644" endtime="20201115 22:12:01.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:01.670" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:01.666" endtime="20201115 22:12:01.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:12:01.676" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:12:01.672" endtime="20201115 22:12:01.677"></status>
</kw>
<status status="FAIL" starttime="20201115 22:12:01.636" endtime="20201115 22:12:01.679"></status>
</kw>
<status status="FAIL" starttime="20201115 22:12:01.630" endtime="20201115 22:12:01.680"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:01.627" endtime="20201115 22:12:01.681"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:12:01.689" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:12:01.687" endtime="20201115 22:12:01.690"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:01.683" endtime="20201115 22:12:01.690"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:01.625" endtime="20201115 22:12:01.690"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:01.623" endtime="20201115 22:12:01.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:01.692" endtime="20201115 22:12:01.696"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:01.619" endtime="20201115 22:12:01.697"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:01.615" endtime="20201115 22:12:01.699"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:01.584" endtime="20201115 22:12:01.699"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:01.717" endtime="20201115 22:12:01.727"></status>
</kw>
<msg timestamp="20201115 22:12:01.728" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:01.714" endtime="20201115 22:12:01.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:01.734" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:01.731" endtime="20201115 22:12:01.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:01.737" endtime="20201115 22:12:01.742"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:01.706" endtime="20201115 22:12:01.744"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:01.701" endtime="20201115 22:12:01.745"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:01.756" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201115 22:12:01.753" endtime="20201115 22:12:01.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:01.760" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201115 22:12:01.758" endtime="20201115 22:12:01.761"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:01.747" endtime="20201115 22:12:01.762"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:12:01.575" endtime="20201115 22:12:01.764" critical="yes"></status>
</test>
<status status="PASS" starttime="20201115 22:11:58.215" endtime="20201115 22:12:01.771"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201115 22:12:01.906" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201115 22:12:01.921" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201115 22:12:03.847" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201115 22:12:01.902" endtime="20201115 22:12:03.848"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201115 22:12:03.854" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201115 22:12:03.850" endtime="20201115 22:12:03.854"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:01.900" endtime="20201115 22:12:03.856"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:03.860" endtime="20201115 22:12:04.187"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:03.858" endtime="20201115 22:12:04.189"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:04.218" endtime="20201115 22:12:04.234"></status>
</kw>
<msg timestamp="20201115 22:12:04.235" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:04.215" endtime="20201115 22:12:04.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:04.241" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:04.237" endtime="20201115 22:12:04.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:12:04.248" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:12:04.244" endtime="20201115 22:12:04.250"></status>
</kw>
<status status="FAIL" starttime="20201115 22:12:04.209" endtime="20201115 22:12:04.252"></status>
</kw>
<status status="FAIL" starttime="20201115 22:12:04.203" endtime="20201115 22:12:04.254"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:04.200" endtime="20201115 22:12:04.254"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:12:04.262" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:12:04.261" endtime="20201115 22:12:04.263"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:04.256" endtime="20201115 22:12:04.263"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:04.199" endtime="20201115 22:12:04.264"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:04.197" endtime="20201115 22:12:04.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:04.266" endtime="20201115 22:12:04.269"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:04.194" endtime="20201115 22:12:04.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:04.272" endtime="20201115 22:12:04.276"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:04.190" endtime="20201115 22:12:04.277"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:01.897" endtime="20201115 22:12:04.278"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO/">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:04.292" endtime="20201115 22:12:04.313"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:04.288" endtime="20201115 22:12:04.315"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:04.348" endtime="20201115 22:12:04.363"></status>
</kw>
<msg timestamp="20201115 22:12:04.364" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:04.344" endtime="20201115 22:12:04.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:04.371" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:04.367" endtime="20201115 22:12:04.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:12:04.378" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:12:04.374" endtime="20201115 22:12:04.378"></status>
</kw>
<status status="FAIL" starttime="20201115 22:12:04.337" endtime="20201115 22:12:04.380"></status>
</kw>
<status status="FAIL" starttime="20201115 22:12:04.331" endtime="20201115 22:12:04.382"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:04.328" endtime="20201115 22:12:04.382"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:12:04.390" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:12:04.389" endtime="20201115 22:12:04.391"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:04.384" endtime="20201115 22:12:04.391"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:04.326" endtime="20201115 22:12:04.452"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:04.325" endtime="20201115 22:12:04.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:04.455" endtime="20201115 22:12:04.458"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:04.321" endtime="20201115 22:12:04.460"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:04.316" endtime="20201115 22:12:04.461"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:04.285" endtime="20201115 22:12:04.462"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure GPIO Overhead</arg>
</arguments>
<msg timestamp="20201115 22:12:04.467" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:04.486" endtime="20201115 22:12:04.497"></status>
</kw>
<msg timestamp="20201115 22:12:04.498" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:04.483" endtime="20201115 22:12:04.498"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:04.504" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:04.500" endtime="20201115 22:12:04.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:04.506" endtime="20201115 22:12:04.510"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:04.476" endtime="20201115 22:12:04.512"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:04.471" endtime="20201115 22:12:04.513"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:04.529" endtime="20201115 22:12:04.876"></status>
</kw>
<msg timestamp="20201115 22:12:04.884" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.184806764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.184807236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:04.526" endtime="20201115 22:12:04.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:04.902" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.184806764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.184807236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:04.886" endtime="20201115 22:12:04.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:04.905" endtime="20201115 22:12:04.908"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:04.519" endtime="20201115 22:12:04.910"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:04.514" endtime="20201115 22:12:04.911"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:04.922" level="INFO">${RESULT} = [{'time': 0.184807236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.184817125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:12:04.913" endtime="20201115 22:12:04.922"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:04.954" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:12:04.924" endtime="20201115 22:12:04.954"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:04.965" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201115 22:12:04.962" endtime="20201115 22:12:04.966"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:04.970" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.419999999922709e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999730783e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201115 22:12:04.967" endtime="20201115 22:12:04.971"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:04.956" endtime="20201115 22:12:04.973"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:04.979" endtime="20201115 22:12:04.982"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:04.987" endtime="20201115 22:12:05.009"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:04.983" endtime="20201115 22:12:05.011"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:04.975" endtime="20201115 22:12:05.012"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:04.468" endtime="20201115 22:12:05.013"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:04.464" endtime="20201115 22:12:05.014"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:05.024" endtime="20201115 22:12:05.046"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:05.020" endtime="20201115 22:12:05.047"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:05.017" endtime="20201115 22:12:05.048"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:12:04.279" endtime="20201115 22:12:05.049" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:05.067" endtime="20201115 22:12:05.088"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:05.063" endtime="20201115 22:12:05.090"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:05.124" endtime="20201115 22:12:05.140"></status>
</kw>
<msg timestamp="20201115 22:12:05.141" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:05.121" endtime="20201115 22:12:05.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:05.147" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:05.143" endtime="20201115 22:12:05.148"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:12:05.154" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:12:05.149" endtime="20201115 22:12:05.154"></status>
</kw>
<status status="FAIL" starttime="20201115 22:12:05.112" endtime="20201115 22:12:05.156"></status>
</kw>
<status status="FAIL" starttime="20201115 22:12:05.106" endtime="20201115 22:12:05.158"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:05.103" endtime="20201115 22:12:05.159"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:12:05.167" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:12:05.166" endtime="20201115 22:12:05.168"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:05.161" endtime="20201115 22:12:05.168"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:05.102" endtime="20201115 22:12:05.169"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:05.100" endtime="20201115 22:12:05.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:05.171" endtime="20201115 22:12:05.174"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:05.096" endtime="20201115 22:12:05.176"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:05.091" endtime="20201115 22:12:05.177"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:05.060" endtime="20201115 22:12:05.178"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer Now Overhead</arg>
</arguments>
<msg timestamp="20201115 22:12:05.183" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:05.202" endtime="20201115 22:12:05.214"></status>
</kw>
<msg timestamp="20201115 22:12:05.215" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:05.199" endtime="20201115 22:12:05.216"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:05.221" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:05.218" endtime="20201115 22:12:05.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:05.224" endtime="20201115 22:12:05.227"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:05.192" endtime="20201115 22:12:05.229"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:05.187" endtime="20201115 22:12:05.230"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:05.247" endtime="20201115 22:12:05.592"></status>
</kw>
<msg timestamp="20201115 22:12:05.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.126212056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.126221722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:05.243" endtime="20201115 22:12:05.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:05.618" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.126212056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.126221722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:05.601" endtime="20201115 22:12:05.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:05.620" endtime="20201115 22:12:05.624"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:05.236" endtime="20201115 22:12:05.625"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:05.232" endtime="20201115 22:12:05.627"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:05.637" level="INFO">${RESULT} = [{'time': 0.126221722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.66600000001927e-06, 'source_diff': 9.66600000001927e-06}, {'time': 0.126239708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:12:05.628" endtime="20201115 22:12:05.638"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:05.669" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:12:05.639" endtime="20201115 22:12:05.670"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:05.679" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201115 22:12:05.677" endtime="20201115 22:12:05.680"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:05.685" level="INFO">VALUE: [9.66600000001927e-06, 8.805000000000618e-06, 8.820000000020478e-06, 9.471999999982605e-06, 9.471999999982605e-06, 9.153000000011735e-06, 9.639000000005726e-06, 8.819999999992723e-06, 9.000000000009e-06, 9.499999999995623e-06, 9.305999999986714e-06, 9.486000000002992e-06, 8.806000000000092e-06, 8.819999999992723e-06, 8.847000000006267e-06, 9.318999999979871e-06, 9.457999999989974e-06, 8.88899999998416e-06, 9.278000000001452e-06, 9.153000000011735e-06, 8.818999999993249e-06, 9.63899999997797e-06, 8.98600000001637e-06, 8.985999999988614e-06, 9.542000000001272e-06, 9.138999999991348e-06, 9.62499999998534e-06, 9.472000000010361e-06, 9.014000000001632e-06, 9.195000000017384e-06, 9.15299999998398e-06, 9.639000000005726e-06, 9.0969999999857e-06, 8.959000000002826e-06, 9.569999999986534e-06, 9.486000000002992e-06, 8.819999999992723e-06, 8.971999999995983e-06, 9.124999999998717e-06, 9.486000000002992e-06, 9.361000000013275e-06, 9.153000000011735e-06, 8.972000000023739e-06, 9.124999999998717e-06, 9.527000000009167e-06, 8.833999999985354e-06, 8.999999999981245e-06, 9.4169999999838e-06, 8.83299999998588e-06, 9.63899999997797e-06]</msg>
<status status="PASS" starttime="20201115 22:12:05.681" endtime="20201115 22:12:05.686"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:05.671" endtime="20201115 22:12:05.688"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:05.694" endtime="20201115 22:12:05.697"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:05.702" endtime="20201115 22:12:05.724"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:05.698" endtime="20201115 22:12:05.725"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:05.689" endtime="20201115 22:12:05.727"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:05.184" endtime="20201115 22:12:05.728"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:05.180" endtime="20201115 22:12:05.728"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:05.738" endtime="20201115 22:12:05.760"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:05.734" endtime="20201115 22:12:05.762"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:05.732" endtime="20201115 22:12:05.762"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:12:05.054" endtime="20201115 22:12:05.763" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set List">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:05.781" endtime="20201115 22:12:05.802"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:05.777" endtime="20201115 22:12:05.805"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:05.837" endtime="20201115 22:12:05.854"></status>
</kw>
<msg timestamp="20201115 22:12:05.855" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:05.834" endtime="20201115 22:12:05.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:05.862" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:05.857" endtime="20201115 22:12:05.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:12:05.868" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:12:05.864" endtime="20201115 22:12:05.869"></status>
</kw>
<status status="FAIL" starttime="20201115 22:12:05.827" endtime="20201115 22:12:05.870"></status>
</kw>
<status status="FAIL" starttime="20201115 22:12:05.820" endtime="20201115 22:12:05.872"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:05.818" endtime="20201115 22:12:05.873"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:12:05.881" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:12:05.879" endtime="20201115 22:12:05.881"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:05.875" endtime="20201115 22:12:05.882"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:05.816" endtime="20201115 22:12:05.882"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:05.814" endtime="20201115 22:12:05.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:05.884" endtime="20201115 22:12:05.888"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:05.810" endtime="20201115 22:12:05.889"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:05.806" endtime="20201115 22:12:05.891"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:05.775" endtime="20201115 22:12:05.892"></status>
</kw>
<kw name="${n} IN RANGE [ 25 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:05.899" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:05.922" endtime="20201115 22:12:05.936"></status>
</kw>
<msg timestamp="20201115 22:12:05.938" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:05.919" endtime="20201115 22:12:05.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:05.944" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:05.940" endtime="20201115 22:12:05.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:05.946" endtime="20201115 22:12:05.950"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:05.911" endtime="20201115 22:12:05.951"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:05.906" endtime="20201115 22:12:05.953"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:05.970" endtime="20201115 22:12:06.316"></status>
</kw>
<msg timestamp="20201115 22:12:06.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.132809375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.132825694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:05.966" endtime="20201115 22:12:06.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:06.342" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.132809375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.132825694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:06.326" endtime="20201115 22:12:06.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:06.344" endtime="20201115 22:12:06.348"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:05.959" endtime="20201115 22:12:06.350"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:05.954" endtime="20201115 22:12:06.351"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:06.362" level="INFO">${RESULT} = [{'time': 0.132825694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6318999999986872e-05, 'source_diff': 1.6318999999986872e-05}, {'time': 0.132931653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:12:06.353" endtime="20201115 22:12:06.362"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:06.393" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:12:06.364" endtime="20201115 22:12:06.394"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:06.404" level="INFO">NAME: 00-overhead-1-set</msg>
<status status="PASS" starttime="20201115 22:12:06.402" endtime="20201115 22:12:06.405"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:06.409" level="INFO">VALUE: [1.6318999999986872e-05, 1.5931000000024564e-05, 1.579200000001446e-05, 1.6473000000016835e-05, 1.5639000000011727e-05, 1.633300000000726e-05, 1.5833999999992354e-05, 1.6471999999989606e-05, 1.5679999999990146e-05, 1.6151999999991506e-05, 1.6221999999982417e-05, 1.5777999999994075e-05, 1.5790999999987232e-05, 1.5652000000004884e-05, 1.6125000000005718e-05, 1.6473000000016835e-05, 1.6305999999993714e-05, 1.5985999999995615e-05, 1.5957999999982597e-05, 1.5972000000002984e-05, 1.5791999999986706e-05, 1.6263999999988066e-05, 1.6292000000001083e-05, 1.5805999999979337e-05, 1.6124999999977963e-05, 1.6305000000021996e-05, 1.613899999999835e-05, 1.6457999999996975e-05, 1.6277999999980697e-05, 1.5597000000006078e-05, 1.629100000000161e-05, 1.562499999999134e-05, 1.580500000000762e-05, 1.630600000002147e-05, 1.6444000000004344e-05, 1.5806000000007092e-05, 1.562499999999134e-05, 1.613899999999835e-05, 1.561099999999871e-05, 1.562499999999134e-05, 1.579200000001446e-05, 1.6471999999989606e-05, 1.562499999999134e-05, 1.580500000000762e-05, 1.6305999999993714e-05, 1.6236000000002804e-05, 1.5680000000017902e-05, 1.6153000000018736e-05, 1.613899999999835e-05, 1.579200000001446e-05]</msg>
<status status="PASS" starttime="20201115 22:12:06.406" endtime="20201115 22:12:06.411"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:06.395" endtime="20201115 22:12:06.412"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:06.419" endtime="20201115 22:12:06.421"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:06.427" endtime="20201115 22:12:06.448"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:06.423" endtime="20201115 22:12:06.450"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:06.414" endtime="20201115 22:12:06.452"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:05.900" endtime="20201115 22:12:06.452"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:05.897" endtime="20201115 22:12:06.453"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:05.895" endtime="20201115 22:12:06.453"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:06.458" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:06.481" endtime="20201115 22:12:06.496"></status>
</kw>
<msg timestamp="20201115 22:12:06.497" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:06.477" endtime="20201115 22:12:06.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:06.503" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:06.499" endtime="20201115 22:12:06.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:06.505" endtime="20201115 22:12:06.509"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:06.470" endtime="20201115 22:12:06.510"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:06.465" endtime="20201115 22:12:06.512"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:06.528" endtime="20201115 22:12:06.864"></status>
</kw>
<msg timestamp="20201115 22:12:06.871" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045257889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045271958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:06.525" endtime="20201115 22:12:06.871"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:06.888" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045257889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045271958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:06.873" endtime="20201115 22:12:06.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:06.891" endtime="20201115 22:12:06.895"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:06.518" endtime="20201115 22:12:06.896"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:06.513" endtime="20201115 22:12:06.898"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:06.908" level="INFO">${RESULT} = [{'time': 0.045271958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.40689999999985e-05, 'source_diff': 1.40689999999985e-05}, {'time': 0.045391208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:12:06.899" endtime="20201115 22:12:06.909"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:06.942" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:12:06.910" endtime="20201115 22:12:06.943"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:06.953" level="INFO">NAME: 00-overhead-2-set</msg>
<status status="PASS" starttime="20201115 22:12:06.951" endtime="20201115 22:12:06.954"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:06.959" level="INFO">VALUE: [1.40689999999985e-05, 1.4236000000000804e-05, 1.4222000000001234e-05, 1.4221999999994295e-05, 1.3569999999997473e-05, 1.4250000000000373e-05, 1.3499999999999623e-05, 1.4222000000001234e-05, 1.404099999999936e-05, 1.4028000000006202e-05, 1.4305999999998653e-05, 1.3874999999996529e-05, 1.40689999999985e-05, 1.3736000000000304e-05, 1.3721999999993795e-05, 1.4055999999998403e-05, 1.3777999999999013e-05, 1.3583999999997043e-05, 1.4055999999998403e-05, 1.3361000000003398e-05, 1.3375000000002968e-05, 1.3402000000002634e-05, 1.405499999999893e-05, 1.3555999999997903e-05, 1.3569999999997473e-05, 1.3570000000004412e-05, 1.3917000000002178e-05, 1.4221999999994295e-05, 1.377699999999954e-05, 1.333299999999732e-05, 1.3570000000004412e-05, 1.4236000000000804e-05, 1.426300000000047e-05, 1.3389000000002538e-05, 1.3431000000001247e-05, 1.3403000000002108e-05, 1.4083999999997543e-05, 1.355499999999843e-05, 1.4222000000001234e-05, 1.3736000000000304e-05, 1.404099999999936e-05, 1.3736999999999777e-05, 1.4236000000000804e-05, 1.3541999999998333e-05, 1.355499999999843e-05, 1.4084000000004482e-05, 1.3625000000003218e-05, 1.3389000000002538e-05, 1.3722000000000734e-05, 1.4236000000000804e-05]</msg>
<status status="PASS" starttime="20201115 22:12:06.956" endtime="20201115 22:12:06.960"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:06.944" endtime="20201115 22:12:06.962"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:06.968" endtime="20201115 22:12:06.971"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:06.976" endtime="20201115 22:12:06.998"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:06.972" endtime="20201115 22:12:07.000"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:06.964" endtime="20201115 22:12:07.002"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:06.459" endtime="20201115 22:12:07.002"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:06.456" endtime="20201115 22:12:07.003"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:06.454" endtime="20201115 22:12:07.003"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:07.009" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:07.032" endtime="20201115 22:12:07.048"></status>
</kw>
<msg timestamp="20201115 22:12:07.050" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:07.029" endtime="20201115 22:12:07.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:07.056" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:07.052" endtime="20201115 22:12:07.057"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:07.058" endtime="20201115 22:12:07.062"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:07.021" endtime="20201115 22:12:07.064"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:07.015" endtime="20201115 22:12:07.065"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:07.081" endtime="20201115 22:12:07.418"></status>
</kw>
<msg timestamp="20201115 22:12:07.425" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047921986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047936806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:07.078" endtime="20201115 22:12:07.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:07.442" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047921986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047936806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:07.427" endtime="20201115 22:12:07.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:07.445" endtime="20201115 22:12:07.449"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:07.071" endtime="20201115 22:12:07.450"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:07.066" endtime="20201115 22:12:07.452"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:07.462" level="INFO">${RESULT} = [{'time': 0.047936806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4819999999998723e-05, 'source_diff': 1.4819999999998723e-05}, {'time': 0.048068917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:12:07.453" endtime="20201115 22:12:07.463"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:07.495" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:12:07.465" endtime="20201115 22:12:07.495"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:07.505" level="INFO">NAME: 00-overhead-3-set</msg>
<status status="PASS" starttime="20201115 22:12:07.503" endtime="20201115 22:12:07.506"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:07.511" level="INFO">VALUE: [1.4819999999998723e-05, 1.5098000000005052e-05, 1.4958000000002414e-05, 1.4263999999999943e-05, 1.4750000000000874e-05, 1.4236000000000804e-05, 1.4416000000003204e-05, 1.454099999999986e-05, 1.459699999999814e-05, 1.509699999999864e-05, 1.5028000000000263e-05, 1.461099999999771e-05, 1.5000000000001124e-05, 1.4764000000000443e-05, 1.4263999999999943e-05, 1.4429999999995835e-05, 1.4764000000000443e-05, 1.4750000000000874e-05, 1.4764000000000443e-05, 1.509699999999864e-05, 1.4193999999995155e-05, 1.509699999999864e-05, 1.4957999999995475e-05, 1.508299999999907e-05, 1.4568999999999e-05, 1.4903000000003608e-05, 1.4416000000003204e-05, 1.509699999999864e-05, 1.4430000000002774e-05, 1.4445000000001817e-05, 1.4916999999996239e-05, 1.4750000000000874e-05, 1.4917000000003178e-05, 1.4750000000000874e-05, 1.4597999999997613e-05, 1.4736999999993838e-05, 1.486099999999796e-05, 1.4431000000002248e-05, 1.461099999999771e-05, 1.5097000000005578e-05, 1.4263999999999943e-05, 1.4430999999995309e-05, 1.4541999999999333e-05, 1.509699999999864e-05, 1.4263999999999943e-05, 1.4943999999995905e-05, 1.5084000000005482e-05, 1.4917000000003178e-05, 1.426300000000047e-05, 1.4555999999998903e-05]</msg>
<status status="PASS" starttime="20201115 22:12:07.508" endtime="20201115 22:12:07.512"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:07.497" endtime="20201115 22:12:07.513"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:07.520" endtime="20201115 22:12:07.522"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:07.528" endtime="20201115 22:12:07.549"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:07.523" endtime="20201115 22:12:07.551"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:07.515" endtime="20201115 22:12:07.552"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:07.010" endtime="20201115 22:12:07.553"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:07.006" endtime="20201115 22:12:07.554"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:07.004" endtime="20201115 22:12:07.554"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:07.559" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:07.582" endtime="20201115 22:12:07.598"></status>
</kw>
<msg timestamp="20201115 22:12:07.599" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:07.578" endtime="20201115 22:12:07.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:07.605" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:07.601" endtime="20201115 22:12:07.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:07.608" endtime="20201115 22:12:07.611"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:07.571" endtime="20201115 22:12:07.613"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:07.565" endtime="20201115 22:12:07.615"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:07.631" endtime="20201115 22:12:07.968"></status>
</kw>
<msg timestamp="20201115 22:12:07.975" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045385153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045400611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:07.627" endtime="20201115 22:12:07.975"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:07.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045385153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045400611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:07.977" endtime="20201115 22:12:07.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:07.996" endtime="20201115 22:12:08.000"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:07.620" endtime="20201115 22:12:08.002"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:07.616" endtime="20201115 22:12:08.003"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:08.014" level="INFO">${RESULT} = [{'time': 0.045400611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5458000000002914e-05, 'source_diff': 1.5458000000002914e-05}, {'time': 0.045547736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:12:08.005" endtime="20201115 22:12:08.014"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:08.045" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:12:08.016" endtime="20201115 22:12:08.046"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:08.057" level="INFO">NAME: 00-overhead-4-set</msg>
<status status="PASS" starttime="20201115 22:12:08.054" endtime="20201115 22:12:08.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:08.062" level="INFO">VALUE: [1.5458000000002914e-05, 1.5778000000001013e-05, 1.5778000000001013e-05, 1.5778000000001013e-05, 1.5944000000003844e-05, 1.562499999999828e-05, 1.558299999999957e-05, 1.5319999999999223e-05, 1.562499999999828e-05, 1.5236000000001804e-05, 1.5278000000000513e-05, 1.5249999999994435e-05, 1.5611000000005648e-05, 1.5124999999997779e-05, 1.509699999999864e-05, 1.5764000000001444e-05, 1.5943999999996905e-05, 1.5457999999995975e-05, 1.5764000000001444e-05, 1.5792000000000583e-05, 1.5778000000001013e-05, 1.5986000000002554e-05, 1.5611999999998183e-05, 1.562499999999828e-05, 1.5097000000005578e-05, 1.576300000000197e-05, 1.5792000000000583e-05, 1.5445000000002818e-05, 1.559699999999914e-05, 1.5472000000002484e-05, 1.5778000000001013e-05, 1.57769999999946e-05, 1.577700000000154e-05, 1.540299999999717e-05, 1.594499999999638e-05, 1.5124999999997779e-05, 1.5958000000003414e-05, 1.561099999999871e-05, 1.5944000000003844e-05, 1.577700000000154e-05, 1.5764000000001444e-05, 1.5445000000002818e-05, 1.562499999999828e-05, 1.5514000000001194e-05, 1.5292000000000083e-05, 1.5929999999997335e-05, 1.5111000000005148e-05, 1.561099999999871e-05, 1.595899999999595e-05, 1.508299999999907e-05]</msg>
<status status="PASS" starttime="20201115 22:12:08.059" endtime="20201115 22:12:08.063"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:08.047" endtime="20201115 22:12:08.065"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:08.072" endtime="20201115 22:12:08.074"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:08.080" endtime="20201115 22:12:08.101"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:08.076" endtime="20201115 22:12:08.103"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:08.067" endtime="20201115 22:12:08.105"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:07.560" endtime="20201115 22:12:08.105"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:07.557" endtime="20201115 22:12:08.106"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:07.555" endtime="20201115 22:12:08.106"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:08.111" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:08.134" endtime="20201115 22:12:08.151"></status>
</kw>
<msg timestamp="20201115 22:12:08.152" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:08.131" endtime="20201115 22:12:08.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:08.159" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:08.155" endtime="20201115 22:12:08.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:08.161" endtime="20201115 22:12:08.165"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:08.123" endtime="20201115 22:12:08.166"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:08.118" endtime="20201115 22:12:08.168"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:08.185" endtime="20201115 22:12:08.522"></status>
</kw>
<msg timestamp="20201115 22:12:08.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045683292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045699861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:08.181" endtime="20201115 22:12:08.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:08.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045683292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045699861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:08.531" endtime="20201115 22:12:08.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:08.549" endtime="20201115 22:12:08.553"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:08.174" endtime="20201115 22:12:08.555"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:08.169" endtime="20201115 22:12:08.556"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:08.567" level="INFO">${RESULT} = [{'time': 0.045699861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6569000000001e-05, 'source_diff': 1.6569000000001e-05}, {'time': 0.045869208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1...</msg>
<status status="PASS" starttime="20201115 22:12:08.558" endtime="20201115 22:12:08.567"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:08.597" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:12:08.569" endtime="20201115 22:12:08.598"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:08.609" level="INFO">NAME: 00-overhead-5-set</msg>
<status status="PASS" starttime="20201115 22:12:08.607" endtime="20201115 22:12:08.610"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:08.615" level="INFO">VALUE: [1.6569000000001e-05, 1.612499999999878e-05, 1.6777999999995075e-05, 1.662499999999928e-05, 1.6014000000001694e-05, 1.6472000000003484e-05, 1.5986000000002554e-05, 1.5971999999996045e-05, 1.611099999999921e-05, 1.5973000000002457e-05, 1.665299999999842e-05, 1.6445000000003818e-05, 1.630499999999424e-05, 1.6292000000001083e-05, 1.6458000000003914e-05, 1.5972000000002984e-05, 1.6139000000005288e-05, 1.679100000000211e-05, 1.662499999999928e-05, 1.611099999999921e-05, 1.6292000000001083e-05, 1.6792000000001583e-05, 1.6653000000005358e-05, 1.613899999999835e-05, 1.5973000000002457e-05, 1.6528000000001764e-05, 1.659700000000014e-05, 1.6681000000004498e-05, 1.595899999999595e-05, 1.6806000000001153e-05, 1.6637999999999376e-05, 1.629100000000161e-05, 1.662499999999928e-05, 1.6444000000004344e-05, 1.662499999999928e-05, 1.5985999999995615e-05, 1.6291999999994144e-05, 1.6125000000005718e-05, 1.5986000000002554e-05, 1.6013999999994755e-05, 1.648699999999559e-05, 1.613899999999835e-05, 1.6472000000003484e-05, 1.631900000000075e-05, 1.5959000000002888e-05, 1.6471999999996545e-05, 1.6292000000001083e-05, 1.6486000000003054e-05, 1.613899999999835e-05, 1.662499999999928e-05]</msg>
<status status="PASS" starttime="20201115 22:12:08.612" endtime="20201115 22:12:08.616"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:08.599" endtime="20201115 22:12:08.617"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:08.624" endtime="20201115 22:12:08.626"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:08.632" endtime="20201115 22:12:08.653"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:08.627" endtime="20201115 22:12:08.655"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:08.619" endtime="20201115 22:12:08.656"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:08.112" endtime="20201115 22:12:08.657"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:08.109" endtime="20201115 22:12:08.658"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:08.107" endtime="20201115 22:12:08.658"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:08.663" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:08.685" endtime="20201115 22:12:08.704"></status>
</kw>
<msg timestamp="20201115 22:12:08.705" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:08.682" endtime="20201115 22:12:08.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:08.712" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:08.707" endtime="20201115 22:12:08.712"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:08.714" endtime="20201115 22:12:08.718"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:08.675" endtime="20201115 22:12:08.719"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:08.669" endtime="20201115 22:12:08.721"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:08.737" endtime="20201115 22:12:09.073"></status>
</kw>
<msg timestamp="20201115 22:12:09.080" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045255431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045272778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:08.734" endtime="20201115 22:12:09.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:09.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045255431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045272778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:09.082" endtime="20201115 22:12:09.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:09.101" endtime="20201115 22:12:09.105"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:08.727" endtime="20201115 22:12:09.107"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:08.722" endtime="20201115 22:12:09.108"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:09.119" level="INFO">${RESULT} = [{'time': 0.045272778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.734700000000089e-05, 'source_diff': 1.734700000000089e-05}, {'time': 0.045456056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:12:09.110" endtime="20201115 22:12:09.119"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:09.151" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:12:09.121" endtime="20201115 22:12:09.151"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:09.163" level="INFO">NAME: 00-overhead-6-set</msg>
<status status="PASS" starttime="20201115 22:12:09.159" endtime="20201115 22:12:09.164"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:09.168" level="INFO">VALUE: [1.734700000000089e-05, 1.715299999999892e-05, 1.765299999999942e-05, 1.715299999999892e-05, 1.7306000000001653e-05, 1.718099999999806e-05, 1.7277999999995575e-05, 1.768099999999856e-05, 1.731900000000175e-05, 1.7180000000005524e-05, 1.762500000000028e-05, 1.6973000000003458e-05, 1.7707999999998225e-05, 1.731899999999481e-05, 1.7485999999997115e-05, 1.716699999999849e-05, 1.68889999999991e-05, 1.7486000000004054e-05, 1.716699999999849e-05, 1.6834000000000293e-05, 1.6820000000000723e-05, 1.766699999999899e-05, 1.7500000000003624e-05, 1.6985999999996615e-05, 1.680500000000168e-05, 1.716699999999849e-05, 1.761100000000071e-05, 1.75969999999942e-05, 1.741699999999874e-05, 1.7513999999996255e-05, 1.7485999999997115e-05, 1.6806000000001153e-05, 1.6987000000003027e-05, 1.7485999999997115e-05, 1.6834000000000293e-05, 1.7665999999999515e-05, 1.6834000000000293e-05, 1.683300000000082e-05, 1.766699999999899e-05, 1.7707999999998225e-05, 1.731899999999481e-05, 1.6764000000002444e-05, 1.6985999999996615e-05, 1.741699999999874e-05, 1.731899999999481e-05, 1.7471999999997545e-05, 1.716699999999849e-05, 1.7320000000001223e-05, 1.7320000000001223e-05, 1.765299999999942e-05]</msg>
<status status="PASS" starttime="20201115 22:12:09.165" endtime="20201115 22:12:09.169"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:09.152" endtime="20201115 22:12:09.171"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:09.177" endtime="20201115 22:12:09.180"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:09.185" endtime="20201115 22:12:09.207"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:09.181" endtime="20201115 22:12:09.208"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:09.172" endtime="20201115 22:12:09.210"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:08.664" endtime="20201115 22:12:09.211"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:08.660" endtime="20201115 22:12:09.211"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:08.659" endtime="20201115 22:12:09.212"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:09.216" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:09.240" endtime="20201115 22:12:09.259"></status>
</kw>
<msg timestamp="20201115 22:12:09.260" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:09.237" endtime="20201115 22:12:09.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:09.266" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:09.262" endtime="20201115 22:12:09.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:09.269" endtime="20201115 22:12:09.272"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:09.229" endtime="20201115 22:12:09.274"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:09.223" endtime="20201115 22:12:09.275"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:09.291" endtime="20201115 22:12:09.626"></status>
</kw>
<msg timestamp="20201115 22:12:09.633" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046327431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046345111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:09.288" endtime="20201115 22:12:09.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:09.652" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046327431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046345111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:09.636" endtime="20201115 22:12:09.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:09.654" endtime="20201115 22:12:09.658"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:09.281" endtime="20201115 22:12:09.660"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:09.277" endtime="20201115 22:12:09.661"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:09.672" level="INFO">${RESULT} = [{'time': 0.046345111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7679999999999085e-05, 'source_diff': 1.7679999999999085e-05}, {'time': 0.0465435, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:12:09.663" endtime="20201115 22:12:09.672"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:09.702" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:12:09.674" endtime="20201115 22:12:09.703"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:09.713" level="INFO">NAME: 00-overhead-7-set</msg>
<status status="PASS" starttime="20201115 22:12:09.711" endtime="20201115 22:12:09.714"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:09.720" level="INFO">VALUE: [1.7679999999999085e-05, 1.7736000000004304e-05, 1.8013999999996755e-05, 1.7805999999995215e-05, 1.784699999999445e-05, 1.8013999999996755e-05, 1.781900000000225e-05, 1.822299999999777e-05, 1.8485999999998115e-05, 1.8000000000004124e-05, 1.7805999999995215e-05, 1.827700000000404e-05, 1.818099999999906e-05, 1.768099999999856e-05, 1.7665999999999515e-05, 1.7680000000006024e-05, 1.765299999999942e-05, 1.8514000000004194e-05, 1.768099999999856e-05, 1.8514000000004194e-05, 1.8014000000003694e-05, 1.768099999999856e-05, 1.784700000000139e-05, 1.784700000000139e-05, 1.8207999999998725e-05, 1.8027999999996325e-05, 1.8014000000003694e-05, 1.769499999999813e-05, 1.836100000000146e-05, 1.7999999999997185e-05, 1.8499999999997685e-05, 1.8181000000005998e-05, 1.8013999999996755e-05, 1.804099999999642e-05, 1.83890000000006e-05, 1.7693999999998655e-05, 1.8013999999996755e-05, 1.7848000000000863e-05, 1.8014000000003694e-05, 1.8028000000003264e-05, 1.8193999999999155e-05, 1.834699999999495e-05, 1.786099999999402e-05, 1.8027999999996325e-05, 1.784700000000139e-05, 1.858300000000257e-05, 1.769499999999813e-05, 1.8513999999997255e-05, 1.8249999999997435e-05, 1.7723000000004208e-05]</msg>
<status status="PASS" starttime="20201115 22:12:09.716" endtime="20201115 22:12:09.721"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:09.704" endtime="20201115 22:12:09.722"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:09.729" endtime="20201115 22:12:09.731"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:09.738" endtime="20201115 22:12:09.759"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:09.733" endtime="20201115 22:12:09.761"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:09.724" endtime="20201115 22:12:09.762"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:09.218" endtime="20201115 22:12:09.763"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:09.214" endtime="20201115 22:12:09.764"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:09.212" endtime="20201115 22:12:09.764"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:09.769" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:09.791" endtime="20201115 22:12:09.812"></status>
</kw>
<msg timestamp="20201115 22:12:09.813" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:09.788" endtime="20201115 22:12:09.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:09.819" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:09.815" endtime="20201115 22:12:09.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:09.821" endtime="20201115 22:12:09.825"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:09.781" endtime="20201115 22:12:09.826"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:09.775" endtime="20201115 22:12:09.828"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:09.844" endtime="20201115 22:12:10.182"></status>
</kw>
<msg timestamp="20201115 22:12:10.189" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045506667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045525528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:09.841" endtime="20201115 22:12:10.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:10.207" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045506667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045525528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:10.191" endtime="20201115 22:12:10.208"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:10.210" endtime="20201115 22:12:10.214"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:09.834" endtime="20201115 22:12:10.215"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:09.829" endtime="20201115 22:12:10.217"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:10.227" level="INFO">${RESULT} = [{'time': 0.045525528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.886100000000196e-05, 'source_diff': 1.886100000000196e-05}, {'time': 0.045743958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:12:10.218" endtime="20201115 22:12:10.228"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:10.258" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:12:10.229" endtime="20201115 22:12:10.258"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:10.268" level="INFO">NAME: 00-overhead-8-set</msg>
<status status="PASS" starttime="20201115 22:12:10.266" endtime="20201115 22:12:10.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:10.274" level="INFO">VALUE: [1.886100000000196e-05, 1.8707999999999225e-05, 1.8862000000001433e-05, 1.937500000000203e-05, 1.8943999999999905e-05, 1.887500000000153e-05, 1.9056000000003404e-05, 1.8680000000000085e-05, 1.93890000000016e-05, 1.9042000000003834e-05, 1.904099999999742e-05, 1.901299999999828e-05, 1.908299999999613e-05, 1.886100000000196e-05, 1.9194000000000155e-05, 1.8527999999996825e-05, 1.8693999999999655e-05, 1.9180000000000585e-05, 1.918100000000006e-05, 1.8527999999996825e-05, 1.8707999999999225e-05, 1.8693999999999655e-05, 1.919499999999963e-05, 1.919499999999963e-05, 1.852700000000429e-05, 1.931900000000375e-05, 1.8736000000005304e-05, 1.9069999999996035e-05, 1.936099999999552e-05, 1.937500000000203e-05, 1.9013999999997755e-05, 1.936100000000246e-05, 1.886100000000196e-05, 1.934700000000289e-05, 1.9013999999997755e-05, 1.8528000000003764e-05, 1.8693999999999655e-05, 1.937500000000203e-05, 1.8693999999999655e-05, 1.919499999999963e-05, 1.918100000000006e-05, 1.916700000000049e-05, 1.858300000000257e-05, 1.8680000000000085e-05, 1.9041999999996895e-05, 1.90969999999957e-05, 1.8971999999999045e-05, 1.9334000000002793e-05, 1.9194000000000155e-05, 1.886099999999502e-05]</msg>
<status status="PASS" starttime="20201115 22:12:10.271" endtime="20201115 22:12:10.277"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:10.259" endtime="20201115 22:12:10.278"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:10.285" endtime="20201115 22:12:10.287"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:10.293" endtime="20201115 22:12:10.314"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:10.288" endtime="20201115 22:12:10.316"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:10.280" endtime="20201115 22:12:10.317"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:09.770" endtime="20201115 22:12:10.318"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:09.767" endtime="20201115 22:12:10.319"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:09.765" endtime="20201115 22:12:10.319"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:10.324" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:10.347" endtime="20201115 22:12:10.368"></status>
</kw>
<msg timestamp="20201115 22:12:10.369" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:10.343" endtime="20201115 22:12:10.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:10.375" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:10.371" endtime="20201115 22:12:10.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:10.377" endtime="20201115 22:12:10.381"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:10.336" endtime="20201115 22:12:10.383"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:10.331" endtime="20201115 22:12:10.384"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:10.400" endtime="20201115 22:12:10.737"></status>
</kw>
<msg timestamp="20201115 22:12:10.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045699306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045719319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:10.397" endtime="20201115 22:12:10.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:10.762" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045699306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045719319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:10.746" endtime="20201115 22:12:10.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:10.764" endtime="20201115 22:12:10.768"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:10.390" endtime="20201115 22:12:10.769"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:10.385" endtime="20201115 22:12:10.771"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:10.781" level="INFO">${RESULT} = [{'time': 0.045719319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.001299999999928e-05, 'source_diff': 2.001299999999928e-05}, {'time': 0.045962528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:12:10.772" endtime="20201115 22:12:10.782"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:10.812" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:12:10.783" endtime="20201115 22:12:10.812"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:10.822" level="INFO">NAME: 00-overhead-9-set</msg>
<status status="PASS" starttime="20201115 22:12:10.820" endtime="20201115 22:12:10.823"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:10.829" level="INFO">VALUE: [2.001299999999928e-05, 2.0070000000003974e-05, 1.9555999999996965e-05, 1.9499999999998685e-05, 1.9708000000000225e-05, 1.937499999999509e-05, 1.9527999999997825e-05, 2.005499999999799e-05, 1.9888000000002626e-05, 1.987499999999559e-05, 1.9721999999999795e-05, 2.0042000000004834e-05, 1.9944000000000905e-05, 1.955499999999749e-05, 1.936099999999552e-05, 1.9819999999996785e-05, 1.9735999999999365e-05, 1.990300000000167e-05, 1.937500000000203e-05, 1.9430000000000835e-05, 1.9570000000003474e-05, 1.9735999999999365e-05, 1.956899999999706e-05, 1.9749999999998935e-05, 1.9749999999998935e-05, 2.0222000000000295e-05, 2.0055999999997465e-05, 2.012499999999584e-05, 2.0180000000001586e-05, 2.0042000000004834e-05, 1.9387999999995187e-05, 2.02090000000002e-05, 1.9569000000004e-05, 1.963900000000185e-05, 1.9555999999996965e-05, 2.0263999999999005e-05, 1.9513999999998255e-05, 1.952700000000529e-05, 2.0041999999997895e-05, 1.987500000000253e-05, 1.9735999999999365e-05, 1.93890000000016e-05, 1.963900000000185e-05, 1.940300000000117e-05, 1.9569000000004e-05, 1.93890000000016e-05, 1.936100000000246e-05, 1.98890000000021e-05, 1.934699999999595e-05, 1.9721999999999795e-05]</msg>
<status status="PASS" starttime="20201115 22:12:10.825" endtime="20201115 22:12:10.831"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:10.813" endtime="20201115 22:12:10.832"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:10.838" endtime="20201115 22:12:10.841"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:10.847" endtime="20201115 22:12:10.868"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:10.842" endtime="20201115 22:12:10.870"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:10.834" endtime="20201115 22:12:10.872"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:10.325" endtime="20201115 22:12:10.872"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:10.322" endtime="20201115 22:12:10.873"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:10.320" endtime="20201115 22:12:10.873"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:10.878" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:10.901" endtime="20201115 22:12:10.923"></status>
</kw>
<msg timestamp="20201115 22:12:10.924" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:10.897" endtime="20201115 22:12:10.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:10.930" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:10.926" endtime="20201115 22:12:10.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:10.932" endtime="20201115 22:12:10.936"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:10.890" endtime="20201115 22:12:10.938"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:10.885" endtime="20201115 22:12:10.939"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:10.955" endtime="20201115 22:12:11.293"></status>
</kw>
<msg timestamp="20201115 22:12:11.300" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045480972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045501389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:10.952" endtime="20201115 22:12:11.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:11.317" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045480972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045501389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:11.302" endtime="20201115 22:12:11.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:11.320" endtime="20201115 22:12:11.324"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:10.945" endtime="20201115 22:12:11.325"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:10.940" endtime="20201115 22:12:11.327"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:11.337" level="INFO">${RESULT} = [{'time': 0.045501389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.041700000000174e-05, 'source_diff': 2.041700000000174e-05}, {'time': 0.045763611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:12:11.328" endtime="20201115 22:12:11.337"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:11.370" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:12:11.340" endtime="20201115 22:12:11.371"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:11.381" level="INFO">NAME: 00-overhead-10-set</msg>
<status status="PASS" starttime="20201115 22:12:11.379" endtime="20201115 22:12:11.382"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:11.386" level="INFO">VALUE: [2.041700000000174e-05, 2.0222000000000295e-05, 2.0235999999999865e-05, 2.0722000000000795e-05, 2.10969999999977e-05, 2.0722000000000795e-05, 2.1069999999998035e-05, 2.0555999999997965e-05, 2.0736000000000365e-05, 2.0584000000004044e-05, 2.040300000000217e-05, 2.112499999999684e-05, 2.091700000000224e-05, 2.0402000000002696e-05, 2.0555999999997965e-05, 2.0235999999999865e-05, 2.0749999999999935e-05, 2.0763999999999505e-05, 2.1083999999997605e-05, 2.0972000000001045e-05, 2.1069999999998035e-05, 2.061099999999677e-05, 2.073699999999984e-05, 2.0333999999996855e-05, 2.0722000000000795e-05, 2.090299999999573e-05, 2.090300000000267e-05, 2.037499999999609e-05, 2.0249999999999435e-05, 2.0736000000000365e-05, 2.059700000000414e-05, 2.0222000000000295e-05, 2.090300000000267e-05, 2.08890000000031e-05, 2.072300000000027e-05, 2.1055999999998465e-05, 2.0235999999999865e-05, 2.0250000000006374e-05, 2.040300000000217e-05, 2.0763999999999505e-05, 2.0569000000005e-05, 2.0222000000000295e-05, 2.043100000000131e-05, 2.090299999999573e-05, 2.0263999999999005e-05, 2.040300000000217e-05, 2.040300000000217e-05, 2.0249999999999435e-05, 2.056899999999806e-05, 2.0763999999999505e-05]</msg>
<status status="PASS" starttime="20201115 22:12:11.383" endtime="20201115 22:12:11.388"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:11.372" endtime="20201115 22:12:11.390"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:11.396" endtime="20201115 22:12:11.399"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:11.404" endtime="20201115 22:12:11.426"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:11.400" endtime="20201115 22:12:11.428"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:11.392" endtime="20201115 22:12:11.429"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:10.879" endtime="20201115 22:12:11.430"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:10.876" endtime="20201115 22:12:11.431"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:10.874" endtime="20201115 22:12:11.431"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:11.436" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:11.459" endtime="20201115 22:12:11.483"></status>
</kw>
<msg timestamp="20201115 22:12:11.484" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:11.456" endtime="20201115 22:12:11.484"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:11.490" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:11.486" endtime="20201115 22:12:11.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:11.492" endtime="20201115 22:12:11.496"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:11.449" endtime="20201115 22:12:11.498"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:11.443" endtime="20201115 22:12:11.499"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:11.515" endtime="20201115 22:12:11.852"></status>
</kw>
<msg timestamp="20201115 22:12:11.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046594153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046615431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:11.512" endtime="20201115 22:12:11.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:11.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046594153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046615431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:11.861" endtime="20201115 22:12:11.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:11.880" endtime="20201115 22:12:11.884"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:11.505" endtime="20201115 22:12:11.885"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:11.500" endtime="20201115 22:12:11.887"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:11.897" level="INFO">${RESULT} = [{'time': 0.046615431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1277999999999575e-05, 'source_diff': 2.1277999999999575e-05}, {'time': 0.046896861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:12:11.888" endtime="20201115 22:12:11.898"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:11.928" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:12:11.899" endtime="20201115 22:12:11.928"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:11.939" level="INFO">NAME: 00-overhead-11-set</msg>
<status status="PASS" starttime="20201115 22:12:11.936" endtime="20201115 22:12:11.939"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:11.944" level="INFO">VALUE: [2.1277999999999575e-05, 2.1957999999995537e-05, 2.1264000000000005e-05, 2.1764000000000505e-05, 2.10969999999977e-05, 2.140299999999623e-05, 2.1264000000000005e-05, 2.191700000000324e-05, 2.1764000000000505e-05, 2.187499999999759e-05, 2.1764000000000505e-05, 2.1027999999999325e-05, 2.1084000000004544e-05, 2.1915999999996827e-05, 2.1250000000000435e-05, 2.161099999999777e-05, 2.1444000000002406e-05, 2.1694000000002656e-05, 2.111099999999727e-05, 2.162500000000428e-05, 2.1750000000000935e-05, 2.14169999999958e-05, 2.143100000000231e-05, 2.1944000000002906e-05, 2.1597999999997675e-05, 2.143099999999537e-05, 2.1943999999995967e-05, 2.15969999999982e-05, 2.1500000000000685e-05, 2.1764000000000505e-05, 2.1485999999994176e-05, 2.143100000000231e-05, 2.1750000000000935e-05, 2.1986000000001615e-05, 2.1458000000001975e-05, 2.137499999999709e-05, 2.162499999999734e-05, 2.1750000000000935e-05, 2.1916000000003766e-05, 2.1764000000000505e-05, 2.1583999999998105e-05, 2.123700000000034e-05, 2.1778000000000075e-05, 2.1764000000000505e-05, 2.111100000000421e-05, 2.1472000000001545e-05, 2.1764000000000505e-05, 2.184699999999845e-05, 2.1750000000000935e-05, 2.1083999999997605e-05]</msg>
<status status="PASS" starttime="20201115 22:12:11.941" endtime="20201115 22:12:11.946"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:11.930" endtime="20201115 22:12:11.948"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:11.954" endtime="20201115 22:12:11.957"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:11.962" endtime="20201115 22:12:11.984"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:11.958" endtime="20201115 22:12:11.986"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:11.949" endtime="20201115 22:12:11.987"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:11.437" endtime="20201115 22:12:11.988"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:11.433" endtime="20201115 22:12:11.988"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:11.432" endtime="20201115 22:12:11.989"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:11.993" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:12.018" endtime="20201115 22:12:12.042"></status>
</kw>
<msg timestamp="20201115 22:12:12.044" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:12.015" endtime="20201115 22:12:12.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:12.050" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:12.046" endtime="20201115 22:12:12.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:12.052" endtime="20201115 22:12:12.056"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:12.007" endtime="20201115 22:12:12.057"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:12.002" endtime="20201115 22:12:12.059"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:12.076" endtime="20201115 22:12:12.413"></status>
</kw>
<msg timestamp="20201115 22:12:12.419" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047554375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047577167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:12.072" endtime="20201115 22:12:12.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:12.437" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047554375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047577167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:12.422" endtime="20201115 22:12:12.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:12.440" endtime="20201115 22:12:12.444"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:12.065" endtime="20201115 22:12:12.446"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:12.060" endtime="20201115 22:12:12.447"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:12.458" level="INFO">${RESULT} = [{'time': 0.047577167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2791999999993706e-05, 'source_diff': 2.2791999999993706e-05}, {'time': 0.047884681, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:12:12.449" endtime="20201115 22:12:12.459"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:12.489" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:12:12.460" endtime="20201115 22:12:12.489"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:12.500" level="INFO">NAME: 00-overhead-12-set</msg>
<status status="PASS" starttime="20201115 22:12:12.497" endtime="20201115 22:12:12.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:12.505" level="INFO">VALUE: [2.2791999999993706e-05, 2.2792000000000645e-05, 2.212500000000478e-05, 2.1957999999995537e-05, 2.195900000000195e-05, 2.229100000000067e-05, 2.222300000000177e-05, 2.195899999999501e-05, 2.263900000000485e-05, 2.1972000000002045e-05, 2.262499999999834e-05, 2.1972000000002045e-05, 2.2471999999995607e-05, 2.265299999999748e-05, 2.2305999999999715e-05, 2.212500000000478e-05, 2.2097999999998175e-05, 2.211099999999827e-05, 2.2778000000001075e-05, 2.22770000000011e-05, 2.194500000000238e-05, 2.2277999999993636e-05, 2.262499999999834e-05, 2.1972000000002045e-05, 2.27770000000016e-05, 2.22770000000011e-05, 2.262499999999834e-05, 2.262499999999834e-05, 2.2792000000000645e-05, 2.2264000000001005e-05, 2.2792000000000645e-05, 2.243100000000331e-05, 2.2778000000001075e-05, 2.2792000000000645e-05, 2.197300000000152e-05, 2.2485999999995177e-05, 2.193099999999587e-05, 2.2792000000000645e-05, 2.2458000000002976e-05, 2.1957999999995537e-05, 2.263899999999791e-05, 2.22770000000011e-05, 2.2305999999999715e-05, 2.212499999999784e-05, 2.2278000000000575e-05, 2.2278000000000575e-05, 2.244499999999594e-05, 2.212499999999784e-05, 2.263899999999791e-05, 2.1971999999995107e-05]</msg>
<status status="PASS" starttime="20201115 22:12:12.502" endtime="20201115 22:12:12.507"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:12.491" endtime="20201115 22:12:12.509"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:12.515" endtime="20201115 22:12:12.518"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:12.523" endtime="20201115 22:12:12.545"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:12.519" endtime="20201115 22:12:12.547"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:12.510" endtime="20201115 22:12:12.548"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:11.995" endtime="20201115 22:12:12.549"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:11.991" endtime="20201115 22:12:12.550"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:11.989" endtime="20201115 22:12:12.550"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:12.555" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:12.578" endtime="20201115 22:12:12.604"></status>
</kw>
<msg timestamp="20201115 22:12:12.606" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:12.574" endtime="20201115 22:12:12.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:12.627" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:12.608" endtime="20201115 22:12:12.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:12.629" endtime="20201115 22:12:12.633"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:12.567" endtime="20201115 22:12:12.635"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:12.561" endtime="20201115 22:12:12.636"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:12.652" endtime="20201115 22:12:13.001"></status>
</kw>
<msg timestamp="20201115 22:12:13.008" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046357653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046380444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:12.649" endtime="20201115 22:12:13.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:13.026" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046357653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046380444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:13.010" endtime="20201115 22:12:13.027"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:13.028" endtime="20201115 22:12:13.032"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:12.642" endtime="20201115 22:12:13.033"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:12.637" endtime="20201115 22:12:13.035"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:13.045" level="INFO">${RESULT} = [{'time': 0.046380444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.279100000000117e-05, 'source_diff': 2.279100000000117e-05}, {'time': 0.046707736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:12:13.036" endtime="20201115 22:12:13.046"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:13.076" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:12:13.047" endtime="20201115 22:12:13.077"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:13.087" level="INFO">NAME: 00-overhead-13-set</msg>
<status status="PASS" starttime="20201115 22:12:13.085" endtime="20201115 22:12:13.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:13.092" level="INFO">VALUE: [2.279100000000117e-05, 2.284699999999945e-05, 2.3485999999996177e-05, 2.311099999999927e-05, 2.2790999999994233e-05, 2.363899999999891e-05, 2.3306000000000715e-05, 2.315299999999798e-05, 2.313899999999841e-05, 2.3318999999993872e-05, 2.329100000000167e-05, 2.3651999999999007e-05, 2.2792000000000645e-05, 2.313899999999841e-05, 2.363899999999891e-05, 2.2804999999993802e-05, 2.313899999999841e-05, 2.2806000000000215e-05, 2.2958000000003476e-05, 2.288899999999816e-05, 2.363900000000585e-05, 2.2944000000003906e-05, 2.2986000000002615e-05, 2.2971999999996107e-05, 2.3151999999998507e-05, 2.2986000000002615e-05, 2.336099999999952e-05, 2.2972000000003046e-05, 2.283299999999988e-05, 2.3290999999994733e-05, 2.347300000000302e-05, 2.313899999999841e-05, 2.2819999999999785e-05, 2.331900000000081e-05, 2.2985999999995677e-05, 2.356900000000106e-05, 2.3500000000002685e-05, 2.3471999999996607e-05, 2.3249999999995496e-05, 2.2833999999999355e-05, 2.3333999999999855e-05, 2.365299999999848e-05, 2.3290999999994733e-05, 2.2986000000002615e-05, 2.3292000000001145e-05, 2.365299999999848e-05, 2.3486000000003115e-05, 2.3457999999997037e-05, 2.333300000000038e-05, 2.365300000000542e-05]</msg>
<status status="PASS" starttime="20201115 22:12:13.089" endtime="20201115 22:12:13.094"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:13.078" endtime="20201115 22:12:13.096"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:13.102" endtime="20201115 22:12:13.105"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:13.110" endtime="20201115 22:12:13.132"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:13.106" endtime="20201115 22:12:13.134"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:13.098" endtime="20201115 22:12:13.135"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:12.556" endtime="20201115 22:12:13.136"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:12.552" endtime="20201115 22:12:13.137"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:12.551" endtime="20201115 22:12:13.137"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:13.142" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:13.165" endtime="20201115 22:12:13.193"></status>
</kw>
<msg timestamp="20201115 22:12:13.194" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:13.162" endtime="20201115 22:12:13.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:13.200" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:13.196" endtime="20201115 22:12:13.201"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:13.202" endtime="20201115 22:12:13.206"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:13.155" endtime="20201115 22:12:13.208"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:13.148" endtime="20201115 22:12:13.209"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:13.226" endtime="20201115 22:12:13.575"></status>
</kw>
<msg timestamp="20201115 22:12:13.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046763528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046787681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:13.223" endtime="20201115 22:12:13.583"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:13.600" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046763528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046787681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:13.585" endtime="20201115 22:12:13.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:13.602" endtime="20201115 22:12:13.606"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:13.216" endtime="20201115 22:12:13.608"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:13.211" endtime="20201115 22:12:13.609"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:13.620" level="INFO">${RESULT} = [{'time': 0.046787681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.415299999999898e-05, 'source_diff': 2.415299999999898e-05}, {'time': 0.047139194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:12:13.611" endtime="20201115 22:12:13.620"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:13.652" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:12:13.622" endtime="20201115 22:12:13.653"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:13.663" level="INFO">NAME: 00-overhead-14-set</msg>
<status status="PASS" starttime="20201115 22:12:13.661" endtime="20201115 22:12:13.664"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:13.670" level="INFO">VALUE: [2.415299999999898e-05, 2.4263000000003532e-05, 2.40970000000007e-05, 2.413899999999941e-05, 2.4485999999997177e-05, 2.384700000000045e-05, 2.433300000000138e-05, 2.413899999999941e-05, 2.4513999999996317e-05, 2.433300000000138e-05, 2.3944000000004906e-05, 2.419499999999769e-05, 2.3834000000000355e-05, 2.3985999999996677e-05, 2.4444000000005406e-05, 2.366700000000499e-05, 2.4486000000004116e-05, 2.4000000000003185e-05, 2.4499999999996747e-05, 2.4334000000000855e-05, 2.416700000000549e-05, 2.365299999999848e-05, 2.381900000000131e-05, 2.4179999999998647e-05, 2.365299999999848e-05, 2.3958000000004476e-05, 2.365300000000542e-05, 2.4542000000002395e-05, 2.4486000000004116e-05, 2.380500000000174e-05, 2.366699999999805e-05, 2.395899999999701e-05, 2.363899999999891e-05, 2.384700000000045e-05, 2.4514000000003255e-05, 2.3915999999998827e-05, 2.4500000000003685e-05, 2.3986000000003616e-05, 2.3999999999996247e-05, 2.415299999999898e-05, 2.4333999999993916e-05, 2.433300000000138e-05, 2.383300000000088e-05, 2.4334000000000855e-05, 2.447299999999708e-05, 2.433300000000138e-05, 2.3971999999997107e-05, 2.3999999999996247e-05, 2.4458000000004976e-05, 2.4179999999998647e-05]</msg>
<status status="PASS" starttime="20201115 22:12:13.666" endtime="20201115 22:12:13.671"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:13.654" endtime="20201115 22:12:13.672"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:13.679" endtime="20201115 22:12:13.681"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:13.688" endtime="20201115 22:12:13.709"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:13.683" endtime="20201115 22:12:13.711"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:13.674" endtime="20201115 22:12:13.713"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:13.143" endtime="20201115 22:12:13.713"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:13.140" endtime="20201115 22:12:13.714"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:13.138" endtime="20201115 22:12:13.714"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:13.719" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:13.742" endtime="20201115 22:12:13.770"></status>
</kw>
<msg timestamp="20201115 22:12:13.771" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:13.738" endtime="20201115 22:12:13.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:13.777" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:13.773" endtime="20201115 22:12:13.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:13.779" endtime="20201115 22:12:13.783"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:13.731" endtime="20201115 22:12:13.785"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:13.726" endtime="20201115 22:12:13.786"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:13.802" endtime="20201115 22:12:14.139"></status>
</kw>
<msg timestamp="20201115 22:12:14.146" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045998556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046023028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:13.799" endtime="20201115 22:12:14.146"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:14.164" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045998556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046023028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:14.148" endtime="20201115 22:12:14.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:14.166" endtime="20201115 22:12:14.170"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:13.792" endtime="20201115 22:12:14.171"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:13.787" endtime="20201115 22:12:14.173"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:14.183" level="INFO">${RESULT} = [{'time': 0.046023028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4471999999997607e-05, 'source_diff': 2.4471999999997607e-05}, {'time': 0.0464005, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:12:14.175" endtime="20201115 22:12:14.184"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:14.214" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:12:14.186" endtime="20201115 22:12:14.214"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:14.225" level="INFO">NAME: 00-overhead-15-set</msg>
<status status="PASS" starttime="20201115 22:12:14.223" endtime="20201115 22:12:14.226"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:14.230" level="INFO">VALUE: [2.4471999999997607e-05, 2.468099999999862e-05, 2.5263999999997067e-05, 2.444499999999794e-05, 2.466699999999905e-05, 2.469500000000513e-05, 2.454100000000292e-05, 2.519499999999869e-05, 2.5360999999994582e-05, 2.5000000000004186e-05, 2.5013999999996817e-05, 2.518099999999912e-05, 2.4471999999997607e-05, 2.5000000000004186e-05, 2.5207999999998787e-05, 2.5014000000003755e-05, 2.4679999999999147e-05, 2.4652000000000007e-05, 2.534700000000195e-05, 2.5042000000002895e-05, 2.536100000000152e-05, 2.5014000000003755e-05, 2.468099999999862e-05, 2.4526999999996413e-05, 2.4665999999999577e-05, 2.486100000000102e-05, 2.4514000000003255e-05, 2.5360999999994582e-05, 2.536100000000152e-05, 2.4513999999996317e-05, 2.469499999999819e-05, 2.4471999999997607e-05, 2.483300000000188e-05, 2.463899999999991e-05, 2.536100000000152e-05, 2.5334000000001855e-05, 2.4846999999994512e-05, 2.5334000000001855e-05, 2.4819999999994846e-05, 2.4999999999997247e-05, 2.4499999999996747e-05, 2.534700000000195e-05, 2.4499999999996747e-05, 2.486100000000102e-05, 2.4999999999997247e-05, 2.4485999999990238e-05, 2.472300000000427e-05, 2.5334000000001855e-05, 2.5042000000002895e-05, 2.466700000000599e-05]</msg>
<status status="PASS" starttime="20201115 22:12:14.227" endtime="20201115 22:12:14.233"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:14.216" endtime="20201115 22:12:14.235"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:14.241" endtime="20201115 22:12:14.244"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:14.249" endtime="20201115 22:12:14.271"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:14.245" endtime="20201115 22:12:14.273"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:14.236" endtime="20201115 22:12:14.275"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:13.720" endtime="20201115 22:12:14.276"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:13.717" endtime="20201115 22:12:14.276"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:13.715" endtime="20201115 22:12:14.276"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:14.282" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:14.304" endtime="20201115 22:12:14.334"></status>
</kw>
<msg timestamp="20201115 22:12:14.335" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:14.301" endtime="20201115 22:12:14.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:14.341" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:14.337" endtime="20201115 22:12:14.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:14.343" endtime="20201115 22:12:14.347"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:14.294" endtime="20201115 22:12:14.349"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:14.288" endtime="20201115 22:12:14.350"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:14.367" endtime="20201115 22:12:14.704"></status>
</kw>
<msg timestamp="20201115 22:12:14.711" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046744569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046770111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:14.363" endtime="20201115 22:12:14.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:14.729" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046744569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046770111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:14.713" endtime="20201115 22:12:14.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:14.731" endtime="20201115 22:12:14.735"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:14.356" endtime="20201115 22:12:14.737"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:14.351" endtime="20201115 22:12:14.738"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:14.748" level="INFO">${RESULT} = [{'time': 0.046770111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5542000000003395e-05, 'source_diff': 2.5542000000003395e-05}, {'time': 0.047174597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:12:14.739" endtime="20201115 22:12:14.749"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:14.779" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:12:14.750" endtime="20201115 22:12:14.779"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:14.790" level="INFO">NAME: 00-overhead-16-set</msg>
<status status="PASS" starttime="20201115 22:12:14.788" endtime="20201115 22:12:14.790"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:14.796" level="INFO">VALUE: [2.5542000000003395e-05, 2.6221999999999357e-05, 2.6027999999997387e-05, 2.620899999999926e-05, 2.5778000000004075e-05, 2.570899999999876e-05, 2.5320000000002285e-05, 2.538900000000066e-05, 2.5570000000002535e-05, 2.57090000000057e-05, 2.5486000000005116e-05, 2.62090000000062e-05, 2.5305999999995776e-05, 2.6222000000006296e-05, 2.6056000000003465e-05, 2.570899999999876e-05, 2.6278000000004575e-05, 2.5485999999998177e-05, 2.6278000000004575e-05, 2.5570000000002535e-05, 2.6056000000003465e-05, 2.540300000000023e-05, 2.6070000000003035e-05, 2.5526999999997413e-05, 2.5985999999998677e-05, 2.538900000000066e-05, 2.613900000000141e-05, 2.6041999999996956e-05, 2.6207999999999787e-05, 2.5569999999995596e-05, 2.555500000000349e-05, 2.5846999999995512e-05, 2.5374999999994152e-05, 2.619499999999969e-05, 2.5888000000001687e-05, 2.5540999999996983e-05, 2.538900000000066e-05, 2.6040999999997483e-05, 2.6041999999996956e-05, 2.608300000001007e-05, 2.5346999999995012e-05, 2.572300000000527e-05, 2.6013999999990878e-05, 2.6069999999989157e-05, 2.6054999999997053e-05, 2.5542000000003395e-05, 2.537500000000803e-05, 2.6207999999999787e-05, 2.5707999999999287e-05, 2.5555999999996026e-05]</msg>
<status status="PASS" starttime="20201115 22:12:14.792" endtime="20201115 22:12:14.798"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:14.781" endtime="20201115 22:12:14.800"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:14.806" endtime="20201115 22:12:14.809"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:14.814" endtime="20201115 22:12:14.836"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:14.810" endtime="20201115 22:12:14.838"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:14.801" endtime="20201115 22:12:14.839"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:14.283" endtime="20201115 22:12:14.840"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:14.279" endtime="20201115 22:12:14.840"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:14.277" endtime="20201115 22:12:14.841"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:14.845" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:14.868" endtime="20201115 22:12:14.899"></status>
</kw>
<msg timestamp="20201115 22:12:14.900" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:14.865" endtime="20201115 22:12:14.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:14.906" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:14.902" endtime="20201115 22:12:14.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:14.909" endtime="20201115 22:12:14.912"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:14.858" endtime="20201115 22:12:14.914"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:14.852" endtime="20201115 22:12:14.915"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:14.932" endtime="20201115 22:12:15.268"></status>
</kw>
<msg timestamp="20201115 22:12:15.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045855597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045882083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:14.928" endtime="20201115 22:12:15.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:15.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045855597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045882083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:15.277" endtime="20201115 22:12:15.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:15.296" endtime="20201115 22:12:15.300"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:14.921" endtime="20201115 22:12:15.301"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:14.917" endtime="20201115 22:12:15.303"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:15.314" level="INFO">${RESULT} = [{'time': 0.045882083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6485999999999177e-05, 'source_diff': 2.6485999999999177e-05}, {'time': 0.046316569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:12:15.305" endtime="20201115 22:12:15.315"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:15.345" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:12:15.317" endtime="20201115 22:12:15.346"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:15.356" level="INFO">NAME: 00-overhead-17-set</msg>
<status status="PASS" starttime="20201115 22:12:15.354" endtime="20201115 22:12:15.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:15.362" level="INFO">VALUE: [2.6485999999999177e-05, 2.6291000000004672e-05, 2.7070000000004035e-05, 2.7055999999997526e-05, 2.7068999999997623e-05, 2.6556000000003965e-05, 2.6264000000005006e-05, 2.7055000000004992e-05, 2.708300000000413e-05, 2.637500000000209e-05, 2.6556000000003965e-05, 2.64170000000008e-05, 2.6569999999996596e-05, 2.6348000000002425e-05, 2.6235999999998927e-05, 2.7054999999998053e-05, 2.638900000000166e-05, 2.7070000000004035e-05, 2.6888999999995222e-05, 2.6221999999999357e-05, 2.7055999999997526e-05, 2.6221999999999357e-05, 2.6235999999998927e-05, 2.669500000000019e-05, 2.6763999999998567e-05, 2.7055999999997526e-05, 2.655500000000449e-05, 2.7068999999997623e-05, 2.7028000000005326e-05, 2.620899999999926e-05, 2.637500000000209e-05, 2.6721999999999857e-05, 2.622299999999883e-05, 2.6360999999995582e-05, 2.6221999999999357e-05, 2.6763999999998567e-05, 2.638900000000166e-05, 2.6221999999999357e-05, 2.6582999999996693e-05, 2.6554999999997553e-05, 2.6374999999995152e-05, 2.6610999999995832e-05, 2.6985999999992738e-05, 2.688900000000216e-05, 2.6554999999997553e-05, 2.6721999999992918e-05, 2.6735999999999427e-05, 2.7084000000010544e-05, 2.6402999999994292e-05, 2.6180000000000647e-05]</msg>
<status status="PASS" starttime="20201115 22:12:15.358" endtime="20201115 22:12:15.364"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:15.347" endtime="20201115 22:12:15.365"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:15.372" endtime="20201115 22:12:15.374"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:15.380" endtime="20201115 22:12:15.401"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:15.375" endtime="20201115 22:12:15.403"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:15.367" endtime="20201115 22:12:15.405"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:14.847" endtime="20201115 22:12:15.405"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:14.843" endtime="20201115 22:12:15.406"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:14.841" endtime="20201115 22:12:15.406"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:15.411" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:15.434" endtime="20201115 22:12:15.466"></status>
</kw>
<msg timestamp="20201115 22:12:15.467" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:15.430" endtime="20201115 22:12:15.467"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:15.473" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:15.469" endtime="20201115 22:12:15.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:15.476" endtime="20201115 22:12:15.479"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:15.423" endtime="20201115 22:12:15.481"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:15.417" endtime="20201115 22:12:15.482"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:15.498" endtime="20201115 22:12:15.835"></status>
</kw>
<msg timestamp="20201115 22:12:15.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0459225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045949903, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:12:15.495" endtime="20201115 22:12:15.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:15.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0459225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045949903, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:12:15.844" endtime="20201115 22:12:15.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:15.863" endtime="20201115 22:12:15.867"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:15.488" endtime="20201115 22:12:15.868"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:15.484" endtime="20201115 22:12:15.870"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:15.880" level="INFO">${RESULT} = [{'time': 0.045949903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.740300000000223e-05, 'source_diff': 2.740300000000223e-05}, {'time': 0.046409472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:12:15.871" endtime="20201115 22:12:15.881"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:15.913" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:12:15.882" endtime="20201115 22:12:15.913"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:15.924" level="INFO">NAME: 00-overhead-18-set</msg>
<status status="PASS" starttime="20201115 22:12:15.922" endtime="20201115 22:12:15.925"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:15.929" level="INFO">VALUE: [2.740300000000223e-05, 2.740300000000223e-05, 2.7776999999999663e-05, 2.7098000000003175e-05, 2.7430000000001897e-05, 2.794399999999503e-05, 2.75970000000042e-05, 2.7263999999999067e-05, 2.722299999999983e-05, 2.741599999999539e-05, 2.74170000000018e-05, 2.7541999999998457e-05, 2.7736000000000427e-05, 2.7222000000000357e-05, 2.7820000000004785e-05, 2.7042000000004895e-05, 2.74170000000018e-05, 2.762500000000334e-05, 2.711100000000327e-05, 2.7402999999995292e-05, 2.7555999999998027e-05, 2.7084000000003605e-05, 2.7749999999999997e-05, 2.7430999999994432e-05, 2.7598000000003675e-05, 2.7778000000006076e-05, 2.7068999999997623e-05, 2.7763999999999567e-05, 2.7249999999999497e-05, 2.72369999999994e-05, 2.7610999999996833e-05, 2.708300000000413e-05, 2.7416000000002327e-05, 2.7416000000002327e-05, 2.7138999999995472e-05, 2.708300000000413e-05, 2.7277999999998637e-05, 2.7235999999999927e-05, 2.7598000000003675e-05, 2.7805000000005742e-05, 2.7930999999994932e-05, 2.7098000000003175e-05, 2.75970000000042e-05, 2.74170000000018e-05, 2.7263999999999067e-05, 2.7777000000006602e-05, 2.7098000000003175e-05, 2.7583999999997166e-05, 2.7082999999997193e-05, 2.7902999999995792e-05]</msg>
<status status="PASS" starttime="20201115 22:12:15.926" endtime="20201115 22:12:15.931"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:15.915" endtime="20201115 22:12:15.933"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:15.939" endtime="20201115 22:12:15.942"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:15.947" endtime="20201115 22:12:15.969"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:15.943" endtime="20201115 22:12:15.970"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:15.935" endtime="20201115 22:12:15.972"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:15.412" endtime="20201115 22:12:15.973"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:15.409" endtime="20201115 22:12:15.973"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:15.407" endtime="20201115 22:12:15.974"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:15.978" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:16.001" endtime="20201115 22:12:16.035"></status>
</kw>
<msg timestamp="20201115 22:12:16.036" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:15.998" endtime="20201115 22:12:16.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:16.042" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:16.039" endtime="20201115 22:12:16.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:16.045" endtime="20201115 22:12:16.049"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:15.991" endtime="20201115 22:12:16.050"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:15.985" endtime="20201115 22:12:16.052"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:16.069" endtime="20201115 22:12:16.406"></status>
</kw>
<msg timestamp="20201115 22:12:16.413" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046346292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046374569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:16.065" endtime="20201115 22:12:16.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:16.431" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046346292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046374569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:16.415" endtime="20201115 22:12:16.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:16.433" endtime="20201115 22:12:16.437"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:16.058" endtime="20201115 22:12:16.439"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:16.053" endtime="20201115 22:12:16.440"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:16.451" level="INFO">${RESULT} = [{'time': 0.046374569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8277000000000163e-05, 'source_diff': 2.8277000000000163e-05}, {'time': 0.046858208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:12:16.442" endtime="20201115 22:12:16.451"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:16.481" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:12:16.453" endtime="20201115 22:12:16.482"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:16.492" level="INFO">NAME: 00-overhead-19-set</msg>
<status status="PASS" starttime="20201115 22:12:16.490" endtime="20201115 22:12:16.493"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:16.498" level="INFO">VALUE: [2.8277000000000163e-05, 2.8250000000000497e-05, 2.8778000000000137e-05, 2.812500000000384e-05, 2.795900000000101e-05, 2.8112000000003745e-05, 2.8222999999993892e-05, 2.8778000000000137e-05, 2.8027999999999387e-05, 2.843100000000237e-05, 2.8778000000000137e-05, 2.8250000000000497e-05, 2.8222000000001357e-05, 2.8778000000000137e-05, 2.8778000000000137e-05, 2.8666999999996112e-05, 2.793100000000187e-05, 2.811100000000427e-05, 2.8444000000002467e-05, 2.793100000000187e-05, 2.8110999999997333e-05, 2.80970000000047e-05, 2.8416000000003327e-05, 2.8291999999999207e-05, 2.8583999999998166e-05, 2.84170000000028e-05, 2.8582999999998693e-05, 2.8638999999996972e-05, 2.8764000000000567e-05, 2.8596999999998263e-05, 2.793100000000187e-05, 2.8596999999998263e-05, 2.8277000000000163e-05, 2.8305999999998777e-05, 2.8444000000002467e-05, 2.8610999999997833e-05, 2.7957999999994598e-05, 2.8138999999996472e-05, 2.8264000000000067e-05, 2.8277999999992698e-05, 2.7944000000001967e-05, 2.80970000000047e-05, 2.8458999999994572e-05, 2.793100000000881e-05, 2.8569000000006062e-05, 2.8596999999991324e-05, 2.845900000000845e-05, 2.8763000000001093e-05, 2.8472000000001607e-05, 2.8110999999997333e-05]</msg>
<status status="PASS" starttime="20201115 22:12:16.495" endtime="20201115 22:12:16.500"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:16.483" endtime="20201115 22:12:16.501"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:16.508" endtime="20201115 22:12:16.510"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:16.516" endtime="20201115 22:12:16.538"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:16.511" endtime="20201115 22:12:16.539"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:16.503" endtime="20201115 22:12:16.541"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:15.979" endtime="20201115 22:12:16.541"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:15.976" endtime="20201115 22:12:16.542"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:15.974" endtime="20201115 22:12:16.542"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:16.547" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:16.570" endtime="20201115 22:12:16.605"></status>
</kw>
<msg timestamp="20201115 22:12:16.606" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:16.566" endtime="20201115 22:12:16.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:16.613" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:16.608" endtime="20201115 22:12:16.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:16.615" endtime="20201115 22:12:16.619"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:16.559" endtime="20201115 22:12:16.620"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:16.554" endtime="20201115 22:12:16.622"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:16.638" endtime="20201115 22:12:16.975"></status>
</kw>
<msg timestamp="20201115 22:12:16.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04572375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045752528, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:12:16.635" endtime="20201115 22:12:16.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:17.000" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04572375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045752528, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:12:16.984" endtime="20201115 22:12:17.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:17.002" endtime="20201115 22:12:17.006"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:16.628" endtime="20201115 22:12:17.008"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:16.623" endtime="20201115 22:12:17.009"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:17.020" level="INFO">${RESULT} = [{'time': 0.045752528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8778000000000137e-05, 'source_diff': 2.8778000000000137e-05}, {'time': 0.046271236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:12:17.011" endtime="20201115 22:12:17.020"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:17.050" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:12:17.022" endtime="20201115 22:12:17.051"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:17.061" level="INFO">NAME: 00-overhead-20-set</msg>
<status status="PASS" starttime="20201115 22:12:17.059" endtime="20201115 22:12:17.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:17.068" level="INFO">VALUE: [2.8778000000000137e-05, 2.9610999999998833e-05, 2.8944000000002967e-05, 2.9486000000002177e-05, 2.8777999999993198e-05, 2.9166999999996612e-05, 2.962500000000534e-05, 2.8791000000000233e-05, 2.947300000000208e-05, 2.970900000000276e-05, 2.9110999999998333e-05, 2.8791000000000233e-05, 2.9556000000000027e-05, 2.9680999999996682e-05, 2.9236000000001927e-05, 2.913900000000441e-05, 2.962500000000534e-05, 2.9222000000002357e-05, 2.9305999999999777e-05, 2.8791999999999707e-05, 2.9000000000001247e-05, 2.8986000000001677e-05, 2.8792000000006646e-05, 2.94579999999961e-05, 2.9624999999998403e-05, 2.961100000000577e-05, 2.943100000000337e-05, 2.8986000000001677e-05, 2.9624999999998403e-05, 2.947199999999567e-05, 2.8805999999999277e-05, 2.94579999999961e-05, 2.9458000000003037e-05, 2.9138999999997472e-05, 2.9333000000006382e-05, 2.8764000000000567e-05, 2.9292000000000207e-05, 2.9278000000007576e-05, 2.8778000000007076e-05, 2.8791999999999707e-05, 2.9458999999995572e-05, 2.912500000000484e-05, 2.893100000000981e-05, 2.9110999999998333e-05, 2.8764000000000567e-05, 2.947199999998873e-05, 2.94579999999961e-05, 2.9277999999993698e-05, 2.89579999999956e-05, 2.8791999999999707e-05]</msg>
<status status="PASS" starttime="20201115 22:12:17.064" endtime="20201115 22:12:17.069"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:17.052" endtime="20201115 22:12:17.070"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:17.077" endtime="20201115 22:12:17.079"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:17.085" endtime="20201115 22:12:17.106"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:17.080" endtime="20201115 22:12:17.108"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:17.072" endtime="20201115 22:12:17.110"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:16.548" endtime="20201115 22:12:17.110"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:16.545" endtime="20201115 22:12:17.111"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:16.543" endtime="20201115 22:12:17.111"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:17.116" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:17.139" endtime="20201115 22:12:17.176"></status>
</kw>
<msg timestamp="20201115 22:12:17.177" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:17.136" endtime="20201115 22:12:17.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:17.183" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:17.179" endtime="20201115 22:12:17.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:17.186" endtime="20201115 22:12:17.189"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:17.129" endtime="20201115 22:12:17.191"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:17.122" endtime="20201115 22:12:17.192"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:17.209" endtime="20201115 22:12:17.547"></status>
</kw>
<msg timestamp="20201115 22:12:17.554" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046624722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046654861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:17.205" endtime="20201115 22:12:17.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:17.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046624722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046654861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:17.556" endtime="20201115 22:12:17.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:17.574" endtime="20201115 22:12:17.577"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:17.198" endtime="20201115 22:12:17.579"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:17.194" endtime="20201115 22:12:17.580"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:17.591" level="INFO">${RESULT} = [{'time': 0.046654861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0138999999998473e-05, 'source_diff': 3.0138999999998473e-05}, {'time': 0.047206542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:12:17.582" endtime="20201115 22:12:17.591"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:17.622" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:12:17.593" endtime="20201115 22:12:17.622"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:17.632" level="INFO">NAME: 00-overhead-21-set</msg>
<status status="PASS" starttime="20201115 22:12:17.630" endtime="20201115 22:12:17.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:17.639" level="INFO">VALUE: [3.0138999999998473e-05, 3.0305999999993838e-05, 3.0472000000003607e-05, 2.9985999999995738e-05, 3.0152999999998042e-05, 2.963900000000491e-05, 2.9958000000003537e-05, 2.9972999999995642e-05, 2.995900000000301e-05, 3.0306000000000777e-05, 3.0137999999999e-05, 3.048599999999624e-05, 3.0472000000003607e-05, 3.048599999999624e-05, 3.047300000000308e-05, 2.969500000000319e-05, 3.0333999999999917e-05, 2.962500000000534e-05, 2.9652999999997542e-05, 2.9791999999993768e-05, 2.9806000000000277e-05, 2.966599999999764e-05, 3.0027000000001913e-05, 3.0292000000001207e-05, 3.0333000000000443e-05, 3.0499999999995808e-05, 3.048599999999624e-05, 3.0305000000001303e-05, 3.0320000000000347e-05, 3.012500000000584e-05, 2.9652999999990604e-05, 3.048599999999624e-05, 2.9958999999996072e-05, 2.9819999999999847e-05, 3.0152999999991104e-05, 3.0180000000004648e-05, 2.966700000001099e-05, 2.9638999999997973e-05, 2.965300000000448e-05, 3.0458999999996572e-05, 3.0166999999997612e-05, 2.9986000000009616e-05, 3.0320000000000347e-05, 3.048599999999624e-05, 3.0500000000002747e-05, 3.0306000000007716e-05, 2.9860999999992144e-05, 2.965300000000448e-05, 2.9819000000000373e-05, 3.0305999999993838e-05]</msg>
<status status="PASS" starttime="20201115 22:12:17.635" endtime="20201115 22:12:17.640"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:17.624" endtime="20201115 22:12:17.642"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:17.648" endtime="20201115 22:12:17.651"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:17.663" endtime="20201115 22:12:17.685"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:17.652" endtime="20201115 22:12:17.687"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:17.643" endtime="20201115 22:12:17.688"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:17.117" endtime="20201115 22:12:17.689"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:17.114" endtime="20201115 22:12:17.690"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:17.112" endtime="20201115 22:12:17.690"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:17.695" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:17.718" endtime="20201115 22:12:17.756"></status>
</kw>
<msg timestamp="20201115 22:12:17.758" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:17.714" endtime="20201115 22:12:17.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:17.764" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:17.760" endtime="20201115 22:12:17.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:17.766" endtime="20201115 22:12:17.770"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:17.707" endtime="20201115 22:12:17.771"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:17.701" endtime="20201115 22:12:17.773"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:17.789" endtime="20201115 22:12:18.131"></status>
</kw>
<msg timestamp="20201115 22:12:18.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046355708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046386208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:17.786" endtime="20201115 22:12:18.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:18.156" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046355708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046386208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:18.140" endtime="20201115 22:12:18.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:18.158" endtime="20201115 22:12:18.162"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:17.779" endtime="20201115 22:12:18.163"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:17.774" endtime="20201115 22:12:18.165"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:18.175" level="INFO">${RESULT} = [{'time': 0.046386208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0499999999995808e-05, 'source_diff': 3.0499999999995808e-05}, {'time': 0.046961889, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:12:18.166" endtime="20201115 22:12:18.176"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:18.208" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:12:18.177" endtime="20201115 22:12:18.209"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:18.220" level="INFO">NAME: 00-overhead-22-set</msg>
<status status="PASS" starttime="20201115 22:12:18.217" endtime="20201115 22:12:18.221"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:18.227" level="INFO">VALUE: [3.0499999999995808e-05, 3.068099999999768e-05, 3.068099999999768e-05, 3.133300000000144e-05, 3.0861999999999556e-05, 3.1362000000000056e-05, 3.0832999999994004e-05, 3.116699999999861e-05, 3.068099999999768e-05, 3.133400000000092e-05, 3.069500000000419e-05, 3.0513999999995378e-05, 3.0500000000002747e-05, 3.118099999999818e-05, 3.0514000000002317e-05, 3.066599999999864e-05, 3.101399999999588e-05, 3.102800000000239e-05, 3.066599999999864e-05, 3.116699999999861e-05, 3.0499999999995808e-05, 3.068099999999768e-05, 3.134700000000101e-05, 3.069400000000472e-05, 3.068100000000462e-05, 3.098600000000368e-05, 3.067999999999821e-05, 3.115199999999957e-05, 3.068100000000462e-05, 3.068000000000515e-05, 3.067999999999127e-05, 3.086100000000702e-05, 3.102799999998851e-05, 3.097200000000411e-05, 3.082000000000085e-05, 3.136100000000752e-05, 3.1360999999993644e-05, 3.134700000000101e-05, 3.102800000000239e-05, 3.118100000000512e-05, 3.083399999999348e-05, 3.0513999999995378e-05, 3.101399999999588e-05, 3.069399999999778e-05, 3.066699999999811e-05, 3.0624999999992464e-05, 3.0512999999995905e-05, 3.0500000000002747e-05, 3.0834000000007356e-05, 3.097199999999023e-05]</msg>
<status status="PASS" starttime="20201115 22:12:18.222" endtime="20201115 22:12:18.228"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:18.210" endtime="20201115 22:12:18.230"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:18.236" endtime="20201115 22:12:18.239"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:18.245" endtime="20201115 22:12:18.266"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:18.240" endtime="20201115 22:12:18.268"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:18.232" endtime="20201115 22:12:18.269"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:17.696" endtime="20201115 22:12:18.270"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:17.693" endtime="20201115 22:12:18.271"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:17.691" endtime="20201115 22:12:18.271"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:18.276" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:18.299" endtime="20201115 22:12:18.339"></status>
</kw>
<msg timestamp="20201115 22:12:18.340" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:18.295" endtime="20201115 22:12:18.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:18.346" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:18.342" endtime="20201115 22:12:18.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:18.348" endtime="20201115 22:12:18.352"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:18.288" endtime="20201115 22:12:18.354"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:18.282" endtime="20201115 22:12:18.355"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:18.371" endtime="20201115 22:12:18.708"></status>
</kw>
<msg timestamp="20201115 22:12:18.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046524181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046555778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:18.368" endtime="20201115 22:12:18.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:18.733" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046524181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046555778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:18.718" endtime="20201115 22:12:18.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:18.736" endtime="20201115 22:12:18.739"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:18.361" endtime="20201115 22:12:18.741"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:18.356" endtime="20201115 22:12:18.742"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:18.753" level="INFO">${RESULT} = [{'time': 0.046555778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.159700000000126e-05, 'source_diff': 3.159700000000126e-05}, {'time': 0.047165514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:12:18.744" endtime="20201115 22:12:18.753"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:18.783" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:12:18.755" endtime="20201115 22:12:18.784"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:18.794" level="INFO">NAME: 00-overhead-23-set</msg>
<status status="PASS" starttime="20201115 22:12:18.792" endtime="20201115 22:12:18.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:18.801" level="INFO">VALUE: [3.159700000000126e-05, 3.136100000000058e-05, 3.136100000000058e-05, 3.151399999999638e-05, 3.222200000000536e-05, 3.152799999999595e-05, 3.136100000000058e-05, 3.151400000000332e-05, 3.204199999999602e-05, 3.220800000000579e-05, 3.219399999999928e-05, 3.2054999999996114e-05, 3.217999999999971e-05, 3.150000000000375e-05, 3.222199999999842e-05, 3.202799999999645e-05, 3.19579999999986e-05, 3.1362000000000056e-05, 3.184800000000099e-05, 3.134700000000101e-05, 3.202800000000339e-05, 3.220799999999885e-05, 3.152800000000289e-05, 3.181900000000237e-05, 3.219499999999875e-05, 3.219399999999928e-05, 3.218099999999918e-05, 3.170799999999141e-05, 3.218100000000612e-05, 3.168100000000562e-05, 3.202800000000339e-05, 3.20979999999943e-05, 3.1348000000000487e-05, 3.220800000000579e-05, 3.137500000000015e-05, 3.187500000000065e-05, 3.220799999999191e-05, 3.172199999999792e-05, 3.201399999999688e-05, 3.193099999999893e-05, 3.170900000000476e-05, 3.187500000000065e-05, 3.163899999999997e-05, 3.202799999998951e-05, 3.172199999999792e-05, 3.2012999999997405e-05, 3.197200000000511e-05, 3.137500000000015e-05, 3.219399999999928e-05, 3.1388999999992784e-05]</msg>
<status status="PASS" starttime="20201115 22:12:18.796" endtime="20201115 22:12:18.802"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:18.785" endtime="20201115 22:12:18.804"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:18.810" endtime="20201115 22:12:18.813"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:18.819" endtime="20201115 22:12:18.841"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:18.815" endtime="20201115 22:12:18.843"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:18.806" endtime="20201115 22:12:18.844"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:18.277" endtime="20201115 22:12:18.845"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:18.274" endtime="20201115 22:12:18.846"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:18.272" endtime="20201115 22:12:18.846"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:18.851" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:18.874" endtime="20201115 22:12:18.915"></status>
</kw>
<msg timestamp="20201115 22:12:18.916" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:18.870" endtime="20201115 22:12:18.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:18.922" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:18.918" endtime="20201115 22:12:18.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:18.925" endtime="20201115 22:12:18.928"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:18.863" endtime="20201115 22:12:18.930"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:18.857" endtime="20201115 22:12:18.931"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:18.948" endtime="20201115 22:12:19.283"></status>
</kw>
<msg timestamp="20201115 22:12:19.290" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046254431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046286639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:18.944" endtime="20201115 22:12:19.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:19.308" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046254431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046286639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:19.292" endtime="20201115 22:12:19.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:19.310" endtime="20201115 22:12:19.314"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:18.937" endtime="20201115 22:12:19.316"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:18.933" endtime="20201115 22:12:19.317"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:19.328" level="INFO">${RESULT} = [{'time': 0.046286639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.220799999999885e-05, 'source_diff': 3.220799999999885e-05}, {'time': 0.046932278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:12:19.319" endtime="20201115 22:12:19.329"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:19.359" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:12:19.331" endtime="20201115 22:12:19.360"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:19.370" level="INFO">NAME: 00-overhead-24-set</msg>
<status status="PASS" starttime="20201115 22:12:19.368" endtime="20201115 22:12:19.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:19.377" level="INFO">VALUE: [3.220799999999885e-05, 3.240300000000029e-05, 3.297199999999917e-05, 3.223599999999799e-05, 3.233300000000244e-05, 3.222299999999789e-05, 3.220799999999885e-05, 3.237500000000115e-05, 3.30700000000031e-05, 3.254199999999652e-05, 3.2888999999994284e-05, 3.304199999999702e-05, 3.286200000000156e-05, 3.27779999999972e-05, 3.254200000000346e-05, 3.288900000000122e-05, 3.272199999999892e-05, 3.288800000000175e-05, 3.3040999999997545e-05, 3.3054999999997114e-05, 3.3026999999997975e-05, 3.291600000000089e-05, 3.3082999999996254e-05, 3.256900000000312e-05, 3.277800000000414e-05, 3.238900000000072e-05, 3.220800000000579e-05, 3.261100000000183e-05, 3.22370000000044e-05, 3.24170000000068e-05, 3.240300000000029e-05, 3.290300000000079e-05, 3.3042000000010896e-05, 3.304199999999702e-05, 3.254199999999652e-05, 3.2374999999987275e-05, 3.2888999999994284e-05, 3.2888999999994284e-05, 3.306999999999616e-05, 3.304199999999702e-05, 3.305600000000353e-05, 3.305600000000353e-05, 3.220800000000579e-05, 3.305500000000405e-05, 3.234700000000201e-05, 3.270799999999241e-05, 3.3042000000010896e-05, 3.272199999999892e-05, 3.295900000001295e-05, 3.288900000000816e-05]</msg>
<status status="PASS" starttime="20201115 22:12:19.372" endtime="20201115 22:12:19.378"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:19.361" endtime="20201115 22:12:19.379"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:19.386" endtime="20201115 22:12:19.388"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:19.394" endtime="20201115 22:12:19.415"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:19.389" endtime="20201115 22:12:19.417"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:19.381" endtime="20201115 22:12:19.419"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:18.852" endtime="20201115 22:12:19.419"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:18.849" endtime="20201115 22:12:19.420"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:18.847" endtime="20201115 22:12:19.420"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:19.426" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:19.451" endtime="20201115 22:12:19.494"></status>
</kw>
<msg timestamp="20201115 22:12:19.495" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:19.447" endtime="20201115 22:12:19.496"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:19.501" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:19.498" endtime="20201115 22:12:19.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:19.504" endtime="20201115 22:12:19.508"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:19.440" endtime="20201115 22:12:19.509"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:19.433" endtime="20201115 22:12:19.511"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:19.527" endtime="20201115 22:12:19.864"></status>
</kw>
<msg timestamp="20201115 22:12:19.871" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049528694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049561944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:19.524" endtime="20201115 22:12:19.872"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:19.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049528694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049561944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:19.873" endtime="20201115 22:12:19.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:19.892" endtime="20201115 22:12:19.896"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:19.516" endtime="20201115 22:12:19.897"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:19.512" endtime="20201115 22:12:19.899"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:19.909" level="INFO">${RESULT} = [{'time': 0.049561944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.324999999999856e-05, 'source_diff': 3.324999999999856e-05}, {'time': 0.050234806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:12:19.900" endtime="20201115 22:12:19.910"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:19.940" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:12:19.912" endtime="20201115 22:12:19.941"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:19.951" level="INFO">NAME: 00-overhead-25-set</msg>
<status status="PASS" starttime="20201115 22:12:19.949" endtime="20201115 22:12:19.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:19.958" level="INFO">VALUE: [3.324999999999856e-05, 3.354199999999752e-05, 3.305600000000353e-05, 3.35700000000036e-05, 3.305600000000353e-05, 3.355599999999709e-05, 3.304200000000396e-05, 3.337500000000215e-05, 3.305599999999659e-05, 3.370800000000035e-05, 3.320799999999985e-05, 3.306900000000362e-05, 3.3846999999996574e-05, 3.323600000000593e-05, 3.358300000000369e-05, 3.355599999999709e-05, 3.3416999999993924e-05, 3.370800000000035e-05, 3.3068999999996684e-05, 3.309700000000276e-05, 3.306999999999616e-05, 3.3888999999995284e-05, 3.322299999999889e-05, 3.3068999999996684e-05, 3.3388999999994784e-05, 3.362500000000934e-05, 3.304199999999702e-05, 3.323599999999205e-05, 3.337500000000215e-05, 3.3388999999994784e-05, 3.358400000000317e-05, 3.326400000000507e-05, 3.355599999999015e-05, 3.340300000000129e-05, 3.341599999999445e-05, 3.308399999998879e-05, 3.324999999999856e-05, 3.383399999999648e-05, 3.323600000000593e-05, 3.340300000000129e-05, 3.358300000000369e-05, 3.306999999999616e-05, 3.3568999999997184e-05, 3.374999999999906e-05, 3.372199999999992e-05, 3.324999999999856e-05, 3.340300000000129e-05, 3.340300000000129e-05, 3.3708999999992884e-05, 3.341600000000833e-05]</msg>
<status status="PASS" starttime="20201115 22:12:19.953" endtime="20201115 22:12:19.959"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:19.942" endtime="20201115 22:12:19.960"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:19.966" endtime="20201115 22:12:19.969"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:19.975" endtime="20201115 22:12:19.997"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:19.970" endtime="20201115 22:12:19.998"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:19.962" endtime="20201115 22:12:20.000"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:19.427" endtime="20201115 22:12:20.001"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:19.423" endtime="20201115 22:12:20.001"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:19.421" endtime="20201115 22:12:20.001"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:05.893" endtime="20201115 22:12:20.002"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="teardown">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:20.012" endtime="20201115 22:12:20.034"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:20.008" endtime="20201115 22:12:20.036"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:20.005" endtime="20201115 22:12:20.036"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:12:05.768" endtime="20201115 22:12:20.037" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Remove List">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:20.055" endtime="20201115 22:12:20.077"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:20.051" endtime="20201115 22:12:20.078"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:20.111" endtime="20201115 22:12:20.126"></status>
</kw>
<msg timestamp="20201115 22:12:20.128" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:20.108" endtime="20201115 22:12:20.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:20.135" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:20.130" endtime="20201115 22:12:20.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:12:20.141" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:12:20.137" endtime="20201115 22:12:20.142"></status>
</kw>
<status status="FAIL" starttime="20201115 22:12:20.101" endtime="20201115 22:12:20.144"></status>
</kw>
<status status="FAIL" starttime="20201115 22:12:20.094" endtime="20201115 22:12:20.145"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:20.092" endtime="20201115 22:12:20.146"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:12:20.154" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:12:20.152" endtime="20201115 22:12:20.154"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:20.148" endtime="20201115 22:12:20.155"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:20.090" endtime="20201115 22:12:20.155"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:20.088" endtime="20201115 22:12:20.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:20.157" endtime="20201115 22:12:20.160"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:20.084" endtime="20201115 22:12:20.162"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:20.080" endtime="20201115 22:12:20.164"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:20.049" endtime="20201115 22:12:20.164"></status>
</kw>
<kw name="${n} IN RANGE [ 25 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:20.171" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:20.198" endtime="20201115 22:12:20.213"></status>
</kw>
<msg timestamp="20201115 22:12:20.214" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:20.195" endtime="20201115 22:12:20.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:20.220" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:20.216" endtime="20201115 22:12:20.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:20.222" endtime="20201115 22:12:20.226"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:20.188" endtime="20201115 22:12:20.227"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:20.182" endtime="20201115 22:12:20.229"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:20.245" endtime="20201115 22:12:20.592"></status>
</kw>
<msg timestamp="20201115 22:12:20.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.134535472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.1345375, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:12:20.242" endtime="20201115 22:12:20.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:20.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.134535472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.1345375, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:12:20.602" endtime="20201115 22:12:20.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:20.620" endtime="20201115 22:12:20.623"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:20.235" endtime="20201115 22:12:20.625"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:20.230" endtime="20201115 22:12:20.627"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:20.638" level="INFO">${RESULT} = [{'time': 0.1345375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.028000000015018e-06, 'source_diff': 2.028000000015018e-06}, {'time': 0.134640778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:12:20.628" endtime="20201115 22:12:20.638"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:20.668" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:12:20.640" endtime="20201115 22:12:20.669"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:20.679" level="INFO">NAME: 00-overhead-1-remove</msg>
<status status="PASS" starttime="20201115 22:12:20.677" endtime="20201115 22:12:20.680"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:20.684" level="INFO">VALUE: [2.028000000015018e-06, 2.0279999999872622e-06, 2.0279999999872622e-06, 2.000000000002e-06, 2.027000000015544e-06, 2.0269999999877886e-06, 2.028000000015018e-06, 2.000000000002e-06, 2.013999999994631e-06, 1.9859999999816136e-06, 2.0690000000211928e-06, 2.110999999999086e-06, 2.0269999999877886e-06, 2.055000000000806e-06, 2.083000000013824e-06, 1.9859999999816136e-06, 1.987000000008843e-06, 2.000000000002e-06, 2.028000000015018e-06, 2.0279999999872622e-06, 2.028000000015018e-06, 2.0279999999872622e-06, 2.028000000015018e-06, 2.013999999994631e-06, 2.027000000015544e-06, 2.028000000015018e-06, 2.028000000015018e-06, 2.0279999999872622e-06, 2.0269999999877886e-06, 2.013999999994631e-06, 2.013999999994631e-06, 2.000000000002e-06, 2.0279999999872622e-06, 2.028000000015018e-06, 2.0279999999872622e-06, 2.0279999999872622e-06, 2.042000000007649e-06, 2.068999999993437e-06, 2.0269999999877886e-06, 2.0419999999798932e-06, 2.028000000015018e-06, 2.000000000002e-06, 2.028000000015018e-06, 2.013999999994631e-06, 2.042000000007649e-06, 2.000000000002e-06, 2.028000000015018e-06, 2.042000000007649e-06, 2.028000000015018e-06, 2.013999999994631e-06]</msg>
<status status="PASS" starttime="20201115 22:12:20.681" endtime="20201115 22:12:20.685"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:20.670" endtime="20201115 22:12:20.687"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:20.693" endtime="20201115 22:12:20.696"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:20.701" endtime="20201115 22:12:20.723"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:20.697" endtime="20201115 22:12:20.724"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:20.689" endtime="20201115 22:12:20.726"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:20.172" endtime="20201115 22:12:20.727"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:20.169" endtime="20201115 22:12:20.727"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:20.167" endtime="20201115 22:12:20.728"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:20.732" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:20.757" endtime="20201115 22:12:20.772"></status>
</kw>
<msg timestamp="20201115 22:12:20.773" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:20.753" endtime="20201115 22:12:20.774"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:20.780" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:20.776" endtime="20201115 22:12:20.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:20.782" endtime="20201115 22:12:20.786"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:20.745" endtime="20201115 22:12:20.787"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:20.739" endtime="20201115 22:12:20.789"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:20.805" endtime="20201115 22:12:21.141"></status>
</kw>
<msg timestamp="20201115 22:12:21.148" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047506958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047509181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:20.802" endtime="20201115 22:12:21.149"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:21.167" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047506958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047509181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:21.151" endtime="20201115 22:12:21.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:21.169" endtime="20201115 22:12:21.173"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:20.795" endtime="20201115 22:12:21.175"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:20.790" endtime="20201115 22:12:21.176"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:21.187" level="INFO">${RESULT} = [{'time': 0.047509181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.222999999995645e-06, 'source_diff': 2.222999999995645e-06}, {'time': 0.047629389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:12:21.178" endtime="20201115 22:12:21.187"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:21.217" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:12:21.189" endtime="20201115 22:12:21.218"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:21.228" level="INFO">NAME: 00-overhead-2-remove</msg>
<status status="PASS" starttime="20201115 22:12:21.226" endtime="20201115 22:12:21.229"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:21.234" level="INFO">VALUE: [2.222999999995645e-06, 2.2360000000026803e-06, 2.223000000002584e-06, 2.2360000000026803e-06, 2.2639999999948812e-06, 2.2499999999953113e-06, 2.2360000000026803e-06, 2.305999999993591e-06, 2.237000000002154e-06, 2.237000000002154e-06, 2.237000000002154e-06, 2.2080000000035405e-06, 2.2359999999957414e-06, 2.25000000000225e-06, 2.2220000000031104e-06, 2.2360000000026803e-06, 2.25000000000225e-06, 2.2360000000026803e-06, 2.2219999999961715e-06, 2.2360000000026803e-06, 2.26400000000182e-06, 2.2359999999957414e-06, 2.2499999999953113e-06, 2.2360000000026803e-06, 2.2219999999961715e-06, 2.2219999999961715e-06, 2.2360000000026803e-06, 2.2499999999953113e-06, 2.1810000000038743e-06, 2.2080000000035405e-06, 2.2220000000031104e-06, 2.2220000000031104e-06, 2.25000000000225e-06, 2.2359999999957414e-06, 2.2499999999953113e-06, 2.1939999999970317e-06, 2.2499999999953113e-06, 2.2360000000026803e-06, 2.2360000000026803e-06, 2.2360000000026803e-06, 2.1809999999969354e-06, 2.2360000000026803e-06, 2.2359999999957414e-06, 2.27800000000139e-06, 2.2220000000031104e-06, 2.27800000000139e-06, 2.30600000000053e-06, 2.223000000002584e-06, 2.165999999997892e-06, 2.2360000000026803e-06]</msg>
<status status="PASS" starttime="20201115 22:12:21.231" endtime="20201115 22:12:21.235"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:21.219" endtime="20201115 22:12:21.236"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:21.242" endtime="20201115 22:12:21.245"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:21.250" endtime="20201115 22:12:21.272"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:21.246" endtime="20201115 22:12:21.274"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:21.238" endtime="20201115 22:12:21.275"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:20.734" endtime="20201115 22:12:21.276"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:20.730" endtime="20201115 22:12:21.277"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:20.728" endtime="20201115 22:12:21.277"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:21.282" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:21.304" endtime="20201115 22:12:21.321"></status>
</kw>
<msg timestamp="20201115 22:12:21.322" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:21.301" endtime="20201115 22:12:21.322"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:21.328" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:21.324" endtime="20201115 22:12:21.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:21.330" endtime="20201115 22:12:21.334"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:21.294" endtime="20201115 22:12:21.336"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:21.288" endtime="20201115 22:12:21.338"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:21.356" endtime="20201115 22:12:21.693"></status>
</kw>
<msg timestamp="20201115 22:12:21.700" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045782514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045784903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:21.353" endtime="20201115 22:12:21.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:21.718" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045782514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045784903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:21.703" endtime="20201115 22:12:21.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:21.721" endtime="20201115 22:12:21.725"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:21.344" endtime="20201115 22:12:21.726"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:21.339" endtime="20201115 22:12:21.728"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:21.738" level="INFO">${RESULT} = [{'time': 0.045784903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3889999999984757e-06, 'source_diff': 2.3889999999984757e-06}, {'time': 0.045918444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:12:21.729" endtime="20201115 22:12:21.739"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:21.769" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:12:21.740" endtime="20201115 22:12:21.769"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:21.780" level="INFO">NAME: 00-overhead-3-remove</msg>
<status status="PASS" starttime="20201115 22:12:21.777" endtime="20201115 22:12:21.780"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:21.785" level="INFO">VALUE: [2.3889999999984757e-06, 2.4440000000042206e-06, 2.4030000000049845e-06, 2.4450000000036942e-06, 2.4580000000037905e-06, 2.4439999999972817e-06, 2.5000000000025002e-06, 2.4439999999972817e-06, 2.4300000000046507e-06, 2.4439999999972817e-06, 2.4450000000036942e-06, 2.4449999999967553e-06, 2.4309999999971854e-06, 2.4449999999967553e-06, 2.4439999999972817e-06, 2.4579999999968516e-06, 2.4309999999971854e-06, 2.4579999999968516e-06, 2.4030000000049845e-06, 2.5000000000025002e-06, 2.4440000000042206e-06, 2.4449999999967553e-06, 2.4450000000036942e-06, 2.4449999999967553e-06, 2.4589999999963252e-06, 2.4859999999959914e-06, 2.4440000000042206e-06, 2.4579999999968516e-06, 2.4579999999968516e-06, 2.4439999999972817e-06, 2.5139999999951312e-06, 2.4450000000036942e-06, 2.4439999999972817e-06, 2.4439999999972817e-06, 2.4859999999959914e-06, 2.4439999999972817e-06, 2.4440000000042206e-06, 2.4300000000046507e-06, 2.360999999999336e-06, 2.4439999999972817e-06, 2.459000000003264e-06, 2.4450000000036942e-06, 2.4579999999968516e-06, 2.4450000000036942e-06, 2.3889999999984757e-06, 2.4439999999972817e-06, 2.401999999998572e-06, 2.4439999999972817e-06, 2.4449999999967553e-06, 2.4029999999980456e-06]</msg>
<status status="PASS" starttime="20201115 22:12:21.782" endtime="20201115 22:12:21.786"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:21.771" endtime="20201115 22:12:21.787"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:21.794" endtime="20201115 22:12:21.796"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:21.802" endtime="20201115 22:12:21.824"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:21.798" endtime="20201115 22:12:21.825"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:21.789" endtime="20201115 22:12:21.827"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:21.283" endtime="20201115 22:12:21.827"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:21.279" endtime="20201115 22:12:21.828"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:21.278" endtime="20201115 22:12:21.828"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:21.833" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:21.856" endtime="20201115 22:12:21.873"></status>
</kw>
<msg timestamp="20201115 22:12:21.874" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:21.852" endtime="20201115 22:12:21.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:21.881" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:21.877" endtime="20201115 22:12:21.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:21.883" endtime="20201115 22:12:21.887"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:21.845" endtime="20201115 22:12:21.888"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:21.840" endtime="20201115 22:12:21.890"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:21.906" endtime="20201115 22:12:22.244"></status>
</kw>
<msg timestamp="20201115 22:12:22.251" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046351042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046353681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:21.903" endtime="20201115 22:12:22.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:22.270" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046351042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046353681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:22.254" endtime="20201115 22:12:22.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:22.272" endtime="20201115 22:12:22.276"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:21.896" endtime="20201115 22:12:22.277"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:21.891" endtime="20201115 22:12:22.279"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:22.289" level="INFO">${RESULT} = [{'time': 0.046353681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6389999999987257e-06, 'source_diff': 2.6389999999987257e-06}, {'time': 0.046505597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:12:22.280" endtime="20201115 22:12:22.290"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:22.320" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:12:22.291" endtime="20201115 22:12:22.320"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:22.331" level="INFO">NAME: 00-overhead-4-remove</msg>
<status status="PASS" starttime="20201115 22:12:22.328" endtime="20201115 22:12:22.331"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:22.336" level="INFO">VALUE: [2.6389999999987257e-06, 2.6390000000056646e-06, 2.7079999999971016e-06, 2.6529999999982956e-06, 2.6249999999991558e-06, 2.6249999999991558e-06, 2.6670000000048044e-06, 2.637999999999252e-06, 2.6669999999978655e-06, 2.6669999999978655e-06, 2.6390000000056646e-06, 2.6530000000052345e-06, 2.6389999999987257e-06, 2.6529999999982956e-06, 2.6249999999991558e-06, 2.6669999999978655e-06, 2.6530000000052345e-06, 2.6529999999982956e-06, 2.651999999998822e-06, 2.6939999999975317e-06, 2.6529999999982956e-06, 2.6249999999991558e-06, 2.6660000000053308e-06, 2.6389999999987257e-06, 2.6389999999987257e-06, 2.6669999999978655e-06, 2.6950000000039442e-06, 2.665999999998392e-06, 2.665999999998392e-06, 2.651999999998822e-06, 2.6389999999987257e-06, 2.6529999999982956e-06, 2.6660000000053308e-06, 2.665999999998392e-06, 2.679999999997962e-06, 2.651999999998822e-06, 2.6669999999978655e-06, 2.6670000000048044e-06, 2.6389999999987257e-06, 2.6529999999982956e-06, 2.665999999998392e-06, 2.6530000000052345e-06, 2.6669999999978655e-06, 2.6530000000052345e-06, 2.7079999999971016e-06, 2.6389999999987257e-06, 2.6670000000048044e-06, 2.665999999998392e-06, 2.6529999999982956e-06, 2.6389999999987257e-06]</msg>
<status status="PASS" starttime="20201115 22:12:22.333" endtime="20201115 22:12:22.337"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:22.322" endtime="20201115 22:12:22.338"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:22.345" endtime="20201115 22:12:22.347"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:22.353" endtime="20201115 22:12:22.375"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:22.349" endtime="20201115 22:12:22.376"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:22.340" endtime="20201115 22:12:22.378"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:21.834" endtime="20201115 22:12:22.378"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:21.831" endtime="20201115 22:12:22.379"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:21.829" endtime="20201115 22:12:22.379"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:22.385" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:22.407" endtime="20201115 22:12:22.425"></status>
</kw>
<msg timestamp="20201115 22:12:22.426" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:22.404" endtime="20201115 22:12:22.427"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:22.432" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:22.429" endtime="20201115 22:12:22.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:22.435" endtime="20201115 22:12:22.438"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:22.397" endtime="20201115 22:12:22.440"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:22.391" endtime="20201115 22:12:22.442"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:22.458" endtime="20201115 22:12:22.797"></status>
</kw>
<msg timestamp="20201115 22:12:22.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046358472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046361361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:22.455" endtime="20201115 22:12:22.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:22.822" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046358472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046361361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:22.806" endtime="20201115 22:12:22.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:22.824" endtime="20201115 22:12:22.828"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:22.448" endtime="20201115 22:12:22.830"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:22.443" endtime="20201115 22:12:22.831"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:22.841" level="INFO">${RESULT} = [{'time': 0.046361361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8889999999989757e-06, 'source_diff': 2.8889999999989757e-06}, {'time': 0.046530958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:12:22.833" endtime="20201115 22:12:22.842"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:22.872" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:12:22.844" endtime="20201115 22:12:22.872"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:22.883" level="INFO">NAME: 00-overhead-5-remove</msg>
<status status="PASS" starttime="20201115 22:12:22.881" endtime="20201115 22:12:22.884"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:22.888" level="INFO">VALUE: [2.8889999999989757e-06, 2.847000000000266e-06, 2.860999999999836e-06, 2.8620000000062484e-06, 2.874999999999406e-06, 2.8479999999997396e-06, 2.916000000005581e-06, 2.8890000000059146e-06, 2.874999999999406e-06, 2.860999999999836e-06, 2.874999999999406e-06, 2.847000000000266e-06, 2.929999999998212e-06, 2.847000000000266e-06, 2.8479999999997396e-06, 2.8479999999997396e-06, 2.860999999999836e-06, 2.8889999999989757e-06, 2.819000000001126e-06, 2.8479999999997396e-06, 2.9029999999985456e-06, 2.860999999999836e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.860999999999836e-06, 2.847000000000266e-06, 2.8889999999989757e-06, 2.847000000000266e-06, 2.860999999999836e-06, 2.860999999999836e-06, 2.860999999999836e-06, 2.860999999999836e-06, 2.8050000000015562e-06, 2.833000000000696e-06, 2.8340000000001697e-06, 2.847000000000266e-06, 2.860999999999836e-06, 2.860999999999836e-06, 2.847000000000266e-06, 2.929999999998212e-06, 2.860999999999836e-06, 2.8889999999989757e-06, 2.847000000000266e-06, 2.860999999999836e-06, 2.847000000000266e-06, 2.8889999999989757e-06, 2.8619999999993095e-06, 2.9169999999981155e-06, 2.8619999999993095e-06, 2.8889999999989757e-06]</msg>
<status status="PASS" starttime="20201115 22:12:22.885" endtime="20201115 22:12:22.889"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:22.874" endtime="20201115 22:12:22.897"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:22.904" endtime="20201115 22:12:22.906"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:22.912" endtime="20201115 22:12:22.934"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:22.908" endtime="20201115 22:12:22.935"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:22.899" endtime="20201115 22:12:22.937"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:22.386" endtime="20201115 22:12:22.937"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:22.382" endtime="20201115 22:12:22.938"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:22.381" endtime="20201115 22:12:22.938"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:22.943" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:22.966" endtime="20201115 22:12:22.985"></status>
</kw>
<msg timestamp="20201115 22:12:22.986" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:22.962" endtime="20201115 22:12:22.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:22.992" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:22.988" endtime="20201115 22:12:22.993"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:22.995" endtime="20201115 22:12:22.998"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:22.955" endtime="20201115 22:12:23.000"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:22.950" endtime="20201115 22:12:23.002"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:23.018" endtime="20201115 22:12:23.369"></status>
</kw>
<msg timestamp="20201115 22:12:23.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045731611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045734681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:23.015" endtime="20201115 22:12:23.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:23.393" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045731611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045734681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:23.378" endtime="20201115 22:12:23.394"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:23.396" endtime="20201115 22:12:23.399"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:23.008" endtime="20201115 22:12:23.401"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:23.003" endtime="20201115 22:12:23.402"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:23.413" level="INFO">${RESULT} = [{'time': 0.045734681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.07000000000085e-06, 'source_diff': 3.07000000000085e-06}, {'time': 0.045918722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:12:23.404" endtime="20201115 22:12:23.413"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:23.443" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:12:23.415" endtime="20201115 22:12:23.444"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:23.454" level="INFO">NAME: 00-overhead-6-remove</msg>
<status status="PASS" starttime="20201115 22:12:23.452" endtime="20201115 22:12:23.455"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:23.459" level="INFO">VALUE: [3.07000000000085e-06, 3.069000000001376e-06, 3.0840000000004197e-06, 3.0549999999948674e-06, 3.07000000000085e-06, 3.0689999999944373e-06, 3.05600000000128e-06, 3.0689999999944373e-06, 3.069000000001376e-06, 3.0979999999999897e-06, 3.02800000000214e-06, 3.083000000000946e-06, 3.01400000000257e-06, 3.0550000000018063e-06, 3.07000000000085e-06, 3.069000000001376e-06, 3.07000000000085e-06, 3.0410000000022364e-06, 3.069000000001376e-06, 3.05600000000128e-06, 3.0979999999999897e-06, 3.07000000000085e-06, 3.04200000000171e-06, 3.069000000001376e-06, 3.0840000000004197e-06, 3.07000000000085e-06, 3.0840000000004197e-06, 3.083000000000946e-06, 3.124999999999656e-06, 3.097000000000516e-06, 3.097000000000516e-06, 3.07000000000085e-06, 3.0689999999944373e-06, 3.083000000000946e-06, 3.055999999994341e-06, 3.05600000000128e-06, 3.0550000000018063e-06, 3.069000000001376e-06, 3.01400000000257e-06, 3.069000000001376e-06, 3.097000000000516e-06, 3.0979999999999897e-06, 3.07000000000085e-06, 3.05600000000128e-06, 3.083000000000946e-06, 3.083000000000946e-06, 3.055999999994341e-06, 3.0410000000022364e-06, 3.0840000000004197e-06, 3.069000000001376e-06]</msg>
<status status="PASS" starttime="20201115 22:12:23.456" endtime="20201115 22:12:23.461"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:23.445" endtime="20201115 22:12:23.462"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:23.469" endtime="20201115 22:12:23.471"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:23.477" endtime="20201115 22:12:23.499"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:23.472" endtime="20201115 22:12:23.500"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:23.464" endtime="20201115 22:12:23.502"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:22.944" endtime="20201115 22:12:23.502"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:22.941" endtime="20201115 22:12:23.503"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:22.939" endtime="20201115 22:12:23.503"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:23.508" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:23.531" endtime="20201115 22:12:23.551"></status>
</kw>
<msg timestamp="20201115 22:12:23.552" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:23.528" endtime="20201115 22:12:23.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:23.559" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:23.555" endtime="20201115 22:12:23.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:23.561" endtime="20201115 22:12:23.565"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:23.520" endtime="20201115 22:12:23.567"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:23.515" endtime="20201115 22:12:23.568"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:23.585" endtime="20201115 22:12:23.935"></status>
</kw>
<msg timestamp="20201115 22:12:23.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046129806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046133069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:23.582" endtime="20201115 22:12:23.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:23.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046129806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046133069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:23.944" endtime="20201115 22:12:23.961"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:23.962" endtime="20201115 22:12:23.968"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:23.574" endtime="20201115 22:12:23.969"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:23.569" endtime="20201115 22:12:23.971"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:23.981" level="INFO">${RESULT} = [{'time': 0.046133069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.2629999999964077e-06, 'source_diff': 3.2629999999964077e-06}, {'time': 0.04633425, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:12:23.972" endtime="20201115 22:12:23.982"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:24.012" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:12:23.983" endtime="20201115 22:12:24.013"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:24.023" level="INFO">NAME: 00-overhead-7-remove</msg>
<status status="PASS" starttime="20201115 22:12:24.021" endtime="20201115 22:12:24.024"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:24.029" level="INFO">VALUE: [3.2629999999964077e-06, 3.29200000000196e-06, 3.2639999999958813e-06, 3.2359999999967415e-06, 3.27800000000239e-06, 3.291999999995021e-06, 3.2770000000029165e-06, 3.26400000000282e-06, 3.29200000000196e-06, 3.27800000000239e-06, 3.2770000000029165e-06, 3.2499999999963114e-06, 3.2770000000029165e-06, 3.333000000001196e-06, 3.2909999999955475e-06, 3.2639999999958813e-06, 3.3200000000011e-06, 3.2769999999959776e-06, 3.30600000000153e-06, 3.2220000000041105e-06, 3.2769999999959776e-06, 3.27800000000239e-06, 3.291999999995021e-06, 3.29200000000196e-06, 3.3050000000020563e-06, 3.2220000000041105e-06, 3.2499999999963114e-06, 3.27800000000239e-06, 3.3200000000011e-06, 3.2770000000029165e-06, 3.2229999999966452e-06, 3.2779999999954512e-06, 3.291999999995021e-06, 3.27800000000239e-06, 3.26400000000282e-06, 3.26400000000282e-06, 3.29200000000196e-06, 3.29200000000196e-06, 3.26400000000282e-06, 3.291999999995021e-06, 3.27800000000239e-06, 3.2910000000024864e-06, 3.29200000000196e-06, 3.30600000000153e-06, 3.30600000000153e-06, 3.27800000000239e-06, 3.2770000000029165e-06, 3.26400000000282e-06, 3.27800000000239e-06, 3.3200000000011e-06]</msg>
<status status="PASS" starttime="20201115 22:12:24.026" endtime="20201115 22:12:24.029"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:24.014" endtime="20201115 22:12:24.031"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:24.037" endtime="20201115 22:12:24.040"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:24.045" endtime="20201115 22:12:24.067"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:24.041" endtime="20201115 22:12:24.069"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:24.033" endtime="20201115 22:12:24.071"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:23.509" endtime="20201115 22:12:24.071"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:23.506" endtime="20201115 22:12:24.072"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:23.504" endtime="20201115 22:12:24.072"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:24.077" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:24.100" endtime="20201115 22:12:24.121"></status>
</kw>
<msg timestamp="20201115 22:12:24.122" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:24.096" endtime="20201115 22:12:24.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:24.128" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:24.124" endtime="20201115 22:12:24.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:24.130" endtime="20201115 22:12:24.134"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:24.089" endtime="20201115 22:12:24.136"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:24.084" endtime="20201115 22:12:24.137"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:24.153" endtime="20201115 22:12:24.503"></status>
</kw>
<msg timestamp="20201115 22:12:24.510" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045994694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045998167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:24.150" endtime="20201115 22:12:24.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:24.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045994694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045998167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:24.512" endtime="20201115 22:12:24.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:24.532" endtime="20201115 22:12:24.535"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:24.143" endtime="20201115 22:12:24.537"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:24.138" endtime="20201115 22:12:24.538"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:24.549" level="INFO">${RESULT} = [{'time': 0.045998167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4729999999968952e-06, 'source_diff': 3.4729999999968952e-06}, {'time': 0.046223958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:12:24.540" endtime="20201115 22:12:24.549"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:24.579" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:12:24.551" endtime="20201115 22:12:24.580"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:24.590" level="INFO">NAME: 00-overhead-8-remove</msg>
<status status="PASS" starttime="20201115 22:12:24.588" endtime="20201115 22:12:24.591"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:24.595" level="INFO">VALUE: [3.4729999999968952e-06, 3.5550000000023063e-06, 3.4859999999969915e-06, 3.5139999999961313e-06, 3.5000000000035003e-06, 3.4860000000039304e-06, 3.4729999999968952e-06, 3.4859999999969915e-06, 3.4859999999969915e-06, 3.4860000000039304e-06, 3.5140000000030702e-06, 3.4860000000039304e-06, 3.4860000000039304e-06, 3.4860000000039304e-06, 3.4859999999969915e-06, 3.4859999999969915e-06, 3.5000000000035003e-06, 3.4999999999965614e-06, 3.5140000000030702e-06, 3.5139999999961313e-06, 3.4720000000043605e-06, 3.4860000000039304e-06, 3.5129999999966577e-06, 3.5000000000035003e-06, 3.54200000000221e-06, 3.4999999999965614e-06, 3.4720000000043605e-06, 3.5139999999961313e-06, 3.4720000000043605e-06, 3.5000000000035003e-06, 3.401999999999572e-06, 3.5139999999961313e-06, 3.5139999999961313e-06, 3.4860000000039304e-06, 3.4859999999969915e-06, 3.4729999999968952e-06, 3.4719999999974216e-06, 3.5000000000035003e-06, 3.4859999999969915e-06, 3.4859999999969915e-06, 3.4439999999982818e-06, 3.4450000000046943e-06, 3.5550000000023063e-06, 3.4859999999969915e-06, 3.4999999999965614e-06, 3.5000000000035003e-06, 3.5000000000035003e-06, 3.5139999999961313e-06, 3.4719999999974216e-06, 3.55600000000178e-06]</msg>
<status status="PASS" starttime="20201115 22:12:24.592" endtime="20201115 22:12:24.596"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:24.581" endtime="20201115 22:12:24.598"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:24.605" endtime="20201115 22:12:24.607"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:24.613" endtime="20201115 22:12:24.635"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:24.609" endtime="20201115 22:12:24.637"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:24.600" endtime="20201115 22:12:24.639"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:24.078" endtime="20201115 22:12:24.639"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:24.075" endtime="20201115 22:12:24.640"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:24.073" endtime="20201115 22:12:24.640"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:24.645" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:24.668" endtime="20201115 22:12:24.690"></status>
</kw>
<msg timestamp="20201115 22:12:24.691" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:24.665" endtime="20201115 22:12:24.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:24.697" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:24.693" endtime="20201115 22:12:24.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:24.700" endtime="20201115 22:12:24.703"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:24.657" endtime="20201115 22:12:24.705"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:24.652" endtime="20201115 22:12:24.706"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:24.723" endtime="20201115 22:12:25.075"></status>
</kw>
<msg timestamp="20201115 22:12:25.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046302917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046306653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:24.720" endtime="20201115 22:12:25.083"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:25.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046302917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046306653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:25.085" endtime="20201115 22:12:25.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:25.103" endtime="20201115 22:12:25.107"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:24.712" endtime="20201115 22:12:25.108"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:24.708" endtime="20201115 22:12:25.110"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:25.120" level="INFO">${RESULT} = [{'time': 0.046306653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7360000000041804e-06, 'source_diff': 3.7360000000041804e-06}, {'time': 0.046550264, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:12:25.111" endtime="20201115 22:12:25.121"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:25.150" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:12:25.122" endtime="20201115 22:12:25.151"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:25.161" level="INFO">NAME: 00-overhead-9-remove</msg>
<status status="PASS" starttime="20201115 22:12:25.159" endtime="20201115 22:12:25.162"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:25.167" level="INFO">VALUE: [3.7360000000041804e-06, 3.7079999999981017e-06, 3.6809999999984355e-06, 3.7079999999981017e-06, 3.7640000000033202e-06, 3.7499999999968114e-06, 3.7079999999981017e-06, 3.7500000000037503e-06, 3.6940000000054707e-06, 3.7229999999971453e-06, 3.7079999999981017e-06, 3.693999999998532e-06, 3.693999999998532e-06, 3.6809999999984355e-06, 3.6809999999984355e-06, 3.7219999999976716e-06, 3.6940000000054707e-06, 3.6949999999980054e-06, 3.6669999999988656e-06, 3.6809999999984355e-06, 3.7089999999975753e-06, 3.7090000000045142e-06, 3.6949999999980054e-06, 3.7090000000045142e-06, 3.7220000000046105e-06, 3.7220000000046105e-06, 3.6949999999980054e-06, 3.6950000000049443e-06, 3.7079999999981017e-06, 3.7640000000033202e-06, 3.7360000000041804e-06, 3.7219999999976716e-06, 3.7079999999981017e-06, 3.6950000000049443e-06, 3.7079999999981017e-06, 3.7090000000045142e-06, 3.6949999999980054e-06, 3.679999999998962e-06, 3.7079999999981017e-06, 3.679999999998962e-06, 3.6669999999988656e-06, 3.6809999999984355e-06, 3.6389999999997258e-06, 3.6529999999992957e-06, 3.6529999999992957e-06, 3.693999999998532e-06, 3.6940000000054707e-06, 3.7079999999981017e-06, 3.7220000000046105e-06, 3.6949999999980054e-06]</msg>
<status status="PASS" starttime="20201115 22:12:25.164" endtime="20201115 22:12:25.168"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:25.152" endtime="20201115 22:12:25.169"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:25.176" endtime="20201115 22:12:25.178"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:25.184" endtime="20201115 22:12:25.205"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:25.179" endtime="20201115 22:12:25.207"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:25.171" endtime="20201115 22:12:25.209"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:24.646" endtime="20201115 22:12:25.209"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:24.643" endtime="20201115 22:12:25.210"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:24.641" endtime="20201115 22:12:25.210"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:25.215" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:25.238" endtime="20201115 22:12:25.260"></status>
</kw>
<msg timestamp="20201115 22:12:25.261" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:25.234" endtime="20201115 22:12:25.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:25.268" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:25.264" endtime="20201115 22:12:25.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:25.271" endtime="20201115 22:12:25.274"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:25.227" endtime="20201115 22:12:25.276"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:25.221" endtime="20201115 22:12:25.277"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:25.294" endtime="20201115 22:12:25.631"></status>
</kw>
<msg timestamp="20201115 22:12:25.638" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045905444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045909347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:25.290" endtime="20201115 22:12:25.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:25.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045905444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045909347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:25.640" endtime="20201115 22:12:25.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:25.659" endtime="20201115 22:12:25.664"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:25.283" endtime="20201115 22:12:25.666"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:25.279" endtime="20201115 22:12:25.668"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:25.678" level="INFO">${RESULT} = [{'time': 0.045909347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.903000000006485e-06, 'source_diff': 3.903000000006485e-06}, {'time': 0.046172056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:12:25.669" endtime="20201115 22:12:25.679"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:25.708" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:12:25.680" endtime="20201115 22:12:25.709"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:25.719" level="INFO">NAME: 00-overhead-10-remove</msg>
<status status="PASS" starttime="20201115 22:12:25.717" endtime="20201115 22:12:25.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:25.725" level="INFO">VALUE: [3.903000000006485e-06, 3.902999999999546e-06, 3.902999999999546e-06, 3.902999999999546e-06, 3.888999999999976e-06, 3.915999999999642e-06, 3.916999999999116e-06, 3.902999999999546e-06, 3.902999999999546e-06, 3.916999999999116e-06, 3.888999999999976e-06, 3.915999999999642e-06, 3.8200000000016e-06, 3.902999999999546e-06, 3.929999999999212e-06, 3.902999999999546e-06, 3.915999999999642e-06, 3.888999999999976e-06, 3.902999999999546e-06, 3.915999999999642e-06, 3.888999999999976e-06, 3.9309999999986855e-06, 3.915999999999642e-06, 3.915999999999642e-06, 3.915999999999642e-06, 3.902000000000072e-06, 3.861000000000836e-06, 3.902999999999546e-06, 3.916999999999116e-06, 3.902999999999546e-06, 3.902999999999546e-06, 3.9449999999982555e-06, 3.888999999999976e-06, 3.902999999999546e-06, 3.9309999999986855e-06, 3.888999999999976e-06, 3.915999999999642e-06, 3.9309999999986855e-06, 3.902999999999546e-06, 3.945000000005194e-06, 3.902999999999546e-06, 3.902999999999546e-06, 3.916999999999116e-06, 3.902999999999546e-06, 3.888999999999976e-06, 3.902000000000072e-06, 3.9449999999982555e-06, 3.916999999999116e-06, 3.902999999999546e-06, 3.902999999999546e-06]</msg>
<status status="PASS" starttime="20201115 22:12:25.722" endtime="20201115 22:12:25.726"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:25.710" endtime="20201115 22:12:25.727"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:25.733" endtime="20201115 22:12:25.736"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:25.742" endtime="20201115 22:12:25.763"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:25.737" endtime="20201115 22:12:25.765"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:25.729" endtime="20201115 22:12:25.766"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:25.216" endtime="20201115 22:12:25.767"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:25.213" endtime="20201115 22:12:25.768"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:25.211" endtime="20201115 22:12:25.768"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:25.773" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:25.796" endtime="20201115 22:12:25.820"></status>
</kw>
<msg timestamp="20201115 22:12:25.821" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:25.793" endtime="20201115 22:12:25.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:25.828" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:25.824" endtime="20201115 22:12:25.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:25.830" endtime="20201115 22:12:25.834"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:25.786" endtime="20201115 22:12:25.835"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:25.779" endtime="20201115 22:12:25.837"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:25.853" endtime="20201115 22:12:26.191"></status>
</kw>
<msg timestamp="20201115 22:12:26.198" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046802833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046807014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:25.850" endtime="20201115 22:12:26.199"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:26.216" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046802833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046807014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:26.200" endtime="20201115 22:12:26.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:26.218" endtime="20201115 22:12:26.222"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:25.842" endtime="20201115 22:12:26.224"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:25.838" endtime="20201115 22:12:26.225"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:26.236" level="INFO">${RESULT} = [{'time': 0.046807014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1809999999989356e-06, 'source_diff': 4.1809999999989356e-06}, {'time': 0.047093514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:12:26.227" endtime="20201115 22:12:26.236"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:26.266" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:12:26.238" endtime="20201115 22:12:26.266"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:26.276" level="INFO">NAME: 00-overhead-11-remove</msg>
<status status="PASS" starttime="20201115 22:12:26.274" endtime="20201115 22:12:26.277"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:26.282" level="INFO">VALUE: [4.1809999999989356e-06, 4.111000000001086e-06, 4.096999999994577e-06, 4.125000000000656e-06, 4.166999999999366e-06, 4.111000000001086e-06, 4.111000000001086e-06, 4.083000000001946e-06, 4.111000000001086e-06, 4.166999999999366e-06, 4.138000000000752e-06, 4.097000000001516e-06, 4.110999999994147e-06, 4.152999999999796e-06, 4.125000000000656e-06, 4.111000000001086e-06, 4.097000000001516e-06, 4.125000000000656e-06, 4.111000000001086e-06, 4.09800000000099e-06, 4.111000000001086e-06, 4.125000000000656e-06, 4.110999999994147e-06, 4.07000000000185e-06, 4.110999999994147e-06, 4.152999999999796e-06, 4.111000000001086e-06, 4.165999999999892e-06, 4.111000000001086e-06, 4.125000000000656e-06, 4.111000000001086e-06, 4.125000000000656e-06, 4.125000000000656e-06, 4.111000000001086e-06, 4.125000000000656e-06, 4.111000000001086e-06, 4.097000000001516e-06, 4.125000000000656e-06, 4.152999999999796e-06, 4.097000000001516e-06, 4.111000000001086e-06, 4.111000000001086e-06, 4.09800000000099e-06, 4.139000000000226e-06, 4.097000000001516e-06, 4.125000000000656e-06, 4.097000000001516e-06, 4.139000000000226e-06, 4.097000000001516e-06, 4.111000000001086e-06]</msg>
<status status="PASS" starttime="20201115 22:12:26.279" endtime="20201115 22:12:26.283"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:26.267" endtime="20201115 22:12:26.284"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:26.291" endtime="20201115 22:12:26.293"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:26.299" endtime="20201115 22:12:26.321"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:26.294" endtime="20201115 22:12:26.323"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:26.286" endtime="20201115 22:12:26.324"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:25.774" endtime="20201115 22:12:26.325"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:25.771" endtime="20201115 22:12:26.325"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:25.769" endtime="20201115 22:12:26.326"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:26.331" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:26.353" endtime="20201115 22:12:26.378"></status>
</kw>
<msg timestamp="20201115 22:12:26.379" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:26.350" endtime="20201115 22:12:26.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:26.386" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:26.382" endtime="20201115 22:12:26.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:26.388" endtime="20201115 22:12:26.392"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:26.343" endtime="20201115 22:12:26.393"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:26.337" endtime="20201115 22:12:26.395"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:26.411" endtime="20201115 22:12:26.749"></status>
</kw>
<msg timestamp="20201115 22:12:26.756" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046083639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046087972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:26.408" endtime="20201115 22:12:26.756"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:26.774" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046083639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046087972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:26.758" endtime="20201115 22:12:26.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:26.776" endtime="20201115 22:12:26.782"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:26.401" endtime="20201115 22:12:26.783"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:26.396" endtime="20201115 22:12:26.785"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:26.795" level="INFO">${RESULT} = [{'time': 0.046087972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.332999999995257e-06, 'source_diff': 4.332999999995257e-06}, {'time': 0.0463975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:12:26.786" endtime="20201115 22:12:26.796"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:26.825" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:12:26.797" endtime="20201115 22:12:26.826"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:26.836" level="INFO">NAME: 00-overhead-12-remove</msg>
<status status="PASS" starttime="20201115 22:12:26.834" endtime="20201115 22:12:26.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:26.841" level="INFO">VALUE: [4.332999999995257e-06, 4.30600000000253e-06, 4.333000000002196e-06, 4.375000000000906e-06, 4.333000000002196e-06, 4.3200000000021e-06, 4.277999999996451e-06, 4.333000000002196e-06, 4.318999999995687e-06, 4.319999999995161e-06, 4.33400000000167e-06, 4.276999999996978e-06, 4.332999999995257e-06, 4.33400000000167e-06, 4.30600000000253e-06, 4.30600000000253e-06, 4.332999999995257e-06, 4.332999999995257e-06, 4.3200000000021e-06, 4.3200000000021e-06, 4.318999999995687e-06, 4.333999999994731e-06, 4.319999999995161e-06, 4.2909999999965476e-06, 4.319999999995161e-06, 4.319999999995161e-06, 4.333000000002196e-06, 4.33400000000167e-06, 4.319000000002626e-06, 4.305000000003056e-06, 4.319000000002626e-06, 4.305000000003056e-06, 4.2910000000034865e-06, 4.332999999995257e-06, 4.33400000000167e-06, 4.333999999994731e-06, 4.33400000000167e-06, 4.333000000002196e-06, 4.319000000002626e-06, 4.333000000002196e-06, 4.333000000002196e-06, 4.2909999999965476e-06, 4.318999999995687e-06, 4.305999999995591e-06, 4.318999999995687e-06, 4.30600000000253e-06, 4.319999999995161e-06, 4.319999999995161e-06, 4.375000000000906e-06, 4.3049999999961175e-06]</msg>
<status status="PASS" starttime="20201115 22:12:26.838" endtime="20201115 22:12:26.843"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:26.827" endtime="20201115 22:12:26.845"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:26.851" endtime="20201115 22:12:26.854"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:26.859" endtime="20201115 22:12:26.881"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:26.855" endtime="20201115 22:12:26.882"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:26.846" endtime="20201115 22:12:26.884"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:26.332" endtime="20201115 22:12:26.884"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:26.328" endtime="20201115 22:12:26.885"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:26.327" endtime="20201115 22:12:26.885"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:26.890" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:26.913" endtime="20201115 22:12:26.939"></status>
</kw>
<msg timestamp="20201115 22:12:26.940" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:26.909" endtime="20201115 22:12:26.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:26.946" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:26.942" endtime="20201115 22:12:26.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:26.949" endtime="20201115 22:12:26.952"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:26.902" endtime="20201115 22:12:26.954"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:26.897" endtime="20201115 22:12:26.955"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:26.972" endtime="20201115 22:12:27.312"></status>
</kw>
<msg timestamp="20201115 22:12:27.319" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0459965, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046001014, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:12:26.968" endtime="20201115 22:12:27.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:27.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0459965, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046001014, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:12:27.321" endtime="20201115 22:12:27.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:27.339" endtime="20201115 22:12:27.343"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:26.961" endtime="20201115 22:12:27.344"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:26.957" endtime="20201115 22:12:27.346"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:27.356" level="INFO">${RESULT} = [{'time': 0.046001014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.513999999997131e-06, 'source_diff': 4.513999999997131e-06}, {'time': 0.04633525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:12:27.347" endtime="20201115 22:12:27.357"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:27.386" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:12:27.358" endtime="20201115 22:12:27.387"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:27.397" level="INFO">NAME: 00-overhead-13-remove</msg>
<status status="PASS" starttime="20201115 22:12:27.395" endtime="20201115 22:12:27.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:27.403" level="INFO">VALUE: [4.513999999997131e-06, 4.485999999997992e-06, 4.527999999996701e-06, 4.5410000000037365e-06, 4.52800000000364e-06, 4.52800000000364e-06, 4.52800000000364e-06, 4.54200000000321e-06, 4.513999999997131e-06, 4.527999999996701e-06, 4.527999999996701e-06, 4.555000000003306e-06, 4.513999999997131e-06, 4.527999999996701e-06, 4.4860000000049305e-06, 4.541999999996271e-06, 4.513999999997131e-06, 4.57000000000235e-06, 4.52800000000364e-06, 4.526999999997228e-06, 4.52800000000364e-06, 4.527999999996701e-06, 4.54200000000321e-06, 4.443999999999282e-06, 4.52800000000364e-06, 4.55600000000278e-06, 4.54200000000321e-06, 4.5410000000037365e-06, 4.471999999998422e-06, 4.5410000000037365e-06, 4.540999999996798e-06, 4.527999999996701e-06, 4.527000000004167e-06, 4.513999999997131e-06, 4.51400000000407e-06, 4.51400000000407e-06, 4.569000000002876e-06, 4.526999999997228e-06, 4.526999999997228e-06, 4.54200000000321e-06, 4.5549999999963675e-06, 4.527999999996701e-06, 4.57000000000235e-06, 4.5549999999963675e-06, 4.527999999996701e-06, 4.569000000002876e-06, 4.527999999996701e-06, 4.485999999997992e-06, 4.513999999997131e-06, 4.52800000000364e-06]</msg>
<status status="PASS" starttime="20201115 22:12:27.399" endtime="20201115 22:12:27.404"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:27.388" endtime="20201115 22:12:27.406"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:27.412" endtime="20201115 22:12:27.414"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:27.420" endtime="20201115 22:12:27.441"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:27.416" endtime="20201115 22:12:27.443"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:27.407" endtime="20201115 22:12:27.445"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:26.891" endtime="20201115 22:12:27.445"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:26.888" endtime="20201115 22:12:27.446"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:26.886" endtime="20201115 22:12:27.446"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:27.451" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:27.474" endtime="20201115 22:12:27.501"></status>
</kw>
<msg timestamp="20201115 22:12:27.502" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:27.470" endtime="20201115 22:12:27.503"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:27.509" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:27.505" endtime="20201115 22:12:27.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:27.511" endtime="20201115 22:12:27.515"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:27.463" endtime="20201115 22:12:27.516"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:27.458" endtime="20201115 22:12:27.518"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:27.534" endtime="20201115 22:12:27.871"></status>
</kw>
<msg timestamp="20201115 22:12:27.878" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046180764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0461855, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:12:27.531" endtime="20201115 22:12:27.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:27.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046180764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0461855, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:12:27.881" endtime="20201115 22:12:27.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:27.899" endtime="20201115 22:12:27.904"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:27.523" endtime="20201115 22:12:27.906"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:27.519" endtime="20201115 22:12:27.907"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:27.917" level="INFO">${RESULT} = [{'time': 0.0461855, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.735999999998242e-06, 'source_diff': 4.735999999998242e-06}, {'time': 0.046545694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:12:27.909" endtime="20201115 22:12:27.918"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:27.953" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:12:27.925" endtime="20201115 22:12:27.953"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:27.964" level="INFO">NAME: 00-overhead-14-remove</msg>
<status status="PASS" starttime="20201115 22:12:27.962" endtime="20201115 22:12:27.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:27.969" level="INFO">VALUE: [4.735999999998242e-06, 4.8049999999966175e-06, 4.735999999998242e-06, 4.75000000000475e-06, 4.693999999999532e-06, 4.721999999998672e-06, 4.763000000004847e-06, 4.735999999998242e-06, 4.735999999998242e-06, 4.735999999998242e-06, 4.737000000004654e-06, 4.7499999999978115e-06, 4.735999999998242e-06, 4.7499999999978115e-06, 4.75000000000475e-06, 4.735999999998242e-06, 4.735999999998242e-06, 4.7360000000051805e-06, 4.7499999999978115e-06, 4.721999999998672e-06, 4.7360000000051805e-06, 4.79200000000346e-06, 4.75000000000475e-06, 4.721999999998672e-06, 4.737000000004654e-06, 4.7360000000051805e-06, 4.7499999999978115e-06, 4.7499999999978115e-06, 4.7910000000039865e-06, 4.79200000000346e-06, 4.707999999999102e-06, 4.735999999998242e-06, 4.7360000000051805e-06, 4.735999999998242e-06, 4.722999999998145e-06, 4.7499999999978115e-06, 4.75000000000475e-06, 4.7639999999973814e-06, 4.735999999998242e-06, 4.709000000005514e-06, 4.7499999999978115e-06, 4.7360000000051805e-06, 4.7499999999978115e-06, 4.7360000000051805e-06, 4.75000000000475e-06, 4.721999999998672e-06, 4.7499999999978115e-06, 4.7499999999978115e-06, 4.735999999991303e-06, 4.763000000004847e-06]</msg>
<status status="PASS" starttime="20201115 22:12:27.966" endtime="20201115 22:12:27.970"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:27.955" endtime="20201115 22:12:27.971"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:27.978" endtime="20201115 22:12:27.980"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:27.986" endtime="20201115 22:12:28.008"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:27.982" endtime="20201115 22:12:28.010"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:27.973" endtime="20201115 22:12:28.011"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:27.452" endtime="20201115 22:12:28.012"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:27.449" endtime="20201115 22:12:28.012"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:27.447" endtime="20201115 22:12:28.013"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:28.017" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:28.040" endtime="20201115 22:12:28.069"></status>
</kw>
<msg timestamp="20201115 22:12:28.070" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:28.037" endtime="20201115 22:12:28.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:28.076" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:28.072" endtime="20201115 22:12:28.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:28.078" endtime="20201115 22:12:28.082"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:28.030" endtime="20201115 22:12:28.083"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:28.024" endtime="20201115 22:12:28.085"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:28.101" endtime="20201115 22:12:28.439"></status>
</kw>
<msg timestamp="20201115 22:12:28.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046183472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046188417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:28.098" endtime="20201115 22:12:28.447"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:28.464" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046183472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046188417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:28.448" endtime="20201115 22:12:28.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:28.467" endtime="20201115 22:12:28.471"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:28.091" endtime="20201115 22:12:28.472"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:28.086" endtime="20201115 22:12:28.474"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:28.484" level="INFO">${RESULT} = [{'time': 0.046188417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.9449999999992555e-06, 'source_diff': 4.9449999999992555e-06}, {'time': 0.046572958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:12:28.475" endtime="20201115 22:12:28.485"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:28.515" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:12:28.486" endtime="20201115 22:12:28.515"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:28.526" level="INFO">NAME: 00-overhead-15-remove</msg>
<status status="PASS" starttime="20201115 22:12:28.523" endtime="20201115 22:12:28.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:28.531" level="INFO">VALUE: [4.9449999999992555e-06, 4.957999999999352e-06, 5.0000000000050004e-06, 4.943999999999782e-06, 4.9449999999992555e-06, 4.943999999999782e-06, 4.944000000006721e-06, 4.930000000000212e-06, 4.9589999999988255e-06, 4.943999999999782e-06, 4.957999999999352e-06, 4.957999999999352e-06, 4.9589999999988255e-06, 4.957999999999352e-06, 4.929999999993273e-06, 4.930999999999686e-06, 4.9449999999992555e-06, 4.943999999999782e-06, 4.930000000000212e-06, 4.930000000000212e-06, 4.943999999999782e-06, 4.943999999999782e-06, 4.957999999999352e-06, 4.972999999998395e-06, 4.971999999998922e-06, 4.943999999999782e-06, 4.943999999999782e-06, 4.9999999999980616e-06, 4.957999999999352e-06, 4.9589999999988255e-06, 4.903000000000546e-06, 4.9999999999980616e-06, 4.943999999999782e-06, 4.9589999999988255e-06, 4.875000000001406e-06, 4.957999999999352e-06, 4.917000000000116e-06, 4.9449999999992555e-06, 4.9589999999988255e-06, 4.973000000005334e-06, 4.943999999999782e-06, 4.957999999999352e-06, 4.930000000000212e-06, 4.943999999992843e-06, 4.875000000001406e-06, 4.930000000000212e-06, 4.9450000000061944e-06, 4.889000000007915e-06, 4.944000000006721e-06, 4.915999999993703e-06]</msg>
<status status="PASS" starttime="20201115 22:12:28.528" endtime="20201115 22:12:28.532"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:28.516" endtime="20201115 22:12:28.534"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:28.540" endtime="20201115 22:12:28.542"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:28.548" endtime="20201115 22:12:28.570"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:28.544" endtime="20201115 22:12:28.571"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:28.535" endtime="20201115 22:12:28.573"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:28.019" endtime="20201115 22:12:28.573"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:28.015" endtime="20201115 22:12:28.574"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:28.014" endtime="20201115 22:12:28.574"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:28.579" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:28.602" endtime="20201115 22:12:28.632"></status>
</kw>
<msg timestamp="20201115 22:12:28.633" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:28.598" endtime="20201115 22:12:28.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:28.639" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:28.635" endtime="20201115 22:12:28.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:28.641" endtime="20201115 22:12:28.645"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:28.591" endtime="20201115 22:12:28.646"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:28.586" endtime="20201115 22:12:28.648"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:28.665" endtime="20201115 22:12:29.002"></status>
</kw>
<msg timestamp="20201115 22:12:29.008" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045902722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045907875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:28.661" endtime="20201115 22:12:29.009"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:29.026" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045902722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045907875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:29.011" endtime="20201115 22:12:29.027"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:29.028" endtime="20201115 22:12:29.034"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:28.654" endtime="20201115 22:12:29.035"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:28.649" endtime="20201115 22:12:29.037"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:29.047" level="INFO">${RESULT} = [{'time': 0.045907875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.153000000000796e-06, 'source_diff': 5.153000000000796e-06}, {'time': 0.046314625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:12:29.038" endtime="20201115 22:12:29.048"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:29.077" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:12:29.049" endtime="20201115 22:12:29.078"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:29.088" level="INFO">NAME: 00-overhead-16-remove</msg>
<status status="PASS" starttime="20201115 22:12:29.086" endtime="20201115 22:12:29.089"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:29.093" level="INFO">VALUE: [5.153000000000796e-06, 5.153000000000796e-06, 5.167000000000366e-06, 5.153000000000796e-06, 5.167000000000366e-06, 5.167000000000366e-06, 5.152999999993857e-06, 5.180999999999936e-06, 5.139000000001226e-06, 5.152000000001322e-06, 5.139000000001226e-06, 5.194000000000032e-06, 5.167000000000366e-06, 5.138999999994287e-06, 5.166000000000892e-06, 5.138999999994287e-06, 5.179999999993523e-06, 5.153000000000796e-06, 5.153000000000796e-06, 5.166999999993427e-06, 5.167000000000366e-06, 5.153000000000796e-06, 5.166000000000892e-06, 5.207999999999602e-06, 5.082999999996007e-06, 5.1949999999995056e-06, 5.180999999999936e-06, 5.180000000000462e-06, 5.167000000000366e-06, 5.167000000000366e-06, 5.152999999993857e-06, 5.09800000000199e-06, 5.152000000001322e-06, 5.153000000000796e-06, 5.1949999999995056e-06, 5.180999999999936e-06, 5.180999999999936e-06, 5.139000000001226e-06, 5.138000000001752e-06, 5.167000000000366e-06, 5.153000000000796e-06, 5.152999999993857e-06, 5.152999999993857e-06, 5.153000000007735e-06, 5.1810000000068746e-06, 5.152999999993857e-06, 5.1810000000068746e-06, 5.152999999993857e-06, 5.166000000000892e-06, 5.194000000000032e-06]</msg>
<status status="PASS" starttime="20201115 22:12:29.090" endtime="20201115 22:12:29.094"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:29.079" endtime="20201115 22:12:29.096"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:29.102" endtime="20201115 22:12:29.105"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:29.110" endtime="20201115 22:12:29.132"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:29.106" endtime="20201115 22:12:29.133"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:29.097" endtime="20201115 22:12:29.135"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:28.580" endtime="20201115 22:12:29.136"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:28.577" endtime="20201115 22:12:29.136"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:28.575" endtime="20201115 22:12:29.137"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:29.141" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:29.164" endtime="20201115 22:12:29.195"></status>
</kw>
<msg timestamp="20201115 22:12:29.196" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:29.161" endtime="20201115 22:12:29.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:29.203" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:29.199" endtime="20201115 22:12:29.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:29.206" endtime="20201115 22:12:29.209"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:29.154" endtime="20201115 22:12:29.211"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:29.148" endtime="20201115 22:12:29.212"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:29.229" endtime="20201115 22:12:29.570"></status>
</kw>
<msg timestamp="20201115 22:12:29.577" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046210125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0462155, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:12:29.226" endtime="20201115 22:12:29.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:29.595" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046210125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0462155, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:12:29.580" endtime="20201115 22:12:29.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:29.598" endtime="20201115 22:12:29.601"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:29.218" endtime="20201115 22:12:29.603"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:29.214" endtime="20201115 22:12:29.604"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:29.615" level="INFO">${RESULT} = [{'time': 0.0462155, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.375000000001906e-06, 'source_diff': 5.375000000001906e-06}, {'time': 0.046650556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:12:29.606" endtime="20201115 22:12:29.615"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:29.645" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:12:29.617" endtime="20201115 22:12:29.645"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:29.655" level="INFO">NAME: 00-overhead-17-remove</msg>
<status status="PASS" starttime="20201115 22:12:29.653" endtime="20201115 22:12:29.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:29.661" level="INFO">VALUE: [5.375000000001906e-06, 5.444999999999756e-06, 5.360999999995397e-06, 5.388999999994537e-06, 5.429999999993773e-06, 5.375000000001906e-06, 5.403000000001046e-06, 5.375000000001906e-06, 5.33400000000267e-06, 5.360999999995397e-06, 5.360999999995397e-06, 5.374999999994967e-06, 5.347000000002766e-06, 5.361000000002336e-06, 5.347000000002766e-06, 5.360999999995397e-06, 5.375000000001906e-06, 5.29200000000396e-06, 5.361000000002336e-06, 5.361000000002336e-06, 5.375000000001906e-06, 5.360999999995397e-06, 5.374999999994967e-06, 5.374999999994967e-06, 5.375000000001906e-06, 5.375000000001906e-06, 5.361000000002336e-06, 5.374999999994967e-06, 5.374999999994967e-06, 5.375000000001906e-06, 5.375000000001906e-06, 5.374999999994967e-06, 5.361000000002336e-06, 5.361000000002336e-06, 5.375000000001906e-06, 5.346999999995827e-06, 5.375000000001906e-06, 5.347000000002766e-06, 5.34800000000224e-06, 5.346999999988888e-06, 5.360999999995397e-06, 5.374999999988028e-06, 5.375000000001906e-06, 5.375000000001906e-06, 5.361000000009275e-06, 5.403000000001046e-06, 5.361000000009275e-06, 5.403000000001046e-06, 5.360999999995397e-06, 5.375000000001906e-06]</msg>
<status status="PASS" starttime="20201115 22:12:29.658" endtime="20201115 22:12:29.661"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:29.646" endtime="20201115 22:12:29.663"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:29.670" endtime="20201115 22:12:29.672"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:29.678" endtime="20201115 22:12:29.699"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:29.673" endtime="20201115 22:12:29.701"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:29.665" endtime="20201115 22:12:29.702"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:29.142" endtime="20201115 22:12:29.703"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:29.139" endtime="20201115 22:12:29.704"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:29.137" endtime="20201115 22:12:29.704"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:29.709" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:29.733" endtime="20201115 22:12:29.765"></status>
</kw>
<msg timestamp="20201115 22:12:29.767" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:29.729" endtime="20201115 22:12:29.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:29.773" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:29.769" endtime="20201115 22:12:29.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:29.775" endtime="20201115 22:12:29.779"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:29.722" endtime="20201115 22:12:29.781"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:29.715" endtime="20201115 22:12:29.782"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:29.800" endtime="20201115 22:12:30.137"></status>
</kw>
<msg timestamp="20201115 22:12:30.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047174153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047179764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:29.796" endtime="20201115 22:12:30.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:30.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047174153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047179764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:30.147" endtime="20201115 22:12:30.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:30.165" endtime="20201115 22:12:30.170"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:29.789" endtime="20201115 22:12:30.171"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:29.784" endtime="20201115 22:12:30.173"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:30.183" level="INFO">${RESULT} = [{'time': 0.047179764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.610999999995647e-06, 'source_diff': 5.610999999995647e-06}, {'time': 0.047642306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:12:30.174" endtime="20201115 22:12:30.184"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:30.213" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:12:30.185" endtime="20201115 22:12:30.214"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:30.224" level="INFO">NAME: 00-overhead-18-remove</msg>
<status status="PASS" starttime="20201115 22:12:30.222" endtime="20201115 22:12:30.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:30.230" level="INFO">VALUE: [5.610999999995647e-06, 5.58400000000292e-06, 5.582999999996507e-06, 5.58400000000292e-06, 5.583999999995981e-06, 5.582999999996507e-06, 5.596999999996077e-06, 5.582999999996507e-06, 5.583999999995981e-06, 5.610999999995647e-06, 5.597000000003016e-06, 5.554999999997368e-06, 5.57000000000335e-06, 5.55600000000378e-06, 5.596999999996077e-06, 5.639000000001726e-06, 5.583000000003446e-06, 5.58400000000292e-06, 5.55600000000378e-06, 5.583000000003446e-06, 5.5689999999969375e-06, 5.653000000001296e-06, 5.583000000003446e-06, 5.611000000002586e-06, 5.569999999996411e-06, 5.5689999999969375e-06, 5.569000000003876e-06, 5.5689999999969375e-06, 5.569000000003876e-06, 5.5689999999969375e-06, 5.596999999996077e-06, 5.58400000000292e-06, 5.58400000000292e-06, 5.5829999999895685e-06, 5.569999999996411e-06, 5.52800000000464e-06, 5.5000000000055005e-06, 5.55600000000378e-06, 5.5689999999969375e-06, 5.5689999999969375e-06, 5.5550000000043065e-06, 5.540999999997798e-06, 5.5689999999969375e-06, 5.5550000000043065e-06, 5.653000000008235e-06, 5.583000000003446e-06, 5.5829999999895685e-06, 5.583999999989042e-06, 5.583000000003446e-06, 5.597000000009955e-06]</msg>
<status status="PASS" starttime="20201115 22:12:30.227" endtime="20201115 22:12:30.230"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:30.215" endtime="20201115 22:12:30.232"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:30.238" endtime="20201115 22:12:30.241"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:30.246" endtime="20201115 22:12:30.269"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:30.242" endtime="20201115 22:12:30.270"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:30.234" endtime="20201115 22:12:30.272"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:29.710" endtime="20201115 22:12:30.272"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:29.707" endtime="20201115 22:12:30.273"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:29.705" endtime="20201115 22:12:30.273"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:30.278" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:30.301" endtime="20201115 22:12:30.335"></status>
</kw>
<msg timestamp="20201115 22:12:30.336" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:30.298" endtime="20201115 22:12:30.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:30.342" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:30.339" endtime="20201115 22:12:30.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:30.345" endtime="20201115 22:12:30.349"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:30.290" endtime="20201115 22:12:30.350"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:30.285" endtime="20201115 22:12:30.352"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:30.368" endtime="20201115 22:12:30.706"></status>
</kw>
<msg timestamp="20201115 22:12:30.713" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046370708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046376486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:30.365" endtime="20201115 22:12:30.713"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:30.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046370708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046376486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:30.715" endtime="20201115 22:12:30.732"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:30.733" endtime="20201115 22:12:30.737"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:30.357" endtime="20201115 22:12:30.738"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:30.353" endtime="20201115 22:12:30.740"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:30.750" level="INFO">${RESULT} = [{'time': 0.046376486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.77800000000489e-06, 'source_diff': 5.77800000000489e-06}, {'time': 0.046867722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:12:30.741" endtime="20201115 22:12:30.751"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:30.781" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:12:30.753" endtime="20201115 22:12:30.781"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:30.792" level="INFO">NAME: 00-overhead-19-remove</msg>
<status status="PASS" starttime="20201115 22:12:30.789" endtime="20201115 22:12:30.792"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:30.797" level="INFO">VALUE: [5.77800000000489e-06, 5.790999999998048e-06, 5.7500000000057505e-06, 5.804999999997618e-06, 5.804999999997618e-06, 5.7639999999983815e-06, 5.735999999999242e-06, 5.7779999999979514e-06, 5.79200000000446e-06, 5.77800000000489e-06, 5.8329999999967574e-06, 5.7639999999983815e-06, 5.791999999997521e-06, 5.79200000000446e-06, 5.749999999998812e-06, 5.790999999998048e-06, 5.77800000000489e-06, 5.791999999997521e-06, 5.7639999999983815e-06, 5.791999999997521e-06, 5.791999999997521e-06, 5.790999999998048e-06, 5.791000000004987e-06, 5.80600000000403e-06, 5.776999999998478e-06, 5.735999999999242e-06, 5.791999999997521e-06, 5.749999999998812e-06, 5.846999999996327e-06, 5.776999999998478e-06, 5.7639999999983815e-06, 5.833999999996231e-06, 5.79200000000446e-06, 5.776999999998478e-06, 5.79200000000446e-06, 5.776999999998478e-06, 5.7779999999979514e-06, 5.7779999999979514e-06, 5.776999999998478e-06, 5.763999999991443e-06, 5.749999999998812e-06, 5.7919999999905825e-06, 5.7779999999979514e-06, 5.860999999995897e-06, 5.805999999997091e-06, 5.8329999999967574e-06, 5.790999999991109e-06, 5.79200000000446e-06, 5.79200000000446e-06, 5.7779999999979514e-06]</msg>
<status status="PASS" starttime="20201115 22:12:30.794" endtime="20201115 22:12:30.799"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:30.783" endtime="20201115 22:12:30.800"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:30.807" endtime="20201115 22:12:30.810"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:30.816" endtime="20201115 22:12:30.838"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:30.811" endtime="20201115 22:12:30.839"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:30.802" endtime="20201115 22:12:30.841"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:30.279" endtime="20201115 22:12:30.842"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:30.276" endtime="20201115 22:12:30.842"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:30.274" endtime="20201115 22:12:30.843"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:30.848" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:30.871" endtime="20201115 22:12:30.906"></status>
</kw>
<msg timestamp="20201115 22:12:30.907" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:30.867" endtime="20201115 22:12:30.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:30.914" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:30.910" endtime="20201115 22:12:30.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:30.916" endtime="20201115 22:12:30.919"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:30.860" endtime="20201115 22:12:30.921"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:30.854" endtime="20201115 22:12:30.922"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:30.939" endtime="20201115 22:12:31.275"></status>
</kw>
<msg timestamp="20201115 22:12:31.282" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047070111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047076125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:30.936" endtime="20201115 22:12:31.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:31.300" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047070111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047076125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:31.284" endtime="20201115 22:12:31.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:31.302" endtime="20201115 22:12:31.308"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:30.928" endtime="20201115 22:12:31.310"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:30.924" endtime="20201115 22:12:31.311"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:31.322" level="INFO">${RESULT} = [{'time': 0.047076125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0140000000055704e-06, 'source_diff': 6.0140000000055704e-06}, {'time': 0.047598875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:12:31.313" endtime="20201115 22:12:31.322"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:31.352" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:12:31.324" endtime="20201115 22:12:31.352"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:31.363" level="INFO">NAME: 00-overhead-20-remove</msg>
<status status="PASS" starttime="20201115 22:12:31.361" endtime="20201115 22:12:31.364"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:31.369" level="INFO">VALUE: [6.0140000000055704e-06, 5.999999999999062e-06, 5.985999999999492e-06, 6.0140000000055704e-06, 5.999999999999062e-06, 6.02800000000514e-06, 5.944000000000782e-06, 6.0829999999970075e-06, 5.985999999999492e-06, 5.985999999999492e-06, 5.944000000000782e-06, 5.9729999999993955e-06, 5.985999999999492e-06, 5.971999999999922e-06, 5.986000000006431e-06, 5.985999999999492e-06, 5.999999999999062e-06, 5.986000000006431e-06, 5.985999999999492e-06, 5.999999999999062e-06, 6.0139999999986316e-06, 6.05600000000428e-06, 6.0139999999986316e-06, 6.0000000000060005e-06, 5.916000000001642e-06, 5.986000000006431e-06, 5.999999999999062e-06, 5.9729999999993955e-06, 6.0000000000060005e-06, 5.986000000006431e-06, 5.944999999993317e-06, 5.985999999999492e-06, 5.999999999992123e-06, 6.02800000000514e-06, 5.986999999998965e-06, 5.972000000006861e-06, 5.972000000006861e-06, 5.985999999999492e-06, 5.930000000001212e-06, 6.0000000000060005e-06, 5.9729999999924566e-06, 6.042000000011649e-06, 5.986999999998965e-06, 6.0000000000060005e-06, 5.985999999999492e-06, 6.0000000000060005e-06, 6.0139999999986316e-06, 5.986999999998965e-06, 6.069999999996911e-06, 5.985999999999492e-06]</msg>
<status status="PASS" starttime="20201115 22:12:31.365" endtime="20201115 22:12:31.370"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:31.354" endtime="20201115 22:12:31.371"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:31.378" endtime="20201115 22:12:31.380"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:31.386" endtime="20201115 22:12:31.407"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:31.381" endtime="20201115 22:12:31.409"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:31.373" endtime="20201115 22:12:31.411"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:30.849" endtime="20201115 22:12:31.411"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:30.845" endtime="20201115 22:12:31.412"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:30.844" endtime="20201115 22:12:31.412"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:31.417" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:31.440" endtime="20201115 22:12:31.477"></status>
</kw>
<msg timestamp="20201115 22:12:31.478" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:31.437" endtime="20201115 22:12:31.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:31.484" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:31.480" endtime="20201115 22:12:31.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:31.487" endtime="20201115 22:12:31.490"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:31.429" endtime="20201115 22:12:31.492"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:31.424" endtime="20201115 22:12:31.493"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:31.510" endtime="20201115 22:12:31.851"></status>
</kw>
<msg timestamp="20201115 22:12:31.858" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046454847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046461042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:31.507" endtime="20201115 22:12:31.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:31.877" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046454847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046461042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:31.861" endtime="20201115 22:12:31.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:31.879" endtime="20201115 22:12:31.883"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:31.499" endtime="20201115 22:12:31.885"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:31.495" endtime="20201115 22:12:31.886"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:31.896" level="INFO">${RESULT} = [{'time': 0.046461042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.195000000000506e-06, 'source_diff': 6.195000000000506e-06}, {'time': 0.047016069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:12:31.888" endtime="20201115 22:12:31.897"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:31.927" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:12:31.899" endtime="20201115 22:12:31.928"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:31.938" level="INFO">NAME: 00-overhead-21-remove</msg>
<status status="PASS" starttime="20201115 22:12:31.936" endtime="20201115 22:12:31.939"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:31.943" level="INFO">VALUE: [6.195000000000506e-06, 6.180000000001462e-06, 6.195000000000506e-06, 6.208000000000602e-06, 6.180000000001462e-06, 6.194000000001032e-06, 6.207999999993663e-06, 6.208000000000602e-06, 6.195000000000506e-06, 6.195000000000506e-06, 6.2639999999988816e-06, 6.235999999999742e-06, 6.194000000001032e-06, 6.235999999999742e-06, 6.208000000000602e-06, 6.166999999994427e-06, 6.195000000000506e-06, 6.153000000001796e-06, 6.194000000001032e-06, 6.222000000000172e-06, 6.208000000000602e-06, 6.222000000000172e-06, 6.222000000000172e-06, 6.222000000000172e-06, 6.195000000000506e-06, 6.208000000000602e-06, 6.222000000000172e-06, 6.2090000000000756e-06, 6.208000000000602e-06, 6.208000000007541e-06, 6.180999999993997e-06, 6.195000000000506e-06, 6.2090000000070145e-06, 6.193999999987154e-06, 6.194000000001032e-06, 6.152999999994857e-06, 6.124999999995717e-06, 6.151999999995383e-06, 6.181000000007875e-06, 6.208000000007541e-06, 6.194000000001032e-06, 6.195000000000506e-06, 6.208000000007541e-06, 6.195000000000506e-06, 6.222000000000172e-06, 6.152999999994857e-06, 6.180999999993997e-06, 6.2229999999996455e-06, 6.180999999993997e-06, 6.208000000007541e-06]</msg>
<status status="PASS" starttime="20201115 22:12:31.940" endtime="20201115 22:12:31.944"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:31.929" endtime="20201115 22:12:31.946"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:31.952" endtime="20201115 22:12:31.955"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:31.960" endtime="20201115 22:12:31.982"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:31.956" endtime="20201115 22:12:31.984"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:31.948" endtime="20201115 22:12:31.985"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:31.418" endtime="20201115 22:12:31.986"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:31.415" endtime="20201115 22:12:31.986"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:31.413" endtime="20201115 22:12:31.987"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:31.991" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:32.015" endtime="20201115 22:12:32.053"></status>
</kw>
<msg timestamp="20201115 22:12:32.055" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:32.011" endtime="20201115 22:12:32.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:32.061" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:32.057" endtime="20201115 22:12:32.061"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:32.063" endtime="20201115 22:12:32.067"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:32.004" endtime="20201115 22:12:32.068"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:31.998" endtime="20201115 22:12:32.070"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:32.086" endtime="20201115 22:12:32.422"></status>
</kw>
<msg timestamp="20201115 22:12:32.429" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0467315, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046737917, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:12:32.082" endtime="20201115 22:12:32.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:32.447" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0467315, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046737917, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:12:32.431" endtime="20201115 22:12:32.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:32.450" endtime="20201115 22:12:32.455"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:32.075" endtime="20201115 22:12:32.457"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:32.071" endtime="20201115 22:12:32.458"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:32.468" level="INFO">${RESULT} = [{'time': 0.046737917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.416999999994677e-06, 'source_diff': 6.416999999994677e-06}, {'time': 0.047323625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:12:32.460" endtime="20201115 22:12:32.469"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:32.498" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:12:32.470" endtime="20201115 22:12:32.499"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:32.509" level="INFO">NAME: 00-overhead-22-remove</msg>
<status status="PASS" starttime="20201115 22:12:32.507" endtime="20201115 22:12:32.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:32.515" level="INFO">VALUE: [6.416999999994677e-06, 6.403000000002046e-06, 6.431000000001186e-06, 6.403000000002046e-06, 6.417000000001616e-06, 6.416000000002142e-06, 6.388999999995537e-06, 6.402000000002572e-06, 6.403000000002046e-06, 6.401999999995633e-06, 6.402999999995107e-06, 6.417000000001616e-06, 6.430999999994247e-06, 6.416000000002142e-06, 6.402000000002572e-06, 6.431000000001186e-06, 6.416000000002142e-06, 6.416999999994677e-06, 6.417000000001616e-06, 6.402999999995107e-06, 6.417000000001616e-06, 6.417000000001616e-06, 6.403000000002046e-06, 6.402000000002572e-06, 6.3879999999960635e-06, 6.416000000002142e-06, 6.417000000001616e-06, 6.403000000002046e-06, 6.416000000009081e-06, 6.3879999999960635e-06, 6.389000000009415e-06, 6.4019999999886945e-06, 6.4019999999886945e-06, 6.416999999994677e-06, 6.486999999999465e-06, 6.402000000002572e-06, 6.415999999995203e-06, 6.403000000002046e-06, 6.416999999994677e-06, 6.4019999999886945e-06, 6.458000000000852e-06, 6.389000000009415e-06, 6.458000000000852e-06, 6.360999999996397e-06, 6.388999999995537e-06, 6.416999999994677e-06, 6.417000000008555e-06, 6.389000000009415e-06, 6.402999999988168e-06, 6.416000000009081e-06]</msg>
<status status="PASS" starttime="20201115 22:12:32.512" endtime="20201115 22:12:32.516"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:32.500" endtime="20201115 22:12:32.517"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:32.523" endtime="20201115 22:12:32.526"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:32.532" endtime="20201115 22:12:32.553"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:32.527" endtime="20201115 22:12:32.555"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:32.519" endtime="20201115 22:12:32.556"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:31.993" endtime="20201115 22:12:32.557"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:31.989" endtime="20201115 22:12:32.558"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:31.988" endtime="20201115 22:12:32.558"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:32.563" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:32.585" endtime="20201115 22:12:32.626"></status>
</kw>
<msg timestamp="20201115 22:12:32.627" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:32.582" endtime="20201115 22:12:32.627"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:32.633" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:32.629" endtime="20201115 22:12:32.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:32.635" endtime="20201115 22:12:32.639"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:32.575" endtime="20201115 22:12:32.640"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:32.569" endtime="20201115 22:12:32.642"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:32.659" endtime="20201115 22:12:32.996"></status>
</kw>
<msg timestamp="20201115 22:12:33.003" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046112917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046119472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:32.655" endtime="20201115 22:12:33.004"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:33.021" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046112917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046119472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:33.006" endtime="20201115 22:12:33.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:33.023" endtime="20201115 22:12:33.027"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:32.648" endtime="20201115 22:12:33.029"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:32.643" endtime="20201115 22:12:33.030"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:33.041" level="INFO">${RESULT} = [{'time': 0.046119472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.554999999998368e-06, 'source_diff': 6.554999999998368e-06}, {'time': 0.046739417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:12:33.032" endtime="20201115 22:12:33.041"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:33.071" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:12:33.043" endtime="20201115 22:12:33.071"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:33.081" level="INFO">NAME: 00-overhead-23-remove</msg>
<status status="PASS" starttime="20201115 22:12:33.079" endtime="20201115 22:12:33.082"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:33.087" level="INFO">VALUE: [6.554999999998368e-06, 6.610999999996647e-06, 6.624999999996217e-06, 6.624999999996217e-06, 6.624999999996217e-06, 6.55600000000478e-06, 6.611000000003586e-06, 6.680000000001962e-06, 6.624999999996217e-06, 6.625000000003156e-06, 6.625000000003156e-06, 6.681000000001436e-06, 6.61200000000306e-06, 6.624999999996217e-06, 6.624999999996217e-06, 6.55600000000478e-06, 6.638999999995787e-06, 6.624999999996217e-06, 6.611000000003586e-06, 6.625000000003156e-06, 6.597000000004016e-06, 6.597000000004016e-06, 6.611000000003586e-06, 6.625000000003156e-06, 6.554999999998368e-06, 6.639000000002726e-06, 6.610999999996647e-06, 6.611000000003586e-06, 6.625000000010095e-06, 6.653000000009235e-06, 6.611000000003586e-06, 6.667000000001866e-06, 6.624999999996217e-06, 6.639000000002726e-06, 6.639000000002726e-06, 6.6659999999885144e-06, 6.6109999999897084e-06, 6.598000000010429e-06, 6.55600000000478e-06, 6.6109999999897084e-06, 6.624999999996217e-06, 6.624999999996217e-06, 6.679999999995023e-06, 6.611000000003586e-06, 6.597000000010955e-06, 6.639000000002726e-06, 6.624999999996217e-06, 6.611000000003586e-06, 6.611000000003586e-06, 6.624999999996217e-06]</msg>
<status status="PASS" starttime="20201115 22:12:33.084" endtime="20201115 22:12:33.088"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:33.073" endtime="20201115 22:12:33.089"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:33.096" endtime="20201115 22:12:33.098"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:33.104" endtime="20201115 22:12:33.125"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:33.099" endtime="20201115 22:12:33.127"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:33.091" endtime="20201115 22:12:33.129"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:32.564" endtime="20201115 22:12:33.129"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:32.561" endtime="20201115 22:12:33.130"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:32.559" endtime="20201115 22:12:33.130"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:33.135" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:33.158" endtime="20201115 22:12:33.200"></status>
</kw>
<msg timestamp="20201115 22:12:33.201" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:33.154" endtime="20201115 22:12:33.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:33.212" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:33.203" endtime="20201115 22:12:33.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:33.214" endtime="20201115 22:12:33.218"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:33.147" endtime="20201115 22:12:33.220"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:33.142" endtime="20201115 22:12:33.221"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:33.237" endtime="20201115 22:12:33.574"></status>
</kw>
<msg timestamp="20201115 22:12:33.581" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046220736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046227611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:33.234" endtime="20201115 22:12:33.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:33.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046220736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046227611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:33.583" endtime="20201115 22:12:33.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:33.601" endtime="20201115 22:12:33.607"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:33.227" endtime="20201115 22:12:33.608"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:33.222" endtime="20201115 22:12:33.610"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:33.620" level="INFO">${RESULT} = [{'time': 0.046227611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.875000000003406e-06, 'source_diff': 6.875000000003406e-06}, {'time': 0.046880806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:12:33.611" endtime="20201115 22:12:33.621"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:33.650" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:12:33.622" endtime="20201115 22:12:33.651"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:33.661" level="INFO">NAME: 00-overhead-24-remove</msg>
<status status="PASS" starttime="20201115 22:12:33.659" endtime="20201115 22:12:33.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:33.666" level="INFO">VALUE: [6.875000000003406e-06, 6.916999999995177e-06, 6.8329999999977575e-06, 6.847000000004266e-06, 6.8190000000051265e-06, 6.80600000000503e-06, 6.8469999999973274e-06, 6.819999999997661e-06, 6.875000000003406e-06, 6.8330000000046964e-06, 6.819999999997661e-06, 6.83400000000417e-06, 6.7779999999989515e-06, 6.8190000000051265e-06, 6.819999999997661e-06, 6.819999999997661e-06, 6.804999999998618e-06, 6.847999999996801e-06, 6.875000000003406e-06, 6.819999999997661e-06, 6.8329999999977575e-06, 6.8329999999977575e-06, 6.860999999996897e-06, 6.847000000004266e-06, 6.818999999998188e-06, 6.818999999998188e-06, 6.833999999997231e-06, 6.833999999997231e-06, 6.8329999999977575e-06, 6.847000000004266e-06, 6.847000000004266e-06, 6.8329999999977575e-06, 6.8200000000046e-06, 6.8200000000046e-06, 6.790999999992109e-06, 6.8329999999977575e-06, 6.833999999997231e-06, 6.833000000011635e-06, 6.806000000011969e-06, 6.8329999999977575e-06, 6.8190000000051265e-06, 6.8190000000051265e-06, 6.8329999999977575e-06, 6.833999999997231e-06, 6.8469999999903886e-06, 6.8329999999977575e-06, 6.833000000011635e-06, 6.847000000004266e-06, 6.834000000011109e-06, 6.8050000000124955e-06]</msg>
<status status="PASS" starttime="20201115 22:12:33.663" endtime="20201115 22:12:33.667"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:33.652" endtime="20201115 22:12:33.669"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:33.675" endtime="20201115 22:12:33.678"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:33.683" endtime="20201115 22:12:33.705"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:33.679" endtime="20201115 22:12:33.707"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:33.671" endtime="20201115 22:12:33.708"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:33.136" endtime="20201115 22:12:33.709"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:33.133" endtime="20201115 22:12:33.709"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:33.131" endtime="20201115 22:12:33.710"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:33.715" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:33.738" endtime="20201115 22:12:33.782"></status>
</kw>
<msg timestamp="20201115 22:12:33.783" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:33.735" endtime="20201115 22:12:33.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:33.789" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:33.785" endtime="20201115 22:12:33.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:33.791" endtime="20201115 22:12:33.795"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:33.727" endtime="20201115 22:12:33.796"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:33.721" endtime="20201115 22:12:33.798"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:33.814" endtime="20201115 22:12:34.155"></status>
</kw>
<msg timestamp="20201115 22:12:34.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047170028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047177042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:33.811" endtime="20201115 22:12:34.163"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:34.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047170028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047177042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:34.165" endtime="20201115 22:12:34.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:34.183" endtime="20201115 22:12:34.186"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:33.804" endtime="20201115 22:12:34.188"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:33.799" endtime="20201115 22:12:34.189"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:34.200" level="INFO">${RESULT} = [{'time': 0.047177042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.013999999999632e-06, 'source_diff': 7.013999999999632e-06}, {'time': 0.047864292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:12:34.191" endtime="20201115 22:12:34.200"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:34.230" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:12:34.202" endtime="20201115 22:12:34.231"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:34.241" level="INFO">NAME: 00-overhead-25-remove</msg>
<status status="PASS" starttime="20201115 22:12:34.239" endtime="20201115 22:12:34.242"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:34.246" level="INFO">VALUE: [7.013999999999632e-06, 7.04200000000571e-06, 7.0419999999987715e-06, 7.0279999999992016e-06, 7.04200000000571e-06, 7.0279999999992016e-06, 7.0419999999987715e-06, 7.055999999998341e-06, 7.040999999999298e-06, 7.013999999999632e-06, 6.986000000000492e-06, 7.027000000006667e-06, 7.0279999999992016e-06, 7.0419999999987715e-06, 7.013999999999632e-06, 7.013999999999632e-06, 7.040999999999298e-06, 7.0419999999987715e-06, 7.040999999999298e-06, 7.040999999999298e-06, 7.026999999999728e-06, 7.0279999999992016e-06, 7.000000000000062e-06, 7.054999999991929e-06, 7.027000000006667e-06, 6.958000000001352e-06, 7.027999999992263e-06, 7.068999999998438e-06, 7.0559999999914025e-06, 7.0280000000061404e-06, 7.0419999999987715e-06, 7.0280000000061404e-06, 7.0280000000061404e-06, 7.0280000000061404e-06, 7.0419999999987715e-06, 7.027999999992263e-06, 7.040999999999298e-06, 7.040999999999298e-06, 7.0419999999987715e-06, 7.0280000000061404e-06, 7.0419999999987715e-06, 7.027999999992263e-06, 7.0419999999987715e-06, 7.040999999999298e-06, 7.0419999999987715e-06, 7.013999999999632e-06, 7.0280000000061404e-06, 7.027999999992263e-06, 7.0280000000061404e-06, 7.027999999992263e-06]</msg>
<status status="PASS" starttime="20201115 22:12:34.243" endtime="20201115 22:12:34.247"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:34.232" endtime="20201115 22:12:34.249"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:34.255" endtime="20201115 22:12:34.258"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:34.264" endtime="20201115 22:12:34.286"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:34.259" endtime="20201115 22:12:34.287"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:34.250" endtime="20201115 22:12:34.289"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:33.716" endtime="20201115 22:12:34.289"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:33.712" endtime="20201115 22:12:34.290"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:33.710" endtime="20201115 22:12:34.290"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:20.165" endtime="20201115 22:12:34.291"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="teardown">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:34.301" endtime="20201115 22:12:34.322"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:34.297" endtime="20201115 22:12:34.324"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:34.294" endtime="20201115 22:12:34.325"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:12:20.042" endtime="20201115 22:12:34.326" critical="yes"></status>
</test>
<status status="PASS" starttime="20201115 22:12:01.785" endtime="20201115 22:12:34.339"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">samr21-xpro</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="PASS" starttime="20201115 22:11:57.965" endtime="20201115 22:12:34.381"></status>
</suite>
<statistics>
<total>
<stat pass="5" fail="0">Critical Tests</stat>
<stat pass="5" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="5" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="5" fail="0">BOARD_samr21-xpro</stat>
<stat pass="5" fail="0">dev</stat>
</tag>
<suite>
<stat pass="5" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="4" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
