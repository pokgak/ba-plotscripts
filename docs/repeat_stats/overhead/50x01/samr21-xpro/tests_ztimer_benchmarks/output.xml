<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2 (Python 3.7.3 on linux)" generated="20201115 22:11:06.177" rpa="false">
<suite id="s1" name="tests_ztimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201115 22:11:07.394" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201115 22:11:07.410" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201115 22:11:09.327" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201115 22:11:07.390" endtime="20201115 22:11:09.328"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201115 22:11:09.334" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201115 22:11:09.331" endtime="20201115 22:11:09.335"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.388" endtime="20201115 22:11:09.337"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:09.341" endtime="20201115 22:11:09.670"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.338" endtime="20201115 22:11:09.672"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:09.701" endtime="20201115 22:11:09.717"></status>
</kw>
<msg timestamp="20201115 22:11:09.718" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:09.698" endtime="20201115 22:11:09.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:09.725" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:09.720" endtime="20201115 22:11:09.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:11:09.731" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:11:09.727" endtime="20201115 22:11:09.732"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:09.692" endtime="20201115 22:11:09.734"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:09.686" endtime="20201115 22:11:09.736"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.684" endtime="20201115 22:11:09.736"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:11:09.744" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:11:09.743" endtime="20201115 22:11:09.745"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.738" endtime="20201115 22:11:09.746"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.682" endtime="20201115 22:11:09.746"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.680" endtime="20201115 22:11:09.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:09.748" endtime="20201115 22:11:09.751"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.677" endtime="20201115 22:11:09.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:09.754" endtime="20201115 22:11:09.758"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.673" endtime="20201115 22:11:09.760"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:07.384" endtime="20201115 22:11:09.760"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:09.776" endtime="20201115 22:11:09.798"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.773" endtime="20201115 22:11:09.800"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:09.842" endtime="20201115 22:11:09.857"></status>
</kw>
<msg timestamp="20201115 22:11:09.858" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:09.839" endtime="20201115 22:11:09.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:09.865" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:09.860" endtime="20201115 22:11:09.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:11:09.871" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:11:09.867" endtime="20201115 22:11:09.872"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:09.831" endtime="20201115 22:11:09.873"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:09.825" endtime="20201115 22:11:09.875"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.813" endtime="20201115 22:11:09.876"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:11:09.883" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:11:09.882" endtime="20201115 22:11:09.884"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.878" endtime="20201115 22:11:09.885"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.811" endtime="20201115 22:11:09.885"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.809" endtime="20201115 22:11:09.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:09.887" endtime="20201115 22:11:09.890"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.806" endtime="20201115 22:11:09.892"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.801" endtime="20201115 22:11:09.893"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.770" endtime="20201115 22:11:09.894"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:09.912" endtime="20201115 22:11:09.922"></status>
</kw>
<msg timestamp="20201115 22:11:09.923" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:09.908" endtime="20201115 22:11:09.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:09.929" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:09.925" endtime="20201115 22:11:09.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:09.931" endtime="20201115 22:11:09.937"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.901" endtime="20201115 22:11:09.938"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.896" endtime="20201115 22:11:09.940"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:09.950" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201115 22:11:09.948" endtime="20201115 22:11:09.951"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:09.955" level="INFO">VALUE: ztimer</msg>
<status status="PASS" starttime="20201115 22:11:09.952" endtime="20201115 22:11:09.955"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:09.942" endtime="20201115 22:11:09.957"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:11:09.761" endtime="20201115 22:11:09.959" critical="yes"></status>
</test>
<status status="PASS" starttime="20201115 22:11:06.435" endtime="20201115 22:11:09.967"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201115 22:11:10.102" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201115 22:11:10.118" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201115 22:11:12.052" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201115 22:11:10.099" endtime="20201115 22:11:12.054"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201115 22:11:12.059" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201115 22:11:12.056" endtime="20201115 22:11:12.060"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.096" endtime="20201115 22:11:12.061"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:12.066" endtime="20201115 22:11:12.393"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.063" endtime="20201115 22:11:12.395"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:12.424" endtime="20201115 22:11:12.440"></status>
</kw>
<msg timestamp="20201115 22:11:12.441" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:12.421" endtime="20201115 22:11:12.442"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:12.447" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:12.443" endtime="20201115 22:11:12.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:11:12.454" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:11:12.450" endtime="20201115 22:11:12.456"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:12.415" endtime="20201115 22:11:12.458"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:12.409" endtime="20201115 22:11:12.460"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.407" endtime="20201115 22:11:12.460"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:11:12.468" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:11:12.467" endtime="20201115 22:11:12.469"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.462" endtime="20201115 22:11:12.469"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.405" endtime="20201115 22:11:12.470"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.403" endtime="20201115 22:11:12.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:12.472" endtime="20201115 22:11:12.475"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.400" endtime="20201115 22:11:12.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:12.478" endtime="20201115 22:11:12.482"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.397" endtime="20201115 22:11:12.483"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:10.093" endtime="20201115 22:11:12.484"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO/">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:12.498" endtime="20201115 22:11:12.520"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.494" endtime="20201115 22:11:12.521"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:12.554" endtime="20201115 22:11:12.569"></status>
</kw>
<msg timestamp="20201115 22:11:12.571" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:12.551" endtime="20201115 22:11:12.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:12.578" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:12.573" endtime="20201115 22:11:12.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:11:12.584" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:11:12.580" endtime="20201115 22:11:12.585"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:12.544" endtime="20201115 22:11:12.587"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:12.537" endtime="20201115 22:11:12.588"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.535" endtime="20201115 22:11:12.589"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:11:12.596" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:11:12.595" endtime="20201115 22:11:12.597"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.591" endtime="20201115 22:11:12.598"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.533" endtime="20201115 22:11:12.659"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.531" endtime="20201115 22:11:12.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:12.661" endtime="20201115 22:11:12.665"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.527" endtime="20201115 22:11:12.666"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.523" endtime="20201115 22:11:12.668"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.492" endtime="20201115 22:11:12.668"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure GPIO Overhead</arg>
</arguments>
<msg timestamp="20201115 22:11:12.674" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:12.693" endtime="20201115 22:11:12.703"></status>
</kw>
<msg timestamp="20201115 22:11:12.704" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:12.690" endtime="20201115 22:11:12.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:12.710" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:12.707" endtime="20201115 22:11:12.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:12.713" endtime="20201115 22:11:12.716"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.682" endtime="20201115 22:11:12.718"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.678" endtime="20201115 22:11:12.719"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:12.736" endtime="20201115 22:11:13.087"></status>
</kw>
<msg timestamp="20201115 22:11:13.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.185024833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.185025306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:12.732" endtime="20201115 22:11:13.095"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:13.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.185024833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.185025306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:13.097" endtime="20201115 22:11:13.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:13.116" endtime="20201115 22:11:13.120"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.725" endtime="20201115 22:11:13.121"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.721" endtime="20201115 22:11:13.123"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:13.134" level="INFO">${RESULT} = [{'time': 0.185025306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.185035167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:13.125" endtime="20201115 22:11:13.135"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:13.166" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:13.136" endtime="20201115 22:11:13.167"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:13.176" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201115 22:11:13.174" endtime="20201115 22:11:13.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:13.182" level="INFO">VALUE: [4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999997360464e-07, 4.720000000013602e-07, 4.7199999997360464e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.409999999927972e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.419999999922709e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 5.409999999927972e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.409999999927972e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201115 22:11:13.179" endtime="20201115 22:11:13.183"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.168" endtime="20201115 22:11:13.184"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:13.190" endtime="20201115 22:11:13.193"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:13.199" endtime="20201115 22:11:13.220"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.194" endtime="20201115 22:11:13.222"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.186" endtime="20201115 22:11:13.223"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.675" endtime="20201115 22:11:13.224"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.671" endtime="20201115 22:11:13.225"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:13.235" endtime="20201115 22:11:13.257"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.231" endtime="20201115 22:11:13.259"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.228" endtime="20201115 22:11:13.259"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:11:12.485" endtime="20201115 22:11:13.261" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:13.280" endtime="20201115 22:11:13.301"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.276" endtime="20201115 22:11:13.303"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:13.337" endtime="20201115 22:11:13.354"></status>
</kw>
<msg timestamp="20201115 22:11:13.355" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:13.334" endtime="20201115 22:11:13.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:13.361" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:13.357" endtime="20201115 22:11:13.362"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:11:13.368" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:11:13.363" endtime="20201115 22:11:13.368"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:13.325" endtime="20201115 22:11:13.370"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:13.319" endtime="20201115 22:11:13.372"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.317" endtime="20201115 22:11:13.372"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:11:13.380" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:11:13.379" endtime="20201115 22:11:13.381"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.375" endtime="20201115 22:11:13.382"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.315" endtime="20201115 22:11:13.382"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.313" endtime="20201115 22:11:13.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:13.384" endtime="20201115 22:11:13.387"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.309" endtime="20201115 22:11:13.389"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.305" endtime="20201115 22:11:13.390"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.274" endtime="20201115 22:11:13.391"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer Now Overhead</arg>
</arguments>
<msg timestamp="20201115 22:11:13.397" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:13.416" endtime="20201115 22:11:13.430"></status>
</kw>
<msg timestamp="20201115 22:11:13.431" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:13.413" endtime="20201115 22:11:13.431"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:13.437" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:13.433" endtime="20201115 22:11:13.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:13.439" endtime="20201115 22:11:13.443"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.406" endtime="20201115 22:11:13.445"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.401" endtime="20201115 22:11:13.446"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:13.462" endtime="20201115 22:11:13.820"></status>
</kw>
<msg timestamp="20201115 22:11:13.827" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.127124764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.127134403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:13.459" endtime="20201115 22:11:13.828"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:13.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.127124764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.127134403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:13.830" endtime="20201115 22:11:13.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:13.848" endtime="20201115 22:11:13.852"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.452" endtime="20201115 22:11:13.854"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.447" endtime="20201115 22:11:13.855"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:13.866" level="INFO">${RESULT} = [{'time': 0.127134403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.639000000005726e-06, 'source_diff': 9.639000000005726e-06}, {'time': 0.127152417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:13.857" endtime="20201115 22:11:13.866"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:13.897" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:13.868" endtime="20201115 22:11:13.898"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:13.907" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201115 22:11:13.905" endtime="20201115 22:11:13.908"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:13.912" level="INFO">VALUE: [9.639000000005726e-06, 8.833999999985354e-06, 9.014000000001632e-06, 9.305999999986714e-06, 9.486000000002992e-06, 9.319000000007627e-06, 9.486000000002992e-06, 8.83299999998588e-06, 9.124999999998717e-06, 9.305999999986714e-06, 9.305000000014996e-06, 9.472000000010361e-06, 8.971999999995983e-06, 9.666999999990988e-06, 8.806000000000092e-06, 9.486000000002992e-06, 9.278000000001452e-06, 8.818999999993249e-06, 9.305999999986714e-06, 9.165999999977137e-06, 8.943999999982966e-06, 9.487000000002466e-06, 9.139000000019104e-06, 8.958000000003352e-06, 9.30600000001447e-06, 9.15299999998398e-06, 9.651999999998884e-06, 9.459000000017204e-06, 8.999999999981245e-06, 9.138999999991348e-06, 9.249999999988434e-06, 9.651999999998884e-06, 8.958000000003352e-06, 8.985999999988614e-06, 9.597000000000078e-06, 9.52800000000864e-06, 8.820000000020478e-06, 8.985999999988614e-06, 9.153000000011735e-06, 9.472000000010361e-06, 9.486000000002992e-06, 9.041000000015176e-06, 9.124999999998717e-06, 9.15299999998398e-06, 9.472000000010361e-06, 9.638000000006253e-06, 8.959000000002826e-06, 9.457999999989974e-06, 8.972999999995457e-06, 9.471999999982605e-06]</msg>
<status status="PASS" starttime="20201115 22:11:13.909" endtime="20201115 22:11:13.914"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.899" endtime="20201115 22:11:13.916"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:13.922" endtime="20201115 22:11:13.925"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:13.930" endtime="20201115 22:11:13.952"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.926" endtime="20201115 22:11:13.954"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.917" endtime="20201115 22:11:13.955"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.398" endtime="20201115 22:11:13.956"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.394" endtime="20201115 22:11:13.956"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:13.967" endtime="20201115 22:11:13.989"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.963" endtime="20201115 22:11:13.991"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:13.961" endtime="20201115 22:11:13.991"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:11:13.267" endtime="20201115 22:11:13.993" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set List">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:14.013" endtime="20201115 22:11:14.035"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.010" endtime="20201115 22:11:14.037"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:14.069" endtime="20201115 22:11:14.089"></status>
</kw>
<msg timestamp="20201115 22:11:14.090" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:14.066" endtime="20201115 22:11:14.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:14.096" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:14.092" endtime="20201115 22:11:14.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:11:14.103" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:11:14.099" endtime="20201115 22:11:14.103"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:14.059" endtime="20201115 22:11:14.105"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:14.052" endtime="20201115 22:11:14.107"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.050" endtime="20201115 22:11:14.107"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:11:14.115" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:11:14.114" endtime="20201115 22:11:14.116"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.109" endtime="20201115 22:11:14.116"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.048" endtime="20201115 22:11:14.117"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.046" endtime="20201115 22:11:14.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:14.119" endtime="20201115 22:11:14.122"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.042" endtime="20201115 22:11:14.124"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.038" endtime="20201115 22:11:14.126"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.007" endtime="20201115 22:11:14.126"></status>
</kw>
<kw name="${n} IN RANGE [ 25 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:14.135" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:14.158" endtime="20201115 22:11:14.173"></status>
</kw>
<msg timestamp="20201115 22:11:14.174" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:14.155" endtime="20201115 22:11:14.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:14.181" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:14.177" endtime="20201115 22:11:14.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:14.183" endtime="20201115 22:11:14.187"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.147" endtime="20201115 22:11:14.189"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.141" endtime="20201115 22:11:14.190"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:14.207" endtime="20201115 22:11:14.563"></status>
</kw>
<msg timestamp="20201115 22:11:14.570" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.136473403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.136495208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:14.203" endtime="20201115 22:11:14.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:14.589" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.136473403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.136495208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:14.572" endtime="20201115 22:11:14.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:14.591" endtime="20201115 22:11:14.595"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.196" endtime="20201115 22:11:14.596"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.191" endtime="20201115 22:11:14.598"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:14.608" level="INFO">${RESULT} = [{'time': 0.136495208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.180500000001362e-05, 'source_diff': 2.180500000001362e-05}, {'time': 0.136598306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:14.599" endtime="20201115 22:11:14.609"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:14.640" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:14.610" endtime="20201115 22:11:14.640"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:14.651" level="INFO">NAME: 00-overhead-1-set</msg>
<status status="PASS" starttime="20201115 22:11:14.648" endtime="20201115 22:11:14.651"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:14.656" level="INFO">VALUE: [2.180500000001362e-05, 2.2111999999990806e-05, 2.1943999999995967e-05, 2.236099999999852e-05, 2.261100000000571e-05, 2.245900000000245e-05, 2.1722000000001795e-05, 2.262499999999834e-05, 2.262499999999834e-05, 2.2264000000021822e-05, 2.24169999999968e-05, 2.179200000002046e-05, 2.1957999999988598e-05, 2.262499999999834e-05, 2.217999999998277e-05, 2.2638999999990972e-05, 2.229100000000761e-05, 2.212500000001172e-05, 2.1943999999995967e-05, 2.2110999999991332e-05, 2.1778000000000075e-05, 2.243099999998943e-05, 2.2263999999994066e-05, 2.183299999999888e-05, 2.3166000000018894e-05, 2.261100000000571e-05, 2.2110999999991332e-05, 2.262499999999834e-05, 2.2375000000018908e-05, 2.2596999999985323e-05, 2.2444000000010345e-05, 2.2583000000020448e-05, 2.194499999999544e-05, 2.244399999998259e-05, 2.338900000001254e-05, 2.2778000000001075e-05, 2.194499999999544e-05, 2.2069999999985157e-05, 2.1722000000001795e-05, 2.1806000000013093e-05, 2.176399999997969e-05, 2.2708000000010164e-05, 2.262499999999834e-05, 2.1804999999985863e-05, 2.2458000000002976e-05, 2.2263999999994066e-05, 2.1791999999992706e-05, 2.206900000001344e-05, 2.2277999999986697e-05, 2.176399999997969e-05]</msg>
<status status="PASS" starttime="20201115 22:11:14.653" endtime="20201115 22:11:14.657"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.642" endtime="20201115 22:11:14.659"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:14.665" endtime="20201115 22:11:14.668"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:14.674" endtime="20201115 22:11:14.695"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.669" endtime="20201115 22:11:14.697"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.661" endtime="20201115 22:11:14.698"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.136" endtime="20201115 22:11:14.699"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.132" endtime="20201115 22:11:14.700"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.130" endtime="20201115 22:11:14.700"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:14.705" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:14.728" endtime="20201115 22:11:14.743"></status>
</kw>
<msg timestamp="20201115 22:11:14.744" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:14.724" endtime="20201115 22:11:14.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:14.750" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:14.747" endtime="20201115 22:11:14.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:14.753" endtime="20201115 22:11:14.756"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.717" endtime="20201115 22:11:14.758"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.711" endtime="20201115 22:11:14.759"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:14.776" endtime="20201115 22:11:15.109"></status>
</kw>
<msg timestamp="20201115 22:11:15.116" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045404681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045417792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:14.772" endtime="20201115 22:11:15.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:15.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045404681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045417792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:15.119" endtime="20201115 22:11:15.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:15.137" endtime="20201115 22:11:15.141"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.765" endtime="20201115 22:11:15.142"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.761" endtime="20201115 22:11:15.144"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:15.154" level="INFO">${RESULT} = [{'time': 0.045417792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3110999999996209e-05, 'source_diff': 1.3110999999996209e-05}, {'time': 0.045554028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:15.145" endtime="20201115 22:11:15.155"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:15.189" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:15.156" endtime="20201115 22:11:15.189"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:15.200" level="INFO">NAME: 00-overhead-2-set</msg>
<status status="PASS" starttime="20201115 22:11:15.198" endtime="20201115 22:11:15.201"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:15.213" level="INFO">VALUE: [1.3110999999996209e-05, 1.2278000000004452e-05, 1.3096999999996639e-05, 1.227699999999804e-05, 1.2763999999998443e-05, 1.2249999999998373e-05, 1.2597000000003078e-05, 1.2389000000001538e-05, 1.3096999999996639e-05, 1.3124999999995779e-05, 1.3098000000003052e-05, 1.2930000000001274e-05, 1.3096999999996639e-05, 1.2597000000003078e-05, 1.2749999999998873e-05, 1.3096999999996639e-05, 1.254099999999786e-05, 1.2569999999996473e-05, 1.3110999999996209e-05, 1.2417000000000677e-05, 1.2402000000001634e-05, 1.2584000000002982e-05, 1.2291999999997083e-05, 1.2582999999996569e-05, 1.2610999999995709e-05, 1.2610999999995709e-05, 1.2931000000000747e-05, 1.2445000000006756e-05, 1.2860999999995959e-05, 1.2486000000005992e-05, 1.2611999999995183e-05, 1.2263999999997943e-05, 1.2194000000000094e-05, 1.2444000000000344e-05, 1.2431000000000247e-05, 1.2277999999997513e-05, 1.3124999999995779e-05, 1.2610999999995709e-05, 1.2431000000000247e-05, 1.2764000000005382e-05, 1.2917000000001178e-05, 1.280499999999768e-05, 1.2221999999999233e-05, 1.2597000000003078e-05, 1.2596999999996139e-05, 1.3111000000003148e-05, 1.2596999999996139e-05, 1.2431000000000247e-05, 1.2778000000004952e-05, 1.2277999999997513e-05]</msg>
<status status="PASS" starttime="20201115 22:11:15.202" endtime="20201115 22:11:15.214"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.191" endtime="20201115 22:11:15.216"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:15.223" endtime="20201115 22:11:15.225"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:15.231" endtime="20201115 22:11:15.252"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.226" endtime="20201115 22:11:15.254"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.218" endtime="20201115 22:11:15.255"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.706" endtime="20201115 22:11:15.256"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.702" endtime="20201115 22:11:15.257"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.701" endtime="20201115 22:11:15.257"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:15.262" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:15.284" endtime="20201115 22:11:15.302"></status>
</kw>
<msg timestamp="20201115 22:11:15.303" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:15.281" endtime="20201115 22:11:15.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:15.309" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:15.305" endtime="20201115 22:11:15.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:15.312" endtime="20201115 22:11:15.315"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.274" endtime="20201115 22:11:15.317"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.268" endtime="20201115 22:11:15.318"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:15.335" endtime="20201115 22:11:15.668"></status>
</kw>
<msg timestamp="20201115 22:11:15.675" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045231111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045244153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:15.331" endtime="20201115 22:11:15.675"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:15.693" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045231111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045244153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:15.677" endtime="20201115 22:11:15.694"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:15.696" endtime="20201115 22:11:15.699"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.324" endtime="20201115 22:11:15.701"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.320" endtime="20201115 22:11:15.702"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:15.713" level="INFO">${RESULT} = [{'time': 0.045244153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3042000000004772e-05, 'source_diff': 1.3042000000004772e-05}, {'time': 0.045418306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:15.704" endtime="20201115 22:11:15.714"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:15.745" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:15.715" endtime="20201115 22:11:15.746"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:15.756" level="INFO">NAME: 00-overhead-3-set</msg>
<status status="PASS" starttime="20201115 22:11:15.754" endtime="20201115 22:11:15.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:15.761" level="INFO">VALUE: [1.3042000000004772e-05, 1.3361999999995933e-05, 1.3249999999999373e-05, 1.2694000000000594e-05, 1.3195000000000567e-05, 1.3027999999998263e-05, 1.2847000000003328e-05, 1.283299999999682e-05, 1.2860999999995959e-05, 1.2874999999995529e-05, 1.3346999999996889e-05, 1.2861000000002898e-05, 1.2528000000004702e-05, 1.301299999999922e-05, 1.2639000000001788e-05, 1.2694000000000594e-05, 1.2999999999999123e-05, 1.302699999999879e-05, 1.2513999999998193e-05, 1.2555000000004368e-05, 1.2846999999996389e-05, 1.2542000000004272e-05, 1.2513999999998193e-05, 1.2708000000000164e-05, 1.3195000000000567e-05, 1.2527999999997763e-05, 1.283299999999682e-05, 1.2860999999995959e-05, 1.3000000000006062e-05, 1.2833000000003758e-05, 1.2499999999998623e-05, 1.3333000000004258e-05, 1.2541999999997333e-05, 1.3291999999998083e-05, 1.3027999999998263e-05, 1.3346999999996889e-05, 1.2513999999998193e-05, 1.304099999999836e-05, 1.3013999999998693e-05, 1.2528000000004702e-05, 1.2985999999999553e-05, 1.2861000000002898e-05, 1.3195000000000567e-05, 1.3374999999996029e-05, 1.2860999999995959e-05, 1.3346999999996889e-05, 1.2694000000000594e-05, 1.2569999999996473e-05, 1.2513999999998193e-05, 1.3195000000000567e-05]</msg>
<status status="PASS" starttime="20201115 22:11:15.758" endtime="20201115 22:11:15.762"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.747" endtime="20201115 22:11:15.764"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:15.770" endtime="20201115 22:11:15.773"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:15.778" endtime="20201115 22:11:15.800"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.774" endtime="20201115 22:11:15.801"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.766" endtime="20201115 22:11:15.803"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.263" endtime="20201115 22:11:15.803"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.259" endtime="20201115 22:11:15.804"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.258" endtime="20201115 22:11:15.804"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:15.809" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:15.832" endtime="20201115 22:11:15.851"></status>
</kw>
<msg timestamp="20201115 22:11:15.852" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:15.828" endtime="20201115 22:11:15.853"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:15.858" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:15.855" endtime="20201115 22:11:15.859"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:15.861" endtime="20201115 22:11:15.864"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.821" endtime="20201115 22:11:15.866"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.816" endtime="20201115 22:11:15.867"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:15.884" endtime="20201115 22:11:16.218"></status>
</kw>
<msg timestamp="20201115 22:11:16.226" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045002611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045015722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:15.880" endtime="20201115 22:11:16.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:16.244" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045002611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045015722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:16.228" endtime="20201115 22:11:16.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:16.247" endtime="20201115 22:11:16.251"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.873" endtime="20201115 22:11:16.253"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.868" endtime="20201115 22:11:16.255"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:16.265" level="INFO">${RESULT} = [{'time': 0.045015722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3111000000003148e-05, 'source_diff': 1.3111000000003148e-05}, {'time': 0.045225944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:16.256" endtime="20201115 22:11:16.266"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:16.297" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:16.267" endtime="20201115 22:11:16.297"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:16.308" level="INFO">NAME: 00-overhead-4-set</msg>
<status status="PASS" starttime="20201115 22:11:16.306" endtime="20201115 22:11:16.308"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:16.313" level="INFO">VALUE: [1.3111000000003148e-05, 1.3429999999994835e-05, 1.3444000000001344e-05, 1.3431000000001247e-05, 1.3584000000003982e-05, 1.3277999999998513e-05, 1.3277999999998513e-05, 1.3111000000003148e-05, 1.3459000000000387e-05, 1.3138999999995349e-05, 1.3124999999995779e-05, 1.2958999999999887e-05, 1.3278000000005452e-05, 1.2777000000005478e-05, 1.276299999999897e-05, 1.3444000000001344e-05, 1.3611000000003648e-05, 1.3277999999998513e-05, 1.3444000000001344e-05, 1.3444000000001344e-05, 1.3471999999993545e-05, 1.2735999999999303e-05, 1.3263999999998943e-05, 1.3264000000005882e-05, 1.2931000000000747e-05, 1.3624999999996279e-05, 1.3444000000001344e-05, 1.3277999999998513e-05, 1.327699999999904e-05, 1.3096999999996639e-05, 1.3430000000001774e-05, 1.3444000000001344e-05, 1.3445000000000817e-05, 1.3097000000003578e-05, 1.354099999999886e-05, 1.2875000000002468e-05, 1.277699999999854e-05, 1.3263999999998943e-05, 1.2749999999998873e-05, 1.3445000000000817e-05, 1.3499999999999623e-05, 1.3124999999995779e-05, 1.3277999999998513e-05, 1.3111000000003148e-05, 1.3111000000003148e-05, 1.3625000000003218e-05, 1.2749999999998873e-05, 1.3444000000001344e-05, 1.2763999999998443e-05, 1.2763999999998443e-05]</msg>
<status status="PASS" starttime="20201115 22:11:16.310" endtime="20201115 22:11:16.314"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.299" endtime="20201115 22:11:16.316"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:16.322" endtime="20201115 22:11:16.324"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:16.330" endtime="20201115 22:11:16.351"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.326" endtime="20201115 22:11:16.353"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.317" endtime="20201115 22:11:16.355"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.810" endtime="20201115 22:11:16.355"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.807" endtime="20201115 22:11:16.356"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.805" endtime="20201115 22:11:16.356"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:16.361" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:16.383" endtime="20201115 22:11:16.405"></status>
</kw>
<msg timestamp="20201115 22:11:16.406" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:16.380" endtime="20201115 22:11:16.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:16.412" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:16.408" endtime="20201115 22:11:16.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:16.414" endtime="20201115 22:11:16.418"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.373" endtime="20201115 22:11:16.420"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.367" endtime="20201115 22:11:16.421"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:16.438" endtime="20201115 22:11:16.773"></status>
</kw>
<msg timestamp="20201115 22:11:16.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045060667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045074014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:16.434" endtime="20201115 22:11:16.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:16.798" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045060667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045074014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:16.782" endtime="20201115 22:11:16.799"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:16.801" endtime="20201115 22:11:16.804"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.427" endtime="20201115 22:11:16.806"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.422" endtime="20201115 22:11:16.807"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:16.818" level="INFO">${RESULT} = [{'time': 0.045074014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3347000000003828e-05, 'source_diff': 1.3347000000003828e-05}, {'time': 0.045325319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:16.809" endtime="20201115 22:11:16.818"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:16.849" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:16.820" endtime="20201115 22:11:16.849"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:16.861" level="INFO">NAME: 00-overhead-5-set</msg>
<status status="PASS" starttime="20201115 22:11:16.858" endtime="20201115 22:11:16.861"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:16.866" level="INFO">VALUE: [1.3347000000003828e-05, 1.3694000000001594e-05, 1.3360999999996459e-05, 1.3153000000001858e-05, 1.3528000000005702e-05, 1.3041999999997833e-05, 1.3569999999997473e-05, 1.3499999999999623e-05, 1.3695000000001067e-05, 1.3527999999998763e-05, 1.3194000000001094e-05, 1.3013999999998693e-05, 1.384699999999739e-05, 1.3860999999996959e-05, 1.3027999999998263e-05, 1.3528000000005702e-05, 1.3749999999999873e-05, 1.3374999999996029e-05, 1.3194000000001094e-05, 1.3708000000001164e-05, 1.3888999999996099e-05, 1.3361999999995933e-05, 1.3360999999996459e-05, 1.3694000000001594e-05, 1.3569999999997473e-05, 1.3042000000004772e-05, 1.3194000000001094e-05, 1.3222000000000234e-05, 1.3555999999997903e-05, 1.3347000000003828e-05, 1.3195000000000567e-05, 1.3860999999996959e-05, 1.3195000000000567e-05, 1.3013999999998693e-05, 1.3195000000000567e-05, 1.3459000000000387e-05, 1.3860999999996959e-05, 1.3679999999995085e-05, 1.3527999999998763e-05, 1.3542000000005272e-05, 1.3013999999998693e-05, 1.3709000000000637e-05, 1.302699999999879e-05, 1.3874999999996529e-05, 1.3513999999999193e-05, 1.302699999999879e-05, 1.3874999999996529e-05, 1.3014000000005632e-05, 1.3695000000001067e-05, 1.3195000000000567e-05]</msg>
<status status="PASS" starttime="20201115 22:11:16.863" endtime="20201115 22:11:16.867"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.850" endtime="20201115 22:11:16.868"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:16.875" endtime="20201115 22:11:16.877"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:16.883" endtime="20201115 22:11:16.904"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.878" endtime="20201115 22:11:16.906"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.870" endtime="20201115 22:11:16.907"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.362" endtime="20201115 22:11:16.908"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.359" endtime="20201115 22:11:16.909"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.357" endtime="20201115 22:11:16.909"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:16.914" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:16.937" endtime="20201115 22:11:16.960"></status>
</kw>
<msg timestamp="20201115 22:11:16.961" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:16.933" endtime="20201115 22:11:16.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:16.968" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:16.963" endtime="20201115 22:11:16.968"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:16.970" endtime="20201115 22:11:16.974"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.926" endtime="20201115 22:11:16.975"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.920" endtime="20201115 22:11:16.977"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:16.993" endtime="20201115 22:11:17.341"></status>
</kw>
<msg timestamp="20201115 22:11:17.348" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045312278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045326278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:16.990" endtime="20201115 22:11:17.349"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:17.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045312278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045326278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:17.350" endtime="20201115 22:11:17.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:17.369" endtime="20201115 22:11:17.373"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.983" endtime="20201115 22:11:17.374"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.978" endtime="20201115 22:11:17.376"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:17.386" level="INFO">${RESULT} = [{'time': 0.045326278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4000000000000123e-05, 'source_diff': 1.4000000000000123e-05}, {'time': 0.045610653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:17.377" endtime="20201115 22:11:17.387"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:17.418" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:17.388" endtime="20201115 22:11:17.419"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:17.430" level="INFO">NAME: 00-overhead-6-set</msg>
<status status="PASS" starttime="20201115 22:11:17.427" endtime="20201115 22:11:17.431"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:17.436" level="INFO">VALUE: [1.4000000000000123e-05, 1.3875000000003468e-05, 1.3291999999998083e-05, 1.377699999999954e-05, 1.3944000000001844e-05, 1.3958000000001414e-05, 1.4041999999998833e-05, 1.3291000000005548e-05, 1.405499999999893e-05, 1.3777999999999013e-05, 1.3291999999998083e-05, 1.3610999999996709e-05, 1.327699999999904e-05, 1.3929999999995335e-05, 1.4111000000004148e-05, 1.3819999999997723e-05, 1.3610999999996709e-05, 1.3277999999998513e-05, 1.3777999999999013e-05, 1.3415999999995265e-05, 1.3681000000001498e-05, 1.3292000000005022e-05, 1.4110999999997209e-05, 1.3610999999996709e-05, 1.3583999999997043e-05, 1.3763999999999443e-05, 1.3458000000000914e-05, 1.3235999999999803e-05, 1.4167000000002428e-05, 1.4110999999997209e-05, 1.327699999999904e-05, 1.3555000000005368e-05, 1.3596999999997139e-05, 1.3277999999998513e-05, 1.3443999999994405e-05, 1.3679999999995085e-05, 1.3610999999996709e-05, 1.3653000000002358e-05, 1.3263999999998943e-05, 1.3263999999998943e-05, 1.3944000000001844e-05, 1.3612000000003122e-05, 1.3763999999999443e-05, 1.3929999999995335e-05, 1.4110999999997209e-05, 1.4111000000004148e-05, 1.3736000000000304e-05, 1.4110999999997209e-05, 1.3931000000001748e-05, 1.3277999999998513e-05]</msg>
<status status="PASS" starttime="20201115 22:11:17.432" endtime="20201115 22:11:17.436"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.420" endtime="20201115 22:11:17.438"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:17.444" endtime="20201115 22:11:17.447"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:17.452" endtime="20201115 22:11:17.474"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.448" endtime="20201115 22:11:17.476"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.440" endtime="20201115 22:11:17.477"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.915" endtime="20201115 22:11:17.478"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.912" endtime="20201115 22:11:17.478"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:16.910" endtime="20201115 22:11:17.479"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:17.483" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:17.507" endtime="20201115 22:11:17.533"></status>
</kw>
<msg timestamp="20201115 22:11:17.534" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:17.504" endtime="20201115 22:11:17.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:17.540" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:17.536" endtime="20201115 22:11:17.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:17.542" endtime="20201115 22:11:17.546"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.496" endtime="20201115 22:11:17.547"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.490" endtime="20201115 22:11:17.549"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:17.565" endtime="20201115 22:11:17.908"></status>
</kw>
<msg timestamp="20201115 22:11:17.915" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045897222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045911597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:17.562" endtime="20201115 22:11:17.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:17.934" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045897222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045911597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:17.918" endtime="20201115 22:11:17.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:17.936" endtime="20201115 22:11:17.940"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.555" endtime="20201115 22:11:17.941"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.550" endtime="20201115 22:11:17.943"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:17.953" level="INFO">${RESULT} = [{'time': 0.045911597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4374999999997029e-05, 'source_diff': 1.4374999999997029e-05}, {'time': 0.046230208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:17.944" endtime="20201115 22:11:17.954"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:17.984" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:17.955" endtime="20201115 22:11:17.985"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:17.996" level="INFO">NAME: 00-overhead-7-set</msg>
<status status="PASS" starttime="20201115 22:11:17.993" endtime="20201115 22:11:17.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:18.003" level="INFO">VALUE: [1.4374999999997029e-05, 1.4361000000004398e-05, 1.3695000000001067e-05, 1.376299999999997e-05, 1.355499999999843e-05, 1.3694000000001594e-05, 1.3542000000005272e-05, 1.3667000000001928e-05, 1.4277999999999513e-05, 1.3681000000001498e-05, 1.3527999999998763e-05, 1.4013999999999693e-05, 1.4013999999999693e-05, 1.4181000000001998e-05, 1.4361000000004398e-05, 1.4361000000004398e-05, 1.4375000000003968e-05, 1.4360999999997459e-05, 1.4195000000001567e-05, 1.4042000000005772e-05, 1.3681000000001498e-05, 1.4319999999998223e-05, 1.358299999999757e-05, 1.431899999999875e-05, 1.3860999999996959e-05, 1.3695000000001067e-05, 1.3680000000002024e-05, 1.433299999999832e-05, 1.4027999999999263e-05, 1.3709000000000637e-05, 1.4139000000003288e-05, 1.3819999999997723e-05, 1.3695000000001067e-05, 1.3708000000001164e-05, 1.4000000000000123e-05, 1.3569999999997473e-05, 1.3722000000000734e-05, 1.4387999999997125e-05, 1.3695000000001067e-05, 1.3695000000001067e-05, 1.384699999999739e-05, 1.4027999999999263e-05, 1.3513999999999193e-05, 1.3847000000004328e-05, 1.3527999999998763e-05, 1.4194000000002094e-05, 1.434699999999789e-05, 1.4041999999998833e-05, 1.3860999999996959e-05, 1.4360999999997459e-05]</msg>
<status status="PASS" starttime="20201115 22:11:17.998" endtime="20201115 22:11:18.004"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.986" endtime="20201115 22:11:18.006"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:18.012" endtime="20201115 22:11:18.015"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:18.021" endtime="20201115 22:11:18.042"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.016" endtime="20201115 22:11:18.044"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.008" endtime="20201115 22:11:18.046"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.485" endtime="20201115 22:11:18.046"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.481" endtime="20201115 22:11:18.047"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:17.480" endtime="20201115 22:11:18.047"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:18.052" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:18.075" endtime="20201115 22:11:18.102"></status>
</kw>
<msg timestamp="20201115 22:11:18.103" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:18.071" endtime="20201115 22:11:18.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:18.109" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:18.105" endtime="20201115 22:11:18.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:18.111" endtime="20201115 22:11:18.115"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.064" endtime="20201115 22:11:18.116"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.058" endtime="20201115 22:11:18.118"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:18.134" endtime="20201115 22:11:18.477"></status>
</kw>
<msg timestamp="20201115 22:11:18.484" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045288514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045303125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:18.131" endtime="20201115 22:11:18.484"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:18.502" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045288514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045303125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:18.486" endtime="20201115 22:11:18.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:18.504" endtime="20201115 22:11:18.508"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.124" endtime="20201115 22:11:18.510"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.119" endtime="20201115 22:11:18.511"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:18.522" level="INFO">${RESULT} = [{'time': 0.045303125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.461099999999771e-05, 'source_diff': 1.461099999999771e-05}, {'time': 0.045660569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:18.513" endtime="20201115 22:11:18.522"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:18.553" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:18.524" endtime="20201115 22:11:18.553"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:18.563" level="INFO">NAME: 00-overhead-8-set</msg>
<status status="PASS" starttime="20201115 22:11:18.561" endtime="20201115 22:11:18.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:18.569" level="INFO">VALUE: [1.461099999999771e-05, 1.427700000000004e-05, 1.4638999999996849e-05, 1.3931000000001748e-05, 1.4250000000000373e-05, 1.4598000000004552e-05, 1.4583999999998043e-05, 1.4277999999999513e-05, 1.3777999999999013e-05, 1.4653000000003358e-05, 1.3763999999999443e-05, 1.4638999999996849e-05, 1.4430000000002774e-05, 1.459699999999814e-05, 1.3777999999999013e-05, 1.427700000000004e-05, 1.4263999999999943e-05, 1.379099999999911e-05, 1.461099999999771e-05, 1.4125000000003718e-05, 1.4445000000001817e-05, 1.4444000000002344e-05, 1.3791999999998583e-05, 1.3777999999999013e-05, 1.4263999999999943e-05, 1.4167000000002428e-05, 1.427700000000004e-05, 1.3763999999999443e-05, 1.3901999999996195e-05, 1.3945000000001317e-05, 1.461099999999771e-05, 1.4111000000004148e-05, 1.4458000000001914e-05, 1.3930000000002274e-05, 1.461099999999771e-05, 1.4111000000004148e-05, 1.4430999999995309e-05, 1.3889000000003038e-05, 1.427700000000004e-05, 1.3944000000001844e-05, 1.3791999999998583e-05, 1.3945000000001317e-05, 1.4222000000001234e-05, 1.427700000000004e-05, 1.3764000000006382e-05, 1.4625000000004218e-05, 1.3777999999999013e-05, 1.4097999999997113e-05, 1.3930999999994809e-05, 1.461099999999771e-05]</msg>
<status status="PASS" starttime="20201115 22:11:18.566" endtime="20201115 22:11:18.571"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.554" endtime="20201115 22:11:18.573"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:18.579" endtime="20201115 22:11:18.582"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:18.587" endtime="20201115 22:11:18.610"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.583" endtime="20201115 22:11:18.612"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.575" endtime="20201115 22:11:18.614"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.053" endtime="20201115 22:11:18.615"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.050" endtime="20201115 22:11:18.615"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.048" endtime="20201115 22:11:18.616"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:18.621" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:18.644" endtime="20201115 22:11:18.673"></status>
</kw>
<msg timestamp="20201115 22:11:18.674" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:18.641" endtime="20201115 22:11:18.675"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:18.680" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:18.677" endtime="20201115 22:11:18.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:18.683" endtime="20201115 22:11:18.686"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.634" endtime="20201115 22:11:18.688"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.628" endtime="20201115 22:11:18.689"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:18.706" endtime="20201115 22:11:19.054"></status>
</kw>
<msg timestamp="20201115 22:11:19.061" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048022639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048037153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:18.702" endtime="20201115 22:11:19.061"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:19.079" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048022639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048037153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:19.063" endtime="20201115 22:11:19.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:19.081" endtime="20201115 22:11:19.085"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.695" endtime="20201115 22:11:19.087"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.691" endtime="20201115 22:11:19.088"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:19.099" level="INFO">${RESULT} = [{'time': 0.048037153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4514000000000193e-05, 'source_diff': 1.4514000000000193e-05}, {'time': 0.048435708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:19.090" endtime="20201115 22:11:19.099"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:19.129" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:19.101" endtime="20201115 22:11:19.130"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:19.140" level="INFO">NAME: 00-overhead-9-set</msg>
<status status="PASS" starttime="20201115 22:11:19.138" endtime="20201115 22:11:19.141"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:19.146" level="INFO">VALUE: [1.4514000000000193e-05, 1.4680000000003024e-05, 1.4195000000001567e-05, 1.4013999999999693e-05, 1.4375000000003968e-05, 1.4791999999999583e-05, 1.4179999999995585e-05, 1.4527999999999763e-05, 1.4514000000000193e-05, 1.4527999999999763e-05, 1.4208000000001664e-05, 1.4695000000002068e-05, 1.4319999999998223e-05, 1.4179999999995585e-05, 1.404099999999936e-05, 1.458299999999857e-05, 1.434699999999789e-05, 1.4374999999997029e-05, 1.4013999999999693e-05, 1.4027999999999263e-05, 1.401300000000022e-05, 1.4347000000004828e-05, 1.4209000000001137e-05, 1.4194000000002094e-05, 1.4194000000002094e-05, 1.486099999999796e-05, 1.4500000000000624e-05, 1.4541999999999333e-05, 1.4681000000002498e-05, 1.4541999999999333e-05, 1.486099999999796e-05, 1.4861000000004898e-05, 1.4222000000001234e-05, 1.4180000000002524e-05, 1.4167000000002428e-05, 1.486099999999796e-05, 1.433299999999832e-05, 1.4195000000008506e-05, 1.4708000000002164e-05, 1.4542000000006272e-05, 1.429099999999961e-05, 1.4847999999997863e-05, 1.4221999999994295e-05, 1.3972000000000984e-05, 1.4194000000009033e-05, 1.4027999999999263e-05, 1.4027999999999263e-05, 1.434699999999789e-05, 1.4805999999992214e-05, 1.434699999999789e-05]</msg>
<status status="PASS" starttime="20201115 22:11:19.142" endtime="20201115 22:11:19.148"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.131" endtime="20201115 22:11:19.150"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:19.156" endtime="20201115 22:11:19.159"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:19.165" endtime="20201115 22:11:19.186"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.160" endtime="20201115 22:11:19.188"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.152" endtime="20201115 22:11:19.189"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.622" endtime="20201115 22:11:19.190"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.619" endtime="20201115 22:11:19.191"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:18.617" endtime="20201115 22:11:19.191"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:19.196" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:19.220" endtime="20201115 22:11:19.251"></status>
</kw>
<msg timestamp="20201115 22:11:19.252" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:19.216" endtime="20201115 22:11:19.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:19.258" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:19.255" endtime="20201115 22:11:19.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:19.261" endtime="20201115 22:11:19.264"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.208" endtime="20201115 22:11:19.266"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.202" endtime="20201115 22:11:19.267"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:19.284" endtime="20201115 22:11:19.634"></status>
</kw>
<msg timestamp="20201115 22:11:19.641" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046813917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046828847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:19.280" endtime="20201115 22:11:19.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:19.659" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046813917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046828847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:19.643" endtime="20201115 22:11:19.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:19.661" endtime="20201115 22:11:19.665"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.273" endtime="20201115 22:11:19.667"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.269" endtime="20201115 22:11:19.668"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:19.679" level="INFO">${RESULT} = [{'time': 0.046828847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4930000000003274e-05, 'source_diff': 1.4930000000003274e-05}, {'time': 0.0472635, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:19.670" endtime="20201115 22:11:19.680"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:19.712" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:19.681" endtime="20201115 22:11:19.712"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:19.723" level="INFO">NAME: 00-overhead-10-set</msg>
<status status="PASS" starttime="20201115 22:11:19.720" endtime="20201115 22:11:19.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:19.728" level="INFO">VALUE: [1.4930000000003274e-05, 1.4944000000002844e-05, 1.4778000000000013e-05, 1.4417000000002678e-05, 1.459699999999814e-05, 1.4277999999999513e-05, 1.4750000000000874e-05, 1.511099999999821e-05, 1.4500000000000624e-05, 1.4250000000000373e-05, 1.511099999999821e-05, 1.458299999999857e-05, 1.4625000000004218e-05, 1.486099999999796e-05, 1.5194999999995629e-05, 1.4916999999996239e-05, 1.4250000000000373e-05, 1.4374999999997029e-05, 1.455499999999943e-05, 1.461099999999771e-05, 1.4791999999999583e-05, 1.5124999999997779e-05, 1.4305999999998653e-05, 1.509699999999864e-05, 1.4222000000001234e-05, 1.4570000000005412e-05, 1.4473000000000957e-05, 1.5151999999997445e-05, 1.4792000000006522e-05, 1.4263999999999943e-05, 1.5124999999997779e-05, 1.47769999999936e-05, 1.4624999999997279e-05, 1.4431000000002248e-05, 1.4459000000001387e-05, 1.4778000000000013e-05, 1.4778000000000013e-05, 1.4777999999993074e-05, 1.4943999999988966e-05, 1.4445000000001817e-05, 1.511099999999821e-05, 1.4778000000006952e-05, 1.50969999999917e-05, 1.461099999999771e-05, 1.4778000000006952e-05, 1.5028000000000263e-05, 1.5098000000005052e-05, 1.4791999999999583e-05, 1.4278000000006452e-05, 1.4444000000002344e-05]</msg>
<status status="PASS" starttime="20201115 22:11:19.725" endtime="20201115 22:11:19.730"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.714" endtime="20201115 22:11:19.732"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:19.738" endtime="20201115 22:11:19.741"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:19.746" endtime="20201115 22:11:19.768"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.742" endtime="20201115 22:11:19.770"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.734" endtime="20201115 22:11:19.771"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.197" endtime="20201115 22:11:19.772"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.194" endtime="20201115 22:11:19.772"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.192" endtime="20201115 22:11:19.773"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:19.778" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:19.800" endtime="20201115 22:11:19.834"></status>
</kw>
<msg timestamp="20201115 22:11:19.835" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:19.797" endtime="20201115 22:11:19.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:19.841" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:19.837" endtime="20201115 22:11:19.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:19.843" endtime="20201115 22:11:19.847"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.790" endtime="20201115 22:11:19.848"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.784" endtime="20201115 22:11:19.850"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:19.866" endtime="20201115 22:11:20.216"></status>
</kw>
<msg timestamp="20201115 22:11:20.223" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045706569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045721597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:19.863" endtime="20201115 22:11:20.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:20.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045706569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045721597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:20.225" endtime="20201115 22:11:20.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:20.248" endtime="20201115 22:11:20.252"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.856" endtime="20201115 22:11:20.254"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.851" endtime="20201115 22:11:20.255"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:20.266" level="INFO">${RESULT} = [{'time': 0.045721597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5028000000000263e-05, 'source_diff': 1.5028000000000263e-05}, {'time': 0.046190236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:20.257" endtime="20201115 22:11:20.266"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:20.296" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:20.268" endtime="20201115 22:11:20.297"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:20.307" level="INFO">NAME: 00-overhead-11-set</msg>
<status status="PASS" starttime="20201115 22:11:20.305" endtime="20201115 22:11:20.308"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:20.312" level="INFO">VALUE: [1.5028000000000263e-05, 1.4680000000003024e-05, 1.484699999999839e-05, 1.531899999999975e-05, 1.486099999999796e-05, 1.5208000000002664e-05, 1.502700000000079e-05, 1.4695000000002068e-05, 1.5348000000005302e-05, 1.4695000000002068e-05, 1.4694999999995129e-05, 1.486099999999796e-05, 1.486099999999796e-05, 1.4708000000002164e-05, 1.5028000000000263e-05, 1.5347999999998363e-05, 1.5194999999995629e-05, 1.536099999999846e-05, 1.4889000000004038e-05, 1.536099999999846e-05, 1.451300000000072e-05, 1.5208999999995199e-05, 1.5180000000003524e-05, 1.4693999999995655e-05, 1.534699999999889e-05, 1.5194000000003094e-05, 1.4750000000000874e-05, 1.536099999999846e-05, 1.5207999999995725e-05, 1.455499999999943e-05, 1.5167000000003428e-05, 1.5221999999995295e-05, 1.4458000000001914e-05, 1.4708000000002164e-05, 1.5194000000003094e-05, 1.5221999999995295e-05, 1.5347999999998363e-05, 1.5375000000011907e-05, 1.4693999999995655e-05, 1.456899999999206e-05, 1.5389000000004538e-05, 1.4999999999987246e-05, 1.534699999999889e-05, 1.536099999999152e-05, 1.4791999999999583e-05, 1.5193999999996155e-05, 1.4513999999993255e-05, 1.4694999999995129e-05, 1.531899999999975e-05, 1.484699999999839e-05]</msg>
<status status="PASS" starttime="20201115 22:11:20.309" endtime="20201115 22:11:20.314"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.298" endtime="20201115 22:11:20.316"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:20.322" endtime="20201115 22:11:20.325"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:20.330" endtime="20201115 22:11:20.352"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.326" endtime="20201115 22:11:20.354"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.318" endtime="20201115 22:11:20.355"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.779" endtime="20201115 22:11:20.356"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.775" endtime="20201115 22:11:20.357"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.774" endtime="20201115 22:11:20.357"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:20.362" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:20.386" endtime="20201115 22:11:20.421"></status>
</kw>
<msg timestamp="20201115 22:11:20.423" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:20.382" endtime="20201115 22:11:20.423"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:20.429" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:20.425" endtime="20201115 22:11:20.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:20.431" endtime="20201115 22:11:20.435"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.375" endtime="20201115 22:11:20.436"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.369" endtime="20201115 22:11:20.438"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:20.455" endtime="20201115 22:11:20.789"></status>
</kw>
<msg timestamp="20201115 22:11:20.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047501792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047517222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:20.451" endtime="20201115 22:11:20.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:20.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047501792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047517222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:20.798" endtime="20201115 22:11:20.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:20.816" endtime="20201115 22:11:20.820"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.444" endtime="20201115 22:11:20.822"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.439" endtime="20201115 22:11:20.823"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:20.834" level="INFO">${RESULT} = [{'time': 0.047517222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5429999999996835e-05, 'source_diff': 1.5429999999996835e-05}, {'time': 0.048029819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:20.825" endtime="20201115 22:11:20.834"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:20.864" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:20.836" endtime="20201115 22:11:20.865"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:20.875" level="INFO">NAME: 00-overhead-12-set</msg>
<status status="PASS" starttime="20201115 22:11:20.873" endtime="20201115 22:11:20.876"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:20.881" level="INFO">VALUE: [1.5429999999996835e-05, 1.5250000000001374e-05, 1.4763999999993505e-05, 1.541699999999674e-05, 1.5583999999999043e-05, 1.4916999999996239e-05, 1.4943999999995905e-05, 1.562499999999828e-05, 1.527700000000104e-05, 1.5611999999998183e-05, 1.5278000000000513e-05, 1.5639000000004788e-05, 1.511099999999821e-05, 1.5278000000000513e-05, 1.4917000000003178e-05, 1.4791999999999583e-05, 1.4778000000000013e-05, 1.4764000000000443e-05, 1.5401999999997695e-05, 1.4958000000002414e-05, 1.5597000000006078e-05, 1.4931000000002748e-05, 1.5249999999994435e-05, 1.561099999999871e-05, 1.5458000000002914e-05, 1.4764000000000443e-05, 1.5277999999993574e-05, 1.5124999999997779e-05, 1.5486000000002054e-05, 1.4930000000003274e-05, 1.5429999999996835e-05, 1.4999999999987246e-05, 1.545899999999545e-05, 1.5485999999995115e-05, 1.5443999999989466e-05, 1.5125000000004718e-05, 1.5597000000006078e-05, 1.5445000000002818e-05, 1.50969999999917e-05, 1.5570000000006412e-05, 1.511099999999821e-05, 1.4916000000003704e-05, 1.4917000000003178e-05, 1.4777999999993074e-05, 1.4777999999993074e-05, 1.4874999999997529e-05, 1.5097000000005578e-05, 1.55969999999922e-05, 1.52769999999941e-05, 1.561099999999871e-05]</msg>
<status status="PASS" starttime="20201115 22:11:20.878" endtime="20201115 22:11:20.883"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.866" endtime="20201115 22:11:20.884"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:20.890" endtime="20201115 22:11:20.893"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:20.899" endtime="20201115 22:11:20.920"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.894" endtime="20201115 22:11:20.922"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.886" endtime="20201115 22:11:20.923"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.363" endtime="20201115 22:11:20.924"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.360" endtime="20201115 22:11:20.925"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.358" endtime="20201115 22:11:20.925"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:20.930" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:20.952" endtime="20201115 22:11:20.989"></status>
</kw>
<msg timestamp="20201115 22:11:20.990" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:20.949" endtime="20201115 22:11:20.990"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:20.997" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:20.992" endtime="20201115 22:11:20.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:20.999" endtime="20201115 22:11:21.003"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.942" endtime="20201115 22:11:21.005"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.936" endtime="20201115 22:11:21.006"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:21.022" endtime="20201115 22:11:21.357"></status>
</kw>
<msg timestamp="20201115 22:11:21.364" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045301986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045317361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:21.019" endtime="20201115 22:11:21.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:21.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045301986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045317361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:21.366" endtime="20201115 22:11:21.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:21.384" endtime="20201115 22:11:21.388"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.012" endtime="20201115 22:11:21.389"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.008" endtime="20201115 22:11:21.391"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:21.402" level="INFO">${RESULT} = [{'time': 0.045317361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.537499999999803e-05, 'source_diff': 1.537499999999803e-05}, {'time': 0.045863153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:21.393" endtime="20201115 22:11:21.403"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:21.434" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:21.404" endtime="20201115 22:11:21.434"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:21.444" level="INFO">NAME: 00-overhead-13-set</msg>
<status status="PASS" starttime="20201115 22:11:21.442" endtime="20201115 22:11:21.445"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:21.450" level="INFO">VALUE: [1.537499999999803e-05, 1.5541999999993394e-05, 1.5195000000002568e-05, 1.5722000000002734e-05, 1.5514000000001194e-05, 1.5207999999995725e-05, 1.5014000000000693e-05, 1.584699999999939e-05, 1.586099999999896e-05, 1.5014000000000693e-05, 1.583299999999982e-05, 1.534699999999889e-05, 1.537499999999803e-05, 1.563899999999785e-05, 1.5319999999999223e-05, 1.537499999999803e-05, 1.586099999999896e-05, 1.5528000000000763e-05, 1.5514000000001194e-05, 1.534699999999889e-05, 1.5180000000003524e-05, 1.5528000000000763e-05, 1.5665999999997515e-05, 1.5625000000005218e-05, 1.566699999999699e-05, 1.5527999999993825e-05, 1.5027999999993324e-05, 1.5707999999996225e-05, 1.5542000000000333e-05, 1.5847999999998863e-05, 1.4973000000001457e-05, 1.5708000000003164e-05, 1.5361000000005398e-05, 1.5000000000001124e-05, 1.536099999999152e-05, 1.5193999999996155e-05, 1.5028000000000263e-05, 1.5153000000003858e-05, 1.590299999999767e-05, 1.5514000000008132e-05, 1.584699999999939e-05, 1.534699999999889e-05, 1.5012999999994281e-05, 1.5693999999996655e-05, 1.5861000000005898e-05, 1.5361000000005398e-05, 1.5041999999992894e-05, 1.5041999999992894e-05, 1.5861000000005898e-05, 1.5138999999997349e-05]</msg>
<status status="PASS" starttime="20201115 22:11:21.447" endtime="20201115 22:11:21.452"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.435" endtime="20201115 22:11:21.454"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:21.460" endtime="20201115 22:11:21.462"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:21.468" endtime="20201115 22:11:21.490"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.464" endtime="20201115 22:11:21.491"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.455" endtime="20201115 22:11:21.493"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.931" endtime="20201115 22:11:21.493"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.927" endtime="20201115 22:11:21.494"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.926" endtime="20201115 22:11:21.494"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:21.499" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:21.523" endtime="20201115 22:11:21.561"></status>
</kw>
<msg timestamp="20201115 22:11:21.562" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:21.519" endtime="20201115 22:11:21.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:21.568" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:21.565" endtime="20201115 22:11:21.569"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:21.571" endtime="20201115 22:11:21.574"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.512" endtime="20201115 22:11:21.576"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.506" endtime="20201115 22:11:21.577"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:21.594" endtime="20201115 22:11:21.928"></status>
</kw>
<msg timestamp="20201115 22:11:21.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046490458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046506417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:21.590" endtime="20201115 22:11:21.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:21.953" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046490458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046506417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:21.937" endtime="20201115 22:11:21.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:21.955" endtime="20201115 22:11:21.959"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.583" endtime="20201115 22:11:21.960"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.579" endtime="20201115 22:11:21.962"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:21.973" level="INFO">${RESULT} = [{'time': 0.046506417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5959000000002888e-05, 'source_diff': 1.5959000000002888e-05}, {'time': 0.047089986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:21.964" endtime="20201115 22:11:21.974"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:22.006" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:21.975" endtime="20201115 22:11:22.007"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:22.017" level="INFO">NAME: 00-overhead-14-set</msg>
<status status="PASS" starttime="20201115 22:11:22.015" endtime="20201115 22:11:22.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:22.024" level="INFO">VALUE: [1.5959000000002888e-05, 1.5929999999997335e-05, 1.593099999999681e-05, 1.5929999999997335e-05, 1.5292000000000083e-05, 1.5653000000004358e-05, 1.594499999999638e-05, 1.5945000000003318e-05, 1.5264000000000943e-05, 1.615299999999792e-05, 1.5778000000001013e-05, 1.5778000000001013e-05, 1.559699999999914e-05, 1.5792000000000583e-05, 1.5264000000000943e-05, 1.5458000000002914e-05, 1.5292000000000083e-05, 1.5792000000000583e-05, 1.5292000000000083e-05, 1.611099999999921e-05, 1.5944000000003844e-05, 1.5457999999995975e-05, 1.562499999999828e-05, 1.5985999999995615e-05, 1.5443999999996405e-05, 1.5764000000001444e-05, 1.5278000000000513e-05, 1.5292000000000083e-05, 1.5277999999993574e-05, 1.55969999999922e-05, 1.5458000000009853e-05, 1.579100000000111e-05, 1.5249999999994435e-05, 1.5472000000002484e-05, 1.5207999999988786e-05, 1.5777999999994075e-05, 1.611099999999921e-05, 1.562499999999134e-05, 1.5777999999994075e-05, 1.590299999999767e-05, 1.5957999999996475e-05, 1.6097000000006578e-05, 1.561099999999871e-05, 1.611099999999921e-05, 1.5236000000001804e-05, 1.5986000000009493e-05, 1.5597000000006078e-05, 1.5611000000012587e-05, 1.5277999999993574e-05, 1.5791999999986706e-05]</msg>
<status status="PASS" starttime="20201115 22:11:22.020" endtime="20201115 22:11:22.025"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.008" endtime="20201115 22:11:22.027"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:22.033" endtime="20201115 22:11:22.036"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:22.042" endtime="20201115 22:11:22.064"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.037" endtime="20201115 22:11:22.065"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.028" endtime="20201115 22:11:22.067"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.500" endtime="20201115 22:11:22.068"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.497" endtime="20201115 22:11:22.068"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:21.495" endtime="20201115 22:11:22.069"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:22.074" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:22.097" endtime="20201115 22:11:22.139"></status>
</kw>
<msg timestamp="20201115 22:11:22.140" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:22.094" endtime="20201115 22:11:22.140"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:22.146" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:22.142" endtime="20201115 22:11:22.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:22.148" endtime="20201115 22:11:22.152"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.086" endtime="20201115 22:11:22.153"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.080" endtime="20201115 22:11:22.155"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:22.171" endtime="20201115 22:11:22.518"></status>
</kw>
<msg timestamp="20201115 22:11:22.525" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047365347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047381597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:22.168" endtime="20201115 22:11:22.526"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:22.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047365347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047381597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:22.528" endtime="20201115 22:11:22.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:22.546" endtime="20201115 22:11:22.550"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.161" endtime="20201115 22:11:22.552"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.156" endtime="20201115 22:11:22.553"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:22.564" level="INFO">${RESULT} = [{'time': 0.047381597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6249999999995435e-05, 'source_diff': 1.6249999999995435e-05}, {'time': 0.048007278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:22.555" endtime="20201115 22:11:22.564"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:22.594" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:22.566" endtime="20201115 22:11:22.595"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:22.605" level="INFO">NAME: 00-overhead-15-set</msg>
<status status="PASS" starttime="20201115 22:11:22.603" endtime="20201115 22:11:22.606"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:22.611" level="INFO">VALUE: [1.6249999999995435e-05, 1.636099999999946e-05, 1.584699999999939e-05, 1.602700000000179e-05, 1.6181000000003998e-05, 1.634699999999989e-05, 1.612499999999878e-05, 1.587499999999853e-05, 1.6028000000001263e-05, 1.5763999999994505e-05, 1.5514000000001194e-05, 1.5694000000003594e-05, 1.6235999999995865e-05, 1.5514000000001194e-05, 1.586099999999896e-05, 1.5667000000003928e-05, 1.6195000000003568e-05, 1.636099999999946e-05, 1.583299999999982e-05, 1.5694000000003594e-05, 1.586099999999896e-05, 1.5527999999993825e-05, 1.636099999999946e-05, 1.6028000000001263e-05, 1.63889999999986e-05, 1.554099999999392e-05, 1.6014000000008632e-05, 1.6028000000001263e-05, 1.6028000000001263e-05, 1.6013999999994755e-05, 1.637499999999903e-05, 1.6193999999997155e-05, 1.5528000000000763e-05, 1.637499999999903e-05, 1.6000000000002124e-05, 1.584699999999939e-05, 1.5528000000000763e-05, 1.584699999999939e-05, 1.5528000000000763e-05, 1.5693999999996655e-05, 1.6125000000005718e-05, 1.6013999999994755e-05, 1.618099999999012e-05, 1.634699999999989e-05, 1.5693999999996655e-05, 1.6195000000010507e-05, 1.636099999999252e-05, 1.6014000000008632e-05, 1.5541999999993394e-05, 1.6235999999988926e-05]</msg>
<status status="PASS" starttime="20201115 22:11:22.607" endtime="20201115 22:11:22.613"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.596" endtime="20201115 22:11:22.615"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:22.621" endtime="20201115 22:11:22.624"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:22.629" endtime="20201115 22:11:22.651"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.625" endtime="20201115 22:11:22.652"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.617" endtime="20201115 22:11:22.654"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.075" endtime="20201115 22:11:22.655"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.071" endtime="20201115 22:11:22.655"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.069" endtime="20201115 22:11:22.656"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:22.660" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:22.683" endtime="20201115 22:11:22.726"></status>
</kw>
<msg timestamp="20201115 22:11:22.727" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:22.679" endtime="20201115 22:11:22.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:22.733" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:22.729" endtime="20201115 22:11:22.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:22.735" endtime="20201115 22:11:22.739"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.672" endtime="20201115 22:11:22.741"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.667" endtime="20201115 22:11:22.742"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:22.758" endtime="20201115 22:11:23.106"></status>
</kw>
<msg timestamp="20201115 22:11:23.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045397833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045413958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:22.755" endtime="20201115 22:11:23.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:23.131" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045397833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045413958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:23.115" endtime="20201115 22:11:23.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:23.133" endtime="20201115 22:11:23.137"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.748" endtime="20201115 22:11:23.138"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.743" endtime="20201115 22:11:23.140"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:23.150" level="INFO">${RESULT} = [{'time': 0.045413958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.612499999999878e-05, 'source_diff': 1.612499999999878e-05}, {'time': 0.046078931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:23.141" endtime="20201115 22:11:23.151"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:23.181" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:23.152" endtime="20201115 22:11:23.182"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:23.192" level="INFO">NAME: 00-overhead-16-set</msg>
<status status="PASS" starttime="20201115 22:11:23.190" endtime="20201115 22:11:23.193"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:23.198" level="INFO">VALUE: [1.612499999999878e-05, 1.591699999999724e-05, 1.5764000000001444e-05, 1.5721999999995795e-05, 1.6263999999995005e-05, 1.6292000000001083e-05, 1.612499999999878e-05, 1.5943999999996905e-05, 1.611099999999921e-05, 1.6278000000001513e-05, 1.611099999999921e-05, 1.5764000000001444e-05, 1.609699999999964e-05, 1.5764000000001444e-05, 1.5806000000000153e-05, 1.6263999999995005e-05, 1.5736000000002304e-05, 1.608300000000007e-05, 1.5735999999995365e-05, 1.609699999999964e-05, 1.659700000000014e-05, 1.611099999999921e-05, 1.661099999999971e-05, 1.6111999999998683e-05, 1.661099999999971e-05, 1.594499999999638e-05, 1.5777999999994075e-05, 1.658300000000057e-05, 1.5777999999994075e-05, 1.611099999999921e-05, 1.615299999999098e-05, 1.6472000000003484e-05, 1.59169999999903e-05, 1.5777999999994075e-05, 1.6458000000010853e-05, 1.612499999999184e-05, 1.5957999999996475e-05, 1.6611999999999183e-05, 1.5778000000007952e-05, 1.65969999999932e-05, 1.5943999999989966e-05, 1.6264000000001944e-05, 1.659700000000708e-05, 1.661099999999971e-05, 1.659700000000708e-05, 1.611099999999921e-05, 1.594499999998944e-05, 1.577700000000848e-05, 1.6277999999994575e-05, 1.611099999999921e-05]</msg>
<status status="PASS" starttime="20201115 22:11:23.194" endtime="20201115 22:11:23.200"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:23.183" endtime="20201115 22:11:23.202"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:23.208" endtime="20201115 22:11:23.211"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:23.216" endtime="20201115 22:11:23.238"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:23.212" endtime="20201115 22:11:23.240"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:23.204" endtime="20201115 22:11:23.241"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.661" endtime="20201115 22:11:23.242"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.658" endtime="20201115 22:11:23.242"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:22.656" endtime="20201115 22:11:23.243"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:23.248" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:23.270" endtime="20201115 22:11:23.315"></status>
</kw>
<msg timestamp="20201115 22:11:23.316" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:23.267" endtime="20201115 22:11:23.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:23.322" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:23.319" endtime="20201115 22:11:23.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:23.325" endtime="20201115 22:11:23.329"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:23.260" endtime="20201115 22:11:23.330"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:23.254" endtime="20201115 22:11:23.332"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:23.348" endtime="20201115 22:11:23.694"></status>
</kw>
<msg timestamp="20201115 22:11:23.701" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045732889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045749083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:23.345" endtime="20201115 22:11:23.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:23.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045732889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045749083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:23.703" endtime="20201115 22:11:23.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:23.721" endtime="20201115 22:11:23.725"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:23.337" endtime="20201115 22:11:23.727"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:23.333" endtime="20201115 22:11:23.728"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:23.739" level="INFO">${RESULT} = [{'time': 0.045749083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6194000000004094e-05, 'source_diff': 1.6194000000004094e-05}, {'time': 0.046455014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:23.730" endtime="20201115 22:11:23.740"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:23.770" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:23.741" endtime="20201115 22:11:23.771"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:23.781" level="INFO">NAME: 00-overhead-17-set</msg>
<status status="PASS" starttime="20201115 22:11:23.779" endtime="20201115 22:11:23.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:23.786" level="INFO">VALUE: [1.6194000000004094e-05, 1.6028000000001263e-05, 1.6707999999997225e-05, 1.6708000000004164e-05, 1.6861999999999433e-05, 1.6222000000003234e-05, 1.679100000000211e-05, 1.6667000000004928e-05, 1.6707999999997225e-05, 1.616699999999749e-05, 1.6195000000003568e-05, 1.5999999999995185e-05, 1.6195000000003568e-05, 1.6028000000001263e-05, 1.68889999999991e-05, 1.6708000000004164e-05, 1.594499999999638e-05, 1.665299999999842e-05, 1.6556000000000903e-05, 1.690299999999867e-05, 1.6694000000004594e-05, 1.687499999999953e-05, 1.683300000000082e-05, 1.6415999999998265e-05, 1.6375000000012907e-05, 1.6708000000004164e-05, 1.619499999999663e-05, 1.6693999999997655e-05, 1.6693999999997655e-05, 1.684700000000039e-05, 1.6028000000001263e-05, 1.6361000000006398e-05, 1.684700000000039e-05, 1.608300000000007e-05, 1.6861000000006898e-05, 1.636099999999252e-05, 1.6195000000010507e-05, 1.684700000000039e-05, 1.6193999999997155e-05, 1.634699999999989e-05, 1.605500000000093e-05, 1.6193999999997155e-05, 1.669499999999713e-05, 1.6528000000001764e-05, 1.6180000000004524e-05, 1.634699999999989e-05, 1.6347999999999363e-05, 1.6861000000006898e-05, 1.5985999999995615e-05, 1.6903000000012547e-05]</msg>
<status status="PASS" starttime="20201115 22:11:23.783" endtime="20201115 22:11:23.788"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:23.772" endtime="20201115 22:11:23.790"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:23.796" endtime="20201115 22:11:23.799"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:23.805" endtime="20201115 22:11:23.826"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:23.800" endtime="20201115 22:11:23.828"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:23.792" endtime="20201115 22:11:23.829"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:23.249" endtime="20201115 22:11:23.830"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:23.245" endtime="20201115 22:11:23.831"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:23.244" endtime="20201115 22:11:23.831"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:23.836" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:23.859" endtime="20201115 22:11:23.906"></status>
</kw>
<msg timestamp="20201115 22:11:23.907" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:23.855" endtime="20201115 22:11:23.907"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:23.913" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:23.909" endtime="20201115 22:11:23.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:23.915" endtime="20201115 22:11:23.919"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:23.848" endtime="20201115 22:11:23.920"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:23.842" endtime="20201115 22:11:23.922"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:23.938" endtime="20201115 22:11:24.280"></status>
</kw>
<msg timestamp="20201115 22:11:24.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045854903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045872014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:23.935" endtime="20201115 22:11:24.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:24.305" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045854903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045872014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:24.289" endtime="20201115 22:11:24.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:24.308" endtime="20201115 22:11:24.311"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:23.928" endtime="20201115 22:11:24.313"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:23.923" endtime="20201115 22:11:24.315"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:24.325" level="INFO">${RESULT} = [{'time': 0.045872014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.711100000000021e-05, 'source_diff': 1.711100000000021e-05}, {'time': 0.046617236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:24.316" endtime="20201115 22:11:24.326"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:24.358" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:24.327" endtime="20201115 22:11:24.358"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:24.368" level="INFO">NAME: 00-overhead-18-set</msg>
<status status="PASS" starttime="20201115 22:11:24.366" endtime="20201115 22:11:24.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:24.374" level="INFO">VALUE: [1.711100000000021e-05, 1.712499999999978e-05, 1.6443999999997405e-05, 1.6778000000002014e-05, 1.711100000000021e-05, 1.661099999999971e-05, 1.627700000000204e-05, 1.695899999999695e-05, 1.6943999999997905e-05, 1.709700000000064e-05, 1.7070000000000973e-05, 1.6278000000001513e-05, 1.645899999999645e-05, 1.6958000000004414e-05, 1.641699999999774e-05, 1.6764000000002444e-05, 1.715299999999892e-05, 1.6264000000001944e-05, 1.6778000000002014e-05, 1.708299999999413e-05, 1.6278000000001513e-05, 1.6791999999994645e-05, 1.6278000000001513e-05, 1.711100000000021e-05, 1.6292000000001083e-05, 1.6457999999996975e-05, 1.6764000000002444e-05, 1.643099999999731e-05, 1.6777999999995075e-05, 1.6959000000010827e-05, 1.6277999999994575e-05, 1.6777999999995075e-05, 1.709700000000758e-05, 1.713899999999935e-05, 1.6792000000001583e-05, 1.6777999999995075e-05, 1.6929999999998335e-05, 1.693099999999781e-05, 1.6278000000008452e-05, 1.6500000000002624e-05, 1.662499999999234e-05, 1.6777999999995075e-05, 1.6278000000008452e-05, 1.711100000000021e-05, 1.6945000000004318e-05, 1.6221999999996295e-05, 1.6791999999987706e-05, 1.622299999999577e-05, 1.6792000000001583e-05, 1.6625000000006218e-05]</msg>
<status status="PASS" starttime="20201115 22:11:24.371" endtime="20201115 22:11:24.376"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:24.359" endtime="20201115 22:11:24.377"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:24.384" endtime="20201115 22:11:24.386"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:24.392" endtime="20201115 22:11:24.413"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:24.388" endtime="20201115 22:11:24.415"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:24.379" endtime="20201115 22:11:24.417"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:23.837" endtime="20201115 22:11:24.417"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:23.834" endtime="20201115 22:11:24.418"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:23.832" endtime="20201115 22:11:24.418"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:24.423" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:24.446" endtime="20201115 22:11:24.494"></status>
</kw>
<msg timestamp="20201115 22:11:24.495" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:24.442" endtime="20201115 22:11:24.496"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:24.502" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:24.498" endtime="20201115 22:11:24.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:24.504" endtime="20201115 22:11:24.508"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:24.435" endtime="20201115 22:11:24.510"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:24.429" endtime="20201115 22:11:24.511"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:24.529" endtime="20201115 22:11:24.864"></status>
</kw>
<msg timestamp="20201115 22:11:24.871" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045694764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045711806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:24.525" endtime="20201115 22:11:24.872"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:24.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045694764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045711806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:24.873" endtime="20201115 22:11:24.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:24.892" endtime="20201115 22:11:24.895"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:24.517" endtime="20201115 22:11:24.897"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:24.512" endtime="20201115 22:11:24.898"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:24.909" level="INFO">${RESULT} = [{'time': 0.045711806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7042000000001833e-05, 'source_diff': 1.7042000000001833e-05}, {'time': 0.046493042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:24.900" endtime="20201115 22:11:24.909"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:24.940" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:24.911" endtime="20201115 22:11:24.940"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:24.950" level="INFO">NAME: 00-overhead-19-set</msg>
<status status="PASS" starttime="20201115 22:11:24.948" endtime="20201115 22:11:24.951"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:24.956" level="INFO">VALUE: [1.7042000000001833e-05, 1.7084000000000543e-05, 1.736100000000046e-05, 1.6693999999997655e-05, 1.6527999999994825e-05, 1.686099999999996e-05, 1.7042000000001833e-05, 1.737500000000003e-05, 1.684700000000039e-05, 1.704100000000236e-05, 1.736100000000046e-05, 1.704100000000236e-05, 1.7027999999995325e-05, 1.6514000000002194e-05, 1.6528000000001764e-05, 1.7223000000003708e-05, 1.6569000000001e-05, 1.6708000000004164e-05, 1.7028000000002264e-05, 1.67089999999967e-05, 1.684700000000039e-05, 1.686099999999996e-05, 1.7221999999997295e-05, 1.6861000000006898e-05, 1.7193999999998155e-05, 1.7013999999995755e-05, 1.722299999999677e-05, 1.719499999999763e-05, 1.738899999999266e-05, 1.7207999999990786e-05, 1.6485999999996115e-05, 1.7208000000004664e-05, 1.705500000000193e-05, 1.6833999999993354e-05, 1.7180000000005524e-05, 1.7235999999989926e-05, 1.6528000000001764e-05, 1.6693999999997655e-05, 1.7042000000008772e-05, 1.7041999999994895e-05, 1.6528000000001764e-05, 1.6861000000006898e-05, 1.7013999999995755e-05, 1.652700000000229e-05, 1.7209000000004138e-05, 1.7208000000004664e-05, 1.709700000000758e-05, 1.7361000000007398e-05, 1.719499999999763e-05, 1.6695000000011007e-05]</msg>
<status status="PASS" starttime="20201115 22:11:24.953" endtime="20201115 22:11:24.958"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:24.941" endtime="20201115 22:11:24.959"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:24.966" endtime="20201115 22:11:24.968"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:24.974" endtime="20201115 22:11:24.996"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:24.969" endtime="20201115 22:11:24.997"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:24.961" endtime="20201115 22:11:24.999"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:24.424" endtime="20201115 22:11:24.999"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:24.421" endtime="20201115 22:11:25.000"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:24.419" endtime="20201115 22:11:25.001"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:25.005" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:25.028" endtime="20201115 22:11:25.078"></status>
</kw>
<msg timestamp="20201115 22:11:25.079" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:25.025" endtime="20201115 22:11:25.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:25.086" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:25.081" endtime="20201115 22:11:25.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:25.088" endtime="20201115 22:11:25.092"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:25.018" endtime="20201115 22:11:25.094"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:25.012" endtime="20201115 22:11:25.095"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:25.111" endtime="20201115 22:11:25.445"></status>
</kw>
<msg timestamp="20201115 22:11:25.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045771417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045789028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:25.108" endtime="20201115 22:11:25.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:25.470" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045771417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045789028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:25.455" endtime="20201115 22:11:25.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:25.473" endtime="20201115 22:11:25.477"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:25.101" endtime="20201115 22:11:25.478"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:25.096" endtime="20201115 22:11:25.480"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:25.490" level="INFO">${RESULT} = [{'time': 0.045789028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.761100000000071e-05, 'source_diff': 1.761100000000071e-05}, {'time': 0.046616167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:25.481" endtime="20201115 22:11:25.491"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:25.521" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:25.492" endtime="20201115 22:11:25.521"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:25.532" level="INFO">NAME: 00-overhead-20-set</msg>
<status status="PASS" starttime="20201115 22:11:25.530" endtime="20201115 22:11:25.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:25.539" level="INFO">VALUE: [1.761100000000071e-05, 1.7235999999996865e-05, 1.677700000000254e-05, 1.727700000000304e-05, 1.7457999999997975e-05, 1.693099999999781e-05, 1.7278000000002514e-05, 1.755500000000243e-05, 1.7028000000002264e-05, 1.7278000000002514e-05, 1.695899999999695e-05, 1.7457999999997975e-05, 1.7278000000002514e-05, 1.7264000000002944e-05, 1.7055999999994464e-05, 1.676300000000297e-05, 1.7250000000003374e-05, 1.7111999999999683e-05, 1.6957999999997475e-05, 1.759700000000114e-05, 1.762500000000028e-05, 1.679100000000211e-05, 1.7445000000004818e-05, 1.7278000000009452e-05, 1.737500000000003e-05, 1.7513999999996255e-05, 1.7264000000002944e-05, 1.684700000000039e-05, 1.7499999999989746e-05, 1.716699999999849e-05, 1.744499999999094e-05, 1.711099999998633e-05, 1.716699999999849e-05, 1.6777999999995075e-05, 1.6957999999997475e-05, 1.762499999999334e-05, 1.697299999998958e-05, 1.6957999999997475e-05, 1.744499999999094e-05, 1.7486000000010993e-05, 1.711100000000021e-05, 1.6957999999997475e-05, 1.7625000000007218e-05, 1.679100000000211e-05, 1.7471999999990606e-05, 1.7277999999995575e-05, 1.7278000000009452e-05, 1.6985999999996615e-05, 1.67769999999956e-05, 1.7625000000007218e-05]</msg>
<status status="PASS" starttime="20201115 22:11:25.535" endtime="20201115 22:11:25.540"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:25.523" endtime="20201115 22:11:25.542"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:25.548" endtime="20201115 22:11:25.551"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:25.557" endtime="20201115 22:11:25.579"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:25.553" endtime="20201115 22:11:25.581"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:25.544" endtime="20201115 22:11:25.582"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:25.006" endtime="20201115 22:11:25.583"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:25.003" endtime="20201115 22:11:25.584"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:25.001" endtime="20201115 22:11:25.584"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:25.589" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:25.613" endtime="20201115 22:11:25.665"></status>
</kw>
<msg timestamp="20201115 22:11:25.666" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:25.609" endtime="20201115 22:11:25.667"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:25.672" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:25.669" endtime="20201115 22:11:25.673"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:25.675" endtime="20201115 22:11:25.678"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:25.602" endtime="20201115 22:11:25.680"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:25.595" endtime="20201115 22:11:25.681"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:25.698" endtime="20201115 22:11:26.032"></status>
</kw>
<msg timestamp="20201115 22:11:26.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047390431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047408111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:25.695" endtime="20201115 22:11:26.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:26.057" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047390431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047408111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:26.042" endtime="20201115 22:11:26.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:26.060" endtime="20201115 22:11:26.064"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:25.687" endtime="20201115 22:11:26.065"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:25.683" endtime="20201115 22:11:26.067"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:26.077" level="INFO">${RESULT} = [{'time': 0.047408111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7680000000006024e-05, 'source_diff': 1.7680000000006024e-05}, {'time': 0.048275417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:26.068" endtime="20201115 22:11:26.078"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:26.108" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:26.079" endtime="20201115 22:11:26.108"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:26.119" level="INFO">NAME: 00-overhead-21-set</msg>
<status status="PASS" starttime="20201115 22:11:26.116" endtime="20201115 22:11:26.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:26.126" level="INFO">VALUE: [1.7680000000006024e-05, 1.786100000000096e-05, 1.705500000000193e-05, 1.740299999999917e-05, 1.7693999999998655e-05, 1.718099999999806e-05, 1.752699999999635e-05, 1.7513999999996255e-05, 1.759700000000114e-05, 1.787500000000053e-05, 1.787500000000053e-05, 1.6999999999996185e-05, 1.712499999999978e-05, 1.702700000000279e-05, 1.718099999999806e-05, 1.736100000000046e-05, 1.78890000000001e-05, 1.7179999999998585e-05, 1.7209000000004138e-05, 1.736099999999352e-05, 1.718099999999112e-05, 1.7209000000004138e-05, 1.756899999999506e-05, 1.787500000000053e-05, 1.784700000000139e-05, 1.7028000000002264e-05, 1.78610000000079e-05, 1.78610000000079e-05, 1.787500000000053e-05, 1.7679999999992146e-05, 1.719499999999763e-05, 1.7028000000002264e-05, 1.7528000000002764e-05, 1.733300000000826e-05, 1.7749999999996935e-05, 1.769499999999813e-05, 1.7180000000005524e-05, 1.7195000000011507e-05, 1.7193999999998155e-05, 1.7041999999994895e-05, 1.7721999999997795e-05, 1.7556000000001903e-05, 1.787500000000053e-05, 1.704099999999542e-05, 1.7028000000002264e-05, 1.78610000000079e-05, 1.740299999999917e-05, 1.7209000000004138e-05, 1.740299999999917e-05, 1.7861999999993494e-05]</msg>
<status status="PASS" starttime="20201115 22:11:26.121" endtime="20201115 22:11:26.126"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:26.110" endtime="20201115 22:11:26.128"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:26.134" endtime="20201115 22:11:26.137"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:26.143" endtime="20201115 22:11:26.165"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:26.138" endtime="20201115 22:11:26.167"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:26.130" endtime="20201115 22:11:26.168"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:25.590" endtime="20201115 22:11:26.169"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:25.586" endtime="20201115 22:11:26.169"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:25.585" endtime="20201115 22:11:26.170"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:26.174" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:26.197" endtime="20201115 22:11:26.251"></status>
</kw>
<msg timestamp="20201115 22:11:26.252" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:26.194" endtime="20201115 22:11:26.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:26.259" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:26.255" endtime="20201115 22:11:26.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:26.261" endtime="20201115 22:11:26.265"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:26.187" endtime="20201115 22:11:26.266"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:26.181" endtime="20201115 22:11:26.267"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:26.284" endtime="20201115 22:11:26.622"></status>
</kw>
<msg timestamp="20201115 22:11:26.630" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045459111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045477167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:26.280" endtime="20201115 22:11:26.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:26.648" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045459111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045477167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:26.632" endtime="20201115 22:11:26.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:26.650" endtime="20201115 22:11:26.654"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:26.273" endtime="20201115 22:11:26.655"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:26.269" endtime="20201115 22:11:26.657"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:26.667" level="INFO">${RESULT} = [{'time': 0.045477167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8055999999995465e-05, 'source_diff': 1.8055999999995465e-05}, {'time': 0.046379347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:26.658" endtime="20201115 22:11:26.668"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:26.700" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:26.669" endtime="20201115 22:11:26.700"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:26.711" level="INFO">NAME: 00-overhead-22-set</msg>
<status status="PASS" starttime="20201115 22:11:26.709" endtime="20201115 22:11:26.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:26.717" level="INFO">VALUE: [1.8055999999995465e-05, 1.7278000000002514e-05, 1.7292000000002083e-05, 1.812500000000078e-05, 1.7431000000005248e-05, 1.7915999999999765e-05, 1.759700000000114e-05, 1.7945000000005318e-05, 1.72769999999961e-05, 1.793099999999881e-05, 1.7429999999998835e-05, 1.813900000000035e-05, 1.7278000000002514e-05, 1.77769999999966e-05, 1.811100000000121e-05, 1.7277999999995575e-05, 1.761100000000071e-05, 1.762500000000028e-05, 1.748699999999659e-05, 1.7792000000002584e-05, 1.727700000000998e-05, 1.733299999999438e-05, 1.7985999999997615e-05, 1.7292000000002083e-05, 1.729100000000261e-05, 1.758300000000157e-05, 1.7292000000002083e-05, 1.7764000000003444e-05, 1.7471999999990606e-05, 1.745899999999745e-05, 1.7443999999991466e-05, 1.7429999999998835e-05, 1.78610000000079e-05, 1.761099999998683e-05, 1.761100000000071e-05, 1.7929999999999335e-05, 1.7944000000005844e-05, 1.7943999999991966e-05, 1.7625000000007218e-05, 1.7764000000003444e-05, 1.7429999999998835e-05, 1.811100000000121e-05, 1.7612000000000183e-05, 1.7320000000001223e-05, 1.7485999999997115e-05, 1.734700000000089e-05, 1.726300000000347e-05, 1.80969999999947e-05, 1.7500000000003624e-05, 1.7598000000007552e-05]</msg>
<status status="PASS" starttime="20201115 22:11:26.713" endtime="20201115 22:11:26.719"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:26.702" endtime="20201115 22:11:26.721"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:26.727" endtime="20201115 22:11:26.730"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:26.735" endtime="20201115 22:11:26.757"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:26.731" endtime="20201115 22:11:26.758"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:26.722" endtime="20201115 22:11:26.760"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:26.175" endtime="20201115 22:11:26.761"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:26.172" endtime="20201115 22:11:26.761"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:26.170" endtime="20201115 22:11:26.761"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:26.766" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:26.789" endtime="20201115 22:11:26.845"></status>
</kw>
<msg timestamp="20201115 22:11:26.847" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:26.786" endtime="20201115 22:11:26.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:26.853" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:26.849" endtime="20201115 22:11:26.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:26.855" endtime="20201115 22:11:26.859"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:26.779" endtime="20201115 22:11:26.860"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:26.773" endtime="20201115 22:11:26.862"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:26.878" endtime="20201115 22:11:27.213"></status>
</kw>
<msg timestamp="20201115 22:11:27.220" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045808194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045826389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:26.875" endtime="20201115 22:11:27.221"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:27.239" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045808194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045826389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:27.223" endtime="20201115 22:11:27.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:27.241" endtime="20201115 22:11:27.245"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:26.868" endtime="20201115 22:11:27.246"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:26.863" endtime="20201115 22:11:27.248"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:27.258" level="INFO">${RESULT} = [{'time': 0.045826389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.819499999999863e-05, 'source_diff': 1.819499999999863e-05}, {'time': 0.046771875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:27.249" endtime="20201115 22:11:27.259"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:27.289" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:27.260" endtime="20201115 22:11:27.289"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:27.300" level="INFO">NAME: 00-overhead-23-set</msg>
<status status="PASS" starttime="20201115 22:11:27.298" endtime="20201115 22:11:27.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:27.307" level="INFO">VALUE: [1.819499999999863e-05, 1.8041999999995895e-05, 1.8028000000003264e-05, 1.8402000000000696e-05, 1.78890000000001e-05, 1.819499999999863e-05, 1.7999999999997185e-05, 1.8207999999998725e-05, 1.7693999999998655e-05, 1.7694000000005594e-05, 1.784700000000139e-05, 1.7679999999999085e-05, 1.787500000000053e-05, 1.8181000000005998e-05, 1.784700000000139e-05, 1.7735999999997365e-05, 1.7693999999998655e-05, 1.784700000000139e-05, 1.8348000000001363e-05, 1.8013999999996755e-05, 1.766699999999899e-05, 1.7848000000000863e-05, 1.8193999999999155e-05, 1.7528000000002764e-05, 1.78610000000079e-05, 1.786099999999402e-05, 1.78610000000079e-05, 1.8389000000007538e-05, 1.7848000000000863e-05, 1.7528000000002764e-05, 1.7527999999988886e-05, 1.7764000000003444e-05, 1.8000000000004124e-05, 1.788899999999316e-05, 1.818099999999212e-05, 1.7528000000002764e-05, 1.769499999999813e-05, 1.836099999999452e-05, 1.7709000000004638e-05, 1.7597999999993674e-05, 1.837500000000103e-05, 1.752700000000329e-05, 1.8181000000005998e-05, 1.769499999999813e-05, 1.83610000000084e-05, 1.766699999999899e-05, 1.78610000000079e-05, 1.78610000000079e-05, 1.78610000000079e-05, 1.8028000000003264e-05]</msg>
<status status="PASS" starttime="20201115 22:11:27.302" endtime="20201115 22:11:27.308"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:27.291" endtime="20201115 22:11:27.310"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:27.316" endtime="20201115 22:11:27.319"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:27.324" endtime="20201115 22:11:27.346"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:27.320" endtime="20201115 22:11:27.348"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:27.311" endtime="20201115 22:11:27.349"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:26.767" endtime="20201115 22:11:27.350"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:26.764" endtime="20201115 22:11:27.350"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:26.762" endtime="20201115 22:11:27.351"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:27.356" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:27.378" endtime="20201115 22:11:27.437"></status>
</kw>
<msg timestamp="20201115 22:11:27.438" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:27.375" endtime="20201115 22:11:27.438"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:27.444" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:27.440" endtime="20201115 22:11:27.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:27.446" endtime="20201115 22:11:27.450"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:27.368" endtime="20201115 22:11:27.451"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:27.362" endtime="20201115 22:11:27.453"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:27.469" endtime="20201115 22:11:27.805"></status>
</kw>
<msg timestamp="20201115 22:11:27.812" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045683972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045701722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:27.466" endtime="20201115 22:11:27.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:27.830" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045683972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045701722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:27.815" endtime="20201115 22:11:27.831"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:27.833" endtime="20201115 22:11:27.837"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:27.459" endtime="20201115 22:11:27.838"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:27.454" endtime="20201115 22:11:27.840"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:27.850" level="INFO">${RESULT} = [{'time': 0.045701722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7749999999996935e-05, 'source_diff': 1.7749999999996935e-05}, {'time': 0.046692194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:27.841" endtime="20201115 22:11:27.851"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:27.881" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:27.853" endtime="20201115 22:11:27.882"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:27.892" level="INFO">NAME: 00-overhead-24-set</msg>
<status status="PASS" starttime="20201115 22:11:27.890" endtime="20201115 22:11:27.893"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:27.899" level="INFO">VALUE: [1.7749999999996935e-05, 1.7943999999998905e-05, 1.861099999999477e-05, 1.7777999999996075e-05, 1.7944000000005844e-05, 1.7750000000003874e-05, 1.7778000000003014e-05, 1.7958000000005414e-05, 1.7777999999996075e-05, 1.8084000000001543e-05, 1.83890000000006e-05, 1.8680000000000085e-05, 1.861100000000171e-05, 1.8443999999999405e-05, 1.812500000000078e-05, 1.845899999999845e-05, 1.8457999999998975e-05, 1.8459000000005388e-05, 1.7777999999996075e-05, 1.7805999999995215e-05, 1.7792000000002584e-05, 1.844499999999194e-05, 1.7790999999989232e-05, 1.8264000000003944e-05, 1.8278000000010453e-05, 1.7945000000005318e-05, 1.7985999999997615e-05, 1.8235999999990926e-05, 1.7778000000009953e-05, 1.7916000000006704e-05, 1.7944000000005844e-05, 1.8485999999998115e-05, 1.861100000000171e-05, 1.845899999999845e-05, 1.7944000000005844e-05, 1.7929999999999335e-05, 1.862500000000822e-05, 1.8499999999990746e-05, 1.776300000000397e-05, 1.7792000000002584e-05, 1.7749999999996935e-05, 1.783299999999488e-05, 1.7957999999998475e-05, 1.863900000000085e-05, 1.7957999999998475e-05, 1.8444000000006344e-05, 1.7708000000005164e-05, 1.8457999999998975e-05, 1.861100000000171e-05, 1.8443999999992466e-05]</msg>
<status status="PASS" starttime="20201115 22:11:27.895" endtime="20201115 22:11:27.900"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:27.883" endtime="20201115 22:11:27.901"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:27.908" endtime="20201115 22:11:27.910"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:27.916" endtime="20201115 22:11:27.937"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:27.911" endtime="20201115 22:11:27.939"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:27.903" endtime="20201115 22:11:27.941"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:27.357" endtime="20201115 22:11:27.941"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:27.353" endtime="20201115 22:11:27.942"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:27.351" endtime="20201115 22:11:27.942"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:27.947" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:27.970" endtime="20201115 22:11:28.030"></status>
</kw>
<msg timestamp="20201115 22:11:28.031" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:27.966" endtime="20201115 22:11:28.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:28.038" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:28.034" endtime="20201115 22:11:28.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:28.040" endtime="20201115 22:11:28.044"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:27.959" endtime="20201115 22:11:28.045"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:27.953" endtime="20201115 22:11:28.047"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:28.063" endtime="20201115 22:11:28.399"></status>
</kw>
<msg timestamp="20201115 22:11:28.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045602639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045621347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:28.060" endtime="20201115 22:11:28.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:28.424" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045602639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045621347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:28.409" endtime="20201115 22:11:28.426"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:28.427" endtime="20201115 22:11:28.431"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:28.053" endtime="20201115 22:11:28.433"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:28.048" endtime="20201115 22:11:28.434"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:28.445" level="INFO">${RESULT} = [{'time': 0.045621347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8707999999999225e-05, 'source_diff': 1.8707999999999225e-05}, {'time': 0.046648028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:28.436" endtime="20201115 22:11:28.445"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:28.476" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:28.447" endtime="20201115 22:11:28.476"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:28.486" level="INFO">NAME: 00-overhead-25-set</msg>
<status status="PASS" starttime="20201115 22:11:28.484" endtime="20201115 22:11:28.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:28.493" level="INFO">VALUE: [1.8707999999999225e-05, 1.819499999999863e-05, 1.886100000000196e-05, 1.815299999999992e-05, 1.8666000000000516e-05, 1.8208000000005664e-05, 1.8707999999999225e-05, 1.8028000000003264e-05, 1.8527999999996825e-05, 1.837500000000103e-05, 1.8014000000003694e-05, 1.8541999999996395e-05, 1.856899999999606e-05, 1.887500000000153e-05, 1.8209000000005138e-05, 1.819499999999863e-05, 1.8027999999996325e-05, 1.834700000000189e-05, 1.85410000000108e-05, 1.85410000000108e-05, 1.865299999999348e-05, 1.83610000000084e-05, 1.888899999999416e-05, 1.8681000000006498e-05, 1.8249999999997435e-05, 1.8041999999995895e-05, 1.8541999999996395e-05, 1.88610000000089e-05, 1.8207999999991786e-05, 1.8056000000002403e-05, 1.8193999999999155e-05, 1.886099999999502e-05, 1.8125000000007718e-05, 1.8027999999989386e-05, 1.802700000000379e-05, 1.8485999999998115e-05, 1.890300000000067e-05, 1.837500000000103e-05, 1.887500000000153e-05, 1.8056000000002403e-05, 1.8153000000006858e-05, 1.8693999999999655e-05, 1.8193999999999155e-05, 1.854099999999692e-05, 1.83610000000084e-05, 1.887500000000153e-05, 1.802700000000379e-05, 1.802700000000379e-05, 1.837500000000103e-05, 1.8041999999995895e-05]</msg>
<status status="PASS" starttime="20201115 22:11:28.489" endtime="20201115 22:11:28.494"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:28.477" endtime="20201115 22:11:28.495"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:28.502" endtime="20201115 22:11:28.504"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:28.510" endtime="20201115 22:11:28.531"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:28.506" endtime="20201115 22:11:28.533"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:28.497" endtime="20201115 22:11:28.535"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:27.948" endtime="20201115 22:11:28.535"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:27.945" endtime="20201115 22:11:28.536"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:27.943" endtime="20201115 22:11:28.536"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:14.128" endtime="20201115 22:11:28.536"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="teardown">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:28.547" endtime="20201115 22:11:28.569"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:28.543" endtime="20201115 22:11:28.570"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:28.540" endtime="20201115 22:11:28.571"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:11:14.000" endtime="20201115 22:11:28.572" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Remove List">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:28.591" endtime="20201115 22:11:28.613"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:28.588" endtime="20201115 22:11:28.615"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:28.648" endtime="20201115 22:11:28.664"></status>
</kw>
<msg timestamp="20201115 22:11:28.665" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:28.645" endtime="20201115 22:11:28.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:28.672" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:28.668" endtime="20201115 22:11:28.673"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:11:28.679" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:11:28.675" endtime="20201115 22:11:28.679"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:28.637" endtime="20201115 22:11:28.681"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:28.631" endtime="20201115 22:11:28.683"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:28.628" endtime="20201115 22:11:28.684"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:11:28.691" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:11:28.690" endtime="20201115 22:11:28.692"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:28.685" endtime="20201115 22:11:28.692"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:28.626" endtime="20201115 22:11:28.693"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:28.625" endtime="20201115 22:11:28.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:28.695" endtime="20201115 22:11:28.698"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:28.620" endtime="20201115 22:11:28.700"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:28.616" endtime="20201115 22:11:28.701"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:28.585" endtime="20201115 22:11:28.702"></status>
</kw>
<kw name="${n} IN RANGE [ 25 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:28.709" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:28.736" endtime="20201115 22:11:28.750"></status>
</kw>
<msg timestamp="20201115 22:11:28.752" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:28.733" endtime="20201115 22:11:28.752"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:28.758" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:28.754" endtime="20201115 22:11:28.758"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:28.760" endtime="20201115 22:11:28.764"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:28.726" endtime="20201115 22:11:28.765"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:28.720" endtime="20201115 22:11:28.767"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:28.783" endtime="20201115 22:11:29.128"></status>
</kw>
<msg timestamp="20201115 22:11:29.136" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.136389625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.136413417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:28.780" endtime="20201115 22:11:29.136"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:29.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.136389625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.136413417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:29.138" endtime="20201115 22:11:29.155"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:29.157" endtime="20201115 22:11:29.161"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:28.773" endtime="20201115 22:11:29.162"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:28.768" endtime="20201115 22:11:29.164"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:29.175" level="INFO">${RESULT} = [{'time': 0.136413417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3792000000022462e-05, 'source_diff': 2.3792000000022462e-05}, {'time': 0.136512611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:29.165" endtime="20201115 22:11:29.176"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:29.206" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:29.177" endtime="20201115 22:11:29.206"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:29.217" level="INFO">NAME: 00-overhead-1-remove</msg>
<status status="PASS" starttime="20201115 22:11:29.214" endtime="20201115 22:11:29.217"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:29.222" level="INFO">VALUE: [2.3792000000022462e-05, 2.3639000000019728e-05, 2.3652999999984603e-05, 2.330500000000124e-05, 2.3639000000019728e-05, 2.315299999999798e-05, 2.3485999999989238e-05, 2.3679999999998147e-05, 2.298599999997486e-05, 2.3818999999980495e-05, 2.3318999999993872e-05, 2.313900000000535e-05, 2.33200000000211e-05, 2.298599999997486e-05, 2.37770000000026e-05, 2.313900000000535e-05, 2.297199999998223e-05, 2.283299999999988e-05, 2.3319999999993346e-05, 2.2972000000009984e-05, 2.3485999999989238e-05, 2.3318999999993872e-05, 2.3639000000019728e-05, 2.3750000000016813e-05, 2.347299999999608e-05, 2.348699999998871e-05, 2.3638999999991972e-05, 2.3500000000009624e-05, 2.3292000000008084e-05, 2.3319000000021628e-05, 2.2986000000002615e-05, 2.381900000000825e-05, 2.297199999998223e-05, 2.3540999999988044e-05, 2.313900000000535e-05, 2.3318999999993872e-05, 2.3292000000008084e-05, 2.3319999999993346e-05, 2.3000000000023002e-05, 2.313900000000535e-05, 2.315299999999798e-05, 2.3666000000005516e-05, 2.344399999998359e-05, 2.3639000000019728e-05, 2.30969999999997e-05, 2.315299999999798e-05, 2.2972000000009984e-05, 2.312500000001272e-05, 2.3319000000021628e-05, 2.3124999999984963e-05]</msg>
<status status="PASS" starttime="20201115 22:11:29.219" endtime="20201115 22:11:29.223"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:29.207" endtime="20201115 22:11:29.224"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:29.230" endtime="20201115 22:11:29.233"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:29.239" endtime="20201115 22:11:29.260"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:29.234" endtime="20201115 22:11:29.262"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:29.226" endtime="20201115 22:11:29.263"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:28.710" endtime="20201115 22:11:29.264"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:28.707" endtime="20201115 22:11:29.265"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:28.705" endtime="20201115 22:11:29.265"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:29.270" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:29.294" endtime="20201115 22:11:29.310"></status>
</kw>
<msg timestamp="20201115 22:11:29.311" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:29.290" endtime="20201115 22:11:29.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:29.317" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:29.313" endtime="20201115 22:11:29.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:29.320" endtime="20201115 22:11:29.323"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:29.282" endtime="20201115 22:11:29.325"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:29.276" endtime="20201115 22:11:29.326"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:29.343" endtime="20201115 22:11:29.678"></status>
</kw>
<msg timestamp="20201115 22:11:29.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047100986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047124389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:29.339" endtime="20201115 22:11:29.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:29.705" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047100986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047124389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:29.688" endtime="20201115 22:11:29.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:29.707" endtime="20201115 22:11:29.711"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:29.332" endtime="20201115 22:11:29.713"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:29.328" endtime="20201115 22:11:29.714"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:29.725" level="INFO">${RESULT} = [{'time': 0.047124389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.340300000000517e-05, 'source_diff': 2.340300000000517e-05}, {'time': 0.047260625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:29.716" endtime="20201115 22:11:29.725"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:29.756" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:29.727" endtime="20201115 22:11:29.756"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:29.766" level="INFO">NAME: 00-overhead-2-remove</msg>
<status status="PASS" starttime="20201115 22:11:29.764" endtime="20201115 22:11:29.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:29.772" level="INFO">VALUE: [2.340300000000517e-05, 2.338899999999866e-05, 2.373700000000284e-05, 2.3722000000003796e-05, 2.3042000000000895e-05, 2.338899999999866e-05, 2.2915999999997827e-05, 2.288899999999816e-05, 2.290299999999773e-05, 2.3401999999998757e-05, 2.3235999999995927e-05, 2.2901999999998257e-05, 2.3070000000000035e-05, 2.3222000000003296e-05, 2.355500000000149e-05, 2.368100000000456e-05, 2.288899999999816e-05, 2.3250000000002435e-05, 2.308300000000013e-05, 2.3415999999998327e-05, 2.3056000000000465e-05, 2.338899999999866e-05, 2.293099999999687e-05, 2.3249999999995496e-05, 2.337499999999909e-05, 2.356900000000106e-05, 2.336099999999952e-05, 2.2915999999997827e-05, 2.3070000000000035e-05, 2.3528000000001825e-05, 2.3570000000000535e-05, 2.3708000000004226e-05, 2.290299999999773e-05, 2.305500000000099e-05, 2.337499999999909e-05, 2.337499999999909e-05, 2.2901999999998257e-05, 2.287499999999859e-05, 2.322300000000277e-05, 2.35970000000002e-05, 2.3721999999996857e-05, 2.356900000000106e-05, 2.3736000000003366e-05, 2.320899999999626e-05, 2.355500000000149e-05, 2.356900000000106e-05, 2.3235999999995927e-05, 2.3736000000003366e-05, 2.3222000000003296e-05, 2.2833999999999355e-05]</msg>
<status status="PASS" starttime="20201115 22:11:29.769" endtime="20201115 22:11:29.773"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:29.757" endtime="20201115 22:11:29.774"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:29.780" endtime="20201115 22:11:29.783"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:29.789" endtime="20201115 22:11:29.810"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:29.784" endtime="20201115 22:11:29.812"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:29.776" endtime="20201115 22:11:29.813"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:29.271" endtime="20201115 22:11:29.814"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:29.267" endtime="20201115 22:11:29.815"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:29.266" endtime="20201115 22:11:29.815"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:29.820" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:29.842" endtime="20201115 22:11:29.860"></status>
</kw>
<msg timestamp="20201115 22:11:29.861" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:29.839" endtime="20201115 22:11:29.862"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:29.868" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:29.864" endtime="20201115 22:11:29.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:29.870" endtime="20201115 22:11:29.873"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:29.832" endtime="20201115 22:11:29.875"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:29.826" endtime="20201115 22:11:29.877"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:29.895" endtime="20201115 22:11:30.229"></status>
</kw>
<msg timestamp="20201115 22:11:30.237" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045473917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045497694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:29.892" endtime="20201115 22:11:30.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:30.255" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045473917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045497694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:30.239" endtime="20201115 22:11:30.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:30.257" endtime="20201115 22:11:30.261"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:29.883" endtime="20201115 22:11:30.262"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:29.878" endtime="20201115 22:11:30.264"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:30.275" level="INFO">${RESULT} = [{'time': 0.045497694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3776999999995663e-05, 'source_diff': 2.3776999999995663e-05}, {'time': 0.045671, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:11:30.266" endtime="20201115 22:11:30.275"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:30.305" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:30.277" endtime="20201115 22:11:30.306"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:30.316" level="INFO">NAME: 00-overhead-3-remove</msg>
<status status="PASS" starttime="20201115 22:11:30.314" endtime="20201115 22:11:30.317"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:30.322" level="INFO">VALUE: [2.3776999999995663e-05, 2.4486000000004116e-05, 2.415299999999898e-05, 2.4151999999999507e-05, 2.4165999999999077e-05, 2.4721999999997857e-05, 2.4292000000002145e-05, 2.381900000000131e-05, 2.4638000000000437e-05, 2.4318999999994872e-05, 2.445900000000445e-05, 2.415299999999898e-05, 2.4278000000002575e-05, 2.4485999999997177e-05, 2.465299999999948e-05, 2.3971999999997107e-05, 2.415299999999898e-05, 2.4665999999999577e-05, 2.413899999999941e-05, 2.412499999999984e-05, 2.381900000000131e-05, 2.415299999999898e-05, 2.381900000000131e-05, 2.4306000000001715e-05, 2.4513000000003782e-05, 2.3986000000003616e-05, 2.3972000000004046e-05, 2.480500000000274e-05, 2.4485999999997177e-05, 2.480500000000274e-05, 2.4485999999997177e-05, 2.4500000000003685e-05, 2.3972000000004046e-05, 2.394499999999744e-05, 2.4000000000003185e-05, 2.4264000000003005e-05, 2.397299999999658e-05, 2.415299999999898e-05, 2.465299999999948e-05, 2.388899999999916e-05, 2.481900000000231e-05, 2.3820000000000785e-05, 2.4764000000003505e-05, 2.3971999999997107e-05, 2.381900000000131e-05, 2.415299999999898e-05, 2.466699999999905e-05, 2.381900000000131e-05, 2.483300000000188e-05, 2.3985999999996677e-05]</msg>
<status status="PASS" starttime="20201115 22:11:30.318" endtime="20201115 22:11:30.322"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:30.307" endtime="20201115 22:11:30.324"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:30.330" endtime="20201115 22:11:30.333"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:30.338" endtime="20201115 22:11:30.360"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:30.334" endtime="20201115 22:11:30.362"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:30.326" endtime="20201115 22:11:30.363"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:29.821" endtime="20201115 22:11:30.364"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:29.817" endtime="20201115 22:11:30.364"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:29.816" endtime="20201115 22:11:30.365"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:30.369" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:30.392" endtime="20201115 22:11:30.413"></status>
</kw>
<msg timestamp="20201115 22:11:30.414" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:30.389" endtime="20201115 22:11:30.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:30.420" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:30.416" endtime="20201115 22:11:30.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:30.422" endtime="20201115 22:11:30.426"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:30.382" endtime="20201115 22:11:30.427"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:30.376" endtime="20201115 22:11:30.429"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:30.446" endtime="20201115 22:11:30.782"></status>
</kw>
<msg timestamp="20201115 22:11:30.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046129722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046154264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:30.442" endtime="20201115 22:11:30.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:30.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046129722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046154264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:30.791" endtime="20201115 22:11:30.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:30.810" endtime="20201115 22:11:30.814"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:30.435" endtime="20201115 22:11:30.815"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:30.430" endtime="20201115 22:11:30.817"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:30.827" level="INFO">${RESULT} = [{'time': 0.046154264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4542000000002395e-05, 'source_diff': 2.4542000000002395e-05}, {'time': 0.046365583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:30.818" endtime="20201115 22:11:30.828"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:30.858" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:30.829" endtime="20201115 22:11:30.858"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:30.869" level="INFO">NAME: 00-overhead-4-remove</msg>
<status status="PASS" starttime="20201115 22:11:30.867" endtime="20201115 22:11:30.869"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:30.874" level="INFO">VALUE: [2.4542000000002395e-05, 2.388899999999916e-05, 2.4250000000003435e-05, 2.45970000000012e-05, 2.4721999999997857e-05, 2.4056000000001465e-05, 2.4250000000003435e-05, 2.472300000000427e-05, 2.4527999999995886e-05, 2.4707999999998287e-05, 2.433300000000138e-05, 2.4221999999997357e-05, 2.438899999999966e-05, 2.388899999999916e-05, 2.388899999999916e-05, 2.4068999999994622e-05, 2.4542000000002395e-05, 2.455500000000249e-05, 2.4056000000001465e-05, 2.388899999999916e-05, 2.434700000000095e-05, 2.4722000000004796e-05, 2.4693999999998717e-05, 2.3943999999997967e-05, 2.4721999999997857e-05, 2.4221999999997357e-05, 2.40970000000007e-05, 2.4221999999997357e-05, 2.4221999999997357e-05, 2.4235999999996927e-05, 2.387499999999959e-05, 2.390299999999873e-05, 2.479100000000317e-05, 2.4735999999997427e-05, 2.4249999999996497e-05, 2.3901999999999257e-05, 2.38890000000061e-05, 2.4221999999997357e-05, 2.390299999999873e-05, 2.455500000000249e-05, 2.4721999999997857e-05, 2.4568999999995123e-05, 2.472299999999733e-05, 2.42090000000042e-05, 2.472299999999733e-05, 2.388899999999916e-05, 2.4221999999997357e-05, 2.438899999999966e-05, 2.388899999999916e-05, 2.4110999999993332e-05]</msg>
<status status="PASS" starttime="20201115 22:11:30.871" endtime="20201115 22:11:30.875"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:30.860" endtime="20201115 22:11:30.877"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:30.883" endtime="20201115 22:11:30.885"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:30.891" endtime="20201115 22:11:30.912"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:30.887" endtime="20201115 22:11:30.914"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:30.878" endtime="20201115 22:11:30.916"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:30.370" endtime="20201115 22:11:30.916"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:30.367" endtime="20201115 22:11:30.917"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:30.366" endtime="20201115 22:11:30.917"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:30.927" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:30.949" endtime="20201115 22:11:30.971"></status>
</kw>
<msg timestamp="20201115 22:11:30.972" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:30.946" endtime="20201115 22:11:30.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:30.978" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:30.975" endtime="20201115 22:11:30.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:30.981" endtime="20201115 22:11:30.984"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:30.939" endtime="20201115 22:11:30.986"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:30.933" endtime="20201115 22:11:30.987"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:31.004" endtime="20201115 22:11:31.341"></status>
</kw>
<msg timestamp="20201115 22:11:31.348" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050312139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050336444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:31.001" endtime="20201115 22:11:31.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:31.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050312139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050336444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:31.350" endtime="20201115 22:11:31.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:31.369" endtime="20201115 22:11:31.373"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:30.993" endtime="20201115 22:11:31.374"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:30.989" endtime="20201115 22:11:31.376"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:31.386" level="INFO">${RESULT} = [{'time': 0.050336444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.430500000000224e-05, 'source_diff': 2.430500000000224e-05}, {'time': 0.050586944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:31.377" endtime="20201115 22:11:31.387"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:31.416" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:31.388" endtime="20201115 22:11:31.417"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:31.427" level="INFO">NAME: 00-overhead-5-remove</msg>
<status status="PASS" starttime="20201115 22:11:31.425" endtime="20201115 22:11:31.428"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:31.433" level="INFO">VALUE: [2.430500000000224e-05, 2.4013000000003282e-05, 2.42770000000031e-05, 2.395899999999701e-05, 2.454100000000292e-05, 2.483300000000188e-05, 2.3985999999996677e-05, 2.3804999999994803e-05, 2.463899999999991e-05, 2.4306000000001715e-05, 2.3971999999997107e-05, 2.4457999999998037e-05, 2.465299999999948e-05, 2.431900000000181e-05, 2.466699999999905e-05, 2.455500000000249e-05, 2.411100000000027e-05, 2.4471999999997607e-05, 2.415299999999898e-05, 2.4235999999996927e-05, 2.458300000000163e-05, 2.3972000000004046e-05, 2.4554999999995553e-05, 2.461100000000077e-05, 2.4471999999997607e-05, 2.4041999999994956e-05, 2.4707999999998287e-05, 2.3985999999996677e-05, 2.4137999999999937e-05, 2.433300000000138e-05, 2.4320000000001285e-05, 2.4792000000002645e-05, 2.462500000000034e-05, 2.4486000000004116e-05, 2.4598000000000675e-05, 2.4320000000001285e-05, 2.430500000000224e-05, 2.4000000000003185e-05, 2.4263999999996066e-05, 2.4652000000000007e-05, 2.398700000000309e-05, 2.465299999999948e-05, 2.465299999999948e-05, 2.4778000000003075e-05, 2.4137999999999937e-05, 2.3958000000004476e-05, 2.3820000000000785e-05, 2.395900000000395e-05, 2.4500000000003685e-05, 2.4820000000008724e-05]</msg>
<status status="PASS" starttime="20201115 22:11:31.430" endtime="20201115 22:11:31.434"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:31.418" endtime="20201115 22:11:31.436"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:31.442" endtime="20201115 22:11:31.445"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:31.450" endtime="20201115 22:11:31.472"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:31.446" endtime="20201115 22:11:31.473"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:31.438" endtime="20201115 22:11:31.475"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:30.928" endtime="20201115 22:11:31.476"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:30.925" endtime="20201115 22:11:31.476"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:30.922" endtime="20201115 22:11:31.476"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:31.481" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:31.504" endtime="20201115 22:11:31.528"></status>
</kw>
<msg timestamp="20201115 22:11:31.529" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:31.501" endtime="20201115 22:11:31.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:31.535" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:31.531" endtime="20201115 22:11:31.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:31.537" endtime="20201115 22:11:31.541"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:31.494" endtime="20201115 22:11:31.542"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:31.488" endtime="20201115 22:11:31.544"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:31.560" endtime="20201115 22:11:31.895"></status>
</kw>
<msg timestamp="20201115 22:11:31.903" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045954972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045979389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:31.557" endtime="20201115 22:11:31.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:31.921" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045954972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045979389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:31.905" endtime="20201115 22:11:31.922"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:31.923" endtime="20201115 22:11:31.927"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:31.550" endtime="20201115 22:11:31.929"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:31.545" endtime="20201115 22:11:31.930"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:31.941" level="INFO">${RESULT} = [{'time': 0.045979389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.441700000000574e-05, 'source_diff': 2.441700000000574e-05}, {'time': 0.046262736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:31.932" endtime="20201115 22:11:31.941"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:31.971" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:31.943" endtime="20201115 22:11:31.971"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:31.982" level="INFO">NAME: 00-overhead-6-remove</msg>
<status status="PASS" starttime="20201115 22:11:31.979" endtime="20201115 22:11:31.982"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:31.987" level="INFO">VALUE: [2.441700000000574e-05, 2.461100000000077e-05, 2.391700000000524e-05, 2.4235999999996927e-05, 2.4056000000001465e-05, 2.438899999999966e-05, 2.381900000000131e-05, 2.390299999999873e-05, 2.4556000000001965e-05, 2.4708000000005226e-05, 2.4556000000001965e-05, 2.4401999999999757e-05, 2.3887999999999687e-05, 2.4249999999996497e-05, 2.4222000000004296e-05, 2.422299999999683e-05, 2.473700000000384e-05, 2.4042000000001895e-05, 2.440300000000617e-05, 2.4541999999995456e-05, 2.4042000000001895e-05, 2.437500000000009e-05, 2.462500000000034e-05, 2.419499999999769e-05, 2.4429999999998897e-05, 2.4598000000000675e-05, 2.4763999999996567e-05, 2.4750000000003936e-05, 2.4278000000002575e-05, 2.4250000000003435e-05, 2.404100000000242e-05, 2.388899999999916e-05, 2.4208000000004726e-05, 2.4056000000001465e-05, 2.4707999999998287e-05, 2.404100000000242e-05, 2.4041999999994956e-05, 2.4556000000001965e-05, 2.4722000000004796e-05, 2.405500000000199e-05, 2.390300000000567e-05, 2.4068999999994622e-05, 2.387499999999959e-05, 2.438899999999966e-05, 2.4555999999995026e-05, 2.438899999999966e-05, 2.440299999999923e-05, 2.42090000000042e-05, 2.4070000000001035e-05, 2.4401999999999757e-05]</msg>
<status status="PASS" starttime="20201115 22:11:31.984" endtime="20201115 22:11:31.989"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:31.973" endtime="20201115 22:11:31.990"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:31.997" endtime="20201115 22:11:31.999"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:32.005" endtime="20201115 22:11:32.027"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.001" endtime="20201115 22:11:32.029"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:31.992" endtime="20201115 22:11:32.030"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:31.482" endtime="20201115 22:11:32.031"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:31.479" endtime="20201115 22:11:32.031"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:31.477" endtime="20201115 22:11:32.032"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:32.036" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:32.059" endtime="20201115 22:11:32.084"></status>
</kw>
<msg timestamp="20201115 22:11:32.085" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:32.056" endtime="20201115 22:11:32.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:32.091" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:32.088" endtime="20201115 22:11:32.092"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:32.094" endtime="20201115 22:11:32.097"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.048" endtime="20201115 22:11:32.099"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.043" endtime="20201115 22:11:32.100"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:32.117" endtime="20201115 22:11:32.451"></status>
</kw>
<msg timestamp="20201115 22:11:32.458" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045475625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045500431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:32.113" endtime="20201115 22:11:32.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:32.476" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045475625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045500431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:32.460" endtime="20201115 22:11:32.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:32.479" endtime="20201115 22:11:32.484"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.106" endtime="20201115 22:11:32.485"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.102" endtime="20201115 22:11:32.487"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:32.498" level="INFO">${RESULT} = [{'time': 0.045500431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4806000000002215e-05, 'source_diff': 2.4806000000002215e-05}, {'time': 0.045819861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:32.488" endtime="20201115 22:11:32.498"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:32.529" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:32.500" endtime="20201115 22:11:32.529"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:32.539" level="INFO">NAME: 00-overhead-7-remove</msg>
<status status="PASS" starttime="20201115 22:11:32.537" endtime="20201115 22:11:32.540"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:32.545" level="INFO">VALUE: [2.4806000000002215e-05, 2.50970000000017e-05, 2.563900000000091e-05, 2.5638000000001437e-05, 2.5471999999998607e-05, 2.512500000000084e-05, 2.515299999999998e-05, 2.4971999999998107e-05, 2.55970000000022e-05, 2.515299999999998e-05, 2.516699999999955e-05, 2.5846999999995512e-05, 2.495900000000495e-05, 2.4957999999998537e-05, 2.5040999999996483e-05, 2.513900000000041e-05, 2.5638999999993972e-05, 2.569500000000613e-05, 2.5638000000001437e-05, 2.5820000000002785e-05, 2.5304999999996303e-05, 2.515299999999998e-05, 2.479100000000317e-05, 2.5485999999998177e-05, 2.512500000000084e-05, 2.484700000000145e-05, 2.479100000000317e-05, 2.5471999999998607e-05, 2.5290999999996733e-05, 2.566700000000005e-05, 2.513900000000041e-05, 2.56379999999945e-05, 2.4986000000004616e-05, 2.5777999999997137e-05, 2.565300000000048e-05, 2.5278000000003575e-05, 2.4971999999998107e-05, 2.515299999999998e-05, 2.5486000000005116e-05, 2.5832999999995943e-05, 2.5471999999998607e-05, 2.530500000000324e-05, 2.513900000000041e-05, 2.4957999999998537e-05, 2.4806000000002215e-05, 2.5306000000002715e-05, 2.562500000000134e-05, 2.5138999999993472e-05, 2.4790999999996233e-05, 2.5152000000000507e-05]</msg>
<status status="PASS" starttime="20201115 22:11:32.542" endtime="20201115 22:11:32.546"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.530" endtime="20201115 22:11:32.547"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:32.553" endtime="20201115 22:11:32.556"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:32.561" endtime="20201115 22:11:32.583"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.557" endtime="20201115 22:11:32.585"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.549" endtime="20201115 22:11:32.586"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.037" endtime="20201115 22:11:32.587"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.034" endtime="20201115 22:11:32.587"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.032" endtime="20201115 22:11:32.588"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:32.593" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:32.615" endtime="20201115 22:11:32.643"></status>
</kw>
<msg timestamp="20201115 22:11:32.644" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:32.612" endtime="20201115 22:11:32.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:32.650" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:32.646" endtime="20201115 22:11:32.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:32.652" endtime="20201115 22:11:32.656"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.605" endtime="20201115 22:11:32.657"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.599" endtime="20201115 22:11:32.659"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:32.675" endtime="20201115 22:11:33.011"></status>
</kw>
<msg timestamp="20201115 22:11:33.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045682, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045707597, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:11:32.672" endtime="20201115 22:11:33.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:33.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045682, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045707597, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:11:33.021" endtime="20201115 22:11:33.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:33.040" endtime="20201115 22:11:33.044"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.665" endtime="20201115 22:11:33.045"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.660" endtime="20201115 22:11:33.047"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:33.057" level="INFO">${RESULT} = [{'time': 0.045707597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.55970000000022e-05, 'source_diff': 2.55970000000022e-05}, {'time': 0.046070139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:11:33.048" endtime="20201115 22:11:33.058"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:33.087" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:33.059" endtime="20201115 22:11:33.088"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:33.098" level="INFO">NAME: 00-overhead-8-remove</msg>
<status status="PASS" starttime="20201115 22:11:33.096" endtime="20201115 22:11:33.099"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:33.104" level="INFO">VALUE: [2.55970000000022e-05, 2.5236000000004866e-05, 2.5584000000002105e-05, 2.565300000000048e-05, 2.5556000000002965e-05, 2.530500000000324e-05, 2.538900000000066e-05, 2.520899999999826e-05, 2.5749999999997997e-05, 2.5569999999995596e-05, 2.540300000000023e-05, 2.5749999999997997e-05, 2.505500000000299e-05, 2.506900000000256e-05, 2.488900000000016e-05, 2.490299999999973e-05, 2.5750000000004936e-05, 2.490299999999973e-05, 2.5068999999995623e-05, 2.5068999999995623e-05, 2.5056000000002465e-05, 2.5554999999996553e-05, 2.5721999999998857e-05, 2.5000000000004186e-05, 2.5222000000005296e-05, 2.490299999999973e-05, 2.5082999999995192e-05, 2.5749999999997997e-05, 2.488900000000016e-05, 2.556900000000306e-05, 2.5750000000004936e-05, 2.5221999999998357e-05, 2.5527999999996887e-05, 2.543099999999937e-05, 2.5056000000002465e-05, 2.5235999999997927e-05, 2.5056000000002465e-05, 2.5235999999997927e-05, 2.5082999999995192e-05, 2.556900000000306e-05, 2.5721999999998857e-05, 2.5056000000002465e-05, 2.490299999999973e-05, 2.555500000000349e-05, 2.490299999999973e-05, 2.5542000000003395e-05, 2.556900000000306e-05, 2.4902999999992792e-05, 2.5735999999998427e-05, 2.5278000000003575e-05]</msg>
<status status="PASS" starttime="20201115 22:11:33.100" endtime="20201115 22:11:33.105"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.089" endtime="20201115 22:11:33.106"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:33.112" endtime="20201115 22:11:33.115"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:33.120" endtime="20201115 22:11:33.142"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.116" endtime="20201115 22:11:33.144"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.108" endtime="20201115 22:11:33.145"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.594" endtime="20201115 22:11:33.146"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.590" endtime="20201115 22:11:33.146"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:32.589" endtime="20201115 22:11:33.147"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:33.152" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:33.174" endtime="20201115 22:11:33.203"></status>
</kw>
<msg timestamp="20201115 22:11:33.205" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:33.171" endtime="20201115 22:11:33.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:33.211" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:33.207" endtime="20201115 22:11:33.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:33.213" endtime="20201115 22:11:33.217"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.164" endtime="20201115 22:11:33.218"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.158" endtime="20201115 22:11:33.219"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:33.237" endtime="20201115 22:11:33.574"></status>
</kw>
<msg timestamp="20201115 22:11:33.581" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045687736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045713181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:33.233" endtime="20201115 22:11:33.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:33.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045687736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045713181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:33.583" endtime="20201115 22:11:33.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:33.601" endtime="20201115 22:11:33.605"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.226" endtime="20201115 22:11:33.607"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.221" endtime="20201115 22:11:33.608"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:33.619" level="INFO">${RESULT} = [{'time': 0.045713181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.544499999999894e-05, 'source_diff': 2.544499999999894e-05}, {'time': 0.046110486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:33.610" endtime="20201115 22:11:33.619"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:33.649" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:33.621" endtime="20201115 22:11:33.649"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:33.660" level="INFO">NAME: 00-overhead-9-remove</msg>
<status status="PASS" starttime="20201115 22:11:33.657" endtime="20201115 22:11:33.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:33.665" level="INFO">VALUE: [2.544499999999894e-05, 2.4957999999998537e-05, 2.5624999999994402e-05, 2.515299999999998e-05, 2.545899999999851e-05, 2.562500000000134e-05, 2.5806000000003215e-05, 2.5124999999993902e-05, 2.5304999999996303e-05, 2.5457999999999037e-05, 2.5137999999994e-05, 2.5319999999995346e-05, 2.5804999999996803e-05, 2.5278000000003575e-05, 2.5221999999998357e-05, 2.5485999999998177e-05, 2.4958000000005476e-05, 2.513900000000041e-05, 2.562500000000134e-05, 2.5124999999993902e-05, 2.506900000000256e-05, 2.495900000000495e-05, 2.5472000000005546e-05, 2.5820000000002785e-05, 2.515299999999998e-05, 2.494500000000538e-05, 2.4999999999997247e-05, 2.5778000000004075e-05, 2.580500000000374e-05, 2.563900000000091e-05, 2.5332999999995442e-05, 2.5110999999994332e-05, 2.5471999999998607e-05, 2.5292000000003145e-05, 2.5471999999998607e-05, 2.5624999999994402e-05, 2.515299999999998e-05, 2.4806000000002215e-05, 2.4957999999998537e-05, 2.5013000000004282e-05, 2.5624999999994402e-05, 2.5443999999999467e-05, 2.4805999999995276e-05, 2.570899999999876e-05, 2.5471999999998607e-05, 2.494499999999844e-05, 2.4971999999998107e-05, 2.4958000000005476e-05, 2.5290999999996733e-05, 2.5319999999995346e-05]</msg>
<status status="PASS" starttime="20201115 22:11:33.662" endtime="20201115 22:11:33.666"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.651" endtime="20201115 22:11:33.668"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:33.674" endtime="20201115 22:11:33.677"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:33.682" endtime="20201115 22:11:33.704"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.678" endtime="20201115 22:11:33.705"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.669" endtime="20201115 22:11:33.707"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.153" endtime="20201115 22:11:33.707"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.149" endtime="20201115 22:11:33.708"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.148" endtime="20201115 22:11:33.708"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:33.713" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:33.736" endtime="20201115 22:11:33.767"></status>
</kw>
<msg timestamp="20201115 22:11:33.768" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:33.732" endtime="20201115 22:11:33.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:33.775" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:33.770" endtime="20201115 22:11:33.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:33.777" endtime="20201115 22:11:33.781"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.725" endtime="20201115 22:11:33.782"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.720" endtime="20201115 22:11:33.784"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:33.800" endtime="20201115 22:11:34.135"></status>
</kw>
<msg timestamp="20201115 22:11:34.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045571847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04559675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:11:33.797" endtime="20201115 22:11:34.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:34.160" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045571847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04559675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:11:34.144" endtime="20201115 22:11:34.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:34.162" endtime="20201115 22:11:34.167"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.790" endtime="20201115 22:11:34.169"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.785" endtime="20201115 22:11:34.170"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:34.181" level="INFO">${RESULT} = [{'time': 0.04559675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.490299999999973e-05, 'source_diff': 2.490299999999973e-05}, {'time': 0.046030319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:11:34.172" endtime="20201115 22:11:34.181"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:34.211" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:34.183" endtime="20201115 22:11:34.212"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:34.222" level="INFO">NAME: 00-overhead-10-remove</msg>
<status status="PASS" starttime="20201115 22:11:34.220" endtime="20201115 22:11:34.223"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:34.227" level="INFO">VALUE: [2.490299999999973e-05, 2.5485999999998177e-05, 2.540300000000023e-05, 2.5084000000001605e-05, 2.555500000000349e-05, 2.54169999999998e-05, 2.5416000000000327e-05, 2.488900000000016e-05, 2.5735999999998427e-05, 2.540300000000023e-05, 2.556900000000306e-05, 2.5570000000002535e-05, 2.520899999999826e-05, 2.5028000000003325e-05, 2.5054999999996053e-05, 2.538900000000066e-05, 2.5042000000002895e-05, 2.5068999999995623e-05, 2.537500000000109e-05, 2.5069999999995096e-05, 2.505500000000299e-05, 2.556900000000306e-05, 2.5068999999995623e-05, 2.537500000000109e-05, 2.487500000000059e-05, 2.5402000000000757e-05, 2.5235999999997927e-05, 2.538900000000066e-05, 2.5180000000006586e-05, 2.5278000000003575e-05, 2.556900000000306e-05, 2.5556000000002965e-05, 2.488900000000016e-05, 2.512500000000084e-05, 2.5721999999998857e-05, 2.5207999999998787e-05, 2.538900000000066e-05, 2.488900000000016e-05, 2.5041999999995956e-05, 2.5735999999998427e-05, 2.5235999999997927e-05, 2.5236000000011805e-05, 2.538900000000066e-05, 2.5721999999991918e-05, 2.5070000000002035e-05, 2.504100000000342e-05, 2.5054999999996053e-05, 2.5554999999996553e-05, 2.5568999999989184e-05, 2.505500000000993e-05]</msg>
<status status="PASS" starttime="20201115 22:11:34.224" endtime="20201115 22:11:34.228"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.213" endtime="20201115 22:11:34.230"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:34.236" endtime="20201115 22:11:34.239"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:34.244" endtime="20201115 22:11:34.266"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.240" endtime="20201115 22:11:34.267"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.231" endtime="20201115 22:11:34.269"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.714" endtime="20201115 22:11:34.269"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.711" endtime="20201115 22:11:34.270"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.709" endtime="20201115 22:11:34.270"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:34.275" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:34.298" endtime="20201115 22:11:34.331"></status>
</kw>
<msg timestamp="20201115 22:11:34.333" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:34.295" endtime="20201115 22:11:34.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:34.339" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:34.335" endtime="20201115 22:11:34.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:34.341" endtime="20201115 22:11:34.345"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.288" endtime="20201115 22:11:34.346"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.282" endtime="20201115 22:11:34.348"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:34.364" endtime="20201115 22:11:34.699"></status>
</kw>
<msg timestamp="20201115 22:11:34.706" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046381792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046407639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:34.361" endtime="20201115 22:11:34.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:34.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046381792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046407639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:34.708" endtime="20201115 22:11:34.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:34.727" endtime="20201115 22:11:34.731"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.354" endtime="20201115 22:11:34.732"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.349" endtime="20201115 22:11:34.734"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:34.744" level="INFO">${RESULT} = [{'time': 0.046407639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.584700000000245e-05, 'source_diff': 2.584700000000245e-05}, {'time': 0.046880347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:34.735" endtime="20201115 22:11:34.745"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:34.775" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:34.746" endtime="20201115 22:11:34.775"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:34.785" level="INFO">NAME: 00-overhead-11-remove</msg>
<status status="PASS" starttime="20201115 22:11:34.783" endtime="20201115 22:11:34.786"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:34.791" level="INFO">VALUE: [2.584700000000245e-05, 2.662500000000234e-05, 2.6152000000001507e-05, 2.665300000000148e-05, 2.631900000000381e-05, 2.6082999999996193e-05, 2.615300000000098e-05, 2.5834000000002355e-05, 2.6320000000003285e-05, 2.665300000000148e-05, 2.6332999999996443e-05, 2.6306000000003715e-05, 2.588900000000116e-05, 2.6124999999994902e-05, 2.666700000000105e-05, 2.6013999999997817e-05, 2.6624999999995402e-05, 2.613900000000141e-05, 2.6485999999999177e-05, 2.6306000000003715e-05, 2.5820000000002785e-05, 2.5971999999999107e-05, 2.590300000000073e-05, 2.5985999999998677e-05, 2.581900000000331e-05, 2.6166999999993612e-05, 2.583300000000288e-05, 2.5971999999999107e-05, 2.663900000000191e-05, 2.5985999999998677e-05, 2.6318999999996873e-05, 2.581900000000331e-05, 2.6152000000001507e-05, 2.637500000000209e-05, 2.6652999999994542e-05, 2.580500000000374e-05, 2.6290999999997733e-05, 2.630500000000424e-05, 2.5902999999993792e-05, 2.590300000000767e-05, 2.6499999999998747e-05, 2.5930999999992932e-05, 2.6666000000008516e-05, 2.6138999999994472e-05, 2.6652000000002007e-05, 2.6207999999999787e-05, 2.636100000000252e-05, 2.663900000000885e-05, 2.6527999999997887e-05, 2.665300000000148e-05]</msg>
<status status="PASS" starttime="20201115 22:11:34.788" endtime="20201115 22:11:34.792"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.776" endtime="20201115 22:11:34.793"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:34.799" endtime="20201115 22:11:34.802"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:34.808" endtime="20201115 22:11:34.830"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.803" endtime="20201115 22:11:34.831"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.795" endtime="20201115 22:11:34.833"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.276" endtime="20201115 22:11:34.834"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.273" endtime="20201115 22:11:34.834"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.271" endtime="20201115 22:11:34.835"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:34.839" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:34.863" endtime="20201115 22:11:34.898"></status>
</kw>
<msg timestamp="20201115 22:11:34.900" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:34.859" endtime="20201115 22:11:34.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:34.906" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:34.902" endtime="20201115 22:11:34.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:34.908" endtime="20201115 22:11:34.912"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.852" endtime="20201115 22:11:34.913"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.846" endtime="20201115 22:11:34.915"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:34.931" endtime="20201115 22:11:35.266"></status>
</kw>
<msg timestamp="20201115 22:11:35.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046993167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047019403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:34.928" endtime="20201115 22:11:35.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:35.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046993167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047019403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:35.275" endtime="20201115 22:11:35.292"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:35.294" endtime="20201115 22:11:35.299"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.921" endtime="20201115 22:11:35.301"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.916" endtime="20201115 22:11:35.302"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:35.313" level="INFO">${RESULT} = [{'time': 0.047019403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6235999999998927e-05, 'source_diff': 2.6235999999998927e-05}, {'time': 0.047531111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:35.304" endtime="20201115 22:11:35.313"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:35.343" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:35.315" endtime="20201115 22:11:35.344"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:35.354" level="INFO">NAME: 00-overhead-12-remove</msg>
<status status="PASS" starttime="20201115 22:11:35.352" endtime="20201115 22:11:35.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:35.359" level="INFO">VALUE: [2.6235999999998927e-05, 2.611100000000227e-05, 2.6068999999996623e-05, 2.6235999999998927e-05, 2.590300000000073e-05, 2.6513999999998317e-05, 2.6568999999997123e-05, 2.6041999999996956e-05, 2.622299999999883e-05, 2.5902999999993792e-05, 2.637500000000209e-05, 2.6235999999998927e-05, 2.6041999999996956e-05, 2.6555999999997026e-05, 2.6735999999999427e-05, 2.6054999999997053e-05, 2.6568999999997123e-05, 2.588900000000116e-05, 2.6235999999998927e-05, 2.6235999999998927e-05, 2.6568999999997123e-05, 2.5860999999995082e-05, 2.590300000000073e-05, 2.588900000000116e-05, 2.67369999999989e-05, 2.5874999999994652e-05, 2.594499999999944e-05, 2.6568999999997123e-05, 2.5958000000006476e-05, 2.6527999999997887e-05, 2.6721999999999857e-05, 2.662500000000234e-05, 2.630500000000424e-05, 2.6070000000003035e-05, 2.6721999999992918e-05, 2.6749999999992058e-05, 2.640300000000817e-05, 2.6776999999991724e-05, 2.606900000000356e-05, 2.6070000000003035e-05, 2.6082999999996193e-05, 2.640199999999482e-05, 2.5874999999994652e-05, 2.6556000000010904e-05, 2.6721999999992918e-05, 2.6499999999998747e-05, 2.5999999999998247e-05, 2.5916000000000827e-05, 2.6708000000000287e-05, 2.638900000000166e-05]</msg>
<status status="PASS" starttime="20201115 22:11:35.356" endtime="20201115 22:11:35.361"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.345" endtime="20201115 22:11:35.362"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:35.369" endtime="20201115 22:11:35.371"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:35.377" endtime="20201115 22:11:35.398"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.372" endtime="20201115 22:11:35.400"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.364" endtime="20201115 22:11:35.401"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.840" endtime="20201115 22:11:35.402"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.837" endtime="20201115 22:11:35.403"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.835" endtime="20201115 22:11:35.403"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:35.408" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:35.431" endtime="20201115 22:11:35.467"></status>
</kw>
<msg timestamp="20201115 22:11:35.469" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:35.427" endtime="20201115 22:11:35.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:35.475" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:35.471" endtime="20201115 22:11:35.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:35.477" endtime="20201115 22:11:35.481"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.420" endtime="20201115 22:11:35.482"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.414" endtime="20201115 22:11:35.484"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:35.500" endtime="20201115 22:11:35.838"></status>
</kw>
<msg timestamp="20201115 22:11:35.845" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045833722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045860375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:35.497" endtime="20201115 22:11:35.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:35.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045833722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045860375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:35.848" endtime="20201115 22:11:35.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:35.866" endtime="20201115 22:11:35.869"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.490" endtime="20201115 22:11:35.871"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.485" endtime="20201115 22:11:35.872"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:35.883" level="INFO">${RESULT} = [{'time': 0.045860375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.665300000000148e-05, 'source_diff': 2.665300000000148e-05}, {'time': 0.046411181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:35.874" endtime="20201115 22:11:35.884"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:35.914" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:35.885" endtime="20201115 22:11:35.915"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:35.925" level="INFO">NAME: 00-overhead-13-remove</msg>
<status status="PASS" starttime="20201115 22:11:35.923" endtime="20201115 22:11:35.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:35.935" level="INFO">VALUE: [2.665300000000148e-05, 2.5820000000002785e-05, 2.5971999999999107e-05, 2.613900000000141e-05, 2.6610999999995832e-05, 2.645899999999951e-05, 2.6735999999999427e-05, 2.663900000000191e-05, 2.6666999999994112e-05, 2.6541999999997457e-05, 2.598699999999815e-05, 2.615300000000098e-05, 2.6333999999995916e-05, 2.5985999999998677e-05, 2.6110999999995332e-05, 2.631900000000381e-05, 2.668100000000062e-05, 2.6652999999994542e-05, 2.6152999999994042e-05, 2.6082999999996193e-05, 2.6680000000001147e-05, 2.6485999999999177e-05, 2.663900000000191e-05, 2.5846999999995512e-05, 2.6305999999996776e-05, 2.5930000000000397e-05, 2.6180000000000647e-05, 2.6694000000000717e-05, 2.681900000000431e-05, 2.5985999999998677e-05, 2.5971999999999107e-05, 2.6055999999996526e-05, 2.6486000000006116e-05, 2.6471999999999607e-05, 2.6111999999994806e-05, 2.6472000000013485e-05, 2.5958000000006476e-05, 2.6166000000008016e-05, 2.6334000000002855e-05, 2.6610999999995832e-05, 2.615300000000098e-05, 2.638900000000166e-05, 2.666599999999464e-05, 2.581900000001025e-05, 2.612500000000184e-05, 2.5971999999999107e-05, 2.615300000000098e-05, 2.6500000000012625e-05, 2.6680000000001147e-05, 2.616700000000749e-05]</msg>
<status status="PASS" starttime="20201115 22:11:35.927" endtime="20201115 22:11:35.936"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.916" endtime="20201115 22:11:35.938"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:35.944" endtime="20201115 22:11:35.947"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:35.952" endtime="20201115 22:11:35.974"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.948" endtime="20201115 22:11:35.976"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.939" endtime="20201115 22:11:35.977"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.409" endtime="20201115 22:11:35.978"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.406" endtime="20201115 22:11:35.978"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.404" endtime="20201115 22:11:35.979"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:35.983" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:36.006" endtime="20201115 22:11:36.045"></status>
</kw>
<msg timestamp="20201115 22:11:36.046" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:36.003" endtime="20201115 22:11:36.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:36.052" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:36.049" endtime="20201115 22:11:36.053"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:36.055" endtime="20201115 22:11:36.058"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.996" endtime="20201115 22:11:36.060"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.990" endtime="20201115 22:11:36.061"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:36.078" endtime="20201115 22:11:36.412"></status>
</kw>
<msg timestamp="20201115 22:11:36.419" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046282528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046309264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:36.074" endtime="20201115 22:11:36.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:36.437" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046282528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046309264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:36.421" endtime="20201115 22:11:36.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:36.439" endtime="20201115 22:11:36.445"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.067" endtime="20201115 22:11:36.446"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.063" endtime="20201115 22:11:36.448"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:36.458" level="INFO">${RESULT} = [{'time': 0.046309264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6735999999999427e-05, 'source_diff': 2.6735999999999427e-05}, {'time': 0.046900028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:36.449" endtime="20201115 22:11:36.459"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:36.489" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:36.461" endtime="20201115 22:11:36.489"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:36.500" level="INFO">NAME: 00-overhead-14-remove</msg>
<status status="PASS" starttime="20201115 22:11:36.498" endtime="20201115 22:11:36.501"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:36.505" level="INFO">VALUE: [2.6735999999999427e-05, 2.6028000000004325e-05, 2.656900000000406e-05, 2.5999999999998247e-05, 2.672299999999933e-05, 2.6541999999997457e-05, 2.6792000000004645e-05, 2.59170000000003e-05, 2.638900000000166e-05, 2.6291999999997206e-05, 2.6721999999999857e-05, 2.6374999999995152e-05, 2.6584000000003105e-05, 2.6735999999999427e-05, 2.6054999999997053e-05, 2.6721999999999857e-05, 2.640300000000123e-05, 2.6555999999997026e-05, 2.587500000000159e-05, 2.656900000000406e-05, 2.6250000000005436e-05, 2.638900000000166e-05, 2.588900000000116e-05, 2.6235999999998927e-05, 2.636100000000252e-05, 2.6264000000005006e-05, 2.6083999999995666e-05, 2.6235999999998927e-05, 2.620899999999926e-05, 2.6042000000003895e-05, 2.5888999999987283e-05, 2.6235999999998927e-05, 2.588900000000116e-05, 2.6069999999989157e-05, 2.6374999999995152e-05, 2.6582999999996693e-05, 2.6070000000003035e-05, 2.6721999999992918e-05, 2.6083999999995666e-05, 2.606900000000356e-05, 2.6054999999997053e-05, 2.640300000000817e-05, 2.6277000000005102e-05, 2.6222000000006296e-05, 2.5860999999988143e-05, 2.640300000000817e-05, 2.638900000000166e-05, 2.637500000000903e-05, 2.6235999999998927e-05, 2.6069999999989157e-05]</msg>
<status status="PASS" starttime="20201115 22:11:36.502" endtime="20201115 22:11:36.506"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.491" endtime="20201115 22:11:36.508"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:36.514" endtime="20201115 22:11:36.516"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:36.522" endtime="20201115 22:11:36.544"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.518" endtime="20201115 22:11:36.545"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.509" endtime="20201115 22:11:36.547"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.985" endtime="20201115 22:11:36.547"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.981" endtime="20201115 22:11:36.548"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.979" endtime="20201115 22:11:36.548"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:36.553" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:36.576" endtime="20201115 22:11:36.616"></status>
</kw>
<msg timestamp="20201115 22:11:36.618" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:36.572" endtime="20201115 22:11:36.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:36.624" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:36.620" endtime="20201115 22:11:36.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:36.626" endtime="20201115 22:11:36.630"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.565" endtime="20201115 22:11:36.631"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.560" endtime="20201115 22:11:36.633"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:36.649" endtime="20201115 22:11:36.984"></status>
</kw>
<msg timestamp="20201115 22:11:36.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045761569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045789208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:36.646" endtime="20201115 22:11:36.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:37.010" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045761569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045789208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:36.994" endtime="20201115 22:11:37.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:37.013" endtime="20201115 22:11:37.017"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.639" endtime="20201115 22:11:37.019"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.634" endtime="20201115 22:11:37.020"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:37.031" level="INFO">${RESULT} = [{'time': 0.045789208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7638999999995972e-05, 'source_diff': 2.7638999999995972e-05}, {'time': 0.046419014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:37.022" endtime="20201115 22:11:37.031"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:37.061" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:37.033" endtime="20201115 22:11:37.061"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:37.072" level="INFO">NAME: 00-overhead-15-remove</msg>
<status status="PASS" starttime="20201115 22:11:37.069" endtime="20201115 22:11:37.072"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:37.077" level="INFO">VALUE: [2.7638999999995972e-05, 2.763900000000291e-05, 2.7304999999998303e-05, 2.6999999999999247e-05, 2.6944000000000967e-05, 2.7652999999995542e-05, 2.7305000000005242e-05, 2.698699999999915e-05, 2.7834000000004355e-05, 2.697299999999958e-05, 2.6985999999999677e-05, 2.765300000000248e-05, 2.7180000000001647e-05, 2.731900000000481e-05, 2.697299999999958e-05, 2.6972000000000107e-05, 2.6986000000006616e-05, 2.7096999999996763e-05, 2.693100000000087e-05, 2.733300000000438e-05, 2.7486000000000177e-05, 2.7694000000001717e-05, 2.7834000000004355e-05, 2.6972000000000107e-05, 2.6999999999999247e-05, 2.763900000000291e-05, 2.7680000000002147e-05, 2.6874999999995652e-05, 2.733300000000438e-05, 2.7319999999997346e-05, 2.7485999999993238e-05, 2.6986000000006616e-05, 2.7499999999999747e-05, 2.7486000000007116e-05, 2.733300000000438e-05, 2.6818999999997373e-05, 2.7152000000002507e-05, 2.7832999999991004e-05, 2.6972000000000107e-05, 2.7208000000000787e-05, 2.7485999999993238e-05, 2.7832999999991004e-05, 2.7249999999992558e-05, 2.716700000000849e-05, 2.7778000000006076e-05, 2.74170000000018e-05, 2.7485999999993238e-05, 2.7819999999997846e-05, 2.7194000000008156e-05, 2.7152000000002507e-05]</msg>
<status status="PASS" starttime="20201115 22:11:37.074" endtime="20201115 22:11:37.078"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.063" endtime="20201115 22:11:37.080"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:37.086" endtime="20201115 22:11:37.088"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:37.094" endtime="20201115 22:11:37.116"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.090" endtime="20201115 22:11:37.117"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.081" endtime="20201115 22:11:37.119"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.554" endtime="20201115 22:11:37.119"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.551" endtime="20201115 22:11:37.120"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.549" endtime="20201115 22:11:37.120"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:37.125" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:37.148" endtime="20201115 22:11:37.191"></status>
</kw>
<msg timestamp="20201115 22:11:37.192" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:37.145" endtime="20201115 22:11:37.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:37.198" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:37.194" endtime="20201115 22:11:37.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:37.200" endtime="20201115 22:11:37.204"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.137" endtime="20201115 22:11:37.205"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.132" endtime="20201115 22:11:37.207"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:37.224" endtime="20201115 22:11:37.559"></status>
</kw>
<msg timestamp="20201115 22:11:37.567" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045888903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045916639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:37.221" endtime="20201115 22:11:37.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:37.585" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045888903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045916639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:37.569" endtime="20201115 22:11:37.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:37.587" endtime="20201115 22:11:37.592"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.213" endtime="20201115 22:11:37.594"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.208" endtime="20201115 22:11:37.595"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:37.606" level="INFO">${RESULT} = [{'time': 0.045916639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7736000000000427e-05, 'source_diff': 2.7736000000000427e-05}, {'time': 0.046581528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:37.597" endtime="20201115 22:11:37.606"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:37.636" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:37.608" endtime="20201115 22:11:37.636"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:37.647" level="INFO">NAME: 00-overhead-16-remove</msg>
<status status="PASS" starttime="20201115 22:11:37.645" endtime="20201115 22:11:37.647"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:37.652" level="INFO">VALUE: [2.7736000000000427e-05, 2.7569999999997596e-05, 2.7402999999995292e-05, 2.7736000000000427e-05, 2.722299999999983e-05, 2.7222000000000357e-05, 2.7235999999999927e-05, 2.7722000000000857e-05, 2.7402000000002757e-05, 2.7541999999998457e-05, 2.7722000000000857e-05, 2.6902999999994792e-05, 2.7055999999997526e-05, 2.7070000000004035e-05, 2.7736000000000427e-05, 2.7540999999998983e-05, 2.7749999999999997e-05, 2.7068999999997623e-05, 2.6916999999994362e-05, 2.690300000000173e-05, 2.7541999999998457e-05, 2.7555999999998027e-05, 2.7736000000000427e-05, 2.7374999999996152e-05, 2.688900000000216e-05, 2.7235999999999927e-05, 2.7277999999991698e-05, 2.7708000000001287e-05, 2.7221999999993418e-05, 2.7721999999993918e-05, 2.692999999999446e-05, 2.7070000000004035e-05, 2.6902000000009196e-05, 2.7069999999990157e-05, 2.756900000000506e-05, 2.7568999999991184e-05, 2.740300000000917e-05, 2.7055999999997526e-05, 2.7722000000007796e-05, 2.7070000000004035e-05, 2.7777999999992198e-05, 2.7736000000000427e-05, 2.706900000000456e-05, 2.7568999999991184e-05, 2.688900000000216e-05, 2.7084000000010544e-05, 2.7722000000007796e-05, 2.706900000000456e-05, 2.7069999999990157e-05, 2.7736000000000427e-05]</msg>
<status status="PASS" starttime="20201115 22:11:37.649" endtime="20201115 22:11:37.653"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.638" endtime="20201115 22:11:37.655"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:37.661" endtime="20201115 22:11:37.663"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:37.669" endtime="20201115 22:11:37.690"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.665" endtime="20201115 22:11:37.692"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.656" endtime="20201115 22:11:37.694"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.126" endtime="20201115 22:11:37.695"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.123" endtime="20201115 22:11:37.695"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.121" endtime="20201115 22:11:37.695"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:37.700" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:37.723" endtime="20201115 22:11:37.768"></status>
</kw>
<msg timestamp="20201115 22:11:37.769" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:37.719" endtime="20201115 22:11:37.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:37.776" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:37.772" endtime="20201115 22:11:37.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:37.778" endtime="20201115 22:11:37.783"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.712" endtime="20201115 22:11:37.784"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.707" endtime="20201115 22:11:37.786"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:37.802" endtime="20201115 22:11:38.142"></status>
</kw>
<msg timestamp="20201115 22:11:38.149" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046273819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046301292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:37.799" endtime="20201115 22:11:38.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:38.167" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046273819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046301292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:38.152" endtime="20201115 22:11:38.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:38.170" endtime="20201115 22:11:38.174"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.792" endtime="20201115 22:11:38.175"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.787" endtime="20201115 22:11:38.177"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:38.187" level="INFO">${RESULT} = [{'time': 0.046301292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.747300000000008e-05, 'source_diff': 2.747300000000008e-05}, {'time': 0.047006361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:38.178" endtime="20201115 22:11:38.188"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:38.217" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:38.189" endtime="20201115 22:11:38.218"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:38.228" level="INFO">NAME: 00-overhead-17-remove</msg>
<status status="PASS" starttime="20201115 22:11:38.226" endtime="20201115 22:11:38.229"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:38.233" level="INFO">VALUE: [2.747300000000008e-05, 2.713900000000241e-05, 2.7638999999995972e-05, 2.697299999999958e-05, 2.6820000000003785e-05, 2.7610999999996833e-05, 2.7804999999998803e-05, 2.7430000000001897e-05, 2.715300000000198e-05, 2.731900000000481e-05, 2.7486000000000177e-05, 2.7596999999997263e-05, 2.765199999999607e-05, 2.7790999999999233e-05, 2.7305999999997776e-05, 2.765300000000248e-05, 2.6999999999999247e-05, 2.7805999999998277e-05, 2.733300000000438e-05, 2.6972000000000107e-05, 2.762500000000334e-05, 2.7305000000005242e-05, 2.766599999999564e-05, 2.715300000000198e-05, 2.7638999999995972e-05, 2.7318999999997873e-05, 2.6818999999997373e-05, 2.7291999999998207e-05, 2.712500000000284e-05, 2.7208000000000787e-05, 2.7138999999995472e-05, 2.6999999999999247e-05, 2.6999999999999247e-05, 2.7555999999998027e-05, 2.7346999999997013e-05, 2.7110999999996332e-05, 2.7652000000003008e-05, 2.738900000000266e-05, 2.7832999999991004e-05, 2.7472000000000607e-05, 2.7527999999998887e-05, 2.715300000000198e-05, 2.7778000000006076e-05, 2.7819999999997846e-05, 2.7472000000000607e-05, 2.697299999999958e-05, 2.7638999999995972e-05, 2.7082999999997193e-05, 2.6957999999993598e-05, 2.766700000000899e-05]</msg>
<status status="PASS" starttime="20201115 22:11:38.230" endtime="20201115 22:11:38.234"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.219" endtime="20201115 22:11:38.236"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:38.242" endtime="20201115 22:11:38.245"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:38.250" endtime="20201115 22:11:38.272"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.246" endtime="20201115 22:11:38.274"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.238" endtime="20201115 22:11:38.275"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.701" endtime="20201115 22:11:38.276"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.698" endtime="20201115 22:11:38.276"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.696" endtime="20201115 22:11:38.277"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:38.281" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:38.305" endtime="20201115 22:11:38.352"></status>
</kw>
<msg timestamp="20201115 22:11:38.353" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:38.302" endtime="20201115 22:11:38.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:38.359" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:38.355" endtime="20201115 22:11:38.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:38.361" endtime="20201115 22:11:38.365"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.295" endtime="20201115 22:11:38.367"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.289" endtime="20201115 22:11:38.368"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:38.385" endtime="20201115 22:11:38.718"></status>
</kw>
<msg timestamp="20201115 22:11:38.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047027361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047054764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:38.381" endtime="20201115 22:11:38.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:38.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047027361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047054764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:38.727" endtime="20201115 22:11:38.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:38.745" endtime="20201115 22:11:38.750"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.374" endtime="20201115 22:11:38.752"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.369" endtime="20201115 22:11:38.754"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:38.764" level="INFO">${RESULT} = [{'time': 0.047054764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.740300000000223e-05, 'source_diff': 2.740300000000223e-05}, {'time': 0.047798653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:38.755" endtime="20201115 22:11:38.765"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:38.795" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:38.766" endtime="20201115 22:11:38.795"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:38.806" level="INFO">NAME: 00-overhead-18-remove</msg>
<status status="PASS" starttime="20201115 22:11:38.804" endtime="20201115 22:11:38.806"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:38.811" level="INFO">VALUE: [2.740300000000223e-05, 2.7542000000005395e-05, 2.7262999999999593e-05, 2.684700000000345e-05, 2.6916000000001827e-05, 2.7249999999999497e-05, 2.738900000000266e-05, 2.758300000000463e-05, 2.7055999999997526e-05, 2.7208000000000787e-05, 2.7569999999997596e-05, 2.7082999999997193e-05, 2.6902999999994792e-05, 2.7528000000005826e-05, 2.7026999999998913e-05, 2.7736000000000427e-05, 2.7056000000004465e-05, 2.688900000000216e-05, 2.7263999999999067e-05, 2.7388000000003188e-05, 2.7722000000000857e-05, 2.7250000000006436e-05, 2.738799999998931e-05, 2.748700000000659e-05, 2.7721999999993918e-05, 2.7318999999997873e-05, 2.7208000000000787e-05, 2.6986000000006616e-05, 2.7374999999996152e-05, 2.7598000000003675e-05, 2.6888999999988283e-05, 2.7235999999999927e-05, 2.7736000000000427e-05, 2.688900000000216e-05, 2.6874999999995652e-05, 2.7040999999991544e-05, 2.695900000000695e-05, 2.744500000000094e-05, 2.7028000000012264e-05, 2.706900000000456e-05, 2.7332999999990504e-05, 2.7721999999993918e-05, 2.743100000000831e-05, 2.7541999999991518e-05, 2.7526999999999413e-05, 2.7736000000000427e-05, 2.6944000000000967e-05, 2.737500000001003e-05, 2.7374999999996152e-05, 2.7235999999999927e-05]</msg>
<status status="PASS" starttime="20201115 22:11:38.808" endtime="20201115 22:11:38.812"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.797" endtime="20201115 22:11:38.813"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:38.820" endtime="20201115 22:11:38.823"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:38.828" endtime="20201115 22:11:38.850"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.824" endtime="20201115 22:11:38.852"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.815" endtime="20201115 22:11:38.853"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.283" endtime="20201115 22:11:38.854"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.279" endtime="20201115 22:11:38.854"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.277" endtime="20201115 22:11:38.855"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:38.860" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:38.883" endtime="20201115 22:11:38.932"></status>
</kw>
<msg timestamp="20201115 22:11:38.933" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:38.879" endtime="20201115 22:11:38.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:38.939" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:38.935" endtime="20201115 22:11:38.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:38.941" endtime="20201115 22:11:38.945"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.872" endtime="20201115 22:11:38.947"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.866" endtime="20201115 22:11:38.948"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:38.964" endtime="20201115 22:11:39.302"></status>
</kw>
<msg timestamp="20201115 22:11:39.309" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046780708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046809472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:38.961" endtime="20201115 22:11:39.309"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:39.327" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046780708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046809472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:39.311" endtime="20201115 22:11:39.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:39.330" endtime="20201115 22:11:39.334"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.954" endtime="20201115 22:11:39.335"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.949" endtime="20201115 22:11:39.337"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:39.347" level="INFO">${RESULT} = [{'time': 0.046809472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8764000000000567e-05, 'source_diff': 2.8764000000000567e-05}, {'time': 0.047593222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:39.338" endtime="20201115 22:11:39.348"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:39.377" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:39.349" endtime="20201115 22:11:39.378"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:39.388" level="INFO">NAME: 00-overhead-19-remove</msg>
<status status="PASS" starttime="20201115 22:11:39.386" endtime="20201115 22:11:39.389"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:39.394" level="INFO">VALUE: [2.8764000000000567e-05, 2.8304999999999303e-05, 2.8013999999999817e-05, 2.8305999999998777e-05, 2.8124999999996902e-05, 2.8472000000001607e-05, 2.8638999999996972e-05, 2.8486000000001177e-05, 2.8791999999999707e-05, 2.7930999999994932e-05, 2.8804999999999803e-05, 2.7749999999999997e-05, 2.8652999999996542e-05, 2.8486000000001177e-05, 2.794500000000144e-05, 2.7958999999994072e-05, 2.8486000000001177e-05, 2.7819999999997846e-05, 2.8541999999999457e-05, 2.8402999999996292e-05, 2.815300000000298e-05, 2.7806000000005215e-05, 2.847300000000108e-05, 2.8304999999992364e-05, 2.8472000000001607e-05, 2.7805000000005742e-05, 2.8138999999996472e-05, 2.7957999999994598e-05, 2.8486000000008116e-05, 2.7958999999994072e-05, 2.7818999999998373e-05, 2.813900000001035e-05, 2.8638999999996972e-05, 2.8305999999991838e-05, 2.8485999999994238e-05, 2.8736000000001427e-05, 2.7986000000007616e-05, 2.847199999998773e-05, 2.8444000000002467e-05, 2.8472000000001607e-05, 2.8819999999998847e-05, 2.8110999999997333e-05, 2.7819999999997846e-05, 2.8138999999996472e-05, 2.7944000000001967e-05, 2.7792000000012584e-05, 2.8806000000006216e-05, 2.8485999999994238e-05, 2.7986000000007616e-05, 2.7832999999991004e-05]</msg>
<status status="PASS" starttime="20201115 22:11:39.391" endtime="20201115 22:11:39.395"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.379" endtime="20201115 22:11:39.397"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:39.403" endtime="20201115 22:11:39.406"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:39.411" endtime="20201115 22:11:39.433"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.407" endtime="20201115 22:11:39.435"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.399" endtime="20201115 22:11:39.436"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.861" endtime="20201115 22:11:39.437"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.857" endtime="20201115 22:11:39.437"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.856" endtime="20201115 22:11:39.438"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:39.442" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:39.465" endtime="20201115 22:11:39.516"></status>
</kw>
<msg timestamp="20201115 22:11:39.517" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:39.462" endtime="20201115 22:11:39.517"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:39.523" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:39.519" endtime="20201115 22:11:39.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:39.526" endtime="20201115 22:11:39.529"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.455" endtime="20201115 22:11:39.531"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.449" endtime="20201115 22:11:39.532"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:39.549" endtime="20201115 22:11:39.881"></status>
</kw>
<msg timestamp="20201115 22:11:39.888" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045824333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045853069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:39.546" endtime="20201115 22:11:39.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:39.907" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045824333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045853069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:39.891" endtime="20201115 22:11:39.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:39.909" endtime="20201115 22:11:39.915"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.538" endtime="20201115 22:11:39.916"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.534" endtime="20201115 22:11:39.918"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:39.928" level="INFO">${RESULT} = [{'time': 0.045853069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8736000000001427e-05, 'source_diff': 2.8736000000001427e-05}, {'time': 0.046680167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:39.919" endtime="20201115 22:11:39.929"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:39.958" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:39.930" endtime="20201115 22:11:39.959"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:39.969" level="INFO">NAME: 00-overhead-20-remove</msg>
<status status="PASS" starttime="20201115 22:11:39.967" endtime="20201115 22:11:39.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:39.976" level="INFO">VALUE: [2.8736000000001427e-05, 2.8750000000000997e-05, 2.8068999999998623e-05, 2.8388999999996722e-05, 2.8568999999999123e-05, 2.8721999999994918e-05, 2.858300000000563e-05, 2.8735999999994488e-05, 2.8069999999998096e-05, 2.7888000000003688e-05, 2.8541999999999457e-05, 2.7888999999996222e-05, 2.8736000000001427e-05, 2.7902000000003258e-05, 2.8346999999998013e-05, 2.7888999999996222e-05, 2.8277999999999637e-05, 2.8388999999996722e-05, 2.812500000000384e-05, 2.8222000000001357e-05, 2.8054999999999053e-05, 2.7972000000001107e-05, 2.8054999999999053e-05, 2.8722000000008796e-05, 2.811100000001121e-05, 2.84579999999951e-05, 2.840199999999682e-05, 2.8750000000007936e-05, 2.8570000000005535e-05, 2.8402000000010696e-05, 2.8111999999996806e-05, 2.8555999999999027e-05, 2.7944000000001967e-05, 2.790300000000967e-05, 2.8250000000007436e-05, 2.8070000000005035e-05, 2.8236000000000927e-05, 2.8582999999998693e-05, 2.8070000000005035e-05, 2.8568999999992184e-05, 2.8221999999994418e-05, 2.8736000000001427e-05, 2.87370000000009e-05, 2.838900000000366e-05, 2.788900000000316e-05, 2.8791000000000233e-05, 2.869399999999578e-05, 2.8055999999998527e-05, 2.837500000001103e-05, 2.8513999999993378e-05]</msg>
<status status="PASS" starttime="20201115 22:11:39.972" endtime="20201115 22:11:39.976"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.960" endtime="20201115 22:11:39.978"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:39.984" endtime="20201115 22:11:39.987"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:39.992" endtime="20201115 22:11:40.014"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.988" endtime="20201115 22:11:40.016"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.980" endtime="20201115 22:11:40.017"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.444" endtime="20201115 22:11:40.018"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.440" endtime="20201115 22:11:40.019"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.438" endtime="20201115 22:11:40.019"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:40.024" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:40.048" endtime="20201115 22:11:40.101"></status>
</kw>
<msg timestamp="20201115 22:11:40.102" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:40.044" endtime="20201115 22:11:40.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:40.108" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:40.104" endtime="20201115 22:11:40.109"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:40.110" endtime="20201115 22:11:40.114"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.037" endtime="20201115 22:11:40.116"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.031" endtime="20201115 22:11:40.117"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:40.134" endtime="20201115 22:11:40.472"></status>
</kw>
<msg timestamp="20201115 22:11:40.479" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047941931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047970597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:40.130" endtime="20201115 22:11:40.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:40.497" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047941931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047970597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:40.481" endtime="20201115 22:11:40.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:40.499" endtime="20201115 22:11:40.503"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.123" endtime="20201115 22:11:40.505"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.118" endtime="20201115 22:11:40.506"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:40.517" level="INFO">${RESULT} = [{'time': 0.047970597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.866599999999664e-05, 'source_diff': 2.866599999999664e-05}, {'time': 0.048839639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:40.508" endtime="20201115 22:11:40.518"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:40.547" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:40.519" endtime="20201115 22:11:40.548"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:40.558" level="INFO">NAME: 00-overhead-21-remove</msg>
<status status="PASS" starttime="20201115 22:11:40.556" endtime="20201115 22:11:40.559"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:40.564" level="INFO">VALUE: [2.866599999999664e-05, 2.8471999999994668e-05, 2.8472000000001607e-05, 2.8318999999998873e-05, 2.7819999999997846e-05, 2.8458000000002037e-05, 2.8040999999999483e-05, 2.8818999999999373e-05, 2.7819999999997846e-05, 2.8138999999996472e-05, 2.7972000000001107e-05, 2.8152000000003508e-05, 2.8486000000001177e-05, 2.7986000000000677e-05, 2.788900000000316e-05, 2.8291999999999207e-05, 2.8305999999998777e-05, 2.7834000000004355e-05, 2.8124999999989964e-05, 2.84579999999951e-05, 2.8124999999989964e-05, 2.8652000000004008e-05, 2.8804999999992864e-05, 2.7972000000001107e-05, 2.815300000000298e-05, 2.867999999998927e-05, 2.8318999999998873e-05, 2.865300000000348e-05, 2.8554999999999553e-05, 2.8305000000006242e-05, 2.8138999999996472e-05, 2.8013999999992878e-05, 2.8304999999992364e-05, 2.8486000000008116e-05, 2.863900000001085e-05, 2.8472000000001607e-05, 2.7806000000005215e-05, 2.8346999999998013e-05, 2.8500000000000747e-05, 2.8124999999989964e-05, 2.8318999999998873e-05, 2.794399999998809e-05, 2.8777000000007602e-05, 2.8304999999992364e-05, 2.7986000000007616e-05, 2.7986000000007616e-05, 2.8652000000004008e-05, 2.8472000000001607e-05, 2.7791999999998707e-05, 2.8791999999999707e-05]</msg>
<status status="PASS" starttime="20201115 22:11:40.560" endtime="20201115 22:11:40.564"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.549" endtime="20201115 22:11:40.566"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:40.572" endtime="20201115 22:11:40.575"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:40.580" endtime="20201115 22:11:40.602"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.576" endtime="20201115 22:11:40.604"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.568" endtime="20201115 22:11:40.605"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.025" endtime="20201115 22:11:40.606"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.022" endtime="20201115 22:11:40.606"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.020" endtime="20201115 22:11:40.607"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:40.611" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:40.634" endtime="20201115 22:11:40.689"></status>
</kw>
<msg timestamp="20201115 22:11:40.690" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:40.631" endtime="20201115 22:11:40.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:40.696" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:40.692" endtime="20201115 22:11:40.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:40.698" endtime="20201115 22:11:40.702"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.624" endtime="20201115 22:11:40.704"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.618" endtime="20201115 22:11:40.705"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:40.721" endtime="20201115 22:11:41.051"></status>
</kw>
<msg timestamp="20201115 22:11:41.058" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045884486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045912847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:40.718" endtime="20201115 22:11:41.059"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:41.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045884486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045912847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:41.060" endtime="20201115 22:11:41.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:41.085" endtime="20201115 22:11:41.090"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.711" endtime="20201115 22:11:41.092"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.706" endtime="20201115 22:11:41.093"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:41.104" level="INFO">${RESULT} = [{'time': 0.045912847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8360999999997583e-05, 'source_diff': 2.8360999999997583e-05}, {'time': 0.046820986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:41.095" endtime="20201115 22:11:41.104"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:41.134" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:41.106" endtime="20201115 22:11:41.135"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:41.145" level="INFO">NAME: 00-overhead-22-remove</msg>
<status status="PASS" starttime="20201115 22:11:41.143" endtime="20201115 22:11:41.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:41.150" level="INFO">VALUE: [2.8360999999997583e-05, 2.838900000000366e-05, 2.8222000000001357e-05, 2.8554999999999553e-05, 2.8250000000000497e-05, 2.8264000000000067e-05, 2.8722000000001857e-05, 2.8541999999999457e-05, 2.822300000000083e-05, 2.7874999999996652e-05, 2.8055999999998527e-05, 2.8054999999999053e-05, 2.8290999999999733e-05, 2.841599999999639e-05, 2.8236000000000927e-05, 2.8736000000001427e-05, 2.8541999999999457e-05, 2.812500000000384e-05, 2.819500000000169e-05, 2.8082999999998193e-05, 2.8069000000005562e-05, 2.788900000000316e-05, 2.870900000000176e-05, 2.8721999999994918e-05, 2.8582999999998693e-05, 2.8236000000000927e-05, 2.7957999999994598e-05, 2.8054999999999053e-05, 2.8250000000007436e-05, 2.869500000000913e-05, 2.8736000000001427e-05, 2.845900000000845e-05, 2.7902999999995792e-05, 2.84170000000028e-05, 2.8694999999995252e-05, 2.8221999999994418e-05, 2.8026999999999913e-05, 2.8068999999991684e-05, 2.8236000000000927e-05, 2.8069000000005562e-05, 2.8570000000005535e-05, 2.8582999999998693e-05, 2.8222000000008296e-05, 2.8541999999992518e-05, 2.8638999999996972e-05, 2.8584000000012044e-05, 2.8736000000001427e-05, 2.8527000000000413e-05, 2.842999999999596e-05, 2.8722000000008796e-05]</msg>
<status status="PASS" starttime="20201115 22:11:41.147" endtime="20201115 22:11:41.151"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.136" endtime="20201115 22:11:41.153"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:41.159" endtime="20201115 22:11:41.162"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:41.167" endtime="20201115 22:11:41.189"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.163" endtime="20201115 22:11:41.191"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.155" endtime="20201115 22:11:41.192"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.612" endtime="20201115 22:11:41.193"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.609" endtime="20201115 22:11:41.193"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.607" endtime="20201115 22:11:41.194"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:41.199" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:41.221" endtime="20201115 22:11:41.278"></status>
</kw>
<msg timestamp="20201115 22:11:41.279" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:41.218" endtime="20201115 22:11:41.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:41.285" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:41.281" endtime="20201115 22:11:41.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:41.287" endtime="20201115 22:11:41.291"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.211" endtime="20201115 22:11:41.293"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.205" endtime="20201115 22:11:41.294"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:41.311" endtime="20201115 22:11:41.647"></status>
</kw>
<msg timestamp="20201115 22:11:41.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045891444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045920764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:41.308" endtime="20201115 22:11:41.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:41.673" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045891444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045920764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:41.657" endtime="20201115 22:11:41.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:41.675" endtime="20201115 22:11:41.679"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.300" endtime="20201115 22:11:41.680"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.295" endtime="20201115 22:11:41.682"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:41.692" level="INFO">${RESULT} = [{'time': 0.045920764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9319999999999347e-05, 'source_diff': 2.9319999999999347e-05}, {'time': 0.046871042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:41.684" endtime="20201115 22:11:41.693"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:41.723" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:41.695" endtime="20201115 22:11:41.723"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:41.734" level="INFO">NAME: 00-overhead-23-remove</msg>
<status status="PASS" starttime="20201115 22:11:41.731" endtime="20201115 22:11:41.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:41.739" level="INFO">VALUE: [2.9319999999999347e-05, 2.9319999999999347e-05, 2.9652999999997542e-05, 2.9541000000000983e-05, 2.9208999999995322e-05, 2.9472000000002607e-05, 2.8986000000001677e-05, 2.9388999999997723e-05, 2.9305999999999777e-05, 2.9582999999999693e-05, 2.8804999999999803e-05, 2.9166000000004078e-05, 2.8805999999999277e-05, 2.967999999999721e-05, 2.9846999999999513e-05, 2.9318999999999873e-05, 2.893100000000287e-05, 2.9319999999999347e-05, 2.8805999999992338e-05, 2.962500000000534e-05, 2.9638999999997973e-05, 2.9500000000001747e-05, 2.9137999999998e-05, 2.8986000000008616e-05, 2.916599999999714e-05, 2.897300000000158e-05, 2.936100000000552e-05, 2.9346999999999013e-05, 2.9332999999992504e-05, 2.9264000000001067e-05, 2.9346999999999013e-05, 2.934700000001289e-05, 2.8818999999999373e-05, 2.8805000000006742e-05, 2.9486000000009116e-05, 2.9013999999993878e-05, 2.8833999999991478e-05, 2.9166999999996612e-05, 2.9152999999990103e-05, 2.9638999999997973e-05, 2.9347999999998486e-05, 2.915300000000398e-05, 2.9555000000000553e-05, 2.8972000000002107e-05, 2.9819999999999847e-05, 2.915300000000398e-05, 2.9166999999996612e-05, 2.9638999999997973e-05, 2.8818999999999373e-05, 2.919399999999628e-05]</msg>
<status status="PASS" starttime="20201115 22:11:41.736" endtime="20201115 22:11:41.740"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.725" endtime="20201115 22:11:41.741"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:41.748" endtime="20201115 22:11:41.750"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:41.756" endtime="20201115 22:11:41.777"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.751" endtime="20201115 22:11:41.779"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.743" endtime="20201115 22:11:41.780"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.200" endtime="20201115 22:11:41.781"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.196" endtime="20201115 22:11:41.782"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.195" endtime="20201115 22:11:41.782"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:41.787" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:41.809" endtime="20201115 22:11:41.868"></status>
</kw>
<msg timestamp="20201115 22:11:41.869" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:41.806" endtime="20201115 22:11:41.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:41.876" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:41.872" endtime="20201115 22:11:41.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:41.878" endtime="20201115 22:11:41.882"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.799" endtime="20201115 22:11:41.884"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.793" endtime="20201115 22:11:41.885"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:41.902" endtime="20201115 22:11:42.240"></status>
</kw>
<msg timestamp="20201115 22:11:42.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045765069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045794306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:41.898" endtime="20201115 22:11:42.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:42.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045765069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045794306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:42.250" endtime="20201115 22:11:42.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:42.268" endtime="20201115 22:11:42.274"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.891" endtime="20201115 22:11:42.275"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.887" endtime="20201115 22:11:42.277"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:42.287" level="INFO">${RESULT} = [{'time': 0.045794306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.92370000000014e-05, 'source_diff': 2.92370000000014e-05}, {'time': 0.046786792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:11:42.278" endtime="20201115 22:11:42.288"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:42.318" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:42.289" endtime="20201115 22:11:42.318"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:42.329" level="INFO">NAME: 00-overhead-24-remove</msg>
<status status="PASS" starttime="20201115 22:11:42.326" endtime="20201115 22:11:42.329"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:42.334" level="INFO">VALUE: [2.92370000000014e-05, 2.8888999999997222e-05, 2.9236000000001927e-05, 2.890300000000373e-05, 2.9541000000000983e-05, 2.891599999999689e-05, 2.9069999999999097e-05, 2.9000000000001247e-05, 2.9735999999995488e-05, 2.9542000000000457e-05, 2.9556000000000027e-05, 2.9236000000001927e-05, 2.9708000000003287e-05, 2.922199999999542e-05, 2.8888999999997222e-05, 2.9736000000002427e-05, 2.9347999999998486e-05, 2.9736000000002427e-05, 2.8902999999996792e-05, 2.9555000000000553e-05, 2.9556000000000027e-05, 2.9374999999998153e-05, 2.9569999999992658e-05, 2.938900000000466e-05, 2.940300000001117e-05, 2.9569999999992658e-05, 2.9569999999992658e-05, 2.9582999999999693e-05, 2.938900000000466e-05, 2.940199999999782e-05, 2.9082999999999193e-05, 2.9402999999997292e-05, 2.8846999999998513e-05, 2.9583999999999167e-05, 2.9555000000000553e-05, 2.9750000000008936e-05, 2.9736000000002427e-05, 2.922300000000877e-05, 2.938900000000466e-05, 2.9708000000003287e-05, 2.8860999999991144e-05, 2.9055999999999527e-05, 2.9556000000000027e-05, 2.973599999998855e-05, 2.973599999998855e-05, 2.9749999999995058e-05, 2.890199999999732e-05, 2.97370000000019e-05, 2.922199999999542e-05, 2.9055999999999527e-05]</msg>
<status status="PASS" starttime="20201115 22:11:42.331" endtime="20201115 22:11:42.335"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.320" endtime="20201115 22:11:42.336"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:42.343" endtime="20201115 22:11:42.345"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:42.351" endtime="20201115 22:11:42.373"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.347" endtime="20201115 22:11:42.374"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.338" endtime="20201115 22:11:42.376"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.788" endtime="20201115 22:11:42.376"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.785" endtime="20201115 22:11:42.377"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.783" endtime="20201115 22:11:42.377"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:42.382" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:42.406" endtime="20201115 22:11:42.467"></status>
</kw>
<msg timestamp="20201115 22:11:42.468" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:42.402" endtime="20201115 22:11:42.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:42.474" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:42.470" endtime="20201115 22:11:42.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:42.476" endtime="20201115 22:11:42.480"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.395" endtime="20201115 22:11:42.482"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.389" endtime="20201115 22:11:42.483"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:42.500" endtime="20201115 22:11:42.841"></status>
</kw>
<msg timestamp="20201115 22:11:42.848" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046995875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0470255, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:11:42.496" endtime="20201115 22:11:42.849"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:42.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046995875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0470255, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:11:42.850" endtime="20201115 22:11:42.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:42.868" endtime="20201115 22:11:42.872"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.489" endtime="20201115 22:11:42.874"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.484" endtime="20201115 22:11:42.875"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:42.886" level="INFO">${RESULT} = [{'time': 0.0470255, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9624999999998403e-05, 'source_diff': 2.9624999999998403e-05}, {'time': 0.048059819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:42.877" endtime="20201115 22:11:42.886"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:42.916" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:11:42.888" endtime="20201115 22:11:42.917"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:42.927" level="INFO">NAME: 00-overhead-25-remove</msg>
<status status="PASS" starttime="20201115 22:11:42.925" endtime="20201115 22:11:42.928"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:42.932" level="INFO">VALUE: [2.9624999999998403e-05, 2.9332999999999443e-05, 2.9638999999997973e-05, 2.9806000000000277e-05, 2.9166000000004078e-05, 2.89579999999956e-05, 2.8972000000002107e-05, 2.8846999999998513e-05, 2.8958000000002537e-05, 2.916599999999714e-05, 2.9500000000001747e-05, 2.9305999999999777e-05, 2.9305999999999777e-05, 2.913900000000441e-05, 2.9472000000002607e-05, 2.965300000000448e-05, 2.9138999999997472e-05, 2.9305999999992838e-05, 2.9014000000007756e-05, 2.8986999999994212e-05, 2.9334000000005855e-05, 2.8804999999992864e-05, 2.915199999999063e-05, 2.9556000000000027e-05, 2.9528000000000887e-05, 2.9152999999990103e-05, 2.9138999999997472e-05, 2.96379999999985e-05, 2.966599999999764e-05, 2.9486000000009116e-05, 2.947199999998873e-05, 2.9638999999997973e-05, 2.9500000000001747e-05, 2.966700000001099e-05, 2.9264000000001067e-05, 2.9500000000001747e-05, 2.9319999999999347e-05, 2.9319999999999347e-05, 2.8832999999992004e-05, 2.9722000000009796e-05, 2.9000000000001247e-05, 2.916599999999714e-05, 2.9472000000002607e-05, 2.9666000000011516e-05, 2.915199999999063e-05, 2.9292000000000207e-05, 2.9472000000002607e-05, 2.9318999999999873e-05, 2.9138999999997472e-05, 2.8986000000008616e-05]</msg>
<status status="PASS" starttime="20201115 22:11:42.929" endtime="20201115 22:11:42.933"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.918" endtime="20201115 22:11:42.935"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:42.941" endtime="20201115 22:11:42.944"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:42.950" endtime="20201115 22:11:42.971"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.945" endtime="20201115 22:11:42.973"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.936" endtime="20201115 22:11:42.975"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.384" endtime="20201115 22:11:42.975"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.380" endtime="20201115 22:11:42.976"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.378" endtime="20201115 22:11:42.976"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:28.703" endtime="20201115 22:11:42.977"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="teardown">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:42.987" endtime="20201115 22:11:43.009"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.983" endtime="20201115 22:11:43.010"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.980" endtime="20201115 22:11:43.011"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:11:28.578" endtime="20201115 22:11:43.012" critical="yes"></status>
</test>
<status status="PASS" starttime="20201115 22:11:09.981" endtime="20201115 22:11:43.026"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_ztimer_benchmarks</item>
<item name="RIOT-Board">samr21-xpro</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="PASS" starttime="20201115 22:11:06.187" endtime="20201115 22:11:43.069"></status>
</suite>
<statistics>
<total>
<stat pass="5" fail="0">Critical Tests</stat>
<stat pass="5" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="5" fail="0">APP_tests_ztimer_benchmarks</stat>
<stat pass="5" fail="0">BOARD_samr21-xpro</stat>
<stat pass="5" fail="0">dev</stat>
</tag>
<suite>
<stat pass="5" fail="0" id="s1" name="tests_ztimer_benchmarks">tests_ztimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_ztimer_benchmarks.Timer Version</stat>
<stat pass="4" fail="0" id="s1-s2" name="Timer Overhead">tests_ztimer_benchmarks.Timer Overhead</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
