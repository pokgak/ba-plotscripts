<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201115 22:11:07.894" rpa="false">
<suite id="s1" name="tests_ztimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201115 22:11:11.535" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201115 22:11:11.543" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201115 22:11:12.654" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201115 22:11:11.533" endtime="20201115 22:11:12.655"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201115 22:11:12.660" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201115 22:11:12.658" endtime="20201115 22:11:12.661"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.532" endtime="20201115 22:11:12.662"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:12.667" endtime="20201115 22:11:12.855"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.664" endtime="20201115 22:11:12.855"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:12.868" endtime="20201115 22:11:15.891"></status>
</kw>
<msg timestamp="20201115 22:11:15.892" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:12.866" endtime="20201115 22:11:15.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:15.898" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:15.895" endtime="20201115 22:11:15.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:11:15.905" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:11:15.900" endtime="20201115 22:11:15.905"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:12.864" endtime="20201115 22:11:15.907"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:12.862" endtime="20201115 22:11:15.908"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.860" endtime="20201115 22:11:15.909"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:11:15.917" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:11:15.916" endtime="20201115 22:11:15.918"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.911" endtime="20201115 22:11:15.919"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.860" endtime="20201115 22:11:15.919"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.859" endtime="20201115 22:11:15.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:15.921" endtime="20201115 22:11:15.924"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.857" endtime="20201115 22:11:15.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:15.927" endtime="20201115 22:11:15.930"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:12.856" endtime="20201115 22:11:15.932"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:11.530" endtime="20201115 22:11:15.932"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:15.944" endtime="20201115 22:11:15.963"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.942" endtime="20201115 22:11:15.964"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:15.979" endtime="20201115 22:11:19.002"></status>
</kw>
<msg timestamp="20201115 22:11:19.003" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:15.976" endtime="20201115 22:11:19.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:19.008" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:19.005" endtime="20201115 22:11:19.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:11:19.015" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:11:19.011" endtime="20201115 22:11:19.015"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:15.974" endtime="20201115 22:11:19.017"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:15.971" endtime="20201115 22:11:19.018"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.969" endtime="20201115 22:11:19.019"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:11:19.027" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:11:19.025" endtime="20201115 22:11:19.028"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.021" endtime="20201115 22:11:19.028"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.968" endtime="20201115 22:11:19.028"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.968" endtime="20201115 22:11:19.029"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:19.030" endtime="20201115 22:11:19.034"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.966" endtime="20201115 22:11:19.035"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.965" endtime="20201115 22:11:19.036"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:15.940" endtime="20201115 22:11:19.036"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:19.053" endtime="20201115 22:11:19.068"></status>
</kw>
<msg timestamp="20201115 22:11:19.069" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:19.049" endtime="20201115 22:11:19.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:19.074" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:19.071" endtime="20201115 22:11:19.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:19.077" endtime="20201115 22:11:19.080"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.043" endtime="20201115 22:11:19.081"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.039" endtime="20201115 22:11:19.082"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:19.092" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201115 22:11:19.090" endtime="20201115 22:11:19.093"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:19.095" level="INFO">VALUE: ztimer</msg>
<status status="PASS" starttime="20201115 22:11:19.094" endtime="20201115 22:11:19.096"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.084" endtime="20201115 22:11:19.096"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:11:15.933" endtime="20201115 22:11:19.097" critical="yes"></status>
</test>
<status status="PASS" starttime="20201115 22:11:08.007" endtime="20201115 22:11:19.101"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201115 22:11:19.157" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201115 22:11:19.165" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201115 22:11:20.255" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201115 22:11:19.156" endtime="20201115 22:11:20.255"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201115 22:11:20.258" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201115 22:11:20.256" endtime="20201115 22:11:20.258"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.154" endtime="20201115 22:11:20.259"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:20.261" endtime="20201115 22:11:20.484"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.259" endtime="20201115 22:11:20.484"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:20.497" endtime="20201115 22:11:23.519"></status>
</kw>
<msg timestamp="20201115 22:11:23.520" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:20.495" endtime="20201115 22:11:23.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:23.525" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:23.522" endtime="20201115 22:11:23.526"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:11:23.532" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:11:23.528" endtime="20201115 22:11:23.533"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:20.493" endtime="20201115 22:11:23.534"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:20.491" endtime="20201115 22:11:23.536"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.489" endtime="20201115 22:11:23.536"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:11:23.544" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:11:23.543" endtime="20201115 22:11:23.545"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:23.538" endtime="20201115 22:11:23.546"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.489" endtime="20201115 22:11:23.546"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.488" endtime="20201115 22:11:23.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:23.548" endtime="20201115 22:11:23.551"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.487" endtime="20201115 22:11:23.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:23.554" endtime="20201115 22:11:23.558"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:20.485" endtime="20201115 22:11:23.559"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:19.153" endtime="20201115 22:11:23.559"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO/">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:23.576" endtime="20201115 22:11:23.598"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:23.570" endtime="20201115 22:11:23.600"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:23.628" endtime="20201115 22:11:26.652"></status>
</kw>
<msg timestamp="20201115 22:11:26.653" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:23.625" endtime="20201115 22:11:26.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:26.659" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:26.656" endtime="20201115 22:11:26.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:11:26.666" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:11:26.662" endtime="20201115 22:11:26.667"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:23.619" endtime="20201115 22:11:26.668"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:23.614" endtime="20201115 22:11:26.669"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:23.611" endtime="20201115 22:11:26.670"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:11:26.678" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:11:26.676" endtime="20201115 22:11:26.679"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:26.672" endtime="20201115 22:11:26.679"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:23.609" endtime="20201115 22:11:26.680"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:23.608" endtime="20201115 22:11:26.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:26.682" endtime="20201115 22:11:26.685"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:23.605" endtime="20201115 22:11:26.686"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:23.601" endtime="20201115 22:11:26.687"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:23.567" endtime="20201115 22:11:26.688"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure GPIO Overhead</arg>
</arguments>
<msg timestamp="20201115 22:11:26.694" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:26.712" endtime="20201115 22:11:26.730"></status>
</kw>
<msg timestamp="20201115 22:11:26.731" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:26.708" endtime="20201115 22:11:26.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:26.736" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:26.733" endtime="20201115 22:11:26.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:26.738" endtime="20201115 22:11:26.742"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:26.703" endtime="20201115 22:11:26.743"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:26.699" endtime="20201115 22:11:26.744"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:26.758" endtime="20201115 22:11:27.039"></status>
</kw>
<msg timestamp="20201115 22:11:27.041" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.127756222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.127764431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:26.755" endtime="20201115 22:11:27.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:27.046" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.127756222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.127764431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:27.042" endtime="20201115 22:11:27.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:27.047" endtime="20201115 22:11:27.049"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:26.749" endtime="20201115 22:11:27.050"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:26.746" endtime="20201115 22:11:27.050"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:27.054" level="INFO">${RESULT} = [{'time': 3.127764431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.209000000203304e-06, 'source_diff': 8.209000000203304e-06}, {'time': 3.127775597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:27.051" endtime="20201115 22:11:27.054"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:27.063" level="INFO">${GPIO_OVERHEAD} = {'time': [3.127764431, 3.127775597, 3.127784181, 3.127801444, 3.127813778, 3.12782825, 3.127841431, 3.127856139, 3.127867736, 3.127881236, 3.127894111, 3.127904139, 3.127914347, 3.127922458, 3.1279383...</msg>
<status status="PASS" starttime="20201115 22:11:27.055" endtime="20201115 22:11:27.063"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:27.067" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201115 22:11:27.066" endtime="20201115 22:11:27.067"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:27.069" level="INFO">VALUE: [8.209000000203304e-06, 5.610999999738908e-06, 3.931000000179097e-06, 7.930000000211379e-06, 9.834000000097376e-06, 7.513999999986254e-06, 3.9999999996709334e-06, 9.471999999899339e-06, 2.943999999782676e-06, 9.346999999770844e-06, 7.0279999997424625e-06, 7.513999999986254e-06, 3.235999999962047e-06, 5.611000000182997e-06, 9.903000000033302e-06, 3.389000000186826e-06, 2.693999999969776e-06, 8.167000000280922e-06, 4.652999999965601e-06, 3.6950000001922945e-06, 5.347000000099911e-06, 7.276999999916711e-06, 8.889000000067426e-06, 5.306000000260269e-06, 6.0969999999827e-06]</msg>
<status status="PASS" starttime="20201115 22:11:27.068" endtime="20201115 22:11:27.070"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:27.063" endtime="20201115 22:11:27.070"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:27.073" endtime="20201115 22:11:27.074"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:27.076" endtime="20201115 22:11:27.096"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:27.074" endtime="20201115 22:11:27.096"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:27.071" endtime="20201115 22:11:27.097"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:26.696" endtime="20201115 22:11:27.097"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:26.691" endtime="20201115 22:11:27.097"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:27.102" endtime="20201115 22:11:27.121"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:27.100" endtime="20201115 22:11:27.122"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:27.099" endtime="20201115 22:11:27.122"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:11:23.560" endtime="20201115 22:11:27.123" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:27.131" endtime="20201115 22:11:27.150"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:27.129" endtime="20201115 22:11:27.151"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:27.165" endtime="20201115 22:11:30.187"></status>
</kw>
<msg timestamp="20201115 22:11:30.188" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:27.164" endtime="20201115 22:11:30.189"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:30.194" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:30.190" endtime="20201115 22:11:30.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:11:30.200" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:11:30.196" endtime="20201115 22:11:30.201"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:27.160" endtime="20201115 22:11:30.202"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:27.158" endtime="20201115 22:11:30.204"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:27.156" endtime="20201115 22:11:30.204"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:11:30.212" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:11:30.211" endtime="20201115 22:11:30.213"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:30.206" endtime="20201115 22:11:30.214"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:27.155" endtime="20201115 22:11:30.215"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:27.155" endtime="20201115 22:11:30.215"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:30.217" endtime="20201115 22:11:30.220"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:27.153" endtime="20201115 22:11:30.221"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:27.152" endtime="20201115 22:11:30.222"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:27.128" endtime="20201115 22:11:30.223"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer Now Overhead</arg>
</arguments>
<msg timestamp="20201115 22:11:30.228" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:30.245" endtime="20201115 22:11:30.262"></status>
</kw>
<msg timestamp="20201115 22:11:30.263" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:30.242" endtime="20201115 22:11:30.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:30.268" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:30.265" endtime="20201115 22:11:30.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:30.271" endtime="20201115 22:11:30.274"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:30.236" endtime="20201115 22:11:30.275"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:30.232" endtime="20201115 22:11:30.276"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:30.291" endtime="20201115 22:11:30.591"></status>
</kw>
<msg timestamp="20201115 22:11:30.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.105873097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.105874083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:30.287" endtime="20201115 22:11:30.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:30.602" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.105873097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.105874083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:30.595" endtime="20201115 22:11:30.603"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:30.604" endtime="20201115 22:11:30.605"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:30.282" endtime="20201115 22:11:30.606"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:30.278" endtime="20201115 22:11:30.606"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:30.611" level="INFO">${RESULT} = [{'time': 3.105874083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.859999998695912e-07, 'source_diff': 9.859999998695912e-07}, {'time': 3.105882736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:30.607" endtime="20201115 22:11:30.611"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:30.624" level="INFO">${OVERHEAD} = {'time': [3.105874083, 3.105882736, 3.105892458, 3.105895861, 3.105905, 3.10590975, 3.105912958, 3.105919306, 3.105923056, 3.105928694, 3.105939097, 3.105943556, 3.105951028, 3.105959764, 3.105969625,...</msg>
<status status="PASS" starttime="20201115 22:11:30.612" endtime="20201115 22:11:30.625"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:30.629" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201115 22:11:30.628" endtime="20201115 22:11:30.629"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:30.631" level="INFO">VALUE: [9.859999998695912e-07, 9.579999997733069e-07, 9.58000000217396e-07, 9.859999998695912e-07, 9.579999997733069e-07, 1.0420000000621599e-06, 9.859999998695912e-07, 9.169999999336653e-07, 9.309999997597629e-07, 9.720000000434936e-07, 9.719999995994044e-07, 9.869999999523316e-07, 9.719999995994044e-07, 9.720000000434936e-07, 9.58000000217396e-07, 9.859999998695912e-07, 9.720000000434936e-07, 9.729999996821448e-07, 9.58000000217396e-07, 9.720000000434936e-07, 9.720000000434936e-07, 9.73000000126234e-07, 1.0139999999658755e-06, 1.000000000139778e-06, 9.859999998695912e-07, 9.58000000217396e-07, 9.579999997733069e-07, 9.720000000434936e-07, 9.73000000126234e-07, 9.859999998695912e-07, 9.73000000126234e-07, 9.859999998695912e-07, 9.73000000126234e-07, 9.859999998695912e-07, 9.589999998560472e-07, 9.869999999523316e-07, 9.579999997733069e-07, 9.720000000434936e-07, 9.720000000434936e-07, 9.58000000217396e-07, 9.720000000434936e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.720000000434936e-07, 1.0420000000621599e-06, 9.720000000434936e-07, 9.720000000434936e-07, 9.720000000434936e-07, 9.720000000434936e-07, 9.579999997733069e-07]</msg>
<status status="PASS" starttime="20201115 22:11:30.630" endtime="20201115 22:11:30.632"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:30.625" endtime="20201115 22:11:30.633"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:30.635" endtime="20201115 22:11:30.636"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:30.639" endtime="20201115 22:11:30.658"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:30.637" endtime="20201115 22:11:30.659"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:30.633" endtime="20201115 22:11:30.659"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:30.230" endtime="20201115 22:11:30.659"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:30.226" endtime="20201115 22:11:30.660"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:30.664" endtime="20201115 22:11:30.684"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:30.663" endtime="20201115 22:11:30.685"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:30.661" endtime="20201115 22:11:30.685"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:11:27.125" endtime="20201115 22:11:30.686" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set List">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:30.694" endtime="20201115 22:11:30.714"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:30.692" endtime="20201115 22:11:30.714"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:30.729" endtime="20201115 22:11:33.751"></status>
</kw>
<msg timestamp="20201115 22:11:33.752" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:30.727" endtime="20201115 22:11:33.752"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:33.758" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:33.754" endtime="20201115 22:11:33.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:11:33.765" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:11:33.760" endtime="20201115 22:11:33.766"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:30.723" endtime="20201115 22:11:33.767"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:30.721" endtime="20201115 22:11:33.769"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:30.720" endtime="20201115 22:11:33.769"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:11:33.778" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:11:33.776" endtime="20201115 22:11:33.779"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.771" endtime="20201115 22:11:33.780"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:30.719" endtime="20201115 22:11:33.780"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:30.718" endtime="20201115 22:11:33.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:33.782" endtime="20201115 22:11:33.785"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:30.717" endtime="20201115 22:11:33.787"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:30.715" endtime="20201115 22:11:33.788"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:30.691" endtime="20201115 22:11:33.788"></status>
</kw>
<kw name="${n} IN RANGE [ 25 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:33.797" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:33.818" endtime="20201115 22:11:33.832"></status>
</kw>
<msg timestamp="20201115 22:11:33.833" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:33.814" endtime="20201115 22:11:33.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:33.838" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:33.835" endtime="20201115 22:11:33.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:33.841" endtime="20201115 22:11:33.844"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.808" endtime="20201115 22:11:33.845"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.803" endtime="20201115 22:11:33.846"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:33.861" endtime="20201115 22:11:34.158"></status>
</kw>
<msg timestamp="20201115 22:11:34.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.115531569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.115535611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:33.857" endtime="20201115 22:11:34.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:34.169" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.115531569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.115535611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:34.162" endtime="20201115 22:11:34.170"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:34.171" endtime="20201115 22:11:34.172"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.851" endtime="20201115 22:11:34.173"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.848" endtime="20201115 22:11:34.173"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:34.178" level="INFO">${RESULT} = [{'time': 3.115535611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.0420000000374046e-06, 'source_diff': 4.0420000000374046e-06}, {'time': 3.115584556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:34.174" endtime="20201115 22:11:34.178"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:34.193" level="INFO">${OVERHEAD} = {'time': [3.115535611, 3.115584556, 3.115631528, 3.115679, 3.115727361, 3.115777153, 3.115823125, 3.115872792, 3.115916611, 3.115967819, 3.116013083, 3.116060097, 3.116110431, 3.116157667, 3.116203181...</msg>
<status status="PASS" starttime="20201115 22:11:34.179" endtime="20201115 22:11:34.194"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:34.198" level="INFO">NAME: 00-overhead-1-set</msg>
<status status="PASS" starttime="20201115 22:11:34.197" endtime="20201115 22:11:34.198"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:34.201" level="INFO">VALUE: [4.0420000000374046e-06, 4.000000000115023e-06, 4.056000000307591e-06, 4.028000000211307e-06, 4.027999999767218e-06, 4.01399999994112e-06, 4.027999999767218e-06, 4.055999999863502e-06, 4.054999999780762e-06, 4.041000000398753e-06, 4.040999999954664e-06, 4.040999999954664e-06, 4.0420000000374046e-06, 4.027999999767218e-06, 4.0420000000374046e-06, 4.0420000000374046e-06, 4.041999999593315e-06, 4.028000000211307e-06, 4.027999999767218e-06, 4.0140000003852094e-06, 4.040999999954664e-06, 3.9579999997485515e-06, 4.0420000000374046e-06, 4.027000000128567e-06, 4.028000000211307e-06, 4.0420000000374046e-06, 4.01399999994112e-06, 4.0420000000374046e-06, 4.028000000211307e-06, 4.0420000000374046e-06, 4.027999999767218e-06, 4.027999999767218e-06, 4.028000000211307e-06, 4.000000000115023e-06, 4.0699999996896e-06, 4.041000000398753e-06, 4.056000000307591e-06, 4.0420000000374046e-06, 4.0420000000374046e-06, 4.0420000000374046e-06, 4.054999999780762e-06, 4.0420000000374046e-06, 4.055999999863502e-06, 4.055999999863502e-06, 4.0420000000374046e-06, 4.040999999954664e-06, 4.027999999767218e-06, 4.0690000000509485e-06, 4.040999999954664e-06, 4.070000000133689e-06]</msg>
<status status="PASS" starttime="20201115 22:11:34.199" endtime="20201115 22:11:34.201"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.194" endtime="20201115 22:11:34.202"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:34.204" endtime="20201115 22:11:34.205"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:34.207" endtime="20201115 22:11:34.227"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.206" endtime="20201115 22:11:34.227"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.202" endtime="20201115 22:11:34.228"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.799" endtime="20201115 22:11:34.229"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.795" endtime="20201115 22:11:34.229"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.792" endtime="20201115 22:11:34.229"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:34.231" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:34.241" endtime="20201115 22:11:34.252"></status>
</kw>
<msg timestamp="20201115 22:11:34.252" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:34.239" endtime="20201115 22:11:34.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:34.255" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:34.253" endtime="20201115 22:11:34.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:34.256" endtime="20201115 22:11:34.258"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.236" endtime="20201115 22:11:34.258"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.234" endtime="20201115 22:11:34.259"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:34.265" endtime="20201115 22:11:34.553"></status>
</kw>
<msg timestamp="20201115 22:11:34.556" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023028736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023031569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:34.264" endtime="20201115 22:11:34.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:34.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023028736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023031569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:34.557" endtime="20201115 22:11:34.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:34.566" endtime="20201115 22:11:34.567"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.261" endtime="20201115 22:11:34.568"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.259" endtime="20201115 22:11:34.568"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:34.572" level="INFO">${RESULT} = [{'time': 0.023031569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.833000000000696e-06, 'source_diff': 2.833000000000696e-06}, {'time': 0.023085806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:34.569" endtime="20201115 22:11:34.573"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:34.586" level="INFO">${OVERHEAD} = {'time': [0.023031569, 0.023085806, 0.023137903, 0.023195528, 0.023248167, 0.023304556, 0.023361875, 0.023415944, 0.023473736, 0.023525833, 0.023580139, 0.023631347, 0.023689222, 0.023744181, 0.023795...</msg>
<status status="PASS" starttime="20201115 22:11:34.574" endtime="20201115 22:11:34.587"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:34.591" level="INFO">NAME: 00-overhead-2-set</msg>
<status status="PASS" starttime="20201115 22:11:34.590" endtime="20201115 22:11:34.591"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:34.593" level="INFO">VALUE: [2.833000000000696e-06, 2.77800000000189e-06, 2.860999999999836e-06, 2.8340000000001697e-06, 2.917000000001585e-06, 2.8619999999993095e-06, 2.80600000000103e-06, 2.847000000000266e-06, 2.8469999999967965e-06, 2.847000000000266e-06, 2.80600000000103e-06, 2.847000000000266e-06, 2.847000000000266e-06, 2.8619999999993095e-06, 2.8479999999997396e-06, 2.8479999999997396e-06, 2.847000000000266e-06, 2.847000000000266e-06, 2.848000000003209e-06, 2.847000000000266e-06, 2.8479999999997396e-06, 2.847000000000266e-06, 2.8479999999997396e-06, 2.833000000000696e-06, 2.847000000000266e-06, 2.8479999999997396e-06, 2.8340000000001697e-06, 2.847000000000266e-06, 2.847000000000266e-06, 2.7779999999984206e-06, 2.8200000000006e-06, 2.8329999999972266e-06, 2.8610000000033053e-06, 2.8340000000001697e-06, 2.915999999998642e-06, 2.860999999999836e-06, 2.8479999999997396e-06, 2.833000000000696e-06, 2.847000000000266e-06, 2.915999999998642e-06, 2.8479999999997396e-06, 2.833000000000696e-06, 2.8339999999967003e-06, 2.8329999999972266e-06, 2.833000000000696e-06, 2.847000000000266e-06, 2.889000000002445e-06, 2.833000000000696e-06, 2.8479999999997396e-06, 2.8340000000001697e-06]</msg>
<status status="PASS" starttime="20201115 22:11:34.592" endtime="20201115 22:11:34.594"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.587" endtime="20201115 22:11:34.595"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:34.597" endtime="20201115 22:11:34.599"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:34.601" endtime="20201115 22:11:34.620"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.599" endtime="20201115 22:11:34.621"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.596" endtime="20201115 22:11:34.621"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.232" endtime="20201115 22:11:34.622"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.230" endtime="20201115 22:11:34.622"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.229" endtime="20201115 22:11:34.622"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:34.624" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:34.634" endtime="20201115 22:11:34.645"></status>
</kw>
<msg timestamp="20201115 22:11:34.645" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:34.632" endtime="20201115 22:11:34.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:34.648" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:34.646" endtime="20201115 22:11:34.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:34.649" endtime="20201115 22:11:34.651"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.629" endtime="20201115 22:11:34.651"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.627" endtime="20201115 22:11:34.652"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:34.658" endtime="20201115 22:11:34.945"></status>
</kw>
<msg timestamp="20201115 22:11:34.948" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022757583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02276075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:11:34.657" endtime="20201115 22:11:34.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:34.956" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022757583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02276075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:11:34.949" endtime="20201115 22:11:34.957"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:34.958" endtime="20201115 22:11:34.959"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.654" endtime="20201115 22:11:34.960"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.652" endtime="20201115 22:11:34.960"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:34.965" level="INFO">${RESULT} = [{'time': 0.02276075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1669999999983656e-06, 'source_diff': 3.1669999999983656e-06}, {'time': 0.022819903, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:11:34.961" endtime="20201115 22:11:34.965"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:34.978" level="INFO">${OVERHEAD} = {'time': [0.02276075, 0.022819903, 0.022880319, 0.022942569, 0.023003181, 0.023067389, 0.023129375, 0.023187944, 0.023245264, 0.023308528, 0.0233665, 0.023429528, 0.023491861, 0.023554847, 0.023614792...</msg>
<status status="PASS" starttime="20201115 22:11:34.966" endtime="20201115 22:11:34.979"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:34.983" level="INFO">NAME: 00-overhead-3-set</msg>
<status status="PASS" starttime="20201115 22:11:34.982" endtime="20201115 22:11:34.983"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:34.986" level="INFO">VALUE: [3.1669999999983656e-06, 3.1389999999992257e-06, 3.124999999999656e-06, 3.111000000000086e-06, 3.1119999999995596e-06, 3.153000000002265e-06, 3.02800000000214e-06, 3.137999999999752e-06, 3.05600000000128e-06, 3.1669999999983656e-06, 3.1529999999987957e-06, 3.1250000000031253e-06, 3.124999999999656e-06, 3.124999999999656e-06, 3.0979999999999897e-06, 3.1119999999995596e-06, 3.111000000000086e-06, 3.0829999999974766e-06, 3.137999999999752e-06, 3.1119999999995596e-06, 3.0969999999970466e-06, 3.0969999999970466e-06, 3.111000000000086e-06, 3.0979999999999897e-06, 3.01400000000257e-06, 3.111000000000086e-06, 3.069000000001376e-06, 3.111000000000086e-06, 3.0840000000004197e-06, 3.097000000000516e-06, 3.111000000000086e-06, 3.0840000000004197e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.139000000002695e-06, 3.0840000000004197e-06, 3.111000000000086e-06, 3.083000000000946e-06, 3.111000000000086e-06, 3.1520000000027915e-06, 3.0419999999982406e-06, 3.1119999999995596e-06, 3.1660000000023614e-06, 3.111000000000086e-06, 3.1809999999979355e-06, 3.1109999999966165e-06, 3.097000000000516e-06, 3.083000000000946e-06, 3.0979999999999897e-06]</msg>
<status status="PASS" starttime="20201115 22:11:34.984" endtime="20201115 22:11:34.987"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.979" endtime="20201115 22:11:34.987"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:34.989" endtime="20201115 22:11:34.991"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:34.993" endtime="20201115 22:11:35.012"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.991" endtime="20201115 22:11:35.013"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.988" endtime="20201115 22:11:35.014"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.625" endtime="20201115 22:11:35.014"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.623" endtime="20201115 22:11:35.014"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:34.622" endtime="20201115 22:11:35.014"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:35.017" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:35.026" endtime="20201115 22:11:35.038"></status>
</kw>
<msg timestamp="20201115 22:11:35.039" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:35.024" endtime="20201115 22:11:35.039"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:35.041" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:35.040" endtime="20201115 22:11:35.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:35.042" endtime="20201115 22:11:35.044"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.021" endtime="20201115 22:11:35.044"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.019" endtime="20201115 22:11:35.045"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:35.051" endtime="20201115 22:11:35.339"></status>
</kw>
<msg timestamp="20201115 22:11:35.342" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023312792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023316167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:35.050" endtime="20201115 22:11:35.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:35.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023312792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023316167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:35.343" endtime="20201115 22:11:35.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:35.352" endtime="20201115 22:11:35.353"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.047" endtime="20201115 22:11:35.354"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.045" endtime="20201115 22:11:35.354"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:35.359" level="INFO">${RESULT} = [{'time': 0.023316167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.374999999999906e-06, 'source_diff': 3.374999999999906e-06}, {'time': 0.023381486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:35.355" endtime="20201115 22:11:35.359"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:35.373" level="INFO">${OVERHEAD} = {'time': [0.023316167, 0.023381486, 0.023448014, 0.023516806, 0.023581903, 0.023650903, 0.023716444, 0.023781139, 0.023846542, 0.023914569, 0.023983764, 0.024048611, 0.024116417, 0.024186014, 0.024255...</msg>
<status status="PASS" starttime="20201115 22:11:35.360" endtime="20201115 22:11:35.373"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:35.378" level="INFO">NAME: 00-overhead-4-set</msg>
<status status="PASS" starttime="20201115 22:11:35.377" endtime="20201115 22:11:35.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:35.380" level="INFO">VALUE: [3.374999999999906e-06, 3.347000000000766e-06, 3.374999999999906e-06, 3.431000000001655e-06, 3.361000000000336e-06, 3.3889999999994758e-06, 3.347000000000766e-06, 3.374999999999906e-06, 3.3609999999968665e-06, 3.374999999999906e-06, 3.374999999999906e-06, 3.361000000000336e-06, 3.374999999999906e-06, 3.374999999999906e-06, 3.361000000000336e-06, 3.374999999999906e-06, 3.374999999999906e-06, 3.374999999999906e-06, 3.3480000000002397e-06, 3.3480000000002397e-06, 3.374999999999906e-06, 3.3889999999994758e-06, 3.361000000000336e-06, 3.333000000001196e-06, 3.374999999999906e-06, 3.431000000001655e-06, 3.374999999999906e-06, 3.429999999998712e-06, 3.3609999999968665e-06, 3.361000000000336e-06, 3.361000000000336e-06, 3.361000000000336e-06, 3.361000000000336e-06, 3.3619999999998096e-06, 3.361000000000336e-06, 3.3329999999977267e-06, 3.403000000002515e-06, 3.417000000002085e-06, 3.3189999999981568e-06, 3.361000000000336e-06, 3.3750000000033753e-06, 3.374999999999906e-06, 3.4020000000030415e-06, 3.3340000000006698e-06, 3.374999999999906e-06, 3.374999999999906e-06, 3.374999999999906e-06, 3.361000000000336e-06, 3.374999999999906e-06, 3.374999999999906e-06]</msg>
<status status="PASS" starttime="20201115 22:11:35.379" endtime="20201115 22:11:35.381"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.374" endtime="20201115 22:11:35.381"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:35.383" endtime="20201115 22:11:35.385"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:35.387" endtime="20201115 22:11:35.406"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.385" endtime="20201115 22:11:35.407"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.382" endtime="20201115 22:11:35.408"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.017" endtime="20201115 22:11:35.408"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.016" endtime="20201115 22:11:35.408"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.015" endtime="20201115 22:11:35.408"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:35.411" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:35.420" endtime="20201115 22:11:35.431"></status>
</kw>
<msg timestamp="20201115 22:11:35.432" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:35.418" endtime="20201115 22:11:35.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:35.434" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:35.433" endtime="20201115 22:11:35.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:35.435" endtime="20201115 22:11:35.437"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.415" endtime="20201115 22:11:35.438"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.413" endtime="20201115 22:11:35.438"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:35.445" endtime="20201115 22:11:35.730"></status>
</kw>
<msg timestamp="20201115 22:11:35.734" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02269225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022695875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:11:35.443" endtime="20201115 22:11:35.734"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:35.742" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02269225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022695875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:11:35.735" endtime="20201115 22:11:35.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:35.744" endtime="20201115 22:11:35.746"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.440" endtime="20201115 22:11:35.746"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.439" endtime="20201115 22:11:35.747"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:35.751" level="INFO">${RESULT} = [{'time': 0.022695875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.625000000000156e-06, 'source_diff': 3.625000000000156e-06}, {'time': 0.022775083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:35.747" endtime="20201115 22:11:35.751"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:35.766" level="INFO">${OVERHEAD} = {'time': [0.022695875, 0.022775083, 0.022849986, 0.022923958, 0.023001014, 0.023073, 0.023150222, 0.023226083, 0.023303069, 0.023379097, 0.023453069, 0.023525056, 0.023598292, 0.023672722, 0.023748167...</msg>
<status status="PASS" starttime="20201115 22:11:35.752" endtime="20201115 22:11:35.766"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:35.771" level="INFO">NAME: 00-overhead-5-set</msg>
<status status="PASS" starttime="20201115 22:11:35.770" endtime="20201115 22:11:35.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:35.773" level="INFO">VALUE: [3.625000000000156e-06, 3.6390000000031952e-06, 3.625000000000156e-06, 3.6389999999997258e-06, 3.625000000000156e-06, 3.625000000000156e-06, 3.625000000000156e-06, 3.6390000000031952e-06, 3.625000000000156e-06, 3.625000000000156e-06, 3.638000000000252e-06, 3.6389999999997258e-06, 3.625000000000156e-06, 3.625000000000156e-06, 3.681000000001905e-06, 3.6529999999992957e-06, 3.6949999999980054e-06, 3.611000000000586e-06, 3.625000000000156e-06, 3.625000000000156e-06, 3.6809999999984355e-06, 3.6389999999997258e-06, 3.6389999999997258e-06, 3.6389999999997258e-06, 3.625000000000156e-06, 3.6949999999980054e-06, 3.6389999999997258e-06, 3.625000000000156e-06, 3.638000000000252e-06, 3.5969999999975466e-06, 3.5419999999987406e-06, 3.6249999999966864e-06, 3.6389999999997258e-06, 3.695000000001475e-06, 3.625000000000156e-06, 3.681000000001905e-06, 3.625000000000156e-06, 3.625000000000156e-06, 3.6109999999971165e-06, 3.611000000000586e-06, 3.5419999999987406e-06, 3.625000000000156e-06, 3.708000000001571e-06, 3.5840000000009198e-06, 3.6529999999992957e-06, 3.638000000000252e-06, 3.6389999999997258e-06, 3.625000000000156e-06, 3.625000000000156e-06, 3.6669999999988656e-06]</msg>
<status status="PASS" starttime="20201115 22:11:35.772" endtime="20201115 22:11:35.773"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.767" endtime="20201115 22:11:35.774"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:35.776" endtime="20201115 22:11:35.778"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:35.780" endtime="20201115 22:11:35.800"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.778" endtime="20201115 22:11:35.800"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.775" endtime="20201115 22:11:35.801"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.411" endtime="20201115 22:11:35.801"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.409" endtime="20201115 22:11:35.801"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.409" endtime="20201115 22:11:35.802"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:35.804" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:35.814" endtime="20201115 22:11:35.828"></status>
</kw>
<msg timestamp="20201115 22:11:35.829" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:35.812" endtime="20201115 22:11:35.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:35.831" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:35.830" endtime="20201115 22:11:35.831"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:35.832" endtime="20201115 22:11:35.834"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.810" endtime="20201115 22:11:35.834"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.807" endtime="20201115 22:11:35.835"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:35.842" endtime="20201115 22:11:36.128"></status>
</kw>
<msg timestamp="20201115 22:11:36.132" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023923556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023927472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:35.840" endtime="20201115 22:11:36.132"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:36.140" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023923556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023927472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:36.133" endtime="20201115 22:11:36.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:36.141" endtime="20201115 22:11:36.143"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.837" endtime="20201115 22:11:36.143"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.835" endtime="20201115 22:11:36.144"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:36.148" level="INFO">${RESULT} = [{'time': 0.023927472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9160000000031114e-06, 'source_diff': 3.9160000000031114e-06}, {'time': 0.024009681, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:36.145" endtime="20201115 22:11:36.148"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:36.162" level="INFO">${OVERHEAD} = {'time': [0.023927472, 0.024009681, 0.024092653, 0.024179472, 0.024261542, 0.024343778, 0.024423458, 0.024507444, 0.024594028, 0.024678639, 0.024761597, 0.024846458, 0.024928208, 0.025014972, 0.025095...</msg>
<status status="PASS" starttime="20201115 22:11:36.149" endtime="20201115 22:11:36.162"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:36.167" level="INFO">NAME: 00-overhead-6-set</msg>
<status status="PASS" starttime="20201115 22:11:36.166" endtime="20201115 22:11:36.167"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:36.169" level="INFO">VALUE: [3.9160000000031114e-06, 3.888999999999976e-06, 3.888999999999976e-06, 3.902999999999546e-06, 3.902999999999546e-06, 3.902999999999546e-06, 3.888999999999976e-06, 3.902000000000072e-06, 3.861000000000836e-06, 3.888999999999976e-06, 3.875000000000406e-06, 3.902000000000072e-06, 3.888999999999976e-06, 3.902999999999546e-06, 3.902999999999546e-06, 3.888999999999976e-06, 3.902000000000072e-06, 3.902999999999546e-06, 3.902000000000072e-06, 3.888999999999976e-06, 3.931000000002155e-06, 3.888999999999976e-06, 3.915999999999642e-06, 3.917000000002585e-06, 3.916999999999116e-06, 3.915999999999642e-06, 3.888999999999976e-06, 3.8749999999969365e-06, 3.875000000000406e-06, 3.832999999998227e-06, 3.875000000000406e-06, 3.875000000000406e-06, 3.902999999999546e-06, 3.888999999999976e-06, 3.9309999999986855e-06, 3.902999999999546e-06, 3.888999999999976e-06, 3.916999999999116e-06, 3.903000000003015e-06, 3.875000000000406e-06, 3.875000000000406e-06, 3.958999999997825e-06, 3.943999999998782e-06, 3.902000000000072e-06, 3.902999999999546e-06, 3.8749999999969365e-06, 3.888999999999976e-06, 3.888999999999976e-06, 3.888999999999976e-06, 3.888999999999976e-06]</msg>
<status status="PASS" starttime="20201115 22:11:36.168" endtime="20201115 22:11:36.170"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.163" endtime="20201115 22:11:36.170"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:36.172" endtime="20201115 22:11:36.174"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:36.176" endtime="20201115 22:11:36.195"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.174" endtime="20201115 22:11:36.196"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.171" endtime="20201115 22:11:36.197"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.805" endtime="20201115 22:11:36.197"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.803" endtime="20201115 22:11:36.197"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:35.802" endtime="20201115 22:11:36.197"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:36.200" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:36.209" endtime="20201115 22:11:36.222"></status>
</kw>
<msg timestamp="20201115 22:11:36.222" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:36.207" endtime="20201115 22:11:36.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:36.225" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:36.223" endtime="20201115 22:11:36.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:36.226" endtime="20201115 22:11:36.228"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.204" endtime="20201115 22:11:36.228"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.202" endtime="20201115 22:11:36.229"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:36.236" endtime="20201115 22:11:36.522"></status>
</kw>
<msg timestamp="20201115 22:11:36.526" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022818958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022823097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:36.234" endtime="20201115 22:11:36.526"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:36.534" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022818958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022823097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:36.527" endtime="20201115 22:11:36.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:36.535" endtime="20201115 22:11:36.537"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.231" endtime="20201115 22:11:36.538"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.230" endtime="20201115 22:11:36.538"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:36.542" level="INFO">${RESULT} = [{'time': 0.022823097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.139000000000226e-06, 'source_diff': 4.139000000000226e-06}, {'time': 0.022910389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:36.539" endtime="20201115 22:11:36.542"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:36.556" level="INFO">${OVERHEAD} = {'time': [0.022823097, 0.022910389, 0.023005097, 0.023094278, 0.023187042, 0.023278417, 0.023368861, 0.023462583, 0.023556806, 0.0236505, 0.023738736, 0.023827431, 0.023918528, 0.024006972, 0.02409979...</msg>
<status status="PASS" starttime="20201115 22:11:36.543" endtime="20201115 22:11:36.556"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:36.560" level="INFO">NAME: 00-overhead-7-set</msg>
<status status="PASS" starttime="20201115 22:11:36.559" endtime="20201115 22:11:36.561"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:36.563" level="INFO">VALUE: [4.139000000000226e-06, 4.166999999999366e-06, 4.152999999999796e-06, 4.139000000000226e-06, 4.167000000002835e-06, 4.125000000000656e-06, 4.167000000002835e-06, 4.179999999999462e-06, 4.152999999999796e-06, 4.139000000000226e-06, 4.139000000000226e-06, 4.139000000000226e-06, 4.139000000000226e-06, 4.083000000001946e-06, 4.138999999996756e-06, 4.139000000000226e-06, 4.166999999999366e-06, 4.166999999999366e-06, 4.223000000001115e-06, 4.165999999999892e-06, 4.139000000000226e-06, 4.1949999999985055e-06, 4.139000000000226e-06, 4.139000000000226e-06, 4.152999999999796e-06, 4.152000000000322e-06, 4.082999999998477e-06, 4.152999999999796e-06, 4.165999999999892e-06, 4.166999999999366e-06, 4.153000000003265e-06, 4.152000000000322e-06, 4.166999999999366e-06, 4.179999999999462e-06, 4.139000000000226e-06, 4.152000000000322e-06, 4.179999999999462e-06, 4.165999999999892e-06, 4.152000000000322e-06, 4.152999999999796e-06, 4.139000000000226e-06, 4.111000000001086e-06, 4.237000000000685e-06, 4.139000000000226e-06, 4.165999999999892e-06, 4.152999999999796e-06, 4.152999999999796e-06, 4.152999999999796e-06, 4.166999999999366e-06, 4.152999999999796e-06]</msg>
<status status="PASS" starttime="20201115 22:11:36.562" endtime="20201115 22:11:36.563"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.557" endtime="20201115 22:11:36.564"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:36.566" endtime="20201115 22:11:36.568"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:36.570" endtime="20201115 22:11:36.589"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.568" endtime="20201115 22:11:36.590"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.565" endtime="20201115 22:11:36.590"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.200" endtime="20201115 22:11:36.591"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.199" endtime="20201115 22:11:36.591"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.198" endtime="20201115 22:11:36.591"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:36.593" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:36.603" endtime="20201115 22:11:36.618"></status>
</kw>
<msg timestamp="20201115 22:11:36.619" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:36.601" endtime="20201115 22:11:36.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:36.621" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:36.620" endtime="20201115 22:11:36.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:36.622" endtime="20201115 22:11:36.624"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.599" endtime="20201115 22:11:36.625"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.596" endtime="20201115 22:11:36.625"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:36.632" endtime="20201115 22:11:36.920"></status>
</kw>
<msg timestamp="20201115 22:11:36.923" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023390694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023395111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:36.630" endtime="20201115 22:11:36.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:36.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023390694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023395111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:36.924" endtime="20201115 22:11:36.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:36.933" endtime="20201115 22:11:36.935"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.628" endtime="20201115 22:11:36.935"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.626" endtime="20201115 22:11:36.936"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:36.940" level="INFO">${RESULT} = [{'time': 0.023395111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.416999999999616e-06, 'source_diff': 4.416999999999616e-06}, {'time': 0.023491556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:36.936" endtime="20201115 22:11:36.940"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:36.953" level="INFO">${OVERHEAD} = {'time': [0.023395111, 0.023491556, 0.023590083, 0.023688125, 0.023786944, 0.023883111, 0.023983778, 0.024081417, 0.024180722, 0.024280264, 0.024383153, 0.024479292, 0.024579014, 0.024675236, 0.024774...</msg>
<status status="PASS" starttime="20201115 22:11:36.941" endtime="20201115 22:11:36.954"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:36.958" level="INFO">NAME: 00-overhead-8-set</msg>
<status status="PASS" starttime="20201115 22:11:36.957" endtime="20201115 22:11:36.958"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:36.961" level="INFO">VALUE: [4.416999999999616e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.458000000002321e-06, 4.416999999999616e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.416000000000142e-06, 4.416999999999616e-06, 4.416999999999616e-06, 4.416999999999616e-06, 4.361000000001336e-06, 4.429999999999712e-06, 4.4449999999987555e-06, 4.443999999999282e-06, 4.416000000000142e-06, 4.416000000000142e-06, 4.457999999998852e-06, 4.403000000000046e-06, 4.416000000000142e-06, 4.416000000000142e-06, 4.416000000000142e-06, 4.402000000000572e-06, 4.431000000002655e-06, 4.416999999999616e-06, 4.416000000000142e-06, 4.417000000003085e-06, 4.401999999997103e-06, 4.416000000000142e-06, 4.457999999998852e-06, 4.416999999999616e-06, 4.431000000002655e-06, 4.416000000000142e-06, 4.389000000000476e-06, 4.416000000000142e-06, 4.430999999999186e-06, 4.402000000000572e-06, 4.444000000002751e-06, 4.416999999999616e-06, 4.431000000002655e-06, 4.486000000001461e-06, 4.430999999999186e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.443999999999282e-06, 4.416999999999616e-06, 4.402000000000572e-06, 4.416999999999616e-06, 4.429999999999712e-06]</msg>
<status status="PASS" starttime="20201115 22:11:36.959" endtime="20201115 22:11:36.961"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.954" endtime="20201115 22:11:36.962"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:36.964" endtime="20201115 22:11:36.965"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:36.968" endtime="20201115 22:11:36.987"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.966" endtime="20201115 22:11:36.988"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.962" endtime="20201115 22:11:36.989"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.594" endtime="20201115 22:11:36.989"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.592" endtime="20201115 22:11:36.989"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.591" endtime="20201115 22:11:36.989"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:36.992" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:37.001" endtime="20201115 22:11:37.017"></status>
</kw>
<msg timestamp="20201115 22:11:37.017" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:36.999" endtime="20201115 22:11:37.018"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:37.020" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:37.018" endtime="20201115 22:11:37.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:37.021" endtime="20201115 22:11:37.023"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.996" endtime="20201115 22:11:37.023"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.994" endtime="20201115 22:11:37.024"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:37.030" endtime="20201115 22:11:37.316"></status>
</kw>
<msg timestamp="20201115 22:11:37.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022824319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022829014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:37.029" endtime="20201115 22:11:37.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:37.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022824319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022829014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:37.321" endtime="20201115 22:11:37.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:37.329" endtime="20201115 22:11:37.331"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.026" endtime="20201115 22:11:37.331"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.024" endtime="20201115 22:11:37.332"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:37.336" level="INFO">${RESULT} = [{'time': 0.022829014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.695000000002475e-06, 'source_diff': 4.695000000002475e-06}, {'time': 0.022939306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:37.332" endtime="20201115 22:11:37.336"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:37.351" level="INFO">${OVERHEAD} = {'time': [0.022829014, 0.022939306, 0.023047931, 0.023153153, 0.023258194, 0.023364736, 0.023471028, 0.023581375, 0.023691889, 0.023796681, 0.023902917, 0.024010875, 0.024118069, 0.024224292, 0.024328...</msg>
<status status="PASS" starttime="20201115 22:11:37.337" endtime="20201115 22:11:37.351"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:37.356" level="INFO">NAME: 00-overhead-9-set</msg>
<status status="PASS" starttime="20201115 22:11:37.355" endtime="20201115 22:11:37.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:37.358" level="INFO">VALUE: [4.695000000002475e-06, 4.6949999999990055e-06, 4.6949999999990055e-06, 4.666999999999866e-06, 4.666000000000392e-06, 4.679999999999962e-06, 4.681000000002905e-06, 4.681000000002905e-06, 4.680999999999436e-06, 4.653000000000296e-06, 4.680999999999436e-06, 4.680999999999436e-06, 4.693999999999532e-06, 4.695000000002475e-06, 4.666999999999866e-06, 4.680999999999436e-06, 4.680999999999436e-06, 4.722000000002141e-06, 4.666999999999866e-06, 4.652000000000822e-06, 4.652000000000822e-06, 4.722999999998145e-06, 4.666999999999866e-06, 4.665999999996923e-06, 4.6949999999990055e-06, 4.679999999999962e-06, 4.694000000003001e-06, 4.735999999998242e-06, 4.735999999998242e-06, 4.693999999999532e-06, 4.680999999999436e-06, 4.693999999999532e-06, 4.7089999999985754e-06, 4.666999999999866e-06, 4.695000000002475e-06, 4.693999999999532e-06, 4.666000000000392e-06, 4.666999999999866e-06, 4.679999999999962e-06, 4.653000000000296e-06, 4.693999999999532e-06, 4.762999999997908e-06, 4.666000000000392e-06, 4.737000000001185e-06, 4.679999999999962e-06, 4.694000000003001e-06, 4.679999999999962e-06, 4.625000000001156e-06, 4.709000000002045e-06, 4.681000000002905e-06]</msg>
<status status="PASS" starttime="20201115 22:11:37.357" endtime="20201115 22:11:37.359"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.352" endtime="20201115 22:11:37.360"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:37.362" endtime="20201115 22:11:37.363"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:37.366" endtime="20201115 22:11:37.385"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.364" endtime="20201115 22:11:37.386"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.360" endtime="20201115 22:11:37.386"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.992" endtime="20201115 22:11:37.387"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.990" endtime="20201115 22:11:37.387"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:36.990" endtime="20201115 22:11:37.387"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:37.389" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:37.398" endtime="20201115 22:11:37.414"></status>
</kw>
<msg timestamp="20201115 22:11:37.414" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:37.397" endtime="20201115 22:11:37.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:37.417" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:37.415" endtime="20201115 22:11:37.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:37.418" endtime="20201115 22:11:37.420"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.394" endtime="20201115 22:11:37.420"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.392" endtime="20201115 22:11:37.421"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:37.427" endtime="20201115 22:11:37.714"></status>
</kw>
<msg timestamp="20201115 22:11:37.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022843958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022848903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:37.426" endtime="20201115 22:11:37.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:37.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022843958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022848903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:37.718" endtime="20201115 22:11:37.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:37.727" endtime="20201115 22:11:37.728"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.423" endtime="20201115 22:11:37.729"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.421" endtime="20201115 22:11:37.729"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:37.734" level="INFO">${RESULT} = [{'time': 0.022848903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.9449999999992555e-06, 'source_diff': 4.9449999999992555e-06}, {'time': 0.022966431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:37.730" endtime="20201115 22:11:37.734"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:37.747" level="INFO">${OVERHEAD} = {'time': [0.022848903, 0.022966431, 0.023084028, 0.023202097, 0.023319944, 0.023434667, 0.023554639, 0.023670736, 0.023785431, 0.023903694, 0.024019833, 0.024136472, 0.024250958, 0.024370708, 0.024490...</msg>
<status status="PASS" starttime="20201115 22:11:37.735" endtime="20201115 22:11:37.748"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:37.752" level="INFO">NAME: 00-overhead-10-set</msg>
<status status="PASS" starttime="20201115 22:11:37.751" endtime="20201115 22:11:37.752"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:37.755" level="INFO">VALUE: [4.9449999999992555e-06, 4.9449999999992555e-06, 4.9449999999992555e-06, 4.943999999999782e-06, 4.957999999999352e-06, 4.9449999999992555e-06, 4.930999999999686e-06, 4.930000000000212e-06, 4.917000000000116e-06, 4.971999999998922e-06, 4.930000000000212e-06, 4.943999999999782e-06, 4.930000000000212e-06, 4.943999999999782e-06, 4.943999999999782e-06, 4.889000000000976e-06, 4.889000000000976e-06, 4.9449999999992555e-06, 4.903000000000546e-06, 4.930000000000212e-06, 4.973000000001865e-06, 4.9449999999992555e-06, 4.930000000000212e-06, 4.943999999999782e-06, 4.930000000000212e-06, 4.930000000000212e-06, 4.930000000000212e-06, 4.943999999999782e-06, 4.917000000000116e-06, 4.930000000000212e-06, 5.014000000001101e-06, 4.930999999999686e-06, 4.930999999999686e-06, 4.930999999999686e-06, 4.943999999999782e-06, 4.985999999998492e-06, 4.917000000000116e-06, 4.9449999999992555e-06, 4.930999999999686e-06, 4.9589999999988255e-06, 4.959000000002295e-06, 4.930999999999686e-06, 4.930999999999686e-06, 4.957999999999352e-06, 4.943999999999782e-06, 4.943999999999782e-06, 4.943999999999782e-06, 4.930999999999686e-06, 4.930999999999686e-06, 4.957999999999352e-06]</msg>
<status status="PASS" starttime="20201115 22:11:37.753" endtime="20201115 22:11:37.756"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.748" endtime="20201115 22:11:37.756"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:37.758" endtime="20201115 22:11:37.760"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:37.762" endtime="20201115 22:11:37.781"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.760" endtime="20201115 22:11:37.782"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.757" endtime="20201115 22:11:37.783"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.390" endtime="20201115 22:11:37.783"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.388" endtime="20201115 22:11:37.783"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.387" endtime="20201115 22:11:37.783"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:37.786" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:37.795" endtime="20201115 22:11:37.811"></status>
</kw>
<msg timestamp="20201115 22:11:37.811" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:37.793" endtime="20201115 22:11:37.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:37.814" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:37.812" endtime="20201115 22:11:37.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:37.815" endtime="20201115 22:11:37.817"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.790" endtime="20201115 22:11:37.817"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.788" endtime="20201115 22:11:37.818"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:37.824" endtime="20201115 22:11:38.112"></status>
</kw>
<msg timestamp="20201115 22:11:38.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023270931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023276139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:37.823" endtime="20201115 22:11:38.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:38.123" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023270931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023276139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:38.116" endtime="20201115 22:11:38.124"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:38.124" endtime="20201115 22:11:38.126"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.820" endtime="20201115 22:11:38.127"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.818" endtime="20201115 22:11:38.127"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:38.131" level="INFO">${RESULT} = [{'time': 0.023276139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.207999999999602e-06, 'source_diff': 5.207999999999602e-06}, {'time': 0.023398403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:38.128" endtime="20201115 22:11:38.132"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:38.148" level="INFO">${OVERHEAD} = {'time': [0.023276139, 0.023398403, 0.023523736, 0.023646278, 0.023771583, 0.023900028, 0.024024111, 0.024146292, 0.024268778, 0.024393167, 0.024518944, 0.024647806, 0.024773292, 0.024895472, 0.025021...</msg>
<status status="PASS" starttime="20201115 22:11:38.133" endtime="20201115 22:11:38.148"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:38.152" level="INFO">NAME: 00-overhead-11-set</msg>
<status status="PASS" starttime="20201115 22:11:38.151" endtime="20201115 22:11:38.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:38.155" level="INFO">VALUE: [5.207999999999602e-06, 5.209000000002545e-06, 5.194000000000032e-06, 5.2499999999983116e-06, 5.207999999999602e-06, 5.2089999999990755e-06, 5.194000000000032e-06, 5.2089999999990755e-06, 5.195000000002975e-06, 5.1949999999995056e-06, 5.221999999999172e-06, 5.237000000001685e-06, 5.180999999999936e-06, 5.165999999997423e-06, 5.207999999999602e-06, 5.194000000000032e-06, 5.2089999999990755e-06, 5.2089999999990755e-06, 5.207999999999602e-06, 5.194000000000032e-06, 5.235999999998742e-06, 5.208000000003071e-06, 5.236000000002211e-06, 5.207999999999602e-06, 5.207999999999602e-06, 5.195000000002975e-06, 5.207999999999602e-06, 5.207999999999602e-06, 5.221999999999172e-06, 5.194000000000032e-06, 5.180999999999936e-06, 5.194000000000032e-06, 5.209000000002545e-06, 5.194000000000032e-06, 5.207999999999602e-06, 5.194000000000032e-06, 5.194000000000032e-06, 5.194000000000032e-06, 5.222999999998645e-06, 5.209000000002545e-06, 5.236000000002211e-06, 5.207999999999602e-06, 5.209000000002545e-06, 5.207999999999602e-06, 5.207999999999602e-06, 5.235999999998742e-06, 5.180999999999936e-06, 5.222000000002641e-06, 5.207999999999602e-06, 5.194000000000032e-06]</msg>
<status status="PASS" starttime="20201115 22:11:38.153" endtime="20201115 22:11:38.155"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.148" endtime="20201115 22:11:38.156"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:38.158" endtime="20201115 22:11:38.159"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:38.162" endtime="20201115 22:11:38.181"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.160" endtime="20201115 22:11:38.182"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.156" endtime="20201115 22:11:38.182"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.786" endtime="20201115 22:11:38.182"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.784" endtime="20201115 22:11:38.183"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:37.784" endtime="20201115 22:11:38.183"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:38.185" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:38.194" endtime="20201115 22:11:38.212"></status>
</kw>
<msg timestamp="20201115 22:11:38.213" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:38.193" endtime="20201115 22:11:38.213"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:38.215" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:38.214" endtime="20201115 22:11:38.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:38.217" endtime="20201115 22:11:38.218"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.190" endtime="20201115 22:11:38.219"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.188" endtime="20201115 22:11:38.219"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:38.226" endtime="20201115 22:11:38.514"></status>
</kw>
<msg timestamp="20201115 22:11:38.517" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022945833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022951306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:38.224" endtime="20201115 22:11:38.517"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:38.525" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022945833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022951306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:38.518" endtime="20201115 22:11:38.526"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:38.527" endtime="20201115 22:11:38.529"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.222" endtime="20201115 22:11:38.529"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.220" endtime="20201115 22:11:38.530"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:38.534" level="INFO">${RESULT} = [{'time': 0.022951306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.473000000002365e-06, 'source_diff': 5.473000000002365e-06}, {'time': 0.023087681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:38.530" endtime="20201115 22:11:38.534"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:38.548" level="INFO">${OVERHEAD} = {'time': [0.022951306, 0.023087681, 0.023221292, 0.023356306, 0.023488903, 0.023626778, 0.023762431, 0.023898583, 0.024030458, 0.024163083, 0.024299542, 0.024432194, 0.024563097, 0.024700764, 0.024833...</msg>
<status status="PASS" starttime="20201115 22:11:38.535" endtime="20201115 22:11:38.548"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:38.552" level="INFO">NAME: 00-overhead-12-set</msg>
<status status="PASS" starttime="20201115 22:11:38.551" endtime="20201115 22:11:38.553"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:38.555" level="INFO">VALUE: [5.473000000002365e-06, 5.472999999998895e-06, 5.486000000002461e-06, 5.4589999999993255e-06, 5.485999999998992e-06, 5.471999999999422e-06, 5.444999999999756e-06, 5.471999999999422e-06, 5.471999999999422e-06, 5.457999999999852e-06, 5.4589999999993255e-06, 5.471999999999422e-06, 5.444000000000282e-06, 5.485999999998992e-06, 5.485999999998992e-06, 5.472000000002891e-06, 5.457999999999852e-06, 5.471999999999422e-06, 5.444000000000282e-06, 5.472999999998895e-06, 5.416000000001142e-06, 5.444000000000282e-06, 5.444999999999756e-06, 5.457999999999852e-06, 5.486000000002461e-06, 5.431000000000186e-06, 5.457999999999852e-06, 5.485999999998992e-06, 5.471999999999422e-06, 5.472000000002891e-06, 5.444000000000282e-06, 5.472999999998895e-06, 5.4589999999993255e-06, 5.471999999999422e-06, 5.499999999998562e-06, 5.471999999999422e-06, 5.4439999999968125e-06, 5.485999999998992e-06, 5.430000000000712e-06, 5.444000000000282e-06, 5.472999999998895e-06, 5.444999999999756e-06, 5.485999999998992e-06, 5.5139999999981315e-06, 5.4589999999993255e-06, 5.514000000001601e-06, 5.486000000002461e-06, 5.485999999998992e-06, 5.5139999999981315e-06, 5.457999999999852e-06]</msg>
<status status="PASS" starttime="20201115 22:11:38.553" endtime="20201115 22:11:38.555"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.549" endtime="20201115 22:11:38.556"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:38.558" endtime="20201115 22:11:38.559"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:38.562" endtime="20201115 22:11:38.581"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.560" endtime="20201115 22:11:38.582"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.556" endtime="20201115 22:11:38.582"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.186" endtime="20201115 22:11:38.583"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.184" endtime="20201115 22:11:38.583"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.183" endtime="20201115 22:11:38.583"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:38.585" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:38.594" endtime="20201115 22:11:38.610"></status>
</kw>
<msg timestamp="20201115 22:11:38.610" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:38.593" endtime="20201115 22:11:38.610"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:38.613" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:38.611" endtime="20201115 22:11:38.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:38.614" endtime="20201115 22:11:38.616"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.590" endtime="20201115 22:11:38.616"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.588" endtime="20201115 22:11:38.617"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:38.624" endtime="20201115 22:11:38.911"></status>
</kw>
<msg timestamp="20201115 22:11:38.914" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022889833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022895556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:38.622" endtime="20201115 22:11:38.914"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:38.922" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022889833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022895556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:38.915" endtime="20201115 22:11:38.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:38.923" endtime="20201115 22:11:38.925"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.619" endtime="20201115 22:11:38.926"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.617" endtime="20201115 22:11:38.926"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:38.930" level="INFO">${RESULT} = [{'time': 0.022895556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.723000000002615e-06, 'source_diff': 5.723000000002615e-06}, {'time': 0.023037681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:38.927" endtime="20201115 22:11:38.931"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:38.946" level="INFO">${OVERHEAD} = {'time': [0.022895556, 0.023037681, 0.023182389, 0.023325458, 0.023466375, 0.023607708, 0.023750486, 0.023894472, 0.024041986, 0.024183556, 0.024330903, 0.024475569, 0.024620056, 0.024764319, 0.024908...</msg>
<status status="PASS" starttime="20201115 22:11:38.931" endtime="20201115 22:11:38.946"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:38.950" level="INFO">NAME: 00-overhead-13-set</msg>
<status status="PASS" starttime="20201115 22:11:38.949" endtime="20201115 22:11:38.951"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:38.953" level="INFO">VALUE: [5.723000000002615e-06, 5.695000000000006e-06, 5.708000000000102e-06, 5.708000000000102e-06, 5.721999999999672e-06, 5.694000000000532e-06, 5.750000000002281e-06, 5.721999999999672e-06, 5.708000000000102e-06, 5.7089999999995755e-06, 5.721999999999672e-06, 5.721999999999672e-06, 5.723000000002615e-06, 5.776999999998478e-06, 5.7229999999991454e-06, 5.764000000001851e-06, 5.735999999999242e-06, 5.735999999999242e-06, 5.778000000001421e-06, 5.721999999999672e-06, 5.653000000001296e-06, 5.735999999999242e-06, 5.778000000001421e-06, 5.7089999999995755e-06, 5.653000000001296e-06, 5.7089999999995755e-06, 5.750000000002281e-06, 5.721999999999672e-06, 5.735999999999242e-06, 5.721999999999672e-06, 5.6939999999970625e-06, 5.708000000000102e-06, 5.694000000000532e-06, 5.721999999999672e-06, 5.735999999999242e-06, 5.723000000002615e-06, 5.721999999999672e-06, 5.735999999999242e-06, 5.735999999999242e-06, 5.735999999999242e-06, 5.667000000000866e-06, 5.695000000000006e-06, 5.7639999999983815e-06, 5.7639999999983815e-06, 5.736000000002711e-06, 5.708000000000102e-06, 5.721999999999672e-06, 5.708000000000102e-06, 5.721999999999672e-06, 5.721999999999672e-06]</msg>
<status status="PASS" starttime="20201115 22:11:38.952" endtime="20201115 22:11:38.953"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.947" endtime="20201115 22:11:38.954"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:38.956" endtime="20201115 22:11:38.958"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:38.960" endtime="20201115 22:11:38.979"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.958" endtime="20201115 22:11:38.980"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.955" endtime="20201115 22:11:38.980"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.586" endtime="20201115 22:11:38.981"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.584" endtime="20201115 22:11:38.981"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.583" endtime="20201115 22:11:38.981"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:38.983" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:38.993" endtime="20201115 22:11:39.011"></status>
</kw>
<msg timestamp="20201115 22:11:39.012" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:38.991" endtime="20201115 22:11:39.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:39.015" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:39.013" endtime="20201115 22:11:39.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:39.016" endtime="20201115 22:11:39.018"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.988" endtime="20201115 22:11:39.018"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.986" endtime="20201115 22:11:39.019"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:39.025" endtime="20201115 22:11:39.312"></status>
</kw>
<msg timestamp="20201115 22:11:39.315" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022835667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022841639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:39.024" endtime="20201115 22:11:39.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:39.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022835667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022841639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:39.317" endtime="20201115 22:11:39.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:39.325" endtime="20201115 22:11:39.327"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.021" endtime="20201115 22:11:39.327"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.019" endtime="20201115 22:11:39.328"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:39.332" level="INFO">${RESULT} = [{'time': 0.022841639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.022991972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:39.328" endtime="20201115 22:11:39.332"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:39.346" level="INFO">${OVERHEAD} = {'time': [0.022841639, 0.022991972, 0.023145736, 0.023301764, 0.023457431, 0.023610444, 0.023765375, 0.023919056, 0.024073681, 0.024230694, 0.024382458, 0.024536361, 0.024687222, 0.024838958, 0.024992...</msg>
<status status="PASS" starttime="20201115 22:11:39.333" endtime="20201115 22:11:39.346"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:39.350" level="INFO">NAME: 00-overhead-14-set</msg>
<status status="PASS" starttime="20201115 22:11:39.349" endtime="20201115 22:11:39.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:39.353" level="INFO">VALUE: [5.971999999999922e-06, 5.985999999999492e-06, 5.985999999999492e-06, 5.916999999997646e-06, 6.000000000002531e-06, 5.971999999999922e-06, 6.055999999997341e-06, 5.987000000002435e-06, 5.986999999998965e-06, 5.999999999999062e-06, 5.985999999999492e-06, 5.985999999999492e-06, 6.028000000001671e-06, 5.986000000002961e-06, 5.971999999999922e-06, 6.014000000002101e-06, 5.986000000002961e-06, 5.999999999999062e-06, 6.042000000001241e-06, 6.0139999999986316e-06, 5.999999999999062e-06, 5.999999999999062e-06, 5.985999999999492e-06, 5.985999999999492e-06, 5.959000000003295e-06, 5.999999999999062e-06, 5.986999999998965e-06, 5.986999999998965e-06, 6.000000000002531e-06, 5.999999999999062e-06, 6.042000000001241e-06, 6.0139999999986316e-06, 5.999999999999062e-06, 5.971999999999922e-06, 5.971999999999922e-06, 5.931000000000686e-06, 6.000000000002531e-06, 5.985999999999492e-06, 5.971999999999922e-06, 6.000000000002531e-06, 5.999999999999062e-06, 6.0139999999986316e-06, 6.012999999999158e-06, 5.985999999999492e-06, 5.9729999999993955e-06, 6.000000000002531e-06, 5.985999999999492e-06, 5.971999999999922e-06, 5.985999999999492e-06, 5.971999999999922e-06]</msg>
<status status="PASS" starttime="20201115 22:11:39.351" endtime="20201115 22:11:39.353"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.347" endtime="20201115 22:11:39.354"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:39.356" endtime="20201115 22:11:39.357"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:39.360" endtime="20201115 22:11:39.379"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.358" endtime="20201115 22:11:39.380"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.354" endtime="20201115 22:11:39.380"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.984" endtime="20201115 22:11:39.380"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.982" endtime="20201115 22:11:39.381"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:38.981" endtime="20201115 22:11:39.381"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:39.383" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:39.393" endtime="20201115 22:11:39.412"></status>
</kw>
<msg timestamp="20201115 22:11:39.412" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:39.391" endtime="20201115 22:11:39.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:39.415" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:39.413" endtime="20201115 22:11:39.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:39.416" endtime="20201115 22:11:39.418"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.389" endtime="20201115 22:11:39.418"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.386" endtime="20201115 22:11:39.419"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:39.425" endtime="20201115 22:11:39.713"></status>
</kw>
<msg timestamp="20201115 22:11:39.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023451625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023457875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:39.424" endtime="20201115 22:11:39.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:39.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023451625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023457875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:39.718" endtime="20201115 22:11:39.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:39.726" endtime="20201115 22:11:39.728"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.421" endtime="20201115 22:11:39.728"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.419" endtime="20201115 22:11:39.729"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:39.733" level="INFO">${RESULT} = [{'time': 0.023457875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.249999999999312e-06, 'source_diff': 6.249999999999312e-06}, {'time': 0.023621069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:39.729" endtime="20201115 22:11:39.733"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:39.747" level="INFO">${OVERHEAD} = {'time': [0.023457875, 0.023621069, 0.023788139, 0.023951639, 0.024114875, 0.024280458, 0.024441569, 0.024606472, 0.024768944, 0.024929528, 0.025092486, 0.025258583, 0.025423208, 0.025586139, 0.025748...</msg>
<status status="PASS" starttime="20201115 22:11:39.734" endtime="20201115 22:11:39.747"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:39.751" level="INFO">NAME: 00-overhead-15-set</msg>
<status status="PASS" starttime="20201115 22:11:39.750" endtime="20201115 22:11:39.752"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:39.754" level="INFO">VALUE: [6.249999999999312e-06, 6.263000000002877e-06, 6.249999999999312e-06, 6.278000000001921e-06, 6.249999999999312e-06, 6.264000000002351e-06, 6.262999999999408e-06, 6.235999999999742e-06, 6.180000000001462e-06, 6.2639999999988816e-06, 6.278000000001921e-06, 6.250000000002781e-06, 6.2639999999988816e-06, 6.235999999999742e-06, 6.235999999999742e-06, 6.291999999998021e-06, 6.249999999999312e-06, 6.249999999999312e-06, 6.250000000002781e-06, 6.235999999999742e-06, 6.249999999999312e-06, 6.2090000000000756e-06, 6.249999999999312e-06, 6.264000000002351e-06, 6.2639999999988816e-06, 6.249999999999312e-06, 6.249999999999312e-06, 6.236999999999215e-06, 6.249999999999312e-06, 6.250000000002781e-06, 6.1939999999975626e-06, 6.249999999999312e-06, 6.249999999999312e-06, 6.2639999999988816e-06, 6.235999999999742e-06, 6.236000000003211e-06, 6.264000000002351e-06, 6.262999999999408e-06, 6.250000000002781e-06, 6.2639999999988816e-06, 6.235999999999742e-06, 6.236000000003211e-06, 6.235999999999742e-06, 6.235999999999742e-06, 6.2639999999988816e-06, 6.278000000001921e-06, 6.235999999999742e-06, 6.222000000000172e-06, 6.2640000000058205e-06, 6.249999999999312e-06]</msg>
<status status="PASS" starttime="20201115 22:11:39.752" endtime="20201115 22:11:39.754"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.748" endtime="20201115 22:11:39.755"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:39.757" endtime="20201115 22:11:39.759"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:39.761" endtime="20201115 22:11:39.781"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.759" endtime="20201115 22:11:39.781"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.756" endtime="20201115 22:11:39.782"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.384" endtime="20201115 22:11:39.782"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.382" endtime="20201115 22:11:39.782"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.381" endtime="20201115 22:11:39.783"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:39.785" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:39.794" endtime="20201115 22:11:39.814"></status>
</kw>
<msg timestamp="20201115 22:11:39.815" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:39.793" endtime="20201115 22:11:39.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:39.817" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:39.816" endtime="20201115 22:11:39.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:39.818" endtime="20201115 22:11:39.820"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.790" endtime="20201115 22:11:39.820"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.788" endtime="20201115 22:11:39.821"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:39.828" endtime="20201115 22:11:40.115"></status>
</kw>
<msg timestamp="20201115 22:11:40.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023156083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023162597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:39.826" endtime="20201115 22:11:40.119"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:40.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023156083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023162597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:40.120" endtime="20201115 22:11:40.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:40.128" endtime="20201115 22:11:40.130"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.823" endtime="20201115 22:11:40.130"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.821" endtime="20201115 22:11:40.131"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:40.135" level="INFO">${RESULT} = [{'time': 0.023162597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.513999999999132e-06, 'source_diff': 6.513999999999132e-06}, {'time': 0.023335389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:40.131" endtime="20201115 22:11:40.135"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:40.149" level="INFO">${OVERHEAD} = {'time': [0.023162597, 0.023335389, 0.023509556, 0.023685917, 0.023859347, 0.024036361, 0.024210111, 0.024384014, 0.024555389, 0.024728806, 0.024903667, 0.025075444, 0.025249194, 0.025423167, 0.025595...</msg>
<status status="PASS" starttime="20201115 22:11:40.136" endtime="20201115 22:11:40.149"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:40.153" level="INFO">NAME: 00-overhead-16-set</msg>
<status status="PASS" starttime="20201115 22:11:40.152" endtime="20201115 22:11:40.154"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:40.156" level="INFO">VALUE: [6.513999999999132e-06, 6.500000000003031e-06, 6.528000000002171e-06, 6.513999999999132e-06, 6.513999999999132e-06, 6.458000000000852e-06, 6.5279999999987015e-06, 6.513999999999132e-06, 6.5279999999987015e-06, 6.513999999999132e-06, 6.499999999999562e-06, 6.512999999999658e-06, 6.499999999999562e-06, 6.485999999999992e-06, 6.5279999999987015e-06, 6.513999999999132e-06, 6.513999999999132e-06, 6.513999999999132e-06, 6.512999999999658e-06, 6.500000000003031e-06, 6.499999999999562e-06, 6.5279999999987015e-06, 6.513999999999132e-06, 6.513999999999132e-06, 6.499999999999562e-06, 6.444000000001282e-06, 6.514000000002601e-06, 6.499999999999562e-06, 6.5279999999987015e-06, 6.500000000003031e-06, 6.485999999999992e-06, 6.499999999999562e-06, 6.513999999999132e-06, 6.513000000003127e-06, 6.499999999999562e-06, 6.514000000002601e-06, 6.513999999999132e-06, 6.499999999999562e-06, 6.486999999999465e-06, 6.526999999999228e-06, 6.542000000001741e-06, 6.513999999999132e-06, 6.499999999999562e-06, 6.527000000002697e-06, 6.513999999999132e-06, 6.528000000002171e-06, 6.445000000000756e-06, 6.499999999999562e-06, 6.554999999998368e-06, 6.472000000000422e-06]</msg>
<status status="PASS" starttime="20201115 22:11:40.154" endtime="20201115 22:11:40.157"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.150" endtime="20201115 22:11:40.157"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:40.160" endtime="20201115 22:11:40.161"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:40.163" endtime="20201115 22:11:40.183"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.162" endtime="20201115 22:11:40.183"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.158" endtime="20201115 22:11:40.184"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.786" endtime="20201115 22:11:40.184"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.784" endtime="20201115 22:11:40.184"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:39.783" endtime="20201115 22:11:40.184"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:40.187" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:40.196" endtime="20201115 22:11:40.215"></status>
</kw>
<msg timestamp="20201115 22:11:40.216" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:40.194" endtime="20201115 22:11:40.216"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:40.218" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:40.217" endtime="20201115 22:11:40.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:40.219" endtime="20201115 22:11:40.221"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.192" endtime="20201115 22:11:40.222"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.189" endtime="20201115 22:11:40.222"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:40.229" endtime="20201115 22:11:40.516"></status>
</kw>
<msg timestamp="20201115 22:11:40.519" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022936597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022943375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:40.227" endtime="20201115 22:11:40.519"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:40.527" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022936597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022943375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:40.520" endtime="20201115 22:11:40.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:40.529" endtime="20201115 22:11:40.530"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.224" endtime="20201115 22:11:40.531"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.223" endtime="20201115 22:11:40.531"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:40.536" level="INFO">${RESULT} = [{'time': 0.022943375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.7779999999989515e-06, 'source_diff': 6.7779999999989515e-06}, {'time': 0.023131194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:40.532" endtime="20201115 22:11:40.536"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:40.551" level="INFO">${OVERHEAD} = {'time': [0.022943375, 0.023131194, 0.023317042, 0.023505111, 0.023689792, 0.023873972, 0.024061958, 0.024246694, 0.024429111, 0.024609917, 0.024794097, 0.024978528, 0.025160417, 0.025345847, 0.025532...</msg>
<status status="PASS" starttime="20201115 22:11:40.537" endtime="20201115 22:11:40.551"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:40.556" level="INFO">NAME: 00-overhead-17-set</msg>
<status status="PASS" starttime="20201115 22:11:40.555" endtime="20201115 22:11:40.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:40.559" level="INFO">VALUE: [6.7779999999989515e-06, 6.776999999999478e-06, 6.763999999999382e-06, 6.749999999999812e-06, 6.792000000001991e-06, 6.722000000000672e-06, 6.764000000002851e-06, 6.749999999999812e-06, 6.804999999998618e-06, 6.7779999999989515e-06, 6.778000000002421e-06, 6.763999999999382e-06, 6.792000000001991e-06, 6.778000000002421e-06, 6.7779999999989515e-06, 6.792000000001991e-06, 6.763999999999382e-06, 6.8480000000002705e-06, 6.749999999999812e-06, 6.763999999999382e-06, 6.778000000002421e-06, 6.791000000002517e-06, 6.7919999999985214e-06, 6.777000000002947e-06, 6.763999999999382e-06, 6.777000000002947e-06, 6.7779999999989515e-06, 6.7779999999989515e-06, 6.7779999999989515e-06, 6.764000000002851e-06, 6.763999999999382e-06, 6.762999999999908e-06, 6.764000000002851e-06, 6.778000000002421e-06, 6.792000000001991e-06, 6.7779999999989515e-06, 6.7779999999989515e-06, 6.749999999999812e-06, 6.776999999999478e-06, 6.7779999999989515e-06, 6.763999999999382e-06, 6.763999999999382e-06, 6.762999999999908e-06, 6.749999999999812e-06, 6.749999999999812e-06, 6.763999999999382e-06, 6.7780000000058904e-06, 6.763999999999382e-06, 6.8200000000046e-06, 6.7779999999989515e-06]</msg>
<status status="PASS" starttime="20201115 22:11:40.557" endtime="20201115 22:11:40.559"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.552" endtime="20201115 22:11:40.560"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:40.562" endtime="20201115 22:11:40.563"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:40.566" endtime="20201115 22:11:40.585"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.564" endtime="20201115 22:11:40.586"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.560" endtime="20201115 22:11:40.586"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.187" endtime="20201115 22:11:40.587"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.186" endtime="20201115 22:11:40.587"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.185" endtime="20201115 22:11:40.587"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:40.589" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:40.598" endtime="20201115 22:11:40.617"></status>
</kw>
<msg timestamp="20201115 22:11:40.618" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:40.597" endtime="20201115 22:11:40.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:40.620" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:40.619" endtime="20201115 22:11:40.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:40.621" endtime="20201115 22:11:40.623"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.594" endtime="20201115 22:11:40.623"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.592" endtime="20201115 22:11:40.624"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:40.631" endtime="20201115 22:11:40.918"></status>
</kw>
<msg timestamp="20201115 22:11:40.921" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022858694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022865736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:40.629" endtime="20201115 22:11:40.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:40.929" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022858694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022865736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:40.922" endtime="20201115 22:11:40.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:40.930" endtime="20201115 22:11:40.932"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.626" endtime="20201115 22:11:40.933"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.624" endtime="20201115 22:11:40.933"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:40.937" level="INFO">${RESULT} = [{'time': 0.022865736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.042000000002241e-06, 'source_diff': 7.042000000002241e-06}, {'time': 0.023061875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:40.934" endtime="20201115 22:11:40.938"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:40.957" level="INFO">${OVERHEAD} = {'time': [0.022865736, 0.023061875, 0.023259931, 0.023456583, 0.023651597, 0.023844889, 0.024043194, 0.024241792, 0.024434694, 0.024626319, 0.024818972, 0.025017264, 0.025210806, 0.025408222, 0.025602...</msg>
<status status="PASS" starttime="20201115 22:11:40.943" endtime="20201115 22:11:40.957"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:40.961" level="INFO">NAME: 00-overhead-18-set</msg>
<status status="PASS" starttime="20201115 22:11:40.960" endtime="20201115 22:11:40.962"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:40.964" level="INFO">VALUE: [7.042000000002241e-06, 7.0279999999992016e-06, 7.028000000002671e-06, 7.054999999998868e-06, 7.013999999999632e-06, 7.013999999999632e-06, 7.026999999999728e-06, 7.028000000002671e-06, 7.040999999999298e-06, 6.972000000000922e-06, 7.041000000002767e-06, 7.0279999999992016e-06, 7.0419999999987715e-06, 7.041000000002767e-06, 7.111000000000617e-06, 7.0279999999992016e-06, 7.054999999998868e-06, 7.042000000002241e-06, 7.0419999999987715e-06, 7.040999999999298e-06, 7.026999999999728e-06, 7.013999999999632e-06, 7.084000000000951e-06, 7.083000000001477e-06, 7.0279999999992016e-06, 7.056000000001811e-06, 7.070000000001381e-06, 7.013999999999632e-06, 7.042000000002241e-06, 7.0279999999992016e-06, 7.054999999998868e-06, 7.070000000001381e-06, 7.0419999999987715e-06, 7.0419999999987715e-06, 7.026999999999728e-06, 7.070000000001381e-06, 7.0279999999992016e-06, 7.028000000002671e-06, 7.042000000002241e-06, 7.013999999999632e-06, 7.0419999999987715e-06, 7.0279999999992016e-06, 7.084000000000951e-06, 7.026999999999728e-06, 7.04200000000571e-06, 7.0419999999987715e-06, 7.0279999999992016e-06, 7.0829999999980076e-06, 7.040999999999298e-06, 7.0280000000061404e-06]</msg>
<status status="PASS" starttime="20201115 22:11:40.962" endtime="20201115 22:11:40.964"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.957" endtime="20201115 22:11:40.965"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:40.967" endtime="20201115 22:11:40.968"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:40.971" endtime="20201115 22:11:40.990"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.969" endtime="20201115 22:11:40.991"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.965" endtime="20201115 22:11:40.991"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.590" endtime="20201115 22:11:40.991"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.588" endtime="20201115 22:11:40.992"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.587" endtime="20201115 22:11:40.992"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:40.994" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:41.003" endtime="20201115 22:11:41.023"></status>
</kw>
<msg timestamp="20201115 22:11:41.023" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:41.002" endtime="20201115 22:11:41.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:41.026" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:41.024" endtime="20201115 22:11:41.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:41.027" endtime="20201115 22:11:41.028"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.999" endtime="20201115 22:11:41.029"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.997" endtime="20201115 22:11:41.029"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:41.036" endtime="20201115 22:11:41.323"></status>
</kw>
<msg timestamp="20201115 22:11:41.326" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023041556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023048847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:41.034" endtime="20201115 22:11:41.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:41.334" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023041556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023048847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:41.327" endtime="20201115 22:11:41.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:41.336" endtime="20201115 22:11:41.338"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.032" endtime="20201115 22:11:41.338"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.030" endtime="20201115 22:11:41.339"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:41.343" level="INFO">${RESULT} = [{'time': 0.023048847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.290999999999548e-06, 'source_diff': 7.290999999999548e-06}, {'time': 0.02325175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:11:41.339" endtime="20201115 22:11:41.343"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:41.357" level="INFO">${OVERHEAD} = {'time': [0.023048847, 0.02325175, 0.023455264, 0.023660556, 0.023863958, 0.024070417, 0.024273333, 0.0244825, 0.024690153, 0.024899806, 0.025106764, 0.025311875, 0.025520542, 0.025725056, 0.025929625...</msg>
<status status="PASS" starttime="20201115 22:11:41.344" endtime="20201115 22:11:41.357"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:41.361" level="INFO">NAME: 00-overhead-19-set</msg>
<status status="PASS" starttime="20201115 22:11:41.360" endtime="20201115 22:11:41.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:41.364" level="INFO">VALUE: [7.290999999999548e-06, 7.292000000002491e-06, 7.347000000001297e-06, 7.263999999999882e-06, 7.305000000002587e-06, 7.2919999999990215e-06, 7.290999999999548e-06, 7.292000000002491e-06, 7.2779999999994516e-06, 7.2919999999990215e-06, 7.250000000000312e-06, 7.306000000002061e-06, 7.348000000000771e-06, 7.209000000001076e-06, 7.292000000002491e-06, 7.361000000000867e-06, 7.305999999998591e-06, 7.263999999999882e-06, 7.2919999999990215e-06, 7.2919999999990215e-06, 7.2919999999990215e-06, 7.2919999999990215e-06, 7.319000000002157e-06, 7.292000000002491e-06, 7.305999999998591e-06, 7.2779999999994516e-06, 7.2779999999994516e-06, 7.348000000000771e-06, 7.305999999998591e-06, 7.318999999998688e-06, 7.320000000001631e-06, 7.278000000002921e-06, 7.305999999998591e-06, 7.320000000001631e-06, 7.250000000000312e-06, 7.319999999998161e-06, 7.278000000002921e-06, 7.2919999999990215e-06, 7.318999999998688e-06, 7.292000000002491e-06, 7.290999999999548e-06, 7.222000000001172e-06, 7.305999999998591e-06, 7.304999999999118e-06, 7.236000000000742e-06, 7.305999999998591e-06, 7.2919999999990215e-06, 7.2919999999990215e-06, 7.305999999998591e-06, 7.236000000000742e-06]</msg>
<status status="PASS" starttime="20201115 22:11:41.362" endtime="20201115 22:11:41.364"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.358" endtime="20201115 22:11:41.365"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:41.367" endtime="20201115 22:11:41.368"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:41.371" endtime="20201115 22:11:41.390"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.369" endtime="20201115 22:11:41.391"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.365" endtime="20201115 22:11:41.391"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.995" endtime="20201115 22:11:41.391"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.993" endtime="20201115 22:11:41.392"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:40.992" endtime="20201115 22:11:41.392"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:41.394" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:41.403" endtime="20201115 22:11:41.425"></status>
</kw>
<msg timestamp="20201115 22:11:41.425" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:41.402" endtime="20201115 22:11:41.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:41.428" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:41.426" endtime="20201115 22:11:41.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:41.429" endtime="20201115 22:11:41.430"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.399" endtime="20201115 22:11:41.431"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.397" endtime="20201115 22:11:41.431"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:41.439" endtime="20201115 22:11:41.725"></status>
</kw>
<msg timestamp="20201115 22:11:41.728" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023585111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023592694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:41.436" endtime="20201115 22:11:41.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:41.736" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023585111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023592694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:41.729" endtime="20201115 22:11:41.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:41.737" endtime="20201115 22:11:41.739"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.434" endtime="20201115 22:11:41.740"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.432" endtime="20201115 22:11:41.740"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:41.744" level="INFO">${RESULT} = [{'time': 0.023592694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.583000000001977e-06, 'source_diff': 7.583000000001977e-06}, {'time': 0.023812111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:41.741" endtime="20201115 22:11:41.745"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:41.758" level="INFO">${OVERHEAD} = {'time': [0.023592694, 0.023812111, 0.024026625, 0.024240347, 0.024459625, 0.024678431, 0.024897875, 0.025117083, 0.025331028, 0.025544833, 0.025765958, 0.025983, 0.026201333, 0.026419694, 0.026635986...</msg>
<status status="PASS" starttime="20201115 22:11:41.745" endtime="20201115 22:11:41.759"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:41.763" level="INFO">NAME: 00-overhead-20-set</msg>
<status status="PASS" starttime="20201115 22:11:41.762" endtime="20201115 22:11:41.763"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:41.766" level="INFO">VALUE: [7.583000000001977e-06, 7.554999999999368e-06, 7.639000000000257e-06, 7.554999999999368e-06, 7.555999999998841e-06, 7.556000000002311e-06, 7.5419999999992715e-06, 7.568999999998938e-06, 7.555999999998841e-06, 7.540999999999798e-06, 7.582999999998508e-06, 7.5419999999992715e-06, 7.568999999998938e-06, 7.597000000001547e-06, 7.554999999999368e-06, 7.555000000002837e-06, 7.569999999998411e-06, 7.556000000002311e-06, 7.569999999998411e-06, 7.542000000002741e-06, 7.500000000000562e-06, 7.5419999999992715e-06, 7.554999999999368e-06, 7.554999999999368e-06, 7.569999999998411e-06, 7.4870000000004655e-06, 7.5419999999992715e-06, 7.570000000001881e-06, 7.542000000002741e-06, 7.569000000002407e-06, 7.570000000001881e-06, 7.570000000001881e-06, 7.527999999999702e-06, 7.540999999999798e-06, 7.554999999999368e-06, 7.513000000000658e-06, 7.582999999998508e-06, 7.527999999999702e-06, 7.540999999999798e-06, 7.55600000000578e-06, 7.568999999998938e-06, 7.555999999998841e-06, 7.569999999998411e-06, 7.582999999998508e-06, 7.582999999998508e-06, 7.61200000000406e-06, 7.555999999998841e-06, 7.527999999999702e-06, 7.568999999998938e-06, 7.582999999998508e-06]</msg>
<status status="PASS" starttime="20201115 22:11:41.764" endtime="20201115 22:11:41.766"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.759" endtime="20201115 22:11:41.767"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:41.769" endtime="20201115 22:11:41.770"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:41.772" endtime="20201115 22:11:41.792"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.771" endtime="20201115 22:11:41.793"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.767" endtime="20201115 22:11:41.793"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.395" endtime="20201115 22:11:41.793"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.393" endtime="20201115 22:11:41.794"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.392" endtime="20201115 22:11:41.794"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:41.796" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:41.805" endtime="20201115 22:11:41.825"></status>
</kw>
<msg timestamp="20201115 22:11:41.826" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:41.804" endtime="20201115 22:11:41.826"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:41.829" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:41.827" endtime="20201115 22:11:41.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:41.830" endtime="20201115 22:11:41.832"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.801" endtime="20201115 22:11:41.832"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.799" endtime="20201115 22:11:41.833"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:41.839" endtime="20201115 22:11:42.126"></status>
</kw>
<msg timestamp="20201115 22:11:42.129" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022952083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022959903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:41.838" endtime="20201115 22:11:42.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:42.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022952083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022959903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:42.130" endtime="20201115 22:11:42.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:42.139" endtime="20201115 22:11:42.141"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.835" endtime="20201115 22:11:42.141"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.833" endtime="20201115 22:11:42.142"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:42.146" level="INFO">${RESULT} = [{'time': 0.022959903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.819999999998661e-06, 'source_diff': 7.819999999998661e-06}, {'time': 0.023192389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:42.142" endtime="20201115 22:11:42.146"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:42.161" level="INFO">${OVERHEAD} = {'time': [0.022959903, 0.023192389, 0.023424833, 0.023653278, 0.023879125, 0.024105611, 0.024336389, 0.024568167, 0.024798917, 0.025024514, 0.025253694, 0.025480222, 0.025708139, 0.025938264, 0.026167...</msg>
<status status="PASS" starttime="20201115 22:11:42.147" endtime="20201115 22:11:42.161"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:42.166" level="INFO">NAME: 00-overhead-21-set</msg>
<status status="PASS" starttime="20201115 22:11:42.165" endtime="20201115 22:11:42.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:42.168" level="INFO">VALUE: [7.819999999998661e-06, 7.82000000000213e-06, 7.818999999999188e-06, 7.819999999998661e-06, 7.833000000002227e-06, 7.832999999998758e-06, 7.846999999998328e-06, 7.847999999997801e-06, 7.8340000000017e-06, 7.833000000002227e-06, 7.832999999998758e-06, 7.804999999999618e-06, 7.82000000000213e-06, 7.819999999998661e-06, 7.818999999999188e-06, 7.819999999998661e-06, 7.818999999999188e-06, 7.791999999999522e-06, 7.777999999999952e-06, 7.805999999999091e-06, 7.819999999998661e-06, 7.82000000000213e-06, 7.805999999999091e-06, 7.82000000000213e-06, 7.819999999998661e-06, 7.818999999999188e-06, 7.846999999998328e-06, 7.8340000000017e-06, 7.82000000000213e-06, 7.832999999998758e-06, 7.832999999998758e-06, 7.818999999999188e-06, 7.833999999998231e-06, 7.833999999998231e-06, 7.847999999997801e-06, 7.832999999998758e-06, 7.82000000000213e-06, 7.847999999997801e-06, 7.818999999999188e-06, 7.818999999999188e-06, 7.819999999998661e-06, 7.805999999999091e-06, 7.819999999998661e-06, 7.832999999998758e-06, 7.79200000000646e-06, 7.832999999998758e-06, 7.833999999998231e-06, 7.818999999999188e-06, 7.83400000000517e-06, 7.818999999999188e-06]</msg>
<status status="PASS" starttime="20201115 22:11:42.167" endtime="20201115 22:11:42.169"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.162" endtime="20201115 22:11:42.169"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:42.172" endtime="20201115 22:11:42.173"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:42.175" endtime="20201115 22:11:42.195"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.174" endtime="20201115 22:11:42.195"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.170" endtime="20201115 22:11:42.196"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.797" endtime="20201115 22:11:42.196"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.795" endtime="20201115 22:11:42.196"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:41.794" endtime="20201115 22:11:42.197"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:42.199" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:42.209" endtime="20201115 22:11:42.231"></status>
</kw>
<msg timestamp="20201115 22:11:42.232" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:42.207" endtime="20201115 22:11:42.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:42.234" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:42.233" endtime="20201115 22:11:42.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:42.235" endtime="20201115 22:11:42.237"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.204" endtime="20201115 22:11:42.238"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.202" endtime="20201115 22:11:42.238"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:42.245" endtime="20201115 22:11:42.531"></status>
</kw>
<msg timestamp="20201115 22:11:42.535" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023400139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023408208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:42.243" endtime="20201115 22:11:42.535"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:42.543" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023400139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023408208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:42.536" endtime="20201115 22:11:42.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:42.544" endtime="20201115 22:11:42.546"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.241" endtime="20201115 22:11:42.546"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.239" endtime="20201115 22:11:42.547"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:42.551" level="INFO">${RESULT} = [{'time': 0.023408208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.068999999999438e-06, 'source_diff': 8.068999999999438e-06}, {'time': 0.023645389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:42.548" endtime="20201115 22:11:42.551"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:42.565" level="INFO">${OVERHEAD} = {'time': [0.023408208, 0.023645389, 0.023882583, 0.024124528, 0.024364972, 0.024607083, 0.024845139, 0.025088514, 0.025329194, 0.0255725, 0.025815319, 0.026056153, 0.026297778, 0.026535639, 0.02677986...</msg>
<status status="PASS" starttime="20201115 22:11:42.552" endtime="20201115 22:11:42.565"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:42.569" level="INFO">NAME: 00-overhead-22-set</msg>
<status status="PASS" starttime="20201115 22:11:42.568" endtime="20201115 22:11:42.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:42.572" level="INFO">VALUE: [8.068999999999438e-06, 8.069999999998911e-06, 8.082999999999008e-06, 8.069999999998911e-06, 8.082999999999008e-06, 8.082999999999008e-06, 8.069999999998911e-06, 8.055999999999341e-06, 8.082999999999008e-06, 8.083000000002477e-06, 8.068999999999438e-06, 8.152999999996857e-06, 8.08400000000195e-06, 8.110999999998147e-06, 8.082999999999008e-06, 8.166999999999897e-06, 8.151999999997384e-06, 8.096999999998578e-06, 8.083999999998481e-06, 8.055999999999341e-06, 8.097999999998051e-06, 8.111000000001617e-06, 8.068999999999438e-06, 8.083000000002477e-06, 8.068999999999438e-06, 8.028000000000202e-06, 8.083999999998481e-06, 8.111000000001617e-06, 8.082999999999008e-06, 8.068999999999438e-06, 8.110999999998147e-06, 8.055999999999341e-06, 8.068999999999438e-06, 8.041000000000298e-06, 8.068999999999438e-06, 8.082999999999008e-06, 8.096999999998578e-06, 8.09800000000499e-06, 8.069000000006377e-06, 8.111000000005086e-06, 8.096999999998578e-06, 8.082999999999008e-06, 8.082999999999008e-06, 8.082999999999008e-06, 8.082999999999008e-06, 8.082999999999008e-06, 8.069999999998911e-06, 8.083999999998481e-06, 8.096999999998578e-06, 8.082999999999008e-06]</msg>
<status status="PASS" starttime="20201115 22:11:42.571" endtime="20201115 22:11:42.572"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.566" endtime="20201115 22:11:42.573"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:42.575" endtime="20201115 22:11:42.577"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:42.579" endtime="20201115 22:11:42.599"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.577" endtime="20201115 22:11:42.599"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.574" endtime="20201115 22:11:42.600"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.199" endtime="20201115 22:11:42.600"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.198" endtime="20201115 22:11:42.600"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.197" endtime="20201115 22:11:42.601"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:42.603" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:42.612" endtime="20201115 22:11:42.636"></status>
</kw>
<msg timestamp="20201115 22:11:42.636" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:42.610" endtime="20201115 22:11:42.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:42.639" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:42.637" endtime="20201115 22:11:42.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:42.640" endtime="20201115 22:11:42.642"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.608" endtime="20201115 22:11:42.642"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.606" endtime="20201115 22:11:42.643"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:42.649" endtime="20201115 22:11:42.936"></status>
</kw>
<msg timestamp="20201115 22:11:42.939" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023862056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023870417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:42.648" endtime="20201115 22:11:42.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:42.947" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023862056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023870417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:42.940" endtime="20201115 22:11:42.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:42.949" endtime="20201115 22:11:42.950"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.645" endtime="20201115 22:11:42.951"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.643" endtime="20201115 22:11:42.951"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:42.956" level="INFO">${RESULT} = [{'time': 0.023870417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.361000000001867e-06, 'source_diff': 8.361000000001867e-06}, {'time': 0.024122222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:42.952" endtime="20201115 22:11:42.956"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:42.969" level="INFO">${OVERHEAD} = {'time': [0.023870417, 0.024122222, 0.024378625, 0.024633472, 0.024890056, 0.025146222, 0.025397861, 0.025647139, 0.025902597, 0.026158056, 0.026412278, 0.026668889, 0.026923111, 0.02717575, 0.0274263...</msg>
<status status="PASS" starttime="20201115 22:11:42.957" endtime="20201115 22:11:42.970"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:42.974" level="INFO">NAME: 00-overhead-23-set</msg>
<status status="PASS" starttime="20201115 22:11:42.973" endtime="20201115 22:11:42.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:42.977" level="INFO">VALUE: [8.361000000001867e-06, 8.332999999999258e-06, 8.403000000000577e-06, 8.346999999998828e-06, 8.3340000000022e-06, 8.318999999999688e-06, 8.332999999999258e-06, 8.346999999998828e-06, 8.346999999998828e-06, 8.347999999998301e-06, 8.375000000001437e-06, 8.333000000002727e-06, 8.346999999998828e-06, 8.402999999997107e-06, 8.332999999999258e-06, 8.346999999998828e-06, 8.347000000002297e-06, 8.347999999998301e-06, 8.347000000002297e-06, 8.361000000001867e-06, 8.34800000000177e-06, 8.347999999998301e-06, 8.333999999998731e-06, 8.318999999999688e-06, 8.347000000002297e-06, 8.347000000002297e-06, 8.346999999998828e-06, 8.333000000002727e-06, 8.332999999999258e-06, 8.346999999998828e-06, 8.332999999999258e-06, 8.360999999998397e-06, 8.346999999998828e-06, 8.346999999998828e-06, 8.346999999998828e-06, 8.319999999999161e-06, 8.332999999999258e-06, 8.318999999999688e-06, 8.346999999998828e-06, 8.34800000000524e-06, 8.346999999998828e-06, 8.332999999999258e-06, 8.347000000005766e-06, 8.346999999998828e-06, 8.319999999999161e-06, 8.332999999999258e-06, 8.347999999998301e-06, 8.346999999998828e-06, 8.346999999998828e-06, 8.360999999998397e-06]</msg>
<status status="PASS" starttime="20201115 22:11:42.975" endtime="20201115 22:11:42.978"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.970" endtime="20201115 22:11:42.978"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:42.980" endtime="20201115 22:11:42.982"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:42.984" endtime="20201115 22:11:43.004"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.982" endtime="20201115 22:11:43.004"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.979" endtime="20201115 22:11:43.005"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.603" endtime="20201115 22:11:43.005"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.602" endtime="20201115 22:11:43.005"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:42.601" endtime="20201115 22:11:43.005"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:43.008" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:43.017" endtime="20201115 22:11:43.041"></status>
</kw>
<msg timestamp="20201115 22:11:43.042" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:43.015" endtime="20201115 22:11:43.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:43.044" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:43.043" endtime="20201115 22:11:43.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:43.045" endtime="20201115 22:11:43.047"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.013" endtime="20201115 22:11:43.048"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.010" endtime="20201115 22:11:43.048"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:43.055" endtime="20201115 22:11:43.342"></status>
</kw>
<msg timestamp="20201115 22:11:43.345" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023188667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023197264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:43.053" endtime="20201115 22:11:43.346"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:43.353" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023188667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023197264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:43.346" endtime="20201115 22:11:43.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:43.355" endtime="20201115 22:11:43.357"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.050" endtime="20201115 22:11:43.357"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.049" endtime="20201115 22:11:43.358"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:43.362" level="INFO">${RESULT} = [{'time': 0.023197264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.596999999999078e-06, 'source_diff': 8.596999999999078e-06}, {'time': 0.023464833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:43.358" endtime="20201115 22:11:43.362"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:43.376" level="INFO">${OVERHEAD} = {'time': [0.023197264, 0.023464833, 0.023732875, 0.023998306, 0.024261278, 0.024526708, 0.024793292, 0.025062083, 0.025327667, 0.025594972, 0.025860806, 0.026127597, 0.026395625, 0.026660333, 0.026921...</msg>
<status status="PASS" starttime="20201115 22:11:43.363" endtime="20201115 22:11:43.376"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:43.380" level="INFO">NAME: 00-overhead-24-set</msg>
<status status="PASS" starttime="20201115 22:11:43.379" endtime="20201115 22:11:43.381"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:43.383" level="INFO">VALUE: [8.596999999999078e-06, 8.611000000002117e-06, 8.596999999999078e-06, 8.625000000001687e-06, 8.625000000001687e-06, 8.625000000001687e-06, 8.59800000000202e-06, 8.624999999998217e-06, 8.625000000001687e-06, 8.611000000002117e-06, 8.61200000000159e-06, 8.624999999998217e-06, 8.596999999999078e-06, 8.597000000002547e-06, 8.624999999998217e-06, 8.611000000002117e-06, 8.611000000002117e-06, 8.624999999998217e-06, 8.610999999998648e-06, 8.611000000002117e-06, 8.596999999999078e-06, 8.610999999998648e-06, 8.596999999999078e-06, 8.596999999999078e-06, 8.596999999999078e-06, 8.596999999999078e-06, 8.596999999999078e-06, 8.653000000000827e-06, 8.610999999998648e-06, 8.596999999999078e-06, 8.625000000001687e-06, 8.610999999998648e-06, 8.624999999998217e-06, 8.624999999998217e-06, 8.625000000005156e-06, 8.625000000005156e-06, 8.610999999998648e-06, 8.624999999998217e-06, 8.610999999998648e-06, 8.541000000000798e-06, 8.624999999998217e-06, 8.555999999999842e-06, 8.610999999998648e-06, 8.61200000000506e-06, 8.611000000005586e-06, 8.653000000004296e-06, 8.611999999998121e-06, 8.680999999996497e-06, 8.59800000000549e-06, 8.610999999998648e-06]</msg>
<status status="PASS" starttime="20201115 22:11:43.381" endtime="20201115 22:11:43.384"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.376" endtime="20201115 22:11:43.384"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:43.387" endtime="20201115 22:11:43.388"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:43.390" endtime="20201115 22:11:43.410"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.389" endtime="20201115 22:11:43.410"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.385" endtime="20201115 22:11:43.411"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.008" endtime="20201115 22:11:43.411"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.007" endtime="20201115 22:11:43.411"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.006" endtime="20201115 22:11:43.411"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:43.414" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:43.423" endtime="20201115 22:11:43.448"></status>
</kw>
<msg timestamp="20201115 22:11:43.448" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:43.421" endtime="20201115 22:11:43.448"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:43.451" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:43.449" endtime="20201115 22:11:43.451"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:43.452" endtime="20201115 22:11:43.454"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.419" endtime="20201115 22:11:43.454"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.416" endtime="20201115 22:11:43.455"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:43.461" endtime="20201115 22:11:43.748"></status>
</kw>
<msg timestamp="20201115 22:11:43.751" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023617125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023626014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:43.460" endtime="20201115 22:11:43.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:43.759" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023617125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023626014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:43.752" endtime="20201115 22:11:43.760"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:43.760" endtime="20201115 22:11:43.762"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.457" endtime="20201115 22:11:43.763"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.455" endtime="20201115 22:11:43.763"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:43.768" level="INFO">${RESULT} = [{'time': 0.023626014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.889000000001507e-06, 'source_diff': 8.889000000001507e-06}, {'time': 0.023900375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:43.764" endtime="20201115 22:11:43.768"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:43.783" level="INFO">${OVERHEAD} = {'time': [0.023626014, 0.023900375, 0.024181931, 0.024460681, 0.024735556, 0.025012125, 0.025292764, 0.025568403, 0.025843292, 0.026124375, 0.026405736, 0.026684153, 0.026962583, 0.027237222, 0.027511...</msg>
<status status="PASS" starttime="20201115 22:11:43.769" endtime="20201115 22:11:43.784"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:43.788" level="INFO">NAME: 00-overhead-25-set</msg>
<status status="PASS" starttime="20201115 22:11:43.787" endtime="20201115 22:11:43.788"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:43.791" level="INFO">VALUE: [8.889000000001507e-06, 8.832999999999758e-06, 8.889000000001507e-06, 8.889000000001507e-06, 8.888999999998037e-06, 8.860999999998898e-06, 8.916999999997177e-06, 8.917000000000647e-06, 8.860999999998898e-06, 8.874999999998467e-06, 8.888999999998037e-06, 8.874999999998467e-06, 8.832999999999758e-06, 8.874999999998467e-06, 8.888999999998037e-06, 8.874999999998467e-06, 8.874999999998467e-06, 8.874999999998467e-06, 8.874999999998467e-06, 8.874999999998467e-06, 8.930000000000743e-06, 8.902999999997607e-06, 8.903000000001077e-06, 8.888999999998037e-06, 8.874999999998467e-06, 8.860999999998898e-06, 8.861000000002367e-06, 8.847999999998801e-06, 8.83400000000617e-06, 8.832999999999758e-06, 8.874999999998467e-06, 8.846999999999328e-06, 8.860999999998898e-06, 8.875000000005406e-06, 8.902999999997607e-06, 8.875000000005406e-06, 8.861000000005836e-06, 8.874999999998467e-06, 8.860999999998898e-06, 8.861000000005836e-06, 8.888999999998037e-06, 8.874999999998467e-06, 8.874999999998467e-06, 8.931000000003686e-06, 8.874999999998467e-06, 8.861000000005836e-06, 8.888999999998037e-06, 8.901999999998134e-06, 8.874999999998467e-06, 8.943999999996843e-06]</msg>
<status status="PASS" starttime="20201115 22:11:43.789" endtime="20201115 22:11:43.791"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.784" endtime="20201115 22:11:43.792"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:43.794" endtime="20201115 22:11:43.795"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:43.797" endtime="20201115 22:11:43.817"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.796" endtime="20201115 22:11:43.818"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.792" endtime="20201115 22:11:43.818"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.414" endtime="20201115 22:11:43.818"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.413" endtime="20201115 22:11:43.819"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.412" endtime="20201115 22:11:43.819"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:33.790" endtime="20201115 22:11:43.819"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="teardown">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:43.825" endtime="20201115 22:11:43.845"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.823" endtime="20201115 22:11:43.845"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.821" endtime="20201115 22:11:43.846"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:11:30.688" endtime="20201115 22:11:43.846" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Remove List">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:43.854" endtime="20201115 22:11:43.874"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.852" endtime="20201115 22:11:43.874"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:43.888" endtime="20201115 22:11:46.911"></status>
</kw>
<msg timestamp="20201115 22:11:46.912" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:43.886" endtime="20201115 22:11:46.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:46.918" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:46.914" endtime="20201115 22:11:46.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:11:46.924" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:11:46.920" endtime="20201115 22:11:46.925"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:43.883" endtime="20201115 22:11:46.927"></status>
</kw>
<status status="FAIL" starttime="20201115 22:11:43.881" endtime="20201115 22:11:46.928"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.880" endtime="20201115 22:11:46.929"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:11:46.937" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:11:46.936" endtime="20201115 22:11:46.938"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.931" endtime="20201115 22:11:46.938"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.879" endtime="20201115 22:11:46.939"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.878" endtime="20201115 22:11:46.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:46.941" endtime="20201115 22:11:46.944"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.877" endtime="20201115 22:11:46.945"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.875" endtime="20201115 22:11:46.946"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:43.851" endtime="20201115 22:11:46.947"></status>
</kw>
<kw name="${n} IN RANGE [ 25 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:46.956" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:46.976" endtime="20201115 22:11:46.992"></status>
</kw>
<msg timestamp="20201115 22:11:46.993" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:46.972" endtime="20201115 22:11:46.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:46.999" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:46.996" endtime="20201115 22:11:47.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:47.002" endtime="20201115 22:11:47.006"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.966" endtime="20201115 22:11:47.007"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.961" endtime="20201115 22:11:47.007"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:47.015" endtime="20201115 22:11:47.310"></status>
</kw>
<msg timestamp="20201115 22:11:47.313" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.114016361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.114020236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:47.013" endtime="20201115 22:11:47.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:47.321" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.114016361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.114020236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:47.314" endtime="20201115 22:11:47.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:47.322" endtime="20201115 22:11:47.324"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.010" endtime="20201115 22:11:47.325"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.008" endtime="20201115 22:11:47.325"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:47.329" level="INFO">${RESULT} = [{'time': 3.114020236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.874999999986528e-06, 'source_diff': 3.874999999986528e-06}, {'time': 3.114065153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:47.326" endtime="20201115 22:11:47.330"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:47.344" level="INFO">${OVERHEAD} = {'time': [3.114020236, 3.114065153, 3.114113431, 3.114163222, 3.114214972, 3.114263708, 3.114312111, 3.114357972, 3.114405889, 3.114451681, 3.114498042, 3.114544528, 3.114589847, 3.114640167, 3.114684...</msg>
<status status="PASS" starttime="20201115 22:11:47.330" endtime="20201115 22:11:47.344"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:47.349" level="INFO">NAME: 00-overhead-1-remove</msg>
<status status="PASS" starttime="20201115 22:11:47.348" endtime="20201115 22:11:47.350"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:47.352" level="INFO">VALUE: [3.874999999986528e-06, 3.860999999716341e-06, 3.91699999990891e-06, 3.847000000334333e-06, 3.8610000001604305e-06, 3.889000000256715e-06, 3.874999999986528e-06, 3.874999999986528e-06, 3.860999999716341e-06, 3.847999999972984e-06, 3.874999999986528e-06, 3.8610000001604305e-06, 3.874999999986528e-06, 3.874999999986528e-06, 3.874999999986528e-06, 3.8610000001604305e-06, 3.860999999716341e-06, 3.874999999986528e-06, 3.8610000001604305e-06, 3.847999999972984e-06, 3.860999999716341e-06, 3.833000000064146e-06, 3.860999999716341e-06, 3.8610000001604305e-06, 3.889000000256715e-06, 3.889000000256715e-06, 3.8610000001604305e-06, 3.889000000256715e-06, 3.874999999986528e-06, 3.8610000001604305e-06, 3.833000000064146e-06, 3.860999999716341e-06, 3.8610000001604305e-06, 3.902999999638723e-06, 3.9030000000828124e-06, 3.930000000096356e-06, 3.917000000352999e-06, 3.930999999735008e-06, 3.874999999986528e-06, 3.861999999799082e-06, 3.8610000001604305e-06, 3.874999999986528e-06, 3.888999999812626e-06, 3.902999999638723e-06, 3.8610000001604305e-06, 3.833999999702797e-06, 3.874999999986528e-06, 3.889000000256715e-06, 3.8610000001604305e-06, 3.8610000001604305e-06]</msg>
<status status="PASS" starttime="20201115 22:11:47.350" endtime="20201115 22:11:47.352"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.345" endtime="20201115 22:11:47.353"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:47.355" endtime="20201115 22:11:47.356"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:47.359" endtime="20201115 22:11:47.378"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.357" endtime="20201115 22:11:47.379"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.353" endtime="20201115 22:11:47.379"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.957" endtime="20201115 22:11:47.379"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.953" endtime="20201115 22:11:47.380"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.951" endtime="20201115 22:11:47.380"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:47.382" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:47.391" endtime="20201115 22:11:47.404"></status>
</kw>
<msg timestamp="20201115 22:11:47.404" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:47.390" endtime="20201115 22:11:47.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:47.407" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:47.405" endtime="20201115 22:11:47.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:47.408" endtime="20201115 22:11:47.410"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.387" endtime="20201115 22:11:47.410"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.385" endtime="20201115 22:11:47.411"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:47.417" endtime="20201115 22:11:47.703"></status>
</kw>
<msg timestamp="20201115 22:11:47.706" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023098903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023103972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:47.416" endtime="20201115 22:11:47.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:47.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023098903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023103972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:47.707" endtime="20201115 22:11:47.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:47.716" endtime="20201115 22:11:47.719"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.413" endtime="20201115 22:11:47.719"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.411" endtime="20201115 22:11:47.720"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:47.725" level="INFO">${RESULT} = [{'time': 0.023103972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.068999999999907e-06, 'source_diff': 5.068999999999907e-06}, {'time': 0.0231575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:11:47.721" endtime="20201115 22:11:47.725"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:47.738" level="INFO">${OVERHEAD} = {'time': [0.023103972, 0.0231575, 0.023211764, 0.023266014, 0.023320042, 0.023372458, 0.023427736, 0.023482958, 0.023538153, 0.023592889, 0.023648889, 0.023705292, 0.023756917, 0.023809514, 0.02386519...</msg>
<status status="PASS" starttime="20201115 22:11:47.726" endtime="20201115 22:11:47.738"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:47.743" level="INFO">NAME: 00-overhead-2-remove</msg>
<status status="PASS" starttime="20201115 22:11:47.742" endtime="20201115 22:11:47.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:47.746" level="INFO">VALUE: [5.068999999999907e-06, 5.068999999999907e-06, 5.0699999999993806e-06, 5.07000000000285e-06, 5.0699999999993806e-06, 5.055000000000337e-06, 5.068999999999907e-06, 5.055000000000337e-06, 5.0699999999993806e-06, 5.0699999999993806e-06, 5.082999999999477e-06, 5.0839999999989505e-06, 5.0699999999993806e-06, 5.055999999999811e-06, 5.068999999999907e-06, 5.0699999999993806e-06, 5.069000000003376e-06, 5.0699999999993806e-06, 5.068999999999907e-06, 5.055999999999811e-06, 5.055999999999811e-06, 5.027999999997201e-06, 5.0699999999993806e-06, 5.068999999999907e-06, 5.082999999999477e-06, 5.0699999999993806e-06, 5.0699999999993806e-06, 5.013000000001627e-06, 5.0839999999989505e-06, 5.055000000000337e-06, 5.082999999999477e-06, 5.055000000000337e-06, 5.068999999999907e-06, 5.068999999999907e-06, 5.082999999999477e-06, 5.055000000000337e-06, 5.0839999999989505e-06, 5.068999999999907e-06, 5.055999999999811e-06, 5.082999999999477e-06, 5.068999999999907e-06, 5.082999999999477e-06, 5.082999999999477e-06, 5.096999999999047e-06, 5.082999999999477e-06, 5.08400000000242e-06, 5.055999999999811e-06, 5.068999999999907e-06, 5.055000000000337e-06, 5.110999999998617e-06]</msg>
<status status="PASS" starttime="20201115 22:11:47.744" endtime="20201115 22:11:47.746"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.739" endtime="20201115 22:11:47.747"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:47.749" endtime="20201115 22:11:47.750"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:47.752" endtime="20201115 22:11:47.772"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.751" endtime="20201115 22:11:47.772"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.747" endtime="20201115 22:11:47.773"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.383" endtime="20201115 22:11:47.773"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.381" endtime="20201115 22:11:47.773"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.380" endtime="20201115 22:11:47.774"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:47.776" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:47.785" endtime="20201115 22:11:47.797"></status>
</kw>
<msg timestamp="20201115 22:11:47.798" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:47.783" endtime="20201115 22:11:47.798"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:47.800" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:47.799" endtime="20201115 22:11:47.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:47.801" endtime="20201115 22:11:47.803"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.781" endtime="20201115 22:11:47.803"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.779" endtime="20201115 22:11:47.804"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:47.810" endtime="20201115 22:11:48.097"></status>
</kw>
<msg timestamp="20201115 22:11:48.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023049069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023054389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:47.809" endtime="20201115 22:11:48.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:48.110" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023049069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023054389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:48.102" endtime="20201115 22:11:48.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:48.111" endtime="20201115 22:11:48.112"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.806" endtime="20201115 22:11:48.113"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.804" endtime="20201115 22:11:48.113"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:48.118" level="INFO">${RESULT} = [{'time': 0.023054389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.3200000000031e-06, 'source_diff': 5.3200000000031e-06}, {'time': 0.023113889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5...</msg>
<status status="PASS" starttime="20201115 22:11:48.114" endtime="20201115 22:11:48.118"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:48.132" level="INFO">${OVERHEAD} = {'time': [0.023054389, 0.023113889, 0.023177014, 0.023239111, 0.023298875, 0.023363792, 0.023428028, 0.023488069, 0.023547306, 0.023610194, 0.023675222, 0.023738556, 0.023802597, 0.023866611, 0.023931...</msg>
<status status="PASS" starttime="20201115 22:11:48.119" endtime="20201115 22:11:48.132"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:48.136" level="INFO">NAME: 00-overhead-3-remove</msg>
<status status="PASS" starttime="20201115 22:11:48.135" endtime="20201115 22:11:48.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:48.139" level="INFO">VALUE: [5.3200000000031e-06, 5.332999999999727e-06, 5.332999999999727e-06, 5.332999999999727e-06, 5.374999999998437e-06, 5.33400000000267e-06, 5.306000000000061e-06, 5.319000000000157e-06, 5.306000000000061e-06, 5.319000000000157e-06, 5.290999999997548e-06, 5.34800000000224e-06, 5.319000000000157e-06, 5.319000000000157e-06, 5.319999999999631e-06, 5.319000000000157e-06, 5.319000000000157e-06, 5.319000000000157e-06, 5.319000000000157e-06, 5.332999999999727e-06, 5.319999999999631e-06, 5.319000000000157e-06, 5.305000000000587e-06, 5.374999999998437e-06, 5.305000000000587e-06, 5.305000000000587e-06, 5.34799999999877e-06, 5.264000000001351e-06, 5.292000000000491e-06, 5.332999999999727e-06, 5.292000000000491e-06, 5.306000000000061e-06, 5.277999999997451e-06, 5.332999999999727e-06, 5.319000000000157e-06, 5.276999999997978e-06, 5.374999999998437e-06, 5.319999999999631e-06, 5.305000000000587e-06, 5.292000000000491e-06, 5.319000000000157e-06, 5.3339999999992005e-06, 5.389000000001476e-06, 5.319000000000157e-06, 5.346999999999297e-06, 5.305000000000587e-06, 5.319000000000157e-06, 5.305000000000587e-06, 5.319999999999631e-06, 5.401999999998103e-06]</msg>
<status status="PASS" starttime="20201115 22:11:48.137" endtime="20201115 22:11:48.139"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.133" endtime="20201115 22:11:48.140"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:48.142" endtime="20201115 22:11:48.143"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:48.146" endtime="20201115 22:11:48.165"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.144" endtime="20201115 22:11:48.166"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.140" endtime="20201115 22:11:48.166"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.777" endtime="20201115 22:11:48.167"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.775" endtime="20201115 22:11:48.167"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:47.774" endtime="20201115 22:11:48.167"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:48.169" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:48.178" endtime="20201115 22:11:48.190"></status>
</kw>
<msg timestamp="20201115 22:11:48.191" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:48.177" endtime="20201115 22:11:48.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:48.193" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:48.192" endtime="20201115 22:11:48.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:48.194" endtime="20201115 22:11:48.196"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.174" endtime="20201115 22:11:48.197"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.172" endtime="20201115 22:11:48.197"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:48.204" endtime="20201115 22:11:48.494"></status>
</kw>
<msg timestamp="20201115 22:11:48.497" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023104667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02311025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:11:48.203" endtime="20201115 22:11:48.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:48.505" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023104667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02311025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:11:48.498" endtime="20201115 22:11:48.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:48.507" endtime="20201115 22:11:48.508"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.200" endtime="20201115 22:11:48.509"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.198" endtime="20201115 22:11:48.509"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:48.514" level="INFO">${RESULT} = [{'time': 0.02311025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.582999999999977e-06, 'source_diff': 5.582999999999977e-06}, {'time': 0.023178778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:11:48.510" endtime="20201115 22:11:48.514"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:48.527" level="INFO">${OVERHEAD} = {'time': [0.02311025, 0.023178778, 0.023251444, 0.023323792, 0.023393597, 0.023459597, 0.023528847, 0.023599778, 0.023670958, 0.023742889, 0.023809597, 0.023881083, 0.023952472, 0.024025597, 0.0240951...</msg>
<status status="PASS" starttime="20201115 22:11:48.515" endtime="20201115 22:11:48.528"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:48.532" level="INFO">NAME: 00-overhead-4-remove</msg>
<status status="PASS" starttime="20201115 22:11:48.531" endtime="20201115 22:11:48.532"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:48.535" level="INFO">VALUE: [5.582999999999977e-06, 5.569999999999881e-06, 5.569000000000407e-06, 5.556000000000311e-06, 5.5689999999969375e-06, 5.569000000000407e-06, 5.5689999999969375e-06, 5.569999999999881e-06, 5.582999999999977e-06, 5.569999999999881e-06, 5.554999999997368e-06, 5.582999999999977e-06, 5.554999999997368e-06, 5.624999999998687e-06, 5.555999999996841e-06, 5.569000000000407e-06, 5.582999999999977e-06, 5.569000000000407e-06, 5.582999999999977e-06, 5.569000000000407e-06, 5.569999999999881e-06, 5.5139999999981315e-06, 5.5979999999990204e-06, 5.555000000000837e-06, 5.569000000000407e-06, 5.569000000000407e-06, 5.582999999999977e-06, 5.569999999999881e-06, 5.569000000000407e-06, 5.582999999999977e-06, 5.569000000000407e-06, 5.555999999996841e-06, 5.582999999999977e-06, 5.569000000000407e-06, 5.541999999997271e-06, 5.569999999999881e-06, 5.569000000000407e-06, 5.569000000000407e-06, 5.569000000000407e-06, 5.5689999999969375e-06, 5.624999999998687e-06, 5.596999999999547e-06, 5.555000000000837e-06, 5.6529999999978264e-06, 5.569000000000407e-06, 5.527000000001697e-06, 5.528000000001171e-06, 5.528000000001171e-06, 5.582999999999977e-06, 5.58400000000292e-06]</msg>
<status status="PASS" starttime="20201115 22:11:48.533" endtime="20201115 22:11:48.535"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.528" endtime="20201115 22:11:48.536"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:48.538" endtime="20201115 22:11:48.539"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:48.541" endtime="20201115 22:11:48.561"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.540" endtime="20201115 22:11:48.561"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.536" endtime="20201115 22:11:48.562"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.170" endtime="20201115 22:11:48.562"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.168" endtime="20201115 22:11:48.563"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.167" endtime="20201115 22:11:48.563"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:48.565" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:48.574" endtime="20201115 22:11:48.589"></status>
</kw>
<msg timestamp="20201115 22:11:48.589" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:48.572" endtime="20201115 22:11:48.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:48.592" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:48.590" endtime="20201115 22:11:48.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:48.593" endtime="20201115 22:11:48.595"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.570" endtime="20201115 22:11:48.595"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.568" endtime="20201115 22:11:48.596"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:48.603" endtime="20201115 22:11:48.889"></status>
</kw>
<msg timestamp="20201115 22:11:48.892" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022956819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022962653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:48.601" endtime="20201115 22:11:48.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:48.901" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022956819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022962653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:48.893" endtime="20201115 22:11:48.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:48.902" endtime="20201115 22:11:48.904"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.598" endtime="20201115 22:11:48.904"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.596" endtime="20201115 22:11:48.905"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:48.909" level="INFO">${RESULT} = [{'time': 0.022962653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8339999999997005e-06, 'source_diff': 5.8339999999997005e-06}, {'time': 0.023041708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:48.905" endtime="20201115 22:11:48.909"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:48.923" level="INFO">${OVERHEAD} = {'time': [0.022962653, 0.023041708, 0.023120292, 0.023196958, 0.023276486, 0.023351097, 0.023431181, 0.023508153, 0.023587472, 0.023662556, 0.023742611, 0.023817639, 0.023897, 0.023973264, 0.024051611...</msg>
<status status="PASS" starttime="20201115 22:11:48.910" endtime="20201115 22:11:48.923"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:48.927" level="INFO">NAME: 00-overhead-5-remove</msg>
<status status="PASS" starttime="20201115 22:11:48.926" endtime="20201115 22:11:48.928"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:48.930" level="INFO">VALUE: [5.8339999999997005e-06, 5.833000000000227e-06, 5.820000000000131e-06, 5.819000000000657e-06, 5.804999999997618e-06, 5.819000000000657e-06, 5.820000000000131e-06, 5.874999999998937e-06, 5.778000000001421e-06, 5.820000000000131e-06, 5.805000000001087e-06, 5.778000000001421e-06, 5.833000000000227e-06, 5.820000000000131e-06, 5.819000000000657e-06, 5.833000000000227e-06, 5.819000000000657e-06, 5.806000000000561e-06, 5.833000000000227e-06, 5.805000000001087e-06, 5.805000000001087e-06, 5.805000000001087e-06, 5.804999999997618e-06, 5.776999999998478e-06, 5.833000000000227e-06, 5.805999999997091e-06, 5.819000000000657e-06, 5.804999999997618e-06, 5.833000000000227e-06, 5.833000000000227e-06, 5.874999999998937e-06, 5.7779999999979514e-06, 5.806000000000561e-06, 5.8189999999971875e-06, 5.819000000000657e-06, 5.846999999999797e-06, 5.819000000000657e-06, 5.792000000000991e-06, 5.820000000000131e-06, 5.8339999999997005e-06, 5.777000000001947e-06, 5.749999999998812e-06, 5.846999999999797e-06, 5.805000000001087e-06, 5.833000000000227e-06, 5.833000000000227e-06, 5.833000000000227e-06, 5.819000000000657e-06, 5.846999999999797e-06, 5.8339999999997005e-06]</msg>
<status status="PASS" starttime="20201115 22:11:48.928" endtime="20201115 22:11:48.930"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.924" endtime="20201115 22:11:48.931"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:48.933" endtime="20201115 22:11:48.934"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:48.937" endtime="20201115 22:11:48.956"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.935" endtime="20201115 22:11:48.957"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.931" endtime="20201115 22:11:48.957"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.566" endtime="20201115 22:11:48.958"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.564" endtime="20201115 22:11:48.958"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.563" endtime="20201115 22:11:48.958"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:48.961" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:48.970" endtime="20201115 22:11:48.985"></status>
</kw>
<msg timestamp="20201115 22:11:48.986" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:48.968" endtime="20201115 22:11:48.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:48.988" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:48.987" endtime="20201115 22:11:48.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:48.989" endtime="20201115 22:11:48.991"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.966" endtime="20201115 22:11:48.991"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.963" endtime="20201115 22:11:48.992"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:48.999" endtime="20201115 22:11:49.285"></status>
</kw>
<msg timestamp="20201115 22:11:49.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023332875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023338944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:48.997" endtime="20201115 22:11:49.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:49.297" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023332875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023338944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:49.290" endtime="20201115 22:11:49.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:49.298" endtime="20201115 22:11:49.300"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.994" endtime="20201115 22:11:49.300"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.992" endtime="20201115 22:11:49.301"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:49.305" level="INFO">${RESULT} = [{'time': 0.023338944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.069000000000907e-06, 'source_diff': 6.069000000000907e-06}, {'time': 0.023421639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:49.302" endtime="20201115 22:11:49.305"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:49.319" level="INFO">${OVERHEAD} = {'time': [0.023338944, 0.023421639, 0.023506222, 0.023591611, 0.023673819, 0.023755556, 0.023841333, 0.023926958, 0.024015361, 0.024097833, 0.024183903, 0.024270181, 0.024358222, 0.024447069, 0.024532...</msg>
<status status="PASS" starttime="20201115 22:11:49.306" endtime="20201115 22:11:49.319"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:49.323" level="INFO">NAME: 00-overhead-6-remove</msg>
<status status="PASS" starttime="20201115 22:11:49.322" endtime="20201115 22:11:49.324"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:49.326" level="INFO">VALUE: [6.069000000000907e-06, 6.056000000000811e-06, 6.069000000000907e-06, 6.054999999997868e-06, 6.0689999999974376e-06, 6.056000000000811e-06, 6.054999999997868e-06, 6.069000000000907e-06, 6.0689999999974376e-06, 6.097000000000047e-06, 6.070000000000381e-06, 6.0979999999995205e-06, 6.1389999999987566e-06, 6.097000000000047e-06, 6.069000000000907e-06, 6.0839999999999506e-06, 6.083000000000477e-06, 6.069000000000907e-06, 6.055000000001337e-06, 6.0839999999999506e-06, 6.054999999997868e-06, 6.0839999999999506e-06, 6.069000000000907e-06, 6.0839999999999506e-06, 6.056000000000811e-06, 6.055999999997341e-06, 6.069000000000907e-06, 6.070000000000381e-06, 6.069000000000907e-06, 6.083000000000477e-06, 6.056000000000811e-06, 6.054999999997868e-06, 6.0689999999974376e-06, 6.056000000000811e-06, 6.069999999996911e-06, 6.1389999999987566e-06, 6.056000000000811e-06, 6.055999999997341e-06, 6.054999999997868e-06, 6.070000000000381e-06, 6.097000000000047e-06, 6.0839999999999506e-06, 6.097000000000047e-06, 6.054999999997868e-06, 6.069999999996911e-06, 6.055000000001337e-06, 6.0689999999974376e-06, 6.09800000000299e-06, 6.069000000000907e-06, 6.0689999999974376e-06]</msg>
<status status="PASS" starttime="20201115 22:11:49.324" endtime="20201115 22:11:49.326"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.320" endtime="20201115 22:11:49.327"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:49.330" endtime="20201115 22:11:49.331"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:49.333" endtime="20201115 22:11:49.353"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.332" endtime="20201115 22:11:49.353"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.328" endtime="20201115 22:11:49.354"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.961" endtime="20201115 22:11:49.354"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.959" endtime="20201115 22:11:49.354"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:48.958" endtime="20201115 22:11:49.355"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:49.357" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:49.366" endtime="20201115 22:11:49.382"></status>
</kw>
<msg timestamp="20201115 22:11:49.383" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:49.364" endtime="20201115 22:11:49.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:49.385" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:49.384" endtime="20201115 22:11:49.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:49.386" endtime="20201115 22:11:49.388"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.362" endtime="20201115 22:11:49.389"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.359" endtime="20201115 22:11:49.389"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:49.396" endtime="20201115 22:11:49.683"></status>
</kw>
<msg timestamp="20201115 22:11:49.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023789625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023795931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:49.394" endtime="20201115 22:11:49.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:49.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023789625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023795931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:49.688" endtime="20201115 22:11:49.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:49.696" endtime="20201115 22:11:49.698"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.392" endtime="20201115 22:11:49.699"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.390" endtime="20201115 22:11:49.699"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:49.703" level="INFO">${RESULT} = [{'time': 0.023795931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.306000000001061e-06, 'source_diff': 6.306000000001061e-06}, {'time': 0.023885667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:49.700" endtime="20201115 22:11:49.704"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:49.717" level="INFO">${OVERHEAD} = {'time': [0.023795931, 0.023885667, 0.023977097, 0.024073194, 0.024169528, 0.024262792, 0.024355861, 0.024445847, 0.024538472, 0.024629403, 0.024720306, 0.024815069, 0.024910639, 0.025006292, 0.025096...</msg>
<status status="PASS" starttime="20201115 22:11:49.704" endtime="20201115 22:11:49.717"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:49.722" level="INFO">NAME: 00-overhead-7-remove</msg>
<status status="PASS" starttime="20201115 22:11:49.721" endtime="20201115 22:11:49.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:49.724" level="INFO">VALUE: [6.306000000001061e-06, 6.305999999997591e-06, 6.347000000000297e-06, 6.318999999997688e-06, 6.305999999997591e-06, 6.333999999996731e-06, 6.319000000001157e-06, 6.319000000001157e-06, 6.3329999999972575e-06, 6.334000000000201e-06, 6.374999999999437e-06, 6.374999999999437e-06, 6.319999999997161e-06, 6.306000000001061e-06, 6.333000000000727e-06, 6.276999999998978e-06, 6.235999999999742e-06, 6.2779999999984515e-06, 6.319000000001157e-06, 6.319000000001157e-06, 6.334000000000201e-06, 6.320000000000631e-06, 6.306000000001061e-06, 6.333000000000727e-06, 6.305000000001587e-06, 6.292000000001491e-06, 6.320000000000631e-06, 6.320000000000631e-06, 6.333000000000727e-06, 6.319000000001157e-06, 6.3329999999972575e-06, 6.360999999999867e-06, 6.334000000000201e-06, 6.304999999998118e-06, 6.320000000000631e-06, 6.319000000001157e-06, 6.333000000000727e-06, 6.249999999999312e-06, 6.4029999999985765e-06, 6.319000000001157e-06, 6.319000000001157e-06, 6.333000000000727e-06, 6.306000000001061e-06, 6.305000000001587e-06, 6.334000000000201e-06, 6.264000000002351e-06, 6.320000000000631e-06, 6.291999999998021e-06, 6.318999999997688e-06, 6.319999999997161e-06]</msg>
<status status="PASS" starttime="20201115 22:11:49.723" endtime="20201115 22:11:49.725"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.718" endtime="20201115 22:11:49.726"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:49.728" endtime="20201115 22:11:49.729"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:49.732" endtime="20201115 22:11:49.751"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.730" endtime="20201115 22:11:49.752"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.726" endtime="20201115 22:11:49.752"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.357" endtime="20201115 22:11:49.752"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.356" endtime="20201115 22:11:49.753"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.355" endtime="20201115 22:11:49.753"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:49.755" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:49.764" endtime="20201115 22:11:49.780"></status>
</kw>
<msg timestamp="20201115 22:11:49.780" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:49.763" endtime="20201115 22:11:49.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:49.783" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:49.781" endtime="20201115 22:11:49.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:49.784" endtime="20201115 22:11:49.786"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.760" endtime="20201115 22:11:49.786"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.758" endtime="20201115 22:11:49.787"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:49.793" endtime="20201115 22:11:50.081"></status>
</kw>
<msg timestamp="20201115 22:11:50.084" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02305375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023060333, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:11:49.792" endtime="20201115 22:11:50.084"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:50.093" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02305375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023060333, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:11:50.085" endtime="20201115 22:11:50.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:50.094" endtime="20201115 22:11:50.096"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.789" endtime="20201115 22:11:50.096"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.787" endtime="20201115 22:11:50.097"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:50.101" level="INFO">${RESULT} = [{'time': 0.023060333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.5829999999975075e-06, 'source_diff': 6.5829999999975075e-06}, {'time': 0.023164, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:11:50.097" endtime="20201115 22:11:50.101"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:50.115" level="INFO">${OVERHEAD} = {'time': [0.023060333, 0.023164, 0.023263861, 0.023365847, 0.023470236, 0.023570556, 0.023674083, 0.023775375, 0.023880708, 0.023985083, 0.024088681, 0.024188486, 0.024292306, 0.024396236, 0.024500347...</msg>
<status status="PASS" starttime="20201115 22:11:50.102" endtime="20201115 22:11:50.115"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:50.119" level="INFO">NAME: 00-overhead-8-remove</msg>
<status status="PASS" starttime="20201115 22:11:50.118" endtime="20201115 22:11:50.120"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:50.122" level="INFO">VALUE: [6.5829999999975075e-06, 6.583000000000977e-06, 6.583000000000977e-06, 6.568999999997938e-06, 6.568999999997938e-06, 6.6119999999995904e-06, 6.554999999998368e-06, 6.556000000001311e-06, 6.569000000001407e-06, 6.569000000001407e-06, 6.528000000002171e-06, 6.5969999999970774e-06, 6.584000000000451e-06, 6.583000000000977e-06, 6.638999999999257e-06, 6.568999999997938e-06, 6.542000000001741e-06, 6.583000000000977e-06, 6.584000000000451e-06, 6.542000000001741e-06, 6.570000000000881e-06, 6.583000000000977e-06, 6.584000000000451e-06, 6.597000000000547e-06, 6.5829999999975075e-06, 6.570000000000881e-06, 6.624999999999687e-06, 6.569000000001407e-06, 6.569000000001407e-06, 6.583000000000977e-06, 6.583000000000977e-06, 6.583000000000977e-06, 6.512999999999658e-06, 6.583000000000977e-06, 6.637999999999783e-06, 6.568999999997938e-06, 6.583000000000977e-06, 6.584000000000451e-06, 6.611000000000117e-06, 6.570000000000881e-06, 6.570000000000881e-06, 6.569999999997411e-06, 6.570000000000881e-06, 6.5969999999970774e-06, 6.555000000001837e-06, 6.583000000000977e-06, 6.5279999999987015e-06, 6.569000000001407e-06, 6.570000000000881e-06, 6.568999999997938e-06]</msg>
<status status="PASS" starttime="20201115 22:11:50.120" endtime="20201115 22:11:50.123"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.116" endtime="20201115 22:11:50.123"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:50.126" endtime="20201115 22:11:50.127"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:50.129" endtime="20201115 22:11:50.149"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.128" endtime="20201115 22:11:50.149"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.124" endtime="20201115 22:11:50.150"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.756" endtime="20201115 22:11:50.150"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.754" endtime="20201115 22:11:50.150"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:49.753" endtime="20201115 22:11:50.150"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:50.153" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:50.162" endtime="20201115 22:11:50.178"></status>
</kw>
<msg timestamp="20201115 22:11:50.178" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:50.160" endtime="20201115 22:11:50.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:50.181" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:50.179" endtime="20201115 22:11:50.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:50.182" endtime="20201115 22:11:50.184"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.158" endtime="20201115 22:11:50.184"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.155" endtime="20201115 22:11:50.185"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:50.191" endtime="20201115 22:11:50.478"></status>
</kw>
<msg timestamp="20201115 22:11:50.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022953361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02296025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:11:50.190" endtime="20201115 22:11:50.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:50.489" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022953361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02296025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:11:50.482" endtime="20201115 22:11:50.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:50.490" endtime="20201115 22:11:50.492"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.187" endtime="20201115 22:11:50.493"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.185" endtime="20201115 22:11:50.493"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:50.497" level="INFO">${RESULT} = [{'time': 0.02296025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.889000000002976e-06, 'source_diff': 6.889000000002976e-06}, {'time': 0.023070097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:11:50.494" endtime="20201115 22:11:50.498"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:50.512" level="INFO">${OVERHEAD} = {'time': [0.02296025, 0.023070097, 0.023181514, 0.023289069, 0.023396111, 0.023506333, 0.023619903, 0.023733, 0.023843694, 0.023950792, 0.024059306, 0.024167792, 0.024280333, 0.024388819, 0.024496347,...</msg>
<status status="PASS" starttime="20201115 22:11:50.499" endtime="20201115 22:11:50.512"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:50.516" level="INFO">NAME: 00-overhead-9-remove</msg>
<status status="PASS" starttime="20201115 22:11:50.515" endtime="20201115 22:11:50.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:50.519" level="INFO">VALUE: [6.889000000002976e-06, 6.805000000002087e-06, 6.820000000001131e-06, 6.818999999998188e-06, 6.819000000001657e-06, 6.819000000001657e-06, 6.820000000001131e-06, 6.847000000000797e-06, 6.818999999998188e-06, 6.847999999996801e-06, 6.805999999998091e-06, 6.763999999999382e-06, 6.833000000001227e-06, 6.818999999998188e-06, 6.819000000001657e-06, 6.806000000001561e-06, 6.833000000001227e-06, 6.874999999999937e-06, 6.833000000001227e-06, 6.7779999999989515e-06, 6.804999999998618e-06, 6.805000000002087e-06, 6.819000000001657e-06, 6.833000000001227e-06, 6.805999999998091e-06, 6.820000000001131e-06, 6.819999999997661e-06, 6.819000000001657e-06, 6.819000000001657e-06, 6.8619999999998404e-06, 6.819999999997661e-06, 6.819999999997661e-06, 6.820000000001131e-06, 6.820000000001131e-06, 6.7779999999989515e-06, 6.806000000001561e-06, 6.833000000001227e-06, 6.8329999999977575e-06, 6.833999999997231e-06, 6.8480000000002705e-06, 6.833000000001227e-06, 6.834000000000701e-06, 6.8329999999977575e-06, 6.819999999997661e-06, 6.820000000001131e-06, 6.749999999999812e-06, 6.819000000001657e-06, 6.820000000001131e-06, 6.820000000001131e-06, 6.806000000001561e-06]</msg>
<status status="PASS" starttime="20201115 22:11:50.517" endtime="20201115 22:11:50.519"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.513" endtime="20201115 22:11:50.520"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:50.522" endtime="20201115 22:11:50.523"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:50.526" endtime="20201115 22:11:50.545"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.524" endtime="20201115 22:11:50.546"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.520" endtime="20201115 22:11:50.546"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.153" endtime="20201115 22:11:50.547"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.152" endtime="20201115 22:11:50.547"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.151" endtime="20201115 22:11:50.547"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:50.549" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:50.558" endtime="20201115 22:11:50.575"></status>
</kw>
<msg timestamp="20201115 22:11:50.575" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:50.557" endtime="20201115 22:11:50.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:50.578" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:50.576" endtime="20201115 22:11:50.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:50.579" endtime="20201115 22:11:50.580"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.554" endtime="20201115 22:11:50.581"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.552" endtime="20201115 22:11:50.581"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:50.588" endtime="20201115 22:11:50.874"></status>
</kw>
<msg timestamp="20201115 22:11:50.878" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023080639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023087708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:50.587" endtime="20201115 22:11:50.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:50.886" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023080639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023087708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:50.879" endtime="20201115 22:11:50.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:50.887" endtime="20201115 22:11:50.889"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.584" endtime="20201115 22:11:50.890"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.582" endtime="20201115 22:11:50.890"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:50.894" level="INFO">${RESULT} = [{'time': 0.023087708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.068999999998438e-06, 'source_diff': 7.068999999998438e-06}, {'time': 0.023204681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:50.891" endtime="20201115 22:11:50.894"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:50.908" level="INFO">${OVERHEAD} = {'time': [0.023087708, 0.023204681, 0.023321903, 0.023438417, 0.023559931, 0.023681653, 0.023802194, 0.023922097, 0.024041056, 0.024163819, 0.024285403, 0.024406958, 0.024525458, 0.024646472, 0.024764...</msg>
<status status="PASS" starttime="20201115 22:11:50.895" endtime="20201115 22:11:50.908"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:50.913" level="INFO">NAME: 00-overhead-10-remove</msg>
<status status="PASS" starttime="20201115 22:11:50.912" endtime="20201115 22:11:50.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:50.915" level="INFO">VALUE: [7.068999999998438e-06, 7.070000000001381e-06, 7.014000000003101e-06, 7.084000000000951e-06, 7.0980000000005206e-06, 7.084000000000951e-06, 7.054999999998868e-06, 7.068999999998438e-06, 7.070000000001381e-06, 7.0829999999980076e-06, 7.070000000001381e-06, 7.068999999998438e-06, 7.097000000001047e-06, 7.0829999999980076e-06, 7.083000000001477e-06, 7.083000000001477e-06, 7.069000000001907e-06, 7.068999999998438e-06, 7.110999999997147e-06, 7.070000000001381e-06, 7.083000000001477e-06, 7.000000000000062e-06, 7.069999999997911e-06, 7.0829999999980076e-06, 7.069999999997911e-06, 7.068999999998438e-06, 7.070000000001381e-06, 7.083000000001477e-06, 7.054999999998868e-06, 7.0279999999992016e-06, 7.068999999998438e-06, 7.097000000001047e-06, 7.084000000000951e-06, 7.068999999998438e-06, 7.0829999999980076e-06, 7.040999999999298e-06, 7.083000000001477e-06, 7.068999999998438e-06, 7.069999999997911e-06, 7.083000000001477e-06, 7.083999999997481e-06, 7.070000000001381e-06, 7.070000000001381e-06, 7.055999999998341e-06, 7.0980000000005206e-06, 7.068999999998438e-06, 7.069999999997911e-06, 7.055999999998341e-06, 7.068999999998438e-06, 7.069000000001907e-06]</msg>
<status status="PASS" starttime="20201115 22:11:50.914" endtime="20201115 22:11:50.916"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.909" endtime="20201115 22:11:50.916"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:50.919" endtime="20201115 22:11:50.920"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:50.922" endtime="20201115 22:11:50.942"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.921" endtime="20201115 22:11:50.942"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.917" endtime="20201115 22:11:50.943"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.550" endtime="20201115 22:11:50.943"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.548" endtime="20201115 22:11:50.943"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.547" endtime="20201115 22:11:50.943"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:50.946" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:50.955" endtime="20201115 22:11:50.972"></status>
</kw>
<msg timestamp="20201115 22:11:50.972" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:50.953" endtime="20201115 22:11:50.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:50.975" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:50.973" endtime="20201115 22:11:50.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:50.976" endtime="20201115 22:11:50.977"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.951" endtime="20201115 22:11:50.978"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.949" endtime="20201115 22:11:50.978"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:50.986" endtime="20201115 22:11:51.273"></status>
</kw>
<msg timestamp="20201115 22:11:51.276" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023724472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023731792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:50.984" endtime="20201115 22:11:51.276"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:51.284" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023724472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023731792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:51.277" endtime="20201115 22:11:51.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:51.286" endtime="20201115 22:11:51.287"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.981" endtime="20201115 22:11:51.288"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.979" endtime="20201115 22:11:51.288"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:51.293" level="INFO">${RESULT} = [{'time': 0.023731792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.320000000001631e-06, 'source_diff': 7.320000000001631e-06}, {'time': 0.02385975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:11:51.289" endtime="20201115 22:11:51.293"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:51.306" level="INFO">${OVERHEAD} = {'time': [0.023731792, 0.02385975, 0.023989347, 0.024120806, 0.024248028, 0.024380014, 0.024509819, 0.024641, 0.024767042, 0.024899514, 0.025025542, 0.025156278, 0.025283986, 0.025415972, 0.025541694,...</msg>
<status status="PASS" starttime="20201115 22:11:51.294" endtime="20201115 22:11:51.307"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:51.311" level="INFO">NAME: 00-overhead-11-remove</msg>
<status status="PASS" starttime="20201115 22:11:51.310" endtime="20201115 22:11:51.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:51.313" level="INFO">VALUE: [7.320000000001631e-06, 7.332999999998258e-06, 7.290999999999548e-06, 7.334000000001201e-06, 7.306000000002061e-06, 7.263999999999882e-06, 7.3469999999978275e-06, 7.318999999998688e-06, 7.319999999998161e-06, 7.333000000001727e-06, 7.306000000002061e-06, 7.320000000001631e-06, 7.319000000002157e-06, 7.318999999998688e-06, 7.263000000000408e-06, 7.319999999998161e-06, 7.318999999998688e-06, 7.319999999998161e-06, 7.333000000001727e-06, 7.320000000001631e-06, 7.332999999998258e-06, 7.2779999999994516e-06, 7.320000000001631e-06, 7.306000000002061e-06, 7.319999999998161e-06, 7.292000000002491e-06, 7.306000000002061e-06, 7.361000000000867e-06, 7.318999999998688e-06, 7.319999999998161e-06, 7.361000000000867e-06, 7.305999999998591e-06, 7.333999999997731e-06, 7.333999999997731e-06, 7.334000000001201e-06, 7.306000000002061e-06, 7.305999999998591e-06, 7.332999999998258e-06, 7.305999999998591e-06, 7.318999999998688e-06, 7.319000000002157e-06, 7.402999999999577e-06, 7.347000000001297e-06, 7.305999999998591e-06, 7.278000000002921e-06, 7.402000000000103e-06, 7.306000000002061e-06, 7.318999999998688e-06, 7.347000000001297e-06, 7.360999999997397e-06]</msg>
<status status="PASS" starttime="20201115 22:11:51.312" endtime="20201115 22:11:51.314"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.307" endtime="20201115 22:11:51.314"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:51.317" endtime="20201115 22:11:51.318"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:51.320" endtime="20201115 22:11:51.340"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.319" endtime="20201115 22:11:51.340"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.315" endtime="20201115 22:11:51.341"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.946" endtime="20201115 22:11:51.341"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.945" endtime="20201115 22:11:51.341"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:50.944" endtime="20201115 22:11:51.342"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:51.344" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:51.353" endtime="20201115 22:11:51.370"></status>
</kw>
<msg timestamp="20201115 22:11:51.370" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:51.351" endtime="20201115 22:11:51.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:51.373" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:51.371" endtime="20201115 22:11:51.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:51.374" endtime="20201115 22:11:51.376"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.349" endtime="20201115 22:11:51.377"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.347" endtime="20201115 22:11:51.377"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:51.384" endtime="20201115 22:11:51.673"></status>
</kw>
<msg timestamp="20201115 22:11:51.676" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023355153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023362722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:51.382" endtime="20201115 22:11:51.676"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:51.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023355153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023362722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:51.677" endtime="20201115 22:11:51.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:51.686" endtime="20201115 22:11:51.687"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.380" endtime="20201115 22:11:51.688"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.378" endtime="20201115 22:11:51.688"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:51.693" level="INFO">${RESULT} = [{'time': 0.023362722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.568999999998938e-06, 'source_diff': 7.568999999998938e-06}, {'time': 0.023500625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:51.689" endtime="20201115 22:11:51.693"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:51.706" level="INFO">${OVERHEAD} = {'time': [0.023362722, 0.023500625, 0.023636333, 0.023774167, 0.023913486, 0.024050847, 0.024192819, 0.024334222, 0.024473111, 0.024610042, 0.024746458, 0.024884333, 0.025022361, 0.025161986, 0.025297...</msg>
<status status="PASS" starttime="20201115 22:11:51.694" endtime="20201115 22:11:51.707"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:51.711" level="INFO">NAME: 00-overhead-12-remove</msg>
<status status="PASS" starttime="20201115 22:11:51.710" endtime="20201115 22:11:51.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:51.714" level="INFO">VALUE: [7.568999999998938e-06, 7.527999999999702e-06, 7.582999999998508e-06, 7.583999999997981e-06, 7.569000000002407e-06, 7.568999999998938e-06, 7.583000000001977e-06, 7.554999999999368e-06, 7.582999999998508e-06, 7.583999999997981e-06, 7.582999999998508e-06, 7.583000000001977e-06, 7.568999999998938e-06, 7.625000000000687e-06, 7.500000000000562e-06, 7.570000000001881e-06, 7.554999999999368e-06, 7.555999999998841e-06, 7.583000000001977e-06, 7.568999999998938e-06, 7.570000000001881e-06, 7.555999999998841e-06, 7.582999999998508e-06, 7.597000000001547e-06, 7.583999999997981e-06, 7.584000000001451e-06, 7.570000000001881e-06, 7.583000000001977e-06, 7.583000000001977e-06, 7.583000000001977e-06, 7.582999999998508e-06, 7.555999999998841e-06, 7.611000000001117e-06, 7.584000000001451e-06, 7.569000000002407e-06, 7.583000000001977e-06, 7.665999999999923e-06, 7.569000000002407e-06, 7.568999999998938e-06, 7.583999999997981e-06, 7.568999999998938e-06, 7.584000000001451e-06, 7.569999999998411e-06, 7.540999999999798e-06, 7.568999999998938e-06, 7.554999999999368e-06, 7.582999999998508e-06, 7.554999999999368e-06, 7.554999999999368e-06, 7.556000000002311e-06]</msg>
<status status="PASS" starttime="20201115 22:11:51.712" endtime="20201115 22:11:51.714"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.707" endtime="20201115 22:11:51.715"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:51.717" endtime="20201115 22:11:51.718"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:51.720" endtime="20201115 22:11:51.740"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.719" endtime="20201115 22:11:51.741"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.715" endtime="20201115 22:11:51.741"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.344" endtime="20201115 22:11:51.741"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.343" endtime="20201115 22:11:51.742"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.342" endtime="20201115 22:11:51.742"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:51.744" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:51.754" endtime="20201115 22:11:51.771"></status>
</kw>
<msg timestamp="20201115 22:11:51.771" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:51.752" endtime="20201115 22:11:51.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:51.774" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:51.772" endtime="20201115 22:11:51.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:51.775" endtime="20201115 22:11:51.776"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.749" endtime="20201115 22:11:51.777"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.747" endtime="20201115 22:11:51.777"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:51.784" endtime="20201115 22:11:52.071"></status>
</kw>
<msg timestamp="20201115 22:11:52.074" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024590917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024598764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:51.783" endtime="20201115 22:11:52.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:52.083" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024590917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024598764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:52.075" endtime="20201115 22:11:52.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:52.084" endtime="20201115 22:11:52.086"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.780" endtime="20201115 22:11:52.087"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.778" endtime="20201115 22:11:52.087"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:52.092" level="INFO">${RESULT} = [{'time': 0.024598764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.846999999998328e-06, 'source_diff': 7.846999999998328e-06}, {'time': 0.024747347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:52.088" endtime="20201115 22:11:52.092"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:52.105" level="INFO">${OVERHEAD} = {'time': [0.024598764, 0.024747347, 0.024893569, 0.025039583, 0.025189611, 0.025337556, 0.0254885, 0.025633958, 0.025779472, 0.025926306, 0.0260725, 0.026217514, 0.026369097, 0.026519861, 0.026665847,...</msg>
<status status="PASS" starttime="20201115 22:11:52.093" endtime="20201115 22:11:52.106"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:52.110" level="INFO">NAME: 00-overhead-13-remove</msg>
<status status="PASS" starttime="20201115 22:11:52.109" endtime="20201115 22:11:52.110"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:52.113" level="INFO">VALUE: [7.846999999998328e-06, 7.818999999999188e-06, 7.791000000000048e-06, 7.833000000002227e-06, 7.818999999999188e-06, 7.84800000000127e-06, 7.818999999999188e-06, 7.832999999998758e-06, 7.903000000000077e-06, 7.84800000000127e-06, 7.832999999998758e-06, 7.861000000001367e-06, 7.819000000002657e-06, 7.832999999998758e-06, 7.818999999999188e-06, 7.819000000002657e-06, 7.818999999999188e-06, 7.8340000000017e-06, 7.819000000002657e-06, 7.818999999999188e-06, 7.833999999998231e-06, 7.847000000001797e-06, 7.832999999998758e-06, 7.860999999997897e-06, 7.8340000000017e-06, 7.818999999999188e-06, 7.777000000000478e-06, 7.833000000002227e-06, 7.819000000002657e-06, 7.818999999999188e-06, 7.818999999999188e-06, 7.82000000000213e-06, 7.846999999998328e-06, 7.819000000002657e-06, 7.777999999999952e-06, 7.861999999997371e-06, 7.818999999999188e-06, 7.832999999998758e-06, 7.833000000002227e-06, 7.819000000002657e-06, 7.792000000002991e-06, 7.8340000000017e-06, 7.819999999998661e-06, 7.832999999998758e-06, 7.805999999999091e-06, 7.818999999999188e-06, 7.805999999999091e-06, 7.846999999998328e-06, 7.805999999999091e-06, 7.832999999998758e-06]</msg>
<status status="PASS" starttime="20201115 22:11:52.111" endtime="20201115 22:11:52.113"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.106" endtime="20201115 22:11:52.113"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:52.116" endtime="20201115 22:11:52.117"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:52.119" endtime="20201115 22:11:52.146"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.118" endtime="20201115 22:11:52.146"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.114" endtime="20201115 22:11:52.147"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.745" endtime="20201115 22:11:52.147"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.743" endtime="20201115 22:11:52.147"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:51.742" endtime="20201115 22:11:52.147"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:52.150" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:52.159" endtime="20201115 22:11:52.176"></status>
</kw>
<msg timestamp="20201115 22:11:52.177" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:52.157" endtime="20201115 22:11:52.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:52.179" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:52.178" endtime="20201115 22:11:52.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:52.181" endtime="20201115 22:11:52.182"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.155" endtime="20201115 22:11:52.183"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.152" endtime="20201115 22:11:52.183"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:52.190" endtime="20201115 22:11:52.477"></status>
</kw>
<msg timestamp="20201115 22:11:52.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023103819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023111875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:52.188" endtime="20201115 22:11:52.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:52.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023103819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023111875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:52.481" endtime="20201115 22:11:52.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:52.490" endtime="20201115 22:11:52.491"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.186" endtime="20201115 22:11:52.492"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.184" endtime="20201115 22:11:52.492"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:52.497" level="INFO">${RESULT} = [{'time': 0.023111875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.055999999999341e-06, 'source_diff': 8.055999999999341e-06}, {'time': 0.023272583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:52.493" endtime="20201115 22:11:52.497"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:52.510" level="INFO">${OVERHEAD} = {'time': [0.023111875, 0.023272583, 0.023430431, 0.023585319, 0.023745042, 0.023906222, 0.024062625, 0.024217694, 0.024379111, 0.02454075, 0.024697153, 0.024858403, 0.025012681, 0.025170264, 0.0253273...</msg>
<status status="PASS" starttime="20201115 22:11:52.498" endtime="20201115 22:11:52.511"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:52.515" level="INFO">NAME: 00-overhead-14-remove</msg>
<status status="PASS" starttime="20201115 22:11:52.514" endtime="20201115 22:11:52.515"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:52.518" level="INFO">VALUE: [8.055999999999341e-06, 8.082999999999008e-06, 8.08400000000195e-06, 8.166000000000423e-06, 8.055999999999341e-06, 8.054999999999868e-06, 8.068999999999438e-06, 8.083000000002477e-06, 8.082999999999008e-06, 8.082999999999008e-06, 8.041999999999772e-06, 8.056000000002811e-06, 8.069999999998911e-06, 8.056000000002811e-06, 8.028000000000202e-06, 8.07000000000238e-06, 8.069999999998911e-06, 8.153000000000327e-06, 8.082999999999008e-06, 8.000000000001062e-06, 8.09800000000152e-06, 8.068999999999438e-06, 8.069999999998911e-06, 8.069999999998911e-06, 8.082999999999008e-06, 8.069999999998911e-06, 8.069999999998911e-06, 8.068999999999438e-06, 8.068999999999438e-06, 8.068999999999438e-06, 8.08400000000195e-06, 8.028000000000202e-06, 8.068999999999438e-06, 8.068999999999438e-06, 8.069999999998911e-06, 8.111000000001617e-06, 8.068999999999438e-06, 8.07000000000238e-06, 8.08400000000195e-06, 8.111000000001617e-06, 8.068999999999438e-06, 8.097999999998051e-06, 8.096999999998578e-06, 8.125000000001187e-06, 8.054999999999868e-06, 8.069999999998911e-06, 8.054999999999868e-06, 8.083000000002477e-06, 8.069000000002907e-06, 8.111000000001617e-06]</msg>
<status status="PASS" starttime="20201115 22:11:52.516" endtime="20201115 22:11:52.518"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.511" endtime="20201115 22:11:52.519"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:52.521" endtime="20201115 22:11:52.523"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:52.525" endtime="20201115 22:11:52.544"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.523" endtime="20201115 22:11:52.545"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.520" endtime="20201115 22:11:52.546"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.150" endtime="20201115 22:11:52.546"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.149" endtime="20201115 22:11:52.546"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.148" endtime="20201115 22:11:52.546"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:52.549" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:52.558" endtime="20201115 22:11:52.577"></status>
</kw>
<msg timestamp="20201115 22:11:52.577" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:52.556" endtime="20201115 22:11:52.577"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:52.580" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:52.578" endtime="20201115 22:11:52.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:52.581" endtime="20201115 22:11:52.582"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.553" endtime="20201115 22:11:52.583"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.551" endtime="20201115 22:11:52.583"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:52.590" endtime="20201115 22:11:52.877"></status>
</kw>
<msg timestamp="20201115 22:11:52.880" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023089569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023097903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:52.588" endtime="20201115 22:11:52.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:52.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023089569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023097903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:52.881" endtime="20201115 22:11:52.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:52.890" endtime="20201115 22:11:52.891"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.586" endtime="20201115 22:11:52.892"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.584" endtime="20201115 22:11:52.892"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:52.897" level="INFO">${RESULT} = [{'time': 0.023097903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.333999999998731e-06, 'source_diff': 8.333999999998731e-06}, {'time': 0.023268778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:52.893" endtime="20201115 22:11:52.897"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:52.910" level="INFO">${OVERHEAD} = {'time': [0.023097903, 0.023268778, 0.023435389, 0.023600167, 0.023768556, 0.023939319, 0.024104944, 0.024275375, 0.024447306, 0.024615486, 0.024784861, 0.024952347, 0.025121639, 0.025291778, 0.025458...</msg>
<status status="PASS" starttime="20201115 22:11:52.898" endtime="20201115 22:11:52.911"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:52.915" level="INFO">NAME: 00-overhead-15-remove</msg>
<status status="PASS" starttime="20201115 22:11:52.914" endtime="20201115 22:11:52.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:52.918" level="INFO">VALUE: [8.333999999998731e-06, 8.403000000000577e-06, 8.32000000000263e-06, 8.333999999998731e-06, 8.347999999998301e-06, 8.250000000001312e-06, 8.387999999998064e-06, 8.318999999999688e-06, 8.319999999999161e-06, 8.305000000000118e-06, 8.318999999999688e-06, 8.318999999999688e-06, 8.278000000000452e-06, 8.3340000000022e-06, 8.305000000000118e-06, 8.319999999999161e-06, 8.305999999999591e-06, 8.332999999999258e-06, 8.278000000000452e-06, 8.333999999998731e-06, 8.332999999999258e-06, 8.318999999999688e-06, 8.333999999998731e-06, 8.346999999998828e-06, 8.375000000001437e-06, 8.318999999999688e-06, 8.318999999999688e-06, 8.305999999999591e-06, 8.3340000000022e-06, 8.319000000003157e-06, 8.292000000000022e-06, 8.318999999999688e-06, 8.318999999999688e-06, 8.332999999999258e-06, 8.278000000000452e-06, 8.402000000001103e-06, 8.318999999999688e-06, 8.291000000000548e-06, 8.332999999999258e-06, 8.319999999999161e-06, 8.32000000000263e-06, 8.305000000000118e-06, 8.318999999999688e-06, 8.305999999999591e-06, 8.318999999999688e-06, 8.264000000000882e-06, 8.332999999999258e-06, 8.332999999999258e-06, 8.305999999999591e-06, 8.332999999999258e-06]</msg>
<status status="PASS" starttime="20201115 22:11:52.916" endtime="20201115 22:11:52.919"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.911" endtime="20201115 22:11:52.919"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:52.922" endtime="20201115 22:11:52.923"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:52.925" endtime="20201115 22:11:52.945"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.923" endtime="20201115 22:11:52.945"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.920" endtime="20201115 22:11:52.946"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.549" endtime="20201115 22:11:52.946"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.547" endtime="20201115 22:11:52.946"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.547" endtime="20201115 22:11:52.946"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:52.949" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:52.958" endtime="20201115 22:11:52.978"></status>
</kw>
<msg timestamp="20201115 22:11:52.979" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:52.956" endtime="20201115 22:11:52.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:52.982" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:52.980" endtime="20201115 22:11:52.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:52.983" endtime="20201115 22:11:52.984"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.954" endtime="20201115 22:11:52.985"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.951" endtime="20201115 22:11:52.985"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:52.992" endtime="20201115 22:11:53.280"></status>
</kw>
<msg timestamp="20201115 22:11:53.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023240417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023249028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:52.990" endtime="20201115 22:11:53.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:53.292" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023240417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023249028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:53.284" endtime="20201115 22:11:53.292"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:53.293" endtime="20201115 22:11:53.295"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.988" endtime="20201115 22:11:53.295"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.986" endtime="20201115 22:11:53.296"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:53.300" level="INFO">${RESULT} = [{'time': 0.023249028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.611000000002117e-06, 'source_diff': 8.611000000002117e-06}, {'time': 0.023424778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:53.296" endtime="20201115 22:11:53.300"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:53.314" level="INFO">${OVERHEAD} = {'time': [0.023249028, 0.023424778, 0.02360175, 0.023778486, 0.023957931, 0.024136181, 0.024315625, 0.024497903, 0.024673792, 0.024855278, 0.025031861, 0.025209611, 0.025386861, 0.025563125, 0.0257387...</msg>
<status status="PASS" starttime="20201115 22:11:53.301" endtime="20201115 22:11:53.314"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:53.319" level="INFO">NAME: 00-overhead-16-remove</msg>
<status status="PASS" starttime="20201115 22:11:53.318" endtime="20201115 22:11:53.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:53.321" level="INFO">VALUE: [8.611000000002117e-06, 8.569999999999411e-06, 8.568999999999938e-06, 8.555000000000368e-06, 8.569999999999411e-06, 8.569999999999411e-06, 8.582999999999508e-06, 8.570000000002881e-06, 8.583999999998981e-06, 8.555999999999842e-06, 8.555000000000368e-06, 8.596999999999078e-06, 8.582999999999508e-06, 8.568999999999938e-06, 8.596999999999078e-06, 8.555000000000368e-06, 8.527999999997232e-06, 8.555000000000368e-06, 8.568999999999938e-06, 8.555000000000368e-06, 8.583000000002977e-06, 8.555999999999842e-06, 8.555999999999842e-06, 8.568999999999938e-06, 8.568999999999938e-06, 8.569999999999411e-06, 8.569000000003407e-06, 8.582999999999508e-06, 8.569999999999411e-06, 8.568999999999938e-06, 8.582999999999508e-06, 8.568999999999938e-06, 8.500000000001562e-06, 8.582999999999508e-06, 8.555999999999842e-06, 8.555000000000368e-06, 8.583999999998981e-06, 8.568999999999938e-06, 8.568999999999938e-06, 8.556000000003311e-06, 8.555999999999842e-06, 8.569999999999411e-06, 8.555999999999842e-06, 8.596999999999078e-06, 8.569999999999411e-06, 8.568999999999938e-06, 8.568999999999938e-06, 8.610999999998648e-06, 8.528000000000702e-06, 8.582999999999508e-06]</msg>
<status status="PASS" starttime="20201115 22:11:53.320" endtime="20201115 22:11:53.322"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.315" endtime="20201115 22:11:53.322"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:53.325" endtime="20201115 22:11:53.326"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:53.328" endtime="20201115 22:11:53.348"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.327" endtime="20201115 22:11:53.348"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.323" endtime="20201115 22:11:53.349"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.949" endtime="20201115 22:11:53.349"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.948" endtime="20201115 22:11:53.349"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:52.947" endtime="20201115 22:11:53.349"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:53.352" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:53.361" endtime="20201115 22:11:53.381"></status>
</kw>
<msg timestamp="20201115 22:11:53.382" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:53.359" endtime="20201115 22:11:53.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:53.384" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:53.383" endtime="20201115 22:11:53.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:53.385" endtime="20201115 22:11:53.387"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.357" endtime="20201115 22:11:53.388"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.354" endtime="20201115 22:11:53.388"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:53.395" endtime="20201115 22:11:53.682"></status>
</kw>
<msg timestamp="20201115 22:11:53.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023133236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023142056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:53.393" endtime="20201115 22:11:53.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:53.693" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023133236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023142056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:53.686" endtime="20201115 22:11:53.694"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:53.695" endtime="20201115 22:11:53.696"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.390" endtime="20201115 22:11:53.697"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.389" endtime="20201115 22:11:53.697"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:53.702" level="INFO">${RESULT} = [{'time': 0.023142056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.819999999999661e-06, 'source_diff': 8.819999999999661e-06}, {'time': 0.023329833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:53.698" endtime="20201115 22:11:53.702"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:53.715" level="INFO">${OVERHEAD} = {'time': [0.023142056, 0.023329833, 0.023519292, 0.023706125, 0.023896375, 0.024085639, 0.024277222, 0.024466931, 0.02465575, 0.024846611, 0.025036292, 0.025229139, 0.025415097, 0.025607708, 0.0257950...</msg>
<status status="PASS" starttime="20201115 22:11:53.703" endtime="20201115 22:11:53.716"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:53.720" level="INFO">NAME: 00-overhead-17-remove</msg>
<status status="PASS" starttime="20201115 22:11:53.719" endtime="20201115 22:11:53.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:53.723" level="INFO">VALUE: [8.819999999999661e-06, 8.750000000001812e-06, 8.833999999999231e-06, 8.833000000003227e-06, 8.846999999999328e-06, 8.832999999999758e-06, 8.819000000000188e-06, 8.833999999999231e-06, 8.846999999999328e-06, 8.819000000000188e-06, 8.806000000000092e-06, 8.806000000000092e-06, 8.819000000000188e-06, 8.819000000000188e-06, 8.819000000000188e-06, 8.819000000000188e-06, 8.819000000000188e-06, 8.819000000000188e-06, 8.777999999997482e-06, 8.819999999999661e-06, 8.833000000003227e-06, 8.832999999999758e-06, 8.792000000000522e-06, 8.832999999999758e-06, 8.819999999999661e-06, 8.806000000000092e-06, 8.806000000000092e-06, 8.833999999999231e-06, 8.888000000002033e-06, 8.846999999999328e-06, 8.819000000000188e-06, 8.833999999999231e-06, 8.8340000000027e-06, 8.819000000000188e-06, 8.776999999998009e-06, 8.819000000000188e-06, 8.819999999999661e-06, 8.847999999998801e-06, 8.806000000000092e-06, 8.846999999999328e-06, 8.806000000000092e-06, 8.819999999999661e-06, 8.819999999999661e-06, 8.805000000000618e-06, 8.819000000000188e-06, 8.832999999999758e-06, 8.791000000001048e-06, 8.819999999999661e-06, 8.819000000000188e-06, 8.819999999999661e-06]</msg>
<status status="PASS" starttime="20201115 22:11:53.721" endtime="20201115 22:11:53.723"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.716" endtime="20201115 22:11:53.723"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:53.726" endtime="20201115 22:11:53.727"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:53.730" endtime="20201115 22:11:53.749"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.728" endtime="20201115 22:11:53.750"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.724" endtime="20201115 22:11:53.750"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.352" endtime="20201115 22:11:53.750"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.351" endtime="20201115 22:11:53.751"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.350" endtime="20201115 22:11:53.751"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:53.753" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:53.762" endtime="20201115 22:11:53.782"></status>
</kw>
<msg timestamp="20201115 22:11:53.782" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:53.761" endtime="20201115 22:11:53.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:53.785" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:53.783" endtime="20201115 22:11:53.785"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:53.786" endtime="20201115 22:11:53.788"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.758" endtime="20201115 22:11:53.788"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.756" endtime="20201115 22:11:53.789"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:53.796" endtime="20201115 22:11:54.084"></status>
</kw>
<msg timestamp="20201115 22:11:54.087" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023063486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023072556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:53.794" endtime="20201115 22:11:54.087"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:54.095" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023063486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023072556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:54.088" endtime="20201115 22:11:54.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:54.096" endtime="20201115 22:11:54.098"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.791" endtime="20201115 22:11:54.099"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.789" endtime="20201115 22:11:54.099"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:54.103" level="INFO">${RESULT} = [{'time': 0.023072556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.069999999999911e-06, 'source_diff': 9.069999999999911e-06}, {'time': 0.023270708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:54.100" endtime="20201115 22:11:54.104"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:54.118" level="INFO">${OVERHEAD} = {'time': [0.023072556, 0.023270708, 0.023475014, 0.023672736, 0.023872764, 0.02407575, 0.024274097, 0.024475639, 0.024675431, 0.02487975, 0.025077889, 0.025282278, 0.025484556, 0.025687181, 0.02589158...</msg>
<status status="PASS" starttime="20201115 22:11:54.105" endtime="20201115 22:11:54.118"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:54.122" level="INFO">NAME: 00-overhead-18-remove</msg>
<status status="PASS" starttime="20201115 22:11:54.121" endtime="20201115 22:11:54.123"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:54.125" level="INFO">VALUE: [9.069999999999911e-06, 9.069000000000438e-06, 9.069999999999911e-06, 9.069000000000438e-06, 9.069999999999911e-06, 9.042000000000772e-06, 9.055000000000868e-06, 9.069999999999911e-06, 9.069999999999911e-06, 9.056000000000342e-06, 9.069999999999911e-06, 9.069999999999911e-06, 9.097999999999051e-06, 9.069999999999911e-06, 9.083000000000008e-06, 9.056000000000342e-06, 9.096999999999578e-06, 9.056000000000342e-06, 9.069000000000438e-06, 9.069000000000438e-06, 9.083000000000008e-06, 9.069999999999911e-06, 9.083000000000008e-06, 9.056000000000342e-06, 9.000000000002062e-06, 9.069000000000438e-06, 9.069999999999911e-06, 9.041000000001298e-06, 9.028000000001202e-06, 9.056000000000342e-06, 9.110999999999148e-06, 9.069999999999911e-06, 9.083999999999481e-06, 9.027999999997732e-06, 9.096999999999578e-06, 9.069000000000438e-06, 9.167000000000897e-06, 9.069999999999911e-06, 9.083000000000008e-06, 9.027999999997732e-06, 9.069000000000438e-06, 9.027000000001728e-06, 9.069999999999911e-06, 9.069999999999911e-06, 9.069999999999911e-06, 9.083000000000008e-06, 9.083000000000008e-06, 9.069000000000438e-06, 9.069000000000438e-06, 9.055000000000868e-06]</msg>
<status status="PASS" starttime="20201115 22:11:54.124" endtime="20201115 22:11:54.126"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:54.119" endtime="20201115 22:11:54.126"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:54.128" endtime="20201115 22:11:54.130"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:54.132" endtime="20201115 22:11:54.151"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:54.130" endtime="20201115 22:11:54.152"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:54.127" endtime="20201115 22:11:54.153"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.754" endtime="20201115 22:11:54.153"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.752" endtime="20201115 22:11:54.153"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:53.751" endtime="20201115 22:11:54.153"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:54.156" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:54.165" endtime="20201115 22:11:54.187"></status>
</kw>
<msg timestamp="20201115 22:11:54.187" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:54.163" endtime="20201115 22:11:54.188"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:54.190" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:54.188" endtime="20201115 22:11:54.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:54.191" endtime="20201115 22:11:54.193"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:54.160" endtime="20201115 22:11:54.194"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:54.158" endtime="20201115 22:11:54.194"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:54.201" endtime="20201115 22:11:54.488"></status>
</kw>
<msg timestamp="20201115 22:11:54.491" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023214944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023224292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:54.199" endtime="20201115 22:11:54.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:54.499" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023214944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023224292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:54.492" endtime="20201115 22:11:54.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:54.501" endtime="20201115 22:11:54.502"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:54.197" endtime="20201115 22:11:54.503"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:54.195" endtime="20201115 22:11:54.503"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:54.508" level="INFO">${RESULT} = [{'time': 0.023224292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.347999999999301e-06, 'source_diff': 9.347999999999301e-06}, {'time': 0.023434764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:54.504" endtime="20201115 22:11:54.508"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:54.521" level="INFO">${OVERHEAD} = {'time': [0.023224292, 0.023434764, 0.023646667, 0.023858264, 0.024069917, 0.024279153, 0.024493653, 0.024705014, 0.024914944, 0.025128056, 0.025340181, 0.025549958, 0.025758917, 0.025973694, 0.026189...</msg>
<status status="PASS" starttime="20201115 22:11:54.509" endtime="20201115 22:11:54.522"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:54.526" level="INFO">NAME: 00-overhead-19-remove</msg>
<status status="PASS" starttime="20201115 22:11:54.525" endtime="20201115 22:11:54.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:54.529" level="INFO">VALUE: [9.347999999999301e-06, 9.333000000000258e-06, 9.333999999999731e-06, 9.320000000000161e-06, 9.277999999997982e-06, 9.346999999999828e-06, 9.320000000000161e-06, 9.292000000001022e-06, 9.291000000001548e-06, 9.347999999999301e-06, 9.306000000000592e-06, 9.333000000000258e-06, 9.320000000000161e-06, 9.333000000000258e-06, 9.304999999997648e-06, 9.320000000000161e-06, 9.403000000001577e-06, 9.320000000000161e-06, 9.318999999997218e-06, 9.320000000000161e-06, 9.34800000000277e-06, 9.320000000000161e-06, 9.319000000000688e-06, 9.306000000000592e-06, 9.346999999999828e-06, 9.346999999999828e-06, 9.320000000000161e-06, 9.318999999997218e-06, 9.319000000000688e-06, 9.319000000000688e-06, 9.361000000002867e-06, 9.292000000001022e-06, 9.305000000001118e-06, 9.333000000000258e-06, 9.320000000000161e-06, 9.292000000001022e-06, 9.305000000001118e-06, 9.305000000001118e-06, 9.360999999999398e-06, 9.333000000000258e-06, 9.319000000000688e-06, 9.278000000001452e-06, 9.305000000001118e-06, 9.346999999999828e-06, 9.333000000000258e-06, 9.333999999999731e-06, 9.320000000000161e-06, 9.306000000000592e-06, 9.319000000000688e-06, 9.333000000000258e-06]</msg>
<status status="PASS" starttime="20201115 22:11:54.527" endtime="20201115 22:11:54.529"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:54.522" endtime="20201115 22:11:54.529"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:54.532" endtime="20201115 22:11:54.533"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:54.535" endtime="20201115 22:11:54.555"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:54.534" endtime="20201115 22:11:54.556"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:54.530" endtime="20201115 22:11:54.556"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:54.156" endtime="20201115 22:11:54.556"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:54.154" endtime="20201115 22:11:54.557"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:54.154" endtime="20201115 22:11:54.557"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:54.559" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:54.569" endtime="20201115 22:11:54.588"></status>
</kw>
<msg timestamp="20201115 22:11:54.589" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:54.567" endtime="20201115 22:11:54.589"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:54.591" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:54.590" endtime="20201115 22:11:54.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:54.593" endtime="20201115 22:11:54.594"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:54.564" endtime="20201115 22:11:54.595"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:54.562" endtime="20201115 22:11:54.595"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:54.602" endtime="20201115 22:11:54.890"></status>
</kw>
<msg timestamp="20201115 22:11:54.893" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024427972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024437556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:54.601" endtime="20201115 22:11:54.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:54.902" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024427972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024437556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:54.895" endtime="20201115 22:11:54.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:54.903" endtime="20201115 22:11:54.905"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:54.598" endtime="20201115 22:11:54.905"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:54.596" endtime="20201115 22:11:54.906"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:54.910" level="INFO">${RESULT} = [{'time': 0.024437556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.583999999999981e-06, 'source_diff': 9.583999999999981e-06}, {'time': 0.024661194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:54.907" endtime="20201115 22:11:54.910"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:54.924" level="INFO">${OVERHEAD} = {'time': [0.024437556, 0.024661194, 0.024881042, 0.025102875, 0.0253245, 0.0255505, 0.025770889, 0.025997958, 0.026218986, 0.026443611, 0.026669722, 0.026890972, 0.027111319, 0.027334806, 0.02755875, ...</msg>
<status status="PASS" starttime="20201115 22:11:54.911" endtime="20201115 22:11:54.924"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:54.928" level="INFO">NAME: 00-overhead-20-remove</msg>
<status status="PASS" starttime="20201115 22:11:54.927" endtime="20201115 22:11:54.929"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:54.931" level="INFO">VALUE: [9.583999999999981e-06, 9.569000000000938e-06, 9.570000000000412e-06, 9.556000000000842e-06, 9.597000000000078e-06, 9.583000000000508e-06, 9.570000000000412e-06, 9.555000000001368e-06, 9.569000000000938e-06, 9.597000000000078e-06, 9.597000000000078e-06, 9.568999999997468e-06, 9.596999999996608e-06, 9.583999999999981e-06, 9.556000000000842e-06, 9.569999999996942e-06, 9.583999999999981e-06, 9.556000000000842e-06, 9.526999999998759e-06, 9.570000000000412e-06, 9.569000000000938e-06, 9.624999999999218e-06, 9.583000000000508e-06, 9.554999999997899e-06, 9.568999999997468e-06, 9.568999999997468e-06, 9.555999999997372e-06, 9.555000000001368e-06, 9.583000000000508e-06, 9.583999999999981e-06, 9.582999999997038e-06, 9.582999999993569e-06, 9.500000000002562e-06, 9.570000000000412e-06, 9.569000000000938e-06, 9.556000000000842e-06, 9.597000000000078e-06, 9.556000000000842e-06, 9.556000000000842e-06, 9.569000000000938e-06, 9.513999999995193e-06, 9.569000000000938e-06, 9.556000000000842e-06, 9.568999999993999e-06, 9.570000000000412e-06, 9.569000000000938e-06, 9.568999999993999e-06, 9.569000000000938e-06, 9.555000000001368e-06, 9.597000000000078e-06]</msg>
<status status="PASS" starttime="20201115 22:11:54.929" endtime="20201115 22:11:54.931"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:54.925" endtime="20201115 22:11:54.932"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:54.934" endtime="20201115 22:11:54.936"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:54.938" endtime="20201115 22:11:54.958"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:54.936" endtime="20201115 22:11:54.958"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:54.932" endtime="20201115 22:11:54.959"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:54.560" endtime="20201115 22:11:54.959"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:54.558" endtime="20201115 22:11:54.959"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:54.557" endtime="20201115 22:11:54.960"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:54.962" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:54.971" endtime="20201115 22:11:54.994"></status>
</kw>
<msg timestamp="20201115 22:11:54.994" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:54.969" endtime="20201115 22:11:54.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:54.997" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:54.995" endtime="20201115 22:11:54.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:54.998" endtime="20201115 22:11:55.000"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:54.967" endtime="20201115 22:11:55.000"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:54.965" endtime="20201115 22:11:55.001"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:55.008" endtime="20201115 22:11:55.295"></status>
</kw>
<msg timestamp="20201115 22:11:55.298" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023197292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023207125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:55.006" endtime="20201115 22:11:55.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:55.306" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023197292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023207125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:55.299" endtime="20201115 22:11:55.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:55.308" endtime="20201115 22:11:55.309"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:55.003" endtime="20201115 22:11:55.310"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:55.001" endtime="20201115 22:11:55.310"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:55.315" level="INFO">${RESULT} = [{'time': 0.023207125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.832999999997288e-06, 'source_diff': 9.832999999997288e-06}, {'time': 0.023444833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:11:55.311" endtime="20201115 22:11:55.315"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:55.328" level="INFO">${OVERHEAD} = {'time': [0.023207125, 0.023444833, 0.023682569, 0.023918139, 0.024151972, 0.024389736, 0.024626847, 0.024859569, 0.025094639, 0.025328194, 0.025565375, 0.025803319, 0.026041042, 0.026273444, 0.026509...</msg>
<status status="PASS" starttime="20201115 22:11:55.316" endtime="20201115 22:11:55.329"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:55.333" level="INFO">NAME: 00-overhead-21-remove</msg>
<status status="PASS" starttime="20201115 22:11:55.332" endtime="20201115 22:11:55.333"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:55.336" level="INFO">VALUE: [9.832999999997288e-06, 9.764000000002382e-06, 9.833000000000758e-06, 9.792000000001522e-06, 9.833000000000758e-06, 9.860999999999898e-06, 9.805000000001618e-06, 9.750000000002812e-06, 9.860999999999898e-06, 9.818999999997718e-06, 9.833000000000758e-06, 9.819000000001188e-06, 9.903000000002077e-06, 9.819000000001188e-06, 9.820000000000662e-06, 9.819999999997192e-06, 9.833000000000758e-06, 9.818999999997718e-06, 9.819999999997192e-06, 9.805999999997622e-06, 9.819000000001188e-06, 9.847000000000328e-06, 9.804999999998149e-06, 9.834000000000231e-06, 9.820000000000662e-06, 9.819000000001188e-06, 9.819000000001188e-06, 9.834000000000231e-06, 9.833000000000758e-06, 9.820000000000662e-06, 9.820000000000662e-06, 9.819000000001188e-06, 9.833000000000758e-06, 9.806000000001092e-06, 9.818999999997718e-06, 9.860999999999898e-06, 9.818999999994249e-06, 9.819000000001188e-06, 9.847000000000328e-06, 9.819000000001188e-06, 9.847000000000328e-06, 9.833000000000758e-06, 9.805000000001618e-06, 9.834000000000231e-06, 9.846999999993389e-06, 9.874999999999468e-06, 9.805999999994153e-06, 9.833999999993293e-06, 9.820000000000662e-06, 9.819000000001188e-06]</msg>
<status status="PASS" starttime="20201115 22:11:55.334" endtime="20201115 22:11:55.337"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:55.329" endtime="20201115 22:11:55.337"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:55.339" endtime="20201115 22:11:55.341"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:55.343" endtime="20201115 22:11:55.362"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:55.341" endtime="20201115 22:11:55.363"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:55.338" endtime="20201115 22:11:55.364"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:54.962" endtime="20201115 22:11:55.364"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:54.961" endtime="20201115 22:11:55.364"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:54.960" endtime="20201115 22:11:55.364"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:55.367" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:55.376" endtime="20201115 22:11:55.400"></status>
</kw>
<msg timestamp="20201115 22:11:55.400" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:55.374" endtime="20201115 22:11:55.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:55.403" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:55.401" endtime="20201115 22:11:55.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:55.404" endtime="20201115 22:11:55.405"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:55.371" endtime="20201115 22:11:55.406"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:55.369" endtime="20201115 22:11:55.406"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:55.413" endtime="20201115 22:11:55.700"></status>
</kw>
<msg timestamp="20201115 22:11:55.703" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023248153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023258222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:55.412" endtime="20201115 22:11:55.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:55.712" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023248153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023258222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:55.705" endtime="20201115 22:11:55.712"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:55.713" endtime="20201115 22:11:55.715"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:55.409" endtime="20201115 22:11:55.715"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:55.407" endtime="20201115 22:11:55.716"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:55.720" level="INFO">${RESULT} = [{'time': 0.023258222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0068999999997968e-05, 'source_diff': 1.0068999999997968e-05}, {'time': 0.023506792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:55.716" endtime="20201115 22:11:55.720"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:55.734" level="INFO">${OVERHEAD} = {'time': [0.023258222, 0.023506792, 0.023750903, 0.023998292, 0.024247097, 0.024494694, 0.024742889, 0.024990222, 0.025235528, 0.025483625, 0.025727958, 0.0259735, 0.026224514, 0.026471958, 0.0267185,...</msg>
<status status="PASS" starttime="20201115 22:11:55.721" endtime="20201115 22:11:55.734"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:55.738" level="INFO">NAME: 00-overhead-22-remove</msg>
<status status="PASS" starttime="20201115 22:11:55.737" endtime="20201115 22:11:55.739"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:55.741" level="INFO">VALUE: [1.0068999999997968e-05, 1.0069999999997442e-05, 1.0070000000000912e-05, 1.0084000000000481e-05, 1.0096999999997108e-05, 1.0069000000001438e-05, 1.0111000000000148e-05, 1.0027999999998732e-05, 1.0070000000000912e-05, 1.0083000000001008e-05, 1.0068999999997968e-05, 1.0013999999999162e-05, 1.0070000000000912e-05, 1.0069000000001438e-05, 1.0124999999999718e-05, 1.0097000000000578e-05, 1.0054999999998399e-05, 1.0069000000001438e-05, 1.0097000000000578e-05, 1.0097000000000578e-05, 1.0083000000001008e-05, 1.0068999999997968e-05, 1.0083000000001008e-05, 1.0111000000000148e-05, 1.0068999999997968e-05, 1.0068999999997968e-05, 1.0082999999997538e-05, 1.0070000000000912e-05, 1.0069999999997442e-05, 1.0054999999998399e-05, 1.0097000000000578e-05, 1.0069000000001438e-05, 1.0069000000001438e-05, 1.0069000000001438e-05, 1.0083000000001008e-05, 1.0068999999994499e-05, 1.001299999999622e-05, 1.0084000000000481e-05, 1.0083999999993543e-05, 1.0070000000000912e-05, 1.0069000000001438e-05, 1.0069000000001438e-05, 1.0069000000001438e-05, 1.0069000000001438e-05, 1.0056000000001342e-05, 1.0083000000001008e-05, 1.0070000000000912e-05, 1.0014000000002632e-05, 1.0084000000000481e-05, 1.0054999999994929e-05]</msg>
<status status="PASS" starttime="20201115 22:11:55.739" endtime="20201115 22:11:55.742"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:55.735" endtime="20201115 22:11:55.742"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:55.745" endtime="20201115 22:11:55.746"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:55.748" endtime="20201115 22:11:55.768"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:55.747" endtime="20201115 22:11:55.769"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:55.743" endtime="20201115 22:11:55.769"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:55.367" endtime="20201115 22:11:55.769"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:55.365" endtime="20201115 22:11:55.770"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:55.365" endtime="20201115 22:11:55.770"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:55.772" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:55.781" endtime="20201115 22:11:55.806"></status>
</kw>
<msg timestamp="20201115 22:11:55.806" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:55.780" endtime="20201115 22:11:55.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:55.809" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:55.807" endtime="20201115 22:11:55.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:55.810" endtime="20201115 22:11:55.812"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:55.777" endtime="20201115 22:11:55.812"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:55.775" endtime="20201115 22:11:55.813"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:55.819" endtime="20201115 22:11:56.107"></status>
</kw>
<msg timestamp="20201115 22:11:56.110" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023982583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023992903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:55.818" endtime="20201115 22:11:56.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:56.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023982583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023992903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:56.111" endtime="20201115 22:11:56.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:56.119" endtime="20201115 22:11:56.121"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:55.815" endtime="20201115 22:11:56.122"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:55.813" endtime="20201115 22:11:56.122"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:56.126" level="INFO">${RESULT} = [{'time': 0.023992903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0320000000001162e-05, 'source_diff': 1.0320000000001162e-05}, {'time': 0.024255806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:56.123" endtime="20201115 22:11:56.127"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:56.141" level="INFO">${OVERHEAD} = {'time': [0.023992903, 0.024255806, 0.024516111, 0.024773222, 0.025032792, 0.025292167, 0.025550944, 0.025808139, 0.026070014, 0.026326931, 0.026584569, 0.026847792, 0.027108889, 0.0273715, 0.02763155...</msg>
<status status="PASS" starttime="20201115 22:11:56.128" endtime="20201115 22:11:56.141"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:56.146" level="INFO">NAME: 00-overhead-23-remove</msg>
<status status="PASS" starttime="20201115 22:11:56.145" endtime="20201115 22:11:56.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:56.149" level="INFO">VALUE: [1.0320000000001162e-05, 1.0320000000001162e-05, 1.0347000000000828e-05, 1.0319000000001688e-05, 1.0306000000001592e-05, 1.0348000000000301e-05, 1.0346999999997358e-05, 1.0333000000001258e-05, 1.0319999999997692e-05, 1.0348000000000301e-05, 1.0318999999998218e-05, 1.0374999999999968e-05, 1.0320000000001162e-05, 1.0333000000001258e-05, 1.0334000000000731e-05, 1.0320000000001162e-05, 1.0334000000000731e-05, 1.0249999999999843e-05, 1.0334000000000731e-05, 1.0304999999998649e-05, 1.0333000000001258e-05, 1.0348000000000301e-05, 1.0334000000000731e-05, 1.0304999999998649e-05, 1.0333000000001258e-05, 1.0332999999997788e-05, 1.0305000000002118e-05, 1.0333000000001258e-05, 1.0333000000001258e-05, 1.0347000000000828e-05, 1.0306000000001592e-05, 1.0348000000000301e-05, 1.0320000000001162e-05, 1.0320000000001162e-05, 1.0318999999994749e-05, 1.0320000000001162e-05, 1.0333000000001258e-05, 1.0319000000001688e-05, 1.0333000000001258e-05, 1.0319000000001688e-05, 1.0333000000001258e-05, 1.0320000000001162e-05, 1.0333000000001258e-05, 1.0292000000002022e-05, 1.0333000000001258e-05, 1.0320000000001162e-05, 1.0305000000002118e-05, 1.0347000000000828e-05, 1.0333000000001258e-05, 1.0320000000001162e-05]</msg>
<status status="PASS" starttime="20201115 22:11:56.147" endtime="20201115 22:11:56.149"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:56.142" endtime="20201115 22:11:56.150"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:56.152" endtime="20201115 22:11:56.153"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:56.156" endtime="20201115 22:11:56.175"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:56.154" endtime="20201115 22:11:56.176"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:56.150" endtime="20201115 22:11:56.176"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:55.773" endtime="20201115 22:11:56.177"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:55.771" endtime="20201115 22:11:56.177"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:55.770" endtime="20201115 22:11:56.177"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:56.179" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:56.188" endtime="20201115 22:11:56.210"></status>
</kw>
<msg timestamp="20201115 22:11:56.211" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:56.187" endtime="20201115 22:11:56.211"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:56.213" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:56.212" endtime="20201115 22:11:56.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:56.215" endtime="20201115 22:11:56.216"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:56.184" endtime="20201115 22:11:56.217"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:56.182" endtime="20201115 22:11:56.217"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:56.224" endtime="20201115 22:11:56.512"></status>
</kw>
<msg timestamp="20201115 22:11:56.515" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023272292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023282875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:56.222" endtime="20201115 22:11:56.516"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:56.524" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023272292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023282875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:56.517" endtime="20201115 22:11:56.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:56.525" endtime="20201115 22:11:56.527"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:56.220" endtime="20201115 22:11:56.528"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:56.218" endtime="20201115 22:11:56.528"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:56.532" level="INFO">${RESULT} = [{'time': 0.023282875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0583000000001508e-05, 'source_diff': 1.0583000000001508e-05}, {'time': 0.023558667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:56.529" endtime="20201115 22:11:56.532"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:56.546" level="INFO">${OVERHEAD} = {'time': [0.023282875, 0.023558667, 0.023831806, 0.024105389, 0.024380639, 0.024652056, 0.02492775, 0.025198764, 0.025473597, 0.025746472, 0.026019306, 0.026289111, 0.026560556, 0.026830375, 0.0271063...</msg>
<status status="PASS" starttime="20201115 22:11:56.533" endtime="20201115 22:11:56.546"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:56.551" level="INFO">NAME: 00-overhead-24-remove</msg>
<status status="PASS" starttime="20201115 22:11:56.550" endtime="20201115 22:11:56.551"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:56.553" level="INFO">VALUE: [1.0583000000001508e-05, 1.0583999999997512e-05, 1.0556000000001842e-05, 1.0570000000001412e-05, 1.0582999999998038e-05, 1.0597999999997082e-05, 1.0568999999998469e-05, 1.0569999999997942e-05, 1.0569000000001938e-05, 1.0582999999998038e-05, 1.0583999999997512e-05, 1.0625000000000218e-05, 1.0569999999997942e-05, 1.0555999999998372e-05, 1.0597000000001078e-05, 1.0569000000001938e-05, 1.0570000000001412e-05, 1.0570000000001412e-05, 1.0569999999997942e-05, 1.0569000000001938e-05, 1.0597000000001078e-05, 1.0596999999997608e-05, 1.0555999999998372e-05, 1.0584000000000982e-05, 1.0540999999999329e-05, 1.0568999999998469e-05, 1.0570000000001412e-05, 1.0570000000001412e-05, 1.0570000000001412e-05, 1.0569000000001938e-05, 1.0568999999994999e-05, 1.0570000000001412e-05, 1.0569000000001938e-05, 1.0569000000001938e-05, 1.0569999999994473e-05, 1.0556000000001842e-05, 1.0597000000001078e-05, 1.0596999999994139e-05, 1.0513999999996193e-05, 1.0570000000001412e-05, 1.0570000000001412e-05, 1.0611000000000648e-05, 1.0569000000001938e-05, 1.0570000000001412e-05, 1.0570000000001412e-05, 1.0584000000000982e-05, 1.0583000000001508e-05, 1.0583000000001508e-05, 1.0584000000000982e-05, 1.0556000000001842e-05]</msg>
<status status="PASS" starttime="20201115 22:11:56.552" endtime="20201115 22:11:56.554"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:56.547" endtime="20201115 22:11:56.554"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:56.557" endtime="20201115 22:11:56.558"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:56.560" endtime="20201115 22:11:56.579"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:56.558" endtime="20201115 22:11:56.580"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:56.555" endtime="20201115 22:11:56.581"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:56.180" endtime="20201115 22:11:56.581"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:56.178" endtime="20201115 22:11:56.581"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:56.177" endtime="20201115 22:11:56.581"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:11:56.584" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:56.593" endtime="20201115 22:11:56.616"></status>
</kw>
<msg timestamp="20201115 22:11:56.616" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:56.591" endtime="20201115 22:11:56.617"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:56.619" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:11:56.617" endtime="20201115 22:11:56.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:56.620" endtime="20201115 22:11:56.622"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:56.589" endtime="20201115 22:11:56.622"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:56.586" endtime="20201115 22:11:56.623"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:56.630" endtime="20201115 22:11:56.917"></status>
</kw>
<msg timestamp="20201115 22:11:56.920" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023226986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023237806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:56.628" endtime="20201115 22:11:56.920"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:11:56.928" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023226986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023237806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:11:56.921" endtime="20201115 22:11:56.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:56.929" endtime="20201115 22:11:56.931"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:56.625" endtime="20201115 22:11:56.932"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:56.623" endtime="20201115 22:11:56.932"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:11:56.936" level="INFO">${RESULT} = [{'time': 0.023237806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0819999999998192e-05, 'source_diff': 1.0819999999998192e-05}, {'time': 0.023526722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:11:56.933" endtime="20201115 22:11:56.937"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:11:56.950" level="INFO">${OVERHEAD} = {'time': [0.023237806, 0.023526722, 0.023811847, 0.024100278, 0.024382681, 0.024669708, 0.024954556, 0.025238403, 0.025526597, 0.025815764, 0.026101264, 0.026387972, 0.026671319, 0.026960472, 0.027244...</msg>
<status status="PASS" starttime="20201115 22:11:56.937" endtime="20201115 22:11:56.950"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:11:56.955" level="INFO">NAME: 00-overhead-25-remove</msg>
<status status="PASS" starttime="20201115 22:11:56.954" endtime="20201115 22:11:56.955"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:11:56.957" level="INFO">VALUE: [1.0819999999998192e-05, 1.0790999999999579e-05, 1.0847000000001328e-05, 1.0819999999998192e-05, 1.0819999999998192e-05, 1.0846999999997858e-05, 1.0819999999998192e-05, 1.0819999999998192e-05, 1.0750000000000343e-05, 1.0833000000001758e-05, 1.0832999999998288e-05, 1.0832999999998288e-05, 1.0818999999998719e-05, 1.0818999999998719e-05, 1.0833000000001758e-05, 1.0804999999999149e-05, 1.0820000000001662e-05, 1.0804999999999149e-05, 1.0847000000001328e-05, 1.0818999999998719e-05, 1.0820000000001662e-05, 1.0806000000002092e-05, 1.0804999999999149e-05, 1.0777000000000009e-05, 1.0820000000001662e-05, 1.0818999999998719e-05, 1.0818999999998719e-05, 1.0805999999998622e-05, 1.0820000000001662e-05, 1.0875000000000468e-05, 1.0820000000001662e-05, 1.0806000000002092e-05, 1.0819000000002188e-05, 1.0819999999994723e-05, 1.0777000000003478e-05, 1.0834000000001232e-05, 1.0819000000002188e-05, 1.0834000000001232e-05, 1.0819000000002188e-05, 1.0834000000001232e-05, 1.0806000000002092e-05, 1.0833000000001758e-05, 1.0819000000002188e-05, 1.0763999999996443e-05, 1.0820000000001662e-05, 1.0820000000001662e-05, 1.0847000000001328e-05, 1.0832999999994819e-05, 1.0820000000001662e-05, 1.0833000000001758e-05]</msg>
<status status="PASS" starttime="20201115 22:11:56.956" endtime="20201115 22:11:56.958"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:56.951" endtime="20201115 22:11:56.958"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:11:56.961" endtime="20201115 22:11:56.962"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:56.964" endtime="20201115 22:11:56.984"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:56.963" endtime="20201115 22:11:56.984"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:56.959" endtime="20201115 22:11:56.985"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:56.584" endtime="20201115 22:11:56.985"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:56.582" endtime="20201115 22:11:56.985"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:56.582" endtime="20201115 22:11:56.986"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:46.949" endtime="20201115 22:11:56.986"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="teardown">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:11:56.992" endtime="20201115 22:11:57.012"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:56.990" endtime="20201115 22:11:57.012"></status>
</kw>
<status status="PASS" starttime="20201115 22:11:56.988" endtime="20201115 22:11:57.012"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:11:43.848" endtime="20201115 22:11:57.013" critical="yes"></status>
</test>
<status status="PASS" starttime="20201115 22:11:19.108" endtime="20201115 22:11:57.019"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_ztimer_benchmarks</item>
<item name="RIOT-Board">arduino-due</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="PASS" starttime="20201115 22:11:07.897" endtime="20201115 22:11:57.040"></status>
</suite>
<statistics>
<total>
<stat pass="5" fail="0">Critical Tests</stat>
<stat pass="5" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="5" fail="0">APP_tests_ztimer_benchmarks</stat>
<stat pass="5" fail="0">BOARD_arduino-due</stat>
<stat pass="5" fail="0">dev</stat>
</tag>
<suite>
<stat pass="5" fail="0" id="s1" name="tests_ztimer_benchmarks">tests_ztimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_ztimer_benchmarks.Timer Version</stat>
<stat pass="4" fail="0" id="s1-s2" name="Timer Overhead">tests_ztimer_benchmarks.Timer Overhead</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
