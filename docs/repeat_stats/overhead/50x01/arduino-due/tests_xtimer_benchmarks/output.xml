<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201115 22:12:12.638" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201115 22:12:16.280" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201115 22:12:16.288" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201115 22:12:17.411" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201115 22:12:16.279" endtime="20201115 22:12:17.412"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201115 22:12:17.414" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201115 22:12:17.413" endtime="20201115 22:12:17.415"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:16.277" endtime="20201115 22:12:17.415"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:17.418" endtime="20201115 22:12:17.658"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:17.416" endtime="20201115 22:12:17.659"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:17.671" endtime="20201115 22:12:20.694"></status>
</kw>
<msg timestamp="20201115 22:12:20.696" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:17.670" endtime="20201115 22:12:20.696"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:20.701" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:20.698" endtime="20201115 22:12:20.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:12:20.707" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:12:20.703" endtime="20201115 22:12:20.708"></status>
</kw>
<status status="FAIL" starttime="20201115 22:12:17.667" endtime="20201115 22:12:20.709"></status>
</kw>
<status status="FAIL" starttime="20201115 22:12:17.665" endtime="20201115 22:12:20.710"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:17.664" endtime="20201115 22:12:20.711"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:12:20.719" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:12:20.717" endtime="20201115 22:12:20.720"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:20.713" endtime="20201115 22:12:20.720"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:17.663" endtime="20201115 22:12:20.720"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:17.662" endtime="20201115 22:12:20.721"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:20.722" endtime="20201115 22:12:20.725"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:17.661" endtime="20201115 22:12:20.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:20.728" endtime="20201115 22:12:20.731"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:17.659" endtime="20201115 22:12:20.732"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:16.275" endtime="20201115 22:12:20.733"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:20.745" endtime="20201115 22:12:20.765"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:20.743" endtime="20201115 22:12:20.765"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:20.780" endtime="20201115 22:12:23.800"></status>
</kw>
<msg timestamp="20201115 22:12:23.801" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:20.777" endtime="20201115 22:12:23.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:23.807" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:23.804" endtime="20201115 22:12:23.807"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:12:23.813" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:12:23.809" endtime="20201115 22:12:23.813"></status>
</kw>
<status status="FAIL" starttime="20201115 22:12:20.774" endtime="20201115 22:12:23.814"></status>
</kw>
<status status="FAIL" starttime="20201115 22:12:20.772" endtime="20201115 22:12:23.816"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:20.770" endtime="20201115 22:12:23.816"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:12:23.824" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:12:23.822" endtime="20201115 22:12:23.825"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:23.818" endtime="20201115 22:12:23.825"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:20.770" endtime="20201115 22:12:23.825"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:20.769" endtime="20201115 22:12:23.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:23.827" endtime="20201115 22:12:23.830"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:20.768" endtime="20201115 22:12:23.831"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:20.766" endtime="20201115 22:12:23.832"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:20.742" endtime="20201115 22:12:23.833"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:23.848" endtime="20201115 22:12:23.862"></status>
</kw>
<msg timestamp="20201115 22:12:23.863" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:23.844" endtime="20201115 22:12:23.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:23.868" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:23.865" endtime="20201115 22:12:23.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:23.870" endtime="20201115 22:12:23.872"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:23.839" endtime="20201115 22:12:23.872"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:23.835" endtime="20201115 22:12:23.873"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:23.877" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201115 22:12:23.876" endtime="20201115 22:12:23.878"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:23.880" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201115 22:12:23.878" endtime="20201115 22:12:23.880"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:23.874" endtime="20201115 22:12:23.880"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:12:20.734" endtime="20201115 22:12:23.881" critical="yes"></status>
</test>
<status status="PASS" starttime="20201115 22:12:12.750" endtime="20201115 22:12:23.885"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201115 22:12:23.939" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201115 22:12:23.948" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201115 22:12:25.026" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201115 22:12:23.938" endtime="20201115 22:12:25.027"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201115 22:12:25.029" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201115 22:12:25.028" endtime="20201115 22:12:25.030"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:23.937" endtime="20201115 22:12:25.030"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:25.032" endtime="20201115 22:12:25.251"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:25.031" endtime="20201115 22:12:25.252"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:25.264" endtime="20201115 22:12:28.285"></status>
</kw>
<msg timestamp="20201115 22:12:28.286" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:25.263" endtime="20201115 22:12:28.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:28.291" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:28.288" endtime="20201115 22:12:28.292"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:12:28.297" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:12:28.293" endtime="20201115 22:12:28.298"></status>
</kw>
<status status="FAIL" starttime="20201115 22:12:25.260" endtime="20201115 22:12:28.299"></status>
</kw>
<status status="FAIL" starttime="20201115 22:12:25.258" endtime="20201115 22:12:28.301"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:25.257" endtime="20201115 22:12:28.301"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:12:28.309" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:12:28.307" endtime="20201115 22:12:28.310"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:28.303" endtime="20201115 22:12:28.310"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:25.256" endtime="20201115 22:12:28.310"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:25.255" endtime="20201115 22:12:28.311"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:28.312" endtime="20201115 22:12:28.315"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:25.254" endtime="20201115 22:12:28.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:28.318" endtime="20201115 22:12:28.321"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:25.253" endtime="20201115 22:12:28.322"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:23.936" endtime="20201115 22:12:28.323"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO/">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:28.333" endtime="20201115 22:12:28.353"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:28.331" endtime="20201115 22:12:28.354"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:28.367" endtime="20201115 22:12:31.388"></status>
</kw>
<msg timestamp="20201115 22:12:31.389" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:28.365" endtime="20201115 22:12:31.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:31.394" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:31.391" endtime="20201115 22:12:31.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:12:31.400" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:12:31.397" endtime="20201115 22:12:31.401"></status>
</kw>
<status status="FAIL" starttime="20201115 22:12:28.362" endtime="20201115 22:12:31.402"></status>
</kw>
<status status="FAIL" starttime="20201115 22:12:28.360" endtime="20201115 22:12:31.404"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:28.359" endtime="20201115 22:12:31.404"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:12:31.412" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:12:31.410" endtime="20201115 22:12:31.412"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:31.406" endtime="20201115 22:12:31.413"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:28.358" endtime="20201115 22:12:31.413"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:28.357" endtime="20201115 22:12:31.414"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:31.415" endtime="20201115 22:12:31.418"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:28.356" endtime="20201115 22:12:31.419"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:28.354" endtime="20201115 22:12:31.420"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:28.329" endtime="20201115 22:12:31.421"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure GPIO Overhead</arg>
</arguments>
<msg timestamp="20201115 22:12:31.426" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:31.442" endtime="20201115 22:12:31.458"></status>
</kw>
<msg timestamp="20201115 22:12:31.459" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:31.439" endtime="20201115 22:12:31.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:31.464" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:31.461" endtime="20201115 22:12:31.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:31.466" endtime="20201115 22:12:31.470"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:31.433" endtime="20201115 22:12:31.471"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:31.430" endtime="20201115 22:12:31.472"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:31.486" endtime="20201115 22:12:31.760"></status>
</kw>
<msg timestamp="20201115 22:12:31.762" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.101035986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.101041944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:31.482" endtime="20201115 22:12:31.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:31.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.101035986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.101041944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:31.763" endtime="20201115 22:12:31.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:31.768" endtime="20201115 22:12:31.770"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:31.477" endtime="20201115 22:12:31.770"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:31.473" endtime="20201115 22:12:31.771"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:31.774" level="INFO">${RESULT} = [{'time': 3.101041944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9580000000281075e-06, 'source_diff': 5.9580000000281075e-06}, {'time': 3.101050514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:12:31.771" endtime="20201115 22:12:31.774"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:31.782" level="INFO">${GPIO_OVERHEAD} = {'time': [3.101041944, 3.101050514, 3.101057639, 3.101069917, 3.101079236, 3.101089875, 3.101099694, 3.101110458, 3.101119361, 3.101129403, 3.101139097, 3.101147083, 3.101155181, 3.101161958, 3.101173...</msg>
<status status="PASS" starttime="20201115 22:12:31.775" endtime="20201115 22:12:31.783"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:31.787" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201115 22:12:31.786" endtime="20201115 22:12:31.787"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:31.789" level="INFO">VALUE: [5.9580000000281075e-06, 4.347000000404222e-06, 3.3469999998203548e-06, 5.694999999583672e-06, 6.8469999998654885e-06, 5.514000000150787e-06, 3.347000000264444e-06, 6.625000000148873e-06, 2.693999999969776e-06, 6.54199999994276e-06, 5.1659999997788475e-06, 5.471999999784316e-06, 2.97300000040579e-06, 4.346999999960133e-06, 6.943999999897699e-06, 2.9719999998789604e-06, 2.5689999998412816e-06, 5.819000000073515e-06, 3.7640000001282203e-06, 3.194000000039665e-06, 4.208000000005541e-06, 5.347999999738562e-06, 6.235999999937292e-06, 4.124999999799428e-06, 4.639000000139504e-06]</msg>
<status status="PASS" starttime="20201115 22:12:31.788" endtime="20201115 22:12:31.789"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:31.783" endtime="20201115 22:12:31.790"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:31.792" endtime="20201115 22:12:31.793"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:31.795" endtime="20201115 22:12:31.815"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:31.794" endtime="20201115 22:12:31.816"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:31.790" endtime="20201115 22:12:31.816"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:31.427" endtime="20201115 22:12:31.816"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:31.423" endtime="20201115 22:12:31.817"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:31.821" endtime="20201115 22:12:31.840"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:31.819" endtime="20201115 22:12:31.841"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:31.818" endtime="20201115 22:12:31.841"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:12:28.323" endtime="20201115 22:12:31.842" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:31.849" endtime="20201115 22:12:31.868"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:31.848" endtime="20201115 22:12:31.869"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:31.883" endtime="20201115 22:12:34.905"></status>
</kw>
<msg timestamp="20201115 22:12:34.906" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:31.881" endtime="20201115 22:12:34.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:34.911" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:34.908" endtime="20201115 22:12:34.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:12:34.917" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:12:34.913" endtime="20201115 22:12:34.917"></status>
</kw>
<status status="FAIL" starttime="20201115 22:12:31.878" endtime="20201115 22:12:34.919"></status>
</kw>
<status status="FAIL" starttime="20201115 22:12:31.875" endtime="20201115 22:12:34.920"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:31.874" endtime="20201115 22:12:34.921"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:12:34.928" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:12:34.927" endtime="20201115 22:12:34.929"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:34.923" endtime="20201115 22:12:34.930"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:31.873" endtime="20201115 22:12:34.931"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:31.873" endtime="20201115 22:12:34.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:34.933" endtime="20201115 22:12:34.936"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:31.871" endtime="20201115 22:12:34.937"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:31.870" endtime="20201115 22:12:34.938"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:31.846" endtime="20201115 22:12:34.938"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer Now Overhead</arg>
</arguments>
<msg timestamp="20201115 22:12:34.943" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:34.959" endtime="20201115 22:12:34.976"></status>
</kw>
<msg timestamp="20201115 22:12:34.977" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:34.956" endtime="20201115 22:12:34.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:34.981" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:34.979" endtime="20201115 22:12:34.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:34.984" endtime="20201115 22:12:34.987"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:34.950" endtime="20201115 22:12:34.988"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:34.947" endtime="20201115 22:12:34.989"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:34.998" endtime="20201115 22:12:35.287"></status>
</kw>
<msg timestamp="20201115 22:12:35.290" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.102037083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.102038667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:34.996" endtime="20201115 22:12:35.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:35.298" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.102037083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.102038667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:35.291" endtime="20201115 22:12:35.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:35.299" endtime="20201115 22:12:35.301"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:34.994" endtime="20201115 22:12:35.301"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:34.990" endtime="20201115 22:12:35.302"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:35.306" level="INFO">${RESULT} = [{'time': 3.102038667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5840000000544308e-06, 'source_diff': 1.5840000000544308e-06}, {'time': 3.102045764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:12:35.303" endtime="20201115 22:12:35.306"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:35.319" level="INFO">${OVERHEAD} = {'time': [3.102038667, 3.102045764, 3.102053514, 3.102057486, 3.102064889, 3.102069639, 3.102073528, 3.102079278, 3.102083458, 3.102088778, 3.102096972, 3.102101556, 3.102108, 3.102115139, 3.102122958...</msg>
<status status="PASS" starttime="20201115 22:12:35.307" endtime="20201115 22:12:35.319"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:35.323" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201115 22:12:35.322" endtime="20201115 22:12:35.324"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:35.326" level="INFO">VALUE: [1.5840000000544308e-06, 1.6110000000679747e-06, 1.5700000002283332e-06, 1.6249999998940723e-06, 1.6110000000679747e-06, 1.6250000003381615e-06, 1.5840000000544308e-06, 1.6250000003381615e-06, 1.6249999998940723e-06, 1.6110000000679747e-06, 1.639000000164259e-06, 1.612000000150715e-06, 1.6669999998164542e-06, 1.6249999998940723e-06, 1.6249999998940723e-06, 1.6110000000679747e-06, 1.6110000000679747e-06, 1.639000000164259e-06, 1.6110000000679747e-06, 1.5690000001455928e-06, 1.6249999998940723e-06, 1.6249999998940723e-06, 1.6249999998940723e-06, 1.6249999998940723e-06, 1.5970000002418772e-06, 1.6110000000679747e-06, 1.6110000000679747e-06, 1.6389999997201699e-06, 1.6249999998940723e-06, 1.6249999998940723e-06, 1.6110000000679747e-06, 1.639000000164259e-06, 1.6110000000679747e-06, 1.6249999998940723e-06, 1.6110000000679747e-06, 1.6110000000679747e-06, 1.666000000177803e-06, 1.6250000003381615e-06, 1.6250000003381615e-06, 1.6519999999076163e-06, 1.5840000000544308e-06, 1.6249999998940723e-06, 1.6249999998940723e-06, 1.6250000003381615e-06, 1.6110000000679747e-06, 1.6389999997201699e-06, 1.6249999998940723e-06, 1.6249999998940723e-06, 1.6249999998940723e-06, 1.6249999998940723e-06]</msg>
<status status="PASS" starttime="20201115 22:12:35.324" endtime="20201115 22:12:35.326"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:35.320" endtime="20201115 22:12:35.327"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:35.329" endtime="20201115 22:12:35.330"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:35.332" endtime="20201115 22:12:35.352"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:35.331" endtime="20201115 22:12:35.352"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:35.328" endtime="20201115 22:12:35.353"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:34.944" endtime="20201115 22:12:35.353"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:34.941" endtime="20201115 22:12:35.353"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:35.358" endtime="20201115 22:12:35.377"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:35.356" endtime="20201115 22:12:35.378"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:35.355" endtime="20201115 22:12:35.378"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:12:31.843" endtime="20201115 22:12:35.378" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set List">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:35.386" endtime="20201115 22:12:35.405"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:35.384" endtime="20201115 22:12:35.406"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:35.420" endtime="20201115 22:12:38.440"></status>
</kw>
<msg timestamp="20201115 22:12:38.441" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:35.418" endtime="20201115 22:12:38.442"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:38.447" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:38.444" endtime="20201115 22:12:38.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:12:38.453" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:12:38.449" endtime="20201115 22:12:38.453"></status>
</kw>
<status status="FAIL" starttime="20201115 22:12:35.415" endtime="20201115 22:12:38.455"></status>
</kw>
<status status="FAIL" starttime="20201115 22:12:35.412" endtime="20201115 22:12:38.456"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:35.411" endtime="20201115 22:12:38.457"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:12:38.464" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:12:38.463" endtime="20201115 22:12:38.465"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:38.459" endtime="20201115 22:12:38.465"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:35.410" endtime="20201115 22:12:38.466"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:35.410" endtime="20201115 22:12:38.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:38.468" endtime="20201115 22:12:38.471"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:35.408" endtime="20201115 22:12:38.472"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:35.407" endtime="20201115 22:12:38.473"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:35.383" endtime="20201115 22:12:38.473"></status>
</kw>
<kw name="${n} IN RANGE [ 25 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:38.481" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:38.502" endtime="20201115 22:12:38.517"></status>
</kw>
<msg timestamp="20201115 22:12:38.518" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:38.499" endtime="20201115 22:12:38.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:38.523" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:38.520" endtime="20201115 22:12:38.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:38.525" endtime="20201115 22:12:38.529"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:38.492" endtime="20201115 22:12:38.530"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:38.488" endtime="20201115 22:12:38.531"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:38.544" endtime="20201115 22:12:38.843"></status>
</kw>
<msg timestamp="20201115 22:12:38.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.108030472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.108035542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:38.541" endtime="20201115 22:12:38.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:38.854" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.108030472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.108035542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:38.847" endtime="20201115 22:12:38.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:38.855" endtime="20201115 22:12:38.857"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:38.536" endtime="20201115 22:12:38.858"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:38.532" endtime="20201115 22:12:38.858"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:38.862" level="INFO">${RESULT} = [{'time': 3.108035542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.070000000273467e-06, 'source_diff': 5.070000000273467e-06}, {'time': 3.108098875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:12:38.859" endtime="20201115 22:12:38.862"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:38.877" level="INFO">${OVERHEAD} = {'time': [3.108035542, 3.108098875, 3.108161069, 3.108223542, 3.108286528, 3.108350375, 3.108411931, 3.108475694, 3.108535944, 3.108600653, 3.108661764, 3.108724014, 3.108788167, 3.108850514, 3.108911...</msg>
<status status="PASS" starttime="20201115 22:12:38.863" endtime="20201115 22:12:38.877"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:38.881" level="INFO">NAME: 00-overhead-1-set</msg>
<status status="PASS" starttime="20201115 22:12:38.880" endtime="20201115 22:12:38.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:38.884" level="INFO">VALUE: [5.070000000273467e-06, 5.05600000000328e-06, 5.068999999746637e-06, 5.0420000001771825e-06, 4.971999999714427e-06, 5.0690000001907265e-06, 5.05600000000328e-06, 5.05499999992054e-06, 5.012999999998158e-06, 5.05600000000328e-06, 5.041999999733093e-06, 5.110999999669019e-06, 5.070000000273467e-06, 5.013999999636809e-06, 5.05600000000328e-06, 5.05600000000328e-06, 5.055000000364629e-06, 5.068999999746637e-06, 5.0690000001907265e-06, 5.05600000000328e-06, 5.05600000000328e-06, 5.05600000000328e-06, 5.05600000000328e-06, 5.05499999992054e-06, 4.999999999810711e-06, 5.05600000000328e-06, 5.014000000080898e-06, 5.05600000000328e-06, 5.069999999829378e-06, 5.083999999655475e-06, 5.05600000000328e-06, 5.068999999746637e-06, 5.05600000000328e-06, 5.068999999746637e-06, 5.069999999829378e-06, 4.973000000241257e-06, 5.000000000254801e-06, 5.069999999829378e-06, 5.05499999992054e-06, 5.0420000001771825e-06, 5.069999999829378e-06, 5.05499999992054e-06, 5.0690000001907265e-06, 5.026999999824255e-06, 5.05499999992054e-06, 5.05600000000328e-06, 5.05499999992054e-06, 5.055000000364629e-06, 5.05499999992054e-06, 5.014000000080898e-06]</msg>
<status status="PASS" starttime="20201115 22:12:38.882" endtime="20201115 22:12:38.884"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:38.878" endtime="20201115 22:12:38.885"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:38.887" endtime="20201115 22:12:38.888"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:38.890" endtime="20201115 22:12:38.910"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:38.889" endtime="20201115 22:12:38.910"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:38.885" endtime="20201115 22:12:38.911"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:38.483" endtime="20201115 22:12:38.911"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:38.478" endtime="20201115 22:12:38.912"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:38.476" endtime="20201115 22:12:38.912"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:38.914" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:38.923" endtime="20201115 22:12:38.937"></status>
</kw>
<msg timestamp="20201115 22:12:38.937" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:38.921" endtime="20201115 22:12:38.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:38.940" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:38.938" endtime="20201115 22:12:38.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:38.941" endtime="20201115 22:12:38.942"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:38.919" endtime="20201115 22:12:38.943"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:38.916" endtime="20201115 22:12:38.943"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:38.949" endtime="20201115 22:12:39.236"></status>
</kw>
<msg timestamp="20201115 22:12:39.239" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022236403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022241056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:38.948" endtime="20201115 22:12:39.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:39.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022236403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022241056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:39.240" endtime="20201115 22:12:39.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:39.248" endtime="20201115 22:12:39.250"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:38.945" endtime="20201115 22:12:39.250"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:38.944" endtime="20201115 22:12:39.250"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:39.254" level="INFO">${RESULT} = [{'time': 0.022241056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.653000000000296e-06, 'source_diff': 4.653000000000296e-06}, {'time': 0.022308208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:12:39.251" endtime="20201115 22:12:39.255"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:39.268" level="INFO">${OVERHEAD} = {'time': [0.022241056, 0.022308208, 0.022374125, 0.022443319, 0.022509486, 0.022578, 0.022647028, 0.022714111, 0.022783417, 0.022849306, 0.022916556, 0.022981917, 0.023051278, 0.023118889, 0.023184319...</msg>
<status status="PASS" starttime="20201115 22:12:39.256" endtime="20201115 22:12:39.268"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:39.272" level="INFO">NAME: 00-overhead-2-set</msg>
<status status="PASS" starttime="20201115 22:12:39.271" endtime="20201115 22:12:39.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:39.274" level="INFO">VALUE: [4.653000000000296e-06, 4.639000000000726e-06, 4.694000000003001e-06, 4.638000000001252e-06, 4.653000000000296e-06, 4.639000000000726e-06, 4.639000000000726e-06, 4.653000000000296e-06, 4.639000000000726e-06, 4.625000000001156e-06, 4.680999999999436e-06, 4.666999999999866e-06, 4.653000000000296e-06, 4.666999999999866e-06, 4.651999999997353e-06, 4.666999999999866e-06, 4.639000000000726e-06, 4.653000000000296e-06, 4.653000000000296e-06, 4.610999999998117e-06, 4.666999999999866e-06, 4.652000000000822e-06, 4.666000000000392e-06, 4.653000000000296e-06, 4.693999999999532e-06, 4.653000000000296e-06, 4.652000000000822e-06, 4.653000000000296e-06, 4.582999999998977e-06, 4.652000000000822e-06, 4.666000000000392e-06, 4.639000000000726e-06, 4.611000000001586e-06, 4.680999999999436e-06, 4.653000000000296e-06, 4.7089999999985754e-06, 4.611000000001586e-06, 4.653000000000296e-06, 4.666000000000392e-06, 4.666999999999866e-06, 4.707999999999102e-06, 4.569000000002876e-06, 4.652000000000822e-06, 4.679999999999962e-06, 4.666000000000392e-06, 4.6389999999972564e-06, 4.653000000000296e-06, 4.569000000002876e-06, 4.639000000000726e-06, 4.653000000000296e-06]</msg>
<status status="PASS" starttime="20201115 22:12:39.273" endtime="20201115 22:12:39.275"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:39.269" endtime="20201115 22:12:39.276"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:39.278" endtime="20201115 22:12:39.279"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:39.282" endtime="20201115 22:12:39.301"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:39.280" endtime="20201115 22:12:39.302"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:39.276" endtime="20201115 22:12:39.302"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:38.914" endtime="20201115 22:12:39.303"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:38.913" endtime="20201115 22:12:39.303"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:38.912" endtime="20201115 22:12:39.303"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:39.305" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:39.314" endtime="20201115 22:12:39.327"></status>
</kw>
<msg timestamp="20201115 22:12:39.327" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:39.312" endtime="20201115 22:12:39.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:39.330" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:39.328" endtime="20201115 22:12:39.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:39.331" endtime="20201115 22:12:39.332"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:39.310" endtime="20201115 22:12:39.333"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:39.308" endtime="20201115 22:12:39.333"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:39.340" endtime="20201115 22:12:39.627"></status>
</kw>
<msg timestamp="20201115 22:12:39.630" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022170847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02217625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:12:39.338" endtime="20201115 22:12:39.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:39.638" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022170847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02217625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:12:39.631" endtime="20201115 22:12:39.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:39.639" endtime="20201115 22:12:39.641"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:39.336" endtime="20201115 22:12:39.641"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:39.334" endtime="20201115 22:12:39.642"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:39.646" level="INFO">${RESULT} = [{'time': 0.02217625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.403000000001046e-06, 'source_diff': 5.403000000001046e-06}, {'time': 0.022247653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:12:39.642" endtime="20201115 22:12:39.646"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:39.659" level="INFO">${OVERHEAD} = {'time': [0.02217625, 0.022247653, 0.022319903, 0.022393181, 0.022465486, 0.022539903, 0.022613069, 0.022684139, 0.0227545, 0.022828361, 0.022899083, 0.022972889, 0.023046264, 0.023119972, 0.023191917...</msg>
<status status="PASS" starttime="20201115 22:12:39.647" endtime="20201115 22:12:39.659"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:39.663" level="INFO">NAME: 00-overhead-3-set</msg>
<status status="PASS" starttime="20201115 22:12:39.662" endtime="20201115 22:12:39.664"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:39.666" level="INFO">VALUE: [5.403000000001046e-06, 5.417000000000616e-06, 5.431000000000186e-06, 5.417000000000616e-06, 5.430000000000712e-06, 5.417000000000616e-06, 5.430000000000712e-06, 5.417000000000616e-06, 5.360999999998867e-06, 5.3889999999980065e-06, 5.402000000001572e-06, 5.417000000000616e-06, 5.403000000001046e-06, 5.415999999997673e-06, 5.431000000000186e-06, 5.402999999997576e-06, 5.417000000000616e-06, 5.403000000001046e-06, 5.403000000001046e-06, 5.403000000001046e-06, 5.416000000001142e-06, 5.416999999997146e-06, 5.431000000000186e-06, 5.417000000000616e-06, 5.431000000000186e-06, 5.402000000001572e-06, 5.416999999997146e-06, 5.415999999997673e-06, 5.389000000001476e-06, 5.402999999997576e-06, 5.416000000001142e-06, 5.431000000000186e-06, 5.417000000000616e-06, 5.402000000001572e-06, 5.417000000000616e-06, 5.415999999997673e-06, 5.417000000000616e-06, 5.401999999998103e-06, 5.417000000000616e-06, 5.417000000000616e-06, 5.402999999997576e-06, 5.360999999998867e-06, 5.416000000001142e-06, 5.430000000000712e-06, 5.403000000001046e-06, 5.416000000001142e-06, 5.374999999998437e-06, 5.444000000000282e-06, 5.403000000001046e-06, 5.374999999998437e-06]</msg>
<status status="PASS" starttime="20201115 22:12:39.664" endtime="20201115 22:12:39.667"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:39.660" endtime="20201115 22:12:39.667"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:39.669" endtime="20201115 22:12:39.671"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:39.673" endtime="20201115 22:12:39.692"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:39.671" endtime="20201115 22:12:39.693"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:39.668" endtime="20201115 22:12:39.693"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:39.306" endtime="20201115 22:12:39.693"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:39.304" endtime="20201115 22:12:39.694"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:39.303" endtime="20201115 22:12:39.694"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:39.696" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:39.705" endtime="20201115 22:12:39.719"></status>
</kw>
<msg timestamp="20201115 22:12:39.720" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:39.703" endtime="20201115 22:12:39.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:39.722" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:39.721" endtime="20201115 22:12:39.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:39.723" endtime="20201115 22:12:39.725"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:39.701" endtime="20201115 22:12:39.725"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:39.699" endtime="20201115 22:12:39.726"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:39.732" endtime="20201115 22:12:40.019"></status>
</kw>
<msg timestamp="20201115 22:12:40.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021998431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022004597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:39.731" endtime="20201115 22:12:40.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:40.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021998431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022004597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:40.023" endtime="20201115 22:12:40.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:40.031" endtime="20201115 22:12:40.033"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:39.728" endtime="20201115 22:12:40.033"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:39.727" endtime="20201115 22:12:40.034"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:40.038" level="INFO">${RESULT} = [{'time': 0.022004597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.166000000001892e-06, 'source_diff': 6.166000000001892e-06}, {'time': 0.022081653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:12:40.034" endtime="20201115 22:12:40.038"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:40.051" level="INFO">${OVERHEAD} = {'time': [0.022004597, 0.022081653, 0.022159444, 0.022238514, 0.022315486, 0.022394764, 0.022471931, 0.022548653, 0.02262575, 0.022704431, 0.022783861, 0.022860611, 0.022939125, 0.02301875, 0.02309836...</msg>
<status status="PASS" starttime="20201115 22:12:40.039" endtime="20201115 22:12:40.052"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:40.056" level="INFO">NAME: 00-overhead-4-set</msg>
<status status="PASS" starttime="20201115 22:12:40.055" endtime="20201115 22:12:40.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:40.058" level="INFO">VALUE: [6.166000000001892e-06, 6.181000000000936e-06, 6.222000000000172e-06, 6.167000000001366e-06, 6.179999999997993e-06, 6.195000000000506e-06, 6.167000000001366e-06, 6.194999999997036e-06, 6.194000000001032e-06, 6.181000000000936e-06, 6.1939999999975626e-06, 6.208000000000602e-06, 6.167000000001366e-06, 6.153000000001796e-06, 6.180000000001462e-06, 6.249999999999312e-06, 6.181000000000936e-06, 6.167000000001366e-06, 6.166999999997896e-06, 6.181000000000936e-06, 6.181000000000936e-06, 6.167000000001366e-06, 6.180000000001462e-06, 6.110999999999617e-06, 6.222000000000172e-06, 6.2229999999996455e-06, 6.1529999999983265e-06, 6.180999999997466e-06, 6.166000000001892e-06, 6.179999999997993e-06, 6.222000000000172e-06, 6.181000000000936e-06, 6.194000000001032e-06, 6.180000000001462e-06, 6.1939999999975626e-06, 6.167000000001366e-06, 6.180000000001462e-06, 6.167000000001366e-06, 6.195000000000506e-06, 6.181000000000936e-06, 6.195000000000506e-06, 6.167000000001366e-06, 6.195000000000506e-06, 6.1389999999987566e-06, 6.195000000000506e-06, 6.195000000000506e-06, 6.195000000000506e-06, 6.165999999998423e-06, 6.180000000001462e-06, 6.181000000000936e-06]</msg>
<status status="PASS" starttime="20201115 22:12:40.057" endtime="20201115 22:12:40.059"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:40.052" endtime="20201115 22:12:40.059"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:40.061" endtime="20201115 22:12:40.062"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:40.065" endtime="20201115 22:12:40.084"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:40.063" endtime="20201115 22:12:40.085"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:40.060" endtime="20201115 22:12:40.085"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:39.697" endtime="20201115 22:12:40.085"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:39.695" endtime="20201115 22:12:40.086"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:39.694" endtime="20201115 22:12:40.086"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:40.088" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:40.097" endtime="20201115 22:12:40.108"></status>
</kw>
<msg timestamp="20201115 22:12:40.109" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:40.095" endtime="20201115 22:12:40.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:40.111" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:40.110" endtime="20201115 22:12:40.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:40.112" endtime="20201115 22:12:40.114"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:40.093" endtime="20201115 22:12:40.114"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:40.090" endtime="20201115 22:12:40.115"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:40.121" endtime="20201115 22:12:40.408"></status>
</kw>
<msg timestamp="20201115 22:12:40.411" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022051972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022058931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:40.120" endtime="20201115 22:12:40.411"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:40.419" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022051972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022058931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:40.412" endtime="20201115 22:12:40.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:40.420" endtime="20201115 22:12:40.422"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:40.117" endtime="20201115 22:12:40.423"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:40.115" endtime="20201115 22:12:40.423"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:40.427" level="INFO">${RESULT} = [{'time': 0.022058931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.959000000000826e-06, 'source_diff': 6.959000000000826e-06}, {'time': 0.022146833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:12:40.424" endtime="20201115 22:12:40.427"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:40.441" level="INFO">${OVERHEAD} = {'time': [0.022058931, 0.022146833, 0.022232167, 0.022316944, 0.022403569, 0.022487139, 0.022573889, 0.02265975, 0.022746319, 0.022832333, 0.022917069, 0.023000625, 0.023084972, 0.023170014, 0.0232556...</msg>
<status status="PASS" starttime="20201115 22:12:40.428" endtime="20201115 22:12:40.442"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:40.446" level="INFO">NAME: 00-overhead-5-set</msg>
<status status="PASS" starttime="20201115 22:12:40.445" endtime="20201115 22:12:40.446"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:40.448" level="INFO">VALUE: [6.959000000000826e-06, 6.944000000001782e-06, 6.917000000002116e-06, 6.943999999998313e-06, 6.930000000002212e-06, 6.945000000001256e-06, 6.945000000001256e-06, 6.943999999998313e-06, 6.944000000001782e-06, 6.986000000000492e-06, 6.888000000000033e-06, 6.944000000001782e-06, 6.943999999998313e-06, 6.930999999998216e-06, 6.945000000001256e-06, 6.959000000000826e-06, 6.943999999998313e-06, 6.958000000001352e-06, 6.9579999999978825e-06, 6.958000000001352e-06, 6.930999999998216e-06, 6.917000000002116e-06, 6.945000000001256e-06, 6.931000000001686e-06, 6.944000000001782e-06, 6.9579999999978825e-06, 6.944000000001782e-06, 6.944999999997786e-06, 6.944000000001782e-06, 6.930999999998216e-06, 6.929999999998743e-06, 6.944000000001782e-06, 6.929999999998743e-06, 6.860999999996897e-06, 6.945000000001256e-06, 6.986000000000492e-06, 6.929999999998743e-06, 6.888000000000033e-06, 6.930000000002212e-06, 6.972000000000922e-06, 6.9719999999974525e-06, 6.931000000001686e-06, 6.9169999999986465e-06, 6.929999999998743e-06, 6.9579999999978825e-06, 6.944999999997786e-06, 6.929999999998743e-06, 6.972000000000922e-06, 6.945000000001256e-06, 6.929999999998743e-06]</msg>
<status status="PASS" starttime="20201115 22:12:40.447" endtime="20201115 22:12:40.449"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:40.442" endtime="20201115 22:12:40.449"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:40.452" endtime="20201115 22:12:40.453"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:40.455" endtime="20201115 22:12:40.474"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:40.453" endtime="20201115 22:12:40.475"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:40.450" endtime="20201115 22:12:40.475"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:40.089" endtime="20201115 22:12:40.476"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:40.087" endtime="20201115 22:12:40.476"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:40.086" endtime="20201115 22:12:40.476"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:40.478" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:40.487" endtime="20201115 22:12:40.502"></status>
</kw>
<msg timestamp="20201115 22:12:40.502" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:40.485" endtime="20201115 22:12:40.502"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:40.504" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:40.503" endtime="20201115 22:12:40.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:40.506" endtime="20201115 22:12:40.507"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:40.483" endtime="20201115 22:12:40.508"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:40.481" endtime="20201115 22:12:40.508"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:40.515" endtime="20201115 22:12:40.800"></status>
</kw>
<msg timestamp="20201115 22:12:40.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022001569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022009278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:40.513" endtime="20201115 22:12:40.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:40.812" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022001569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022009278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:40.805" endtime="20201115 22:12:40.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:40.813" endtime="20201115 22:12:40.814"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:40.510" endtime="20201115 22:12:40.815"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:40.509" endtime="20201115 22:12:40.815"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:40.819" level="INFO">${RESULT} = [{'time': 0.022009278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.709000000001576e-06, 'source_diff': 7.709000000001576e-06}, {'time': 0.022102125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:12:40.816" endtime="20201115 22:12:40.820"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:40.832" level="INFO">${OVERHEAD} = {'time': [0.022009278, 0.022102125, 0.022195417, 0.022290972, 0.022383736, 0.022476583, 0.022567917, 0.022661806, 0.022757278, 0.022851556, 0.022944833, 0.023039208, 0.023131819, 0.023227306, 0.023319...</msg>
<status status="PASS" starttime="20201115 22:12:40.820" endtime="20201115 22:12:40.833"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:40.837" level="INFO">NAME: 00-overhead-6-set</msg>
<status status="PASS" starttime="20201115 22:12:40.836" endtime="20201115 22:12:40.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:40.839" level="INFO">VALUE: [7.709000000001576e-06, 7.707999999998633e-06, 7.749999999997342e-06, 7.693999999999063e-06, 7.694000000002532e-06, 7.708000000002102e-06, 7.723000000001146e-06, 7.694999999998536e-06, 7.680999999998966e-06, 7.722999999997676e-06, 7.736000000001242e-06, 7.665999999999923e-06, 7.763000000000908e-06, 7.694999999998536e-06, 7.722999999997676e-06, 7.652000000000353e-06, 7.707999999998633e-06, 7.666999999999397e-06, 7.665999999999923e-06, 7.721999999998203e-06, 7.639000000000257e-06, 7.707999999998633e-06, 7.708000000002102e-06, 7.722000000001672e-06, 7.694999999998536e-06, 7.652000000000353e-06, 7.693999999999063e-06, 7.723000000001146e-06, 7.707999999998633e-06, 7.722999999997676e-06, 7.709000000001576e-06, 7.695000000002006e-06, 7.736000000001242e-06, 7.707999999998633e-06, 7.722000000001672e-06, 7.764000000000382e-06, 7.666999999999397e-06, 7.708999999998106e-06, 7.695000000002006e-06, 7.709000000001576e-06, 7.708000000002102e-06, 7.666999999999397e-06, 7.693999999999063e-06, 7.708000000002102e-06, 7.721999999998203e-06, 7.681000000002436e-06, 7.708999999998106e-06, 7.707999999998633e-06, 7.763000000000908e-06, 7.679999999999493e-06]</msg>
<status status="PASS" starttime="20201115 22:12:40.838" endtime="20201115 22:12:40.840"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:40.833" endtime="20201115 22:12:40.840"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:40.842" endtime="20201115 22:12:40.844"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:40.846" endtime="20201115 22:12:40.865"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:40.844" endtime="20201115 22:12:40.866"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:40.841" endtime="20201115 22:12:40.866"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:40.479" endtime="20201115 22:12:40.867"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:40.477" endtime="20201115 22:12:40.867"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:40.476" endtime="20201115 22:12:40.867"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:40.869" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:40.878" endtime="20201115 22:12:40.891"></status>
</kw>
<msg timestamp="20201115 22:12:40.892" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:40.876" endtime="20201115 22:12:40.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:40.894" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:40.893" endtime="20201115 22:12:40.895"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:40.896" endtime="20201115 22:12:40.897"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:40.874" endtime="20201115 22:12:40.898"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:40.872" endtime="20201115 22:12:40.898"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:40.905" endtime="20201115 22:12:41.190"></status>
</kw>
<msg timestamp="20201115 22:12:41.193" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022664958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022673417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:40.903" endtime="20201115 22:12:41.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:41.201" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022664958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022673417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:41.194" endtime="20201115 22:12:41.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:41.202" endtime="20201115 22:12:41.204"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:40.901" endtime="20201115 22:12:41.204"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:40.899" endtime="20201115 22:12:41.205"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:41.209" level="INFO">${RESULT} = [{'time': 0.022673417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.459000000002326e-06, 'source_diff': 8.459000000002326e-06}, {'time': 0.022772972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:12:41.206" endtime="20201115 22:12:41.209"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:41.222" level="INFO">${OVERHEAD} = {'time': [0.022673417, 0.022772972, 0.022877056, 0.022977792, 0.023080653, 0.023182792, 0.02328425, 0.023387736, 0.0234915, 0.023594944, 0.023695083, 0.023795542, 0.023897389, 0.023997708, 0.024100681...</msg>
<status status="PASS" starttime="20201115 22:12:41.210" endtime="20201115 22:12:41.222"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:41.227" level="INFO">NAME: 00-overhead-7-set</msg>
<status status="PASS" starttime="20201115 22:12:41.226" endtime="20201115 22:12:41.227"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:41.229" level="INFO">VALUE: [8.459000000002326e-06, 8.457999999999383e-06, 8.458999999998856e-06, 8.458999999998856e-06, 8.458999999998856e-06, 8.486000000001992e-06, 8.430999999999716e-06, 8.499999999998092e-06, 8.471999999998953e-06, 8.457999999999383e-06, 8.430000000000243e-06, 8.485999999998523e-06, 8.458000000002852e-06, 8.457999999999383e-06, 8.499999999998092e-06, 8.471999999998953e-06, 8.458000000002852e-06, 8.485999999998523e-06, 8.458000000002852e-06, 8.471999999998953e-06, 8.514000000001132e-06, 8.443999999999813e-06, 8.458000000002852e-06, 8.500000000001562e-06, 8.471999999998953e-06, 8.458999999998856e-06, 8.487000000001466e-06, 8.486000000001992e-06, 8.472000000002422e-06, 8.472000000002422e-06, 8.528000000000702e-06, 8.471999999998953e-06, 8.471999999998953e-06, 8.430999999999716e-06, 8.458999999998856e-06, 8.471999999998953e-06, 8.472000000002422e-06, 8.471999999998953e-06, 8.457999999999383e-06, 8.430999999999716e-06, 8.458999999998856e-06, 8.457999999999383e-06, 8.471999999998953e-06, 8.472000000002422e-06, 8.430999999999716e-06, 8.472000000002422e-06, 8.457999999999383e-06, 8.429999999996773e-06, 8.487000000001466e-06, 8.443999999999813e-06]</msg>
<status status="PASS" starttime="20201115 22:12:41.228" endtime="20201115 22:12:41.229"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:41.223" endtime="20201115 22:12:41.230"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:41.232" endtime="20201115 22:12:41.233"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:41.236" endtime="20201115 22:12:41.255"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:41.234" endtime="20201115 22:12:41.256"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:41.230" endtime="20201115 22:12:41.256"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:40.870" endtime="20201115 22:12:41.256"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:40.868" endtime="20201115 22:12:41.257"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:40.867" endtime="20201115 22:12:41.257"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:41.259" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:41.268" endtime="20201115 22:12:41.283"></status>
</kw>
<msg timestamp="20201115 22:12:41.284" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:41.267" endtime="20201115 22:12:41.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:41.286" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:41.285" endtime="20201115 22:12:41.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:41.287" endtime="20201115 22:12:41.289"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:41.264" endtime="20201115 22:12:41.289"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:41.261" endtime="20201115 22:12:41.290"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:41.296" endtime="20201115 22:12:41.583"></status>
</kw>
<msg timestamp="20201115 22:12:41.586" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022636347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022645569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:41.295" endtime="20201115 22:12:41.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:41.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022636347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022645569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:41.587" endtime="20201115 22:12:41.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:41.595" endtime="20201115 22:12:41.597"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:41.292" endtime="20201115 22:12:41.597"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:41.290" endtime="20201115 22:12:41.597"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:41.601" level="INFO">${RESULT} = [{'time': 0.022645569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.221999999999703e-06, 'source_diff': 9.221999999999703e-06}, {'time': 0.022755056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:12:41.598" endtime="20201115 22:12:41.602"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:41.615" level="INFO">${OVERHEAD} = {'time': [0.022645569, 0.022755056, 0.022865708, 0.022976083, 0.023086889, 0.023196194, 0.023308153, 0.023418319, 0.0235295, 0.023640792, 0.023754097, 0.023863347, 0.023974722, 0.024084069, 0.02419519...</msg>
<status status="PASS" starttime="20201115 22:12:41.602" endtime="20201115 22:12:41.615"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:41.619" level="INFO">NAME: 00-overhead-8-set</msg>
<status status="PASS" starttime="20201115 22:12:41.618" endtime="20201115 22:12:41.619"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:41.621" level="INFO">VALUE: [9.221999999999703e-06, 9.263999999998412e-06, 9.235999999999273e-06, 9.236000000002742e-06, 9.235999999999273e-06, 9.194000000000563e-06, 9.167000000000897e-06, 9.221999999999703e-06, 9.235999999999273e-06, 9.235999999999273e-06, 9.179999999997523e-06, 9.166000000001423e-06, 9.221999999999703e-06, 9.262999999998939e-06, 9.221999999999703e-06, 9.235999999999273e-06, 9.221999999999703e-06, 9.221999999999703e-06, 9.222999999999176e-06, 9.236000000002742e-06, 9.235999999999273e-06, 9.223000000002646e-06, 9.235999999999273e-06, 9.236000000002742e-06, 9.152999999997857e-06, 9.221999999999703e-06, 9.221999999999703e-06, 9.221999999999703e-06, 9.235999999999273e-06, 9.235999999999273e-06, 9.208000000000133e-06, 9.208000000000133e-06, 9.236000000002742e-06, 9.221999999999703e-06, 9.235999999999273e-06, 9.152999999997857e-06, 9.221999999999703e-06, 9.208000000000133e-06, 9.236999999998746e-06, 9.221999999999703e-06, 9.236000000002742e-06, 9.250000000002312e-06, 9.208000000000133e-06, 9.221999999999703e-06, 9.235999999999273e-06, 9.221999999999703e-06, 9.221999999999703e-06, 9.195000000000036e-06, 9.236000000002742e-06, 9.222999999999176e-06]</msg>
<status status="PASS" starttime="20201115 22:12:41.620" endtime="20201115 22:12:41.622"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:41.616" endtime="20201115 22:12:41.622"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:41.624" endtime="20201115 22:12:41.626"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:41.628" endtime="20201115 22:12:41.647"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:41.626" endtime="20201115 22:12:41.648"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:41.623" endtime="20201115 22:12:41.649"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:41.260" endtime="20201115 22:12:41.649"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:41.258" endtime="20201115 22:12:41.649"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:41.257" endtime="20201115 22:12:41.649"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:41.652" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:41.660" endtime="20201115 22:12:41.677"></status>
</kw>
<msg timestamp="20201115 22:12:41.677" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:41.659" endtime="20201115 22:12:41.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:41.680" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:41.678" endtime="20201115 22:12:41.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:41.681" endtime="20201115 22:12:41.682"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:41.656" endtime="20201115 22:12:41.683"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:41.654" endtime="20201115 22:12:41.683"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:41.690" endtime="20201115 22:12:41.977"></status>
</kw>
<msg timestamp="20201115 22:12:41.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022815236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022825222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:41.688" endtime="20201115 22:12:41.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:41.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022815236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022825222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:41.981" endtime="20201115 22:12:41.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:41.989" endtime="20201115 22:12:41.990"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:41.686" endtime="20201115 22:12:41.991"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:41.684" endtime="20201115 22:12:41.991"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:41.995" level="INFO">${RESULT} = [{'time': 0.022825222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.986000000000023e-06, 'source_diff': 9.986000000000023e-06}, {'time': 0.022947875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:12:41.992" endtime="20201115 22:12:41.996"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:42.010" level="INFO">${OVERHEAD} = {'time': [0.022825222, 0.022947875, 0.023069528, 0.023189194, 0.023308708, 0.023429153, 0.023549486, 0.023672167, 0.023795014, 0.023914347, 0.024034569, 0.024155875, 0.024276667, 0.024396903, 0.024515...</msg>
<status status="PASS" starttime="20201115 22:12:41.996" endtime="20201115 22:12:42.010"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:42.014" level="INFO">NAME: 00-overhead-9-set</msg>
<status status="PASS" starttime="20201115 22:12:42.013" endtime="20201115 22:12:42.015"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:42.017" level="INFO">VALUE: [9.986000000000023e-06, 9.931000000001217e-06, 9.986000000000023e-06, 9.999999999999593e-06, 9.999999999999593e-06, 9.999999999999593e-06, 9.986000000000023e-06, 9.986000000000023e-06, 1.0027999999998732e-05, 9.957999999997413e-06, 9.986000000000023e-06, 9.986000000000023e-06, 9.972999999999926e-06, 9.959000000000356e-06, 9.986000000000023e-06, 9.945000000000787e-06, 9.958000000000883e-06, 9.999999999999593e-06, 9.972999999999926e-06, 9.972000000000453e-06, 9.986000000000023e-06, 9.986000000000023e-06, 9.999999999999593e-06, 9.986000000000023e-06, 9.971999999996983e-06, 9.958000000000883e-06, 9.986999999999496e-06, 9.986000000000023e-06, 9.999999999999593e-06, 9.999999999999593e-06, 9.986000000000023e-06, 9.986000000000023e-06, 1.0028000000002202e-05, 9.999999999999593e-06, 1.0000000000003062e-05, 9.930000000001743e-06, 1.0027999999998732e-05, 1.0000000000003062e-05, 9.972999999999926e-06, 9.986000000000023e-06, 9.917000000001647e-06, 9.999999999999593e-06, 9.972999999999926e-06, 9.986000000000023e-06, 9.986000000000023e-06, 9.986000000000023e-06, 9.986000000000023e-06, 9.916999999998177e-06, 9.986000000000023e-06, 9.986000000000023e-06]</msg>
<status status="PASS" starttime="20201115 22:12:42.016" endtime="20201115 22:12:42.018"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:42.011" endtime="20201115 22:12:42.018"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:42.021" endtime="20201115 22:12:42.022"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:42.024" endtime="20201115 22:12:42.043"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:42.022" endtime="20201115 22:12:42.044"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:42.019" endtime="20201115 22:12:42.044"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:41.652" endtime="20201115 22:12:42.045"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:41.651" endtime="20201115 22:12:42.045"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:41.650" endtime="20201115 22:12:42.045"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:42.047" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:42.056" endtime="20201115 22:12:42.070"></status>
</kw>
<msg timestamp="20201115 22:12:42.071" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:42.054" endtime="20201115 22:12:42.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:42.073" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:42.072" endtime="20201115 22:12:42.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:42.074" endtime="20201115 22:12:42.076"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:42.052" endtime="20201115 22:12:42.076"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:42.050" endtime="20201115 22:12:42.077"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:42.083" endtime="20201115 22:12:42.370"></status>
</kw>
<msg timestamp="20201115 22:12:42.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022053597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022064347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:42.082" endtime="20201115 22:12:42.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:42.381" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022053597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022064347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:42.374" endtime="20201115 22:12:42.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:42.382" endtime="20201115 22:12:42.384"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:42.079" endtime="20201115 22:12:42.384"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:42.077" endtime="20201115 22:12:42.385"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:42.389" level="INFO">${RESULT} = [{'time': 0.022064347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0750000000000343e-05, 'source_diff': 1.0750000000000343e-05}, {'time': 0.022196903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:12:42.386" endtime="20201115 22:12:42.389"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:42.402" level="INFO">${OVERHEAD} = {'time': [0.022064347, 0.022196903, 0.022329528, 0.022462431, 0.022595194, 0.022726097, 0.022860167, 0.022991861, 0.023122708, 0.023255694, 0.023387431, 0.023519472, 0.023650236, 0.023784153, 0.023917...</msg>
<status status="PASS" starttime="20201115 22:12:42.390" endtime="20201115 22:12:42.402"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:42.407" level="INFO">NAME: 00-overhead-10-set</msg>
<status status="PASS" starttime="20201115 22:12:42.406" endtime="20201115 22:12:42.407"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:42.409" level="INFO">VALUE: [1.0750000000000343e-05, 1.0709000000001107e-05, 1.0763999999999913e-05, 1.0750000000000343e-05, 1.0750000000000343e-05, 1.0736000000000773e-05, 1.0763999999999913e-05, 1.0750000000000343e-05, 1.0777000000000009e-05, 1.0763000000000439e-05, 1.0737000000000246e-05, 1.0750000000000343e-05, 1.0750000000000343e-05, 1.0750000000000343e-05, 1.0750000000000343e-05, 1.0750000000000343e-05, 1.0722000000001203e-05, 1.0763999999999913e-05, 1.0777999999999482e-05, 1.0763000000000439e-05, 1.0763999999999913e-05, 1.0736000000000773e-05, 1.0709000000001107e-05, 1.0749999999996873e-05, 1.0763999999999913e-05, 1.076299999999697e-05, 1.0750000000000343e-05, 1.0749999999996873e-05, 1.0763999999999913e-05, 1.0735999999997303e-05, 1.0722000000001203e-05, 1.0750000000000343e-05, 1.0750000000000343e-05, 1.0750000000000343e-05, 1.0777999999999482e-05, 1.0749999999996873e-05, 1.0750000000000343e-05, 1.0722000000001203e-05, 1.0750000000000343e-05, 1.0749999999996873e-05, 1.0736000000000773e-05, 1.0750000000000343e-05, 1.0749999999996873e-05, 1.0763999999999913e-05, 1.0750000000000343e-05, 1.0805999999998622e-05, 1.0750000000000343e-05, 1.0763000000000439e-05, 1.0777000000000009e-05, 1.0736000000000773e-05]</msg>
<status status="PASS" starttime="20201115 22:12:42.408" endtime="20201115 22:12:42.410"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:42.403" endtime="20201115 22:12:42.410"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:42.413" endtime="20201115 22:12:42.414"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:42.416" endtime="20201115 22:12:42.435"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:42.414" endtime="20201115 22:12:42.436"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:42.411" endtime="20201115 22:12:42.436"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:42.048" endtime="20201115 22:12:42.437"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:42.046" endtime="20201115 22:12:42.437"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:42.045" endtime="20201115 22:12:42.437"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:42.439" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:42.448" endtime="20201115 22:12:42.464"></status>
</kw>
<msg timestamp="20201115 22:12:42.464" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:42.447" endtime="20201115 22:12:42.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:42.466" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:42.465" endtime="20201115 22:12:42.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:42.468" endtime="20201115 22:12:42.469"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:42.444" endtime="20201115 22:12:42.470"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:42.442" endtime="20201115 22:12:42.470"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:42.476" endtime="20201115 22:12:42.762"></status>
</kw>
<msg timestamp="20201115 22:12:42.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022595875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022607389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:42.475" endtime="20201115 22:12:42.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:42.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022595875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022607389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:42.766" endtime="20201115 22:12:42.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:42.774" endtime="20201115 22:12:42.776"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:42.472" endtime="20201115 22:12:42.776"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:42.471" endtime="20201115 22:12:42.777"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:42.781" level="INFO">${RESULT} = [{'time': 0.022607389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1513999999997193e-05, 'source_diff': 1.1513999999997193e-05}, {'time': 0.022748958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:12:42.777" endtime="20201115 22:12:42.781"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:42.794" level="INFO">${OVERHEAD} = {'time': [0.022607389, 0.022748958, 0.022892375, 0.023034069, 0.0231775, 0.023322819, 0.023465444, 0.023606917, 0.023748611, 0.023891486, 0.024035097, 0.024180583, 0.024324139, 0.024465569, 0.02460965...</msg>
<status status="PASS" starttime="20201115 22:12:42.782" endtime="20201115 22:12:42.794"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:42.799" level="INFO">NAME: 00-overhead-11-set</msg>
<status status="PASS" starttime="20201115 22:12:42.798" endtime="20201115 22:12:42.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:42.801" level="INFO">VALUE: [1.1513999999997193e-05, 1.1514000000000663e-05, 1.1514000000000663e-05, 1.1472000000001953e-05, 1.1500000000001093e-05, 1.1554999999999899e-05, 1.154099999999686e-05, 1.1528000000000233e-05, 1.1514000000000663e-05, 1.1528000000000233e-05, 1.1513999999997193e-05, 1.1513999999997193e-05, 1.1570000000002412e-05, 1.1500000000001093e-05, 1.1528000000000233e-05, 1.1555999999999372e-05, 1.1528000000000233e-05, 1.1514000000000663e-05, 1.1555999999999372e-05, 1.1514000000000663e-05, 1.1471999999998483e-05, 1.1472999999997957e-05, 1.1514000000000663e-05, 1.1499999999997623e-05, 1.1514000000000663e-05, 1.1513000000001189e-05, 1.1514000000000663e-05, 1.1528000000000233e-05, 1.1471999999998483e-05, 1.1513999999997193e-05, 1.1514000000000663e-05, 1.1528000000000233e-05, 1.1513999999997193e-05, 1.1527000000000759e-05, 1.1528000000000233e-05, 1.1528000000000233e-05, 1.1514000000000663e-05, 1.1528000000000233e-05, 1.1486000000001523e-05, 1.1514000000000663e-05, 1.1541999999999802e-05, 1.1514000000000663e-05, 1.1514000000000663e-05, 1.1500000000001093e-05, 1.1514000000000663e-05, 1.1528000000000233e-05, 1.1541999999999802e-05, 1.1514000000000663e-05, 1.1514000000000663e-05, 1.1528000000000233e-05]</msg>
<status status="PASS" starttime="20201115 22:12:42.800" endtime="20201115 22:12:42.802"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:42.795" endtime="20201115 22:12:42.802"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:42.804" endtime="20201115 22:12:42.806"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:42.808" endtime="20201115 22:12:42.827"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:42.806" endtime="20201115 22:12:42.828"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:42.803" endtime="20201115 22:12:42.828"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:42.440" endtime="20201115 22:12:42.828"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:42.438" endtime="20201115 22:12:42.829"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:42.437" endtime="20201115 22:12:42.829"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:42.831" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:42.840" endtime="20201115 22:12:42.857"></status>
</kw>
<msg timestamp="20201115 22:12:42.857" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:42.838" endtime="20201115 22:12:42.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:42.860" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:42.858" endtime="20201115 22:12:42.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:42.861" endtime="20201115 22:12:42.862"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:42.836" endtime="20201115 22:12:42.863"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:42.834" endtime="20201115 22:12:42.863"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:42.870" endtime="20201115 22:12:43.156"></status>
</kw>
<msg timestamp="20201115 22:12:43.159" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022552847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022565139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:42.868" endtime="20201115 22:12:43.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:43.167" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022552847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022565139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:43.160" endtime="20201115 22:12:43.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:43.168" endtime="20201115 22:12:43.170"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:42.866" endtime="20201115 22:12:43.171"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:42.864" endtime="20201115 22:12:43.171"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:43.175" level="INFO">${RESULT} = [{'time': 0.022565139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2292000000000552e-05, 'source_diff': 1.2292000000000552e-05}, {'time': 0.022721903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:12:43.172" endtime="20201115 22:12:43.175"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:43.188" level="INFO">${OVERHEAD} = {'time': [0.022565139, 0.022721903, 0.022877028, 0.023033, 0.023187486, 0.023345194, 0.023501528, 0.023658139, 0.023812194, 0.02396675, 0.024123583, 0.024278139, 0.024431625, 0.024589181, 0.024743514,...</msg>
<status status="PASS" starttime="20201115 22:12:43.176" endtime="20201115 22:12:43.189"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:43.193" level="INFO">NAME: 00-overhead-12-set</msg>
<status status="PASS" starttime="20201115 22:12:43.192" endtime="20201115 22:12:43.193"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:43.195" level="INFO">VALUE: [1.2292000000000552e-05, 1.2292000000000552e-05, 1.2278000000000983e-05, 1.2264000000001413e-05, 1.2264000000001413e-05, 1.2291000000001079e-05, 1.2292000000000552e-05, 1.2278000000000983e-05, 1.227699999999804e-05, 1.2263999999997943e-05, 1.2264000000001413e-05, 1.2278000000000983e-05, 1.2277999999997513e-05, 1.2278000000000983e-05, 1.2278000000000983e-05, 1.2306000000000122e-05, 1.2277000000001509e-05, 1.2278000000000983e-05, 1.2292000000000552e-05, 1.2291000000001079e-05, 1.229099999999761e-05, 1.2263999999997943e-05, 1.2291000000001079e-05, 1.2319999999999692e-05, 1.2264000000001413e-05, 1.2277999999997513e-05, 1.2277999999997513e-05, 1.2250000000001843e-05, 1.2264000000001413e-05, 1.2264000000001413e-05, 1.2278000000000983e-05, 1.2292000000000552e-05, 1.2278000000000983e-05, 1.2278000000000983e-05, 1.229099999999761e-05, 1.2333999999999262e-05, 1.2264000000001413e-05, 1.2319000000000219e-05, 1.2263999999997943e-05, 1.2277999999997513e-05, 1.2250000000001843e-05, 1.2278000000000983e-05, 1.2264000000001413e-05, 1.2221999999999233e-05, 1.2236000000002273e-05, 1.2333999999999262e-05, 1.2277000000001509e-05, 1.2263999999997943e-05, 1.2278000000000983e-05, 1.2292000000000552e-05]</msg>
<status status="PASS" starttime="20201115 22:12:43.194" endtime="20201115 22:12:43.195"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:43.189" endtime="20201115 22:12:43.196"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:43.198" endtime="20201115 22:12:43.199"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:43.201" endtime="20201115 22:12:43.221"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:43.200" endtime="20201115 22:12:43.221"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:43.197" endtime="20201115 22:12:43.222"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:42.832" endtime="20201115 22:12:43.222"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:42.830" endtime="20201115 22:12:43.222"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:42.829" endtime="20201115 22:12:43.223"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:43.225" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:43.233" endtime="20201115 22:12:43.250"></status>
</kw>
<msg timestamp="20201115 22:12:43.251" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:43.232" endtime="20201115 22:12:43.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:43.253" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:43.252" endtime="20201115 22:12:43.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:43.254" endtime="20201115 22:12:43.256"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:43.229" endtime="20201115 22:12:43.256"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:43.227" endtime="20201115 22:12:43.257"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:43.263" endtime="20201115 22:12:43.550"></status>
</kw>
<msg timestamp="20201115 22:12:43.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022551444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022564472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:43.262" endtime="20201115 22:12:43.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:43.561" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022551444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022564472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:43.554" endtime="20201115 22:12:43.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:43.562" endtime="20201115 22:12:43.563"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:43.259" endtime="20201115 22:12:43.564"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:43.257" endtime="20201115 22:12:43.564"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:43.569" level="INFO">${RESULT} = [{'time': 0.022564472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3027999999998263e-05, 'source_diff': 1.3027999999998263e-05}, {'time': 0.022732083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:12:43.565" endtime="20201115 22:12:43.569"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:43.583" level="INFO">${OVERHEAD} = {'time': [0.022564472, 0.022732083, 0.022901222, 0.023069444, 0.023236264, 0.023403347, 0.023571306, 0.023740056, 0.023910833, 0.024078083, 0.024248806, 0.024417917, 0.024586917, 0.024755736, 0.024924...</msg>
<status status="PASS" starttime="20201115 22:12:43.570" endtime="20201115 22:12:43.583"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:43.588" level="INFO">NAME: 00-overhead-13-set</msg>
<status status="PASS" starttime="20201115 22:12:43.587" endtime="20201115 22:12:43.588"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:43.590" level="INFO">VALUE: [1.3027999999998263e-05, 1.3055000000001399e-05, 1.3027999999998263e-05, 1.3097000000000109e-05, 1.3041999999997833e-05, 1.3028000000001733e-05, 1.3042000000001303e-05, 1.3041999999997833e-05, 1.2958000000000414e-05, 1.3041000000001829e-05, 1.3042000000001303e-05, 1.3056000000000872e-05, 1.3027999999998263e-05, 1.3055000000001399e-05, 1.3028000000001733e-05, 1.3028000000001733e-05, 1.3028000000001733e-05, 1.3013999999998693e-05, 1.3055999999997403e-05, 1.30689999999975e-05, 1.3042000000001303e-05, 1.3013999999998693e-05, 1.2985999999999553e-05, 1.3042000000001303e-05, 1.304099999999836e-05, 1.2999999999999123e-05, 1.3055000000001399e-05, 1.3028000000001733e-05, 1.3042000000001303e-05, 1.3027999999998263e-05, 1.3042000000001303e-05, 1.2985999999999553e-05, 1.3041000000001829e-05, 1.3111999999999152e-05, 1.3028000000001733e-05, 1.305499999999793e-05, 1.3041000000001829e-05, 1.3055000000001399e-05, 1.3013999999998693e-05, 1.3027999999998263e-05, 1.305499999999793e-05, 1.3056000000000872e-05, 1.3027000000002259e-05, 1.3041999999997833e-05, 1.3042000000001303e-05, 1.3042000000001303e-05, 1.3014000000002163e-05, 1.2971999999999984e-05, 1.3042000000001303e-05, 1.302699999999879e-05]</msg>
<status status="PASS" starttime="20201115 22:12:43.589" endtime="20201115 22:12:43.590"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:43.584" endtime="20201115 22:12:43.591"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:43.593" endtime="20201115 22:12:43.594"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:43.596" endtime="20201115 22:12:43.616"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:43.595" endtime="20201115 22:12:43.617"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:43.591" endtime="20201115 22:12:43.617"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:43.225" endtime="20201115 22:12:43.617"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:43.224" endtime="20201115 22:12:43.618"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:43.223" endtime="20201115 22:12:43.618"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:43.620" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:43.628" endtime="20201115 22:12:43.648"></status>
</kw>
<msg timestamp="20201115 22:12:43.649" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:43.627" endtime="20201115 22:12:43.649"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:43.651" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:43.650" endtime="20201115 22:12:43.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:43.652" endtime="20201115 22:12:43.654"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:43.624" endtime="20201115 22:12:43.655"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:43.622" endtime="20201115 22:12:43.655"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:43.661" endtime="20201115 22:12:43.949"></status>
</kw>
<msg timestamp="20201115 22:12:43.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022063361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022077153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:43.660" endtime="20201115 22:12:43.952"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:43.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022063361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022077153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:43.953" endtime="20201115 22:12:43.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:43.961" endtime="20201115 22:12:43.962"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:43.657" endtime="20201115 22:12:43.963"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:43.656" endtime="20201115 22:12:43.963"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:43.968" level="INFO">${RESULT} = [{'time': 0.022077153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3791999999998583e-05, 'source_diff': 1.3791999999998583e-05}, {'time': 0.022257625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:12:43.964" endtime="20201115 22:12:43.968"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:43.981" level="INFO">${OVERHEAD} = {'time': [0.022077153, 0.022257625, 0.022440153, 0.022624042, 0.022807736, 0.022989819, 0.023173, 0.023355528, 0.023538569, 0.023723028, 0.023904361, 0.024086958, 0.024267694, 0.024449014, 0.024631361...</msg>
<status status="PASS" starttime="20201115 22:12:43.968" endtime="20201115 22:12:43.981"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:43.985" level="INFO">NAME: 00-overhead-14-set</msg>
<status status="PASS" starttime="20201115 22:12:43.984" endtime="20201115 22:12:43.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:43.988" level="INFO">VALUE: [1.3791999999998583e-05, 1.3805999999998153e-05, 1.3792000000002053e-05, 1.3792000000002053e-05, 1.381899999999825e-05, 1.3791000000002579e-05, 1.3749999999999873e-05, 1.3792000000002053e-05, 1.380499999999868e-05, 1.3777999999999013e-05, 1.380499999999868e-05, 1.380499999999868e-05, 1.380499999999868e-05, 1.3806000000001623e-05, 1.3833000000001289e-05, 1.3806000000001623e-05, 1.3777999999999013e-05, 1.380499999999868e-05, 1.3805000000002149e-05, 1.3861000000000429e-05, 1.379099999999911e-05, 1.3792000000002053e-05, 1.3806000000001623e-05, 1.3834000000000762e-05, 1.3820000000001192e-05, 1.379099999999911e-05, 1.3792000000002053e-05, 1.381899999999825e-05, 1.3778000000002483e-05, 1.379099999999911e-05, 1.3791999999998583e-05, 1.3833000000001289e-05, 1.3805999999998153e-05, 1.3834000000000762e-05, 1.3763999999999443e-05, 1.3861000000000429e-05, 1.380499999999868e-05, 1.3791999999998583e-05, 1.3792000000002053e-05, 1.3792000000002053e-05, 1.3736000000000304e-05, 1.3749999999999873e-05, 1.3792000000002053e-05, 1.3874999999999998e-05, 1.3805000000002149e-05, 1.3791999999998583e-05, 1.3791999999998583e-05, 1.3777999999999013e-05, 1.3819000000001719e-05, 1.3806000000001623e-05]</msg>
<status status="PASS" starttime="20201115 22:12:43.986" endtime="20201115 22:12:43.988"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:43.982" endtime="20201115 22:12:43.988"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:43.991" endtime="20201115 22:12:43.992"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:43.994" endtime="20201115 22:12:44.013"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:43.992" endtime="20201115 22:12:44.014"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:43.989" endtime="20201115 22:12:44.014"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:43.620" endtime="20201115 22:12:44.015"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:43.619" endtime="20201115 22:12:44.015"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:43.618" endtime="20201115 22:12:44.015"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:44.017" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:44.027" endtime="20201115 22:12:44.045"></status>
</kw>
<msg timestamp="20201115 22:12:44.046" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:44.025" endtime="20201115 22:12:44.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:44.048" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:44.047" endtime="20201115 22:12:44.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:44.049" endtime="20201115 22:12:44.051"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:44.022" endtime="20201115 22:12:44.051"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:44.020" endtime="20201115 22:12:44.052"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:44.058" endtime="20201115 22:12:44.345"></status>
</kw>
<msg timestamp="20201115 22:12:44.348" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022810792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022825361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:44.057" endtime="20201115 22:12:44.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:44.356" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022810792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022825361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:44.349" endtime="20201115 22:12:44.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:44.357" endtime="20201115 22:12:44.359"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:44.054" endtime="20201115 22:12:44.359"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:44.052" endtime="20201115 22:12:44.360"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:44.364" level="INFO">${RESULT} = [{'time': 0.022825361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4568999999999e-05, 'source_diff': 1.4568999999999e-05}, {'time': 0.023022083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1...</msg>
<status status="PASS" starttime="20201115 22:12:44.361" endtime="20201115 22:12:44.364"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:44.378" level="INFO">${OVERHEAD} = {'time': [0.022825361, 0.023022083, 0.023221194, 0.023418139, 0.023614944, 0.023813111, 0.024008625, 0.024206444, 0.02440275, 0.024597944, 0.0247945, 0.024993042, 0.025190625, 0.025387222, 0.025583667...</msg>
<status status="PASS" starttime="20201115 22:12:44.365" endtime="20201115 22:12:44.378"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:44.382" level="INFO">NAME: 00-overhead-15-set</msg>
<status status="PASS" starttime="20201115 22:12:44.381" endtime="20201115 22:12:44.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:44.385" level="INFO">VALUE: [1.4568999999999e-05, 1.454099999999986e-05, 1.4568999999999e-05, 1.4556000000002373e-05, 1.455499999999943e-05, 1.4542000000002803e-05, 1.4555999999998903e-05, 1.455499999999943e-05, 1.4527999999999763e-05, 1.4597000000001609e-05, 1.4555999999998903e-05, 1.4569999999998473e-05, 1.4569000000002469e-05, 1.4569000000002469e-05, 1.4527999999999763e-05, 1.454099999999986e-05, 1.4500000000000624e-05, 1.4541999999999333e-05, 1.4584000000001512e-05, 1.4556000000002373e-05, 1.4568999999999e-05, 1.4584000000001512e-05, 1.4555999999998903e-05, 1.4556000000002373e-05, 1.4555000000002899e-05, 1.4597000000001609e-05, 1.454099999999986e-05, 1.4500000000000624e-05, 1.4555999999998903e-05, 1.455499999999943e-05, 1.4500000000000624e-05, 1.4555000000002899e-05, 1.4555000000002899e-05, 1.4555999999998903e-05, 1.4569999999998473e-05, 1.4555999999998903e-05, 1.4555999999998903e-05, 1.4541999999999333e-05, 1.4568999999999e-05, 1.455499999999943e-05, 1.4541999999999333e-05, 1.4556000000002373e-05, 1.4541999999999333e-05, 1.4569999999998473e-05, 1.4555999999998903e-05, 1.458299999999857e-05, 1.455499999999943e-05, 1.4555999999998903e-05, 1.454099999999986e-05, 1.4555999999998903e-05]</msg>
<status status="PASS" starttime="20201115 22:12:44.383" endtime="20201115 22:12:44.385"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:44.379" endtime="20201115 22:12:44.386"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:44.388" endtime="20201115 22:12:44.389"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:44.392" endtime="20201115 22:12:44.411"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:44.390" endtime="20201115 22:12:44.412"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:44.386" endtime="20201115 22:12:44.412"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:44.018" endtime="20201115 22:12:44.412"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:44.016" endtime="20201115 22:12:44.413"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:44.016" endtime="20201115 22:12:44.413"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:44.415" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:44.424" endtime="20201115 22:12:44.443"></status>
</kw>
<msg timestamp="20201115 22:12:44.444" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:44.422" endtime="20201115 22:12:44.444"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:44.446" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:44.445" endtime="20201115 22:12:44.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:44.447" endtime="20201115 22:12:44.449"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:44.420" endtime="20201115 22:12:44.449"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:44.418" endtime="20201115 22:12:44.450"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:44.456" endtime="20201115 22:12:44.743"></status>
</kw>
<msg timestamp="20201115 22:12:44.746" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022233917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022249236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:44.454" endtime="20201115 22:12:44.746"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:44.754" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022233917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022249236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:44.747" endtime="20201115 22:12:44.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:44.755" endtime="20201115 22:12:44.756"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:44.452" endtime="20201115 22:12:44.757"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:44.450" endtime="20201115 22:12:44.757"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:44.761" level="INFO">${RESULT} = [{'time': 0.022249236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.531899999999975e-05, 'source_diff': 1.531899999999975e-05}, {'time': 0.022460931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:12:44.758" endtime="20201115 22:12:44.762"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:44.774" level="INFO">${OVERHEAD} = {'time': [0.022249236, 0.022460931, 0.022673431, 0.022887333, 0.023099375, 0.023313528, 0.023525819, 0.023738167, 0.023949014, 0.024161069, 0.024373986, 0.024585042, 0.024797306, 0.02500975, 0.0252208...</msg>
<status status="PASS" starttime="20201115 22:12:44.762" endtime="20201115 22:12:44.775"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:44.779" level="INFO">NAME: 00-overhead-16-set</msg>
<status status="PASS" starttime="20201115 22:12:44.778" endtime="20201115 22:12:44.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:44.781" level="INFO">VALUE: [1.531899999999975e-05, 1.5319999999999223e-05, 1.5334000000002262e-05, 1.53889999999976e-05, 1.536099999999846e-05, 1.5305999999999653e-05, 1.531899999999975e-05, 1.5334000000002262e-05, 1.533300000000279e-05, 1.531899999999975e-05, 1.533299999999932e-05, 1.5334000000002262e-05, 1.5320000000002693e-05, 1.534700000000236e-05, 1.534699999999889e-05, 1.5305999999999653e-05, 1.531899999999975e-05, 1.5305999999999653e-05, 1.533299999999932e-05, 1.5347999999998363e-05, 1.533299999999932e-05, 1.5264000000000943e-05, 1.5320000000002693e-05, 1.533299999999932e-05, 1.531899999999975e-05, 1.526300000000147e-05, 1.531899999999975e-05, 1.536099999999846e-05, 1.5319999999999223e-05, 1.5319999999999223e-05, 1.5333999999998793e-05, 1.533299999999932e-05, 1.530500000000018e-05, 1.531899999999975e-05, 1.53750000000015e-05, 1.5292000000000083e-05, 1.5305999999999653e-05, 1.531899999999975e-05, 1.530500000000018e-05, 1.531899999999975e-05, 1.531899999999975e-05, 1.533299999999932e-05, 1.5292000000000083e-05, 1.531899999999975e-05, 1.5319999999999223e-05, 1.5319999999999223e-05, 1.5305999999999653e-05, 1.5319999999999223e-05, 1.5319999999999223e-05, 1.529100000000061e-05]</msg>
<status status="PASS" starttime="20201115 22:12:44.780" endtime="20201115 22:12:44.782"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:44.775" endtime="20201115 22:12:44.783"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:44.785" endtime="20201115 22:12:44.786"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:44.788" endtime="20201115 22:12:44.808"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:44.787" endtime="20201115 22:12:44.808"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:44.783" endtime="20201115 22:12:44.809"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:44.416" endtime="20201115 22:12:44.809"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:44.414" endtime="20201115 22:12:44.809"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:44.413" endtime="20201115 22:12:44.809"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:44.812" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:44.820" endtime="20201115 22:12:44.840"></status>
</kw>
<msg timestamp="20201115 22:12:44.840" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:44.819" endtime="20201115 22:12:44.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:44.843" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:44.841" endtime="20201115 22:12:44.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:44.844" endtime="20201115 22:12:44.845"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:44.816" endtime="20201115 22:12:44.846"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:44.814" endtime="20201115 22:12:44.846"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:44.853" endtime="20201115 22:12:45.140"></status>
</kw>
<msg timestamp="20201115 22:12:45.143" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022192639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022208722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:44.851" endtime="20201115 22:12:45.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:45.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022192639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022208722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:45.144" endtime="20201115 22:12:45.152"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:45.152" endtime="20201115 22:12:45.154"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:44.849" endtime="20201115 22:12:45.155"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:44.847" endtime="20201115 22:12:45.155"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:45.159" level="INFO">${RESULT} = [{'time': 0.022208722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.608300000000007e-05, 'source_diff': 1.608300000000007e-05}, {'time': 0.022439222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:12:45.156" endtime="20201115 22:12:45.159"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:45.174" level="INFO">${OVERHEAD} = {'time': [0.022208722, 0.022439222, 0.022668528, 0.022899167, 0.02312775, 0.023356028, 0.023586597, 0.023815236, 0.024042458, 0.02426875, 0.024497028, 0.024725458, 0.024952403, 0.025181514, 0.02541134...</msg>
<status status="PASS" starttime="20201115 22:12:45.160" endtime="20201115 22:12:45.174"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:45.178" level="INFO">NAME: 00-overhead-17-set</msg>
<status status="PASS" starttime="20201115 22:12:45.177" endtime="20201115 22:12:45.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:45.181" level="INFO">VALUE: [1.608300000000007e-05, 1.608300000000007e-05, 1.6083999999999543e-05, 1.6069999999999973e-05, 1.608300000000007e-05, 1.6083999999999543e-05, 1.608300000000007e-05, 1.60690000000005e-05, 1.608300000000007e-05, 1.608300000000007e-05, 1.6056000000000403e-05, 1.60690000000005e-05, 1.609700000000311e-05, 1.612499999999878e-05, 1.609699999999964e-05, 1.6069999999999973e-05, 1.608300000000007e-05, 1.6083999999999543e-05, 1.6083999999999543e-05, 1.6069999999999973e-05, 1.6069999999999973e-05, 1.608300000000007e-05, 1.609699999999964e-05, 1.60690000000005e-05, 1.613900000000182e-05, 1.6027999999997794e-05, 1.6083999999999543e-05, 1.609699999999964e-05, 1.6083999999999543e-05, 1.6083999999999543e-05, 1.6013999999998224e-05, 1.6083999999999543e-05, 1.606899999999703e-05, 1.60690000000005e-05, 1.608300000000007e-05, 1.60690000000005e-05, 1.608300000000007e-05, 1.608300000000007e-05, 1.608300000000007e-05, 1.608300000000007e-05, 1.608300000000007e-05, 1.608300000000007e-05, 1.608300000000007e-05, 1.608300000000007e-05, 1.6083999999999543e-05, 1.6000000000002124e-05, 1.611099999999921e-05, 1.612499999999878e-05, 1.6083999999999543e-05, 1.6083999999999543e-05]</msg>
<status status="PASS" starttime="20201115 22:12:45.179" endtime="20201115 22:12:45.181"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:45.175" endtime="20201115 22:12:45.182"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:45.184" endtime="20201115 22:12:45.185"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:45.188" endtime="20201115 22:12:45.207"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:45.186" endtime="20201115 22:12:45.207"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:45.182" endtime="20201115 22:12:45.208"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:44.812" endtime="20201115 22:12:45.208"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:44.811" endtime="20201115 22:12:45.208"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:44.810" endtime="20201115 22:12:45.209"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:45.211" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:45.220" endtime="20201115 22:12:45.242"></status>
</kw>
<msg timestamp="20201115 22:12:45.242" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:45.218" endtime="20201115 22:12:45.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:45.245" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:45.243" endtime="20201115 22:12:45.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:45.246" endtime="20201115 22:12:45.247"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:45.215" endtime="20201115 22:12:45.248"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:45.213" endtime="20201115 22:12:45.248"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:45.255" endtime="20201115 22:12:45.542"></status>
</kw>
<msg timestamp="20201115 22:12:45.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022890472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022907319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:45.253" endtime="20201115 22:12:45.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:45.552" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022890472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022907319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:45.546" endtime="20201115 22:12:45.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:45.554" endtime="20201115 22:12:45.555"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:45.251" endtime="20201115 22:12:45.556"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:45.249" endtime="20201115 22:12:45.556"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:45.560" level="INFO">${RESULT} = [{'time': 0.022907319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.684700000000039e-05, 'source_diff': 1.684700000000039e-05}, {'time': 0.023153181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:12:45.557" endtime="20201115 22:12:45.560"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:45.574" level="INFO">${OVERHEAD} = {'time': [0.022907319, 0.023153181, 0.023400181, 0.023646319, 0.023891583, 0.024135639, 0.024382778, 0.024630167, 0.024874042, 0.025117194, 0.025360958, 0.025608097, 0.025852375, 0.026099028, 0.026343...</msg>
<status status="PASS" starttime="20201115 22:12:45.561" endtime="20201115 22:12:45.574"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:45.578" level="INFO">NAME: 00-overhead-18-set</msg>
<status status="PASS" starttime="20201115 22:12:45.577" endtime="20201115 22:12:45.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:45.581" level="INFO">VALUE: [1.684700000000039e-05, 1.6847999999999863e-05, 1.6861999999999433e-05, 1.686099999999996e-05, 1.6916000000002235e-05, 1.683300000000082e-05, 1.684700000000039e-05, 1.688900000000257e-05, 1.6819999999997254e-05, 1.686099999999996e-05, 1.680499999999821e-05, 1.683300000000082e-05, 1.684700000000039e-05, 1.686099999999996e-05, 1.686099999999996e-05, 1.686099999999996e-05, 1.68889999999991e-05, 1.687499999999953e-05, 1.683300000000082e-05, 1.684700000000039e-05, 1.6847999999999863e-05, 1.684700000000039e-05, 1.68889999999991e-05, 1.686099999999996e-05, 1.68889999999991e-05, 1.684700000000039e-05, 1.683300000000082e-05, 1.68889999999991e-05, 1.684699999999692e-05, 1.687499999999953e-05, 1.686099999999996e-05, 1.68889999999991e-05, 1.686099999999996e-05, 1.687499999999953e-05, 1.6847999999999863e-05, 1.684700000000039e-05, 1.68889999999991e-05, 1.6901999999999195e-05, 1.684700000000039e-05, 1.6806000000001153e-05, 1.687499999999953e-05, 1.687499999999953e-05, 1.686099999999996e-05, 1.683300000000082e-05, 1.687499999999953e-05, 1.681900000000125e-05, 1.684700000000039e-05, 1.6847999999999863e-05, 1.684700000000039e-05, 1.684700000000039e-05]</msg>
<status status="PASS" starttime="20201115 22:12:45.579" endtime="20201115 22:12:45.581"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:45.575" endtime="20201115 22:12:45.582"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:45.584" endtime="20201115 22:12:45.585"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:45.587" endtime="20201115 22:12:45.607"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:45.586" endtime="20201115 22:12:45.607"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:45.582" endtime="20201115 22:12:45.608"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:45.211" endtime="20201115 22:12:45.608"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:45.210" endtime="20201115 22:12:45.608"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:45.209" endtime="20201115 22:12:45.608"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:45.610" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:45.619" endtime="20201115 22:12:45.642"></status>
</kw>
<msg timestamp="20201115 22:12:45.643" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:45.618" endtime="20201115 22:12:45.643"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:45.645" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:45.644" endtime="20201115 22:12:45.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:45.646" endtime="20201115 22:12:45.648"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:45.615" endtime="20201115 22:12:45.648"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:45.613" endtime="20201115 22:12:45.649"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:45.655" endtime="20201115 22:12:45.941"></status>
</kw>
<msg timestamp="20201115 22:12:45.943" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022262736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022280347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:45.654" endtime="20201115 22:12:45.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:45.951" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022262736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022280347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:45.944" endtime="20201115 22:12:45.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:45.953" endtime="20201115 22:12:45.954"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:45.651" endtime="20201115 22:12:45.955"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:45.649" endtime="20201115 22:12:45.955"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:45.960" level="INFO">${RESULT} = [{'time': 0.022280347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.761099999999724e-05, 'source_diff': 1.761099999999724e-05}, {'time': 0.022541222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:12:45.956" endtime="20201115 22:12:45.960"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:45.973" level="INFO">${OVERHEAD} = {'time': [0.022280347, 0.022541222, 0.022802472, 0.023064861, 0.023326014, 0.023589056, 0.023849944, 0.024114611, 0.024378361, 0.024643319, 0.024906639, 0.025168875, 0.025433264, 0.025695097, 0.025956...</msg>
<status status="PASS" starttime="20201115 22:12:45.960" endtime="20201115 22:12:45.973"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:45.977" level="INFO">NAME: 00-overhead-19-set</msg>
<status status="PASS" starttime="20201115 22:12:45.976" endtime="20201115 22:12:45.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:45.979" level="INFO">VALUE: [1.761099999999724e-05, 1.759700000000114e-05, 1.7569000000002e-05, 1.762500000000028e-05, 1.75829999999981e-05, 1.7598000000000613e-05, 1.758300000000157e-05, 1.755500000000243e-05, 1.7569000000002e-05, 1.758300000000157e-05, 1.761100000000071e-05, 1.761100000000071e-05, 1.768100000000203e-05, 1.761100000000071e-05, 1.759699999999767e-05, 1.761100000000071e-05, 1.7542000000002334e-05, 1.761100000000071e-05, 1.761100000000071e-05, 1.759700000000114e-05, 1.7555999999998434e-05, 1.762500000000028e-05, 1.761100000000071e-05, 1.7612000000000183e-05, 1.761100000000071e-05, 1.761100000000071e-05, 1.762500000000028e-05, 1.761100000000071e-05, 1.759700000000114e-05, 1.761100000000071e-05, 1.7583999999997574e-05, 1.759700000000114e-05, 1.7555999999998434e-05, 1.761099999999724e-05, 1.762500000000028e-05, 1.7612000000000183e-05, 1.758299999999463e-05, 1.761100000000071e-05, 1.762500000000028e-05, 1.761100000000071e-05, 1.762500000000028e-05, 1.759700000000114e-05, 1.761100000000071e-05, 1.762500000000028e-05, 1.7542000000002334e-05, 1.759700000000114e-05, 1.7542000000002334e-05, 1.761100000000071e-05, 1.7598000000000613e-05, 1.761100000000071e-05]</msg>
<status status="PASS" starttime="20201115 22:12:45.978" endtime="20201115 22:12:45.980"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:45.974" endtime="20201115 22:12:45.980"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:45.983" endtime="20201115 22:12:45.984"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:45.986" endtime="20201115 22:12:46.005"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:45.984" endtime="20201115 22:12:46.006"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:45.981" endtime="20201115 22:12:46.007"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:45.611" endtime="20201115 22:12:46.007"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:45.609" endtime="20201115 22:12:46.007"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:45.609" endtime="20201115 22:12:46.007"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:46.009" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:46.018" endtime="20201115 22:12:46.040"></status>
</kw>
<msg timestamp="20201115 22:12:46.040" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:46.017" endtime="20201115 22:12:46.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:46.042" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:46.041" endtime="20201115 22:12:46.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:46.043" endtime="20201115 22:12:46.045"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:46.014" endtime="20201115 22:12:46.046"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:46.012" endtime="20201115 22:12:46.046"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:46.053" endtime="20201115 22:12:46.340"></status>
</kw>
<msg timestamp="20201115 22:12:46.343" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022367333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022385708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:46.051" endtime="20201115 22:12:46.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:46.351" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022367333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022385708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:46.344" endtime="20201115 22:12:46.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:46.352" endtime="20201115 22:12:46.354"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:46.048" endtime="20201115 22:12:46.354"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:46.047" endtime="20201115 22:12:46.355"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:46.359" level="INFO">${RESULT} = [{'time': 0.022385708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.837500000000103e-05, 'source_diff': 1.837500000000103e-05}, {'time': 0.022668125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:12:46.355" endtime="20201115 22:12:46.359"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:46.372" level="INFO">${OVERHEAD} = {'time': [0.022385708, 0.022668125, 0.022947514, 0.023226556, 0.023508875, 0.023790972, 0.024073333, 0.024355597, 0.024634694, 0.024913736, 0.025197139, 0.025478111, 0.025759889, 0.026041639, 0.026322...</msg>
<status status="PASS" starttime="20201115 22:12:46.360" endtime="20201115 22:12:46.372"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:46.376" level="INFO">NAME: 00-overhead-20-set</msg>
<status status="PASS" starttime="20201115 22:12:46.375" endtime="20201115 22:12:46.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:46.379" level="INFO">VALUE: [1.837500000000103e-05, 1.837500000000103e-05, 1.838899999999713e-05, 1.837499999999756e-05, 1.837499999999756e-05, 1.840300000000017e-05, 1.838899999999713e-05, 1.83890000000006e-05, 1.837499999999756e-05, 1.836099999999799e-05, 1.836100000000146e-05, 1.837500000000103e-05, 1.83890000000006e-05, 1.833299999999885e-05, 1.8348000000001363e-05, 1.83890000000006e-05, 1.836099999999799e-05, 1.837500000000103e-05, 1.83890000000006e-05, 1.83890000000006e-05, 1.83890000000006e-05, 1.837500000000103e-05, 1.8306000000002653e-05, 1.83890000000006e-05, 1.834700000000189e-05, 1.834699999999842e-05, 1.837500000000103e-05, 1.836100000000146e-05, 1.833299999999885e-05, 1.8362000000000933e-05, 1.8333999999998324e-05, 1.834700000000189e-05, 1.840300000000017e-05, 1.8347999999994424e-05, 1.8320000000002223e-05, 1.8388000000001126e-05, 1.8347999999994424e-05, 1.837499999999409e-05, 1.83890000000006e-05, 1.837500000000103e-05, 1.8348000000001363e-05, 1.834700000000189e-05, 1.834700000000189e-05, 1.836100000000146e-05, 1.836100000000146e-05, 1.834699999999495e-05, 1.836100000000146e-05, 1.836099999999452e-05, 1.83890000000006e-05, 1.836100000000146e-05]</msg>
<status status="PASS" starttime="20201115 22:12:46.377" endtime="20201115 22:12:46.379"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:46.373" endtime="20201115 22:12:46.380"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:46.382" endtime="20201115 22:12:46.383"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:46.386" endtime="20201115 22:12:46.405"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:46.384" endtime="20201115 22:12:46.406"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:46.380" endtime="20201115 22:12:46.406"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:46.010" endtime="20201115 22:12:46.407"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:46.008" endtime="20201115 22:12:46.407"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:46.008" endtime="20201115 22:12:46.407"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:46.409" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:46.418" endtime="20201115 22:12:46.442"></status>
</kw>
<msg timestamp="20201115 22:12:46.442" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:46.417" endtime="20201115 22:12:46.442"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:46.449" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:46.443" endtime="20201115 22:12:46.449"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:46.450" endtime="20201115 22:12:46.451"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:46.414" endtime="20201115 22:12:46.452"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:46.412" endtime="20201115 22:12:46.452"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:46.459" endtime="20201115 22:12:46.745"></status>
</kw>
<msg timestamp="20201115 22:12:46.748" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022454528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022473653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:46.457" endtime="20201115 22:12:46.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:46.756" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022454528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022473653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:46.749" endtime="20201115 22:12:46.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:46.757" endtime="20201115 22:12:46.758"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:46.455" endtime="20201115 22:12:46.759"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:46.453" endtime="20201115 22:12:46.759"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:46.763" level="INFO">${RESULT} = [{'time': 0.022473653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.912499999999831e-05, 'source_diff': 1.912499999999831e-05}, {'time': 0.022776153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:12:46.760" endtime="20201115 22:12:46.763"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:46.778" level="INFO">${OVERHEAD} = {'time': [0.022473653, 0.022776153, 0.0230785, 0.023378569, 0.023676986, 0.023975819, 0.024277236, 0.02457925, 0.024880625, 0.025178944, 0.025479472, 0.025778306, 0.026077972, 0.026379014, 0.026679278...</msg>
<status status="PASS" starttime="20201115 22:12:46.764" endtime="20201115 22:12:46.778"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:46.782" level="INFO">NAME: 00-overhead-21-set</msg>
<status status="PASS" starttime="20201115 22:12:46.781" endtime="20201115 22:12:46.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:46.785" level="INFO">VALUE: [1.912499999999831e-05, 1.915300000000092e-05, 1.913899999999788e-05, 1.9179999999997116e-05, 1.912500000000178e-05, 1.9137999999998406e-05, 1.916700000000049e-05, 1.915300000000092e-05, 1.912499999999831e-05, 1.912500000000178e-05, 1.9194000000000155e-05, 1.913900000000135e-05, 1.911100000000221e-05, 1.912499999999831e-05, 1.915300000000092e-05, 1.913900000000135e-05, 1.913900000000135e-05, 1.913899999999788e-05, 1.913900000000135e-05, 1.913899999999788e-05, 1.911099999999874e-05, 1.911099999999874e-05, 1.908300000000307e-05, 1.918100000000006e-05, 1.913900000000135e-05, 1.912499999999831e-05, 1.913900000000135e-05, 1.911100000000221e-05, 1.912500000000178e-05, 1.912499999999831e-05, 1.9180000000000585e-05, 1.913900000000135e-05, 1.912499999999484e-05, 1.912499999999484e-05, 1.912500000000178e-05, 1.9112000000001683e-05, 1.919499999999963e-05, 1.911099999999527e-05, 1.913900000000135e-05, 1.916700000000049e-05, 1.913900000000135e-05, 1.915300000000092e-05, 1.913900000000135e-05, 1.912500000000178e-05, 1.9138000000001876e-05, 1.916700000000049e-05, 1.912500000000178e-05, 1.912499999999484e-05, 1.913899999999441e-05, 1.912499999999484e-05]</msg>
<status status="PASS" starttime="20201115 22:12:46.783" endtime="20201115 22:12:46.785"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:46.779" endtime="20201115 22:12:46.786"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:46.788" endtime="20201115 22:12:46.789"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:46.791" endtime="20201115 22:12:46.810"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:46.790" endtime="20201115 22:12:46.811"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:46.786" endtime="20201115 22:12:46.812"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:46.410" endtime="20201115 22:12:46.812"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:46.408" endtime="20201115 22:12:46.812"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:46.408" endtime="20201115 22:12:46.812"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:46.814" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:46.824" endtime="20201115 22:12:46.850"></status>
</kw>
<msg timestamp="20201115 22:12:46.851" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:46.822" endtime="20201115 22:12:46.851"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:46.853" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:46.852" endtime="20201115 22:12:46.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:46.854" endtime="20201115 22:12:46.856"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:46.820" endtime="20201115 22:12:46.857"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:46.817" endtime="20201115 22:12:46.857"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:46.863" endtime="20201115 22:12:47.149"></status>
</kw>
<msg timestamp="20201115 22:12:47.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022993889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023013778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:46.862" endtime="20201115 22:12:47.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:47.160" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022993889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023013778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:47.153" endtime="20201115 22:12:47.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:47.161" endtime="20201115 22:12:47.163"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:46.859" endtime="20201115 22:12:47.163"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:46.858" endtime="20201115 22:12:47.164"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:47.168" level="INFO">${RESULT} = [{'time': 0.023013778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.988899999999863e-05, 'source_diff': 1.988899999999863e-05}, {'time': 0.023331847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:12:47.165" endtime="20201115 22:12:47.168"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:47.181" level="INFO">${OVERHEAD} = {'time': [0.023013778, 0.023331847, 0.023649917, 0.023970847, 0.024290861, 0.024611875, 0.024930417, 0.025252222, 0.025572361, 0.025894069, 0.026215528, 0.026535708, 0.0268565, 0.027174931, 0.02749722...</msg>
<status status="PASS" starttime="20201115 22:12:47.169" endtime="20201115 22:12:47.182"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:47.186" level="INFO">NAME: 00-overhead-22-set</msg>
<status status="PASS" starttime="20201115 22:12:47.185" endtime="20201115 22:12:47.186"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:47.188" level="INFO">VALUE: [1.988899999999863e-05, 1.988899999999863e-05, 1.988899999999863e-05, 1.988899999999863e-05, 1.990300000000167e-05, 1.991699999999777e-05, 1.988899999999863e-05, 1.990300000000167e-05, 1.99029999999982e-05, 1.987499999999906e-05, 1.991699999999777e-05, 1.98890000000021e-05, 1.988899999999863e-05, 1.988899999999863e-05, 1.990300000000167e-05, 1.99029999999982e-05, 1.99029999999982e-05, 1.9902000000002196e-05, 1.994500000000038e-05, 1.9901999999998726e-05, 1.9901999999998726e-05, 1.987499999999906e-05, 1.986099999999949e-05, 1.99029999999982e-05, 1.9901999999998726e-05, 1.99029999999982e-05, 1.988899999999516e-05, 1.987500000000253e-05, 1.98890000000021e-05, 1.990300000000167e-05, 1.9902000000002196e-05, 1.990299999999473e-05, 1.9888000000002626e-05, 1.991700000000124e-05, 1.993100000000081e-05, 1.990299999999473e-05, 1.984700000000339e-05, 1.98890000000021e-05, 1.98890000000021e-05, 1.987499999999559e-05, 1.986100000000296e-05, 1.9888000000002626e-05, 1.990300000000167e-05, 1.9902000000002196e-05, 1.991700000000124e-05, 1.991700000000124e-05, 1.987499999999559e-05, 1.9916000000001766e-05, 1.9944000000000905e-05, 1.993100000000081e-05]</msg>
<status status="PASS" starttime="20201115 22:12:47.187" endtime="20201115 22:12:47.189"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:47.182" endtime="20201115 22:12:47.189"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:47.191" endtime="20201115 22:12:47.192"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:47.194" endtime="20201115 22:12:47.214"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:47.193" endtime="20201115 22:12:47.215"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:47.190" endtime="20201115 22:12:47.215"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:46.815" endtime="20201115 22:12:47.216"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:46.813" endtime="20201115 22:12:47.216"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:46.813" endtime="20201115 22:12:47.216"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:47.218" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:47.227" endtime="20201115 22:12:47.256"></status>
</kw>
<msg timestamp="20201115 22:12:47.257" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:47.226" endtime="20201115 22:12:47.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:47.259" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:47.258" endtime="20201115 22:12:47.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:47.260" endtime="20201115 22:12:47.262"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:47.223" endtime="20201115 22:12:47.262"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:47.221" endtime="20201115 22:12:47.263"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:47.269" endtime="20201115 22:12:47.555"></status>
</kw>
<msg timestamp="20201115 22:12:47.558" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023311597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023332236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:47.268" endtime="20201115 22:12:47.559"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:47.566" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023311597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023332236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:47.559" endtime="20201115 22:12:47.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:47.567" endtime="20201115 22:12:47.569"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:47.265" endtime="20201115 22:12:47.570"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:47.263" endtime="20201115 22:12:47.570"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:47.574" level="INFO">${RESULT} = [{'time': 0.023332236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.063899999999938e-05, 'source_diff': 2.063899999999938e-05}, {'time': 0.023672472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:12:47.571" endtime="20201115 22:12:47.574"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:47.587" level="INFO">${OVERHEAD} = {'time': [0.023332236, 0.023672472, 0.024015417, 0.024357528, 0.024700597, 0.025043458, 0.025383625, 0.025722347, 0.026064806, 0.026407236, 0.026748931, 0.027092069, 0.027433722, 0.027774458, 0.028114...</msg>
<status status="PASS" starttime="20201115 22:12:47.575" endtime="20201115 22:12:47.587"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:47.592" level="INFO">NAME: 00-overhead-23-set</msg>
<status status="PASS" starttime="20201115 22:12:47.591" endtime="20201115 22:12:47.592"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:47.594" level="INFO">VALUE: [2.063899999999938e-05, 2.061100000000024e-05, 2.062499999999981e-05, 2.068099999999809e-05, 2.065300000000242e-05, 2.0651999999999476e-05, 2.066699999999852e-05, 2.065299999999895e-05, 2.066699999999852e-05, 2.063899999999938e-05, 2.069500000000113e-05, 2.062499999999981e-05, 2.0665999999999046e-05, 2.0665999999999046e-05, 2.066699999999852e-05, 2.069500000000113e-05, 2.065299999999895e-05, 2.065299999999895e-05, 2.061100000000024e-05, 2.0708000000001225e-05, 2.068099999999809e-05, 2.0679999999998616e-05, 2.0637999999999906e-05, 2.0665999999999046e-05, 2.0666000000002516e-05, 2.065299999999548e-05, 2.05969999999972e-05, 2.066700000000199e-05, 2.063900000000285e-05, 2.063900000000285e-05, 2.063899999999591e-05, 2.0652000000002946e-05, 2.066700000000199e-05, 2.065300000000242e-05, 2.063900000000285e-05, 2.0708000000001225e-05, 2.066700000000199e-05, 2.066700000000199e-05, 2.066700000000199e-05, 2.063900000000285e-05, 2.061099999999677e-05, 2.065299999999548e-05, 2.066699999999505e-05, 2.061100000000371e-05, 2.061100000000371e-05, 2.0665999999995577e-05, 2.0666000000002516e-05, 2.066700000000199e-05, 2.065300000000242e-05, 2.068100000000156e-05]</msg>
<status status="PASS" starttime="20201115 22:12:47.593" endtime="20201115 22:12:47.595"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:47.588" endtime="20201115 22:12:47.595"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:47.598" endtime="20201115 22:12:47.599"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:47.601" endtime="20201115 22:12:47.620"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:47.599" endtime="20201115 22:12:47.621"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:47.596" endtime="20201115 22:12:47.621"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:47.219" endtime="20201115 22:12:47.622"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:47.217" endtime="20201115 22:12:47.622"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:47.217" endtime="20201115 22:12:47.622"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:47.624" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:47.633" endtime="20201115 22:12:47.661"></status>
</kw>
<msg timestamp="20201115 22:12:47.662" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:47.631" endtime="20201115 22:12:47.662"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:47.664" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:47.663" endtime="20201115 22:12:47.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:47.665" endtime="20201115 22:12:47.667"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:47.629" endtime="20201115 22:12:47.668"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:47.627" endtime="20201115 22:12:47.668"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:47.674" endtime="20201115 22:12:47.961"></status>
</kw>
<msg timestamp="20201115 22:12:47.964" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022512444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022533875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:47.673" endtime="20201115 22:12:47.965"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:47.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022512444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022533875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:47.965" endtime="20201115 22:12:47.973"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:47.974" endtime="20201115 22:12:47.975"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:47.670" endtime="20201115 22:12:47.976"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:47.669" endtime="20201115 22:12:47.976"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:47.980" level="INFO">${RESULT} = [{'time': 0.022533875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.143099999999884e-05, 'source_diff': 2.143099999999884e-05}, {'time': 0.022897583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:12:47.977" endtime="20201115 22:12:47.980"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:47.993" level="INFO">${OVERHEAD} = {'time': [0.022533875, 0.022897583, 0.023261597, 0.023624028, 0.023984958, 0.024347389, 0.024710542, 0.025075, 0.025437486, 0.025801069, 0.026163708, 0.026526931, 0.026890986, 0.027252944, 0.027613083...</msg>
<status status="PASS" starttime="20201115 22:12:47.981" endtime="20201115 22:12:47.993"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:47.998" level="INFO">NAME: 00-overhead-24-set</msg>
<status status="PASS" starttime="20201115 22:12:47.997" endtime="20201115 22:12:47.998"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:48.001" level="INFO">VALUE: [2.143099999999884e-05, 2.1415999999999796e-05, 2.1429999999999366e-05, 2.141699999999927e-05, 2.1415999999999796e-05, 2.138900000000013e-05, 2.141699999999927e-05, 2.1443999999998936e-05, 2.141699999999927e-05, 2.1429999999999366e-05, 2.1415999999999796e-05, 2.141699999999927e-05, 2.1471999999998076e-05, 2.1430000000002836e-05, 2.1402000000000226e-05, 2.141699999999927e-05, 2.141699999999927e-05, 2.1429999999999366e-05, 2.1472000000001545e-05, 2.144499999999841e-05, 2.141699999999927e-05, 2.141699999999927e-05, 2.14029999999997e-05, 2.143099999999884e-05, 2.1457999999998506e-05, 2.1444000000002406e-05, 2.138899999999666e-05, 2.1401999999996757e-05, 2.138899999999666e-05, 2.141700000000274e-05, 2.14169999999958e-05, 2.141700000000274e-05, 2.1415999999996327e-05, 2.147300000000102e-05, 2.1429999999995897e-05, 2.140300000000317e-05, 2.1402000000003696e-05, 2.137500000000403e-05, 2.1402000000003696e-05, 2.1444000000002406e-05, 2.138899999999666e-05, 2.143100000000231e-05, 2.141700000000274e-05, 2.143099999999537e-05, 2.134699999999795e-05, 2.138899999999666e-05, 2.14169999999958e-05, 2.13890000000036e-05, 2.1402000000003696e-05, 2.141700000000274e-05]</msg>
<status status="PASS" starttime="20201115 22:12:47.999" endtime="20201115 22:12:48.001"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:47.994" endtime="20201115 22:12:48.002"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:48.004" endtime="20201115 22:12:48.005"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:48.007" endtime="20201115 22:12:48.027"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:48.006" endtime="20201115 22:12:48.027"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:48.002" endtime="20201115 22:12:48.028"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:47.625" endtime="20201115 22:12:48.028"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:47.623" endtime="20201115 22:12:48.028"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:47.622" endtime="20201115 22:12:48.028"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:48.031" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:48.039" endtime="20201115 22:12:48.068"></status>
</kw>
<msg timestamp="20201115 22:12:48.068" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:48.038" endtime="20201115 22:12:48.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:48.070" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:48.069" endtime="20201115 22:12:48.071"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:48.071" endtime="20201115 22:12:48.073"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:48.035" endtime="20201115 22:12:48.074"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:48.033" endtime="20201115 22:12:48.074"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:48.080" endtime="20201115 22:12:48.366"></status>
</kw>
<msg timestamp="20201115 22:12:48.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023105236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023127417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:48.079" endtime="20201115 22:12:48.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:48.377" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023105236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023127417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:48.370" endtime="20201115 22:12:48.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:48.378" endtime="20201115 22:12:48.380"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:48.076" endtime="20201115 22:12:48.380"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:48.075" endtime="20201115 22:12:48.381"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:48.385" level="INFO">${RESULT} = [{'time': 0.023127417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.218099999999959e-05, 'source_diff': 2.218099999999959e-05}, {'time': 0.023509819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:12:48.382" endtime="20201115 22:12:48.385"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:48.400" level="INFO">${OVERHEAD} = {'time': [0.023127417, 0.023509819, 0.023896514, 0.024281556, 0.024664236, 0.025048, 0.025434111, 0.025817292, 0.026200056, 0.026586458, 0.026973069, 0.027357903, 0.027742722, 0.028125306, 0.028507597...</msg>
<status status="PASS" starttime="20201115 22:12:48.386" endtime="20201115 22:12:48.400"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:48.404" level="INFO">NAME: 00-overhead-25-set</msg>
<status status="PASS" starttime="20201115 22:12:48.403" endtime="20201115 22:12:48.405"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:48.407" level="INFO">VALUE: [2.218099999999959e-05, 2.2166000000000546e-05, 2.218099999999959e-05, 2.219499999999916e-05, 2.2180000000000116e-05, 2.2193999999999686e-05, 2.2180000000000116e-05, 2.218099999999959e-05, 2.216700000000002e-05, 2.2180000000000116e-05, 2.2151999999997507e-05, 2.218099999999959e-05, 2.2180000000000116e-05, 2.219499999999916e-05, 2.2180000000000116e-05, 2.213900000000088e-05, 2.219499999999916e-05, 2.2193999999999686e-05, 2.218099999999959e-05, 2.212500000000131e-05, 2.218099999999959e-05, 2.212499999999784e-05, 2.218099999999612e-05, 2.216699999999655e-05, 2.2180000000003586e-05, 2.212500000000478e-05, 2.219500000000263e-05, 2.2179999999996647e-05, 2.218099999999612e-05, 2.2180000000003586e-05, 2.2193999999996217e-05, 2.2179999999996647e-05, 2.2194000000003156e-05, 2.215299999999698e-05, 2.219499999999569e-05, 2.2137999999997937e-05, 2.2208000000002726e-05, 2.212499999999784e-05, 2.222300000000177e-05, 2.218099999999612e-05, 2.22090000000022e-05, 2.216699999999655e-05, 2.2180000000003586e-05, 2.219500000000263e-05, 2.213899999999741e-05, 2.218100000000306e-05, 2.222300000000177e-05, 2.218099999999612e-05, 2.2208000000002726e-05, 2.212499999999784e-05]</msg>
<status status="PASS" starttime="20201115 22:12:48.405" endtime="20201115 22:12:48.407"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:48.401" endtime="20201115 22:12:48.408"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:48.410" endtime="20201115 22:12:48.411"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:48.413" endtime="20201115 22:12:48.433"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:48.412" endtime="20201115 22:12:48.434"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:48.408" endtime="20201115 22:12:48.434"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:48.031" endtime="20201115 22:12:48.434"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:48.029" endtime="20201115 22:12:48.435"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:48.029" endtime="20201115 22:12:48.435"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:38.475" endtime="20201115 22:12:48.435"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="teardown">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:48.440" endtime="20201115 22:12:48.459"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:48.438" endtime="20201115 22:12:48.460"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:48.436" endtime="20201115 22:12:48.460"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:12:35.380" endtime="20201115 22:12:48.460" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Remove List">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:48.468" endtime="20201115 22:12:48.487"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:48.466" endtime="20201115 22:12:48.488"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:48.501" endtime="20201115 22:12:51.523"></status>
</kw>
<msg timestamp="20201115 22:12:51.524" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:48.499" endtime="20201115 22:12:51.524"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:51.529" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:51.526" endtime="20201115 22:12:51.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:12:51.535" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:12:51.531" endtime="20201115 22:12:51.543"></status>
</kw>
<status status="FAIL" starttime="20201115 22:12:48.496" endtime="20201115 22:12:51.544"></status>
</kw>
<status status="FAIL" starttime="20201115 22:12:48.494" endtime="20201115 22:12:51.546"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:48.493" endtime="20201115 22:12:51.547"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:12:51.554" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:12:51.552" endtime="20201115 22:12:51.555"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:51.548" endtime="20201115 22:12:51.555"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:48.492" endtime="20201115 22:12:51.556"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:48.491" endtime="20201115 22:12:51.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:51.557" endtime="20201115 22:12:51.560"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:48.490" endtime="20201115 22:12:51.562"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:48.489" endtime="20201115 22:12:51.562"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:48.465" endtime="20201115 22:12:51.563"></status>
</kw>
<kw name="${n} IN RANGE [ 25 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:51.570" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:51.582" endtime="20201115 22:12:51.594"></status>
</kw>
<msg timestamp="20201115 22:12:51.595" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:51.580" endtime="20201115 22:12:51.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:51.597" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:51.596" endtime="20201115 22:12:51.597"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:51.598" endtime="20201115 22:12:51.600"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:51.578" endtime="20201115 22:12:51.600"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:51.575" endtime="20201115 22:12:51.601"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:51.607" endtime="20201115 22:12:51.901"></status>
</kw>
<msg timestamp="20201115 22:12:51.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.104693056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.104694458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:51.605" endtime="20201115 22:12:51.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:51.912" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.104693056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.104694458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:51.905" endtime="20201115 22:12:51.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:51.913" endtime="20201115 22:12:51.915"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:51.603" endtime="20201115 22:12:51.915"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:51.601" endtime="20201115 22:12:51.916"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:51.920" level="INFO">${RESULT} = [{'time': 3.104694458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4020000000947164e-06, 'source_diff': 1.4020000000947164e-06}, {'time': 3.104756069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:12:51.916" endtime="20201115 22:12:51.920"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:51.934" level="INFO">${OVERHEAD} = {'time': [3.104694458, 3.104756069, 3.104819694, 3.104884236, 3.104949917, 3.105013819, 3.105077514, 3.10513975, 3.105203097, 3.105265222, 3.105327681, 3.105390222, 3.105452042, 3.105516875, 3.1055783...</msg>
<status status="PASS" starttime="20201115 22:12:51.921" endtime="20201115 22:12:51.934"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:51.939" level="INFO">NAME: 00-overhead-1-remove</msg>
<status status="PASS" starttime="20201115 22:12:51.938" endtime="20201115 22:12:51.939"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:51.941" level="INFO">VALUE: [1.4020000000947164e-06, 1.4020000000947164e-06, 1.4020000000947164e-06, 1.4030000001774567e-06, 1.4029999997333675e-06, 1.3749999996370832e-06, 1.3750000000811724e-06, 1.4440000000170983e-06, 1.415999999920814e-06, 1.415999999920814e-06, 1.4029999997333675e-06, 1.4030000001774567e-06, 1.4030000001774567e-06, 1.4030000001774567e-06, 1.38899999990727e-06, 1.4030000001774567e-06, 1.4030000001774567e-06, 1.4029999997333675e-06, 1.4720000001133826e-06, 1.4300000001910007e-06, 1.4019999996506272e-06, 1.4440000000170983e-06, 1.4020000000947164e-06, 1.38899999990727e-06, 1.38899999990727e-06, 1.4029999997333675e-06, 1.3750000000811724e-06, 1.415999999920814e-06, 1.3749999996370832e-06, 1.3880000002686188e-06, 1.4030000001774567e-06, 1.4030000001774567e-06, 1.4579999998431958e-06, 1.4030000001774567e-06, 1.38899999990727e-06, 1.4170000000035543e-06, 1.4170000000035543e-06, 1.4450000000998386e-06, 1.3879999998245296e-06, 1.4030000001774567e-06, 1.3890000003513592e-06, 1.4029999997333675e-06, 1.4170000000035543e-06, 1.4029999997333675e-06, 1.4030000001774567e-06, 1.4030000001774567e-06, 1.4589999999259362e-06, 1.4020000000947164e-06, 1.4029999997333675e-06, 1.4029999997333675e-06]</msg>
<status status="PASS" starttime="20201115 22:12:51.940" endtime="20201115 22:12:51.941"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:51.935" endtime="20201115 22:12:51.942"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:51.944" endtime="20201115 22:12:51.945"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:51.948" endtime="20201115 22:12:51.967"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:51.946" endtime="20201115 22:12:51.967"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:51.943" endtime="20201115 22:12:51.968"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:51.571" endtime="20201115 22:12:51.968"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:51.567" endtime="20201115 22:12:51.968"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:51.566" endtime="20201115 22:12:51.969"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:51.971" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:51.980" endtime="20201115 22:12:51.992"></status>
</kw>
<msg timestamp="20201115 22:12:51.993" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:51.978" endtime="20201115 22:12:51.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:51.995" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:51.994" endtime="20201115 22:12:51.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:51.996" endtime="20201115 22:12:51.998"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:51.975" endtime="20201115 22:12:51.998"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:51.973" endtime="20201115 22:12:51.999"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:52.005" endtime="20201115 22:12:52.291"></status>
</kw>
<msg timestamp="20201115 22:12:52.294" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022300569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022302194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:52.004" endtime="20201115 22:12:52.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:52.302" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022300569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022302194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:52.295" endtime="20201115 22:12:52.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:52.303" endtime="20201115 22:12:52.306"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:52.001" endtime="20201115 22:12:52.307"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:51.999" endtime="20201115 22:12:52.307"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:52.312" level="INFO">${RESULT} = [{'time': 0.022302194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6250000000016251e-06, 'source_diff': 1.6250000000016251e-06}, {'time': 0.022369653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:12:52.308" endtime="20201115 22:12:52.312"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:52.325" level="INFO">${OVERHEAD} = {'time': [0.022302194, 0.022369653, 0.022437472, 0.022505319, 0.022573042, 0.022639833, 0.022708306, 0.022776736, 0.022845167, 0.022913292, 0.022982236, 0.023051361, 0.023117694, 0.023184486, 0.023253...</msg>
<status status="PASS" starttime="20201115 22:12:52.313" endtime="20201115 22:12:52.325"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:52.329" level="INFO">NAME: 00-overhead-2-remove</msg>
<status status="PASS" starttime="20201115 22:12:52.328" endtime="20201115 22:12:52.329"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:52.332" level="INFO">VALUE: [1.6250000000016251e-06, 1.653000000000765e-06, 1.582999999999446e-06, 1.5969999999990159e-06, 1.6250000000016251e-06, 1.6250000000016251e-06, 1.5559999999997798e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6109999999985858e-06, 1.639000000001195e-06, 1.6249999999981557e-06, 1.6660000000008612e-06, 1.6110000000020552e-06, 1.6250000000016251e-06, 1.6250000000016251e-06, 1.6109999999985858e-06, 1.637999999998252e-06, 1.582999999999446e-06, 1.6109999999985858e-06, 1.6110000000020552e-06, 1.6249999999981557e-06, 1.568999999999876e-06, 1.6109999999985858e-06, 1.5969999999990159e-06, 1.639000000001195e-06, 1.6109999999985858e-06, 1.6109999999985858e-06, 1.6110000000020552e-06, 1.5700000000028191e-06, 1.639000000001195e-06, 1.6250000000016251e-06, 1.582999999999446e-06, 1.6250000000016251e-06, 1.637999999998252e-06, 1.6249999999981557e-06, 1.6109999999985858e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.639000000001195e-06, 1.6519999999978219e-06, 1.5839999999989196e-06, 1.5970000000024853e-06, 1.5410000000007362e-06, 1.6250000000016251e-06, 1.6249999999981557e-06, 1.6119999999980594e-06, 1.5969999999990159e-06, 1.6109999999985858e-06]</msg>
<status status="PASS" starttime="20201115 22:12:52.330" endtime="20201115 22:12:52.332"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:52.326" endtime="20201115 22:12:52.332"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:52.335" endtime="20201115 22:12:52.336"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:52.338" endtime="20201115 22:12:52.357"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:52.336" endtime="20201115 22:12:52.358"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:52.333" endtime="20201115 22:12:52.358"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:51.971" endtime="20201115 22:12:52.359"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:51.970" endtime="20201115 22:12:52.359"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:51.969" endtime="20201115 22:12:52.359"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:52.361" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:52.370" endtime="20201115 22:12:52.384"></status>
</kw>
<msg timestamp="20201115 22:12:52.384" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:52.369" endtime="20201115 22:12:52.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:52.387" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:52.385" endtime="20201115 22:12:52.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:52.388" endtime="20201115 22:12:52.390"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:52.366" endtime="20201115 22:12:52.390"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:52.364" endtime="20201115 22:12:52.390"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:52.397" endtime="20201115 22:12:52.684"></status>
</kw>
<msg timestamp="20201115 22:12:52.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022377181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022379, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:12:52.395" endtime="20201115 22:12:52.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:52.696" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022377181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022379, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:12:52.688" endtime="20201115 22:12:52.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:52.697" endtime="20201115 22:12:52.698"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:52.393" endtime="20201115 22:12:52.699"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:52.391" endtime="20201115 22:12:52.699"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:52.703" level="INFO">${RESULT} = [{'time': 0.022379, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.819000000000126e-06, 'source_diff': 1.819000000000126e-06}, {'time': 0.022451403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 22:12:52.700" endtime="20201115 22:12:52.704"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:52.716" level="INFO">${OVERHEAD} = {'time': [0.022379, 0.022451403, 0.022525972, 0.022599847, 0.022672347, 0.022748, 0.022823194, 0.022895944, 0.022968111, 0.023042542, 0.023118264, 0.023192889, 0.023268028, 0.023343139, 0.023418667, 0...</msg>
<status status="PASS" starttime="20201115 22:12:52.704" endtime="20201115 22:12:52.717"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:52.721" level="INFO">NAME: 00-overhead-3-remove</msg>
<status status="PASS" starttime="20201115 22:12:52.720" endtime="20201115 22:12:52.721"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:52.723" level="INFO">VALUE: [1.819000000000126e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.77800000000089e-06, 1.819000000000126e-06, 1.846999999999266e-06, 1.819000000000126e-06, 1.8610000000023053e-06, 1.819000000000126e-06, 1.8199999999995997e-06, 1.846999999999266e-06, 1.76400000000132e-06, 1.8339999999991696e-06, 1.8749999999984057e-06, 1.8339999999991696e-06, 1.819000000000126e-06, 1.832999999999696e-06, 1.832999999999696e-06, 1.8750000000018752e-06, 1.846999999999266e-06, 1.7920000000004599e-06, 1.7920000000004599e-06, 1.7910000000009862e-06, 1.832999999999696e-06, 1.832999999999696e-06, 1.819000000000126e-06, 1.8060000000000298e-06, 1.917000000000585e-06, 1.846999999999266e-06, 1.8060000000000298e-06, 1.819000000000126e-06, 1.832999999999696e-06, 1.8339999999991696e-06, 1.832999999999696e-06, 1.8610000000023053e-06, 1.834000000002639e-06, 1.832999999999696e-06, 1.819000000000126e-06, 1.8199999999995997e-06, 1.832999999999696e-06, 1.846999999999266e-06, 1.819000000000126e-06, 1.832999999999696e-06, 1.8749999999984057e-06, 1.8199999999995997e-06, 1.832999999999696e-06, 1.832999999999696e-06, 1.8199999999995997e-06, 1.8060000000000298e-06, 1.8470000000027353e-06]</msg>
<status status="PASS" starttime="20201115 22:12:52.722" endtime="20201115 22:12:52.724"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:52.717" endtime="20201115 22:12:52.724"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:52.726" endtime="20201115 22:12:52.728"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:52.730" endtime="20201115 22:12:52.749"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:52.728" endtime="20201115 22:12:52.750"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:52.725" endtime="20201115 22:12:52.750"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:52.362" endtime="20201115 22:12:52.751"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:52.360" endtime="20201115 22:12:52.751"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:52.360" endtime="20201115 22:12:52.751"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:52.753" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:52.762" endtime="20201115 22:12:52.777"></status>
</kw>
<msg timestamp="20201115 22:12:52.777" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:52.760" endtime="20201115 22:12:52.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:52.780" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:52.778" endtime="20201115 22:12:52.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:52.781" endtime="20201115 22:12:52.782"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:52.758" endtime="20201115 22:12:52.783"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:52.756" endtime="20201115 22:12:52.784"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:52.790" endtime="20201115 22:12:53.078"></status>
</kw>
<msg timestamp="20201115 22:12:53.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022518542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022520569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:52.789" endtime="20201115 22:12:53.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:53.089" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022518542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022520569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:53.082" endtime="20201115 22:12:53.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:53.091" endtime="20201115 22:12:53.092"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:52.786" endtime="20201115 22:12:53.093"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:52.784" endtime="20201115 22:12:53.093"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:53.097" level="INFO">${RESULT} = [{'time': 0.022520569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0270000000016664e-06, 'source_diff': 2.0270000000016664e-06}, {'time': 0.022600361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:12:53.094" endtime="20201115 22:12:53.098"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:53.110" level="INFO">${OVERHEAD} = {'time': [0.022520569, 0.022600361, 0.022682583, 0.022764625, 0.022845181, 0.022923486, 0.023003639, 0.023084806, 0.023166153, 0.023247972, 0.023326653, 0.023408222, 0.023489681, 0.023572153, 0.023652...</msg>
<status status="PASS" starttime="20201115 22:12:53.098" endtime="20201115 22:12:53.111"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:53.115" level="INFO">NAME: 00-overhead-4-remove</msg>
<status status="PASS" starttime="20201115 22:12:53.114" endtime="20201115 22:12:53.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:53.117" level="INFO">VALUE: [2.0270000000016664e-06, 2.082999999999946e-06, 2.040999999997767e-06, 2.02800000000114e-06, 2.05600000000028e-06, 2.02800000000114e-06, 2.0699999999998497e-06, 2.04200000000071e-06, 2.0419999999972405e-06, 2.0549999999973367e-06, 2.04200000000071e-06, 2.055000000000806e-06, 2.0559999999968104e-06, 2.0559999999968104e-06, 2.05600000000028e-06, 2.05600000000028e-06, 2.05600000000028e-06, 2.04200000000071e-06, 2.05600000000028e-06, 2.040999999997767e-06, 2.04200000000071e-06, 2.02800000000114e-06, 2.040999999997767e-06, 2.0279999999976706e-06, 1.9999999999985307e-06, 2.0419999999972405e-06, 2.04200000000071e-06, 2.04200000000071e-06, 2.069000000000376e-06, 2.05600000000028e-06, 2.0419999999972405e-06, 2.04200000000071e-06, 2.04200000000071e-06, 2.096999999999516e-06, 2.0699999999998497e-06, 2.04200000000071e-06, 2.02800000000114e-06, 2.0839999999994197e-06, 2.04200000000071e-06, 2.0410000000012363e-06, 2.05600000000028e-06, 2.055000000000806e-06, 2.0549999999973367e-06, 2.055000000000806e-06, 2.069000000000376e-06, 2.069000000000376e-06, 2.04200000000071e-06, 2.0559999999968104e-06, 2.05600000000028e-06, 2.0419999999972405e-06]</msg>
<status status="PASS" starttime="20201115 22:12:53.116" endtime="20201115 22:12:53.118"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:53.111" endtime="20201115 22:12:53.118"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:53.120" endtime="20201115 22:12:53.122"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:53.124" endtime="20201115 22:12:53.143"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:53.122" endtime="20201115 22:12:53.144"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:53.119" endtime="20201115 22:12:53.144"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:52.754" endtime="20201115 22:12:53.144"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:52.752" endtime="20201115 22:12:53.145"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:52.751" endtime="20201115 22:12:53.145"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:53.147" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:53.156" endtime="20201115 22:12:53.171"></status>
</kw>
<msg timestamp="20201115 22:12:53.171" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:53.154" endtime="20201115 22:12:53.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:53.174" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:53.172" endtime="20201115 22:12:53.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:53.175" endtime="20201115 22:12:53.176"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:53.152" endtime="20201115 22:12:53.177"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:53.150" endtime="20201115 22:12:53.177"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:53.184" endtime="20201115 22:12:53.469"></status>
</kw>
<msg timestamp="20201115 22:12:53.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022729264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022731528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:53.182" endtime="20201115 22:12:53.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:53.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022729264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022731528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:53.473" endtime="20201115 22:12:53.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:53.481" endtime="20201115 22:12:53.483"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:53.180" endtime="20201115 22:12:53.483"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:53.178" endtime="20201115 22:12:53.484"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:53.488" level="INFO">${RESULT} = [{'time': 0.022731528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.26400000000182e-06, 'source_diff': 2.26400000000182e-06}, {'time': 0.022820167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:12:53.485" endtime="20201115 22:12:53.488"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:53.501" level="INFO">${OVERHEAD} = {'time': [0.022731528, 0.022820167, 0.022908569, 0.02299575, 0.023084653, 0.023170653, 0.023259986, 0.023347292, 0.023436167, 0.023522486, 0.023611722, 0.023697972, 0.023786792, 0.023873778, 0.023962,...</msg>
<status status="PASS" starttime="20201115 22:12:53.489" endtime="20201115 22:12:53.501"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:53.506" level="INFO">NAME: 00-overhead-5-remove</msg>
<status status="PASS" starttime="20201115 22:12:53.504" endtime="20201115 22:12:53.506"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:53.508" level="INFO">VALUE: [2.26400000000182e-06, 2.2639999999983507e-06, 2.319000000000626e-06, 2.2639999999983507e-06, 2.235999999999211e-06, 2.2499999999987808e-06, 2.29200000000096e-06, 2.2639999999983507e-06, 2.25000000000225e-06, 2.3189999999971567e-06, 2.26400000000182e-06, 2.2910000000014863e-06, 2.223000000002584e-06, 2.235999999999211e-06, 2.208000000000071e-06, 2.26400000000182e-06, 2.27800000000139e-06, 2.2369999999986845e-06, 2.3049999999975868e-06, 2.3189999999971567e-06, 2.25000000000225e-06, 2.2499999999987808e-06, 2.2499999999987808e-06, 2.235999999999211e-06, 2.30600000000053e-06, 2.25000000000225e-06, 2.26400000000182e-06, 2.208000000000071e-06, 2.2639999999983507e-06, 2.26400000000182e-06, 2.333000000000196e-06, 2.3200000000000998e-06, 2.30600000000053e-06, 2.25000000000225e-06, 2.235999999999211e-06, 2.25000000000225e-06, 2.2499999999987808e-06, 2.25000000000225e-06, 2.26400000000182e-06, 2.27800000000139e-06, 2.3049999999975868e-06, 2.2639999999983507e-06, 2.25000000000225e-06, 2.27800000000139e-06, 2.26400000000182e-06, 2.2499999999987808e-06, 2.26400000000182e-06, 2.27800000000139e-06, 2.2499999999987808e-06, 2.262999999998877e-06]</msg>
<status status="PASS" starttime="20201115 22:12:53.507" endtime="20201115 22:12:53.509"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:53.502" endtime="20201115 22:12:53.509"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:53.511" endtime="20201115 22:12:53.512"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:53.515" endtime="20201115 22:12:53.534"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:53.513" endtime="20201115 22:12:53.535"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:53.510" endtime="20201115 22:12:53.535"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:53.148" endtime="20201115 22:12:53.535"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:53.146" endtime="20201115 22:12:53.536"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:53.145" endtime="20201115 22:12:53.536"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:53.538" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:53.548" endtime="20201115 22:12:53.564"></status>
</kw>
<msg timestamp="20201115 22:12:53.565" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:53.546" endtime="20201115 22:12:53.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:53.567" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:53.566" endtime="20201115 22:12:53.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:53.568" endtime="20201115 22:12:53.570"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:53.544" endtime="20201115 22:12:53.570"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:53.541" endtime="20201115 22:12:53.571"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:53.577" endtime="20201115 22:12:53.863"></status>
</kw>
<msg timestamp="20201115 22:12:53.867" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024532722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024535181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:53.576" endtime="20201115 22:12:53.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:53.875" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024532722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024535181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:53.868" endtime="20201115 22:12:53.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:53.876" endtime="20201115 22:12:53.878"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:53.573" endtime="20201115 22:12:53.878"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:53.571" endtime="20201115 22:12:53.878"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:53.883" level="INFO">${RESULT} = [{'time': 0.024535181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4589999999997947e-06, 'source_diff': 2.4589999999997947e-06}, {'time': 0.024629181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:12:53.879" endtime="20201115 22:12:53.883"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:53.896" level="INFO">${OVERHEAD} = {'time': [0.024535181, 0.024629181, 0.024724333, 0.024819958, 0.024913681, 0.025007111, 0.025102972, 0.025198764, 0.025296181, 0.025390028, 0.025486097, 0.02558225, 0.025679458, 0.025777181, 0.0258727...</msg>
<status status="PASS" starttime="20201115 22:12:53.883" endtime="20201115 22:12:53.896"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:53.900" level="INFO">NAME: 00-overhead-6-remove</msg>
<status status="PASS" starttime="20201115 22:12:53.899" endtime="20201115 22:12:53.900"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:53.903" level="INFO">VALUE: [2.4589999999997947e-06, 2.431000000000655e-06, 2.485999999999461e-06, 2.458000000000321e-06, 2.4729999999993646e-06, 2.485999999999461e-06, 2.471999999999891e-06, 2.4999999999990308e-06, 2.487000000002404e-06, 2.471999999999891e-06, 2.471999999999891e-06, 2.485999999999461e-06, 2.4299999999977118e-06, 2.4729999999993646e-06, 2.471999999999891e-06, 2.471999999999891e-06, 2.4729999999993646e-06, 2.471999999999891e-06, 2.471999999999891e-06, 2.471999999999891e-06, 2.485999999999461e-06, 2.5139999999986007e-06, 2.4729999999993646e-06, 2.458000000000321e-06, 2.471999999999891e-06, 2.4869999999989345e-06, 2.471999999999891e-06, 2.485999999999461e-06, 2.4729999999993646e-06, 2.4029999999980456e-06, 2.485999999999461e-06, 2.4729999999993646e-06, 2.471999999999891e-06, 2.444000000000751e-06, 2.485999999999461e-06, 2.471999999999891e-06, 2.485999999999461e-06, 2.417000000001085e-06, 2.485999999999461e-06, 2.4860000000029303e-06, 2.471999999999891e-06, 2.5279999999981706e-06, 2.52800000000164e-06, 2.471999999999891e-06, 2.471999999999891e-06, 2.471999999999891e-06, 2.485999999999461e-06, 2.458000000000321e-06, 2.471999999999891e-06, 2.471999999999891e-06]</msg>
<status status="PASS" starttime="20201115 22:12:53.901" endtime="20201115 22:12:53.903"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:53.897" endtime="20201115 22:12:53.904"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:53.906" endtime="20201115 22:12:53.907"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:53.909" endtime="20201115 22:12:53.929"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:53.908" endtime="20201115 22:12:53.929"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:53.904" endtime="20201115 22:12:53.930"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:53.539" endtime="20201115 22:12:53.930"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:53.537" endtime="20201115 22:12:53.930"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:53.536" endtime="20201115 22:12:53.931"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:53.933" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:53.942" endtime="20201115 22:12:53.958"></status>
</kw>
<msg timestamp="20201115 22:12:53.958" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:53.940" endtime="20201115 22:12:53.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:53.961" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:53.959" endtime="20201115 22:12:53.961"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:53.962" endtime="20201115 22:12:53.963"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:53.937" endtime="20201115 22:12:53.964"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:53.935" endtime="20201115 22:12:53.964"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:53.971" endtime="20201115 22:12:54.257"></status>
</kw>
<msg timestamp="20201115 22:12:54.260" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023271417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023274111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:53.969" endtime="20201115 22:12:54.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:54.268" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023271417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023274111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:54.261" endtime="20201115 22:12:54.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:54.269" endtime="20201115 22:12:54.271"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:53.967" endtime="20201115 22:12:54.272"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:53.965" endtime="20201115 22:12:54.272"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:54.276" level="INFO">${RESULT} = [{'time': 0.023274111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.694000000001001e-06, 'source_diff': 2.694000000001001e-06}, {'time': 0.023376181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:12:54.273" endtime="20201115 22:12:54.276"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:54.289" level="INFO">${OVERHEAD} = {'time': [0.023274111, 0.023376181, 0.023479222, 0.023585111, 0.023691014, 0.023795153, 0.023899194, 0.024001375, 0.024105153, 0.024207903, 0.024310653, 0.024415653, 0.024521194, 0.024626806, 0.024728...</msg>
<status status="PASS" starttime="20201115 22:12:54.277" endtime="20201115 22:12:54.289"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:54.294" level="INFO">NAME: 00-overhead-7-remove</msg>
<status status="PASS" starttime="20201115 22:12:54.293" endtime="20201115 22:12:54.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:54.296" level="INFO">VALUE: [2.694000000001001e-06, 2.7090000000000447e-06, 2.694000000001001e-06, 2.7639999999988507e-06, 2.681000000000905e-06, 2.7090000000000447e-06, 2.6939999999975317e-06, 2.6939999999975317e-06, 2.7090000000000447e-06, 2.695000000000475e-06, 2.7500000000027502e-06, 2.695000000000475e-06, 2.679999999997962e-06, 2.76400000000232e-06, 2.681000000000905e-06, 2.695000000000475e-06, 2.708000000000571e-06, 2.695000000000475e-06, 2.681000000000905e-06, 2.694000000001001e-06, 2.653000000001765e-06, 2.6800000000014312e-06, 2.665999999998392e-06, 2.6800000000014312e-06, 2.694000000001001e-06, 2.6660000000018613e-06, 2.681000000000905e-06, 2.6809999999974354e-06, 2.679999999997962e-06, 2.6800000000014312e-06, 2.653000000001765e-06, 2.76400000000232e-06, 2.653000000001765e-06, 2.681000000000905e-06, 2.6809999999974354e-06, 2.694000000001001e-06, 2.695000000000475e-06, 2.7090000000000447e-06, 2.694000000001001e-06, 2.694000000001001e-06, 2.694000000001001e-06, 2.665999999998392e-06, 2.694000000001001e-06, 2.6389999999987257e-06, 2.695000000000475e-06, 2.6809999999974354e-06, 2.694000000001001e-06, 2.694000000001001e-06, 2.667000000001335e-06, 2.6939999999975317e-06]</msg>
<status status="PASS" starttime="20201115 22:12:54.295" endtime="20201115 22:12:54.297"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:54.290" endtime="20201115 22:12:54.297"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:54.300" endtime="20201115 22:12:54.301"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:54.303" endtime="20201115 22:12:54.322"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:54.302" endtime="20201115 22:12:54.323"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:54.298" endtime="20201115 22:12:54.323"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:53.933" endtime="20201115 22:12:54.324"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:53.932" endtime="20201115 22:12:54.324"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:53.931" endtime="20201115 22:12:54.324"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:54.326" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:54.335" endtime="20201115 22:12:54.351"></status>
</kw>
<msg timestamp="20201115 22:12:54.351" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:54.333" endtime="20201115 22:12:54.351"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:54.354" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:54.352" endtime="20201115 22:12:54.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:54.355" endtime="20201115 22:12:54.356"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:54.331" endtime="20201115 22:12:54.357"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:54.329" endtime="20201115 22:12:54.357"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:54.364" endtime="20201115 22:12:54.653"></status>
</kw>
<msg timestamp="20201115 22:12:54.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022342875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022345792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:54.362" endtime="20201115 22:12:54.656"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:54.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022342875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022345792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:54.657" endtime="20201115 22:12:54.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:54.665" endtime="20201115 22:12:54.666"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:54.360" endtime="20201115 22:12:54.667"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:54.358" endtime="20201115 22:12:54.667"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:54.671" level="INFO">${RESULT} = [{'time': 0.022345792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9169999999981155e-06, 'source_diff': 2.9169999999981155e-06}, {'time': 0.022460569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:12:54.668" endtime="20201115 22:12:54.672"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:54.685" level="INFO">${OVERHEAD} = {'time': [0.022345792, 0.022460569, 0.022573042, 0.022686833, 0.022802042, 0.022914764, 0.0230295, 0.023142847, 0.023258681, 0.023373847, 0.023488569, 0.023601, 0.023715847, 0.023830806, 0.023945778, ...</msg>
<status status="PASS" starttime="20201115 22:12:54.673" endtime="20201115 22:12:54.685"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:54.690" level="INFO">NAME: 00-overhead-8-remove</msg>
<status status="PASS" starttime="20201115 22:12:54.689" endtime="20201115 22:12:54.690"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:54.692" level="INFO">VALUE: [2.9169999999981155e-06, 2.915999999998642e-06, 2.8750000000028753e-06, 2.8889999999989757e-06, 2.889000000002445e-06, 2.833000000000696e-06, 2.889000000002445e-06, 2.9160000000021113e-06, 2.9590000000002947e-06, 2.9029999999985456e-06, 2.887999999999502e-06, 2.917000000001585e-06, 2.847000000000266e-06, 2.931000000001155e-06, 2.860999999999836e-06, 2.9020000000025414e-06, 2.889000000002445e-06, 2.9160000000021113e-06, 2.9029999999985456e-06, 2.9029999999985456e-06, 2.9029999999985456e-06, 2.917000000001585e-06, 2.9029999999985456e-06, 2.887999999999502e-06, 2.9029999999985456e-06, 2.9029999999985456e-06, 2.9029999999985456e-06, 2.874999999999406e-06, 2.8889999999989757e-06, 2.917000000001585e-06, 2.8889999999989757e-06, 2.929999999998212e-06, 2.8889999999989757e-06, 2.917000000001585e-06, 2.889000000002445e-06, 2.9169999999981155e-06, 2.917000000001585e-06, 2.929999999998212e-06, 2.874999999999406e-06, 2.8889999999989757e-06, 2.903000000002015e-06, 2.860999999999836e-06, 2.874999999999406e-06, 2.903000000002015e-06, 2.8889999999989757e-06, 2.931000000001155e-06, 2.8889999999989757e-06, 2.9169999999981155e-06, 2.8889999999989757e-06, 2.903000000002015e-06]</msg>
<status status="PASS" starttime="20201115 22:12:54.691" endtime="20201115 22:12:54.692"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:54.686" endtime="20201115 22:12:54.693"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:54.695" endtime="20201115 22:12:54.696"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:54.698" endtime="20201115 22:12:54.718"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:54.697" endtime="20201115 22:12:54.718"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:54.693" endtime="20201115 22:12:54.719"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:54.327" endtime="20201115 22:12:54.719"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:54.325" endtime="20201115 22:12:54.719"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:54.324" endtime="20201115 22:12:54.719"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:54.722" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:54.730" endtime="20201115 22:12:54.747"></status>
</kw>
<msg timestamp="20201115 22:12:54.748" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:54.729" endtime="20201115 22:12:54.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:54.750" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:54.749" endtime="20201115 22:12:54.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:54.751" endtime="20201115 22:12:54.753"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:54.726" endtime="20201115 22:12:54.753"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:54.724" endtime="20201115 22:12:54.754"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:54.760" endtime="20201115 22:12:55.047"></status>
</kw>
<msg timestamp="20201115 22:12:55.050" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022377056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022380181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:54.759" endtime="20201115 22:12:55.051"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:55.058" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022377056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022380181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:55.051" endtime="20201115 22:12:55.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:55.060" endtime="20201115 22:12:55.061"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:54.756" endtime="20201115 22:12:55.062"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:54.754" endtime="20201115 22:12:55.062"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:55.066" level="INFO">${RESULT} = [{'time': 0.022380181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.124999999999656e-06, 'source_diff': 3.124999999999656e-06}, {'time': 0.022503681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:12:55.063" endtime="20201115 22:12:55.067"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:55.080" level="INFO">${OVERHEAD} = {'time': [0.022380181, 0.022503681, 0.022628181, 0.022750181, 0.022871972, 0.022995681, 0.023121403, 0.023246833, 0.023370833, 0.023492625, 0.023615333, 0.023738, 0.023863069, 0.023985708, 0.024107778...</msg>
<status status="PASS" starttime="20201115 22:12:55.067" endtime="20201115 22:12:55.080"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:55.085" level="INFO">NAME: 00-overhead-9-remove</msg>
<status status="PASS" starttime="20201115 22:12:55.084" endtime="20201115 22:12:55.085"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:55.087" level="INFO">VALUE: [3.124999999999656e-06, 3.124999999999656e-06, 3.181000000001405e-06, 3.1119999999995596e-06, 3.124999999999656e-06, 3.1119999999995596e-06, 3.111000000000086e-06, 3.1250000000031253e-06, 3.111000000000086e-06, 3.124999999999656e-06, 3.111000000000086e-06, 3.1389999999992257e-06, 3.124999999999656e-06, 3.1250000000031253e-06, 3.124999999999656e-06, 3.083000000000946e-06, 3.124999999999656e-06, 3.097000000000516e-06, 3.151999999999322e-06, 3.112000000003029e-06, 3.111000000000086e-06, 3.179999999998462e-06, 3.097000000000516e-06, 3.1250000000031253e-06, 3.1529999999987957e-06, 3.124999999999656e-06, 3.097000000000516e-06, 3.1389999999992257e-06, 3.124999999999656e-06, 3.111000000000086e-06, 3.1529999999987957e-06, 3.1669999999983656e-06, 3.1389999999992257e-06, 3.124999999999656e-06, 3.1669999999983656e-06, 3.097000000000516e-06, 3.083000000000946e-06, 3.111000000000086e-06, 3.1250000000031253e-06, 3.1250000000031253e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.124999999999656e-06, 3.07000000000085e-06, 3.124999999999656e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.124999999999656e-06, 3.1389999999992257e-06]</msg>
<status status="PASS" starttime="20201115 22:12:55.086" endtime="20201115 22:12:55.088"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:55.081" endtime="20201115 22:12:55.088"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:55.090" endtime="20201115 22:12:55.091"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:55.093" endtime="20201115 22:12:55.113"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:55.092" endtime="20201115 22:12:55.113"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:55.089" endtime="20201115 22:12:55.114"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:54.722" endtime="20201115 22:12:55.114"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:54.721" endtime="20201115 22:12:55.114"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:54.720" endtime="20201115 22:12:55.115"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:55.117" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:55.126" endtime="20201115 22:12:55.141"></status>
</kw>
<msg timestamp="20201115 22:12:55.142" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:55.124" endtime="20201115 22:12:55.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:55.144" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:55.143" endtime="20201115 22:12:55.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:55.145" endtime="20201115 22:12:55.147"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:55.121" endtime="20201115 22:12:55.147"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:55.119" endtime="20201115 22:12:55.148"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:55.155" endtime="20201115 22:12:55.441"></status>
</kw>
<msg timestamp="20201115 22:12:55.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023245667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023249, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:12:55.153" endtime="20201115 22:12:55.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:55.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023245667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023249, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:12:55.445" endtime="20201115 22:12:55.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:55.453" endtime="20201115 22:12:55.455"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:55.150" endtime="20201115 22:12:55.456"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:55.148" endtime="20201115 22:12:55.456"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:55.460" level="INFO">${RESULT} = [{'time': 0.023249, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3329999999977267e-06, 'source_diff': 3.3329999999977267e-06}, {'time': 0.023382333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:12:55.457" endtime="20201115 22:12:55.460"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:55.473" level="INFO">${OVERHEAD} = {'time': [0.023249, 0.023382333, 0.023515819, 0.023648875, 0.023784917, 0.023921125, 0.024056611, 0.024191708, 0.024326278, 0.024463111, 0.024599222, 0.024735361, 0.024869611, 0.025005375, 0.025139069...</msg>
<status status="PASS" starttime="20201115 22:12:55.461" endtime="20201115 22:12:55.473"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:55.478" level="INFO">NAME: 00-overhead-10-remove</msg>
<status status="PASS" starttime="20201115 22:12:55.477" endtime="20201115 22:12:55.478"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:55.480" level="INFO">VALUE: [3.3329999999977267e-06, 3.333000000001196e-06, 3.333000000001196e-06, 3.347000000000766e-06, 3.3059999999980605e-06, 3.333000000001196e-06, 3.3469999999972966e-06, 3.3189999999981568e-06, 3.347000000000766e-06, 3.347000000000766e-06, 3.333000000001196e-06, 3.347000000000766e-06, 3.304999999998587e-06, 3.333000000001196e-06, 3.333000000001196e-06, 3.3329999999977267e-06, 3.3200000000011e-06, 3.3050000000020563e-06, 3.3889999999994758e-06, 3.333000000001196e-06, 3.3340000000006698e-06, 3.4169999999986156e-06, 3.347000000000766e-06, 3.3329999999977267e-06, 3.3339999999972003e-06, 3.361000000000336e-06, 3.26400000000282e-06, 3.3329999999977267e-06, 3.3469999999972966e-06, 3.3609999999968665e-06, 3.333000000001196e-06, 3.333000000001196e-06, 3.3200000000011e-06, 3.2919999999984906e-06, 3.347000000000766e-06, 3.347000000000766e-06, 3.3340000000006698e-06, 3.3329999999977267e-06, 3.3340000000006698e-06, 3.374999999999906e-06, 3.3340000000006698e-06, 3.319000000001626e-06, 3.333000000001196e-06, 3.3200000000011e-06, 3.3340000000006698e-06, 3.333000000001196e-06, 3.3200000000011e-06, 3.333000000001196e-06, 3.3340000000006698e-06, 3.3340000000006698e-06]</msg>
<status status="PASS" starttime="20201115 22:12:55.479" endtime="20201115 22:12:55.480"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:55.474" endtime="20201115 22:12:55.481"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:55.483" endtime="20201115 22:12:55.484"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:55.487" endtime="20201115 22:12:55.506"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:55.485" endtime="20201115 22:12:55.507"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:55.482" endtime="20201115 22:12:55.507"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:55.117" endtime="20201115 22:12:55.507"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:55.116" endtime="20201115 22:12:55.508"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:55.115" endtime="20201115 22:12:55.508"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:55.510" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:55.519" endtime="20201115 22:12:55.535"></status>
</kw>
<msg timestamp="20201115 22:12:55.535" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:55.517" endtime="20201115 22:12:55.535"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:55.538" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:55.536" endtime="20201115 22:12:55.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:55.539" endtime="20201115 22:12:55.541"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:55.515" endtime="20201115 22:12:55.541"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:55.513" endtime="20201115 22:12:55.542"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:55.548" endtime="20201115 22:12:55.834"></status>
</kw>
<msg timestamp="20201115 22:12:55.837" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022970208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02297375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:12:55.546" endtime="20201115 22:12:55.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:55.845" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022970208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02297375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:12:55.838" endtime="20201115 22:12:55.845"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:55.846" endtime="20201115 22:12:55.847"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:55.544" endtime="20201115 22:12:55.848"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:55.542" endtime="20201115 22:12:55.848"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:55.852" level="INFO">${RESULT} = [{'time': 0.02297375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.54200000000221e-06, 'source_diff': 3.54200000000221e-06}, {'time': 0.023119903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 22:12:55.849" endtime="20201115 22:12:55.853"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:55.865" level="INFO">${OVERHEAD} = {'time': [0.02297375, 0.023119903, 0.023267111, 0.023415278, 0.023560986, 0.023709569, 0.023856792, 0.024004931, 0.024149875, 0.024298722, 0.024443736, 0.024591528, 0.024737542, 0.024886097, 0.0250309...</msg>
<status status="PASS" starttime="20201115 22:12:55.853" endtime="20201115 22:12:55.866"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:55.870" level="INFO">NAME: 00-overhead-11-remove</msg>
<status status="PASS" starttime="20201115 22:12:55.869" endtime="20201115 22:12:55.870"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:55.872" level="INFO">VALUE: [3.54200000000221e-06, 3.55600000000178e-06, 3.597000000001016e-06, 3.55600000000178e-06, 3.5419999999987406e-06, 3.554999999998837e-06, 3.54200000000221e-06, 3.625000000000156e-06, 3.500000000000031e-06, 3.540999999999267e-06, 3.54200000000221e-06, 3.55600000000178e-06, 3.57000000000135e-06, 3.540999999999267e-06, 3.55600000000178e-06, 3.54200000000221e-06, 3.6389999999997258e-06, 3.5419999999987406e-06, 3.5139999999996008e-06, 3.5829999999979767e-06, 3.54200000000221e-06, 3.54200000000221e-06, 3.5840000000009198e-06, 3.5419999999987406e-06, 3.54200000000221e-06, 3.554999999998837e-06, 3.540999999999267e-06, 3.554999999998837e-06, 3.57000000000135e-06, 3.5550000000023063e-06, 3.526999999999697e-06, 3.540999999999267e-06, 3.55600000000178e-06, 3.554999999998837e-06, 3.554999999998837e-06, 3.5279999999991707e-06, 3.54200000000221e-06, 3.5419999999987406e-06, 3.52800000000264e-06, 3.5410000000027364e-06, 3.5279999999991707e-06, 3.5699999999978804e-06, 3.554999999998837e-06, 3.540999999999267e-06, 3.57000000000135e-06, 3.54200000000221e-06, 3.5419999999987406e-06, 3.513000000000127e-06, 3.54200000000221e-06, 3.54200000000221e-06]</msg>
<status status="PASS" starttime="20201115 22:12:55.871" endtime="20201115 22:12:55.873"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:55.866" endtime="20201115 22:12:55.873"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:55.875" endtime="20201115 22:12:55.877"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:55.879" endtime="20201115 22:12:55.898"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:55.877" endtime="20201115 22:12:55.899"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:55.874" endtime="20201115 22:12:55.899"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:55.511" endtime="20201115 22:12:55.899"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:55.509" endtime="20201115 22:12:55.900"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:55.508" endtime="20201115 22:12:55.900"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:55.902" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:55.911" endtime="20201115 22:12:55.931"></status>
</kw>
<msg timestamp="20201115 22:12:55.932" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:55.910" endtime="20201115 22:12:55.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:55.934" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:55.933" endtime="20201115 22:12:55.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:55.935" endtime="20201115 22:12:55.937"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:55.907" endtime="20201115 22:12:55.937"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:55.904" endtime="20201115 22:12:55.938"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:55.944" endtime="20201115 22:12:56.231"></status>
</kw>
<msg timestamp="20201115 22:12:56.234" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023840361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023844125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:55.943" endtime="20201115 22:12:56.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:56.242" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023840361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023844125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:56.235" endtime="20201115 22:12:56.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:56.243" endtime="20201115 22:12:56.245"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:55.940" endtime="20201115 22:12:56.245"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:55.938" endtime="20201115 22:12:56.246"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:56.250" level="INFO">${RESULT} = [{'time': 0.023844125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.763999999999851e-06, 'source_diff': 3.763999999999851e-06}, {'time': 0.024003056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:12:56.247" endtime="20201115 22:12:56.250"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:56.263" level="INFO">${OVERHEAD} = {'time': [0.023844125, 0.024003056, 0.024160625, 0.024319528, 0.024479292, 0.024637861, 0.024799222, 0.02496025, 0.025119736, 0.025278111, 0.025436153, 0.025595056, 0.025753972, 0.025913917, 0.0260717...</msg>
<status status="PASS" starttime="20201115 22:12:56.251" endtime="20201115 22:12:56.263"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:56.268" level="INFO">NAME: 00-overhead-12-remove</msg>
<status status="PASS" starttime="20201115 22:12:56.267" endtime="20201115 22:12:56.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:56.270" level="INFO">VALUE: [3.763999999999851e-06, 3.763999999999851e-06, 3.763999999999851e-06, 3.7919999999989906e-06, 3.750000000000281e-06, 3.763999999999851e-06, 3.763999999999851e-06, 3.7779999999994207e-06, 3.763999999999851e-06, 3.7779999999994207e-06, 3.7919999999989906e-06, 3.84800000000074e-06, 3.763999999999851e-06, 3.750000000000281e-06, 3.763999999999851e-06, 3.763999999999851e-06, 3.7779999999994207e-06, 3.763999999999851e-06, 3.763000000000377e-06, 3.7370000000001846e-06, 3.763999999999851e-06, 3.7779999999994207e-06, 3.736000000000711e-06, 3.7779999999994207e-06, 3.776999999999947e-06, 3.763999999999851e-06, 3.763999999999851e-06, 3.763999999999851e-06, 3.763999999999851e-06, 3.750000000000281e-06, 3.763999999999851e-06, 3.750000000000281e-06, 3.736000000000711e-06, 3.7779999999994207e-06, 3.7370000000001846e-06, 3.7919999999989906e-06, 3.750000000000281e-06, 3.763999999999851e-06, 3.8200000000016e-06, 3.763999999999851e-06, 3.736000000000711e-06, 3.750000000000281e-06, 3.750000000000281e-06, 3.763999999999851e-06, 3.763999999999851e-06, 3.7230000000006147e-06, 3.8059999999985605e-06, 3.7639999999963814e-06, 3.8049999999956174e-06, 3.7769999999964776e-06]</msg>
<status status="PASS" starttime="20201115 22:12:56.269" endtime="20201115 22:12:56.270"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:56.264" endtime="20201115 22:12:56.271"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:56.273" endtime="20201115 22:12:56.274"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:56.277" endtime="20201115 22:12:56.296"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:56.275" endtime="20201115 22:12:56.297"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:56.271" endtime="20201115 22:12:56.297"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:55.903" endtime="20201115 22:12:56.298"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:55.901" endtime="20201115 22:12:56.298"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:55.900" endtime="20201115 22:12:56.298"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:56.300" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:56.309" endtime="20201115 22:12:56.329"></status>
</kw>
<msg timestamp="20201115 22:12:56.329" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:56.307" endtime="20201115 22:12:56.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:56.332" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:56.330" endtime="20201115 22:12:56.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:56.333" endtime="20201115 22:12:56.334"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:56.305" endtime="20201115 22:12:56.335"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:56.303" endtime="20201115 22:12:56.335"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:56.342" endtime="20201115 22:12:56.627"></status>
</kw>
<msg timestamp="20201115 22:12:56.630" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023278944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023282931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:56.340" endtime="20201115 22:12:56.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:56.638" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023278944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023282931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:56.631" endtime="20201115 22:12:56.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:56.639" endtime="20201115 22:12:56.640"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:56.338" endtime="20201115 22:12:56.641"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:56.336" endtime="20201115 22:12:56.641"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:56.645" level="INFO">${RESULT} = [{'time': 0.023282931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.987000000000435e-06, 'source_diff': 3.987000000000435e-06}, {'time': 0.023455694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:12:56.642" endtime="20201115 22:12:56.646"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:56.659" level="INFO">${OVERHEAD} = {'time': [0.023282931, 0.023455694, 0.023627097, 0.023798222, 0.023971861, 0.024144194, 0.024318403, 0.02448925, 0.024660083, 0.024831819, 0.025003111, 0.025173667, 0.025348264, 0.025522278, 0.0256935...</msg>
<status status="PASS" starttime="20201115 22:12:56.646" endtime="20201115 22:12:56.659"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:56.663" level="INFO">NAME: 00-overhead-13-remove</msg>
<status status="PASS" starttime="20201115 22:12:56.662" endtime="20201115 22:12:56.663"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:56.666" level="INFO">VALUE: [3.987000000000435e-06, 3.9859999999974915e-06, 4.027999999999671e-06, 3.972000000001391e-06, 3.986000000000961e-06, 3.972000000001391e-06, 3.9859999999974915e-06, 3.931000000002155e-06, 3.986000000000961e-06, 4.000000000000531e-06, 3.972000000001391e-06, 3.973000000000865e-06, 4.014000000000101e-06, 3.971999999997922e-06, 4.000000000000531e-06, 3.972000000001391e-06, 3.972000000001391e-06, 3.986000000000961e-06, 3.971999999997922e-06, 3.986999999996965e-06, 3.957999999998352e-06, 3.971999999997922e-06, 3.971999999997922e-06, 3.986000000000961e-06, 3.986000000000961e-06, 3.958000000001821e-06, 3.958000000001821e-06, 3.986000000000961e-06, 3.972999999997395e-06, 3.986000000000961e-06, 3.902999999999546e-06, 3.9999999999970615e-06, 3.972000000001391e-06, 4.000000000000531e-06, 4.000000000000531e-06, 3.986000000000961e-06, 3.972000000001391e-06, 3.973000000000865e-06, 3.959000000001295e-06, 3.9859999999974915e-06, 3.986000000000961e-06, 3.986000000000961e-06, 3.986000000000961e-06, 3.944000000002251e-06, 3.9859999999974915e-06, 3.971999999997922e-06, 3.986000000000961e-06, 3.958999999997825e-06, 3.973000000004334e-06, 3.971999999997922e-06]</msg>
<status status="PASS" starttime="20201115 22:12:56.664" endtime="20201115 22:12:56.670"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:56.660" endtime="20201115 22:12:56.671"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:56.673" endtime="20201115 22:12:56.675"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:56.677" endtime="20201115 22:12:56.696"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:56.675" endtime="20201115 22:12:56.697"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:56.672" endtime="20201115 22:12:56.697"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:56.301" endtime="20201115 22:12:56.697"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:56.299" endtime="20201115 22:12:56.698"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:56.298" endtime="20201115 22:12:56.698"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:56.700" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:56.709" endtime="20201115 22:12:56.726"></status>
</kw>
<msg timestamp="20201115 22:12:56.727" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:56.707" endtime="20201115 22:12:56.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:56.729" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:56.728" endtime="20201115 22:12:56.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:56.730" endtime="20201115 22:12:56.732"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:56.705" endtime="20201115 22:12:56.732"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:56.703" endtime="20201115 22:12:56.733"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:56.739" endtime="20201115 22:12:57.025"></status>
</kw>
<msg timestamp="20201115 22:12:57.028" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022403806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022407986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:56.738" endtime="20201115 22:12:57.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:57.036" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022403806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022407986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:57.029" endtime="20201115 22:12:57.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:57.037" endtime="20201115 22:12:57.039"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:56.735" endtime="20201115 22:12:57.039"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:56.733" endtime="20201115 22:12:57.040"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:57.044" level="INFO">${RESULT} = [{'time': 0.022407986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.180000000002931e-06, 'source_diff': 4.180000000002931e-06}, {'time': 0.022596014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:12:57.040" endtime="20201115 22:12:57.044"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:57.057" level="INFO">${OVERHEAD} = {'time': [0.022407986, 0.022596014, 0.022782292, 0.022966806, 0.023154347, 0.023342639, 0.023528042, 0.023712694, 0.023901139, 0.024089722, 0.024275153, 0.024463514, 0.024647667, 0.024833819, 0.025019...</msg>
<status status="PASS" starttime="20201115 22:12:57.045" endtime="20201115 22:12:57.057"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:57.061" level="INFO">NAME: 00-overhead-14-remove</msg>
<status status="PASS" starttime="20201115 22:12:57.060" endtime="20201115 22:12:57.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:57.064" level="INFO">VALUE: [4.180000000002931e-06, 4.208000000002071e-06, 4.125000000000656e-06, 4.1949999999985055e-06, 4.221999999998172e-06, 4.221999999998172e-06, 4.1949999999985055e-06, 4.193999999999032e-06, 4.166999999999366e-06, 4.179999999999462e-06, 4.195000000001975e-06, 4.1809999999989356e-06, 4.209000000001545e-06, 4.207999999998602e-06, 4.1809999999989356e-06, 4.194000000002501e-06, 4.1809999999989356e-06, 4.193999999999032e-06, 4.209000000001545e-06, 4.195000000001975e-06, 4.139000000000226e-06, 4.208000000002071e-06, 4.208000000002071e-06, 4.166999999999366e-06, 4.1949999999985055e-06, 4.1949999999985055e-06, 4.208000000002071e-06, 4.1949999999985055e-06, 4.1809999999989356e-06, 4.207999999998602e-06, 4.1809999999989356e-06, 4.1949999999985055e-06, 4.1809999999989356e-06, 4.2359999999977416e-06, 4.2359999999977416e-06, 4.1949999999985055e-06, 4.1949999999985055e-06, 4.1949999999985055e-06, 4.152999999999796e-06, 4.1949999999985055e-06, 4.1809999999989356e-06, 4.195000000001975e-06, 4.193999999999032e-06, 4.152999999999796e-06, 4.207999999998602e-06, 4.194000000002501e-06, 4.207999999998602e-06, 4.194000000002501e-06, 4.152999999999796e-06, 4.208999999998075e-06]</msg>
<status status="PASS" starttime="20201115 22:12:57.062" endtime="20201115 22:12:57.065"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:57.058" endtime="20201115 22:12:57.065"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:57.067" endtime="20201115 22:12:57.069"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:57.071" endtime="20201115 22:12:57.090"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:57.069" endtime="20201115 22:12:57.091"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:57.066" endtime="20201115 22:12:57.091"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:56.701" endtime="20201115 22:12:57.092"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:56.699" endtime="20201115 22:12:57.092"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:56.698" endtime="20201115 22:12:57.092"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:57.094" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:57.103" endtime="20201115 22:12:57.123"></status>
</kw>
<msg timestamp="20201115 22:12:57.124" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:57.101" endtime="20201115 22:12:57.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:57.126" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:57.125" endtime="20201115 22:12:57.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:57.127" endtime="20201115 22:12:57.129"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:57.099" endtime="20201115 22:12:57.129"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:57.097" endtime="20201115 22:12:57.130"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:57.136" endtime="20201115 22:12:57.423"></status>
</kw>
<msg timestamp="20201115 22:12:57.426" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022865403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022869806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:57.135" endtime="20201115 22:12:57.426"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:57.434" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022865403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022869806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:57.427" endtime="20201115 22:12:57.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:57.435" endtime="20201115 22:12:57.437"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:57.132" endtime="20201115 22:12:57.437"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:57.130" endtime="20201115 22:12:57.438"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:57.442" level="INFO">${RESULT} = [{'time': 0.022869806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.023072514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:12:57.438" endtime="20201115 22:12:57.442"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:57.455" level="INFO">${OVERHEAD} = {'time': [0.022869806, 0.023072514, 0.023272764, 0.023471847, 0.023673069, 0.023875792, 0.024075375, 0.024277875, 0.024481236, 0.024682389, 0.024884264, 0.025084986, 0.025286778, 0.025489083, 0.025689...</msg>
<status status="PASS" starttime="20201115 22:12:57.443" endtime="20201115 22:12:57.456"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:57.460" level="INFO">NAME: 00-overhead-15-remove</msg>
<status status="PASS" starttime="20201115 22:12:57.459" endtime="20201115 22:12:57.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:57.462" level="INFO">VALUE: [4.403000000000046e-06, 4.403000000000046e-06, 4.431000000002655e-06, 4.429999999999712e-06, 4.416000000000142e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.375000000000906e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.375000000000906e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.416000000000142e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.471999999998422e-06, 4.416000000000142e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.402000000000572e-06, 4.403000000000046e-06, 4.416000000000142e-06, 4.457999999998852e-06, 4.401999999997103e-06, 4.403000000000046e-06, 4.416000000000142e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.402000000000572e-06, 4.389000000000476e-06, 4.36200000000081e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.431000000002655e-06, 4.388999999993537e-06, 4.4170000000065546e-06, 4.401999999993633e-06, 4.415999999993203e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.416999999999616e-06, 4.361000000001336e-06]</msg>
<status status="PASS" starttime="20201115 22:12:57.461" endtime="20201115 22:12:57.463"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:57.456" endtime="20201115 22:12:57.463"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:57.465" endtime="20201115 22:12:57.467"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:57.469" endtime="20201115 22:12:57.488"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:57.467" endtime="20201115 22:12:57.489"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:57.464" endtime="20201115 22:12:57.489"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:57.095" endtime="20201115 22:12:57.489"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:57.093" endtime="20201115 22:12:57.490"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:57.092" endtime="20201115 22:12:57.490"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:57.492" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:57.501" endtime="20201115 22:12:57.522"></status>
</kw>
<msg timestamp="20201115 22:12:57.522" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:57.499" endtime="20201115 22:12:57.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:57.525" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:57.523" endtime="20201115 22:12:57.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:57.526" endtime="20201115 22:12:57.527"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:57.497" endtime="20201115 22:12:57.528"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:57.495" endtime="20201115 22:12:57.528"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:57.535" endtime="20201115 22:12:57.823"></status>
</kw>
<msg timestamp="20201115 22:12:57.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022947625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022952236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:57.533" endtime="20201115 22:12:57.826"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:57.833" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022947625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022952236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:57.827" endtime="20201115 22:12:57.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:57.835" endtime="20201115 22:12:57.837"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:57.531" endtime="20201115 22:12:57.837"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:57.529" endtime="20201115 22:12:57.838"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:57.842" level="INFO">${RESULT} = [{'time': 0.022952236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.611000000001586e-06, 'source_diff': 4.611000000001586e-06}, {'time': 0.023167208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:12:57.838" endtime="20201115 22:12:57.842"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:57.855" level="INFO">${OVERHEAD} = {'time': [0.022952236, 0.023167208, 0.023382792, 0.023598278, 0.023815403, 0.024031819, 0.024248958, 0.024467806, 0.024682806, 0.024901153, 0.025116556, 0.025332611, 0.025548458, 0.025763681, 0.025978...</msg>
<status status="PASS" starttime="20201115 22:12:57.843" endtime="20201115 22:12:57.855"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:57.859" level="INFO">NAME: 00-overhead-16-remove</msg>
<status status="PASS" starttime="20201115 22:12:57.858" endtime="20201115 22:12:57.860"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:57.862" level="INFO">VALUE: [4.611000000001586e-06, 4.652000000000822e-06, 4.610999999998117e-06, 4.625000000001156e-06, 4.610999999998117e-06, 4.582999999998977e-06, 4.625000000001156e-06, 4.625000000001156e-06, 4.625000000001156e-06, 4.610999999998117e-06, 4.625000000001156e-06, 4.597000000002016e-06, 4.610999999998117e-06, 4.639000000000726e-06, 4.695000000002475e-06, 4.6249999999976865e-06, 4.6249999999976865e-06, 4.6249999999976865e-06, 4.6249999999976865e-06, 4.637999999997783e-06, 4.625000000001156e-06, 4.7089999999985754e-06, 4.611000000001586e-06, 4.680999999999436e-06, 4.569000000002876e-06, 4.639000000000726e-06, 4.611000000001586e-06, 4.611000000001586e-06, 4.610999999998117e-06, 4.625000000001156e-06, 4.611000000001586e-06, 4.6249999999976865e-06, 4.611000000001586e-06, 4.611000000001586e-06, 4.610999999998117e-06, 4.597000000002016e-06, 4.597000000002016e-06, 4.610999999998117e-06, 4.637999999997783e-06, 4.583000000002446e-06, 4.625000000001156e-06, 4.625000000001156e-06, 4.624999999994217e-06, 4.611000000001586e-06, 4.625000000001156e-06, 4.57000000000235e-06, 4.625000000001156e-06, 4.625000000001156e-06, 4.58400000000192e-06, 4.625000000001156e-06]</msg>
<status status="PASS" starttime="20201115 22:12:57.860" endtime="20201115 22:12:57.862"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:57.856" endtime="20201115 22:12:57.863"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:57.865" endtime="20201115 22:12:57.866"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:57.868" endtime="20201115 22:12:57.888"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:57.867" endtime="20201115 22:12:57.888"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:57.863" endtime="20201115 22:12:57.889"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:57.493" endtime="20201115 22:12:57.889"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:57.491" endtime="20201115 22:12:57.889"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:57.490" endtime="20201115 22:12:57.889"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:57.892" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:57.900" endtime="20201115 22:12:57.922"></status>
</kw>
<msg timestamp="20201115 22:12:57.923" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:57.899" endtime="20201115 22:12:57.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:57.925" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:57.924" endtime="20201115 22:12:57.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:57.926" endtime="20201115 22:12:57.928"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:57.896" endtime="20201115 22:12:57.929"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:57.894" endtime="20201115 22:12:57.929"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:57.936" endtime="20201115 22:12:58.223"></status>
</kw>
<msg timestamp="20201115 22:12:58.226" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022496792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022501625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:57.934" endtime="20201115 22:12:58.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:58.234" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022496792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022501625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:58.227" endtime="20201115 22:12:58.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:58.236" endtime="20201115 22:12:58.237"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:57.931" endtime="20201115 22:12:58.238"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:57.930" endtime="20201115 22:12:58.238"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:58.242" level="INFO">${RESULT} = [{'time': 0.022501625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.832999999999227e-06, 'source_diff': 4.832999999999227e-06}, {'time': 0.022733556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:12:58.239" endtime="20201115 22:12:58.242"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:58.255" level="INFO">${OVERHEAD} = {'time': [0.022501625, 0.022733556, 0.022966514, 0.023197889, 0.023431319, 0.023664208, 0.023898431, 0.0241315, 0.024364097, 0.024597889, 0.024830986, 0.025066014, 0.025296875, 0.025531736, 0.02576347...</msg>
<status status="PASS" starttime="20201115 22:12:58.243" endtime="20201115 22:12:58.256"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:58.260" level="INFO">NAME: 00-overhead-17-remove</msg>
<status status="PASS" starttime="20201115 22:12:58.259" endtime="20201115 22:12:58.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:58.262" level="INFO">VALUE: [4.832999999999227e-06, 4.8339999999987004e-06, 4.846999999998797e-06, 4.846999999998797e-06, 4.818999999999657e-06, 4.832999999999227e-06, 4.83400000000217e-06, 4.832999999999227e-06, 4.833000000002696e-06, 4.833000000002696e-06, 4.818999999999657e-06, 4.8200000000026e-06, 4.832999999999227e-06, 4.832999999999227e-06, 4.832999999999227e-06, 4.832999999999227e-06, 4.832999999999227e-06, 4.83400000000217e-06, 4.833000000002696e-06, 4.846999999998797e-06, 4.833000000002696e-06, 4.818999999999657e-06, 4.8200000000026e-06, 4.818999999999657e-06, 4.8199999999991305e-06, 4.846999999998797e-06, 4.861000000001836e-06, 4.832999999999227e-06, 4.790999999997048e-06, 4.833000000002696e-06, 4.778000000000421e-06, 4.832999999999227e-06, 4.847000000002266e-06, 4.832999999999227e-06, 4.832999999999227e-06, 4.8199999999991305e-06, 4.833000000002696e-06, 4.818999999999657e-06, 4.833000000002696e-06, 4.8189999999961874e-06, 4.8200000000026e-06, 4.875000000001406e-06, 4.819000000003126e-06, 4.861000000001836e-06, 4.874999999994467e-06, 4.889000000000976e-06, 4.79200000000346e-06, 4.833999999995231e-06, 4.8049999999966175e-06, 4.847999999994801e-06]</msg>
<status status="PASS" starttime="20201115 22:12:58.261" endtime="20201115 22:12:58.263"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:58.256" endtime="20201115 22:12:58.263"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:58.265" endtime="20201115 22:12:58.267"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:58.269" endtime="20201115 22:12:58.288"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:58.267" endtime="20201115 22:12:58.289"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:58.264" endtime="20201115 22:12:58.289"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:57.892" endtime="20201115 22:12:58.290"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:57.890" endtime="20201115 22:12:58.290"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:57.890" endtime="20201115 22:12:58.290"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:58.292" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:58.301" endtime="20201115 22:12:58.325"></status>
</kw>
<msg timestamp="20201115 22:12:58.325" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:58.299" endtime="20201115 22:12:58.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:58.328" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:58.326" endtime="20201115 22:12:58.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:58.329" endtime="20201115 22:12:58.331"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:58.297" endtime="20201115 22:12:58.331"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:58.295" endtime="20201115 22:12:58.332"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:58.338" endtime="20201115 22:12:58.624"></status>
</kw>
<msg timestamp="20201115 22:12:58.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022541764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022546806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:58.336" endtime="20201115 22:12:58.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:58.635" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022541764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022546806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:58.629" endtime="20201115 22:12:58.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:58.637" endtime="20201115 22:12:58.638"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:58.334" endtime="20201115 22:12:58.639"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:58.332" endtime="20201115 22:12:58.639"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:58.643" level="INFO">${RESULT} = [{'time': 0.022546806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.042000000000241e-06, 'source_diff': 5.042000000000241e-06}, {'time': 0.022795444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:12:58.640" endtime="20201115 22:12:58.644"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:58.657" level="INFO">${OVERHEAD} = {'time': [0.022546806, 0.022795444, 0.023047708, 0.023296139, 0.023545806, 0.023797319, 0.024046069, 0.024296708, 0.024546333, 0.024798597, 0.025047194, 0.025299569, 0.025550653, 0.025801958, 0.026054...</msg>
<status status="PASS" starttime="20201115 22:12:58.644" endtime="20201115 22:12:58.657"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:58.661" level="INFO">NAME: 00-overhead-18-remove</msg>
<status status="PASS" starttime="20201115 22:12:58.660" endtime="20201115 22:12:58.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:58.663" level="INFO">VALUE: [5.042000000000241e-06, 5.097000000002516e-06, 5.041000000000767e-06, 5.055999999999811e-06, 5.055999999999811e-06, 5.041000000000767e-06, 5.055000000000337e-06, 5.041000000000767e-06, 5.068999999999907e-06, 5.040999999997298e-06, 5.026999999997728e-06, 5.055000000000337e-06, 5.042000000000241e-06, 5.041000000000767e-06, 5.040999999997298e-06, 5.055999999999811e-06, 5.042000000000241e-06, 5.068999999999907e-06, 5.028000000000671e-06, 5.0699999999993806e-06, 5.028000000000671e-06, 5.055999999999811e-06, 5.055000000000337e-06, 5.055999999999811e-06, 5.014000000001101e-06, 5.041000000000767e-06, 5.042000000000241e-06, 5.082999999999477e-06, 5.042000000000241e-06, 5.042000000000241e-06, 5.027000000001197e-06, 5.082999999999477e-06, 5.055000000000337e-06, 5.055999999999811e-06, 5.028000000000671e-06, 5.0550000000038064e-06, 5.055999999996341e-06, 5.04200000000371e-06, 5.0139999999976315e-06, 5.041999999996771e-06, 5.041999999996771e-06, 5.01400000000457e-06, 5.041999999996771e-06, 4.9860000000054305e-06, 5.05600000000328e-06, 5.0550000000038064e-06, 5.0550000000038064e-06, 5.0410000000042365e-06, 5.0689999999964375e-06, 5.027000000004667e-06]</msg>
<status status="PASS" starttime="20201115 22:12:58.662" endtime="20201115 22:12:58.664"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:58.657" endtime="20201115 22:12:58.664"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:58.667" endtime="20201115 22:12:58.668"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:58.670" endtime="20201115 22:12:58.689"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:58.668" endtime="20201115 22:12:58.690"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:58.665" endtime="20201115 22:12:58.690"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:58.293" endtime="20201115 22:12:58.691"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:58.291" endtime="20201115 22:12:58.691"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:58.290" endtime="20201115 22:12:58.691"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:58.693" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:58.703" endtime="20201115 22:12:58.725"></status>
</kw>
<msg timestamp="20201115 22:12:58.726" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:58.701" endtime="20201115 22:12:58.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:58.728" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:58.727" endtime="20201115 22:12:58.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:58.729" endtime="20201115 22:12:58.731"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:58.698" endtime="20201115 22:12:58.731"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:58.696" endtime="20201115 22:12:58.732"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:58.738" endtime="20201115 22:12:59.024"></status>
</kw>
<msg timestamp="20201115 22:12:59.027" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023139931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023145181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:58.737" endtime="20201115 22:12:59.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:59.035" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023139931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023145181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:59.028" endtime="20201115 22:12:59.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:59.036" endtime="20201115 22:12:59.038"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:58.734" endtime="20201115 22:12:59.038"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:58.732" endtime="20201115 22:12:59.039"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:59.043" level="INFO">${RESULT} = [{'time': 0.023145181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.250000000001781e-06, 'source_diff': 5.250000000001781e-06}, {'time': 0.02341225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:12:59.039" endtime="20201115 22:12:59.043"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:59.056" level="INFO">${OVERHEAD} = {'time': [0.023145181, 0.02341225, 0.023680181, 0.023947889, 0.024215667, 0.024481931, 0.024751431, 0.025019, 0.025285708, 0.025554347, 0.025822417, 0.026089056, 0.026355181, 0.026624833, 0.026894819,...</msg>
<status status="PASS" starttime="20201115 22:12:59.044" endtime="20201115 22:12:59.056"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:59.060" level="INFO">NAME: 00-overhead-19-remove</msg>
<status status="PASS" starttime="20201115 22:12:59.059" endtime="20201115 22:12:59.061"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:59.063" level="INFO">VALUE: [5.250000000001781e-06, 5.277999999997451e-06, 5.264000000001351e-06, 5.278000000000921e-06, 5.278000000000921e-06, 5.2639999999978815e-06, 5.264000000001351e-06, 5.2639999999978815e-06, 5.221999999999172e-06, 5.264000000001351e-06, 5.278000000000921e-06, 5.278000000000921e-06, 5.2499999999983116e-06, 5.264000000001351e-06, 5.263000000001877e-06, 5.277000000001447e-06, 5.278000000000921e-06, 5.319000000000157e-06, 5.2499999999983116e-06, 5.2499999999983116e-06, 5.2639999999978815e-06, 5.250000000001781e-06, 5.264000000001351e-06, 5.2639999999978815e-06, 5.262999999998408e-06, 5.278000000000921e-06, 5.264000000001351e-06, 5.207999999999602e-06, 5.277000000001447e-06, 5.278000000000921e-06, 5.2639999999978815e-06, 5.2499999999983116e-06, 5.277999999997451e-06, 5.2500000000052505e-06, 5.2639999999978815e-06, 5.277000000004917e-06, 5.2499999999983116e-06, 5.222000000006111e-06, 5.277999999997451e-06, 5.304999999997118e-06, 5.2639999999978815e-06, 5.263000000005347e-06, 5.26400000000482e-06, 5.263000000005347e-06, 5.2639999999978815e-06, 5.194000000000032e-06, 5.2639999999978815e-06, 5.2499999999983116e-06, 5.2499999999983116e-06, 5.2499999999983116e-06]</msg>
<status status="PASS" starttime="20201115 22:12:59.061" endtime="20201115 22:12:59.063"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:59.057" endtime="20201115 22:12:59.064"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:59.066" endtime="20201115 22:12:59.067"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:59.070" endtime="20201115 22:12:59.089"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:59.068" endtime="20201115 22:12:59.090"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:59.064" endtime="20201115 22:12:59.090"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:58.694" endtime="20201115 22:12:59.091"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:58.692" endtime="20201115 22:12:59.091"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:58.691" endtime="20201115 22:12:59.091"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:59.093" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:59.102" endtime="20201115 22:12:59.127"></status>
</kw>
<msg timestamp="20201115 22:12:59.128" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:59.100" endtime="20201115 22:12:59.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:59.130" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:59.129" endtime="20201115 22:12:59.131"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:59.131" endtime="20201115 22:12:59.133"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:59.098" endtime="20201115 22:12:59.133"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:59.096" endtime="20201115 22:12:59.134"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:59.140" endtime="20201115 22:12:59.428"></status>
</kw>
<msg timestamp="20201115 22:12:59.431" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02313825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023143736, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:12:59.139" endtime="20201115 22:12:59.431"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:59.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02313825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023143736, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:12:59.432" endtime="20201115 22:12:59.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:59.440" endtime="20201115 22:12:59.441"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:59.136" endtime="20201115 22:12:59.442"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:59.134" endtime="20201115 22:12:59.442"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:59.446" level="INFO">${RESULT} = [{'time': 0.023143736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.486000000002461e-06, 'source_diff': 5.486000000002461e-06}, {'time': 0.023430319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:12:59.443" endtime="20201115 22:12:59.446"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:59.459" level="INFO">${OVERHEAD} = {'time': [0.023143736, 0.023430319, 0.023714681, 0.024000125, 0.0242855, 0.024573528, 0.024858194, 0.025146847, 0.025431875, 0.025719042, 0.026007125, 0.026292306, 0.026576931, 0.026863403, 0.02715020...</msg>
<status status="PASS" starttime="20201115 22:12:59.447" endtime="20201115 22:12:59.460"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:59.464" level="INFO">NAME: 00-overhead-20-remove</msg>
<status status="PASS" starttime="20201115 22:12:59.463" endtime="20201115 22:12:59.464"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:59.466" level="INFO">VALUE: [5.486000000002461e-06, 5.472000000002891e-06, 5.556000000000311e-06, 5.457999999999852e-06, 5.472000000002891e-06, 5.4589999999993255e-06, 5.485999999998992e-06, 5.457999999999852e-06, 5.471999999999422e-06, 5.486000000002461e-06, 5.471999999999422e-06, 5.487000000001935e-06, 5.514000000001601e-06, 5.471999999999422e-06, 5.444000000000282e-06, 5.542000000000741e-06, 5.499999999998562e-06, 5.4589999999993255e-06, 5.471999999999422e-06, 5.486000000002461e-06, 5.485999999998992e-06, 5.473000000002365e-06, 5.444000000000282e-06, 5.444000000000282e-06, 5.430000000000712e-06, 5.471999999999422e-06, 5.499999999998562e-06, 5.444999999999756e-06, 5.472000000002891e-06, 5.499999999998562e-06, 5.471999999999422e-06, 5.471999999999422e-06, 5.485999999998992e-06, 5.485999999998992e-06, 5.471999999999422e-06, 5.471999999999422e-06, 5.471999999999422e-06, 5.471999999999422e-06, 5.471999999999422e-06, 5.485999999998992e-06, 5.471999999999422e-06, 5.471999999999422e-06, 5.4589999999993255e-06, 5.486000000005931e-06, 5.471999999999422e-06, 5.471999999999422e-06, 5.486000000005931e-06, 5.471999999999422e-06, 5.485999999998992e-06, 5.499999999998562e-06]</msg>
<status status="PASS" starttime="20201115 22:12:59.465" endtime="20201115 22:12:59.467"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:59.460" endtime="20201115 22:12:59.468"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:59.470" endtime="20201115 22:12:59.471"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:59.473" endtime="20201115 22:12:59.493"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:59.472" endtime="20201115 22:12:59.493"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:59.468" endtime="20201115 22:12:59.494"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:59.094" endtime="20201115 22:12:59.494"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:59.092" endtime="20201115 22:12:59.494"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:59.091" endtime="20201115 22:12:59.494"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:59.497" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:59.505" endtime="20201115 22:12:59.532"></status>
</kw>
<msg timestamp="20201115 22:12:59.533" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:59.504" endtime="20201115 22:12:59.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:59.535" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:59.534" endtime="20201115 22:12:59.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:59.536" endtime="20201115 22:12:59.538"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:59.501" endtime="20201115 22:12:59.538"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:59.499" endtime="20201115 22:12:59.539"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:59.545" endtime="20201115 22:12:59.831"></status>
</kw>
<msg timestamp="20201115 22:12:59.834" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022693125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022698889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:59.544" endtime="20201115 22:12:59.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:59.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022693125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022698889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:59.835" endtime="20201115 22:12:59.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:59.843" endtime="20201115 22:12:59.844"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:59.541" endtime="20201115 22:12:59.845"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:59.539" endtime="20201115 22:12:59.845"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:12:59.849" level="INFO">${RESULT} = [{'time': 0.022698889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7639999999983815e-06, 'source_diff': 5.7639999999983815e-06}, {'time': 0.023006125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:12:59.846" endtime="20201115 22:12:59.850"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:12:59.862" level="INFO">${OVERHEAD} = {'time': [0.022698889, 0.023006125, 0.023313431, 0.023619444, 0.023924417, 0.024231792, 0.024538694, 0.024842972, 0.025148639, 0.025453458, 0.025760403, 0.026067875, 0.026375097, 0.02667925, 0.0269854...</msg>
<status status="PASS" starttime="20201115 22:12:59.850" endtime="20201115 22:12:59.863"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:12:59.867" level="INFO">NAME: 00-overhead-21-remove</msg>
<status status="PASS" starttime="20201115 22:12:59.866" endtime="20201115 22:12:59.867"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:12:59.870" level="INFO">VALUE: [5.7639999999983815e-06, 5.694000000000532e-06, 5.681000000000436e-06, 5.666000000001392e-06, 5.7089999999995755e-06, 5.749999999998812e-06, 5.708000000000102e-06, 5.680000000000962e-06, 5.681000000000436e-06, 5.694000000000532e-06, 5.695000000000006e-06, 5.721999999999672e-06, 5.694000000000532e-06, 5.694000000000532e-06, 5.694000000000532e-06, 5.695000000000006e-06, 5.708000000000102e-06, 5.653000000001296e-06, 5.625000000002156e-06, 5.694000000000532e-06, 5.666999999997396e-06, 5.695000000000006e-06, 5.695000000000006e-06, 5.695000000000006e-06, 5.695000000000006e-06, 5.666999999997396e-06, 5.624999999998687e-06, 5.694000000000532e-06, 5.666000000001392e-06, 5.749999999998812e-06, 5.680000000000962e-06, 5.681000000000436e-06, 5.7089999999995755e-06, 5.666999999993927e-06, 5.667000000000866e-06, 5.694000000000532e-06, 5.694000000000532e-06, 5.693999999993593e-06, 5.695000000000006e-06, 5.7500000000057505e-06, 5.695000000000006e-06, 5.680000000000962e-06, 5.695000000000006e-06, 5.667000000000866e-06, 5.681000000000436e-06, 5.639000000001726e-06, 5.695000000000006e-06, 5.694000000000532e-06, 5.667000000000866e-06, 5.681000000000436e-06]</msg>
<status status="PASS" starttime="20201115 22:12:59.868" endtime="20201115 22:12:59.870"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:59.863" endtime="20201115 22:12:59.871"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:59.873" endtime="20201115 22:12:59.874"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:12:59.876" endtime="20201115 22:12:59.896"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:59.875" endtime="20201115 22:12:59.896"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:59.871" endtime="20201115 22:12:59.897"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:59.497" endtime="20201115 22:12:59.897"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:59.496" endtime="20201115 22:12:59.897"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:59.495" endtime="20201115 22:12:59.898"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:12:59.900" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:59.908" endtime="20201115 22:12:59.934"></status>
</kw>
<msg timestamp="20201115 22:12:59.934" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:59.907" endtime="20201115 22:12:59.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:12:59.937" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:12:59.935" endtime="20201115 22:12:59.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:59.938" endtime="20201115 22:12:59.939"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:59.904" endtime="20201115 22:12:59.940"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:59.902" endtime="20201115 22:12:59.940"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:12:59.947" endtime="20201115 22:13:00.233"></status>
</kw>
<msg timestamp="20201115 22:13:00.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022684556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022690458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:12:59.945" endtime="20201115 22:13:00.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:13:00.244" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022684556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022690458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:13:00.237" endtime="20201115 22:13:00.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:13:00.245" endtime="20201115 22:13:00.247"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:59.943" endtime="20201115 22:13:00.247"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:59.941" endtime="20201115 22:13:00.248"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:13:00.252" level="INFO">${RESULT} = [{'time': 0.022690458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.901999999998603e-06, 'source_diff': 5.901999999998603e-06}, {'time': 0.023017097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:13:00.248" endtime="20201115 22:13:00.252"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:13:00.265" level="INFO">${OVERHEAD} = {'time': [0.022690458, 0.023017097, 0.023341125, 0.023667028, 0.023993819, 0.024319889, 0.024646347, 0.024972264, 0.025296972, 0.025623347, 0.025947486, 0.026272347, 0.026600486, 0.026926486, 0.027251...</msg>
<status status="PASS" starttime="20201115 22:13:00.253" endtime="20201115 22:13:00.266"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:13:00.270" level="INFO">NAME: 00-overhead-22-remove</msg>
<status status="PASS" starttime="20201115 22:13:00.269" endtime="20201115 22:13:00.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:13:00.272" level="INFO">VALUE: [5.901999999998603e-06, 5.889000000001976e-06, 5.931000000000686e-06, 5.9029999999980765e-06, 5.887999999999033e-06, 5.860999999999367e-06, 5.915999999998173e-06, 5.917000000001116e-06, 5.903000000001546e-06, 5.930000000001212e-06, 5.9029999999980765e-06, 5.916000000001642e-06, 5.917000000001116e-06, 5.9029999999980765e-06, 5.889000000001976e-06, 5.903000000001546e-06, 5.917000000001116e-06, 5.903000000001546e-06, 5.875000000002406e-06, 5.901999999998603e-06, 5.903000000001546e-06, 5.903000000001546e-06, 5.916999999997646e-06, 5.903000000001546e-06, 5.916000000001642e-06, 5.9029999999980765e-06, 5.917000000001116e-06, 5.915999999994703e-06, 5.903000000001546e-06, 5.903000000001546e-06, 5.917000000001116e-06, 5.903000000001546e-06, 5.917000000001116e-06, 5.917000000001116e-06, 5.917000000001116e-06, 5.902000000002072e-06, 5.917000000001116e-06, 5.903000000001546e-06, 5.902999999994607e-06, 5.930000000001212e-06, 5.916000000001642e-06, 5.889000000001976e-06, 5.917000000001116e-06, 5.916999999994177e-06, 5.9729999999993955e-06, 5.903000000001546e-06, 5.902000000002072e-06, 5.903000000001546e-06, 5.945000000000256e-06, 5.888999999995037e-06]</msg>
<status status="PASS" starttime="20201115 22:13:00.271" endtime="20201115 22:13:00.272"></status>
</kw>
<status status="PASS" starttime="20201115 22:13:00.266" endtime="20201115 22:13:00.273"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:13:00.275" endtime="20201115 22:13:00.277"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:13:00.279" endtime="20201115 22:13:00.298"></status>
</kw>
<status status="PASS" starttime="20201115 22:13:00.277" endtime="20201115 22:13:00.299"></status>
</kw>
<status status="PASS" starttime="20201115 22:13:00.274" endtime="20201115 22:13:00.299"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:59.900" endtime="20201115 22:13:00.299"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:59.899" endtime="20201115 22:13:00.300"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:59.898" endtime="20201115 22:13:00.300"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:13:00.302" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:13:00.311" endtime="20201115 22:13:00.340"></status>
</kw>
<msg timestamp="20201115 22:13:00.340" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:13:00.309" endtime="20201115 22:13:00.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:13:00.342" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:13:00.341" endtime="20201115 22:13:00.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:13:00.343" endtime="20201115 22:13:00.345"></status>
</kw>
<status status="PASS" starttime="20201115 22:13:00.307" endtime="20201115 22:13:00.346"></status>
</kw>
<status status="PASS" starttime="20201115 22:13:00.304" endtime="20201115 22:13:00.346"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:13:00.352" endtime="20201115 22:13:00.640"></status>
</kw>
<msg timestamp="20201115 22:13:00.643" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023219097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023225278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:13:00.351" endtime="20201115 22:13:00.643"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:13:00.651" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023219097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023225278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:13:00.644" endtime="20201115 22:13:00.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:13:00.653" endtime="20201115 22:13:00.654"></status>
</kw>
<status status="PASS" starttime="20201115 22:13:00.348" endtime="20201115 22:13:00.655"></status>
</kw>
<status status="PASS" starttime="20201115 22:13:00.347" endtime="20201115 22:13:00.656"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:13:00.660" level="INFO">${RESULT} = [{'time': 0.023225278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.180999999997466e-06, 'source_diff': 6.180999999997466e-06}, {'time': 0.023573958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:13:00.656" endtime="20201115 22:13:00.660"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:13:00.673" level="INFO">${OVERHEAD} = {'time': [0.023225278, 0.023573958, 0.023921153, 0.024266389, 0.024613111, 0.024959736, 0.025305958, 0.025651278, 0.025999375, 0.026344472, 0.026690069, 0.027038972, 0.027386625, 0.027735153, 0.028082...</msg>
<status status="PASS" starttime="20201115 22:13:00.661" endtime="20201115 22:13:00.673"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:13:00.677" level="INFO">NAME: 00-overhead-23-remove</msg>
<status status="PASS" starttime="20201115 22:13:00.676" endtime="20201115 22:13:00.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:13:00.680" level="INFO">VALUE: [6.180999999997466e-06, 6.083000000000477e-06, 6.139000000002226e-06, 6.056000000000811e-06, 6.110999999999617e-06, 6.124999999999187e-06, 6.110999999999617e-06, 6.110999999999617e-06, 6.125000000002656e-06, 6.124999999999187e-06, 6.124999999999187e-06, 6.139000000002226e-06, 6.125000000002656e-06, 6.124999999999187e-06, 6.125000000002656e-06, 6.124999999999187e-06, 6.124999999999187e-06, 6.111000000003086e-06, 6.124999999999187e-06, 6.125000000002656e-06, 6.139000000002226e-06, 6.110999999999617e-06, 6.042000000001241e-06, 6.097000000000047e-06, 6.0689999999974376e-06, 6.125000000002656e-06, 6.181000000000936e-06, 6.125000000002656e-06, 6.083000000003946e-06, 6.138999999995287e-06, 6.1379999999958135e-06, 6.181000000000936e-06, 6.125000000002656e-06, 6.125000000002656e-06, 6.125000000002656e-06, 6.181000000000936e-06, 6.111000000003086e-06, 6.167000000001366e-06, 6.125000000002656e-06, 6.124999999995717e-06, 6.110999999996147e-06, 6.181000000000936e-06, 6.09800000000299e-06, 6.124999999995717e-06, 6.139000000002226e-06, 6.125000000002656e-06, 6.181000000000936e-06, 6.125000000002656e-06, 6.110999999996147e-06, 6.097000000003516e-06]</msg>
<status status="PASS" starttime="20201115 22:13:00.679" endtime="20201115 22:13:00.680"></status>
</kw>
<status status="PASS" starttime="20201115 22:13:00.674" endtime="20201115 22:13:00.681"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:13:00.683" endtime="20201115 22:13:00.684"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:13:00.686" endtime="20201115 22:13:00.706"></status>
</kw>
<status status="PASS" starttime="20201115 22:13:00.685" endtime="20201115 22:13:00.706"></status>
</kw>
<status status="PASS" starttime="20201115 22:13:00.681" endtime="20201115 22:13:00.707"></status>
</kw>
<status status="PASS" starttime="20201115 22:13:00.303" endtime="20201115 22:13:00.707"></status>
</kw>
<status status="PASS" starttime="20201115 22:13:00.301" endtime="20201115 22:13:00.707"></status>
</kw>
<status status="PASS" starttime="20201115 22:13:00.300" endtime="20201115 22:13:00.707"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:13:00.710" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:13:00.718" endtime="20201115 22:13:00.746"></status>
</kw>
<msg timestamp="20201115 22:13:00.746" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:13:00.717" endtime="20201115 22:13:00.746"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:13:00.748" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:13:00.747" endtime="20201115 22:13:00.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:13:00.749" endtime="20201115 22:13:00.751"></status>
</kw>
<status status="PASS" starttime="20201115 22:13:00.714" endtime="20201115 22:13:00.752"></status>
</kw>
<status status="PASS" starttime="20201115 22:13:00.712" endtime="20201115 22:13:00.752"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:13:00.759" endtime="20201115 22:13:01.047"></status>
</kw>
<msg timestamp="20201115 22:13:01.050" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022594931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022601264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:13:00.757" endtime="20201115 22:13:01.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:13:01.058" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022594931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022601264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:13:01.051" endtime="20201115 22:13:01.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:13:01.059" endtime="20201115 22:13:01.061"></status>
</kw>
<status status="PASS" starttime="20201115 22:13:00.754" endtime="20201115 22:13:01.061"></status>
</kw>
<status status="PASS" starttime="20201115 22:13:00.753" endtime="20201115 22:13:01.062"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:13:01.066" level="INFO">${RESULT} = [{'time': 0.022601264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.333000000000727e-06, 'source_diff': 6.333000000000727e-06}, {'time': 0.022971792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:13:01.063" endtime="20201115 22:13:01.066"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:13:01.079" level="INFO">${OVERHEAD} = {'time': [0.022601264, 0.022971792, 0.02334075, 0.023709931, 0.024080097, 0.024447986, 0.024818444, 0.025186139, 0.025556083, 0.025924833, 0.026293569, 0.0266605, 0.027028417, 0.027395375, 0.027765986...</msg>
<status status="PASS" starttime="20201115 22:13:01.067" endtime="20201115 22:13:01.079"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:13:01.083" level="INFO">NAME: 00-overhead-24-remove</msg>
<status status="PASS" starttime="20201115 22:13:01.082" endtime="20201115 22:13:01.084"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:13:01.086" level="INFO">VALUE: [6.333000000000727e-06, 6.334000000000201e-06, 6.333000000000727e-06, 6.334000000000201e-06, 6.333000000000727e-06, 6.264000000002351e-06, 6.3329999999972575e-06, 6.347000000000297e-06, 6.333000000000727e-06, 6.333000000000727e-06, 6.333000000000727e-06, 6.347000000000297e-06, 6.320000000000631e-06, 6.333000000000727e-06, 6.347000000000297e-06, 6.319000000001157e-06, 6.334000000000201e-06, 6.347000000000297e-06, 6.334000000000201e-06, 6.333000000000727e-06, 6.401999999999103e-06, 6.3479999999997705e-06, 6.347000000000297e-06, 6.319000000001157e-06, 6.347000000003766e-06, 6.3329999999972575e-06, 6.333000000004196e-06, 6.374999999995967e-06, 6.34800000000324e-06, 6.333999999996731e-06, 6.374999999995967e-06, 6.374999999995967e-06, 6.333999999996731e-06, 6.304999999998118e-06, 6.375000000002906e-06, 6.333999999996731e-06, 6.333000000004196e-06, 6.347000000003766e-06, 6.347000000003766e-06, 6.3190000000046265e-06, 6.347000000003766e-06, 6.3329999999972575e-06, 6.3190000000046265e-06, 6.3329999999972575e-06, 6.3329999999972575e-06, 6.333000000004196e-06, 6.30600000000453e-06, 6.3329999999972575e-06, 6.3329999999972575e-06, 6.347000000003766e-06]</msg>
<status status="PASS" starttime="20201115 22:13:01.085" endtime="20201115 22:13:01.086"></status>
</kw>
<status status="PASS" starttime="20201115 22:13:01.080" endtime="20201115 22:13:01.087"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:13:01.089" endtime="20201115 22:13:01.090"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:13:01.092" endtime="20201115 22:13:01.112"></status>
</kw>
<status status="PASS" starttime="20201115 22:13:01.091" endtime="20201115 22:13:01.112"></status>
</kw>
<status status="PASS" starttime="20201115 22:13:01.087" endtime="20201115 22:13:01.113"></status>
</kw>
<status status="PASS" starttime="20201115 22:13:00.710" endtime="20201115 22:13:01.113"></status>
</kw>
<status status="PASS" starttime="20201115 22:13:00.709" endtime="20201115 22:13:01.113"></status>
</kw>
<status status="PASS" starttime="20201115 22:13:00.708" endtime="20201115 22:13:01.114"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:13:01.116" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:13:01.124" endtime="20201115 22:13:01.155"></status>
</kw>
<msg timestamp="20201115 22:13:01.156" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:13:01.123" endtime="20201115 22:13:01.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:13:01.158" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:13:01.157" endtime="20201115 22:13:01.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:13:01.160" endtime="20201115 22:13:01.161"></status>
</kw>
<status status="PASS" starttime="20201115 22:13:01.120" endtime="20201115 22:13:01.162"></status>
</kw>
<status status="PASS" starttime="20201115 22:13:01.118" endtime="20201115 22:13:01.162"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:13:01.169" endtime="20201115 22:13:01.456"></status>
</kw>
<msg timestamp="20201115 22:13:01.459" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02270375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022710306, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:13:01.167" endtime="20201115 22:13:01.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:13:01.467" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02270375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022710306, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:13:01.460" endtime="20201115 22:13:01.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:13:01.468" endtime="20201115 22:13:01.470"></status>
</kw>
<status status="PASS" starttime="20201115 22:13:01.164" endtime="20201115 22:13:01.470"></status>
</kw>
<status status="PASS" starttime="20201115 22:13:01.163" endtime="20201115 22:13:01.471"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:13:01.475" level="INFO">${RESULT} = [{'time': 0.022710306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.555999999997841e-06, 'source_diff': 6.555999999997841e-06}, {'time': 0.023103389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:13:01.472" endtime="20201115 22:13:01.475"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:13:01.488" level="INFO">${OVERHEAD} = {'time': [0.022710306, 0.023103389, 0.023494167, 0.023886972, 0.024276139, 0.024668111, 0.025058722, 0.025448722, 0.025841389, 0.026234597, 0.026625597, 0.027017319, 0.027407042, 0.027800278, 0.028190...</msg>
<status status="PASS" starttime="20201115 22:13:01.476" endtime="20201115 22:13:01.488"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:13:01.493" level="INFO">NAME: 00-overhead-25-remove</msg>
<status status="PASS" starttime="20201115 22:13:01.492" endtime="20201115 22:13:01.493"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:13:01.495" level="INFO">VALUE: [6.555999999997841e-06, 6.499999999999562e-06, 6.513999999999132e-06, 6.554999999998368e-06, 6.555999999997841e-06, 6.583000000000977e-06, 6.540999999998798e-06, 6.540999999998798e-06, 6.570000000000881e-06, 6.540999999998798e-06, 6.541000000002267e-06, 6.527000000002697e-06, 6.541999999998271e-06, 6.556000000001311e-06, 6.556000000001311e-06, 6.500000000003031e-06, 6.584000000000451e-06, 6.570000000000881e-06, 6.513999999999132e-06, 6.556000000001311e-06, 6.526999999999228e-06, 6.569999999997411e-06, 6.55600000000478e-06, 6.5690000000048765e-06, 6.568999999997938e-06, 6.513999999999132e-06, 6.555999999997841e-06, 6.540999999998798e-06, 6.526999999999228e-06, 6.555999999997841e-06, 6.541999999998271e-06, 6.541999999998271e-06, 6.54200000000521e-06, 6.554999999998368e-06, 6.554999999998368e-06, 6.554999999998368e-06, 6.5279999999987015e-06, 6.541999999998271e-06, 6.472000000000422e-06, 6.513999999999132e-06, 6.5279999999987015e-06, 6.540999999998798e-06, 6.541999999998271e-06, 6.5690000000048765e-06, 6.52800000000564e-06, 6.55600000000478e-06, 6.485999999999992e-06, 6.5829999999975075e-06, 6.499999999999562e-06, 6.541999999998271e-06]</msg>
<status status="PASS" starttime="20201115 22:13:01.494" endtime="20201115 22:13:01.496"></status>
</kw>
<status status="PASS" starttime="20201115 22:13:01.489" endtime="20201115 22:13:01.496"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:13:01.498" endtime="20201115 22:13:01.500"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:13:01.502" endtime="20201115 22:13:01.521"></status>
</kw>
<status status="PASS" starttime="20201115 22:13:01.500" endtime="20201115 22:13:01.522"></status>
</kw>
<status status="PASS" starttime="20201115 22:13:01.497" endtime="20201115 22:13:01.522"></status>
</kw>
<status status="PASS" starttime="20201115 22:13:01.116" endtime="20201115 22:13:01.522"></status>
</kw>
<status status="PASS" starttime="20201115 22:13:01.115" endtime="20201115 22:13:01.523"></status>
</kw>
<status status="PASS" starttime="20201115 22:13:01.114" endtime="20201115 22:13:01.523"></status>
</kw>
<status status="PASS" starttime="20201115 22:12:51.564" endtime="20201115 22:13:01.523"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="teardown">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:13:01.527" endtime="20201115 22:13:01.547"></status>
</kw>
<status status="PASS" starttime="20201115 22:13:01.526" endtime="20201115 22:13:01.548"></status>
</kw>
<status status="PASS" starttime="20201115 22:13:01.524" endtime="20201115 22:13:01.548"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:12:48.462" endtime="20201115 22:13:01.549" critical="yes"></status>
</test>
<status status="PASS" starttime="20201115 22:12:23.892" endtime="20201115 22:13:01.554"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">arduino-due</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="PASS" starttime="20201115 22:12:12.641" endtime="20201115 22:13:01.577"></status>
</suite>
<statistics>
<total>
<stat pass="5" fail="0">Critical Tests</stat>
<stat pass="5" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="5" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="5" fail="0">BOARD_arduino-due</stat>
<stat pass="5" fail="0">dev</stat>
</tag>
<suite>
<stat pass="5" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="4" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
